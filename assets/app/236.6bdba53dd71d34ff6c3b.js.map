{"version":3,"file":"236.6bdba53dd71d34ff6c3b.js","mappings":";qGAOA,MAAMA,EAAc,EAAQ,MACtBC,EAAiB,EAAQ,OAE/BC,EAAOC,QAAU,cAAyD,EAKvEC,YAAYC,EAAKC,GAGdC,MAAMF,EAFNC,EAASA,GAAU,8CAGnB,IAAIE,EAAIC,KAAKC,QAGTC,EAAM,CACPC,UAAWH,KAAKI,OAAO,GAAGP,iBAC1BQ,MAAOL,KAAKI,OAAO,GAAGP,uBACtBS,gBAAiBN,KAAKI,OAAO,GAAGP,iCAEhCU,WAAYP,KAAKI,OAAO,GAAGP,4BAC3BW,aAAcR,KAAKI,OAAO,GAAGP,+BAIhCG,KAAKS,GAAK,CACPC,KAAM,SACNC,SAAU,SACVC,GAAIV,EAAIC,UACRU,QAAQ,EACRC,OAAO,EACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,iBACTmB,IAAK,cACLG,MAAO,UAEV,CACGX,KAAM,SACNU,MAAOrB,EAAE,SACTuB,WAAW,EACXD,MAAO,SACPE,MAAO,WACJC,EAAOhB,cACV,KASTiB,KAAM,CACHf,KAAM,aACNgB,OAAQ,IACRR,IAAK,sBACLS,YAAY,EACZF,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGnB,KAAM,aACNE,GAAIV,EAAIG,MACRe,MAAOrB,EAAE,cACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCC,QAAS,CAEN,CAAEvB,GAAI,YAAaF,KAAM,cAE5B0B,GAAI,CACDC,SAAU,SAAUzB,EAAI0B,EAAIC,GACzBf,EAAOa,SAASzB,EACnB,IAGN,CACGG,OAAQ,GACRa,KAAM,QAET,CACGlB,KAAM,YACNE,GAAIV,EAAII,gBACRkC,QAAS,EAETC,MAAO,CACJ,CACG7B,GAAI,SACJF,KAAM,QACNU,MAAOrB,EAAE,2BAIlB,CAAEgB,OAAQ,IACV,CACGI,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNiC,MAAO5C,EAAE,UACTmB,IAAK,mBACLI,WAAW,EACXC,MAAO,WACJC,EAAOhB,cACV,GAEH,CACGE,KAAM,SACNQ,IAAK,gBACLN,GAAIV,EAAIK,WACRa,MAAOrB,EAAE,cACTuB,WAAW,EACXM,KAAM,OACNL,MAAO,WACJC,EAAOjB,YACV,QAOlB6B,GAAI,CAIDQ,OAAQ,WACLpB,EAAOqB,YACV,IAIN,IAAIC,EAAc,CAAC,EACfC,EAAiB,CAAC,EAClBC,EAAoB,CAAC,EACrBC,EAAiB,KAEjBC,EAAiB,KAEjBC,EAAyB,KAEzBC,EAAW,GAEXC,EAAa,KAGjBrD,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAIxDE,MAAMhD,GAAGT,KAAKS,IACdgD,MAAMC,OAAOC,GAAGzD,EAAIC,WAAYsD,MAAMG,aAEtC,IAAIC,EAASrE,EAAesE,YAKxBC,EAAgB,CACjBrD,KAAM,YACNE,GAAIV,EAAII,gBACR0D,SAAS,EACTnC,KAAM,IAGTgC,EAAOI,SAAQ,SAAUC,GACtB,IAAIC,EAAWD,EAAEE,WAAWD,SACxBE,EAAMH,EAAEE,WAAWC,IAGvBjB,EAASkB,KAAK,CAAE1D,GAAIuD,EAAUxB,MAAOwB,IAGrC,IAAII,EAAkBL,EAAEM,oBAAoB5E,EAAKC,GAC5CsD,IACFA,EAAyBoB,GAG5BR,EAAclC,KAAKyC,KAAKC,EAAgB9D,IAExCqC,EAAYqB,GAAYD,EACxBnB,EAAeoB,GAAYI,EAC3BvB,EAAkBqB,GAAOE,CAC5B,IASAZ,GAAGzD,EAAIG,OAAOoE,OAAO,UAAWrB,GAChCO,GAAGzD,EAAIG,OAAOqE,UAGdjB,MAAMhD,GAAGsD,EAAeJ,GAAGzD,EAAII,kBAG/B,IAAK,IAAIiD,KAAKR,EACXA,EAAeQ,GAAGD,OAElBP,EAAeQ,GAAGoB,OAGrBxB,EAAuByB,OACvB3B,EAAiBE,EAGjBQ,GAAGzD,EAAIG,OAAOwE,SAASzB,EAAS,GAAGxC,GAAG,EAQzC,IAAIY,EAAUxB,KAAKwB,OAAS,CACzBsD,gBAAkBC,IAIf,IAAK,IAAIZ,KAAYpB,EAEfA,EAAeoB,IACfpB,EAAeoB,GAAU3C,OAAOsD,iBAEhC/B,EAAeoB,GAAU3C,OAAOsD,gBAAgBC,EAEtD,EAGHC,WAAaC,IAIV,IAAK,IAAId,KAHTjB,EAAiB+B,EAGIlC,EAEfA,EAAeoB,IACfpB,EAAeoB,GAAU3C,OAAOwD,YAEhCjC,EAAeoB,GAAU3C,OAAOwD,WAAW9B,EAEjD,EAGH1C,aAAc,WAIX,IAAK,IAAI+C,KAHT/B,EAAOqB,aAGOE,EACXA,EAAeQ,GAAG2B,QAIrBvB,GAAGzD,EAAIC,WAAWwE,MACrB,EAEApE,WAAY4E,iBACTxB,GAAGzD,EAAIK,YAAY6E,UAEnBzB,GAAGzD,EAAIC,WAAWkF,eAElB,IAAIC,EAASrC,EACb,GAAIqC,EAED,GAAIA,EAAOC,UAAW,CACnB,IAKIC,EALAC,EAAOzF,KAAK+B,GAAG2D,UAAUJ,EAAOK,UAEhCC,EAAQ,KACRC,EAAU,KAKd,GAAKxC,EAoEE,CAEAoC,EAAKrE,QAAOiC,EAAWjC,MAAQqE,EAAKrE,OAGxCyE,EAAUxC,EAAWyC,QAGrB,IAAIC,EAAe/F,KAAK+B,GAAG2D,UAAUG,GACrC,IAAK,IAAIxB,KAAOoB,EAEb,GACU,YAAPpB,GACAoB,EAAe,UACY,iBAApBA,EAAe,SACvB,CACCM,EAAuB,SACpBA,EAAuB,UAAK,CAAC,EAEhC,IAAK,IAAIC,KAAcP,EAAe,SACnCM,EAAuB,SAAEC,GACtBP,EAAe,SAAEO,EAE1B,MACGD,EAAa1B,GAAOoB,EAAKpB,GAI/BhB,EAAW4C,WAAWF,GAEtBH,EAAQvC,CACX,KAnGiB,CAKd,IAAIrC,EAAQ,GAA0B,IAHtC4E,EAAQ1C,EAAegD,SAAST,IAGTrE,MAAM+E,OAW7B,GAVIP,EAAMQ,SAASC,WAChBrF,GAAgB,IAEfA,EAAQ,MACTA,EAAQ,KAGX4E,EAAMQ,SAASpF,MAAQA,EAGN,iBAAb4E,EAAMvB,IAAwB,CAC/B,IAAIiC,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3Bb,EAAMQ,SAASM,SAAW,EAE1B,IAAIC,EAAaf,EAAMgB,eAGvB,IAAIC,EAAiBjB,EAAMkB,WAIxBH,EAAWI,QACPC,GAAMA,EAAEF,YAAcD,IACxBV,SAEFU,EAAiB,GAAGA,IAAiBP,KAKV,QAA3BV,EAAMQ,SAASa,UACe,QAA9BrB,EAAMQ,SAASc,cAGfL,EAAiB,GAAG3D,EAAeiE,OAAOb,KAG7Cd,EAAUmB,EAAWT,SAAS,CAG3B7B,IAAKuB,EAAMvB,IAEXyC,WAAYD,EACZzF,MAAO8B,EAAe9B,MAEtBgF,SAAU,CACPC,SAAUT,EAAMQ,SAASC,SAEzBM,WAAYf,EAAMX,OAAOrE,GACzBqG,SAAUrB,EAAMQ,SAASc,YACzBA,YAAatB,EAAMQ,SAASa,SAC5BG,WAAYxB,EAAMQ,SAASgB,WAC3BC,WAAYzB,EAAMQ,SAASiB,WAC3BC,YAAa1B,EAAMQ,SAASkB,YAC5BZ,SAAU,EACV1F,MAAOA,IAMhB,CACH,CAiCA,IAAIuG,EAAY3B,EAAML,UACtB,GAAIgC,EAAUC,OACXD,EAAUE,WAAW9D,GAAG2B,EAAO7E,GAAGG,KAI9BiF,GACDD,EAAMK,WAAWJ,GAGpBlC,GAAGzD,EAAIK,YAAYmH,SACnB/D,GAAGzD,EAAIC,WAAWwH,oBAElB,UACS/B,EAAMgC,OAEZ,IAAIC,EAAoB,KACrBlE,GAAGzD,EAAIK,YAAYmH,SACnB/D,GAAGzD,EAAIC,WAAWwH,eAClB1E,EAAeiC,QACf1D,EAAOmD,OACPnD,EAAOgC,UAAUsE,OAAOlC,EAAM,EAG7BmC,EAAgB,KAEjBvC,EAAQP,OAAO+C,QAAQtD,UAIvBkB,EAAMX,OAAO+C,QAAQtD,SAAS,EAIlB,MAAXc,GACDA,EAAQY,SAAS6B,WAAarC,EAAMhF,SAC9B4E,EAAQoC,OAGdhC,EAAMQ,SAAS6B,WAAazC,EAAQ5E,SAC9BgF,EAAMgC,OAGPvE,UACIuC,EAAMsC,sBACN1C,EAAQ0C,iBAGjBH,IACAF,KAEAA,GA6BN,CA3BE,MAAOM,GA2BT,CAEN,MACGxE,GAAGzD,EAAIK,YAAYmH,SACnB/D,GAAGzD,EAAIC,WAAWwH,oBAGrB3H,KAAK+B,GAAGqG,OAAOC,UACZ,IAAIC,MAAM,sCACV,CAAC,GAGJ3E,GAAGzD,EAAIK,YAAYmH,SACnB/D,GAAGzD,EAAIC,WAAWwH,cAgCxB,EAEAnE,UAAW,CACR+E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGH9D,KAAM,WACHhB,GAAGzD,EAAIC,WAAWwE,MACrB,EAEA+D,QAAS,SAAUC,GAQhB,GANAxF,EAAuByB,MAAK,GAAO,GACnC3B,EAAiBE,EAGbD,EAAe0F,aAAYD,EAAgB,iBAE3CA,EAAe,CAChB,IAAIE,EAAerJ,EAAesE,YAAYgF,QAC1C9B,GAAMA,EAAE5C,WAAWC,KAAOsE,IAC5B,GACF,IAAKE,EAAc,OACnB,IAAIE,EAAkBF,EAAazE,WAAWD,SAC9CR,GAAGzD,EAAIG,OAAOwE,SAASkE,GACvBpF,GAAGzD,EAAIG,OAAO+E,SACjB,MAGGzB,GAAGzD,EAAIG,OAAOqH,SAGjB/D,GAAGzD,EAAIG,OAAOuE,OAGdjB,GAAGzD,EAAIK,YAAYkE,OAAO,QAAS1E,EAAE,eACrC4D,GAAGzD,EAAIK,YAAYmE,SACtB,EAEAsE,SAAU,SAAUpD,GAKjB,IAAK,IAAIrC,KAJLN,GAAgBA,EAAe0B,OAIrB3B,EACPO,GAAKqC,EAAMvB,KACZrB,EAAkBO,GAAGqB,MAAK,GAAO,GACjC5B,EAAkBO,GAAG0F,SAASrD,GAC9B3C,EAAiBD,EAAkBO,IAEnCP,EAAkBO,GAAGoB,OAK3B,GACG1B,GACAA,EAAexC,IACfwC,EAAexC,GAAGyI,SACnB,CACC,IAAIC,EAAeC,IACZA,EAAKC,cAAgB1F,GAAGyF,EAAKxI,KAAO+C,GAAGyF,EAAKxI,IAAIwE,SACjDzB,GAAGyF,EAAKxI,IAAIwE,SACf,EAGHnC,EAAexC,GAAGyI,SAASjF,SAASmF,IACjCD,EAAYC,GAGZ,IAAIE,EAAaF,EAAKjI,MAAQiI,EAAKvH,KAC/ByH,GAAcA,EAAWrF,SAC1BqF,EAAWrF,SAASsF,IACjBJ,EAAYI,EAAU,GAE5B,GAEN,CAGA5F,GAAGzD,EAAIG,OAAOsE,OAGdhB,GAAGzD,EAAIK,YAAYkE,OAAO,QAAS1E,EAAE,SACrC4D,GAAGzD,EAAIK,YAAYmE,SACtB,EAQArC,SAAU,SAAU8E,GAGjB,IAAI7B,EAASvC,EAAeoE,GACxB7B,IACDA,EAAOV,OACP3B,EAAiBqC,EACjB3B,GAAGzD,EAAIG,OAAOmJ,OAMpB,EAEA3G,WAAY,WAET,GACGI,GACAA,EAAexC,IACfwC,EAAexC,GAAGyI,SACnB,CACC,IAAIO,EAAcL,IACXA,EAAKC,cAAgB1F,GAAGyF,EAAKxI,KAAO+C,GAAGyF,EAAKxI,IAAI8G,QACjD/D,GAAGyF,EAAKxI,IAAI8G,QACf,EAGHzE,EAAexC,GAAGyI,SAASjF,SAASmF,IACjCK,EAAWL,GAGX,IAAIE,EAAaF,EAAKjI,MAAQiI,EAAKvH,KAC/ByH,GAAcA,EAAWrF,SAC1BqF,EAAWrF,SAASsF,IACjBE,EAAWF,EAAU,GAE3B,GAEN,CAEApG,EAAuByB,OACvB3B,EAAiBE,EAGjBQ,GAAGzD,EAAIG,OAAOwE,SAASzB,EAAS,GAAGxC,GACtC,EAUAgE,KAAM,SAAUgB,EAAO8D,IACpBrG,EAAauC,GAGVpE,EAAOwH,SAASpD,GAEhBpE,EAAOkH,QAAQgB,GAGlB/F,GAAGzD,EAAIC,WAAWyE,MACrB,EAEA+E,UAAW,WAKR,IAAIC,EAAYjG,GAAGzD,EAAIG,OAAO4B,OAAO4H,KAAK,GAAGC,QAIrB,iBAAbF,IACRjG,GAAGzD,EAAIG,OAAO0J,WAAWpG,GAAGzD,EAAIG,OAAO4B,OAAO4H,KAAK,GAAGjJ,IACtDgJ,EAAYjG,GAAGzD,EAAIG,OAAO4B,OAAO4H,KAAK,GAAGC,SAGxCnG,GAAGiG,IAAYjG,GAAGiG,GAAWhF,MACpC,GAIH5E,KAAKgK,QAAQ,CAAC,GAKdhK,KAAK8E,gBAAkBtD,EAAOsD,gBAC9B9E,KAAKgF,WAAaxD,EAAOwD,WACzBhF,KAAK4E,KAAOpD,EAAOoD,IACtB,oBC/rBH,MAAMrF,EAAc,EAAQ,MAE5BE,EAAOC,QAAU,cAAuDH,EAGrEI,YAAYC,EAAKC,GAGdC,MAAMF,EAFNC,EAASA,GAAU,4CAGnB,IAAIE,EAAIC,KAAKC,QAGTC,EAAM,CACPC,UAAWH,KAAKI,OAAO,GAAGP,eAC1BoK,KAAMjK,KAAKI,OAAO,GAAGP,oBACrBqK,KAAMlK,KAAKI,OAAO,GAAGP,qBAIpBsK,EAAS,CACVzJ,KAAM,OACNE,GAAIV,EAAIgK,KAERvI,YAAY,EACZuH,SAAU,CACP,CACGxI,KAAM,SACNkB,KAAM,OACNV,IAAK,gBACLyB,MAAO5C,EAAE,gBACTqC,GAAI,CACDgI,YAAa,SAAUxJ,EAAIyJ,EAAG9H,GAC3Bf,EAAO8I,kBACP9I,EAAO+I,iBACV,MAMZvK,KAAKS,GAAK,CACPC,KAAM,QACNE,GAAIV,EAAIC,UAERa,MAAO,IACPS,KAAM0I,EACN/H,GAAI,CACDoI,OAAQ,WACLhJ,EAAOgJ,QACV,IAKNxK,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDE,MAAMhD,GAAGT,KAAKS,GAAG,EAGpB,IAAIgK,EAAgB,KAGpB,IAAIjJ,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CASRnB,SAAU,WAAa,GAQ1BiI,gBAAiB,SAAUI,EAASC,GACjC,IAAIC,EAAYjH,GAAGzD,EAAIgK,MAEnBW,EAAYD,EAAUE,gBAAgB3E,OAAS,EAC/C4E,EAAavJ,EAAOwJ,cAAa,GACrCJ,EAAUK,QACP,CACGrK,GAAI,OAAS6C,MAAMyH,MACnB/J,KAAM,CACH,CACGT,KAAM,QACNM,MAAO,IACPmB,QAAS4I,EACT3I,GAAI,CACDC,SAAU,SAAU8I,GAEjB3J,EAAO4J,cAAcD,EADZnL,KAEZ,IAGN,CACGU,KAAM,YACNM,MAAO,IACPmB,QAAS,CACN,CACGvB,GAAI,GACJ+B,MAAO5C,EAAE,yBAGfqC,GAAI,CACDC,SAAU,SAAUgJ,EAAMC,GAEvB9J,EAAO+I,iBACV,IAGN,CACG7J,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNZ,MAAO,GACPoB,GAAI,CACDgI,YAAa,WACVQ,EAAUY,WAAWxL,KAAKyL,iBAC1BjK,EAAOkK,kBAAiB,GACxBlK,EAAO+I,iBACV,MAKZM,GAICH,GACiBE,EACdE,gBACAD,GAAWC,gBAAgB,GACnBjG,SAAS6F,GAEpBC,GACmBC,EAChBE,gBACAD,GAAWC,gBAAgB,GACjBjG,SAAS8F,EAM7B,EAMAK,aAAc,SAAUW,GACJhI,GAAGzD,EAAIC,WAAxB,IACGyK,EAAYjH,GAAGzD,EAAIgK,MACnBa,EAAa,GAEhB,IAAKN,EAAc1D,SAAU,OAAOgE,EAcpC,GAXgBN,EAAc1D,SACpB9C,SAAS+C,IACZA,EAAE4E,mBACHb,EAAWzG,KAAK,CACb1D,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,OAEf,IAICuK,EAAiB,CAClB,IAAIE,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIC,EAAgBF,EAAMhB,gBAAgB,GAAGmB,WAC7C,GAAID,EAAe,CAChB,IAAIE,EAAc,KACDnB,EAAWjC,QAAO,SAAU9B,EAAG+E,GAC7C,OAAI/E,EAAEpG,IAAMoL,IACTE,EAAcH,GACP,EAIb,IAUAhB,EAAWoB,OAAOD,EAAa,EAClC,CACH,GAEN,CACA,OAAOnB,CACV,EAOA/F,WAAY,SAAUC,GACnBwF,EAAgBxF,CACnB,EAYAmH,YAAchG,IACXpG,KAAKqM,UAAYrM,KAAK+B,GAAG2D,UAAUU,EAAS,EAa/CkG,YAAa,WACV,IAAI1B,EAAYjH,GAAGzD,EAAIgK,MACpBqC,EAAa,GAEZV,EAAajB,EAAUE,gBAiB3B,OAhBIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WACnCM,EAAWjI,KAAK,CAEbD,IAAKqG,EACLC,IAAKA,GAGX,IAGI4B,CACV,EAEAnB,cAAe,SAAUD,EAAUqB,GAChC,IAAI1I,EAAY2G,EAAc1D,SAC1B0F,EAAe,GAChBC,EAAUF,EAAGf,gBAAgBX,gBAAgB,GAG7C3I,EAAU,KAQb,GANA2B,EAAUG,SAAS+C,IACZA,EAAEpG,IAAMuK,IACTsB,EAAezF,EAClB,IAGEyF,EAAL,CAEA,OAAQA,EAAapI,KAClB,IAAK,SAkBL,QACGlC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAE1B,MAjBH,IAAK,OACFoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,oBACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,qBAE1B,MACH,IAAK,SACFoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAWhC2M,EAAQjI,OAAO,UAAWtC,GAC1BuK,EAAQhI,UAORlD,EAAOkK,mBAEPlK,EAAO+I,iBAvCkB,CAwC5B,EAOAC,OAAQ,KACL,IAAII,EAAYjH,GAAGzD,EAAIgK,MAGvBzG,MAAMhD,GAAG0J,EAAQS,GAQjB,IAAI+B,EAAQ3M,KAAKqM,UACbM,GAASA,EAAM1I,SAChB0I,EAAM1I,SAAS2I,IACZpL,EAAO8I,gBAAgBsC,EAAEvI,IAAKuI,EAAEjC,IAAI,IAI7B,MAATgC,GAAiC,GAAhBA,EAAMxG,QACxB3E,EAAO8I,iBACV,EAOHoB,iBAAkB,SAAUmB,GACzB,IAAIjC,EAAYjH,GAAGzD,EAAIgK,MACpBa,EAAavJ,EAAOwJ,cAAa,GACjC8B,EAAiB,GACjBC,EAAmB,GAElBlB,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWjC,QAAO,SAAU9B,GACpC,OAAOA,EAAEpG,IAAM8J,CAClB,IAECsC,EAAS7G,OAAS,EAEnB2G,EAAexI,KAAK0I,EAAS,IAG7BD,EAAiBzI,KAAKwH,EAE5B,IAIEe,GACFE,EAAiB9I,SAAQ,SAAU6H,EAAOC,GACvCnB,EAAUY,WAAWM,EACxB,KAIHD,EAAajB,EAAUE,iBACR3E,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWjC,QAAO,SAAU9B,GACpC,OAAOA,EAAEpG,IAAM8J,CAClB,IAGCuC,EAAgCH,EAAehE,QAChD,SAAUoE,GACP,OACGC,MAAMC,QAAQJ,KACW,IAAzBA,EAASK,QAAQH,EAKvB,IAICI,EAAevC,EAAWjC,QAAO,SAAUoE,GAC5C,OACGC,MAAMC,QAAQH,KACgC,IAA9CA,EAA8BI,QAAQH,EAK5C,IAGApB,EAAMhB,gBAAgB,GAAGrG,OAAO,UAAW6I,GAC3CxB,EAAMhB,gBAAgB,GAAGpG,SAC5B,GAEN,EAMA6F,gBAAiB,KAEVvK,KAAKuN,iBAETvN,KAAKqM,UAAY7K,EAAO8K,cAExB9K,EAAOgC,UAAUnB,SAASrC,KAAKqM,WAAU,EAmB5CmB,cAAe,KACZxN,KAAKuN,gBAAiB,CAAI,EAG7BE,gBAAiB,KACdzN,KAAKuN,gBAAiB,CAAK,EAU9B3I,KAAM,CAAC8I,EAAOhD,EAASvI,KACpBX,EAAOgM,gBAEP7J,GAAGzD,EAAIC,WAAWyE,KAAK8I,EAAOvL,GAAW,MAErCuI,GACDlJ,EAAO8I,gBAAgBI,GAG1BlJ,EAAOiM,iBAAiB,EAU3BE,KAAM,SAAUC,EAAGC,GAChB,IAAIC,EAAS,EAETjC,EAAalI,GAAGzD,EAAIgK,MAAMY,gBA2C9B,OA1CIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,KAAIF,EAAW1F,OAAS,GAAK4F,GAAmB,GAAV+B,GAAtC,CAEA,IAAIpD,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WAE/BrG,EAAQ6E,EAAcsD,UAAUrD,GACpC,GAAK9E,EAAL,CAEA,IAAIoI,EAAKpI,EAAMkB,WAEXmH,EAASL,EAAEI,GACZE,EAASL,EAAEG,GAEVb,MAAMC,QAAQa,KACfA,GAAUA,GAAU,IAChBE,KAAI,SAAUC,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRnB,MAAMC,QAAQc,KACfA,GAAUA,GAAU,IAChBC,KAAI,SAAUC,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRL,GAAUC,IAERJ,EADQ,OAAPnD,EACQsD,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,EA3BpB,CANuC,CAoC5D,IAGIJ,CACV,GAIH9N,KAAKgK,QAAQ,CAAC,GAKdhK,KAAKgF,WAAaxD,EAAOwD,WACzBhF,KAAK4E,KAAOpD,EAAOoD,KACnB5E,KAAK2N,KAAOnM,EAAOmM,KAEnB3N,KAAK6E,SAAWrD,EAAO4K,YACvBpM,KAAKiM,SAAWzK,EAAO8K,WAC1B,oLC7jBCiC,EAAe,sBAyHnB,YAvHA,cAAsBA,EACnB5O,cACGG,QAEAE,KAAKwO,iBAAkB,EACvBxO,KAAKyO,QAAU,KAEfzO,KAAK0O,WAAa,KAIlB1O,KAAK2O,YAAc,KAInB3O,KAAK4O,WAAa,IAGrB,CAEAtL,KAAKvB,GAGF/B,KAAK+B,GAAKA,EACV,IAAI8M,EAAa7O,KAAK+B,GAAG+M,OAAOC,aAC5BF,IACD7O,KAAKwO,iBAAkB,EACvBxO,KAAKyO,QAAUI,GAGlB,IAAIG,EAAahP,KAAK+B,GAAG+M,OAAOG,aAehC,OAdID,IACDhP,KAAK0O,WAAaM,EAAWE,OAAS,GACtClP,KAAK2O,YAAcK,EAAWG,QAAU,GACxCnP,KAAK4O,WAAaI,EAAWI,OAAS,IAGzCpP,KAAK+B,GAAGsN,QAAQjN,GAAG,kBAAkB,CAACkN,EAASnH,EAAK0B,KAC7C1B,EACDK,QAAQ+G,MAAMpH,GAGjBnI,KAAKwP,KAAK,SAAU3F,EAAK,IAGrB4F,QAAQC,SAClB,CAEAC,gBACG,OACG3P,KAAKkP,OAAOU,GAAiB,yCAAXA,EAAEC,OAChB1J,OAAS,CAEnB,CAEA2J,gBACG,OAAO9P,KAAK+B,GAAG+M,OAAOiB,UACzB,CAEAC,mBACG,OACGhQ,KAAKkP,OAAOU,GAAiB,yCAAXA,EAAEC,OAChB1J,OAAS,CAEnB,CAEA8J,QACG,OAAOjQ,KAAKyO,SAASwB,OAAS,EACjC,CAEAC,WACG,OAAOlQ,KAAKyO,SAAS0B,cAAgB,IACxC,CAEAC,SACG,OAAOpQ,KAAK+B,GAAGsN,QAAQgB,KACpB,CACGC,IAAK,eACLzG,KAAM,CAAE0G,UAAWvQ,KAAK+B,GAAGyO,OAAOC,QAAQ,SAE7C,CACGpM,IAAK,iBACLiL,QAAS,CAAC,GAGnB,CAEAJ,MAAMwB,EAAK,MAAM,IACd,OAAQ1Q,KAAKyO,SAASS,OAAS,IAAIpG,OAAO4H,EAC7C,CACAC,WACG,OAAO3Q,KAAK0O,UACf,CAEAS,SACG,OAAOnP,KAAK2O,WACf,CAEAiC,WACG,OAAO5Q,KAAKyO,SAASmC,QACxB,CAEAC,WACG,OAAO7Q,KAAK4O,UACf,CAEAiB,OACG,OAAO7P,KAAKyO,SAASoB,IACxB,CAEAiB,UACG,OAAO9Q,KAAKyO,SAASsC,QACxB,CAEAC,yBACG,OAAOhR,KAAKyO,SAASuC,sBACxB,kBC9GH,SAKGC,MAAO,SAAUC,GACdzN,MAAM0N,MAAM,CACTC,MACGF,EAAKE,OACLrP,GAAGsP,aAAajQ,MAAM,yBAA0B,UACnDiN,KACG6C,EAAK7C,MACL6C,EAAKI,SACLvP,GAAGsP,aAAajQ,MACb,wBACA,wBAENmQ,GAAIL,EAAKK,IAAMxP,GAAGsP,aAAajQ,MAAM,sBAAuB,QAElE,EAIAoQ,QAAS,SAAUN,GAChB,IAAIE,EACDF,EAAKE,OACLrP,GAAGsP,aAAajQ,MAAM,kCAAmC,aACxDkQ,EACDJ,EAAK7C,MACL6C,EAAKI,SACLvP,GAAGsP,aAAajQ,MACb,gCACA,uCAGFqQ,EACDP,EAAKO,UACLP,EAAKK,IACLxP,GAAGsP,aAAajQ,MAAM,iBAAkB,SACvCsQ,EACDR,EAAKQ,SACLR,EAAKS,QACL5P,GAAGsP,aAAajQ,MAAM,gBAAiB,QAK1CqC,MAAMmO,QAAQ,CACXR,MAAOA,EACP/C,KAAMiD,EAENC,GAAIE,EACJE,OAAQD,EAERG,SAAU,SAAU/D,GACbA,EACGoD,EAAKY,OAAOZ,EAAKY,QAEjBZ,EAAKa,MAAMb,EAAKa,OAGnBb,EAAKW,UAAUX,EAAKW,SAAS/D,EACpC,GAmBN,EAKAkE,cAAe,SAAUd,GACtBlR,KAAKwR,QAAQ,CACVJ,MACGF,EAAKE,OACLrP,GAAGsP,aAAajQ,MACb,iCACA,oBAENmQ,GAAIL,EAAKK,IAAMxP,GAAGsP,aAAajQ,MAAM,oBAAqB,YAC1DuQ,OACGT,EAAKS,QACL5P,GAAGsP,aAAajQ,MAAM,oBAAqB,YAC9CiN,KACG6C,EAAK7C,MACL6C,EAAKI,SACLvP,GAAGsP,aAAajQ,MACb,+BACA,0CACA,CAAC,SAEPyQ,SAAU,SAAU/D,GACbA,EACGoD,EAAKY,OAAOZ,EAAKY,QAEjBZ,EAAKa,MAAMb,EAAKa,OAGnBb,EAAKW,UAAUX,EAAKW,SAAS/D,EACpC,GAEN,EAIAmE,QAAS,SAAUf,GAChB,IAAII,EAAUJ,EAAK7C,MAAQ6C,EAAKI,QAC5BY,EAAUhB,EAAKgB,SAAW,IAE9BzO,MAAM6N,QAAQ,CACXjD,KAAMiD,EACNa,OAAQD,GAEd,GCnIH,IAAIE,EAAU,EAAQ,OA2LtB,YAzLA,cAA2BA,EACxBzS,cACGG,MAAM,GAAI,CAAC,GAKXE,KAAKwO,iBAAkB,EACvBxO,KAAKyO,QAAU,KAEfzO,KAAKqS,iBAAkB,EACvBrS,KAAKsS,eAAiB,CAAC,EACvBtS,KAAKuS,qBAAuB,CAAC,CAChC,CAEAjP,KAAKvB,GAUF,OAPA/B,KAAK+B,GAAKA,EAEV/B,KAAKwS,OAASxS,KAAK+B,GAAG+M,OAAO2D,cAE7BzS,KAAK0S,aAAe,CAAC,EAGdjD,QAAQC,SAClB,CAEAiD,kBACG,OAAO3S,KAAK+B,GAAG6Q,QAAQ1C,UAC1B,CAEA9O,MAAMiD,EAAKwO,EAASlN,EAAS,GAAImN,GAAc,QAEtB,IAAXD,GAA0BxO,IAClCwO,EAAUxO,GAIW,GAApB0O,UAAU5M,QAAegH,MAAMC,QAAQyF,KACxClN,EAASkN,EACTA,EAAUxO,GAKbwO,EAAUA,EAAQG,QAAQ,KAAM,OAChC3O,EAAMA,EAAI2O,QAAQ,KAAM,OAYxB,IAAIC,EAASJ,EACI,KAAbI,EAAO,KACRA,EAASA,EAAOC,MAAM,IAEzB,IAAI9R,EAAQpB,KAAKwS,OAAOS,GAaxB,OAZK7R,IACE0R,GACD9S,KAAKmT,iBAAiB9O,EAAKwO,GAE9BzR,EAAQyR,GAGXlN,EAAO1B,SAAQ,CAACmP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACdjS,EAAQA,EAAMmS,WAAWD,EAAKF,EAAE,IAEnChS,EAAQA,EAAM4R,QAAQ,OAAQ,IAEjC,CAEAQ,YAAYC,EAAQZ,EAASlN,EAAS,IAEnC,IAAIvE,EAAQpB,KAAKoB,MAAMyR,EAASA,EAASlN,GAAQ,GAgBjD,OAfKvE,IAEFA,EAAQpB,KAAK0S,aAAae,GAAQZ,IAEhCzR,IAEFpB,KAAKuS,qBAAqBkB,GACvBzT,KAAKuS,qBAAqBkB,IAAW,CAAC,EACzCzT,KAAKuS,qBAAqBkB,GAAQZ,GAAWA,EAC7CzR,EAAQyR,GAEXlN,EAAO1B,SAAQ,CAACmP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACdjS,EAAQA,EAAMmS,WAAWD,EAAKF,EAAE,IAE5BhS,CACV,CAEAsS,YAIG,OAHAlL,QAAQ+G,MACL,mEAEI,EACV,CAEAoE,iBAAiBtP,EAAKmO,GACnBxS,KAAK0S,aAAarO,GAAOmO,CAC5B,CACAoB,kBAAkBvP,GACfmE,QAAQC,KAAK,8BAA+BpE,GAC5CmE,QAAQC,KAAK,oBAAqBzI,KAAK2S,mBACvC,IAAIH,EAASqB,KAAKC,UAAU9T,KAAKuS,qBAAqBlO,GAAM,KAAM,GAClEmE,QAAQC,KAAK+J,EAChB,CAEAW,iBAAiB9O,EAAKwO,GACf7S,KAAKqS,iBACN0B,aAAa/T,KAAKqS,iBAErB,IACI2B,EAAY,KACb,IAAIC,EAAc,GAClB,IAAIC,EAAgBC,OAAOC,KAAKpU,KAAKsS,gBAAgBnE,KACjDkG,GAAMrU,KAAKsS,eAAe+B,KAE9B,GAAIH,EAAc/N,QANH,GAOZ8N,EAAcC,EACdlU,KAAKsS,eAAiB,CAAC,OAEvB,IAAK,IAAIe,EAAI,EAAGA,GAVJ,GAUsBA,IAAK,CACpC,IAAIiB,EAAIJ,EAAcK,QACtBN,EAAY3P,KAAKgQ,UACVtU,KAAKsS,eAAegC,EAAEjQ,IAChC,CAEHrE,KAAK+B,GAAGsN,QAAQgB,KAAK,CAClBC,IAAK,8BACLzG,KAAM,CAAE2I,OAAQqB,KAAKC,UAAUG,MAE9BO,MAAK,KACCL,OAAOC,KAAKpU,KAAKsS,gBAAgBnM,OAAS,GAC3C6N,GACH,IAEFS,OAAOtM,IACUA,EAAIuM,WACRrH,QAAQ,kBAAoB,GACpC7E,QAAQ+G,MACL,8BAAgCvP,KAAK2S,kBAE3C,GACD,EAER3S,KAAKqS,gBAAkBsC,YAAW,KAC/BX,GAAW,GACX,KAEHhU,KAAKsS,eAAejO,GAAO,CAAEA,MAAKwO,UACrC,CAOA+B,UAEG,OADApM,QAAQ+G,MAAM,iDACPE,QAAQC,SAClB,CACA9H,OAEG,OADAY,QAAQ+G,MAAM,8CACPE,QAAQC,SAClB,CACA5J,QAEG,OADA0C,QAAQ+G,MAAM,+CACP,CAAC,CACX,CACAsF,eAEG,OADArM,QAAQ+G,MAAM,sDACP,CAAC,CACX,GCnLH,IAAI,EAAe,sBAWnB,MAAMuF,EAAS,EAAQ,OAGvB,IAAI,EAAS,KAoWb,QAhWA,cAA0B,EACvBnV,YAAYoV,GAGTjV,MAAM,CACHkV,UAAU,EACVC,aAAa,EACbC,aAAc,IAGjBlV,KAAKmV,QAAU,KAIfnV,KAAKoV,WAAa,EAIlBpV,KAAKqV,SAAWN,EAKhB/U,KAAKsV,YAAa,CAGrB,CASAhS,KAAKvB,EAAII,GAUN,OATAnC,KAAK+B,GAAKA,EAEV,EAAS/B,KAAK+B,GAAG+M,OAAOyG,cACxBpT,EAAUA,GAAW,CAAC,KAEnBnC,KAAKmV,QAAUhT,EAAQgT,SAAW,EAAOK,WAAWC,cACpDzV,KAAKoV,WACFjT,EAAQuT,mBAAqB,EAAOF,WAAWE,mBAE9CjG,QAAQC,SAClB,CAiBAiG,IAAIC,EAAQC,GACTD,EAAOhU,KAAOgU,EAAOhU,MAAQ,MAI7B,IAAIiI,EAAO+L,EAAO/L,MAAQ+L,EAAOA,OACjC,GAAI/L,EAAM,CACP,IAAIiM,EAAW,CAAC,SAAU,SAAU,WAChCC,EAAS5B,OAAOC,KAAKvK,GACrBsE,KAAI,SAAU9J,GACZ,IAAI2R,EAAMnM,EAAKxF,GAIf,OAHqC,GAAjCyR,EAASzI,eAAe2I,KACzBA,EAAMnC,KAAKC,UAAUkC,IAEjB3R,EAAM,IAAM4R,mBAAmBD,EACzC,IACC1H,KAAK,KAELA,EAAO,IACPsH,EAAOtF,IAAIjD,QAAQ,MAAQ,IAC5BiB,EAAO,KAEVsH,EAAOtF,IAAM,CAACsF,EAAOtF,IAAKyF,GAAQzH,KAAKA,EAC1C,CAEA,OAAOtO,KAAKkW,SAASN,EAAQC,EAChC,CAcAxF,KAAKuF,EAAQC,GAEV,OADAD,EAAOhU,KAAOgU,EAAOhU,MAAQ,OACtB5B,KAAKkW,SAASN,EAAQC,EAChC,CAcAM,IAAIP,EAAQC,GAET,OADAD,EAAOhU,KAAOgU,EAAOhU,MAAQ,MACtB5B,KAAKkW,SAASN,EAAQC,EAChC,CAcAO,OAAOR,EAAQC,GAEZ,OADAD,EAAOhU,KAAOgU,EAAOhU,MAAQ,SACtB5B,KAAKkW,SAASN,EAAQC,EAChC,CAMAQ,qBACG,OAAOrW,KAAKqV,SAASgB,oBACxB,CAEAC,QAAQV,GACL,OAAOd,EAAOc,EAAOtF,IAAKsF,GAAQpB,MAAM+B,GAK9BA,EAAO1M,MAEpB,CASAqM,SAASN,EAAQC,GAGd,GADAD,EAAOY,OAASZ,EAAOY,QAAU,EAC7BZ,EAAOY,QAAUxW,KAAKoV,WAAY,CACnC,IAAIjN,EAAM,IAAIG,MACX,qBAAqBtI,KAAKoV,mBAAmBQ,EAAOtF,OAWvD,OATAnI,EAAIsO,KAAO,kBACXzW,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,2CAGRuG,GACD7V,KAAKqV,SAASqB,gBAAgBb,EAAa1N,GAGvCsH,QAAQkH,OAAOxO,EACzB,CAEA,OAAO,IAAIsH,SAAQ,CAACC,EAASiH,KAC1Bf,EAAOtF,IAAMsF,EAAOtF,KAAO,IACN,KAAjBsF,EAAOtF,IAAI,KACZsF,EAAOtF,IAAMtQ,KAAKmV,QAAUS,EAAOtF,KAGtCsF,EAAOgB,QAAUhB,EAAOgB,SAAW,CAAC,EAChC5W,KAAK+B,GAAG6Q,QAAQiE,YACjBjB,EAAOgB,QAAQE,cAAgB9W,KAAK+B,GAAG6Q,QAAQiE,WAElDjB,EAAOgB,QAAQ,gBAAkB,mBAEjC,IAAIG,EAAW/W,KAAK+B,GAAGyO,OAAO5P,KAC1BmW,IACDnB,EAAOgB,QAAQ,gBAAkBG,GAKhC/W,KAAKqW,sBACNT,EAAOoB,OAASpB,EAAOoB,QAAUpB,EAAOhU,KACxCgU,EAAO1D,QAAU,IACjB0D,EAAO/L,KAAO+L,EAAO/L,MAAQ+L,EAAOA,cAC7BA,EAAOA,OAEd5V,KAAKsW,QAAQV,GACTpB,MAAM+B,IAKJ,IAAI1M,EAAO0M,EACPV,GACD7V,KAAKqV,SAASqB,gBAAgBb,EAAa,KAAMhM,GAEpD6F,EAAQ7F,EAAK,IAEf4K,OAAOtM,IAQL,GACqB,mBAAlBA,EAAI8O,YACH9O,EAAImJ,SAAWnJ,EAAImJ,QAAQjE,QAAQ,iBAAmB,EAyBvD,OAtBArN,KAAK+B,GAAGmV,UAAUC,IACf,0EAGHvB,EAAOY,cAGPxW,KAAKkW,SAASN,GACVpB,MAAM3K,IAEJ7J,KAAK+B,GAAG0G,KACL,wDAEHiH,EAAQ7F,EAAK,IAEf4K,OAAO2C,IACLpX,KAAK+B,GAAGqG,OAAOC,UAAU+O,EAAM,CAC5B9F,QAAS,sDAEZqF,EAAOS,EAAK,IAOA,KAAdjP,EAAIkP,OACLrX,KAAKwP,KAAK,gBAAiBrH,GACnBA,EAAIkP,QAAU,KAAOlP,EAAIkP,OAAS,IAC1CrX,KAAKwP,KAAK,mBAAoBrH,GACtBA,EAAIkP,QAAU,KACtBrX,KAAKwP,KAAK,kBAAmBrH,GAInC,IAAIoO,EAAS,KACb,GAAIpO,EAAImP,aACL,IACGf,EAAS1C,KAAK0D,MAAMpP,EAAImP,aACd,CAAX,MAAOjN,GAAI,CAGhB,GAAIkM,GAA2B,SAAjBA,EAAOc,OAElB,OAAiB,GAAbd,EAAO3V,IAA0B,YAAf2V,EAAOE,UAC1BzW,KAAKqV,SAAS7F,KAAK,WAItBxP,KAAK+B,GAAGqG,OAAOC,UAAUkO,EAAQ,CAC9BjH,QACG,mEACHzF,KAAM0M,EAAO1M,OAIZgM,GACD7V,KAAKqV,SAASqB,gBACXb,EACAU,EACA,MAGCI,EAAOJ,EAAO1M,OAGrB,IAAI0F,EAAQ,IAAIjH,MACb,GAAGH,EAAIkP,UAAUlP,EAAI8O,YAAc9O,EAAImJ,YACpCsE,EAAOoB,UACNpB,EAAOtF,OAed,OAbAf,EAAMiI,SAAWrP,EAAImP,aACrB/H,EAAMlB,KAAOlG,EAAI8O,WACjB1H,EAAMpH,IAAMA,EACZoH,EAAMe,IAAM,GAAGsF,EAAOoB,UAAUpB,EAAOtF,MACvCtQ,KAAK+B,GAAGqG,OAAOC,UAAUkH,EAAO,CAC7BD,QACG,4DAIFuG,GACD7V,KAAKqV,SAASqB,gBAAgBb,EAAatG,GAEvCoH,EAAOpH,EACjB,MAINvP,KAAK+B,GAAGmV,UAAUC,IACf,gEAEHnX,KAAKqV,SACDoC,MAAM7B,EAAQC,GACdrB,MAAK,KACH9E,EAAQ,CAAE2H,OAAQ,UAAW,IAE/B5C,MAAMkC,GACb,GAEN,CAUAe,OAAO9B,EAAQC,GAEZ,OAAO7V,KAAKkW,SAASN,EAAQC,EAChC,GCjXG8B,EAAmB,CAMtB,2BACA,2BACA,0BACA,2BACA,kBACA,mBAgHH,EAzGA,cAAgC,EAC7BhY,YAAYoV,GAGTjV,MAAMiV,GAEN/U,KAAKsV,YAAa,EAKlBqC,EAAiB1T,SAAS3B,IACvBsV,GAAGC,OAAOzV,GAAGE,GAAKuH,IAIf,GAAIvH,EAAG+K,QAAQ,sBAAwB,GACvBxD,EAAKA,KACN,CACT,IAAIiO,EAAM9X,KAAK+B,GAAGgW,WAAWlO,EAAKmO,UAClC,GAAIF,EAAK,CACN,IAAI9P,EAAQ8P,EAAI9P,QACN,4BAAN1F,GACD0F,EAAMiQ,cAAcpO,EAAKA,KAC/B,CACH,CAEH7J,KAAK+B,GAAGyN,KAAKlN,EAAIuH,EAAK,GACvB,GAER,CAUAwM,qBACG,OAAOuB,GAAGC,OAAOK,aACpB,CAEA5B,QAAQV,GACL,OAAO,IAAInG,SAAQ,CAACC,EAASiH,KAC1Bf,EAAOoB,OAASpB,EAAOoB,OAAOmB,cAE9BP,GAAGC,OAAOO,QAAQxC,GAAQ,CAAC/L,EAAMwO,KAU9B,GAAIA,EAAMC,YAAc,IAAK,CAM1B,IAAIC,EAASF,EAAM9I,MAAQ8I,EAAM9I,MAAMmF,WAAa2D,EAAM5W,KAEtD0G,EAAM,IAAIG,MAAM,iBAAiBiQ,KACrCpQ,EAAIkP,OAASgB,EAAMC,WACnBnQ,EAAI8O,WAAasB,EACjBpQ,EAAImP,aAAee,EAAM5W,KAKzBkV,EAAOxO,EACV,KAAO,CAEJ,GAAI0B,aAAgBvB,MAEjB,YADAqO,EAAO9M,GAIS,iBAARA,IACRA,EAAOgK,KAAK0D,MAAM1N,IAKjBA,EAAKwN,QAAyB,SAAfxN,EAAKwN,OAErBV,EAAO,CACJU,OAAQgB,EAAMC,WACdhB,aAAczD,KAAK2E,UAAU3O,KAKhC6F,EAAQ7F,EAEd,IACD,GAER,GC5HH,IAAI,EAAe,sBA+cnB,YA1cA,cAAsB,EACnBlK,cACGG,QAEAE,KAAKyY,gBAAgB,GAGrBzY,KAAK0Y,UAAY,KAIjB1Y,KAAKyO,QAAU,KACfzO,KAAKqV,SAAW,KAMhBrV,KAAK2Y,YAAc,CAItB,CAEArV,KAAKvB,GAQF,GALA/B,KAAK+B,GAAKA,EAEV/B,KAAK0Y,UAAY,IAAI1Y,KAAK+B,GAAG6W,KAE7B5Y,KAAKyO,QAAUzO,KAAK+B,GAAG+M,OAAOyG,aAC1BvV,KAAKyO,QAAS,CACf,OAAQzO,KAAKyO,QAAQ+G,WAAWqD,aAC7B,IAAK,QAEF,MAEH,IAAK,SACF7Y,KAAKqV,SAAW,IAAI,EAAkBrV,MACtC,MAGH,QACGA,KAAKqV,SAAW,IAAI,EAAYrV,MAItC,OAAOA,KAAKqV,SAAS/R,KAAKvB,EAC7B,CAqBA,OApBGyG,QAAQ+G,MAAM,8BAMbqI,IAAMA,GAAGC,OAEVD,GAAGC,OAAOzV,GAAG,aAAa,KACvBpC,KAAK8Y,aACD9Y,KAAK+Y,oBACNhF,aAAa/T,KAAK+Y,mBAClB/Y,KAAK+Y,kBAAoB,KAC5B,KAGHvQ,QAAQ+G,MAAM,+CACdyJ,OAAOC,iBAAiB,UAAU,IAAMjZ,KAAK8Y,gBAGzCrJ,QAAQC,SAClB,CAWI4F,iBACD,OAAOtV,KAAKqV,SAASC,UACxB,CAcAK,OAAOC,GACJ,OAAO5V,KAAKqV,SAASM,OAAOC,GAAQpB,MAAM3K,GAChC7J,KAAKiY,cAAcpO,IAEhC,CAeAwG,QAAQuF,GACL,OAAO5V,KAAKqV,SAAShF,QAAQuF,GAAQpB,MAAM3K,GACjC7J,KAAKiY,cAAcpO,IAEhC,CAeAsM,OAAOP,GACJ,OAAO5V,KAAKqV,SAASc,OAAOP,GAAQpB,MAAM3K,GAChC7J,KAAKiY,cAAcpO,IAEhC,CAcAuM,UAAUR,GACP,OAAO5V,KAAKqV,SAASe,UAAUR,GAAQpB,MAAM3K,GACnC7J,KAAKiY,cAAcpO,IAEhC,CAMAqP,mBAEOlZ,KAAKqW,sBACNrW,KAAK8Y,aAAarE,OAAM,KAErBzU,KAAK+Y,kBAAoBpE,YAAW,KACjC3U,KAAKkZ,kBAAkB,GACvB,IAAI,IAEVlZ,KAAK+Y,kBAAoB,MAEzB/Y,KAAK+Y,kBAAoBpE,YAAW,KACjC3U,KAAKkZ,kBAAkB,GACvB,IAGT,CAQAC,gBACG,OAAOC,UAAUC,WAAWzX,IAC/B,CAQAyU,qBAEG,OAAIuB,IAAMA,GAAGC,QAAUD,GAAGC,OAAOK,YACvBN,GAAGC,OAAOK,cAIK,oBAAdoB,WAGDF,UAAUG,OAIbvZ,KAAKmZ,iBAAmBG,WAAWE,IAC7C,CASA9C,gBAAgBb,EAAatG,EAAO1F,GAC7BA,IACDA,EAAO7J,KAAKiY,cAAcpO,IAE7B7J,KAAKwP,KAAKqG,EAAYxR,IAAKwR,EAAYvG,QAASC,EAAO1F,EAC1D,CAEAoO,cAAcpO,GAmBX,MAAoB,UAAhBA,EAAKwN,OAECxN,EAKHA,EAAKA,MAAQA,CACvB,CAWA4P,WACG,MAAO,cACV,CAOAC,aACG,OAAO1Z,KAAK2Y,WACf,CASAlB,MAAM5N,EAAMgM,GACT,IAAI4D,EAAWzZ,KAAKyZ,WAEpB,OAAO,IAAIhK,SAAQ,CAACC,EAASiH,KAC1B3W,KAAK0Y,UACDiB,UACAnF,MAAK,IACIxU,KAAK+B,GAAG6X,QAAQjE,IAAI8D,KAE7BjF,MAAMiD,KACJA,EAAQA,GAAS,IACXnT,KAAK,CAAEuF,OAAMgM,gBACnB7V,KAAK+B,GAAGoV,IACL,QAAQM,EAAMtR,iBACXsR,EAAMtR,OAAS,EAAI,IAAM,aAG/BnG,KAAK2Y,YAAclB,EAAMtR,OAClBnG,KAAK+B,GAAG6X,QAAQC,IAAIJ,EAAUhC,MAEvCjD,MAAK,KACHxU,KAAKwP,KAAK,UAELxP,KAAK+Y,mBACP/Y,KAAKkZ,mBAERlZ,KAAK0Y,UAAUoB,UACfpK,GAAS,IAEX+E,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,8BAEZtR,KAAK+B,GAAGmV,UAAU6C,SAAS5R,GAC3BwO,EAAOxO,GAEPnI,KAAK0Y,UAAUoB,SAAS,GACzB,GAEX,CAMAhB,aACG,IAAIW,EAAWzZ,KAAKyZ,WAGpB,IAAKzZ,KAAKqW,qBAAsB,CAC7B,IAAI9G,EAAQ,IAAIjH,MAAM,kCAEtB,OADAiH,EAAMkH,KAAO,iBACNhH,QAAQkH,OAAOpH,EACzB,CAGA,OAAO,IAAIE,SAAQ,CAACC,EAASiH,KAC1B3W,KAAK0Y,UACDiB,UAKAnF,MAAK,IACIxU,KAAK+B,GAAG6X,QAAQjE,IAAI8D,KAM7BjF,MAAMiD,IAEJA,EAAQA,GAAS,GAGjB,IAAIuC,EAAkBC,IACnB,GAAoB,GAAhBxC,EAAMtR,OACP8T,QACI,CACJ,IAAIC,EAAQzC,EAAMlD,QACdqB,EAASsE,EAAMrQ,KACfsQ,EAAMD,EAAMrE,YAChB7V,KAAKqV,SACDqC,OAAO9B,EAAQuE,GACf3F,MAAK,KACHwF,EAAeC,EAAG,IAEpBxF,OAAOtM,IAEDA,GAAmB,mBAAZA,EAAIsO,KACZwD,EAAG9R,GAIN6R,EAAeC,EAAG,GAE3B,GAGH,OAAO,IAAIxK,SAAQ,CAAC2K,EAAKC,KACtBL,GAAgB7R,IACTA,EACDkS,EAAIlS,GAEJiS,GACH,GACD,GACH,IAMJ5F,MAAK,KACHxU,KAAK2Y,YAAc,EACZ3Y,KAAK+B,GAAG6X,QAAQC,IAAIJ,EAAU,OAIvCjF,MAAK,KACHxU,KAAKwP,KAAK,gBACHxP,KAAK0Y,UAAUoB,aAIxBtF,MAAK,KACH9E,GAAS,IAIX+E,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,6BAEZtR,KAAK+B,GAAGmV,UAAU6C,SAAS5R,GAE3BnI,KAAK0Y,UAAUoB,UAAUtF,MAAK,KAC3BmC,EAAOxO,EAAI,GACZ,GACH,GAEX,CAMAmS,QACG,OAAO7K,QAAQC,SAClB,CAQA9N,OACG,OAAO5B,KAAKyO,QAAQ+G,WAAWqD,WAClC,CAMA0B,YAEG,MAAO,CAAC,CACX,GCrcH,IAAI,EAAe,sBA0DnB,YAxDA,cAA2B,EACxB5a,cACGG,QAEAE,KAAKwa,cAAgB,IAKxB,CAEAlX,KAAKvB,GAGF/B,KAAK+B,GAAKA,EACV,IAAIgV,EAAW/W,KAAK+B,GAAGyO,OAAO5P,KAa9B,OAZKmW,IACFA,EAAW,UAKd/W,KAAKwa,cAAgBxa,KAAK+B,GAAG0Y,MAAMC,QAAQC,OACxC5D,EACA/W,KAAK+B,GAAG0Y,MAAMC,QAAQE,OAIlBnL,QAAQC,SAClB,CAEAmK,IAAIxV,EAAK1B,GACN,OAAO8M,QAAQC,UAAU8E,MAAK,IACpBxU,KAAKwa,cAAcrE,IAAI9R,EAAK1B,IAEzC,CAEAgT,IAAItR,GACD,OAAOoL,QAAQC,UAAU8E,MAAK,IACpBxU,KAAKwa,cAAc7E,IAAItR,IAEpC,CAEAa,MAAMb,GACH,OAAOoL,QAAQC,UAAU8E,MAAK,IACpBxU,KAAKwa,cAAcK,OAAOxW,IAEvC,CAEAyW,WACG,OAAOrL,QAAQC,UAAU8E,MAAK,IACpBxU,KAAKwa,cAActV,SAEhC,GClEH,IAAI,EAAe,sBAoDnB,YAhDA,cAAsB,EACnBvF,cACGG,QAEAE,KAAKwa,cAAgB,KACrBxa,KAAKyO,QAAU,KACfzO,KAAK+a,SAAW,IACnB,CAEAzX,KAAKvB,GAGF/B,KAAK+B,GAAKA,EACV,IAAIE,EAASjC,KAAK+B,GAAG+M,OAAOyG,aAC5B,OAAItT,GACGA,EAAOyY,SAAWzY,EAAOyY,QAAQM,WAClCxS,QAAQ+G,MAAM,qCAEdvP,KAAK+a,SAAW,GAEhB/a,KAAK+a,SAAW,EAGZ/a,KAAK+a,SAASzX,KAAKvB,KAE1ByG,QAAQ+G,MAAM,8BAGVE,QAAQC,UAClB,CAEAmK,OAAOjE,GACJ,OAAO5V,KAAK+a,SAASlB,OAAOjE,EAC/B,CAEAD,OAAOC,GACJ,OAAO5V,KAAK+a,SAASpF,OAAOC,EAC/B,CAEA1Q,SAAS0Q,GACN,OAAO5V,KAAK+a,SAAS7V,SAAS0Q,EACjC,CAEAkF,YAAYlF,GACT,OAAO5V,KAAK+a,SAASD,YAAYlF,EACpC,2BCjDC,EAAe,sBAoDnB,YAhDA,cAAqB,EAClBjW,cACGG,QAEAE,KAAKqO,MAAO,EACZrO,KAAKyO,QAAU,KACfzO,KAAKib,iBAAmB,IAC3B,CAEA3X,OACG,IAAIrB,EAAS6M,EAAA,iBACb,GAAI7M,EAAQ,CAET,GAC6B,iBAAnBA,EAAOE,SACdF,EAAOE,mBAAmB+Y,OAG1B,IACGjZ,EAAOE,QAAU0R,KAAK0D,MAAMtV,EAAOE,QAGtC,CAFE,MAAOoN,GACN/G,QAAQ+G,MAAMA,EACjB,CAEHvP,KAAKyO,QAAUxM,EACfjC,KAAKib,iBAAmBhZ,EAAOE,QAAQ8Y,gBAC1C,CAGA,OAAOxL,QAAQC,SAClB,CAEA9O,KACG,OAAKZ,KAAKyO,SAA8B,MAAnBzO,KAAKyO,QAAQ7N,GAG3BZ,KAAKyO,QAAQ7N,GAFV,IAGb,CAEA6P,QAAQpM,EAAK1B,GACV,IAAIA,EAIJ,OAAO3C,KAAKyO,QAAQtM,QAAQkC,GAHzBrE,KAAKyO,QAAQtM,QAAQkC,GAAO1B,CAIlC,GC1CH,GAEGwY,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBC,kBAAmB,IACnBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,aAAc,IACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,IACxBC,yBAA0B,IAC1BC,yBAA0B,IAC1BC,wBAAyB,GAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB3a,gBAAiB,IACjB4a,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEG/B,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB3a,gBAAiB,IACjB4a,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGjb,OAAQ,WAEL,OAAI+W,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,2CCtuBN,MAAMC,EACH1d,YAAYoC,GACT/B,KAAK+B,GAAKA,EACV/B,KAAKsd,OAAS,EACjB,CAEAC,SAASpW,EAAMmK,GACZtR,KAAKsd,OAAOhZ,KAAK,CAAE6C,KAAMA,EAAMmK,QAASA,GAC3C,CAEAkM,OACG,OAA6B,GAAtBxd,KAAKsd,OAAOnX,MACtB,CAEAqB,OACG,OAAOxH,KAAKsd,OAAOnX,OAAS,CAC/B,CAEAsX,qBACG,IAAI3F,EAAM,CACPvI,MAAO,eACPmO,kBAAmB,CAAC,GAGnBC,EAAO7F,EAAI4F,kBAOf,OALA1d,KAAKsd,OAAOrZ,SAASoG,IAClBsT,EAAKtT,EAAElD,MAAQwW,EAAKtT,EAAElD,OAAS,GAC/BwW,EAAKtT,EAAElD,MAAM7C,KAAK+F,EAAE,IAGhByN,CACV,CAEArQ,WAAWyC,GACR,IAAI0T,EAAO5d,KAAKyd,qBAChBzd,KAAK+B,GAAG8b,WAAWC,sBAAsBF,EAAM1T,EAClD,CAEA6T,WAAWC,EAAOC,GACf,IAAIL,EAAO5d,KAAKyd,qBAChBzd,KAAK+B,GAAG8b,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH,MAAME,UAAkB,KACrBxe,YAAYye,GACTte,MAAMse,GAGNpe,KAAK8O,OAASA,EAAA,EAKd9O,KAAK4S,QAAU,EACf5S,KAAKqe,OAASA,EACdre,KAAKqR,aAAe,EACpBrR,KAAKqP,QAAU,EACfrP,KAAK4Z,QAAU,EACf5Z,KAAKwQ,OAAS,EACdxQ,KAAKya,MAAQ,IAGbza,KAAKse,QAAUA,EAAA,EAGfte,KAAKue,MAAMC,cAAgB,IAC3Bxe,KAAKue,MAAME,cAAgB,IAG3Bze,KAAKkX,UAAY,CACdC,IAAK,OACL4C,SAAU,QAEb/Z,KAAK4Y,KAAO,MACTjZ,cAAe,CAEfga,UACG,OAAOlK,QAAQC,SAClB,CACAoK,UACG,OAAOrK,QAAQC,SAClB,GAGH1P,KAAKgC,WAAa,EAElBhC,KAAK6d,WAAa,CACftW,UAAW,IACD,IAAI8V,EAAYrd,MAG1B0e,kBAAmB,SAAUnP,GA8B1B,OA7BIA,IAMEA,EAAMA,OACS,aAAfA,EAAMA,OACNA,EAAMoP,KACNpP,EAAMoP,IAAIxY,OAAS,IAEnBoJ,EAAQA,EAAMoP,IAAI,IAIjBpP,EAAMpH,MACPoH,EAAQA,EAAMpH,KAKdoH,EAAM1F,MACN0F,EAAM1F,KAAK0F,OACS,gBAApBA,EAAM1F,KAAK0F,QAEXA,EAAQA,EAAM1F,OAIb0F,CACV,EA+BAuO,sBAAuB,SAAUvO,EAAOrF,GACrC,IAAI0U,GAAa,EAIjB,GAAIrP,KAIDA,EAAQvP,KAAK0e,kBAAkBnP,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAMkH,MAAsB,gBAAdlH,EAAMkH,MACtB,CACC,IAAIoI,EAAQtP,EAAMmO,kBAClB,GAAImB,EAAO,CACR,IAAIC,GAAU,EACd,IAAK,IAAInB,KAAQkB,EAEd,GAAI3U,EAAKhB,SAASyU,GAAO,CACtB,IAAIL,EAASuB,EAAMlB,GACfoB,EAAM,GACVzB,EAAOrZ,SAAQ,SAAUkE,GACtB4W,EAAIza,KAAK6D,EAAImJ,QAChB,IAGApH,EAAK8U,YAAYrB,EAAMoB,EAAIzQ,KAAK,OAG3BsQ,IACF1U,EAAKhB,SAASyU,GAAMsB,QACpBL,GAAa,GAGhBE,GAAU,CACb,CAGH,GAAIA,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,EAgCAZ,sBAAuB,SAAU3O,EAAO2P,EAAKC,GAE1C,GAAI5P,KAIDA,EAAQvP,KAAK0e,kBAAkBnP,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAMkH,MAAsB,gBAAdlH,EAAMkH,MACtB,CACC,IAAIoI,EAAQtP,EAAMmO,kBAClB,GAAImB,EAAO,CACR,IAAIO,GAAU,EACd,IAAK,IAAIzB,KAAQkB,EAAO,CACrBM,EAAKE,WAAWH,EAAKvB,EAAM,iBAC3BwB,EAAKE,WAAWH,EAAKvB,EAAM,sBAE3B,IAAIoB,EAAM,GACVF,EAAMlB,GAAM1Z,SAASoG,IAClB0U,EAAIza,KAAK+F,EAAEiH,QAAQ,IAGtB7N,MAAM0N,MAAM,CACT9C,KAAMsP,EAAO,KAAOoB,EAAIzQ,KAAK,QAGhC8Q,GAAU,CACb,CAKA,GAHAD,EAAKza,QAAQwa,GACbC,EAAKG,iBAEDF,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,GAMHpf,KAAKuf,YAAc,CAAC,EAKpBvf,KAAKoC,GAAG,SAAU+F,IAEfK,QAAQ+G,MAAMpH,EAAI,IAGrBnI,KAAKwf,SAAW,GAGhBxf,KAAKyf,wBAA0B,CAAC,EAMhCzf,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAKuX,KACjD,IAAIC,EAAU3f,KAAKyf,wBAAwBnQ,EAAQO,MACnD,GAAI1H,EAGD,YADAwX,GAAShJ,OAAOxO,GAMnB,IAAIyX,EAAM,CACPhf,GAAI8e,EAAQ9e,GACZiJ,KAAM6V,GAET1f,KAAKwP,KAAK,yBAA0BoQ,GAEpC,IAAIC,EAAS7f,KAAK8f,cAAcJ,GAChCC,GAASjQ,QAAQmQ,EAAO,IAG3B7f,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAK4X,KACjD,IAAIJ,EAAU3f,KAAKyf,wBAAwBnQ,EAAQO,MACnD,GAAI1H,EACD,OAAIA,EAAIuM,WAAWrH,QAAQ,cAAgB,EACjCrN,KAAKggB,iBAAiB1Q,EAAQ3J,QACjC6O,KAAKmL,GAASjQ,SACd+E,MAAMkL,GAAShJ,aAItBgJ,GAAShJ,OAAOxO,GAInBnI,KAAKigB,aAAa3Q,EAAQ1O,IAAMmf,EAIhC,IAAIH,EAAM,CACPhf,GAAImf,EAAUnf,GACdiJ,KAAMkW,GAET/f,KAAKwP,KAAK,yBAA0BoQ,GAEpCD,GAASjQ,QAAQqQ,EAAU,IAG9B/f,KAAKqP,QAAQjN,GAAG,qBAAqB,CAACkN,EAASnH,EAAK4X,KACjD,IAAIJ,EAAU3f,KAAKyf,wBAAwBnQ,EAAQO,MACnD,GAAI1H,EAGDwX,GAAShJ,OAAOxO,OAHnB,QAOOnI,KAAKigB,aAAa3Q,EAAQ1O,IAIjC,IAAIgf,EAAM,CACPhf,GAAI0O,EAAQ1O,GACZiJ,KAAMkW,GAET/f,KAAKwP,KAAK,yBAA0BoQ,GAEpCD,GAASjQ,SAZT,CAYkB,IAMrB,MAAMwQ,EAAgB,CAWnBC,OAAQ,CAACC,EAAW,GAAIje,EAAU,CAAC,KAChC,IAAKie,EAAU,OAEXje,EAAQke,aAAYD,EAAWA,EAASpN,QAAQ,MAAO,KAE3D,IAAIlF,EAAS3L,EAAQme,OAChB,IAAOF,EAAUje,EAAQme,QACzB,IAAOF,GAgBZ,MAdqB,CAClB,aACA,aACA,aACA,aACA,aACA,cAGYnc,SAASqc,IAChBxS,GAAWA,EAAOvI,YACpBuI,EAAS,IAAOsS,EAAUE,GAAO,IAGhC,IAAIC,KAAKzS,EAAO,EAc1B0S,aAAc,CAACC,EAAMte,KAClB,IAAKse,EAAM,MAAO,GAElB,IAAIC,EAAY,IAAOD,GAIvB,OAFIte,EAAQwe,YAAYD,EAAUE,OAAOze,EAAQwe,YAE1CD,EAAUJ,OAAOne,EAAQme,OAAO,EAY1CO,aAAc,CAACJ,EAAMK,EAAQC,IACnB,IAAON,GAAMO,SAASF,EAAQC,GAAMZ,SAY9Cc,QAAS,CAACR,EAAMK,EAAQC,IACd,IAAON,GAAMS,IAAIJ,EAAQC,GAAMZ,WAG3ChM,OAAOC,KAAK8L,IAAkB,IAAIjc,SAASoQ,IACzCrU,KAAKmhB,MAAM9M,GAAK6L,EAAc7L,EAAE,GAEtC,CAQAlP,aAIG,IAAIic,EAAW,GAEfA,EAAS9c,KAAKtE,KAAK4S,QAAQtP,KAAKtD,OAChCohB,EAAS9c,KAAKtE,KAAKqR,aAAa/N,KAAKtD,OACrCohB,EAAS9c,KAAKtE,KAAKqP,QAAQ/L,KAAKtD,OAChCohB,EAAS9c,KAAKtE,KAAKwQ,OAAOlN,KAAKtD,aAEzByP,QAAQ4R,IAAID,SACZphB,KAAK4Z,QAAQtW,KAAKtD,MACxB,IAAI6J,QAAa7J,KAAK4Z,QAAQjE,IAAI,kBAqDlC,OApDA3V,KAAKshB,eAAiBzX,GAAQ,CAAC,EAO/B7J,KAAKoC,GAAG,0BAA2Bwd,IAIhC,GAA4B,iBAAjBA,EAAI/V,KAAK0X,KACjB,IACG3B,EAAI/V,KAAK0X,KAAO1N,KAAK0D,MAAMqI,EAAI/V,KAAK0X,KAGvC,CAFE,MAAOlX,GACN7B,QAAQ2O,IAAI9M,EACf,CAEHrK,KAAKigB,aAAaL,EAAIhf,IAAMgf,EAAI/V,KAChC7J,KAAKwhB,eAAe,UAAW5B,EAAIhf,GAAIgf,EAAI/V,KAAK,IAInD7J,KAAKoC,GAAG,0BAA2Bwd,IAGhC,GAA4B,iBAAjBA,EAAI/V,KAAK0X,KACjB,IACG3B,EAAI/V,KAAK0X,KAAO1N,KAAK0D,MAAMqI,EAAI/V,KAAK0X,KAGvC,CAFE,MAAOlX,GACN7B,QAAQ2O,IAAI9M,EACf,CAEHrK,KAAKigB,aAAaL,EAAIhf,IAAMgf,EAAI/V,KAChC7J,KAAKwhB,eAAe,UAAW5B,EAAIhf,GAAIgf,EAAI/V,KAAK,IAInD7J,KAAKoC,GAAG,0BAA2Bwd,IAGhC,GAA4B,iBAAjBA,EAAI/V,KAAK0X,KACjB,IACG3B,EAAI/V,KAAK0X,KAAO1N,KAAK0D,MAAMqI,EAAI/V,KAAK0X,KAGvC,CAFE,MAAOlX,GACN7B,QAAQ2O,IAAI9M,EACf,QAEIrK,KAAKigB,aAAaL,EAAIhf,IAC7BZ,KAAKwhB,eAAe,YAAa5B,EAAIhf,GAAIgf,EAAI/V,KAAK,IAG9C/J,MAAMwD,MAiEhB,CAUA6B,uBAAuBsc,GAOpB,YALqB,IAAVA,EAAI7gB,KACZ6gB,EAAI7gB,GAAKZ,KAAK6P,OACd4R,EAAIF,KAAK3gB,GAAK6gB,EAAI7gB,IAGd,IAAI6O,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK6P,OAChB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,oBACLiL,QAAS,CACNO,SAGN7P,KAAKqP,QAAQgB,KACV,CACGC,IAAK,qBACLzG,KAAM4X,GAET5L,GACDpB,OAAOtM,IACN,IAAImJ,EAAU,yCACE,YAAZnJ,EAAIsO,OACLnF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,+BACTgC,UACAmQ,OACD,GAKH,GAER,CASAtc,wBAAwBvE,GACrB,OAAO,IAAI6O,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK6P,OAChB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,oBACLiL,QAAS,CACN1O,KACAiP,SAGN7P,KAAKqP,QAAQ+G,OACV,CACG9F,IAAK,eAAe1P,KAEvBiV,GACDpB,OAAOtM,IACN,IAAImJ,EAAU,0CACE,YAAZnJ,EAAIsO,OACLnF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,gCACTgC,UACA1Q,MACD,GAKH,GAER,CAYAuE,uBAAuBvE,EAAI+E,GACxB,OAAO,IAAI8J,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK6P,OAChB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,oBACLiL,QAAS,CACN1O,KACAiP,OACAlK,WAGN3F,KAAKqP,QAAQ8G,IACV,CACG7F,IAAK,eAAe1P,IACpBiJ,KAAMlE,GAETkQ,GACDpB,OAAOtM,IACN,IAAImJ,EAAU,yCACE,YAAZnJ,EAAIsO,OACLnF,EAAU,sDAEbtR,KAAKoI,OAAOC,UAAUF,EAAK,CACxBmH,QAAS,+BACTgC,WACD,GAKH,GAER,CAwCAlJ,OAAOsZ,EAAQnS,EAAOoS,GACnBnZ,QAAQ+G,MAAM,yDACd/G,QAAQ+G,MAAMA,GACd/G,QAAQ+G,MAAMoS,EACjB,CAEAC,UACG,OAAO5hB,KAAKwf,QACf,CACAqC,WAAWC,GACR9hB,KAAKwf,SAASlb,KAAKwd,EACtB,CAKA3Q,MAAMhP,GACH,UAAYA,EACf,CAEAuD,UAAU/C,GACP,OAAO,cAAYA,EACtB,CAEA4M,MAAM+B,KAAYyQ,GACf,IAAIC,EAAW,CACZ1Q,QAAS,aAAatR,KAAKwQ,OAAO5P,SAAS0Q,EAAQoD,cAGtDlM,QAAQ+G,MAAMyS,EAAS1Q,SACnBA,aAAmBhJ,QACpB0Z,EAASzS,MAAQ+B,EAEjB9I,QAAQ+G,MAAM+B,IAGbyQ,GAAQA,EAAK5b,OAAS,GACvB4b,EAAK9d,SAAS2L,IAOX,GANIA,aAAatH,QACd0Z,EAASzS,MAAQK,EAEjBpH,QAAQ+G,MAAMK,IAGD,iBAALA,EACR,IAAK,IAAIyE,KAAKzE,EACXoS,EAAS3N,GAAKzE,EAAEyE,GAChB7L,QAAQ+G,MAAM8E,EAAGzE,EAAEyE,GAEzB,IAGNrU,KAAKwP,KAAK,QAASwS,EACtB,CAEAC,QACG,OAAO,SACV,CAEAhiB,QACG,MAAO,IAAI2V,IACD5V,KAAKqR,aAAajQ,SAASwU,EAExC,CAEAsM,cAAc7d,EAAK1B,GAChB,YAAoB,IAATA,EAED3C,KAAKshB,eAAejd,IAG3BrE,KAAKshB,eAAejd,GAAO1B,EACpB3C,KAAK4Z,QAAQC,IAAI,iBAAkB7Z,KAAKshB,gBAErD,CAEAnK,IAAI7F,KAAYyQ,GACbvZ,QAAQ2O,IAAI7F,GACZyQ,EAAK9d,SAAS2L,IACXpH,QAAQ2O,IAAIvH,EAAE,GAEpB,CAQAuS,OAAO9d,GAKJ,OAJc+d,OACX,4EACA,KAEYC,KAAKhe,EACvB,CAEAie,SAAS1M,GACN,OAAO,aAAWA,EACrB,CAEA2M,WAAW3M,GACR,OAAO,eAAaA,EACvB,CAEA4M,QAAQ5M,GACL,OAAO,YAAUA,EACpB,CAEA6M,aAAa7M,GACV,OAAO,iBAAeA,EACzB,CAEA8M,SAAS9M,GACN,OAAO,aAAWA,EACrB,CAEA+M,UAAU/M,GACP,OAAO,cAAYA,EACtB,CAEAgN,SAAShN,GACN,OAAO,aAAWA,EACrB,CAEAiN,SAASjN,GACN,OAAO,aAAWA,EACrB,CAEA/F,OACG,OAAO,QACV,CAEApH,KAAK6I,KAAYyQ,GACdvZ,QAAQC,KAAK6I,GACbyQ,EAAK9d,SAAS2L,IACXpH,QAAQC,KAAKmH,EAAE,GAErB,CAEAkT,YAAYlN,GACT,OAAO,aAAWA,EACrB,EAGH,2BCx7BA,MAAM6I,EAAgB,EAAQ,OAC9B,IAAIsE,EAAY,EAAQ,OAkBxBtjB,EAAOC,QAAU,cAAgCqjB,EAC9CpjB,YAAYqjB,EAAYjhB,GAjB3B,IAAgBiU,EAkBVlW,MAAM,CAAC,QAAS,eAAgBiC,GAQhCihB,EAAWzB,KAAOyB,EAAWzB,MAAQ,CAAC,EAGtCvhB,KAAKY,GAAKoiB,EAAWpiB,GAGrBZ,KAAK4B,KAAOohB,EAAWphB,MAAQ,cAI/B5B,KAAKuhB,KAAOyB,EAAWzB,KACC,iBAAbvhB,KAAKuhB,OAAkBvhB,KAAKuhB,KAAO1N,KAAK0D,MAAMvX,KAAKuhB,OAI9DvhB,KAAKuhB,KAAkB,YAAIyB,EAAWzB,MAAM0B,aAAe,CACxDC,cAAe,QACfC,UAAW,CACR,QAAS,CACNC,OAAQ,MACRC,QAAS,QACTC,YAAa,EACbC,cAAe,kBACfC,WAAW,IAAIjD,MAAOkD,iBAKK,iBAAzBzjB,KAAKuhB,KAAK0B,cAClBjjB,KAAKuhB,KAAK0B,YAAcpP,KAAK0D,MAAMvX,KAAKuhB,KAAK0B,cAIhDjjB,KAAKmH,KAAO6b,EAAW7b,MAAQnH,KAAKuhB,KAAKpa,MAAQ,GAMjDnH,KAAKuL,KAAOyX,EAAWzX,MAAQ,YAO/BvL,KAAK0jB,oBAvEU,KADL1N,EAwEmBgN,EAAWU,iBAnE/B,KAAR1N,GAAsB,UAARA,GAA2B,MAARA,IAIzB,SAARA,GAA0B,MAARA,GAIfA,GAkEJhW,KAAK2jB,WAAaX,EAAWW,YAAc,GACtCxW,MAAMC,QAAQpN,KAAK2jB,cACrB3jB,KAAK2jB,WAAa,CAAC3jB,KAAK2jB,aAE3B3jB,KAAK2jB,WAAa3jB,KAAK2jB,WAAW7a,QAAQ8G,GAAMA,IAKhD5P,KAAK4jB,gBAAkB/P,KAAK0D,MAAMyL,EAAWY,kBAAmB,GAShE5jB,KAAK6jB,eAAiBb,EAAWa,eACC,iBAAvB7jB,KAAK6jB,iBACb7jB,KAAK6jB,eAAiBhQ,KAAK0D,MAAMvX,KAAK6jB,iBAKzC7jB,KAAK8jB,qBAAuBjQ,KAAK0D,MAC9ByL,EAAWc,uBAAwB,GAEtC9jB,KAAK+jB,oBAAsBf,EAAWe,oBACC,iBAA5B/jB,KAAK+jB,sBACb/jB,KAAK+jB,oBAAsBlQ,KAAK0D,MAAMvX,KAAK+jB,sBAE9C/jB,KAAKgkB,UAAYhB,EAAWzB,KAAKyC,WAAa,GAM9ChkB,KAAKikB,SAAWjB,EAAWzB,KAAK0C,UAAY,GAO5CjkB,KAAKkkB,kBAAoBlB,EAAWzB,KAAK2C,mBAAqB,GAQ9D,IAAIC,EAAW,IACdnB,EAAWzB,KAAK6C,SAAW,IAAIngB,SAASrD,IACtC,IAAI6gB,EAAMzhB,KAAK+B,GAAGsiB,eAAezjB,GAC7B6gB,EACD0C,EAAS7f,KAAKtE,KAAKskB,QAAQ7C,IAE3BzhB,KAAKwP,KACF,UACA,OAAOxP,KAAKY,uCAAuCA,KACnD,CACG2jB,MAAOvkB,KAAKY,GACZ4jB,OAAQ5jB,GAMjB,IAEHZ,KAAKykB,OAASN,GAObnB,EAAWzB,KAAKmD,YAAc,IAAIzgB,SAAS0gB,IACjC3kB,KAAK+B,GAAG6iB,YAAYD,IAEzB3kB,KAAKwP,KACF,UACA,iDACA,CAAE+U,MAAOvkB,KAAKY,GAAIikB,UAAWF,GAEnC,IAGH3kB,KAAK0kB,WAAa1B,EAAWzB,KAAKmD,YAAc,GAKhD1B,EAAWzB,KAAKuD,mBACb9B,EAAWzB,KAAKuD,oBAAsB,CAAC,EAC1C9kB,KAAK8kB,mBAAqB9kB,KAAK8kB,oBAAsB,CAAC,EACtD9kB,KAAK8kB,mBAAmBC,OAASlR,KAAK0D,MACnCyL,EAAWzB,KAAKuD,mBAAmBC,SAAU,GAEhD/kB,KAAK8kB,mBAAmBE,WACrBhC,EAAWzB,KAAKuD,mBAAmBE,YAAc,GACpDhlB,KAAK8kB,mBAAmBG,cACrBjC,EAAWzB,KAAKuD,mBAAmBG,eAAiB,MACvDjlB,KAAK8kB,mBAAmBI,QAAUrR,KAAK0D,MACpCyL,EAAWzB,KAAKuD,mBAAmBI,UAAW,GAKjDlC,EAAWmC,aACRnC,EAAWmC,cAAgBnC,EAAWzB,KAAK4D,aAE9CrlB,MAAMmG,WAAW+c,EACpB,CAsBAoC,qBAAqBlW,GAClB,IAAImW,GAAY,EAGhB,OAAKrlB,KAAK4jB,iBAYN0B,SAAStlB,KAAK6jB,eAAe0B,WAC7BrW,GAAS,IAAIjL,SAAS2L,IAChB5P,KAAK6jB,eAAe2B,KAAKnY,QAAQuC,EAAEC,MAAQD,IAAM,IAClDyV,GAAY,EACf,IAKFA,KAIHrlB,KAAKylB,SAAW,IAAIxhB,SAAS6d,IAEvBA,EAAEsD,qBAAqBlW,KACxBmW,GAAY,EACf,IAEIA,MA9BHnW,GAAS,IAAIjL,SAAS2L,IAChB5P,KAAK2jB,WAAWtW,QAAQuC,EAAEC,MAAQD,IAAM,IACzCyV,GAAY,EACf,IAEIA,EA0Bb,CAaAvf,QAEG,IAAImd,EAAcjjB,KAAKuhB,KAAK0B,YA2B5B,OAzBAjjB,KAAKuhB,KAAOzhB,MAAMgG,QAElB9F,KAAKuhB,KAAKpa,KAAOnH,KAAKmH,KAEtBnH,KAAKuhB,KAAK0B,YAAcA,EAExBjjB,KAAKuhB,KAAKyC,UAAYhkB,KAAKgkB,UAE3BhkB,KAAKuhB,KAAKuD,mBAAqB9kB,KAAK8kB,mBAEpC9kB,KAAKuhB,KAAK0C,SAAWjkB,KAAKikB,SAE1BjkB,KAAKuhB,KAAK2C,kBAAoBlkB,KAAKkkB,kBAEnClkB,KAAKuhB,KAAK6C,SAAWpkB,KAAKykB,QAAU,IAAItW,KAAK2T,GAAMA,EAAElhB,KAErDZ,KAAKuhB,KAAKmD,WAAa1kB,KAAK0kB,YAAc,GASnC,CACJ9jB,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,cACnBuF,KAAMnH,KAAKmH,KACXoE,KAAMvL,KAAKuL,KACXmY,eAAgB1jB,KAAK0jB,eACrBnC,KAAMvhB,KAAKuhB,KACXoC,WAAY3jB,KAAK2jB,WACjBwB,aAAcnlB,KAAKuhB,KAAK4D,aACxBvB,gBAAiB5jB,KAAK4jB,gBACtBE,qBAAsB9jB,KAAK8jB,qBAC3BD,eAAgB7jB,KAAK6jB,eACrBE,oBAAqB/jB,KAAK+jB,oBAEhC,CAeA2B,WAAW5c,EAAS,MAAM,IACvB,OAAQ9I,KAAK2lB,aAAe,IAAI7c,OAAOA,EAC1C,CAcA8c,wBAAwB9c,EAAS,MAAM,IACpC,OAAO9I,KAAK+B,GAAG8jB,iBAAiBC,IACmB,GAAzC9lB,KAAKkkB,kBAAkB7W,QAAQyY,EAAEllB,MACxCkI,OAAOA,EACb,CAEAid,wBAAwBjd,EAAS,MAAM,GAAM6E,GAE1C,MAAMqY,EAASrY,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAM6kB,cAAcpY,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAG8jB,iBAAiBC,GACtB9lB,KAAKkkB,kBAAkB7W,QAAQyY,EAAEllB,KAAO,IAE9CkI,OAAOA,GACP6E,KAAKqY,EACZ,CAMAE,gBAAgBpd,EAAS,MAAM,IAC5B,OAAO9I,KAAK+B,GAAGokB,SAASL,IACmB,GAAjC9lB,KAAKgkB,UAAU3W,QAAQyY,EAAEllB,MAChCkI,OAAOA,EACb,CAEAsd,gBAAgBtd,EAAS,MAAM,GAAM6E,GAElC,MAAMqY,EAASrY,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAM6kB,cAAcpY,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAGokB,SAASL,GACd9lB,KAAKgkB,UAAU3W,QAAQyY,EAAEllB,KAAO,IAEtCkI,OAAOA,GACP6E,KAAKqY,EACZ,CAYAK,iBAAiBzlB,GAKd,GAJA4H,QAAQ+G,MACL,8DAGO,IAAN3O,EAAU,MAAO,GAGrB,IAGI0lB,EAHQtmB,KAAK+B,GAAGgW,WAAWnX,GAGH2lB,gBAExBC,EAAe,CAAC,EACpBF,EAAgBriB,SAAS+C,IACtBwf,EAAaxf,EAAEZ,SAASO,YAAc3G,KAAK+B,GAAGgW,WAC3C/Q,EAAEZ,SAASO,WACb,IAGJ,IAAI8f,EAAgB,GAQpB,OAPAtS,OAAOC,KAAKoS,GAAcviB,SAAQ,SAAUI,GACzCoiB,EAAcniB,KAAK,CAChB1D,GAAIZ,KAAKqE,GAAKzD,GACd+B,MAAO3C,KAAKqE,GAAKjD,OAEvB,GAAGolB,GAEIC,CACV,CAYAH,gBAAgBI,EAAWC,GACxBne,QAAQ+G,MAAM,4BAGd,IAGI+W,EAHQtmB,KAAK+B,GAAGgW,WAAW2O,GAGHH,eACxBvf,GAAMA,EAAEZ,SAASO,YAAcggB,IAG/BC,EAAe,GAKnB,OAJAN,EAAgBriB,SAAS+C,IACtB4f,EAAatiB,KAAK,CAAE1D,GAAIoG,EAAEF,WAAYnE,MAAOqE,EAAE5F,OAAQ,IAGnDwlB,CACV,CAiBAnB,MAAM3c,EAAS,MAAM,GAAM+d,GAAO,GAC/B,IAAI/Y,EAAS,GAEb,OAAK9N,KAAKykB,QAAUzkB,KAAKykB,OAAOte,OAAS,IAGrC2C,GAAU+d,GACX/Y,EAAS9N,KAAKykB,OAAO3b,OAAOA,IAEjB3C,OAAS,GACjBnG,KAAKykB,OAAOxgB,SAAS6d,IAClB,IAAIgF,EAAWhF,EAAE2D,MAAM3c,EAAQ+d,GAC3BC,GAAYA,EAAS3gB,OAAS,IAC/B2H,EAASgZ,EACZ,IAMNhZ,GAAU9N,KAAKykB,QAAU,IAAI3b,OAAOA,IAjBYgF,CAqBtD,CAeAiZ,UAAUje,EAAS,MAAM,IACtB,OAAO9I,KAAK+B,GAAGglB,WAAWjF,GAChB9hB,KAAK0kB,WAAWrX,QAAQyU,EAAElhB,KAAO,IACxCkI,OAAOA,EACb,CAEAke,WAAWC,GACR,SAAIA,IAAWA,EAAQrmB,KACbZ,KAAK0kB,WAAWrX,QAAQ4Z,EAAQrmB,KAAO,CAIpD,CAeAsmB,MAAMpe,GACH,IAAIgF,EAAS,GACToZ,EAAQ,GACRzB,EAAQ,GAEZ,QACKzlB,KAAKykB,QAAUzkB,KAAKykB,OAAOte,OAAS,MACpCnG,KAAKmnB,QAAUnnB,KAAKmnB,OAAOhhB,OAAS,KA8BrC2C,GAEG9I,KAAKmnB,SACND,EAAQlnB,KAAKmnB,OAAOre,OAAOA,IAEjB3C,OAAS,GAChBnG,KAAKmnB,OAAOljB,SAASmP,IAClB,IAAIgU,EAAWhU,EAAE8T,MAAMpe,GAAQ,GAC3Bse,GAAYA,EAASjhB,OAAS,IAC/B+gB,EAAQE,EACX,IAMLF,EAAM/gB,OACP2H,EAASoZ,GAGTpZ,EAAS9N,KAAKykB,OAAO3b,OAAOA,IAGjB3C,OAAS,GAjD1B,SAASkhB,EAAS3mB,GACXA,EAAK+jB,QAAU/jB,EAAK+jB,OAAOte,QAC5BzF,EAAK+jB,OAAOxgB,SAAS6d,IAElB,IAAIwF,EAAYxF,EAAEoF,MAAMpe,GAAQ,GAMhC,GAJIwe,GAAaA,EAAUnhB,OAAS,IACjC2H,EAASwZ,GAGRxZ,EAAO3H,OAAS,EAAG,CAEpB,IAAI2gB,EAAWhF,EAAE2D,MAAM3c,GAAQ,GAE3Bge,GAAYA,EAAS3gB,OAAS,IAC/B2H,EAASgZ,GAERhZ,EAAO3H,OAAS,GACjBkhB,EAASvF,EAEf,IAGT,CA4BSuF,CAASrnB,QAOXA,KAAKmnB,SACND,EAAQlnB,KAAKmnB,QACHhhB,QACP+gB,EAAMjjB,SAASmP,IACZ,IAAIgU,EAAWhU,EAAE8T,OAAM,KAAM,IAAM,GAC/BE,GAAYA,EAASjhB,SACtB+gB,EAAQA,EAAMK,OAAOH,GACxB,IAMLpnB,KAAKykB,SACNgB,EAAQzlB,KAAKykB,QACHte,QACPsf,EAAMxhB,SAAS6d,IAEZ,IAAIwF,EAAYxF,EAAEoF,OAAM,KAAM,IAAM,GAChCI,GAAaA,EAAUnhB,SACxB+gB,EAAQA,EAAMK,OAAOD,IAGxB,IAAIR,EAAWhF,EAAE2D,OAAM,KAAM,IAAM,GAC/BqB,GAAYA,EAAS3gB,SACtBsf,EAAQA,EAAM8B,OAAOT,GACrBA,EAAS7iB,SAASqP,IACf,IAAI8T,EAAW9T,EAAI4T,OAAM,KAAM,IAAM,GACjCE,GAAYA,EAASjhB,SACtB+gB,EAAQA,EAAMK,OAAOH,GACxB,IAEN,IAKTtZ,EAASA,EAAOyZ,OAAO9B,EAAOyB,KAjGvBpZ,CAqGb,CAOA0Z,QAAQ9W,EAAK,MAAM,IAChB,OAAO+N,EAAcgJ,SAAS/W,EACjC,CAcAgX,gBAAgB5e,EAAS,MAAM,IAC5B,OAAO9I,KAAK+B,GAAG4lB,SAASC,IACkB,GAAhC5nB,KAAKikB,SAAS5W,QAAQua,EAAEhnB,MAC/BkI,OAAOA,EACb,CAWA+e,gBAAgB/e,EAAS,MAAM,GAAM6E,GAElC,MAAMqY,EAASrY,GAAQ,EAAEC,EAAGC,IAAMD,EAAExM,MAAM6kB,cAAcpY,EAAEzM,QAC1D,OAAOpB,KAAK+B,GAAG4lB,SAASC,GACd5nB,KAAKikB,SAAS5W,QAAQua,EAAEhnB,KAAO,IAErCkI,OAAOA,GACP6E,KAAKqY,EACZ,CAiCA8B,WAAWC,GACR,IAAIC,EAAQD,EAAQE,MAAM,KAEtBC,EAAY,CAACpQ,EAAKqQ,KAEnB,GAAoB,GAAhBA,EAAMhiB,OACP,OAAO2R,EAIV,IAAIzT,EAAM8jB,EAAM5T,QAIhB,GAAW,KAAPlQ,EACD,OAAO6jB,EAAUloB,KAAMmoB,GAK1B,GAAIhb,MAAMC,QAAQ0K,GAIf,OAHAA,EAAMA,EAAIhP,QAAO,SAAUgd,GACxB,OAAOA,EAAEllB,IAAMyD,CAClB,IAAG,GACI6jB,EAAUpQ,EAAKqQ,GAIzB,GAAIrQ,GAAOA,EAAIzT,GACZ,OAAO6jB,EAAUpQ,EAAIzT,GAAM8jB,GAG9B,GAAW,YAAP9jB,EAAmB,CACpBmE,QAAQ+G,MAAM,IAAIjH,MAAM,0CAGxB,IAAI1H,EAAKunB,EAAM5T,QACf,OAAO2T,EAAUloB,KAAK+B,GAAGgW,WAAWnX,GAAKunB,EAC5C,CAKA,OADA3f,QAAQ+G,MAAM,4BAA8BwY,GACrC,IAAI,EAGd,OAAOG,EAAUloB,KAAMgoB,EAC1B,CAUAI,WAAWC,GAGR,OAAIA,EAAkB,KAAOroB,KAAKY,GAAK,IAC3B,IACf,CAUA0nB,UAAUD,GACP,OAAOroB,KAAKooB,WAAWC,GAAa,WACvC,CAUAE,QAAQF,GACL,OAAOroB,KAAKooB,WAAWC,GAAa,SACvC,CAUAG,SAASH,GACN,OAAOroB,KAAKooB,WAAWC,GAAa,WACvC,CAKII,uBACD,OAAOzoB,KAAK8kB,mBAAmBC,MAClC,CAEI0D,qBAAiB1D,GAClB/kB,KAAK8kB,mBAAmBC,OAASA,CACpC,CAEI2D,2BACD,OAAO1oB,KAAK8kB,mBAAmBE,UAClC,CAEI0D,yBAAqB1D,GACtBhlB,KAAK8kB,mBAAmBE,WAAaA,CACxC,CAEI2D,8BACD,OAAO3oB,KAAK8kB,mBAAmBG,aAClC,CAEI0D,4BAAwB1D,GACzBjlB,KAAK8kB,mBAAmBG,cAAgBA,CAC3C,CAEI2D,wBACD,OAAO5oB,KAAK8kB,mBAAmBI,OAClC,CAEI0D,sBAAkB1D,GACnBllB,KAAK8kB,mBAAmBI,QAAUA,CACrC,CAiBAZ,QAAQ3e,GAKL,OAFAA,EAAOtB,IAAM,OAENoa,EAAcoK,QAAQljB,EAAQ3F,KAAM,KAC9C,CASA8oB,SAASloB,GACN,OAAOZ,KAAKylB,OAAOze,GAAMA,EAAEpG,IAAMA,IAAI,EACxC,CASAmoB,QAAQpjB,EAAQZ,EAAagQ,GAC1B,OAAO0J,EAAcoK,QAAQljB,EAAQZ,EAAagQ,EACrD,CAMArP,YAIG,MAHuB,IAAI4C,MACxB,2EAKN,mBC35BH,MAAMya,EAAY,EAAQ,OAM1B,IAAIiG,EAAgB,CACjBpoB,GAAI,OACJQ,MAAO,GACP6D,OAAQ,CAAC,EACTgkB,MAAO,CAAC,EACR7iB,SAAU,CACP8iB,aAAc,GACdC,qBAAsB,GACtBC,YAAa,GACbC,gBAAiB,CACdC,iBAAkB,CAEfC,KAAM,MACNpI,MAAO,IAEV5U,WAAY,IAEfid,SAAS,EAETvgB,UAAU,EACVwgB,SAAS,EAETC,UAAW,GAEXC,SAAU,IAIhB,MAAMC,EAAmB,GAGzB,IAAIC,EAAc,KAElB,SAASC,IAMN,GAA+B,GAA3BF,EAAiBzjB,OAArB,CAMA,IAAI4jB,EAAKH,EAAiBrV,QAC1BwV,EAAGrZ,KACHmZ,EAAclV,WAAWmV,EAAUC,EAAG7X,QAHtC,MAFG2X,EAAc,IAMpB,CACA,SAASG,EAAetZ,EAAIwB,EAAU,IACnC0X,EAAiBtlB,KAAK,CAAEoM,KAAIwB,YACvB2X,GACFC,GAEN,CAEArqB,EAAOC,QAAU,cAAmCqjB,EACjDpjB,YAAYqjB,EAAYjhB,GACrBjC,MAAM,CAAC,SAAUiC,GAEjBihB,EAAaA,GAAc,CAAC,EAI5BhjB,KAAKiG,WAAW+c,GAEhBhjB,KAAKiqB,iBAAmBjqB,KAAKkqB,mBAAmB,IAOhDlqB,KAAKmqB,0BAELnqB,KAAKoqB,mBAAqB,GAC1BpqB,KAAKqqB,mBAAqB,GAM1BrqB,KAAKsqB,YAActqB,KAAKuqB,eAAeC,WAEvCxqB,KAAKyqB,aAAe,IAIvB,CAYAC,oBACG,MAAO,gBACV,CAQAzkB,WAAWN,GA4FR,GA3FA3F,KAAKY,GAAK+E,EAAO/E,GAIjBZ,KAAKmH,KAAOxB,EAAOwB,MAAQ,KAI3BnH,KAAK4B,KAAO+D,EAAO/D,MAAQ,iBAI3B+D,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAIlCpG,KAAKoG,SAAS+iB,qBACXxjB,EAAOS,SAAS+iB,sBAChBH,EAAc5iB,SAAS+iB,qBAK1BnpB,KAAKoG,SAASgjB,YACXzjB,EAAOS,SAASgjB,aAAeJ,EAAc5iB,SAASgjB,YAKzDppB,KAAKoG,SAASijB,gBAAkB1jB,EAAOS,SAASijB,iBAAmB,CAChEC,iBACGN,EAAc5iB,SAASijB,gBAAgBC,iBAC1C/c,WAAYyc,EAAc5iB,SAASijB,gBAAgB9c,YAMtDvM,KAAKoG,SAASsjB,UAAY/jB,EAAOS,SAASsjB,UAG1C1pB,KAAKoG,SAASojB,QAAU3V,KAAK0D,MAC1B5R,EAAOS,SAASojB,SAAWR,EAAc5iB,SAASojB,SAKrDxpB,KAAKoG,SAASqjB,QAAU5V,KAAK0D,MAC1B5R,EAAOS,SAASqjB,SAAWT,EAAc5iB,SAASqjB,SAMrDzpB,KAAKoG,SAAS6C,SAEqB0hB,MAA5BhlB,EAAOS,SAAS6C,SACVtD,EAAOS,SAAS6C,SAGY,GAAnCtD,EAAOS,SAASwkB,iBACmB,KAAnCjlB,EAAOS,SAASwkB,iBAGL5B,EAAc5iB,SAAS6C,SAQxCjJ,KAAKoG,SAASujB,SAAWrE,SACtB3f,EAAOS,SAASujB,UAAYX,EAAc5iB,SAASujB,UAMtD3pB,KAAK6qB,aAAe,KAKpB7qB,KAAKoG,SAAS8iB,aACXvjB,EAAOS,SAAS8iB,cAAgBF,EAAc5iB,SAAS8iB,aAKtDlpB,KAAKoG,SAAS8iB,aAAc,CAE7B,IAAIpR,EAAM9X,KAAK+B,GAAGgW,WAAW/X,KAAKoG,SAAS8iB,cACtCpR,IAEFA,EAAM9X,KAAK+B,GAAG+oB,UAAU9qB,KAAKoG,SAAS8iB,eAGrCpR,GACD9X,KAAK6qB,aAAe/S,EACpB9X,KAAKoG,SAASqjB,QAAuB,UAAb3R,EAAIlW,KACxB5B,KAAKoG,SAASqjB,SACXzpB,KAAK6qB,aAAa3F,UACdllB,KAAK+qB,mBACP/qB,KAAK+qB,iBAAmB/qB,KAAKgrB,sBAKhChrB,KAAKirB,WAAY,IAIvBziB,QAAQ+G,MACL,oBAAoBvP,KAAKmH,SAASnH,KAAKY,kCAAkCZ,KAAKoG,SAAS8iB,gBAGhG,CAsBAppB,MAAMmG,WAAWN,EACpB,CAaAG,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,MAAO,CACJlF,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,MAAQnH,KAAKoB,MACxBQ,KAAM5B,KAAK4B,MAAQ,iBACnBwE,SAAUpG,KAAK+B,GAAG2D,UAAU1F,KAAKoG,UAAY,CAAC,GAC9C+e,aAAcrN,EAAIqN,aAExB,CAWAhgB,aAKG,OAJKnF,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,YAE7BrH,MAAM8H,OACL5H,IACV,CAWA4U,UACG,IAAIsW,EAAyB,IACnB,IAAIzb,SAAQ,CAAC0b,EAAMhjB,KACvBnI,KAAK+B,GAAGqpB,eAAe5W,MAAM6W,IAG1B,IAAIC,EAAa,GASjB,OAPqBD,EAAKviB,QAAQ8E,GACxBA,EAAEmY,yBAAyBD,GAAMA,EAAEllB,IAAMZ,KAAKY,OAEzCqD,SAASsnB,IACrBD,EAAWhnB,KAAKinB,EAAIC,qBAAqBxrB,MAAM,IAG3CyP,QAAQ4R,IAAIiK,GAAY9W,KAAK2W,GAAM1W,MAAMtM,EAAI,GACrD,IAIR,OAAOsH,QAAQC,UACX8E,MAAK,IACI0W,MAET1W,MAAK,IACI1U,MAAM8U,YAEfJ,MAAK,KACHxU,KAAKwP,KAAK,YAAY,GAE/B,CAOIic,UACD,OAAOzrB,KAAKiqB,gBACf,CAQIyB,iBACD,IAAK1rB,KAAK6qB,aAAc,CACrB,GAAI7qB,KAAKY,IAAMZ,KAAKmH,KAAM,CAGvB,IAAIgB,EAAM,IAAIG,MACX,kBAAkBtI,KAAKmH,SAASnH,KAAKY,oCAExCZ,KAAK+B,GAAGqG,OAAO,UAAWD,EAAK,CAAEwjB,eAAgB3rB,KAAK8F,SACzD,CACA,OAAO,IACV,CACA,IAAIgS,EAAM9X,KAAK+B,GAAGgW,WAAW/X,KAAK6qB,aAAajqB,IAI/C,OAHKkX,IACFA,EAAM9X,KAAK+B,GAAG+oB,UAAU9qB,KAAK6qB,aAAajqB,KAEtCkX,CACV,CAQI4T,eAAWzmB,GACZjF,KAAK6qB,aAAe5lB,EAEpBjF,KAAKmqB,yBACR,CAQIyB,iBACD,OAAO5rB,KAAKoG,SAASqjB,QAAU,QAAU,QAC5C,CAQIoC,yBACD,OAAK7rB,KAAK+B,GAEH/B,KAAK+B,GAAG+pB,mBAAmB9rB,KAAKoG,SAAS+iB,sBAF3B,IAGxB,CAQI4C,gBACD,IAAI9mB,EAASjF,KAAK0rB,WAClB,OAAKzmB,EAEEA,EAAO8I,UAAU/N,KAAKoG,SAASgjB,aAFlB,IAGvB,CAQIphB,YACD,IAAI/C,EAASjF,KAAK0rB,WAElB,OAAOzmB,EAASA,EAAO+C,QAAU,IACpC,CAEIuiB,qBACD,MAAO,CACJC,WAAY,EACZwB,aAAc,EACdC,YAAa,EAEnB,CAEIC,iBACD,OAAOlsB,KAAKsqB,WACf,CAMA6B,UAAUC,GAEP,GACGpsB,KAAKoG,SAASsjB,YACc,uBAA3B1pB,KAAKoG,SAASsjB,WACZ1pB,KAAKoG,SAASsjB,WAAa0C,GAE9B,OAEH,GAAIpsB,KAAK+qB,iBAAkB,CAExB/qB,KAAKqsB,cAAcD,GAGnB,IAAIE,EAAatsB,KAAK+qB,iBAAiBwB,YACvC,GAAID,EAAY,CACb,IAAIE,EAAexsB,KAAK+qB,iBAAiB0B,QAAQH,GAC7CE,IAAcJ,EAASI,EAAaE,QAC3C,CACH,CAEA,IAAIC,EAAK3sB,KAAKiqB,iBACV0C,IAEa,MAAVP,EACDO,EAAGR,UAAU,MAGPQ,EAAGJ,aAAeH,EACxBpsB,KAAKwP,KAAK,eAAgBxP,KAAKusB,aAGzBI,EAAGC,OAAOR,IAChBO,EAAGR,UAAUC,GAGtB,CAMAC,cAAcD,GACX,IAAIS,EAAK7sB,KAAK+qB,iBACd,GAAI8B,GAAMA,EAAGN,aAAeH,EAGzB,GADiBS,EAAGC,KAAK,CAAElsB,GAAIwrB,IAAU,GAEtCS,EAAGV,UAAUC,OAGX,CACF,IAAIW,EAAWF,EAAGC,KAAK,CAAEJ,QAASN,EAAQY,QAAS,IAAK,GACpDD,EAAUF,EAAGV,UAAUY,EAASnsB,IAC/BisB,EAAGV,UAAU,KACrB,CAEN,CAEAI,UAAUU,GAAa,GAEpB,GAAIA,GAAcjtB,KAAK+qB,iBAAkB,CACtC,IAAImC,EAASltB,KAAK+qB,iBAAiBwB,YACnC,GAAIW,EAAQ,CACT,IAAIC,EAAWntB,KAAK+qB,iBAAiB0B,QAAQS,GAG7CltB,KAAK+qB,iBAAiBjiB,QAClBsF,GAASA,EAAKse,SAAWS,EAAST,UAItC,IAAIU,EACDptB,KAAK+qB,iBAAiBsC,YAAY,IAAM,KAK3C,OAFArtB,KAAKstB,oBAEEF,CACV,CACH,CAEA,IAAIT,EAAK3sB,KAAKiqB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGJ,YAGhB,OAFeI,EAAGF,QAAQS,EAG7B,CAEAK,iBACG,IAAIZ,EAAK3sB,KAAKiqB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGa,aAGhB,OAFeb,EAAGF,QAAQS,EAG7B,CAEAO,cAAcC,GACX,IAAIf,EAAK3sB,KAAKiqB,iBACd,GAAU,MAAN0C,EAAY,OAAO,KAEvB,IAAIO,EAASP,EAAGgB,UAAUD,EAAO9sB,IAGjC,OAFe+rB,EAAGF,QAAQS,EAG7B,CAQAI,oBAQG,IAAIM,EACAC,EAAS7tB,KAAK6rB,mBACdgC,IACDD,EAAaC,EAAOtB,aAGvB,IAAIuB,EAAcC,GAEG,MAAdH,GACQ5tB,KAAKguB,oBAAoBD,GAGpC/tB,KAAKiqB,kBAAkBjqB,KAAKiqB,iBAAiBnhB,OAAOglB,GACpD9tB,KAAK+qB,kBAAkB/qB,KAAK+qB,iBAAiBjiB,OAAOglB,EAC3D,CAEAG,kBACG,GAAIjuB,KAAKoG,SAASsjB,UAEf,GAA+B,gBAA3B1pB,KAAKoG,SAASsjB,UAA6B,CAC5C,IAAI9Y,EAAW5Q,KAAKkuB,sBAChBC,EAAanuB,KAAK0rB,WAAW3kB,QAAQC,GAAe,QAATA,EAAE3C,MAG7C6a,EAAMlf,KAAKiqB,iBAAiB6C,MAAMld,IACnC,IAAIwe,GAAQ,EAeZ,OAbAD,EAAWlqB,SAAS+C,IACbonB,GAA4B,MAAnBxe,EAAE5I,EAAEF,cAEb8I,EAAE5I,EAAEF,YAAYgC,OAEjBslB,EACGxe,EAAE5I,EAAEF,YAAYgC,QAAQe,GAASA,EAAKjJ,IAAMgQ,IACxCzK,OAAS,EACRyJ,EAAE5I,EAAEF,aAAe8J,IAC3Bwd,GAAQ,GACX,IAGIA,CAAK,IACZ,GAGClP,IACDlf,KAAKiqB,iBAAiBkC,UAAUjN,EAAIte,IAEpCZ,KAAKqsB,cAAcnN,EAAIte,IAE7B,MAAO,GACuB,gBAA3BZ,KAAKoG,SAASsjB,WACa,uBAA3B1pB,KAAKoG,SAASsjB,UACf,CAgBC,IAAI2E,EAAYruB,KAAKiqB,iBAAiBsC,YACtC,IACI8B,GACAA,IAAcruB,KAAKiqB,iBAAiB2C,OAAOyB,GAC7C,CAIC,IAAIC,EAAQtuB,KAAKiqB,iBAAiBuD,aAElCxtB,KAAKiqB,iBAAiBkC,UAAUmC,GAAS,MAEzCtuB,KAAKqsB,cAAciC,EAEtB,CACH,MACGtuB,KAAKiqB,iBAAiBkC,UAAUnsB,KAAKoG,SAASsjB,WAE9C1pB,KAAKqsB,cAAcrsB,KAAKoG,SAASsjB,UAG1C,CAaA6E,gBAAgBC,EAAO,MACpBxuB,KAAKyqB,aAAe+D,CACvB,CAEAlrB,OAEG,GAAItD,KAAKisB,YAAa,OACtBjsB,KAAKisB,aAAc,EAEdjsB,KAAKiqB,iBAAiBwE,MAAMC,sBAC9B1uB,KAAKiqB,iBAAiBwE,MAAMC,oBACzB1uB,KAAKiqB,iBAAiB0E,YAAY,uBAAuB,KAEtD,IAAIC,EAAW5uB,KAAKusB,YAEpBvsB,KAAKwP,KAAK,eAAgBof,EAAS,KAK5C,IAAIC,EAAY,CAACC,EAAYR,EAAOS,EAAK,OAClC5hB,MAAMC,QAAQ0hB,GACRA,EAAWhmB,QAAQsK,IAAOA,EAAE2b,IAAO3b,IAAMkb,IAAOnoB,OAAS,EAEzD2oB,IAAeA,EAAWC,IAAOD,IAAeR,EAK7DtuB,KAAKoC,GAAG,4BAA6ByH,IAElC,IAAIiO,EAAM9X,KAAK0rB,WACf,IAAK5T,EAAK,OAEV,IAAKjO,IAASA,EAAKA,KAAM,OAEzB,IAAImlB,GAAU,EACVC,EAAc,GAElBxf,QAAQC,UACJ8E,MAAK,IACI,IAAI/E,SAAQ,CAAC0b,EAAM+D,KAEvB,GAAIpX,aAAe9X,KAAK+B,GAAGwc,MAAM4Q,cAAe,CAC7C,IAAIC,EACDtX,EAAIqO,SAASL,GAAMA,EAAEllB,IAAMiJ,EAAKmO,YAAa,GAIhD,GAFAgX,EAAUI,EAAQjpB,OAAS,GAEtB6oB,EAAS,OAAO7D,IAErB,IAAIkE,EAAQ,CACT9F,KAAM,KACNpI,MAAO,IAGViO,EAAQnrB,SAAS6hB,IACd,IAAIwJ,EAAYzlB,EAAKA,KAAK,GAAGic,EAAEiJ,QAC1BO,GAELD,EAAMlO,MAAM7c,KAAK,CACdD,IAAK,GAAGyhB,EAAEyJ,OAASzX,EAAI0X,YAAY1J,EAAEllB,OAAOklB,EAAEiJ,OAC9CU,KAAM,SACN9sB,MAAO2sB,GACR,IAGLxX,EAAI9P,QACA0nB,QAAQ,CACNL,MAAOA,IAET7a,MAAMmb,IACJV,EAAcU,EAAa9lB,MAAQ,GACnColB,EAAYhrB,SAASmP,WACXA,EAAExS,EAAE,IAGduqB,GAAM,IAER1W,MAAMya,EACb,MAGGF,EAAUlX,EAAIlX,IAAMiJ,EAAKmO,SACzBiX,EAAc,CAACplB,EAAKA,MACpBshB,GACH,MAGL3W,MAAK,KAmGH,GAlGIwa,IAEWlX,EAAI9P,QACViQ,cAAcgX,IAEnBA,GAAe,IAAIhrB,SAAS2rB,IAErB5vB,KAAK6vB,YAAYD,KAKlB5vB,KAAKiqB,iBAAiB2C,OACpBgD,EAAS,GAAG9X,EAAIiX,UAElB/uB,KAAK8vB,gBAML9vB,KAAKiqB,iBAAiB2C,OACpBgD,EAAS,GAAG9X,EAAIiX,UAEnB/uB,KAAK8vB,gBAGD9vB,KAAKguB,oBAAoB4B,IAGvB5vB,KAAKoqB,mBAAmB7C,OACrBvnB,KAAKqqB,oBAEQpmB,SAAS8rB,IAEzB,GAAIpsB,GAAGosB,EAAQ,eACZ,OAAO,EAIV,IAAIC,EAAM,EACNjb,EAASpR,GAAGosB,GAAOtkB,gBACnB9H,GAAGosB,GAAOtkB,gBAAgBM,MAC3BikB,EAAMrsB,GAAGosB,GACLtkB,gBACAM,MAAMpI,GAAGosB,IAEbpsB,GAAGosB,GAAOtkB,gBAAgBA,gBAAgBM,QAK1CgJ,EAASpR,GAAGosB,GACRtkB,gBACAA,gBACJukB,EAAMrsB,GAAGosB,GACLtkB,gBACAA,gBACAM,MAAMpI,GAAGosB,GAAOtkB,kBAIvB,IAAIwkB,EAAKjwB,KAET,GAAI+U,EAAO9J,QAAS,CACjB,IAAIlL,EAAIC,KAAK+B,GAAG9B,QAChB8U,EAAO9J,QACJ,CACGrK,GAAImvB,EAAQ,cACZrvB,KAAM,SACNiC,MAAO5C,EACJ,wCAEHmB,IAAK,2BACLK,MAAO,SAAUX,EAAIsvB,GAClBD,EAAGE,aACHxsB,GAAG/C,GAAI6K,gBAAgBD,WAAW5K,EACrC,GAEHovB,EAEN,MAhENhwB,KAAKiqB,iBAAiB/I,IAAI0O,EAAU,GACpC5vB,KAAKwP,KAAK,SAAUogB,IAmEvB,IAIA5vB,KAAK+qB,kBAEL/qB,KAAKowB,oBAAoB,CACtBvmB,KAAMolB,OAMTnX,aAAe9X,KAAK+B,GAAGwc,MAAM4Q,eAAgB,CAEhD,IAAI7I,EAAkBtmB,KAAK0rB,WAAWnF,eAClCvf,GACEA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKmO,WAOtD,GAHAiX,EAAcA,EAAY,GAIvBA,GACA3I,GACAA,EAAgBngB,OAAS,EAC1B,CAEC,IAAI4oB,EAAKzI,EAAgB,GAAGrhB,OAAO8pB,KAC9BE,EAAYruB,IAAY,MAANmuB,IACpBE,EAAYruB,GAAKquB,EAAYF,IAEhC/uB,KAAKiqB,iBAAiB6C,KAAK,CAAC,GAAG7oB,SAASosB,IACrC,IAAIC,EAAiB,CAAC,EAEtBhK,EAAgBriB,SAAS+C,IACtB,IAAIupB,EAAkB,CAAC,EACnBvpB,GAAKA,EAAE+kB,YACRwE,EACGtB,EAAYjoB,EAAE+kB,UAAUyE,iBAAmB,CAAC,GAGlD,IAAIC,EAAeJ,EAAErpB,EAAEwpB,iBAAmB,CAAC,EAEvCE,EAAe7B,EAChB0B,EACAF,EAAEzvB,GACFmuB,GAKA5hB,MAAMC,QAAQqjB,IACdA,EAAa3nB,QACTsK,GACEA,GAAK6b,EAAYruB,IACjBwS,EAAExS,IAAMquB,EAAYruB,IACpBwS,EAAE2b,IAAOE,EAAYruB,KACzBuF,OAAS,GACXuqB,GAEAD,EAAansB,KAAK2qB,GAElBqB,EAAetpB,EAAEwpB,gBAAkBC,EACnCH,EAAetpB,EAAEF,YAAcwpB,EAC5BtpB,EAAEwpB,gBACHriB,KAAKiF,GAAMA,EAAExS,IAAMwS,EAAE2b,IAAO3b,KAE7BjG,MAAMC,QAAQqjB,IACdA,GAAgBxB,EAAYruB,IAC1B6vB,EAAa7vB,IAAMquB,EAAYruB,IAC/B6vB,EAAa1B,IAAOE,EAAYruB,KACnC8vB,IAEAJ,EAAetpB,EAAEwpB,gBAAkBvB,EACnCqB,EAAetpB,EAAEF,YACdmoB,EAAYruB,IAAMquB,EACxB,IAIC9a,OAAOC,KAAKkc,GAAgBnqB,OAAS,IAE1B2R,EAAI9P,QACViQ,cAAcqY,GAEpBtwB,KAAKiqB,iBAAiB0G,WACnBN,EAAEzvB,GACF0vB,GAGCtwB,KAAK+qB,kBACN/qB,KAAK+qB,iBAAiB4F,WACnBN,EAAEzvB,GACF0vB,GAGNtwB,KAAKwP,KACF,SACAxP,KAAKiqB,iBAAiBwC,QAAQ4D,EAAEzvB,KAEtC,GAEN,CACH,CAGAZ,KAAKstB,oBACLttB,KAAKiuB,iBAAiB,GACvB,IAGRjuB,KAAKoC,GAAG,4BAA6ByH,IAOlC,IAAIiO,EAAM9X,KAAK0rB,WACf,IAAK5T,EAAK,OAGV,IAAInS,EAASkE,EAAKA,KAClB,IAAKlE,EAAQ,OAEb,IAAIirB,GAAa,EACbC,GAAW,EACXC,EAAa,GAKbC,EAAiB,GACjB9B,EAAc,CAAC,EAGnB,GAAInX,aAAe9X,KAAK+B,GAAGwc,MAAM4Q,cAAe,CAC7C,IAAIC,EAAUtX,EAAIqO,SAASL,GAAMA,EAAEllB,IAAMiJ,EAAKmO,YAAa,GAC3D4Y,EAAaxB,EAAQjpB,OAAS,EAC1ByqB,KACAxB,GAAW,IAAInrB,SAAS6hB,IACtBgL,EAAaA,EAAWvJ,OACrBvnB,KAAKiqB,iBACD6C,MAAM1e,GAEDA,EACG,GAAGpO,KAAK0rB,WAAW8D,YAChB1J,EAAEllB,OACAklB,EAAEiJ,UACJppB,EAAOmgB,EAAEiJ,OAASppB,EAAO/E,MAGpCuN,KAAK2X,GAAMA,EAAEllB,MAAO,IAIvBZ,KAAK+qB,mBACNgG,EAAiBA,EAAexJ,OAC7BvnB,KAAK+qB,iBACD+B,MAAM1e,GAEDA,EACG,GAAGpO,KAAK0rB,WAAW8D,YAChB1J,EAAEllB,OACAklB,EAAEiJ,UACJppB,EAAOmgB,EAAEiJ,OAASppB,EAAO/E,MAGpCuN,KAAK2X,GAAMA,EAAEllB,MAAO,IAE9B,IAGHiwB,EAAWC,EAAW3qB,OAAS,EAE/B8oB,EAAcjvB,KAAKgxB,iBAAiB5B,EAASzpB,GAEnD,MAGGirB,EAAa9Y,EAAIlX,IAAMiJ,EAAKmO,SACxB4Y,IAEIjrB,EAAO/E,IAAkB,MAAZkX,EAAIiX,OAAcppB,EAAO/E,GAAK+E,EAAOmS,EAAIiX,OAE3D+B,EAAWxsB,KAAKqB,EAAO/E,IAEvBiwB,EAAW7wB,KAAKiqB,iBAAiB2C,OAAOjnB,EAAO/E,IAC/CquB,EAActpB,GAKpB,GAAIirB,EACD,GAAIC,EACD,GAAI7wB,KAAK6vB,YAAYZ,GAAc,CAO5BjvB,KAAKiqB,mBACN6G,EAAa9wB,KAAK+B,GAAGygB,KAAKsO,GAC1BA,EAAW7sB,SAASmoB,IACjBpsB,KAAKiqB,iBAAiB0G,WAAWvE,EAAQ6C,EAAY,KAIvDjvB,KAAK+qB,mBAENgG,EAAiB/wB,KAAK+B,GAAGygB,KAAKuO,GAC9BA,EAAe9sB,SAASmoB,IACrBpsB,KAAK+qB,iBAAiB4F,WAAWvE,EAAQ6C,EAAY,KAI3DjvB,KAAKwP,KAAK,SAAUyf,GAGpB,IAAIL,EAAW5uB,KAAKusB,YAChBqC,GAAYA,EAAShuB,IAAMquB,EAAYruB,IACxCZ,KAAKwP,KAAK,eAAgBof,EAEhC,MAIGkC,EAAW7sB,SAASrD,IAEjB,IAAIguB,EAAW5uB,KAAKusB,YAChBqC,GAAYA,EAAShuB,IAAMA,GAC5BZ,KAAKwP,KAAK,eAAgB,MAE7BxP,KAAKiqB,iBAAiBpP,OAAOja,GAO7BZ,KAAKwP,KAAK,SAAU5O,EAAG,SAKvBZ,KAAK6vB,YAAYZ,KAGvBjvB,KAAKiqB,iBAAiB/I,IAAI+N,EAAa,GAEnCjvB,KAAK+qB,kBACN/qB,KAAKowB,oBAAoB,CACtBvmB,KAAM,CAAColB,KAGbjvB,KAAKwP,KAAK,SAAUyf,IAK1B,IAAI3I,EAAkBxO,EAAIyO,eACtBvf,GAAMA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKmO,WAI1D,GACGF,aAAe9X,KAAK+B,GAAGwc,MAAM0S,UAC7B3K,GACAA,EAAgBngB,OAAS,EAC1B,CAEC,IAAI4oB,EAAKzI,EAAgB,GAAGrhB,OAAO8pB,KAC9BppB,EAAO/E,IAAY,MAANmuB,IAAYppB,EAAO/E,GAAK+E,EAAOopB,IAE7C/uB,KAAKiqB,iBAAiBiH,QAAU,GACjClxB,KAAKiqB,iBAAiB6C,KAAK,CAAC,GAAG7oB,SAASosB,IACrC,IAAIC,EAAiB,CAAC,EAEtBhK,EAAgBriB,SAAS+C,IACtB,IAAKA,EAAG,OAER,IAAIupB,EAAkB,CAAC,EACnBE,EAAeJ,EAAErpB,EAAEwpB,iBAAmB,CAAC,EAEvCxpB,EAAE+kB,YACHwE,EACG5qB,EAAOqB,EAAE+kB,UAAUyE,iBAAmB,CAAC,GAE7C,IAAIE,EAAe7B,EAAU0B,EAAiBF,EAAEzvB,GAAImuB,GAIjD5hB,MAAMC,QAAQqjB,IACdA,EAAa3nB,QACTsK,GACEA,GAAKzN,EAAO/E,IACZwS,EAAExS,IAAM+E,EAAO/E,IACfwS,EAAE2b,IAAOppB,EAAO/E,KACpBuF,OAAS,IACVuqB,GAEDJ,EAAetpB,EAAEwpB,gBAAkBC,EAAa3nB,QAC5CsK,IAAOA,EAAExS,IAAMwS,EAAE2b,IAAO3b,IAAMzN,EAAO/E,KAEzC0vB,EAAetpB,EAAEF,YAAcwpB,EAC5BtpB,EAAEwpB,gBACHriB,KAAKiF,GAAMA,EAAExS,IAAMwS,EAAE2b,IAAO3b,KAE7BjG,MAAMC,QAAQqjB,IACdA,GAAgB9qB,EAAO/E,IACrB6vB,EAAa7vB,IAAM+E,EAAO/E,IAC1B6vB,EAAa1B,IAAOppB,EAAO/E,IAC7B8vB,IAEDJ,EAAetpB,EAAEwpB,gBAAkB,KACnCF,EAAetpB,EAAEF,YAAc,MAI9BqG,MAAMC,QAAQqjB,IAAiBC,GAG7BD,EAAa3nB,QACTsK,GACEA,GAAKzN,EAAO/E,IACZwS,EAAExS,IAAM+E,EAAO/E,IACfwS,EAAE2b,IAAOppB,EAAO/E,KACpBuF,OAAS,EAEXsqB,EAAaxsB,SAAQ,CAACmP,EAAGrH,KAEnBqH,GAAKzN,EAAO/E,IACZwS,EAAExS,IAAM+E,EAAO/E,IACfwS,EAAE2b,IAAOppB,EAAO/E,KAEhB6vB,EAAa1kB,GAASpG,EAAM,IAKlC8qB,EAAansB,KAAKqB,GAGrB2qB,EAAetpB,EAAEwpB,gBAAkBC,EACnCH,EAAetpB,EAAEF,YAAcwpB,EAC5BtpB,EAAEwpB,gBACHriB,KAAKiF,GAAMA,EAAExS,IAAMwS,EAAE2b,IAAO3b,KAE7BjG,MAAMC,QAAQqjB,IACdA,GAAgB9qB,EAAO/E,IACrB6vB,EAAa7vB,IAAM+E,EAAO/E,IAC1B6vB,EAAa1B,IAAOppB,EAAO/E,KAC9B8vB,IAEAJ,EAAetpB,EAAEwpB,gBAAkB7qB,EACnC2qB,EAAetpB,EAAEF,YAAcnB,EAAO/E,IAAM+E,EAC/C,IAICwO,OAAOC,KAAKkc,GAAgBnqB,OAAS,IAE1B2R,EAAI9P,QACViQ,cAAcqY,GAEjBtwB,KAAK+qB,kBACL/qB,KAAK+qB,iBAAiB6B,OAAOyD,EAAEzvB,KAE/BZ,KAAK+qB,iBAAiB4F,WAAWN,EAAEzvB,GAAI0vB,GAGvCtwB,KAAKiqB,kBACLjqB,KAAKiqB,iBAAiB2C,OAAOyD,EAAEzvB,MAE/BZ,KAAKiqB,iBAAiB0G,WAAWN,EAAEzvB,GAAI0vB,GACvCtwB,KAAKwP,KACF,SACAxP,KAAKiqB,iBAAiBwC,QAAQ4D,EAAEzvB,MAGzC,GAGT,CAEAZ,KAAKstB,oBACLttB,KAAKiuB,iBAAiB,IAKzBjuB,KAAKoC,GAAG,2BAA4ByH,IAIjC,GACI7J,KAAK0rB,YACL1rB,KAAKgI,OACNhI,KAAK0rB,WAAW9qB,IAAMiJ,EAAKmO,SAH9B,CASA,IAAIrS,EAASkE,EAAKA,KAElB,GAAKlE,EAAL,CAGA,IAAIopB,EAAK/uB,KAAKgI,MAAM/C,OAAO8pB,KAK3B,GAJKppB,EAAOopB,KACTA,EAAK,MAGJppB,GACG3F,KAAKiqB,iBAAiB2C,OAAOjnB,EAAOopB,IAAM,CAC3C,IAAIP,EAAO,CAAEa,MAAO,CAAC,GACrBb,EAAKa,MAAMN,GAAMppB,EAAOopB,GAExB/uB,KAAKgI,MAAMmpB,aAAa3C,GAAMha,MAAM4F,IAEjC,GAAIjN,MAAMC,QAAQgN,EAAIvQ,OAASuQ,EAAIvQ,KAAK1D,OAAQ,CAE7C,IAAI2R,EAAM9X,KAAK0rB,WACf,IAAK5T,EAAK,OAEEA,EAAI9P,QACViQ,cAAcmC,EAAIvQ,KAAK,IAEzB7J,KAAKiqB,iBAAiB2C,OAAOjnB,EAAOopB,KACrC/uB,KAAKiqB,iBAAiB0G,WACnBhrB,EAAOopB,GACP3U,EAAIvQ,KAAK,IAKf,IAAI+kB,EAAW5uB,KAAKusB,YAChBqC,GAAYA,EAASG,IAAOppB,EAAOopB,IACpC/uB,KAAKwP,KAAK,eAAgBof,EAEhC,MAGgB5uB,KAAKusB,aACJ5mB,EAAOopB,IAAK/uB,KAAKwP,KAAK,eAAgB,MAEpDxP,KAAKiqB,iBAAiBpP,OAAOlV,EAAOopB,IACpC/uB,KAAKwP,KAAK,SAAU7J,EAAOopB,GAC9B,GAEN,CAIH/uB,KAAKstB,oBACLttB,KAAKiuB,iBAlDc,CALnB,CAuDsB,IAGzBjuB,KAAKoC,GAAG,4BAA6ByH,IAElC,IAAIiO,EAAM9X,KAAK0rB,WACf,IAAK5T,EAAK,OAEV,IAAIsZ,EAAWvnB,EAAKA,KAChBwnB,GAAa,EACbC,EAAa,GACbC,EAAiB,GAGrB,GAAIzZ,aAAe9X,KAAK+B,GAAGwc,MAAM4Q,cAAe,CAC7C,IAAIC,EAAUtX,EAAIqO,SAASL,GAAMA,EAAEllB,IAAMiJ,EAAKmO,YAAa,GAC3DqZ,EAAajC,EAAQjpB,OAAS,EAC1BkrB,IACAjC,GAAW,IAAInrB,SAAS6hB,IACtBwL,EACGtxB,KAAKiqB,iBACD6C,MAAM1e,GACGA,EAAK,GAAG0X,EAAEyJ,SAASzJ,EAAEiJ,SAAWqC,IAEzCjjB,KAAK2X,GAAMA,EAAEllB,MAAO,GAGvBZ,KAAK+qB,mBACNwG,EACGvxB,KAAK+qB,iBACD+B,MAAM1e,GACGA,EAAK,GAAG0X,EAAEyJ,SAASzJ,EAAEiJ,SAAWqC,IAEzCjjB,KAAK2X,GAAMA,EAAEllB,MAAO,GAC9B,GAGT,MAGGywB,EAAavZ,EAAIlX,IAAMiJ,EAAKmO,SACxBqZ,GACDC,EAAWhtB,KAAK8sB,GAKtB,GAAIC,EAAY,CAEb,IAAIzC,EAAW5uB,KAAKusB,YAEpB+E,EAAWrtB,SAASutB,IACb5C,GAAYA,EAAS9W,EAAIiX,OAASyC,GACnCxxB,KAAKwP,KAAK,eAAgB,MAEzBxP,KAAKiqB,iBAAiB2C,OAAO4E,IAC9BxxB,KAAKiqB,iBAAiBpP,OAAO2W,EAAM,IAGrCxxB,KAAK+qB,kBACNwG,EAAettB,SAASutB,IACjBxxB,KAAK+qB,iBAAiB6B,OAAO4E,IAC9BxxB,KAAK+qB,iBAAiBlQ,OAAO2W,EAAM,IAIxCF,EAAW,IAAItxB,KAAKwP,KAAK,SAAU8hB,EAAW,GACrD,CAGA,IAAIhL,EAAkBxO,EAAIyO,eACtBvf,GAAMA,EAAEJ,gBAAkBI,EAAEJ,eAAehG,IAAMiJ,EAAKmO,WAI1D,GACGF,aAAe9X,KAAK+B,GAAGwc,MAAM0S,UAC7B3K,GACAA,EAAgBngB,OAAS,EAC1B,CAEC,IAAI4oB,EAAKzI,EAAgB,GAAGrhB,OAAO8pB,KAEnC/uB,KAAKiqB,iBAAiB6C,KAAK,CAAC,GAAG7oB,SAASosB,IACrC,IAAIoB,EAAmB,CAAC,EAExBnL,EAAgBriB,SAAS+C,IACtB,IAAI0qB,EAAYrB,EAAErpB,EAAEwpB,gBACH,MAAbkB,IAGDvkB,MAAMC,QAAQskB,IACdA,EAAU5oB,QACNsK,GACEA,GAAKge,GACLhe,EAAExS,IAAMwwB,GACRhe,EAAE2b,IAAOqC,IACbjrB,OAAS,GAEXsrB,EAAiBzqB,EAAEwpB,gBAAkBkB,EAAU5oB,QAC3CsK,IAAOA,EAAExS,IAAMwS,EAAE2b,IAAO3b,IAAMge,IAElCK,EAAiBzqB,EAAEF,YAAc2qB,EAC9BzqB,EAAEwpB,gBACHriB,KAAKiF,GAAMA,EAAExS,IAAMwS,EAAE2b,IAAO3b,KAE9Bse,GAAaN,GACbM,EAAU9wB,IAAMwwB,GAChBM,EAAU3C,IAAOqC,IAEjBK,EAAiBzqB,EAAEwpB,gBAAkB,KACrCiB,EAAiBzqB,EAAEF,YAAc,MACpC,IAICqN,OAAOC,KAAKqd,GAAkBtrB,OAAS,IAE5B2R,EAAI9P,QACViQ,cAAcwZ,GAEpBzxB,KAAKiqB,iBAAiB0G,WAAWN,EAAEzvB,GAAI6wB,GAEnCzxB,KAAK+qB,kBACN/qB,KAAK+qB,iBAAiB4F,WAAWN,EAAEzvB,GAAI6wB,GAE1CzxB,KAAKwP,KAAK,SAAUxP,KAAKiqB,iBAAiBwC,QAAQ4D,EAAEzvB,KACvD,GAEN,KAIH,IAAI+wB,EAAS3xB,KAAK6rB,mBACd8F,GAAU3xB,KAAKoG,SAASojB,SACzBxpB,KAAK4xB,SAAS,CACXC,QAASF,EACTG,UAAW,eACXC,SAAU,KACP/xB,KAAKstB,oBACLttB,KAAKiuB,iBAAiB,GAIlC,CAYA+D,kCAAkC/B,EAAIlR,GACnC,OAAO,IAAItP,SAAQ,CAACC,EAASiH,KAC1B,OAAQsZ,EAAG/D,YAER,KAAK+D,EAAG1F,eAAeC,WACpByF,EAAGgC,WAAWxd,MAAMkC,GAKvB,KAAKsZ,EAAG1F,eAAeyB,aAIpBhsB,KAAK4xB,SAAS,CACXC,QAAS5B,EACT6B,UAAW,kBACXC,SAAU,KAEPriB,GAAS,IAGf,MAGH,KAAKugB,EAAG1F,eAAe0B,YAKvB,QACGvc,IAEN,GAEN,CAEAuiB,SAASC,EAAOC,GAETnyB,KAAKsqB,aAAetqB,KAAKuqB,eAAeC,aACzCxqB,KAAKsqB,YAActqB,KAAKuqB,eAAeyB,aACvChsB,KAAKwP,KAAK,mBAAoB,CAAC,IAGlC,IAAIsI,EAAM9X,KAAK0rB,WACf,GAAW,MAAP5T,EAED,OADA9X,KAAKsqB,YAActqB,KAAKuqB,eAAe0B,YAChCxc,QAAQC,QAAQ,IAG1B,IAAI1H,EAAQ8P,EAAI9P,QAChB,GAAa,MAATA,EAED,OADAhI,KAAKsqB,YAActqB,KAAKuqB,eAAe0B,YAChCxc,QAAQC,QAAQ,IAI1B,IAAI/C,EAAQ3M,KAAKoG,SAASijB,gBAAgB9c,YAAc,GAGpD6lB,EAASpyB,KAAKoG,SAASijB,gBAAgBC,kBAAoB,KAE3DtpB,KAAK8vB,iBACNsC,EAASpyB,KAAK8vB,gBAGb9vB,KAAKyqB,eAGH2H,EAFCA,EAAOjR,MAAMhb,OAEL,CACNojB,KAAM,MACNpI,MAAO,CAACiR,EAAQpyB,KAAKyqB,eAIfzqB,KAAKyqB,cAKpB,IAAI+D,EAAO,CACRa,MAAO+C,GAAU,CAAC,EAElBC,KAAMH,GAAS,EACfvkB,KAAMhB,EACN1D,SACGjJ,KAAKoG,SAAS6C,WACbjJ,KAAKoG,SAASwkB,iBAcrB,OATIuH,IACD3D,EAAK2D,MAAQA,GAIZnyB,KAAKoG,SAASojB,gBACRgF,EAAK2D,MAIZ1iB,QAAQC,UAKJ8E,MAAK,KAEH,IAAI8d,EAAStyB,KAAK6rB,mBAClB,OAAKyG,EAEEtyB,KAAKgyB,kCAAkCM,GAF1B7iB,QAAQC,SAEyB,IAMvD8E,MAAK,IACI,IAAI/E,SAAQ,CAACC,EAASiH,KAC1B,GACa,MAAVyb,GACgB,MAAhBA,EAAOjR,QACNiR,EAAOjR,MAAMhb,OAEd,OAAOuJ,IAEV,IAAI6iB,EAAY,GAEhBH,EAAOjR,MAAMld,SAASwrB,IAEnB,GACgB,sBAAbA,EAAKA,MACQ,0BAAbA,EAAKA,KACN,CACC,IAAI+C,EAAKxyB,KAAK+B,GAAG+pB,mBAAmB2D,EAAK9sB,OACrC6vB,GACDD,EAAUjuB,KACPtE,KAAKgyB,kCAAkCQ,GAGhD,KAGH/iB,QAAQ4R,IAAIkR,GACR/d,MAAK,KACH9E,GAAS,IAEX+E,MAAMkC,EAAO,MAKtBnC,MAAK,IACI,IAAI/E,SAAQ,CAACC,EAASiH,KAK1B3W,KAAKyyB,wBAA0B,CAC5B/iB,QAASA,EACTiH,OAAQA,GAGX3W,KAAK0yB,aAAa1qB,EAAOwmB,GAAM/Z,OAAOtM,IACnCwO,EAAOxO,EAAI,GACZ,KAIjB,CAEAuqB,aAAa1qB,EAAOwmB,GAMjB,OAAOxmB,EAAM0nB,QAAQlB,GAAMha,MAAM3K,GACvB7J,KAAK2yB,oBAAoB9oB,IAEtC,CAcA8oB,oBAAoB9oB,GACjB,OAAO4F,QAAQC,UAAU8E,MAAK,KAE3BxU,KAAK4yB,aAAe/oB,EAAKgpB,YAGpB7yB,KAAKiqB,iBAAiB6C,KAAK,CAAC,GAAG3mB,SACjCnG,KAAKiqB,iBAAiBnP,WACtB9a,KAAKiqB,iBAAiB1S,MAAM1N,IAI/BmgB,GAAe,KACZhqB,KAAKiqB,iBAAiB6I,MAAK,KAEpB9yB,KAAKoG,SAASojB,SACf7U,YAAW,KACR3U,KAAKstB,mBAAmB,GACxB,KAGCzjB,IACR,GACF,GASH7J,KAAKowB,oBAAoBvmB,GAEzBmgB,GAAe,KAEChqB,KAAK6rB,oBAGf7rB,KAAKstB,oBACLttB,KAAKiuB,mBAGLjuB,KAAKiuB,iBACR,GACA,GACHjE,GAAe,KAERhqB,KAAKsqB,aAAetqB,KAAKuqB,eAAe0B,cACzCjsB,KAAKsqB,YAActqB,KAAKuqB,eAAe0B,YACvCjsB,KAAKwP,KAAK,kBAAmB,CAAC,GACjC,GACA,IACHwa,GAAe,KAGRhqB,KAAKoG,SAASojB,SACfxpB,KAAKwP,KAAK,WAAY,CAAC,EAC1B,GACA,IACHwa,GAAe,KAERhqB,KAAKyyB,0BACNzyB,KAAKyyB,wBAAwB/iB,UAG7B1P,KAAKyyB,wBAA0B,KAClC,GACA,EAAE,GAEX,CAWAtC,WAAW+B,EAAOC,GAsCf,OAAO1iB,QAAQC,UAAU8E,MAAK,KAEvBxU,KAAK+yB,cAENhf,aAAa/T,KAAK+yB,oBACX/yB,KAAK+yB,aAIV/yB,KAAKgzB,gBACPhzB,KAAKgzB,cAAgB,IAAIvjB,SAAQ,CAACC,EAASiH,KACxC3W,KAAKizB,uBAAyBvjB,EAC9B1P,KAAKkzB,sBAAwBvc,CAAM,KAMzC3W,KAAK+yB,YAAcpe,YAAW,KAE3B3U,KAAK8a,WAEE9a,KAAKiyB,SAASC,EAAOC,GACxB3d,MAAK,KACCxU,KAAKgzB,gBACNhzB,KAAKizB,gCACEjzB,KAAKgzB,qBACLhzB,KAAKizB,8BACLjzB,KAAKkzB,uBAIfnf,aAAa/T,KAAK+yB,oBACX/yB,KAAK+yB,WAAW,IAEzBte,OAAOtM,IACDnI,KAAKgzB,gBACNhzB,KAAKkzB,sBAAsB/qB,UACpBnI,KAAKgzB,qBACLhzB,KAAKizB,8BACLjzB,KAAKkzB,uBAGfnf,aAAa/T,KAAK+yB,oBACX/yB,KAAK+yB,WAAW,MAE7B,IAII/yB,KAAKgzB,gBAElB,CAuBAG,aAAaf,GACVpyB,KAAK8vB,eAAiBsC,CACzB,CAEAgB,QAAQtqB,GACL,IAAI6jB,EAAK3sB,KAAKiqB,iBACd,OAAI0C,EACMA,EAAGG,MAAM5N,IACb,IAAI3Z,GAAU,EAiBd,OAVavF,KAAK6rB,oBACJ7rB,KAAKoG,SAASojB,SAAWjkB,IACpCA,EAAUvF,KAAKguB,oBAAoB9O,IAIlC3Z,GAAWuD,IACZvD,EAAUuD,EAAOoW,IAGb3Z,CAAO,IAGV,EAEb,CAEAyoB,oBAAoBD,GAEjB,GAAe,MAAXA,EAAiB,OAAO,KAE5B,IAAI4D,EAAS3xB,KAAK6rB,mBAClB,GAAc,MAAV8F,EAAgB,OAAO,EAE3B,IAAI5F,EAAY/rB,KAAK+rB,UACrB,GAAiB,MAAbA,EAAmB,OAAO,EAI9B,IAAI6B,EAAa+D,EAAOpF,YACxB,GAAkB,MAAdqB,EACD,OAAO,EAGV,IAAIyF,EAAUtF,EAAQhC,EAAUyE,gBAChC,GAAe,MAAX6C,EAAiB,CAElB,IAAItF,EAAQhC,EAAUjlB,YAGnB,OAAO,EAFPusB,EAAUtF,EAAQhC,EAAUjlB,WAIlC,CAEA,IAAIioB,EAAKhD,EAAU9mB,OAAO8pB,KAG1B,OAAIsE,EAAQvqB,OAENuqB,EAAQvqB,QAAQkN,IAASA,EAAIpV,IAAMoV,EAAI+Y,IAAO/Y,IAAQ4X,EAAWhtB,KAC7DuF,OAAS,GAGRktB,EAAQzyB,IAAMyyB,EAAQtE,IAAOsE,IAAYzF,EAAWhtB,EAElE,CAEAka,WACO9a,KAAKiqB,kBAAkBjqB,KAAKiqB,iBAAiBnP,WAE7C9a,KAAK+qB,kBAAkB/qB,KAAK+qB,iBAAiBjQ,WAEjD9a,KAAKsqB,YAActqB,KAAKuqB,eAAeC,UAC1C,CAEI8I,iBACD,OAAOtzB,KAAK4yB,cAAgB,CAC/B,CAUAW,OACG/qB,QAAQ+G,MAAM,mDACjB,CAEAikB,SACGhrB,QAAQ+G,MAAM,qDACjB,CAEAkkB,gBAAgBC,GAEb,IAAI3nB,EAAQ/L,KAAKoqB,mBAAmB/c,QAAQqmB,GAG5C1zB,KAAKoqB,mBAAmBje,OAAOJ,EAAO,EACzC,CAcAoe,wBAAwBiI,EAAS,MAY9B,GAL+B,MAA3BpyB,KAAK2zB,qBACN3zB,KAAK2zB,mBAAqB3zB,KAAK+B,GAAG6xB,iBAC/B,GAAG5zB,KAAKY,wBAGVZ,KAAK0rB,WAAY,CAIlB,IAAIpC,EAFJtpB,KAAK2zB,mBAAmBE,WAAW7zB,KAAK0rB,WAAW3kB,UAK/C/G,KAAK0rB,sBAAsB1rB,KAAK+B,GAAGwc,MAAM4Q,gBAC1C7F,EAAmBtpB,KAAK0rB,WAAW2D,OAYlC/F,EACDtpB,KAAK2zB,mBAAmB9uB,SAASykB,GAC/BtpB,KAAK2zB,mBAAmB9uB,SAAS,CAAC,EAC1C,MACG7E,KAAK2zB,mBAAmBE,WAAW,IACnC7zB,KAAK2zB,mBAAmB9uB,SACrBmkB,EAAc5iB,SAASijB,gBAAgBC,kBAwC7C,GAlCmC,MAA/BtpB,KAAK8zB,yBACN9zB,KAAK8zB,uBAAyB9zB,KAAK+B,GAAG6xB,iBACnC,GAAG5zB,KAAKY,4BAMdZ,KAAK8zB,uBAAuBD,WACzB7zB,KAAK0rB,WAAa1rB,KAAK0rB,WAAW3kB,SAAW,IAG5CqrB,IAAQpyB,KAAKoG,SAASijB,gBAAgBC,iBAAmB8I,GAG1DpyB,KAAKoG,UACLpG,KAAKoG,SAASijB,iBACdrpB,KAAKoG,SAASijB,gBAAgBC,iBAE9BtpB,KAAK8zB,uBAAuBjvB,SACzB7E,KAAKoG,SAASijB,gBAAgBC,kBAGjCtpB,KAAK8zB,uBAAuBjvB,SACzBmkB,EAAc5iB,SAASijB,gBAAgBC,kBAKnB,MAAtBtpB,KAAK+zB,gBACN/zB,KAAK+zB,cAAgB/zB,KAAK+B,GAAG6xB,iBAC1B,GAAG5zB,KAAKY,mBAGVZ,KAAK0rB,WAAY,CAClB,IAAIsI,GAAah0B,KAAKi0B,YAAc,IAAInrB,QACpC8D,IACGA,EAAEsnB,WACFtnB,EAAEunB,WAAa,IAAI9mB,QAAQrN,KAAK0rB,WAAW9qB,KAAO,IAEzD,GAAIozB,GAAaA,EAAU7tB,OAAS,EAAG,CAEpCnG,KAAK+zB,cAAcF,WAAW7zB,KAAK0rB,WAAW3kB,UAAY,IAG1D,IAAIqtB,EAAa,GACjBJ,EACIlrB,QACG8D,GAAMA,EAAE9D,QAAU8D,EAAE9D,OAAOqY,OAASvU,EAAE9D,OAAOqY,MAAMhb,SAEtDlC,SAAS2I,IACP,IAAIynB,GAAUznB,EAAE9D,OAAOqY,OAAS,IAAIrY,QAChC8G,GACE5P,KAAK0rB,WAAW3kB,QAAQC,GAAMA,EAAEpG,IAAMgP,EAAEvL,MAAK8B,OAAS,IAG5DiuB,EAAaA,EAAW7M,OAAO8M,EAAO,IAG5C,IAAIC,EAAa,CACd/K,KAAM,KACNpI,MAAOiT,GAEVp0B,KAAK+zB,cAAclvB,SAASyvB,EAC/B,CACH,CACH,CAEIpP,cACD,OAAOllB,KAAKirB,YAAa,CAC5B,CAMIsJ,mBACD,MAAO,CACJC,OAAQ,EACRC,OAAQ,EAEd,CAEI9K,eACD,OAAO3pB,KAAKoG,SAASujB,UAAYX,EAAcW,QAClD,CAYAO,qBACG,IAAI3a,EAAQ,IAAIjH,MACb,qGAGH,OADAE,QAAQ+G,MAAMA,GACP,IACV,CASAyb,qBAIG,OAHAxiB,QAAQ+G,MACL,qGAEI,IACV,CAEA6gB,oBAAoBvmB,EAAO,CAAC,GAErBA,IAAS,CAAC,GACXrB,QAAQ2O,IACL,2DAGT,CAkGA6Z,iBAAiB5B,EAASzpB,GACvB,IAAIspB,EAAc,CAAC,EAgCnB,OA7BA9a,OAAOC,KAAKzO,GAAQ1B,SAASI,IAC1B+qB,EAAQnrB,SAASywB,IACd,IAAInF,EAAQvvB,KAAK0rB,WAAW8D,YAAYkF,EAAM9zB,IAE9CquB,EAAY,GAAGM,KAASlrB,KAASsB,EAAOtB,GAI9B,gBAAPA,GACAsB,EAAqB,cACrBA,EAAqB,aAAEQ,SAEvB8oB,EAAY9J,aAAe,GAE3Bxf,EAAqB,aAAE1B,SAAS0wB,IAC7B,IAAIC,EAAc,CAAC,EAEnBzgB,OAAOC,KAAKugB,GAAM1wB,SAAS4wB,IACT,iBAAXA,EACDD,EAA2B,cAAID,EAAoB,cACjDC,EAAY,GAAGrF,KAASsF,KAAaF,EAAKE,EAAQ,IAG1D5F,EAAY9J,aAAa7gB,KAAKswB,EAAY,IAEhD,GACD,IAGE3F,CACV,CAEAY,YAAY9B,GACT,IAAIjgB,GAAS,EAab,OATI9N,KAAK2zB,qBACN7lB,EAASA,GAAU9N,KAAK2zB,mBAAmBpuB,QAAQwoB,IAElD/tB,KAAK8zB,yBACNhmB,EAASA,GAAU9N,KAAK8zB,uBAAuBvuB,QAAQwoB,IAEtDjgB,GAAU9N,KAAK+zB,gBAChBjmB,EAASA,GAAU9N,KAAK+zB,cAAcxuB,QAAQwoB,IAE1CjgB,CACV,CAIAgnB,MAAM1uB,GACHA,EAAWA,GAAYpG,KAAK8F,QAC5B,IAAIivB,EAAuB,IAAI/0B,KAAKL,YAAYyG,EAAUpG,KAAK+B,IAC/DgzB,EAAqBlK,aAAe7qB,KAAK6qB,aACzCkK,EAAqBzK,YAActqB,KAAKsqB,YAGxCyK,EAAqBjB,uBAAuBjvB,SACzCuB,EAASA,SAASijB,gBAAgBC,kBAGvB,MACPyL,EAAqB9K,kBACtB8K,EAAqB9K,iBAAiB1S,MACnCvX,KAAKiqB,iBACD6C,KAAK,CAAC,GACNhkB,QAAQoW,GACN6V,EAAqBjB,uBAAuBvuB,QAAQ2Z,MAI5D6V,EAAqBhK,kBACtBgK,EAAqBhK,iBAAiBxT,MACnCvX,KAAK+qB,iBACD+B,KAAK,CAAC,GACNhkB,QAAQoW,GACN6V,EAAqBjB,uBAAuBvuB,QAAQ2Z,KAGhE,EAGH8V,GASAD,EAAqB9G,kBAErB,IAAIgH,EAAWj1B,KAAKusB,YASpB,OARI0I,IAGGA,EAASr0B,KAAIq0B,EAAWA,EAASr0B,IAErCm0B,EAAqB5I,UAAU8I,IAG3BF,CAMV,CAEAG,cAAcC,GACX,IAAIrd,EAAM9X,KAAK8F,QAcf,OAXIqvB,GAAShU,OAAOhb,SACb2R,EAAI1R,SAASijB,gBAAgBC,kBAAkBnI,OAAOhb,OACvD2R,EAAI1R,SAASijB,gBAAgBC,iBAAiBnI,MAC3CrJ,EAAI1R,SAASijB,gBAAgBC,iBAAiBnI,MAAMoG,OACjD4N,EAAQhU,OAGdrJ,EAAI1R,SAASijB,gBAAgBC,iBAAmB6L,GAGvCn1B,KAAK80B,MAAMhd,EAE7B,CAiBA8Z,SAASwD,GACN,IAAKA,IAAQA,EAAIvD,UAAYuD,EAAIrD,SAAU,OAE3C/xB,KAAKq1B,SAAWr1B,KAAKq1B,UAAY,GAEjC,IAAIzI,EAAS5sB,KAAKq1B,SAASvI,MAAMziB,GACvBA,EAAEwnB,SAAWuD,EAAIvD,SAAWxnB,EAAEynB,WAAasD,EAAItD,cAIpDlF,GAAUA,EAAOzmB,OAAS,KAE5BnG,KAAKq1B,SAAS/wB,KAAK,CAChButB,QAASuD,EAAIvD,QACbC,UAAWsD,EAAItD,UACfC,SAAUqD,EAAIrD,WAIjBqD,EAAIvD,QAAQzvB,GAAGgzB,EAAItD,UAAWsD,EAAIrD,UAExC,CAQAuD,aACOt1B,KAAKq1B,UAAYr1B,KAAKq1B,SAASlvB,OAAS,GACzCnG,KAAKq1B,SAASpxB,SAASoG,IACpBA,EAAEwnB,QAAQ0D,eAAelrB,EAAEynB,UAAWznB,EAAE0nB,SAAS,GAG1D,CAEIkC,iBACD,MAAO,EACV,cCx4EHx0B,EAAOC,QAAU,MACdC,YAAYqjB,EAAYjhB,GACrB/B,KAAK+B,GAAKA,EACV/B,KAAKiG,WAAW+c,EACnB,CASA/c,WAAW+c,GASJA,EAAWpiB,KACZZ,KAAKY,GAAKoiB,EAAWpiB,IAExBZ,KAAKmH,KACF6b,GAAY7b,MACZ6b,GAAYzB,MAAMpa,MAClB6b,GAAYzB,MAAMngB,OAClB4hB,GAAYzB,MAAM4D,eAAe,IAAI/jB,OACrC,GACEpB,KAAKmH,MACPnH,KAAK+B,GAAGqG,OAAOotB,QACZ,IAAIltB,MAAM,2CACV,CACGgH,QAAS,gCACT0T,eAIThjB,KAAK4B,KAAOohB,EAAWphB,MAAQohB,GAAYzB,MAAM3f,MAAQ,GACzD5B,KAAKuhB,KAAOyB,EAAWzB,MAAQ,IAClC,CAaAzb,QACG,MAAO,CACJlF,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,KACXvF,KAAM5B,KAAK4B,KACX2f,KAAMvhB,KAAKuhB,KAEjB,CAQA3M,UACG,OAAO5U,KAAK+B,GAAG0zB,kBAAkBz1B,KAAKY,GACzC,CAQAuE,aACG,OAAInF,KAAKY,GACCZ,KAAK+B,GAAG2zB,iBAAiB11B,KAAKY,GAAIZ,KAAK8F,SAEvC9F,KAAK+B,GAAGie,iBAAiBhgB,KAAK8F,QAE3C,oBC9EH,MAAM6vB,EAAgB,EAAQ,OACxBC,EAAe,EAAQ,OAEvBr2B,EAAc,EAAQ,MAEtBC,EAAiB,EAAQ,OAEzBq2B,EAAU,EAAQ,MAClB5E,EAAW,EAAQ,OACnB6E,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAmB,EAAQ,OAC3B7G,EAAgB,EAAQ,OAExB8G,EAAY,EAAQ,OAEpBC,EAAuB,EAAQ,OAC/BC,EAAgB,EAAQ,OACxBC,EAAuB,EAAQ,OAE/BC,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OAMzBC,EAAY,EAAQ,OACpB/X,EAAgB,EAAQ,OAExBuE,EAAY,EAAQ,OAEpBxU,EAAe,EAAQ,OAq6B7B9O,EAAOC,QAn6BP,cAAwB6O,EACrB5O,YAAYye,GAaT,GANAte,QACAE,KAAKyY,gBAAgB,GAErBzY,KAAKigB,aAAe7B,GAAe,CAAC,EAGhCjR,MAAMC,QAAQgR,GAAc,CAC7B,IAAIoY,EAAO,CAAC,EACZpY,EAAYna,SAASosB,IAClBmG,EAAKnG,EAAEzvB,IAAMyvB,CAAC,IAEjBrwB,KAAKigB,aAAeuW,CACvB,CAOAx2B,KAAKy2B,iBAAmB,GAGxBz2B,KAAK02B,YAAc,GAGnB12B,KAAK22B,cAAgB,GAGrB32B,KAAK42B,YAAc,GAGnB52B,KAAK62B,oBAAsB,GAM3B72B,KAAKue,MAAQ,CACVoX,gBACAp2B,cACAq2B,eACAp2B,iBACAq2B,UACA9S,YACAkO,WACA6E,mBACAC,iBACA5G,gBACA+G,uBAOAE,uBAEAC,mBACAC,kBAOHt2B,KAAKmhB,MAAQ,CAOVgB,OAAQ,SAAU9d,GAKf,OAJc+d,OACX,4EACA,KAEYC,KAAKhe,EACvB,EASAyyB,WAAY,SAAU3vB,GACnB,OAAO+T,OAAO/T,GAAM6L,QAAQ,gBAAiB,GAChD,EASA+jB,wBAAyB,SAAU5vB,GAChC,MAAO,MAAQnH,KAAK82B,WAAW3vB,EAClC,EAUA6vB,sBAAuB,SAAUC,GAC9B,OAAOj3B,KAAK82B,WAAWG,GAAW,YACrC,EAWAC,kBAAmB,SAAUC,EAAYrwB,GACtC,IAAIswB,EAASD,EAAa,IAAMrwB,EAIhC,OAFIswB,EAAOjxB,OAAS,KAAIixB,EAASA,EAAOC,UAAU,EAAG,KAE9CD,CACV,EAcAE,0BAA2B,SACxBC,EACAC,EACAC,EACAR,GAeA,OAZAM,EAAUv3B,KAAK+2B,wBAAwBQ,IAC3BpxB,OAAS,KAAIoxB,EAAUA,EAAQF,UAAU,EAAG,KAEpDG,EAAgBrxB,OAAS,KAC1BqxB,EAAkBA,EAAgBH,UAAU,EAAG,KAE9CI,EAAgBtxB,OAAS,KAC1BsxB,EAAkBA,EAAgBJ,UAAU,EAAG,MAElDJ,EAAUj3B,KAAK82B,WAAWG,IACd9wB,OAAS,KAAI8wB,EAAUA,EAAQI,UAAU,EAAG,KAEjD,gDACHrkB,QAAQ,YAAaukB,GACrBvkB,QAAQ,eAAgBwkB,GACxBxkB,QAAQ,eAAgBykB,GACxBzkB,QAAQ,YAAaikB,EAC5B,EASAS,mBAAoB,SAAUP,GAC3B,MAAO,MAAMn3B,KAAK82B,WAAWK,IAChC,GAIHn3B,KAAKoI,OAAOotB,QAAU,IAAI5f,KACvB5V,KAAKoI,OAAO,aAAcwN,EAAO,EAGpC5V,KAAKoI,OAAOC,UAAY,IAAIuN,KACzB5V,KAAKoI,OAAO,eAAgBwN,EAAO,CAEzC,CAQA+hB,gBAAgBtH,GACb,GAAqB,iBAAVA,EAAE9O,KACV,IACG8O,EAAE9O,KAAO1N,KAAK0D,MAAM8Y,EAAE9O,KAIzB,CAHE,MAAOlX,GACN7B,QAAQ2O,IAAI9M,GACZ7B,QAAQ+G,MAAM,2BAA2B8gB,EAAEzvB,MAC9C,CAEN,CAEA0C,OACG,IAAIs0B,EAAiBzjB,OAAOC,KAAKpU,KAAKigB,cAAc9R,KAChDkG,GAAMrU,KAAKigB,aAAa5L,KAuB5B,OAlBAujB,EAAe3zB,SAASosB,IACrBrwB,KAAK23B,gBAAgBtH,EAAE,IAI1B,CAAC,SAAU,QAAS,iBAAkB,UAAW,eAAepsB,SAC5DrC,IACiBg2B,EAAe9uB,QAAQunB,GAAMA,EAAEzuB,MAAQA,IAC7CqC,SAASwd,IACf,IAAI,QAAEoW,EAAO,MAAEC,GAAU93B,KAAK+3B,gBAAgBtW,GAC1CoW,GACD73B,KAAK63B,GAASvzB,KAAKtE,KAAK83B,GAAOrW,EAAIF,MACtC,GACD,IAIRvhB,KAAKwP,KAAK,sBACHC,QAAQC,SAClB,CAmBAqoB,gBAAgBtW,GACb,OAAQA,EAAI7f,MACT,IAAK,cACF,MAAO,CAAEi2B,QAAS,mBAAoBC,MAAO,kBAEhD,IAAK,iBACF,MAAO,CACJD,QAAS,sBACTC,MAAO,qBAGb,IAAK,SACF,MAAO,CAAED,QAAS,cAAeC,MAAO,aAE3C,IAAK,UACF,MAAO,CAAED,QAAS,gBAAiBC,MAAO,cAE7C,IAAK,QACF,MAAO,CAAED,QAAS,cAAeC,MAAO,YAE3C,QAEG,MAAO,CAAED,QAAS,KAAMC,MAAO,MAExC,CAiBAzT,eAAezjB,EAAIo3B,GAAQ,GACxB,OAAIh4B,KAAKigB,aAAarf,GACfo3B,EACMh4B,KAAKigB,aAAarf,GAElBZ,KAAKigB,aAAarf,GAAI2gB,KAG5B,IACV,CASAzB,cAAcna,GACX,OAAO,IAAIiwB,EAAajwB,EAAQ3F,KACnC,CAUAi4B,iBAAiBC,EAAO,IAiBrB,OAhBK/qB,MAAMC,QAAQ8qB,KAChBA,EAAO,CAACA,IAKXA,EAAKj0B,SAASosB,IACXrwB,KAAK23B,gBAAgBtH,GACrBrwB,KAAKigB,aAAaoQ,EAAEzvB,IAAMyvB,CAAC,IAI9B6H,EAAKj0B,SAASosB,IACXrwB,KAAKwhB,eAAe,UAAW6O,EAAEzvB,GAAIyvB,EAAE,IAGnC5gB,QAAQC,SAClB,CAaA8R,eAAeuI,EAAInpB,EAAI6gB,GACpB,IAEO0W,GAFH,QAAEN,EAAO,MAAEC,GAAU93B,KAAK+3B,gBAAgBtW,GAC9C,GAAIoW,EAED,OAAQ9N,GACL,IAAK,UACF/pB,KAAK63B,GAASvzB,KAAKtE,KAAK83B,GAAOrW,EAAIF,OACnCvhB,KAAKwP,KAAK,qBAAsBiS,EAAIF,MACpC,MAEH,IAAK,UAEF4W,EAAOn4B,KAAK63B,GAAS/K,MAAMuD,GAAMA,EAAEzvB,IAAMA,IAGzCZ,KAAK63B,GAAW73B,KAAK63B,GAAS/uB,QAAQunB,GAAMA,EAAEzvB,IAAMA,IAEpDZ,KAAK63B,GAASvzB,KAAKtE,KAAK83B,GAAOrW,EAAIF,OAK/B4W,EACDA,EAAK3oB,KAAK,qBAAsBiS,EAAIF,MAEpCvhB,KAAKwP,KAAK,qBAAsBiS,EAAIF,MAEvC,MAEH,IAAK,aAEF4W,EAAOn4B,KAAK63B,GAAS/K,MAAMuD,GAAMA,EAAEzvB,IAAMA,OAGtCZ,KAAK63B,GAAW73B,KAAK63B,GAAS/uB,QAAQunB,GAAMA,EAAEzvB,IAAMA,IAGpDu3B,EAAK3oB,KAAK,qBAAsBiS,EAAIF,MAEpCvhB,KAAKwP,KAAK,qBAAsBiS,EAAIF,OAKnD,CAaA6J,aAAa1a,EAAK,MAAM,IACrB,OAAQ1Q,KAAKy2B,kBAAoB,IAAI3tB,OAAO4H,EAC/C,CAYA0nB,gBAAgBC,GACb,OAAOr4B,KAAKorB,cAAcxd,GAAMA,EAAEhN,IAAMy3B,IAAI,EAC/C,CAUAC,eAAe3yB,GACZ,OAAO,IAAIgwB,EAAchwB,EAAQ3F,KACpC,CAWA6lB,gBAAgB/c,EAAS,MAAM,IAC5B,OAAQ9I,KAAK62B,qBAAuB,IAAI/tB,OAAOA,EAClD,CAYAgjB,mBAAmBuM,GAEhB,OAAKA,EAEEr4B,KAAK6lB,iBAAiB8G,GACnBA,EAAG/rB,IAAMy3B,GAAM1L,EAAGxlB,MAAQkxB,GAAM1L,EAAGvrB,OAASi3B,IACnD,GAJa,IAKnB,CASAE,kBAAkB5yB,GACf,IAAIgnB,EAAK,IAAIqJ,EAAiBrwB,EAAQ3F,MAOtC,OANA2sB,EAAGvqB,GAAG,aAAa,KAEhBpC,KAAK62B,oBAAsB72B,KAAK62B,oBAAoB/tB,QAChDunB,GAAMA,EAAEzvB,IAAM+rB,EAAG/rB,IACpB,IAEG+rB,CACV,CAaAzmB,SAASP,EAAQV,GAEd,OAAOzF,EAAeg5B,SAAS7yB,EAAQV,EAC1C,CAOAwzB,SAAS9yB,EAAQV,GACd,OAAO,IAAI4wB,EAAQlwB,EAAQV,EAC9B,CAaAhF,QACG,MAAO,CAACoE,EAAKwO,EAASlN,EAAS,MAC5B,IAAIvE,EAAQiD,EAcZ,OAbIwO,IACG1F,MAAMC,QAAQyF,GACflN,EAASkN,EAETzR,EAAQyR,GAIdlN,EAAO1B,SAAQ,CAACmP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACdjS,EAAQA,EAAMmS,WAAWD,EAAKF,EAAE,IAG5BhS,CAAK,CAElB,CAWA+kB,QAAQrd,EAAS,MAAM,IACpB,OAAQ9I,KAAK02B,aAAe,IAAI5tB,OAAOA,EAC1C,CAQAiP,WAAWsgB,GACR,OAAOr4B,KAAKmmB,SAASL,GACXA,EAAEllB,IAAMy3B,GAAMvS,EAAE3e,MAAQkxB,GAAMvS,EAAE1kB,OAASi3B,IAChD,EACN,CAUAK,UAAU/yB,GAiBP,OAdyB,GAArBA,EAAOgzB,WACC,IAAI7C,EAAiBnwB,EAAQ3F,MACX,GAArB2F,EAAOiD,WACJ,IAAImtB,EAAepwB,EAAQ3F,MACzB,IAAIixB,EAAStrB,EAAQ3F,KAWtC,CAEA44B,aACG,OAAO54B,KAAK+X,WAAW,uCAC1B,CAEA8gB,iBACG,OAAO74B,KAAK+X,WAAW,uCAC1B,CAEA+gB,oBACG,OAAO94B,KAAK+X,WAAW,uCAC1B,CAEAghB,wBACG,OAAO/4B,KAAK+X,WAAW,uCAC1B,CAEAihB,aACG,OAAOh5B,KAAK+X,WAAW,uCAC1B,CAEAkhB,cACG,OAAOj5B,KAAK+X,WAAW,uCAC1B,CAEAmhB,cACG,OAAOl5B,KAAK+X,WAAW,uCAC1B,CAEAohB,aACG,OAAOn5B,KAAK+X,WAAW,uCAC1B,CAaAgP,UAAUje,EAAS,MAAM,IACtB,OAAQ9I,KAAK22B,eAAiB,IAAI7tB,OAAOA,EAC5C,CAQA8b,YAAYyT,GACT,OAAOr4B,KAAK+mB,WAAWjF,GACbA,EAAElhB,IAAMy3B,GAAMvW,EAAE3a,MAAQkxB,GAAMvW,EAAE1gB,OAASi3B,IAChD,EACN,CAUAe,WAAWzzB,GACR,OAAO,IAAIswB,EAAUtwB,EAAQ3F,KAChC,CAYAq5B,kBAAkBz4B,EAAIqmB,GACnB,IAAIqS,EAAUt5B,KAAKqkB,eAAezjB,GAClC,GAAI04B,EACD,OAAQA,EAAQ13B,MACb,KAAKs0B,EAAqB9xB,WAAWxC,KAClC,OAAO,IAAIs0B,EAAqBoD,EAASrS,EAASjnB,MAGrD,KAAKm2B,EAAc/xB,WAAWxC,KAC3B,OAAO,IAAIu0B,EAAcmD,EAASrS,EAASjnB,MAG9C,QAEG,OAAOo2B,EAAqBmD,QAAQD,EAASrS,EAASjnB,MAI/D,OAAO,IACV,CAYAw5B,oCAAoCC,EAASxS,GAC1C,IAAIyS,EAAa,KAEjB,OAAQD,EAAQ73B,MACb,IAAK,mBACF83B,EAAa,IAAIxD,EAAqB,CAAC,EAAGjP,EAASjnB,MACnD,MAEH,IAAK,YACF05B,EAAa,IAAIvD,EAAc,CAAC,EAAGlP,EAASjnB,MAC5C,MAEH,QACG,IAAI25B,EAAavD,EAAqBwD,qBAAqBH,GACvDE,IACDD,EAAatD,EAAqBmD,QAC/BI,EACA1S,EACAjnB,OAWZ,OAHI05B,GACDA,EAAWG,YAAYJ,GAEnBC,CACV,CAWA/R,QAAQ7e,EAAS,MAAM,IACpB,OAAQ9I,KAAK42B,aAAe,IAAI9tB,OAAOA,EAC1C,CAgBAgiB,UAAUuN,GACP,OAAOr4B,KAAK2nB,SAASC,GACXA,EAAEhnB,IAAMy3B,GAAMzQ,EAAEzgB,MAAQkxB,GAAMzQ,EAAExmB,OAASi3B,IAChD,EACN,CAQAyB,SAASn0B,GACN,OAAO,IAAIwpB,EAAcxpB,EAAQ3F,KACpC,CAQA+5B,aAAan6B,EAAKC,GAIf,OAHID,GACD4I,QAAQ+G,MAAM,uCAEV,IAAIgnB,EAAU32B,GAAOI,KAAKg6B,KAAMn6B,EAAQG,KAClD,CAQA4zB,iBAAiB/zB,EAAQsC,EAAU,CAAC,GACjC,OAAO,IAAIqc,EAAc3e,EAAQG,KAAMmC,EAC1C,CAOA83B,iBAAiBt0B,GAId,OAHK3F,KAAKk6B,WACPl6B,KAAKk6B,SAAWl6B,KAAKs4B,eAAe,CAAC,IAEjCt4B,KAAKk6B,SAASnR,QAAQpjB,EAAQ3F,KAAKk6B,SAC7C,CAiBA9xB,SACGI,QAAQ+G,MACL,oEAEN,CASA4qB,YAAYxY,GACT,IAAIyY,EAAW,CAAC,EAmEhB,OAjEIzY,GACDxN,OAAOC,KAAKuN,GAAM1d,SAASoQ,IACxB,OAAQA,GACL,IAAK,QACF+lB,EAASC,SAAW1Y,EAAKtN,GAAGpP,QAAQrE,GACpCw5B,EAASjD,WAAaxV,EAAKtN,GAAGpP,QAAQkC,KACtCizB,EAASE,QAAU3Y,EAAKtN,GAAGzT,GAC3Bw5B,EAASG,UAAY5Y,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KAC9C,MAEH,IAAK,SACFizB,EAASC,SAAW1Y,EAAKtN,GAAGzT,GAC5Bw5B,EAASjD,WAAaxV,EAAKtN,GAAGlN,KAC9B,MAEH,IAAK,iBACFizB,EAASI,iBAAmB7Y,EAAKtN,GAAGzT,GACpCw5B,EAASK,mBAAqB9Y,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KACvD,IAAIuzB,EAAK/Y,EAAKtN,GAAGqX,WACbgP,IACDN,EAASO,mBAAqBD,EAAG95B,GACjCw5B,EAASQ,qBAAuBF,EAAGvzB,MAEtC,MAEH,IAAK,UACFizB,EAASvV,UAAYlD,EAAKtN,GAAGzT,GAC7Bw5B,EAASS,YAAclZ,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KAChD,MAEH,IAAK,MACFizB,EAASU,IAAM,CACZ7Y,MAAON,EAAKtN,GAAG4N,MACflL,SAAU4K,EAAKtN,GAAG0mB,UAClBC,KAAMrZ,EAAKtN,GAAG4mB,OAEjB,MAEH,IAAK,OACEtZ,EAAKtN,GAAG4S,UACTmT,EAASvV,UAAYlD,EAAKtN,GAAG4S,QAAQrmB,GACrCw5B,EAASS,YACNlZ,EAAKtN,GAAG4S,QAAQ7lB,OAASugB,EAAKtN,GAAG4S,QAAQ9f,MAE/CizB,EAASc,OAASvZ,EAAKtN,GAAGzT,GAC1Bw5B,EAASe,SAAWxZ,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KAC7C,MAEH,IAAK,OACEwa,EAAKtN,GAAGtP,cACTq1B,EAASgB,cAAgBzZ,EAAKtN,GAAGtP,YAAYnE,GAC7Cw5B,EAASiB,gBACN1Z,EAAKtN,GAAGtP,YAAY3D,OAASugB,EAAKtN,GAAGtP,YAAYoC,MAEvDizB,EAASkB,OAAS3Z,EAAKtN,GAAGzT,GAC1Bw5B,EAASmB,SAAW5Z,EAAKtN,GAAGjT,OAASugB,EAAKtN,GAAGlN,KAC7CizB,EAASoB,QAAU7Z,EAAKtN,GAAGhQ,IAC3B,MACH,QACG+1B,EAAS/lB,GAAKsN,EAAKtN,GAEzB,IAIC+lB,CACV,oBCj8BH,IAAIv2B,EAAS,CAAC,EAEQ,CACnB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGKI,SAASw3B,IACtB53B,EAAO43B,EAAMr3B,WAAWC,KAAOo3B,CAAK,IAGvCh8B,EAAOC,QAAU,MAMdgrB,mBACG,IAAI3jB,EAAS,GACb,IAAK,IAAIC,KAAKnD,EACXkD,EAAOzC,KAAKT,EAAOmD,IAEtB,OAAOD,CACV,CASA2jB,kBAAkBrmB,GACf,OAAOR,EAAOQ,EACjB,CAOAqmB,gBAAgB/kB,EAAQV,GACrB,IAAIU,EAAOtB,IAgBR,MAPAmE,QAAQ2O,IAAI,WACZ3O,QAAQ2O,IAAI,WACZ3O,QAAQ+G,MAAM5J,GACd6C,QAAQ2O,MACR3O,QAAQ+G,MAAM,WACd/G,QAAQ+G,MAAMtK,GACduD,QAAQ2O,IAAI,WACN,IAAI7O,MACP,iDAAiD3C,EAAOwB,SAASxB,EAAOtB,mBAAmBY,EAAOkC,SAhBrG,IACG,OAAO,IAAItD,EAAO8B,EAAOtB,KAAKsB,EAAQV,EAKzC,CAJE,MAAOkD,GACNK,QAAQ2O,IAAI,QAAShP,GACrBK,QAAQ2O,IAAI,mBAAoBtT,GAChC2E,QAAQ2O,IAAI,kBAAmBxR,EAAOtB,IACzC,CAcN,oBC5FH,MAAM0e,EAAY,EAAQ,OAE1BtjB,EAAOC,QAAU,cAA0BqjB,EACxCpjB,YAAYqjB,EAAY/d,GACrBnF,MAAM,CAAC,SAAUmF,EAAOlD,IACxB/B,KAAKiF,OAASA,EAEdjF,KAAKiG,WAAW+c,EACnB,CAEA/c,WAAW+c,GAuCR,GA5BAhjB,KAAKY,GAAKoiB,EAAWpiB,GACrBZ,KAAK4B,KAAO,QACZ5B,KAAKmH,KAAO6b,EAAW7b,KACvBnH,KAAKI,OAASyT,KAAK0D,MAAMyL,EAAW5iB,SAAU,GAG1C4iB,EAAW0Y,WAAavuB,MAAMC,QAAQ4V,EAAW0Y,YAClD1Y,EAAW0Y,SAAW,CAAC1Y,EAAW0Y,WAGrC17B,KAAK27B,iBAAmB,GACxB37B,KAAK+G,QAAUic,EAAW0Y,UAAY,IAClCvtB,KAAKnH,IACH,IAAIpB,EAAQ5F,KAAKiF,OAAO8I,UAAU/G,GAClC,IAAKpB,EAAO,CACT5F,KAAK27B,iBAAiBr3B,KAAK0C,GAC3B,IAAImB,EAAM,IAAIG,MACX,SAAStI,KAAKmH,SAASnH,KAAKY,uCAAuCoG,MAEtEhH,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B4D,MAAO/L,KAAKY,GACZgF,MAAOoB,GAEb,CACA,OAAOpB,CAAK,IAEdkD,QAAQ8yB,GAAQA,IAEM,GAAtB57B,KAAK+G,OAAOZ,OAAa,CAC1B,IAAIgC,EAAM,IAAIG,MACX,SAAStI,KAAKmH,SAASnH,KAAKY,qCAE/BZ,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B4D,MAAO/L,KAAKY,GACZi7B,kBAAmB7Y,EAAW0Y,UAAY,IAEhD,CAGA57B,MAAMmG,WAAW+c,EACpB,CAaAld,QACG,IAAIgI,EAAShO,MAAMgG,QA0BnB,OAxBAgI,EAAOlN,GAAKZ,KAAKY,GACjBkN,EAAOlM,KAAO,QACdkM,EAAO3G,KAAOnH,KAAKmH,KACnB2G,EAAO1N,OAASJ,KAAKI,OAGjBJ,KAAK+G,SAAWoG,MAAMC,QAAQpN,KAAK+G,UACpC/G,KAAK+G,OAAS,CAAC/G,KAAK+G,SAGvB+G,EAAO4tB,UAAY17B,KAAK+G,QAAU,IAC9BoH,KAAKnH,GAEIA,EAAEpG,IAAMoG,IAEjB8B,QAAQ8yB,GAAQA,IAKpB57B,KAAK27B,iBAAiB13B,SAAS+C,IAC5B8G,EAAO4tB,SAASp3B,KAAK0C,EAAE,IAGnB8G,CACV,CAEIguB,gBAID,MAAO,GAHS97B,KAAKiF,OAAO82B,iBAGL/7B,KAAKmH,OAAO6L,QAAQ,KAAM,IAAIqkB,UAAU,EAAG,GACrE,CAEI2E,iBAGD,MAAO,GAFSh8B,KAAK87B,UAAUzE,UAAU,EAAG,YAG/C,oBCzGH,IAAI4E,EAAY,EAAQ,OACxBx8B,EAAOC,QAAU,cAA4Bu8B,EAC1Ct8B,YAAYu8B,EAAWn6B,GACpBjC,QACAE,KAAKm8B,SAAWD,GAAa,CAAC,SAI9Bl8B,KAAK+B,GAAKA,CAGb,CAcAkE,WAAW+c,GACRhjB,KAAKmlB,aAAenC,EAAWmC,aAG3BnlB,KAAKmlB,aAENnlB,KAAKo8B,aAKJp8B,KAAKm8B,UAAY,IAAIl4B,SAAS2B,IACxBod,EAAWpd,KACZ5F,KAAK4F,GAASod,EAAWpd,GAC5B,GAGT,CAUAy2B,oBAAoBt1B,EAAQpB,GACzBA,EAASA,GAAU,CAAC,EAEpB,IAAIuU,EAAQ,CAIToiB,cAAe,MAOlB,OAJAv1B,EAAO9C,SAAS+C,IACbkT,EAAMlT,GAAKrB,EAAOqB,IAAMA,CAAC,IAGrB,CAACkT,EACX,CAOAqiB,kBACG,MAAO,IACV,CAOAz2B,QAGG,OAFA9F,KAAKw8B,cAEE,CACJrX,aAAcnlB,KAAKmlB,aAEzB,CAOAtQ,eACG,OAAO7U,KAAK+B,GAAG+d,cAAc,CAC1Blf,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKmH,KACXvF,KAAM5B,KAAK4B,KACX2f,KAAMvhB,KAAK8F,SAEjB,CAiBAs2B,UAAUtkB,EAAKyJ,EAAMxa,EAAQoJ,EAAe,MACpC2H,IAAKA,EAAM9X,MACXuhB,IAAMA,EAAOvhB,MACb+G,IAAQA,EAAS/G,KAAKm8B,UAAY,IAElC5a,EAAK4D,eACP5D,EAAK4D,aAAe,IAGS,iBAArB5D,EAAK4D,eACb5D,EAAK4D,aAAetR,KAAK0D,MAAMgK,EAAK4D,eAGvC,IAAIsX,EAAetsB,GAAgBnQ,KAAKu8B,kBAExC,GAAIx1B,GAAUA,EAAOZ,OAAS,EAAG,CAG9B,IAAIu2B,EAAQ,KACRtO,GAAQ,EAEZ7M,EAAK4D,aAAalhB,SAAQ,SAAU04B,GAC5BD,IAAOA,EAAQC,GAGhBA,EAAEL,eAAiBG,IACpBrO,GAAQ,EAGRrnB,EAAO9C,SAAQ,SAAU+C,GACV,MAAR21B,EAAE31B,KAAY8Q,EAAI9Q,GAAK21B,EAAE31B,IAE7B8Q,EAAI9Q,GAAK21B,EAAE31B,IAAM,EACpB,IAEN,KAIKonB,GAASsO,GAEX31B,EAAO9C,SAAQ,SAAU+C,GACN,MAAZ01B,EAAM11B,IAA0B,IAAZ01B,EAAM11B,GAC3B8Q,EAAI9Q,GAAK,IAAIy1B,KAAgBC,EAAM11B,KACjC8Q,EAAI9Q,GAAK,EACjB,GAEN,CACH,CAiBAw1B,YAAY1kB,EAAKyJ,EAAMxa,GACf+Q,IAAKA,EAAM9X,MACXuhB,IAAMA,EAAOvhB,MACb+G,IAAQA,EAAS/G,KAAKm8B,UAAY,IAElC5a,EAAK4D,eACP5D,EAAK4D,aAAe,IAGvB,IAAIsX,EAAez8B,KAAKu8B,kBAExB,GAAIx1B,GAAUA,EAAOZ,OAAS,EAAG,CAC9B,IAAIy2B,GAAW,EAmBf,GAjBArb,EAAK4D,aAAalhB,SAAQ,SAAU04B,GAE7BA,EAAEL,eAAiBG,IAEpB11B,EAAO9C,SAAQ,SAAU+C,GAGR,MAAV8Q,EAAI9Q,KACL21B,EAAE31B,GAAK8Q,EAAI9Q,GAEjB,IAEA41B,GAAW,EAEjB,KAGKA,EAAU,CAEZ,IAAIC,EAAQ,CAAC,EAGbA,EAAMP,cAAgBG,EAEtB11B,EAAO9C,SAAQ,SAAU2B,GACJ,MAAdkS,EAAIlS,KACLi3B,EAAMj3B,GAASkS,EAAIlS,GAEzB,IAEA2b,EAAK4D,aAAa7gB,KAAKu4B,EAC1B,CACH,CACH,cCpOHp9B,EAAOC,QAAU,MACdC,YAAYsF,GAETjF,KAAKiF,OAASA,EACdjF,KAAK+B,GAAKkD,EAAOlD,GAEjB/B,KAAK88B,OAAS,KACd98B,KAAK+8B,MAAQ,KACb/8B,KAAKg9B,MAAQ,KACbh9B,KAAKi9B,OAAS,KAEdj9B,KAAKk9B,uBAAwB,EAC7Bl9B,KAAKm9B,gBAAkB,CAEvB,EACAn9B,KAAKo9B,oBAAsB,GAC3Bp9B,KAAKq9B,oBAAsB,KAG3Br9B,KAAKs9B,gBAAkB,CAAEj5B,IAAK,KAAMiL,QAAS,CAAC,EACjD,CAaAiuB,WAAWl5B,GACRrE,KAAKs9B,gBAAgBj5B,IAAMA,GAAO,IACrC,CAEAm5B,cAAc73B,GACX3F,KAAKs9B,gBAAgBhuB,QAAU3J,GAAU,CAAC,CAC7C,CAIA83B,wBAAwB93B,GAErB,IAAIw2B,EAAWn8B,KAAKiF,OAAOy4B,qBAEvBC,GAAkB,EAClBxB,EAASh2B,QACVg2B,EAASl4B,SAAQ,SAAU2B,GACH,MAAjBD,EAAOC,KACR+3B,GAAkB,EAExB,IAECA,IAEyB,MAAvBh4B,EAAOwf,mBACuB,IAAvBxf,EAAOwf,cACS,IAAvBxf,EAAOwf,eAEPxf,EAAOwf,aAAe,IAEzBnlB,KAAKiF,OAAOu3B,YAAY72B,EAAQA,EAAQw2B,GAE9C,CAEA/jB,QAAQpB,EAAQpB,GAIb,OAHApN,QAAQ+G,MACL,+DAEIE,QAAQC,SAClB,CA2FAkuB,gBAAgBj4B,GACb,MAAO,CACJ2K,IAAKtQ,KAAKiF,OAAO44B,UACjBjoB,OAAQjQ,EAEd,CAEAm4B,gBAAgBl9B,GACb,MAAO,CACJ0P,IAAKtQ,KAAKiF,OAAO84B,YAAYn9B,GAEnC,CAEAo9B,cAAcxP,GACX,MAAO,CACJle,IAAKtQ,KAAKiF,OAAO44B,UACjBjoB,OAAQ4Y,GAAQ,CAAC,EAEvB,CAEAyP,gBAAgBr9B,EAAI+E,GACjB,MAAO,CACJ2K,IAAKtQ,KAAKiF,OAAO84B,YAAYn9B,GAC7BgV,OAAQjQ,EAEd,CAMAurB,MAAM1C,GACHA,EAAOA,GAAQ,CAAC,EAEhB,IAAI5Y,EAAS,CACVtF,IAAKtQ,KAAKiF,OAAOi5B,eACjBtoB,OAAQ4Y,GAEX,OAAOxuB,KAAKoY,QAAQ,MAAOxC,GACvBpB,MAAM2pB,IACJzuB,QAAQyuB,EAAa,IAEvB1pB,OAAOtM,IAMLK,QAAQ+G,MAAMpH,EAAI,GAE3B,CAYAgpB,aAAa3C,GAEV,IAAIO,EAAK/uB,KAAKiF,OAAO8pB,KAEjBqP,EAAS5P,EAAKO,GAKlB,OAJIP,EAAKa,QACN+O,EAAS5P,EAAKa,MAAMN,IAGhB,IAAItf,SAAQ,CAACC,EAASiH,KAC1B,IAAKynB,EAAQ,CACV,IAAIC,EAAM,IAAI/1B,MACX,4CAA8CymB,GAIjD,OAFAsP,EAAI7P,KAAOA,OACX7X,EAAO0nB,EAEV,CAGA,IAAInkB,EAAQ,CACTxK,QAASA,EACTiH,OAAQA,GAEXuD,EAAM6U,GAAMqP,EAGZp+B,KAAKo9B,oBAAoB94B,KAAK4V,GAGzBla,KAAKk9B,wBAEHl9B,KAAKq9B,qBACNtpB,aAAa/T,KAAKq9B,qBAErBr9B,KAAKq9B,oBAAsB1oB,YAAW,KACnC3U,KAAKs+B,qBAAqB,GAC1B,KACN,GAEN,CAMAA,sBACGt+B,KAAKk9B,uBAAwB,EAC7B,IAAIqB,EAAiBv+B,KAAKo9B,oBAC1Bp9B,KAAKo9B,oBAAsB,GAC3B,IAAIrO,EAAK/uB,KAAKiF,OAAO8pB,KAEjByP,EAAe,CAEnB,EACIhQ,EAAO,CAAEa,MAAO,CAAC,GACrBb,EAAKa,MAAMN,GAAM,GAEjBvmB,QAAQ2O,IACL,yCACGonB,EAAep4B,OACf,aAENo4B,EAAet6B,SAASoG,IACrBm0B,EAAan0B,EAAE0kB,IAAOyP,EAAan0B,EAAE0kB,KAAQ,GAC7CyP,EAAan0B,EAAE0kB,IAAKzqB,KAAK+F,EAAE,IAG9BmkB,EAAKa,MAAMN,GAAM5a,OAAOC,KAAKoqB,GAE7Bx+B,KAAK0vB,QAAQlB,GAAMha,MAAM4F,IAElBjN,MAAMC,QAAQgN,EAAIvQ,OAASuQ,EAAIvQ,KAAK1D,QACrCiU,EAAIvQ,KAAK5F,SAAS4F,IAEX20B,EAAa30B,EAAKklB,KAGLyP,EAAa30B,EAAKklB,IACxB9qB,SAASiW,KAEdxK,EADcwK,EAAMxK,SACZ,CAAE7F,KAAM,CAACA,IAAQ,WAGrB20B,EAAa30B,EAAKklB,KAEzBvmB,QAAQ+G,MACL,2EACA1F,EACA20B,EAEN,IAMN,IAAIC,EAAUtqB,OAAOC,KAAKoqB,GACtBC,EAAQt4B,OAAS,GAClBqC,QAAQC,KACL,gCACGg2B,EAAQt4B,OACR,gCAGTs4B,EAAQx6B,SAASI,KAEdqL,EADc8uB,EAAan6B,GAAKqL,SACxB,CAAE7F,KAAM,YACT20B,EAAan6B,EAAI,IAIvBrE,KAAKo9B,oBAAoBj3B,OAAS,EAEnCnG,KAAKs+B,sBAGLt+B,KAAKk9B,uBAAwB,CAChC,GAEN,CAsCAwB,cAAc33B,EAAQ8C,GAYnB,YAXmB,IAARA,IACHsD,MAAMC,QAAQrG,IAA4B,iBAAVA,IAClC8C,EAAO9C,EACPA,EAAS,KAIM,iBAAVA,IACRA,EAAS,CAACA,IAGN,IAAI0I,SAAQ,CAACC,EAASiH,KAE1B,IAAK9M,EAAKjJ,GAGP,YADA8O,EAAQ,MAIX,IAAI8e,EAAO,CAAC,EACZA,EAAKxuB,KAAKiF,OAAO8pB,MAAQllB,EAAKjJ,GAC9BZ,KAAK0vB,QAAQ,CAAEL,MAAOb,EAAMmQ,qBAAqB,IAC7CnqB,MAAMoqB,IACJ,GACIA,EAAQ/0B,MACRsD,MAAMC,QAAQwxB,EAAQ/0B,OACA,GAAvB+0B,EAAQ/0B,KAAK1D,OAHhB,CAUA,IAAI04B,EAAQD,EAAQ/0B,KAAK,GAGzB,GAAqB,GAAjB9C,EAAOZ,OAAa,CACrB,IAAI0D,EACDg1B,EACG93B,EAAO,GAAGiM,QAAQ,gBAAiB,IAAM,cAE/C,OAAKnJ,GAEAsD,MAAMC,QAAQvD,KAAOA,EAAO,CAACA,SAElC6F,EAAQ7F,IAJU6F,EAAQ,GAM7B,CAGqB,GAAjB3I,EAAOZ,QACQnG,KAAKiF,OAAO8B,QAAQC,GAC1BA,EAAEZ,SAASa,WAEXhD,SAAS+C,IAChBD,EAAOzC,KAAK0C,EAAEF,WAAW,IAI/B,IAAIg4B,EAAa,CAAC,EAClB/3B,EAAO9C,SAASgzB,IACb6H,EAAW7H,GACR4H,EAAM5H,EAAQjkB,QAAQ,gBAAiB,IAAM,aAAa,IAGhEtD,EAAQovB,EAnCR,MAFGpvB,EAAQ,GAqCQ,IAErB+E,OAAOtM,IACLK,QAAQ+G,MAAM,0CAA2CpH,GACzDwO,EAAOxO,EAAI,GACZ,GAEX,CA0JA42B,OAAOp5B,GAIJ,IAAK,IAAItB,KAHTrE,KAAKy9B,wBAAwB93B,GAGbA,EACM,MAAfA,EAAOtB,WAAqBsB,EAAOtB,GAG1C,IAAIuR,EAAS,CACVtF,IAAKtQ,KAAKiF,OAAO44B,UACjBjoB,OAAQjQ,GAEX,OAAO3F,KAAKoY,QAAQ,MAAOxC,GACvBpB,MAAM3K,IAGJ7J,KAAKiY,cAAcpO,GAEZA,KAMT4K,OAAOtM,IACLK,QAAQ+G,MAAMpH,EAAI,GAE3B,CAQAknB,MAAMb,GAEH,OADAxuB,KAAK88B,OAAStO,EACPxuB,IACV,CAQA2N,KAAK6gB,GAEF,OADAxuB,KAAK+8B,MAAQvO,EACNxuB,IACV,CAMA0E,UAEG,OADA8D,QAAQ+G,MAAM,qDACPE,QAAQC,SAMlB,CAEAuI,cAAcpO,GAELA,aAAgBsD,QAAQtD,EAAO,CAACA,IAGtC,IAAIyc,EAAkBtmB,KAAKiF,OAAOshB,gBAG9B4V,EAAWn8B,KAAKiF,OAAOy4B,qBAGvBsB,EACDh/B,KAAKiF,OAAO8B,QAAO,SAAUC,GAC1B,MAAgB,QAATA,EAAE3C,KAA0B,YAAT2C,EAAE3C,GAC/B,KAAM,GAGL46B,EAAmBj/B,KAAKiF,OAAO8B,QAAQC,GAAe,aAATA,EAAE3C,MAEnDwF,EAAK5F,SAASosB,IACF,MAALA,IAGCA,EAAEzvB,IAA0B,MAApBZ,KAAKiF,OAAO8pB,OAAcsB,EAAEzvB,GAAKyvB,EAAErwB,KAAKiF,OAAO8pB,OAG5DzI,EAAgBriB,SAASV,IAEtB,IAAIitB,EAAejtB,EAAEitB,eAMrB,GAAuB,MAAnBH,EAAEG,GAAuB,OAIA,iBAAnBH,EAAEG,IACTH,EAAEG,GAAcrqB,OAAS,IAGzBkqB,EAAEG,GAAgB3c,KAAK0D,MAAM8Y,EAAEG,KAI9BrjB,MAAMC,QAAQijB,EAAEG,IACjBH,EAAEG,GAAcvsB,SAAS2L,IAElBA,EAAEuV,cAAyC,iBAAlBvV,EAAEuV,eAE5BvV,EAAEuV,aAAetR,KAAK0D,MAAM3H,EAAEuV,cACjC,IAIHkL,EAAEG,GAAcrL,cACuB,iBAAhCkL,EAAEG,GAAcrL,eAGvBkL,EAAEG,GAAcrL,aAAetR,KAAK0D,MACjC8Y,EAAEG,GAAcrL,eAKtB,IAAI+Z,EAAa37B,EAAEqD,eAEhBs4B,GACmB,MAAnBA,EAAWnQ,MACXsB,EAAEG,KACDH,EAAEG,GAAc5vB,KAGbyvB,EAAEG,GAAcvsB,QACjBosB,EAAEG,GAAcvsB,SAASk7B,IAClBA,EAAQD,EAAWnQ,QACpBoQ,EAAQv+B,GAAKu+B,EAAQD,EAAWnQ,MAAK,IAEnCsB,EAAEG,GAAc0O,EAAWnQ,QACnCsB,EAAEG,GAAc5vB,GAAKyvB,EAAEG,GAAc0O,EAAWnQ,QAItD,IAAIqQ,EAAkBF,EAAWxB,qBAC7B0B,EAAgBj5B,QACjB+4B,EAAW9C,UACR/L,EAAEG,GACFH,EAAEG,GACF4O,GAKD/O,EAAE9sB,EAAEuD,cAAaupB,EAAE9sB,EAAEuD,YAAcupB,EAAEG,GAAa,IAGtD2L,EAASh2B,QACVnG,KAAKiF,OAAOm3B,UAAU/L,EAAGA,EAAG8L,GAI/B6C,EAAW/6B,SAASwc,IACb4P,GAA2B,MAAtBA,EAAE5P,EAAK3Z,aAEoB,iBAAtBupB,EAAE5P,EAAK3Z,cACC,QAAZ2Z,EAAKpc,IAGNgsB,EAAE5P,EAAK3Z,YAAc9G,KAAK+B,GAAGof,MAAMhB,OAAOkQ,EAAE5P,EAAK3Z,YAAa,CAC3DwZ,OAAQ,aACRD,YAAY,IAIfgQ,EAAE5P,EAAK3Z,YAAc9G,KAAK+B,GAAGof,MAAMhB,OAAOkQ,EAAE5P,EAAK3Z,aAI1D,IAGHm4B,EAAiBh7B,SAASo7B,IACvBhP,EAAEgP,EAASv4B,YAAcu4B,EAAS/e,OAAO+P,EAAE,IAC5C,GAER,oBCxyBH,IAAIiP,EAAU,EAAQ,OAClBvc,EAAY,EAAQ,OAExB,MAAMhjB,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,MAAM6/B,UAAqBxc,EACzCpjB,YAAYqjB,EAAYjhB,GACrBjC,MAAM,CAAC,SAAUiC,GA6BjB/B,KAAKiG,WAAW+c,EACnB,CASA0H,oBACG,MAAO,QACV,CAMAzkB,WAAW+c,GA4BRhjB,KAAKY,GAAKoiB,EAAWpiB,GAIrBZ,KAAK4B,KAAOohB,EAAWphB,MAAQ,SAI/B5B,KAAKw/B,SAAWxc,EAAWwc,eAAY7U,EAKvC3qB,KAAKmH,KAAO6b,EAAW7b,MAAQ,GAK/BnH,KAAKy/B,YAAczc,EAAWyc,aAAe,GAK7Cz/B,KAAK0/B,cAAgB1c,EAAW0c,eAAiB,CAAC,EAGlD1/B,KAAK0/B,cAAcC,iBAAmBra,SACnCtlB,KAAK0/B,cAAcC,kBAAoB,GAI1C3/B,KAAK4I,WAAa0c,SAAStC,EAAWpa,YAAc,GAMpD5I,KAAK24B,WAAarT,SAAStC,EAAW2V,YAAc,GAUpD34B,KAAK4/B,UAAY5c,EAAW4c,WAAa,GAMzC5/B,KAAK4/B,UAAY5/B,KAAK4/B,UAAU5sB,QAAQ,mBAAoB,IAE5DhT,KAAK6/B,kBAAoB7c,EAAW6c,mBAAqB,GAMzD7/B,KAAK8/B,gBAAkB9c,EAAW8c,iBAAmB,GAIrD9/B,KAAK+/B,QAAU/c,EAAW+c,SAAW,GAIrC//B,KAAK0jB,eAAiBV,EAAWU,oBAOA,IAAvB1jB,KAAK0jB,gBACW,SAAvB1jB,KAAK0jB,iBAEL1jB,KAAK0jB,gBAAiB,GAGzB1jB,KAAKggC,eAAiBhd,EAAWgd,oBAMQ,IAA9Bhd,EAAWqG,uBACiC,IAAzCrG,EAAWqG,gBAAgB9c,aACnCyW,EAAWqG,gBAAgB9c,WAAa,SACe,IAA/CyW,EAAWqG,gBAAgBC,mBACnCtG,EAAWqG,gBAAgBC,iBAAmB,SACO,IAA7CtG,EAAWqG,gBAAgB4W,iBACnCjd,EAAWqG,gBAAgB4W,eAAiB,SACO,IAA3Cjd,EAAWqG,gBAAgB6W,eACnCld,EAAWqG,gBAAgB6W,aAAe,KAEhDlgC,KAAKqpB,gBAAkBrG,EAAWqG,iBAAmB,CAClD9c,WAAY,GACZ+c,iBAAkB,GAClB2W,eAAgB,GAChBC,aAAc,IAQjB,IAAIn5B,EAAS,GACb/G,KAAK07B,SAAW1Y,EAAW0Y,UAAY,GAMvC17B,KAAKmgC,iBAAmBnd,EAAWmd,kBAAoB,GAKvDngC,KAAK27B,iBAAmB,GACxB37B,KAAK07B,SAASz3B,SAASrD,IACpB,GAAKA,EAAL,CAEA,IAAI6gB,EAAMzhB,KAAK+B,GAAGsiB,eAAezjB,GACjC,GAAI6gB,EACD1a,EAAOzC,KAAKtE,KAAK+B,GAAGmE,SAASub,EAAKzhB,WAC9B,CACJA,KAAK27B,iBAAiBr3B,KAAK1D,GAC3B,IAAIuH,EAAM,IAAIG,MACX,KAAKtI,KAAKmH,6CAA6CvG,MAE1DZ,KAAK+B,GAAGqG,OAAOotB,QAAQrtB,EAAK,CACzBvC,MAAO,CAAEhF,KAAIqE,OAAQ,CAAErE,GAAIZ,KAAKY,GAAIuG,KAAMnH,KAAKmH,QAErD,CAbe,CAaf,IAEHnH,KAAKogC,QAAUr5B,EAGf/G,KAAKqgC,cAAcrd,EAAWsd,UAG9BxgC,MAAMmG,WAAW+c,EACpB,CAQAqd,cAAcC,GACXtgC,KAAKugC,cAAgB,GACrB,IAAIC,EAAU,IACbF,GAAY,IAAIr8B,SAASrD,IACvB,IAAI6gB,EAAMzhB,KAAK+B,GAAGsiB,eAAezjB,GACjC,GAAI6gB,EACD+e,EAAQl8B,KAAKtE,KAAK+B,GAAG02B,SAAShX,EAAKzhB,WAC/B,CACJA,KAAKugC,cAAcj8B,KAAK1D,GACxB,IAAIuH,EAAM,IAAIG,MACX,KAAKtI,KAAKmH,6CAA6CvG,MAE1DZ,KAAK+B,GAAGqG,OAAOotB,QAAQrtB,EAAK,CACzBvC,MAAO,CAAEhF,KAAIqE,OAAQ,CAAErE,GAAIZ,KAAKY,GAAIuG,KAAMnH,KAAKmH,QAErD,KAEHnH,KAAKygC,SAAWD,CACnB,CAuCA16B,QAEG,IAAIgS,EAAMhY,MAAMgG,QAGZ41B,EAAW17B,KAAK+G,SAASoH,KAAKnH,GAAMA,EAAEpG,MACzCZ,KAAK27B,kBAAoB,IAAI13B,SAASrD,IACpC86B,EAASp3B,KAAK1D,EAAG,IAOpB,IAAI0/B,EAAWtgC,KAAKwgC,UAAUryB,KAAKnH,GAAMA,EAAEpG,KAK3C,OAJCZ,KAAKugC,eAAiB,IAAIt8B,SAASrD,IACjC0/B,EAASh8B,KAAK1D,EAAG,IAGb,CACJA,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,SACnB49B,SAAUx/B,KAAKw/B,SACfr4B,KAAMnH,KAAKmH,KACXs4B,YAAaz/B,KAAKy/B,YAClBC,cAAe1/B,KAAK0/B,eAAiB,CAAC,EACtC92B,WAAY5I,KAAK4I,WACjB+vB,WAAY34B,KAAK24B,WACjBiH,UAAW5/B,KAAK4/B,UAEhBC,kBAAmB7/B,KAAK6/B,kBAExBC,gBAAiB9/B,KAAK8/B,gBAEtBC,QAAS//B,KAAK+/B,QAEd1W,gBAAiBrpB,KAAKqpB,gBACtB3F,eAAgB1jB,KAAK0jB,eAErByB,aAAcrN,EAAIqN,aAClBuW,SAAUA,EACVyE,iBAAkBngC,KAAKmgC,iBACvBG,SAAUA,EACVN,eAAgBhgC,KAAKggC,eAE3B,CAcAU,cAGG,OAFoB1gC,KAAKumB,gBAEJpY,KAAKnH,GAAMA,EAAEJ,gBACrC,CAcAG,OAAO2J,EAAK,MAAM,IACf,OAAO1Q,KAAKogC,QAAQt3B,OAAO4H,EAC9B,CASA3C,UAAUnN,GACP,OAAOZ,KAAK+G,QAAQC,GAAMA,GAAGpG,IAAMA,IAAI,EAC1C,CAWA2lB,cAAc7V,EAAK,MAAM,IACtB,OAAO1Q,KAAK+G,QAAQC,GAAMA,GAAKA,EAAE25B,eAAc73B,OAAO4H,EACzD,CAWAkwB,YAAYhgC,GACT,GAAKA,KAEqC,GAAtCZ,KAAKmgC,iBAAiB9yB,QAAQzM,IAC/BZ,KAAKmgC,iBAAiB77B,KAAK1D,IAIhBZ,KAAKogC,QAAQtT,MAAM9lB,GAAMA,EAAEpG,IAAMA,KACjC,CACX,IAAI6gB,EAAMzhB,KAAK+B,GAAGsiB,eAAezjB,GACjC,GAAI6gB,EACDzhB,KAAKogC,QAAQ97B,KAAKtE,KAAK+B,GAAGmE,SAASub,EAAKzhB,WACpC,CACJA,KAAK27B,iBAAmB37B,KAAK27B,kBAAoB,GACjD37B,KAAK27B,iBAAiBr3B,KAAK1D,GAC3B,IAAIuH,EAAM,IAAIG,MACX,KAAKtI,KAAKmH,0CAA0CvG,MAEvDZ,KAAK+B,GAAGqG,OAAOotB,QAAQrtB,EAAK,CACzBvC,MAAO,CAAEhF,KAAIqE,OAAQ,CAAErE,GAAIZ,KAAKY,GAAIuG,KAAMnH,KAAKmH,QAErD,CACH,CACH,CAaAjB,SAASP,GACN,OAAO3F,KAAK+B,GAAGmE,SAASP,EAAQ3F,KACnC,CAWA6gC,YAAYj7B,GACT,IAAIk7B,EAAU9gC,KAAKogC,QAAQj6B,OAW3B,OAVAnG,KAAKogC,QAAUpgC,KAAK+G,QAAO,SAAU+e,GAClC,OAAOA,EAAEllB,IAAMgF,EAAMhF,EACxB,IAIAZ,KAAKmgC,iBAAmBngC,KAAKmgC,iBAAiBr3B,QAC1Ci4B,GAAQA,GAAOn7B,EAAMhF,KAGrBZ,KAAKogC,QAAQj6B,OAAS26B,EAChB9gC,KAAK4H,OAIR6H,QAAQC,SAClB,CAUAsxB,aAAaC,EAAUC,GAIpB,IAAIC,EAAY,KACZC,EAAO,EACX,IAAK,IAAI/tB,EAAI,EAAGA,EAAIrT,KAAKogC,QAAQj6B,OAAQkN,IACtC,GAAIrT,KAAKogC,QAAQ/sB,GAAGvM,YAAcm6B,EAAU,CACzCE,EAAYnhC,KAAKogC,QAAQ/sB,GACzBrT,KAAKogC,QAAQj0B,OAAOkH,EAAG,GACvB+tB,EAAO/tB,EACP,KACH,CAKH,IAAK,IAAIguB,EAAI,EAAGA,EAAIrhC,KAAKogC,QAAQj6B,OAAQk7B,IACtC,GAAIrhC,KAAKogC,QAAQiB,GAAGv6B,YAAco6B,EAAU,CAIrCE,GAAQC,GACTA,IAEHrhC,KAAKogC,QAAQj0B,OAAOk1B,EAAG,EAAGF,GAC1B,KACH,CAGH,OAAOnhC,KAAK4H,MACf,CAWA05B,UAAU17B,GAEP,OADiB5F,KAAK+N,UAAUnI,EAAMhF,IAM/B6O,QAAQC,WAJZ1P,KAAKogC,QAAQ97B,KAAKsB,GACX5F,KAAK4H,OAIlB,CAWA25B,SAAS37B,GAEN,OADiB5F,KAAK+N,UAAUnI,EAAMhF,IAQ/B6O,QAAQC,WALZ1P,KAAKogC,QAAQ97B,KAAKsB,GACX5F,KAAK4H,OAKlB,CAWA45B,YAAY9wB,EAAK,MAAM,IACpB,OAAO1Q,KAAK+G,QAAQC,GAAMA,GAAc,SAATA,EAAE3C,MAAgByE,OAAO4H,EAC3D,CASAgtB,qBACG,OAAO19B,KAAK+G,QAAQC,GAAMA,GAAKA,EAAEy6B,iBAAgBtzB,KAAKnH,GAAMA,EAAEF,YACjE,CAWA05B,QAAQ13B,EAAS,MAAM,IACpB,OAAO9I,KAAKygC,SAAS33B,OAAOA,EAC/B,CASA44B,UAAU9gC,GACP,OAAOZ,KAAKwgC,SAASx5B,GAAMA,EAAEpG,IAAMA,IAAI,EAC1C,CASA+gC,YAAY51B,GACT,IAAI+0B,EAAU9gC,KAAKygC,SAASt6B,OAM5B,OALAnG,KAAKygC,SAAWzgC,KAAKwgC,SAAQ,SAAUoB,GACpC,OAAOA,EAAIhhC,IAAMmL,EAAMnL,EAC1B,IAGIkgC,GAAW9gC,KAAKygC,SAASt6B,OACnBnG,KAAK4H,OAIR6H,QAAQC,SAClB,CASAmyB,UAAU91B,GAEP,OADiB/L,KAAK0hC,UAAU31B,EAAMnL,IAM/B6O,QAAQC,WAJZ1P,KAAKygC,SAASn8B,KAAKyH,GACZ/L,KAAK4H,OAIlB,CAWAI,QACG,IAAIA,EAAQ,IAAIs3B,EAAQt/B,MAMxB,OAHAgI,EAAMu1B,WAAWgC,EAAahC,cAC9Bv1B,EAAMw1B,cAAc,CAAE58B,GAAIZ,KAAKY,KAExBoH,CACV,CAWA61B,UACG,MAAO,sBAAsB79B,KAAKY,IACrC,CAOAkhC,eACG,MAAO,4BAA4B9hC,KAAKY,IAC3C,CAOAm9B,YAAYn9B,GACT,MAAO,sBAAsBZ,KAAKY,MAAMA,GAC3C,CAOAmhC,aACG,MAAO,uBAAuB/hC,KAAKY,UACtC,CAOAohC,iBACG,MAAO,oCAAoChiC,KAAKY,IACnD,CAOAs9B,eACG,MAAO,4BAA4Bl+B,KAAKY,IAC3C,CAKIqhC,0BAED,GAAIjiC,KAAKkiC,eAAgB,CACtB,IAAIC,EAAWniC,KAAKkiC,eAAeE,iBACnC,OAAID,EAAiBA,EAAS51B,WAClB,IACf,CAGG,OAAOvM,KAAKqpB,gBAAgB9c,UAElC,CAEI01B,wBAAoBl7B,GAErB,GAAI/G,KAAKkiC,eAAgB,CACtB,IAAIC,EAAWniC,KAAKkiC,eAAeE,iBAC/BD,IAAUA,EAAS51B,WAAaxF,EACvC,MAGG/G,KAAKqpB,gBAAgB9c,WAAaxF,CAExC,CAEIs7B,gCAED,GAAIriC,KAAKkiC,eAAgB,CACtB,IAAIC,EAAWniC,KAAKkiC,eAAeE,iBACnC,OAAID,EAAiBA,EAAS7Y,iBAClB,IACf,CAGG,OAAOtpB,KAAKqpB,gBAAgBC,gBAElC,CAEI+Y,8BAA0B/Y,GAE3B,GAAItpB,KAAKkiC,eAAgB,CACtB,IAAIC,EAAWniC,KAAKkiC,eAAeE,iBAC/BD,IAAUA,EAAS7Y,iBAAmBA,EAC7C,MAGGtpB,KAAKqpB,gBAAgBC,iBAAmBA,CAE9C,CAEIgZ,8BACD,OAAOtiC,KAAKqpB,gBAAgB4W,cAC/B,CAEIqC,4BAAwB1hC,GACzBZ,KAAKqpB,gBAAgB4W,eAAiBr/B,CACzC,CAEI2hC,4BACD,OAAOviC,KAAKqpB,gBAAgB6W,cAAgB,EAC/C,CAEIqC,0BAAsBx7B,GACvB/G,KAAKqpB,gBAAgB6W,aAAen5B,CACvC,CAOIy7B,iBACD,OAAOxiC,KAAK4I,YAAc5I,KAAK24B,UAClC,CASA8J,gBACG,IAAI98B,EAAS,CAAC,EAKd,OAJA3F,KAAK+G,SAAS9C,SAAS+C,IACpBA,EAAE07B,aAAa/8B,EAAO,IAGlBA,CACV,CASAkqB,cAGG,OADArnB,QAAQC,KAAK,4CACN,CACV,CAYA2f,WAAWC,GAGR,OAFA7f,QAAQ+G,MAAM,wBAEU,MAApBvP,KAAK+E,YAA4B,KAE9B/E,KAAK+E,YAAYujB,UAAUD,GAAaroB,KAAKY,EACvD,CAUA+hC,SAASta,GAGN,OAFA7f,QAAQ+G,MAAM,wBAEPvP,KAAKooB,WAAWC,GAAa,WACvC,CAQA0G,KACG,OAAO/uB,KAAK6/B,mBAAqB,MACpC,CAEA+C,aAAa/4B,GACVrB,QAAQ2O,IACL,UAAYnX,KAAKmH,KAAO,yCACxB0C,EAEN,CAQAirB,QAGG,IAEI+N,EAAWhvB,KAAK0D,MAAM1D,KAAKC,UAAU9T,OAMzC,MARkB,CAAC,cAAe,WAItBiE,SAAS6+B,IAClBD,EAASC,GAAQ9iC,KAAK8iC,EAAK,IAGvBD,CACV,CAGAE,YAAYhV,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAIoO,EAAWn8B,KAAK09B,qBACpB19B,KAAKo8B,UAAUrO,EAASA,EAASoO,GAEjC,IAAI6G,EAAYhjC,KAAKy/B,aAAe,GAGpC,IAAKuD,GAAahjC,KAAK+G,SAASZ,OAAS,EAAG,CACzC,IAAI88B,EAAejjC,KAAK+G,QAAQC,GAAMA,EAAEk8B,oBAAmB,GAC3D,GAAID,EAAcD,EAAY,IAAMC,EAAariC,GAAK,SAGnD,IAAKoiC,EAAUG,OAAQ,CACpB,IAAIzD,EAAgB1/B,KAAK0/B,eAAiB,CAAC,EAExCsD,EADCtD,GAAiBA,EAAcC,iBACpB5/B,EAAE2/B,EAAc0D,aAAe,cAG/B,GACTpjC,KAAK+B,GAAGof,MAAMgB,OAAO4L,EAAQntB,IAAM,OAAS,KAC5CmtB,EAAQntB,IAEjB,CAEN,CAIA,IAAIyiC,EAASL,EAAUM,MAAM,cAc7B,GAZID,GAAUA,EAAOp/B,SAClBo/B,EAAOp/B,SAASs/B,IACb,IAAIC,EAAiBD,EAAMvwB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDpN,EAAQ5F,KAAK+N,UAAUy1B,GACd,MAAT59B,IAEJo9B,EAAYA,EAAUhwB,QAAQuwB,EAAO39B,EAAM0a,OAAOyN,IAAY,IAAG,KAKlEiV,EAAUG,OAAQ,CACpB,IAAIzD,EAAgB1/B,KAAK0/B,eAAiB,CAAC,EAExCsD,EADCtD,GAAiBA,EAAcC,iBACpB5/B,EAAE2/B,EAAc0D,aAAe,cAG/B,GAAGpjC,KAAK+B,GAAGof,MAAMgB,OAAO4L,EAAQntB,IAAM,OAAS,KACxDmtB,EAAQntB,IAGjB,CAEA,OAAOoiC,CACV,oBCt7BH,IAAI/R,EAAW,EAAQ,OACnBwS,EAAe,EAAQ,OAE3BhkC,EAAOC,QAAU,cAAgCuxB,EAC9CtxB,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAgDlB/B,KAAKypB,SAAU,EAIfzpB,KAAK0jC,gBAAkB1jC,KAAK0jC,iBAAmB,GAI/C1jC,KAAK2jC,gBAAkB3jC,KAAK2jC,iBAAmB,GAI/C3jC,KAAK4jC,aAAe,GAIpB5jC,KAAK6jC,kBAAoB,GAIzB7jC,KAAK8jC,eAAiB,EAGzB,CAeApZ,oBACG,MAAO,OACV,CAQAzkB,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAK4B,KAAO,QAMZ5B,KAAK+jC,UAAY,CAAC,EAKlB/jC,KAAKgkB,UAAY,GAKjBhkB,KAAKu7B,SAAWvY,EAAWuY,UAAY,GAMvCv7B,KAAKgkC,YAAYhhB,EAAWihB,OAAS,CAAC,GAGtCjkC,KAAKogC,QAAU,KACfpgC,KAAKkkC,aAAalhB,EAAWjc,QAAU,IASvC/G,KAAKqvB,MAAQrM,EAAWqM,OAAS,CAAC,EAG/BrvB,KAAKqvB,QACJrvB,KAAKqvB,MAAM9F,MACZvpB,KAAKqvB,MAAMlO,OACXnhB,KAAKqvB,MAAMlO,MAAMhb,OAAS,IAE1BnG,KAAKqvB,MAAM9F,KAAO,OAErBvpB,KAAKmkC,sBAAwBnhB,EAAWohB,sBAAwB,CAAC,EAEjEpkC,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAE9B4c,GAAcA,EAAW5c,WAE1BpG,KAAKoG,SAASi+B,SAAWxwB,KAAK0D,MAC3ByL,EAAW5c,SAASi+B,WAAY,GAEnCrkC,KAAKoG,SAASk+B,WAAazwB,KAAK0D,MAC7ByL,EAAW5c,SAASk+B,aAAc,GAG3C,CAUAx+B,QACG,IAAIgI,EAAShO,MAAMgG,QAUnB,OARAgI,EAAOytB,SAAWv7B,KAAKu7B,SAEvBztB,EAAOm2B,MAAQjkC,KAAKukC,cACpBz2B,EAAO/G,OAAS/G,KAAKwkC,eACrB12B,EAAOuhB,MAAQrvB,KAAKqvB,MAEpBvhB,EAAO1H,SAAWpG,KAAKoG,SAEhB0H,CACV,CAaAo2B,aAAaO,GACV,IAAIC,EAAY,IACfD,GAAiB,IAAIxgC,SAAS0gC,IAC5B,GAAiB,MAAbA,EAAmB,OAGvB,IAAI1/B,EAASjF,KAAK4kC,cAAcD,EAAUpV,OAa1C,IAVKtqB,GAAUjF,KAAK+B,KACjBkD,EAASjF,KAAK+B,GAAGgW,WAAW4sB,EAAUtK,UAGlCp1B,IACDjF,KAAK6kC,SAAW7kC,KAAK6kC,UAAY,CAAC,EAClC7kC,KAAK6kC,SAASF,EAAUpV,OAAStqB,KAIlCA,EAGF,OAFAjF,KAAK0jC,gBAAkB1jC,KAAK0jC,iBAAmB,QAC/C1jC,KAAK0jC,gBAAgBp/B,KAAKqgC,GAI7B,IAAI/+B,EAAQX,EAAO8I,UAAU42B,EAAUrK,SACvC,IAAK10B,EAOF,OANA5F,KAAK2jC,gBAAkB3jC,KAAK2jC,iBAAmB,QAC/C3jC,KAAK2jC,gBAAgBr/B,KAAK,CACvBwgC,MAAO7/B,EAAOrE,GACd05B,QAASqK,EAAUrK,QACnBqK,cAKD3kC,KAAK+kC,eAAen/B,KACtB5F,KAAK4jC,aAAe5jC,KAAK4jC,cAAgB,GACzC5jC,KAAK4jC,aAAat/B,KAAK,CAAEsB,QAAO++B,eAInC,IAAIK,EACDN,EAAU57B,QACN9B,GACEA,EAAEuoB,OAASoV,EAAUpV,OAASvoB,EAAEpB,MAAMhF,IAAM+jC,EAAUrK,UAC1Dn0B,OAAS,EAQd,GANK6+B,IACFhlC,KAAK6jC,kBAAoB7jC,KAAK6jC,mBAAqB,GACnD7jC,KAAK6jC,kBAAkBv/B,KAAK,CAAEqgC,eAI7B/+B,GAAS5F,KAAK+kC,eAAen/B,IAAUo/B,EAAO,CAG/C,IAAIvjB,EAAM7b,EAAME,QAChB,IAAIm/B,EAAc,IAAIr/B,EAAMjG,YAAY8hB,EAAK7b,EAAMX,QAEnDggC,EAAY1V,MAAQoV,EAAUpV,MAE9B,IAAIA,EAAQoV,EAAUpV,MAClBpiB,MAAMC,QAAQpN,KAAKikC,WAEpB1U,EAAQ3pB,EAAMX,OAAOkC,MAGxBu9B,EAAUpgC,KAAK,CACZirB,MAAOA,EACP3pB,MAAOq/B,GAEb,KAEHjlC,KAAKogC,QAAUsE,CAClB,CAOAF,eACG,IAAIU,EAAa,GAmBjB,OAlBAllC,KAAKogC,QAAQn8B,SAAS0gC,IACnBO,EAAW5gC,KAAK,CACbirB,MAAOoV,EAAUpV,MACjB8K,SAAUsK,EAAU/+B,MAAMX,OAAOrE,GACjC05B,QAASqK,EAAU/+B,MAAMhF,IAC1B,KAKJZ,KAAK0jC,iBAAmB,IAAIz/B,SAAS+C,IACnCk+B,EAAW5gC,KAAK0C,EAAE,KAGpBhH,KAAK4jC,cAAgB,IAAI3/B,SAAS+C,IAChCk+B,EAAW5gC,KAAK0C,EAAE29B,UAAU,IAGxBO,CACV,CAUAn+B,OAAO2J,EAAK,MAAM,IAEf,OADKA,IAAIA,EAAK,KAAM,GACb1Q,KAAKogC,QAAQjyB,KAAKnH,GAAMA,EAAEpB,QAAOkD,OAAO4H,EAClD,CAaAuzB,QACG,OAAOjkC,KAAKmlC,QAAU,CAAC,CAC1B,CASAhf,QAAQzV,EAAK,MAAM,IAIhB,OAAO1Q,KAAK+B,GAAGokB,SAASL,GAAM9lB,KAAKgkB,UAAU3W,QAAQyY,EAAEllB,KAAO,IAAGkI,OAC9D4H,EAEN,CASA8e,YAAYxX,GACT,IAAIlK,EAAS,KAQb,OANAqG,OAAOC,KAAKpU,KAAK+jC,WAAa,CAAC,GAAG9/B,SAASsrB,IACnCzhB,GAAU9N,KAAK+jC,UAAUxU,IAAUvX,IACrClK,EAASyhB,EACZ,IAGIzhB,CACV,CAQAs3B,aACG,OAAKplC,KAAKmlC,OAAO9K,UAEVr6B,KAAK+B,GAAGgW,WAAW/X,KAAKmlC,OAAO9K,WAFJ,IAGrC,CASAuK,cAAcrV,GACX,IAAIuV,EAAQ9kC,KAAK+jC,UAAUxU,GAC3B,OAAIuV,EACM9kC,KAAKmmB,SAASL,GAAMA,EAAEllB,IAAMkkC,IAAO,GAEtC,IACV,CASA/sB,WAAW+sB,GACR,OAAIA,EACM9kC,KAAKmmB,SAASL,GAAMA,EAAEllB,IAAMkkC,IAAO,GAEtC,IACV,CASAO,MAAMv8B,EAAS,MAAM,IAClB,OAAQ9I,KAAKslC,QAAU,IAAIx8B,OAAOA,EACrC,CASAk7B,YAAY59B,GAETpG,KAAKmlC,OAASnlC,KAAK+B,GAAG2D,UAAUU,GAEhC,IAAIm/B,EAAkB,CAAC,EAKnBC,EAAW,GAIf,IAAIC,EAAc,CAACxgC,EAAQsqB,KACnBtqB,IAMLjF,KAAK+jC,UAAUxU,GAAStqB,EAAOrE,GAC/B2kC,EAAgBtgC,EAAOrE,IAAMqE,EAAOrE,GAAE,EAQrC8kC,EAAcL,KACdA,GAAS,IAAIphC,SAAS0hC,IAGpBH,EAASlhC,KAAKqhC,EAAK,GAEpB,EAGDC,EAAc,CAACC,EAAY5B,KACvB4B,IAEL7lC,KAAK8jC,eAAiB9jC,KAAK8jC,gBAAkB,IAE5CG,GAAS,IAAIhgC,SAAS0hC,IAkBpB,IAAIG,EAAYD,EAAW93B,UAAU43B,EAAKrL,SAC1C,GAAKwL,EAAL,CAWA,IAAIn/B,EAAa3G,KAAK+B,GAAGgW,WAAW+tB,EAAU1/B,SAASO,YAClDA,GAUL8+B,EAAY9+B,EAAYg/B,EAAKpW,OAE7BmW,EAAWC,EAAKN,OAEhBO,EAAYj/B,EAAYg/B,EAAKN,QAb1BrlC,KAAK8jC,eAAex/B,KAAK,CACtBgN,QAAS,oDAAoDw0B,EAAU1/B,SAASO,cAChFkD,KAAM,CACH87B,SART,MAPG3lC,KAAK8jC,eAAex/B,KAAK,CACtBgN,QAAS,mCAAmCq0B,EAAKrL,WACjDzwB,KAAM,CACH87B,SAsB0B,IACpC,EAQL,IAAII,EAAa/lC,KAAKolC,aACjBW,GAWLN,EAAYM,EAAY,eAExBL,EAAWt/B,EAASi/B,OAEpBO,EAAYG,EAAY3/B,EAASi/B,OAGjCrlC,KAAKslC,OAASE,EACdxlC,KAAKgkB,UAAY7P,OAAOC,KAAKmxB,IAjB1BvlC,KAAK8jC,eAAex/B,KAAK,CACtBgN,QAAS,oCACTzH,KAAM,CACHwwB,SAAUr6B,KAAKmlC,QAAQ9K,WAenC,CAOAkK,cACG,OAAOvkC,KAAK+B,GAAG2D,UAAU1F,KAAKmlC,QAAU,CAAC,EAC5C,CAWAn9B,QACG,IAAIA,EAAQ,IAAIy7B,EAAazjC,MAM7B,OAHAgI,EAAMu1B,WAAWv9B,KAAKL,YAAY49B,cAClCv1B,EAAMw1B,cAAc,CAAE58B,GAAIZ,KAAKY,KAExBoH,CACV,CASAg+B,gBAAgB/gC,GACb,QAAKA,GAIFjF,KAAKmmB,SAASrO,GACJA,EAAIlX,IAAMqE,EAAOrE,KACxBuF,OAAS,CAElB,CASA4+B,eAAen/B,GACZ,IAAKA,EAAO,OAAO,EAGnB,IAAIX,EAASW,EAAMX,OAKnB,IAAIghC,EAAergC,EAAMgB,eAEzB,OAAO5G,KAAKgmC,gBAAgB/gC,IAAWjF,KAAKgmC,gBAAgBC,EAC/D,CAYA7d,WAAWC,GAIR,OAHA7f,QAAQ+G,MACL,sEAEIvP,KAAK+E,YAAYyjB,SAASH,GAAaroB,KAAKY,EACtD,CAOIskB,cACD,OAAOllB,KAAKoG,SAASi+B,WAAY,CACpC,CAOI7B,iBACD,OAAO,CACV,CAQA0D,aACG,OAAOlmC,KAAKmmC,WAAY,CAC3B,CAEI9D,gCACD,IAAI/Y,EAAmBxpB,MAAMuiC,0BAS7B,OAPuB,MAApB/Y,GAC0B,MAA1BA,EAAiBnI,OAChBmI,EAAiBnI,MAAMhb,SAExBmjB,EAAmBtpB,KAAKqvB,OAGpB/F,CACV,oBCxqBH,IAAIvG,EAAY,EAAQ,OACxB,MAAMqjB,EAAU,EAAQ,OAExB3mC,EAAOC,QAAU,cAA4BqjB,EAC1CpjB,YAAYqjB,EAAYjhB,GACrBjC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAKiG,WAAW+c,GAGhBhjB,KAAKkJ,WAAWjF,SAASoG,IACtBA,EAAEg8B,gBAAgB,GAExB,CASApgC,WAAW+c,GASRhjB,KAAKY,GAAKoiB,EAAWpiB,GACrBZ,KAAKmH,KAAO6b,EAAW7b,MAAQ,GAC/BnH,KAAK4B,KAAOohB,EAAWphB,MAAQ,UAC/B5B,KAAKsmC,cAAgBtjB,EAAWsjB,eAAiB,KAGjD,IAAIC,EAAevmC,KAAKwmC,WAAa,CAAC,EACtCxmC,KAAKwmC,UAAY,CAAC,GACjBxjB,EAAWyjB,YAAc,IAAIxiC,SAASyiC,IACpC,IAAIC,EAAM3mC,KAAK+B,GAAGs3B,kBAAkBqN,EAAK1mC,MACrC2mC,EACD3mC,KAAKwmC,UAAUE,GAAOC,EAIlBJ,EAAaG,GACd1mC,KAAKwmC,UAAUE,GAAOH,EAAaG,GAEnC1mC,KAAKwP,KACF,UACA,KAAKxP,KAAKmH,sDAAsDu/B,KAChE,CAAEzf,QAASjnB,KAAKY,GAAI8lC,OAG7B,IAGH1mC,KAAK4mC,aAAe5jB,EAAW6jB,aAAe,CAAC,EAE/C/mC,MAAMmG,WAAW+c,GAGZhjB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAQArB,QAEQ9F,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAQjB,IAAK,IAAIuE,IANU,CAAC,KAAM,OAAQ,iBACrBpG,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGpB6C,EAAK48B,WAAa,GACJzmC,KAAKwmC,UAGhB38B,EAAK48B,WAAWniC,KACbtE,KAAKwmC,UAAUn8B,GAAGzJ,IAAMZ,KAAKwmC,UAAUn8B,GAAGy8B,WAWhD,OAPAj9B,EAAKg9B,YAAc7mC,KAAK4mC,aAOjB/8B,CACV,CAWAk9B,kBACG,OAAO/mC,KAAKsmC,aACf,CAOAU,WACGhnC,KAAKsmC,cAAgB,saACkWtmC,KAAKY,8gBAc/X,CAQAqmC,YAAYC,GACTlnC,KAAKsmC,cAAgBY,CACxB,CAcAL,YAAYn2B,GAQT,OAPKA,IACFA,EAAK,KACK,GAEQyD,OAAOC,KAAKpU,KAAK4mC,cAAcz4B,KAAK9D,GAC/CrK,KAAK4mC,aAAav8B,KAENvB,OAAO4H,EAChC,CAQAy2B,uBAAuBC,GACpB,OAAOpnC,KAAK6mC,aAAalK,GACfA,EAAE/7B,IAAMwmC,IACf,EACN,CAQAC,oBAAoBD,GACjB,OAAOpnC,KAAK6mC,aAAatjC,GACfA,EAAE+jC,IAAMF,GAErB,CAQAG,oBAAoBH,GACjB,OAAOpnC,KAAK6mC,aAAatjC,GACfA,EAAEikC,MAAQJ,GAEvB,CAQAK,iBAAiBhO,UACPz5B,KAAK4mC,aAAanN,EAAQ74B,GACpC,CAcA8mC,wBAAwBjO,GACrB,IAAIkO,EAAKlO,EAAQmO,eACbJ,EAAO,KACPG,EAAGE,YACJL,EAAOG,EAAGE,UAAUjnC,IAGvB,IAAI0mC,EAAK,KAWT,OAVIK,EAAGG,YACJR,EAAKK,EAAGG,UAAUlnC,IAGJ,CACdA,GAAI64B,EAAQ74B,GACZgB,KAAM63B,EAAQ73B,KACd4lC,KAAMA,EACNF,GAAIA,EAGV,CAQAS,iBAAiBtO,GACd,IAAIuO,EAAahoC,KAAK0nC,wBAAwBjO,GAC1CuO,EAAWR,MAAQQ,EAAWV,IAAM7N,EAAQ1kB,OAC7C/U,KAAK4mC,aAAaoB,EAAWpnC,IAAMonC,EAInChoC,KAAKynC,iBAAiBhO,EAE5B,CAUAvwB,SAASwH,EAAK,MAAM,IAIjB,OAHkByD,OAAOC,KAAKpU,KAAKwmC,WAAWr4B,KAAK9D,GACzCrK,KAAKwmC,UAAUn8B,KAENvB,OAAO4H,EAC7B,CAQAu3B,WAAWxO,GACRz5B,KAAKwmC,UAAU/M,EAAQ74B,IAAM64B,EAAQqN,WAAarN,CACrD,CAQAyO,YAAYtnC,GACT,OAAOZ,KAAKwmC,UAAU5lC,IAAO,IAChC,CAQAunC,oBAAoBf,GACjB,OAAOpnC,KAAKkJ,UAAUyzB,GACZA,EAAEmK,WAAaM,IACtB,EACN,CASAgB,cAAc3mB,UACJzhB,KAAKwmC,UAAU/kB,EAAI7gB,IAAM6gB,EAAIqlB,UACvC,CASAuB,cAAchkC,GACX,OAAsC,MAA/BrE,KAAKsoC,kBAAkBjkC,EACjC,CASAkkC,mBAAmBC,GAChB,IAAIt/B,EAAW,GAYf,OAXsBlJ,KAAK6mC,aAAatjC,GAC9BA,EAAEikC,MAAQgB,EAAY1B,YAEhB7iC,SAASV,IACtB,IAAIk2B,EAAUz5B,KAAKkJ,UAAUmB,GACnBA,EAAEy8B,WAAavjC,EAAE+jC,KACxB,GACC7N,GACDvwB,EAAS5E,KAAKm1B,EACjB,IAEIvwB,CACV,CASAu/B,uBAAuBD,GACpB,IAAIt/B,EAAW,GAYf,OAXsBlJ,KAAK6mC,aAAatjC,GAC9BA,EAAE+jC,IAAMkB,EAAY1B,YAEd7iC,SAASV,IACtB,IAAIk2B,EAAUz5B,KAAKkJ,UAAUmB,GACnBA,EAAEy8B,WAAavjC,EAAEikC,OACxB,GACC/N,GACDvwB,EAAS5E,KAAKm1B,EACjB,IAEIvwB,CACV,CAUAw/B,YAAYF,EAAa5yB,GAStB,IAAI+yB,EAAa3oC,KAAK4oC,iBAAiBJ,GACnC7iC,EAASkjC,EAAmBF,EAAY,cAAe/yB,EAAQ5V,MACnE,OAAO2F,EAAOQ,OAAS,EAClBR,EAAOQ,OAAS,EACbR,EACAA,EAAO,GACV,IACR,CAYAmjC,kBAAkBN,GACf,IAAIG,EAAa3oC,KAAK4oC,iBAAiBJ,GAEnCzhC,EAAS8hC,EACVF,EACA,oBACA,KACA3oC,MAEH,OAAO+G,EAAOZ,OAAS,EAAIY,EAAS,IACvC,CAWAgiC,oCAAoCC,EAAMC,GACjBjpC,KAAK6mC,aAAatjC,GAC9BA,EAAE+jC,IAAM0B,EAAKxB,OAGPvjC,SAASV,IACjB0lC,EAAS1lC,EAAE3C,MACbqoC,EAAS1lC,EAAE3C,IAAM2C,EACjBvD,KAAK+oC,oCAAoCxlC,EAAG0lC,GAC/C,GAEN,CACAC,iCAAiCV,GAC9B,IAAIW,EAAkBnpC,KAAK6mC,aAAatjC,GAC9BA,EAAE+jC,IAAMkB,EAAY1B,YAE1BmC,EAAW,CAEf,EAYA,OATAE,EAAgBllC,SAASV,IACtB0lC,EAAS1lC,EAAE3C,IAAM2C,EACjBvD,KAAK+oC,oCAAoCxlC,EAAG0lC,EAAS,IAOjD90B,OAAOC,KAAK60B,GAAU96B,KAAKkG,GAAM40B,EAAS50B,IACpD,CAEAu0B,iBAAiBJ,GACd,IAGIY,EAHAC,EAAY,CAAC,EAiBjB,OAfGrpC,KAAKkpC,iCAAiCV,GAElBvkC,SAAS+kC,KAE7BI,EAAOppC,KAAKmoC,oBAAoBa,EAAK1B,OAC3B+B,EAAUD,EAAKxoC,IAAMwoC,IAE/BA,EAAOppC,KAAKmoC,oBAAoBa,EAAKxB,SAC3B6B,EAAUD,EAAKxoC,IAAMwoC,EAAI,IAGrBj1B,OAAOC,KAAKi1B,GACzBl7B,KAAKkG,GAAMg1B,EAAUh1B,KACrBvL,QAAQ6zB,GAAMA,EAAE/7B,IAAM4nC,EAAY5nC,IAGzC,CAUA0oC,mBAAmBd,GAChB,IAAIG,EAAa3oC,KAAKyoC,uBAAuBD,GACzCzhC,EAAS8hC,EACVF,EACA,qBACA,KACA3oC,MAEH,OAAO+G,EAAOZ,OAAS,EAAIY,EAAS,IACvC,CAQAuhC,kBAAkBjkC,GAIf,OAHcrE,KAAKkJ,UAAUyzB,GACnBA,EAAE4M,YAAcllC,IACvB,IAIO,IAEb,GAsCH,IAAIwkC,EAAqB,CACtB5+B,EACA+M,EACAwyB,EACAviB,EACAwiB,EACAC,KAUA,QANwB,IAAbD,IACRA,EAAY,SAEY,IAAhBC,IACRA,EAAe,IAEC,GAAfz/B,EAAK9D,OACN,OAAOsjC,EAGP,IAAIL,EAAOn/B,EAAKsK,QAGhB,IAA6C,GAAzCm1B,EAAar8B,QAAQ+7B,EAAKtC,WAAkB,CAE7C4C,EAAaplC,KAAK8kC,EAAKtC,WAGvB,IAAInkC,EAAQymC,EAAKpyB,GAAQ2yB,MAAMP,EAAMI,GACvB,OAAV7mC,IAAgBA,EAAQ,IAC5B8mC,EAAYrD,EAAQqD,EAAW9mC,GAG/BsH,EAAOm8B,EAAQn8B,EAAMgd,EAAQwhB,uBAAuBW,GACvD,CAGA,OAAOP,EACJ5+B,EACA+M,EACAwyB,EACAviB,EACAwiB,EACAC,EAEN,mBClmbD,EAAS3lC,SAASmP,IACXA,EAAE02B,SAASC,SACZ32B,EAAIA,EAAE02B,SAETD,EAAMz2B,EAAE22B,SAAS1lC,KAAO+O,CAAC,IAG5B3T,EAAOC,QAAU,MAMdgrB,gBAAgBha,EAAK,MAAM,IACxB,IAAIwW,EAAQ,GACZ,IAAK,IAAI9T,KAAKy2B,EAAO,CAClB,IAAIG,EAAIH,EAAMz2B,GACV1C,EAAGs5B,IACJ9iB,EAAM5iB,KAAK0lC,EAEjB,CACA,OAAO9iB,CACV,CAOAwD,eAAe/kB,EAAQZ,EAAagQ,GAQjC,GAPAA,EAASA,GAAU,KAED,qBAAdpP,EAAOtB,MACRsB,EAAOtB,IAAM,iBAIZsB,EAAOtB,IACR,OAAKwlC,EAAMlkC,EAAOtB,KASX,IAAIwlC,EAAMlkC,EAAOtB,KAAKsB,EAAQZ,EAAagQ,IAR/CvM,QAAQ+G,MACL,WACG5J,EAAOtB,IACP,+CAEC,IAAIwlC,EAAY,KAAElkC,EAAQZ,EAAagQ,IAKjD,IAAI5M,EAAM,IAAIG,MAAM,qBAAqB3C,EAAOtB,QAOhD,OANAmE,QAAQ+G,MAAMpH,GACdK,QAAQ+G,MAAM,CACXA,MAAOpH,EACPxC,OAAQA,EACRZ,YAAaA,IAET,IAEb,CAEA2lB,iBAAiBrmB,GACd,GAAIwlC,EAAMxlC,GACP,OAAOwlC,EAAMxlC,GAEhBmE,QAAQ+G,MAAM,oBAAoBlL,KAErC,oBC/IH,MAAM9E,EAAc,EAAQ,MAM5B,SAAS0qC,EAAYlc,EAASnoB,GAC3B,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMkB,WAAY,OAAO,KAC9B,MAAMA,EAAalB,EAAMkB,WAEzB,IAAInE,EAAQ,KAEZ,GAAImE,EAAWuG,QAAQ,MAAQ,EAAG,CAC/B,IAAI4pB,EAAUnwB,EAAWmhB,MAAM,KAAK,GACpCtlB,EAAQorB,EAAQjnB,IAAeinB,EAAQkJ,EAC1C,MACGt0B,EAAQorB,EAAQjnB,GAGnB,QAAoB,IAATnE,EACR,OAAOA,EAKV,IAAK,MAAM0R,KAAK0Z,EAAS,CACtB,MAAM1pB,EAAMgQ,EAAE4T,MAAM,KAAK,GACrB5jB,GAAOA,GAAOuB,EAAMhF,KACrB+B,EAAQorB,EAAQ1Z,GAEtB,CACA,OAAO1R,CACV,CA2BAlD,EAAOC,QAAU,cAAgCH,EAC9CI,YAAYE,EAAQkC,GACjBlC,EAASA,GAAU,yBAED,IAAPkC,GACRyG,QAAQ+G,MAAM,oDAGjBzP,MAAM,KAAMD,EAAQkC,GAEpB/B,KAAK4S,QAAU,CAAEhC,SAAU,MAC3B5Q,KAAKqM,UAAY,CAAC,EAClBrM,KAAKkqC,UAAY,CAAC,EAGlBlqC,KAAKmqC,aAAe,GACpBnqC,KAAKoqC,QAGWpqC,KAAKwB,OAAS,CAC3BgC,UAAW,CACRnB,SAAU,QAGbgoC,eAAgB,SAAUh8B,GACvB,IAAIP,EAAS,GACb,IACG,IAAIw8B,EAAMC,SAASC,cAAc,OACjCF,EAAIG,UAAYp8B,EAEhBP,EAASw8B,EAAII,aAAeJ,EAAIK,WAAa,EAGhD,CAFE,MAAOxiC,GACN2F,GAAUO,GAAQ,IAAI2E,QAAQ,gBAAiB,GAClD,CAEA,OAAOlF,CACV,EAQN,CAEAxK,KAAKnB,EAAU,CAAC,GACbnC,KAAKqM,UAAYlK,CACpB,CAQAoD,QAAQwoB,GACL,MAAMmc,EAAYlqC,KAAKkqC,UACjB1oC,EAASxB,KAAKwB,OAGpB,GACgB,MAAb0oC,GACmB,MAAnBA,EAAU/oB,OACgB,GAA1B+oB,EAAU/oB,MAAMhb,OAEhB,OAAO,EAEV,GAAe,MAAX4nB,EAAiB,OAAO,EAE5B,IAAIjgB,EAA4B,QAAnBo8B,EAAU3gB,KAiFvB,OA/EA2gB,EAAU/oB,MAAMld,SAAS6E,IACtB,IAAKA,EAAOzE,MAAQyE,EAAO2mB,KAAM,OAEjC,MAAMkV,GAAa3kC,KAAKoqC,SAAW,IAAIthC,QACnC9B,GAAMA,EAAEpG,IAAMkI,EAAOzE,MACvB,GAEF,IAAKsgC,EAAW,OAEhB,IAAIiG,EAAa,KAIbC,EAAgBlG,EAAUtgC,SAEF,IAAjBsgC,EAAUtgC,MACE,eAAhBsgC,EAAU/jC,IACX+jC,EAAUtgC,IAAM,eAChBwmC,EAAgBlG,EAAUtgC,KACtBwmC,EAAgB,eAG1B,IAAIloC,EAAQ,KAQZ,OALGA,EADCgiC,EAAUnU,aAzHvB,SAA8BzC,EAASnoB,GACpC,IAAIklC,EAAe,GAEnB,GAAI/c,EAAS,CACV,IAAIyC,EAAe5qB,EAAM4qB,eACzB,GAAIzC,EAAQyC,GACTsa,GACIllC,EAAMyB,WACF0mB,EAAQyC,GAAc5qB,EAAMyB,WAAWP,YACvC,QACJlB,EAAM0B,YACFymB,EAAQyC,GAAc5qB,EAAM0B,YAAYR,YACxC,OACLinB,EAAQyC,GAAc5vB,IACtBmtB,EAAQyC,OACP,CACJ,IAAIua,EAAWd,EAAYlc,EAASnoB,GACpB,MAAZmlC,IACDD,EAAeC,EAErB,CACH,CACA,OAAOD,CACV,CAmGoBE,CAAqBjd,EAAS4W,GAE9BsF,EAAYlc,EAAS4W,GAGxBkG,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACW,MAATloC,IAAeA,EAAQ,IAE3BioC,EAAa5qC,KAAKirC,UAAUtoC,EAAOmG,EAAO2mB,KAAM3mB,EAAOnG,OACvD,MACH,IAAK,OACL,IAAK,WACFioC,EAAa5qC,KAAKkrC,UAAUvoC,EAAOmG,EAAO2mB,KAAM3mB,EAAOnG,OACvD,MACH,IAAK,SACFioC,EAAa5qC,KAAKmrC,YAAYxoC,EAAOmG,EAAO2mB,KAAM3mB,EAAOnG,OACzD,MACH,IAAK,OACFioC,EAAa5qC,KAAKorC,UAAUzoC,EAAOmG,EAAO2mB,KAAM3mB,EAAOnG,OACvD,MACH,IAAK,UACFioC,EAAa5qC,KAAKqrC,aAAa1oC,EAAOmG,EAAO2mB,KAAM3mB,EAAOnG,OAC1D,MACH,IAAK,OACFioC,EAAa5qC,KAAKsrC,UAAU3oC,EAAOmG,EAAO2mB,KAAM3mB,EAAOnG,OACvD,MACH,IAAK,eACL,IAAK,gBACFioC,EAAa5qC,KAAKurC,kBACfxd,EACA4W,EACA77B,EAAO2mB,KACP3mB,EAAOnG,OAEV,MACH,IAAK,cACFioC,EAAappC,EAAOgqC,gBACjBzd,EACAjlB,EAAO2mB,KACP3mB,EAAOnG,OAMbmL,EADoB,QAAnBo8B,EAAU3gB,KACFzb,GAAU88B,EAEV98B,GAAU88B,CACtB,IAGI98B,CACV,CAEAm9B,UAAUtoC,EAAO8sB,EAAMgc,GACpB,IAAI39B,GAAS,EAEbnL,EAAQA,EAAMwgC,OAAOhrB,cACrBxV,EAAQ3C,KAAKwB,OAAO6oC,eAAe1nC,GAKnC,MAAM+oC,GAHND,EAAeA,EAAatI,OAAOhrB,cAAcnF,QAAQ,OAAQ,MAG/BiV,MAAM,KAExC,OAAQwH,GACL,IAAK,WACFic,EAAaznC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,EAAM0K,QAAQ2I,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFlI,GAAS,EACT49B,EAAaznC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,EAAM0K,QAAQ2I,GAAO,EAAC,IAErC,MACH,IAAK,SACF01B,EAAaznC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,GAASqT,EAAG,IAE3B,MACH,IAAK,YACFlI,GAAS,EACT49B,EAAaznC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,GAASqT,EAAG,IAE3B,MACH,IAAK,WACFlI,EAAkB,IAATnL,GAAwB,MAATA,EACxB,MACH,IAAK,eACFmL,EAAkB,IAATnL,GAAwB,MAATA,EACxB,MACH,QACGmL,EAAS9N,KAAK2rC,gBAAgBhpC,EAAO8sB,EAAMgc,GAIjD,OAAO39B,CACV,CAEAo9B,UAAUvoC,EAAO8sB,EAAMgc,GACpB,IAAI39B,GAAS,EAOb,OALMnL,aAAiB4d,OAAO5d,EAAQ,IAAI4d,KAAK5d,IAEzC8oC,aAAwBlrB,OAC3BkrB,EAAe,IAAIlrB,KAAKkrB,IAEnBhc,GACL,IAAK,OACF3hB,EAASnL,EAAQ8oC,EACjB,MACH,IAAK,UACF39B,EAASnL,EAAQ8oC,EACjB,MACH,IAAK,gBACF39B,EAASnL,GAAS8oC,EAClB,MACH,IAAK,mBACF39B,EAASnL,GAAS8oC,EAClB,MACH,QACG39B,EAAS9N,KAAK2rC,gBAAgBhpC,EAAO8sB,EAAMgc,GAIjD,OAAO39B,CACV,CAEAq9B,YAAYxoC,EAAO8sB,EAAMgc,GACtB,IAAI39B,GAAS,EAKb,OAHAnL,EAAQipC,OAAOjpC,GACf8oC,EAAeG,OAAOH,GAEdhc,GACL,IAAK,SACF3hB,EAASnL,GAAS8oC,EAClB,MACH,IAAK,YACF39B,EAASnL,GAAS8oC,EAClB,MACH,IAAK,OACF39B,EAASnL,EAAQ8oC,EACjB,MACH,IAAK,UACF39B,EAASnL,EAAQ8oC,EACjB,MACH,IAAK,gBACF39B,EAASnL,GAAS8oC,EAClB,MACH,IAAK,mBACF39B,EAASnL,GAAS8oC,EAClB,MACH,QACG39B,EAAS9N,KAAK2rC,gBAAgBhpC,EAAO8sB,EAAMgc,GAIjD,OAAO39B,CACV,CAEAs9B,UAAUzoC,EAAO8sB,EAAMgc,GACpB,IAAI39B,GAAS,EAMb,OAFKX,MAAMC,QAAQq+B,KAAeA,EAAe,CAACA,IAE1Chc,GACL,IAAK,SACE9sB,IAAOmL,EAAS29B,EAAap+B,QAAQ1K,IAAU,GACnD,MACH,IAAK,YACSmL,GAAPnL,GAAgB8oC,EAAap+B,QAAQ1K,GAAS,EAElD,MACH,QACGmL,EAAS9N,KAAK2rC,gBAAgBhpC,EAAO8sB,EAAMgc,GAIjD,OAAO39B,CACV,CAEAu9B,aAAa1oC,EAAO8sB,EAAMgc,GACvB,IAAI39B,GAAS,EAWb,OAPMA,EADE,WADA2hB,EAEO9sB,GAAS8oC,EAGTzrC,KAAK2rC,gBAAgBhpC,EAAO8sB,EAAMgc,GAI1C39B,CACV,CAEAw9B,UAAU3oC,EAAO8sB,EAAMgc,GACpB,IAAK9oC,EAAO,OAAO,EACnB,IAAImL,GAAS,EAIb,OAAQ2hB,GACL,IAAK,kBACF3hB,EAASnL,GAAS3C,KAAK4S,QAAQhC,SAC/B,MACH,IAAK,sBACF9C,EAASnL,GAAS3C,KAAK4S,QAAQhC,SAC/B,MACH,IAAK,uBACGzD,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EACGnL,EAAMmG,QAAQsK,IAAOA,EAAExC,UAAYwC,IAAMpT,KAAK4S,QAAQhC,WAClDzK,OAAS,EAChB,MACH,IAAK,2BACGgH,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EACGnL,EAAMmG,QAAQsK,IAAOA,EAAExC,UAAYwC,IAAMpT,KAAK4S,QAAQhC,WAClDzK,OAAS,EAChB,MACH,IAAK,SACF2H,EAASnL,EAAM0K,QAAQo+B,IAAiB,EACxC,MACH,IAAK,YACF39B,EAASnL,EAAM0K,QAAQo+B,GAAgB,EACvC,MACH,QACG39B,EAAS9N,KAAK2rC,gBAAgBhpC,EAAO8sB,EAAMgc,GAIjD,OAAO39B,CACV,CAEA69B,gBAAgB5d,EAAS0B,EAAMgc,GAC5B,IAAI39B,GAAS,EAEb,IAAK29B,EAAc,OAAO39B,EAG1B,MAAM+9B,EAAUJ,EAAaxjB,MAAM,KAAK,GACrCvd,EAAU+gC,EAAaxjB,MAAM,KAAK,GAG/BgB,EAAQjpB,KAAK+B,GAAG4lB,SAASC,GAAMA,EAAEhnB,IAAMirC,IAAS,GACtD,IAAK5iB,EAAO,OAAOnb,EAInB,IADcmb,EAAMliB,QAAQC,GAAMA,EAAEpG,IAAM8J,IAAS,GACvC,OAAOoD,EAEnB,IAAIg+B,EAAU,4BACP94B,QAAQ,WAAYhT,KAAKH,QACzBmT,QAAQ,OAAQiW,EAAMroB,IAC1BmrC,EAAqB,IAAI/rC,KAAKL,YAAYmsC,EAAS9rC,KAAK+B,IAK3D,OAJAgqC,EAAmBn5B,QAAU5S,KAAK4S,QAClCm5B,EAAmBlY,WAAW5K,EAAMliB,UACpCglC,EAAmBlnC,SAASokB,EAAMoZ,2BAE1B5S,GACL,IAAK,iBACF3hB,EAASi+B,EAAmBxmC,QAAQwoB,GACpC,MACH,IAAK,qBACFjgB,GAAUi+B,EAAmBxmC,QAAQwoB,GAI3C,OAAOjgB,CACV,CAEAk+B,aAAaje,EAAS0B,EAAMgc,GACzB,IAAI39B,GAAS,EAEb,IAAK29B,IAAiBzrC,KAAK+B,GAAI,OAAO+L,EAGtC,IAAImb,EAAQjpB,KAAK+B,GAAG4lB,SAASC,GAAMA,EAAEhnB,IAAM6qC,IAAc,GACzD,IAAKxiB,EAAO,OAAOnb,EAEnB,IAAIg+B,EAAU,sBACP94B,QAAQ,WAAYhT,KAAKH,QACzBmT,QAAQ,OAAQiW,EAAMroB,IAC1BqrC,EAAgB,IAAIjsC,KAAKL,YAAYmsC,EAAS9rC,KAAK+B,IAKtD,OAJAkqC,EAAcr5B,QAAU5S,KAAK4S,QAC7Bq5B,EAAcpY,WAAW5K,EAAMliB,UAC/BklC,EAAcpnC,SAASokB,EAAMoZ,2BAErB5S,GACL,IAAK,WACF3hB,EAASm+B,EAAc1mC,QAAQwoB,GAC/B,MACH,IAAK,eACFjgB,GAAUm+B,EAAc1mC,QAAQwoB,GAItC,OAAOjgB,CACV,CAEAo+B,oBAAoBvpC,EAAO8sB,EAAMgc,GAC9B,IAAI39B,GAAS,EAEb,IAAK29B,EAAc,OAAO39B,EAE1B,IAAI6e,EAAK3sB,KAAK+B,GAAG8jB,iBAAiBwK,GAAMA,EAAEzvB,IAAM6qC,IAAc,GAE9D,OAAQhc,GACL,IAAK,qBACF,IAAK9C,EAAI,OAAO,EAEhB7e,EAAS6e,EAAGyG,SAAS/C,GAAMA,EAAEzvB,IAAM+B,EAAM/B,KAAIuF,OAAS,EACtD,MACH,IAAK,yBACF,IAAKwmB,EAAI,OAAO,EAEhB7e,EAAS6e,EAAGyG,SAAS/C,GAAMA,EAAEzvB,IAAM+B,EAAM/B,KAAIuF,OAAS,EAI5D,OAAO2H,CACV,CAEAy9B,kBAAkBxd,EAASnoB,EAAO6pB,EAAMgc,GACrC,IAAIjb,EAAe5qB,EAAM4qB,eAErBsa,EAAe,GAEnB,GAAI/c,EACD,GAAIA,EAAQyC,GACTsa,IACIllC,EAAMyB,WACF0mB,EAAQyC,GAAc5qB,EAAMyB,WAAWP,YACvC,QACJlB,EAAM0B,YACFymB,EAAQyC,GAAc5qB,EAAM0B,YAAYR,YACxC,OACLinB,EAAQyC,GAAc5vB,IACtBmtB,EAAQyC,IAEP9b,WACAyD,kBACA,CACJ,IAAI4yB,EAAWd,EAAYlc,EAASnoB,GACpB,MAAZmlC,IACDD,EAAeC,EAErB,CAGH,IAAIoB,GAAyBV,GAAgB,IAAItzB,cAEjD,OAAQsX,GACL,IAAK,WACF,OAAOqb,EAAap2B,WAAWrH,QAAQ8+B,IAA0B,EACpE,IAAK,eACF,OAAkE,GAA3DrB,EAAap2B,WAAWrH,QAAQ8+B,GAC1C,IAAK,SACF,OAAOrB,GAAgBqB,EAC1B,IAAK,YACF,OAAOrB,GAAgBqB,EAC1B,IAAK,WACL,IAAK,eACF,OAAOnsC,KAAKgsC,aAAaje,EAAQyC,GAAef,EAAMgc,GACzD,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAOzrC,KAAKsrC,UAAUR,EAAcrb,EAAMgc,GAC7C,IAAK,WACF,OAC4B,MAAzB1d,EAAQyC,IACRzC,EAAQyC,GAAcrqB,OAAS,GACN,IAAzB4nB,EAAQyC,GAEd,IAAK,eACF,OAC4B,MAAzBzC,EAAQyC,KACNrjB,MAAMC,QAAQ2gB,EAAQyC,KACrBzC,EAAQyC,GAAcrqB,OAAS,GACN,IAAzB4nB,EAAQyC,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAOxwB,KAAKksC,oBAAoBpB,EAAcrb,EAAMgc,GAE7D,CAEAD,gBAAgBzd,EAAS0B,EAAMgc,GAC5B,IACIxiB,EAAQ,KACRmjB,EAAkB,KAClB7c,EAAQ,KACR8c,EAAa,KAEjB,OAAQ5c,GAEL,IAAK,WACL,IAAK,eACF,QAAKzvB,KAAKssC,UAGVrjB,EAAQjpB,KAAK+B,GAAG4lB,SAASC,GAAMA,EAAEhnB,IAAM6qC,IAAc,KAEhDxiB,IAELmjB,EAAkBnjB,EAAM9C,SAASL,GACvBA,EAAEllB,IAAMZ,KAAKssC,QAAQ1rC,KAG3BwrC,EAAgBjmC,OAAS,GAK1BqC,QAAQ+G,MACL,iFAGI,IAIVggB,EAAQtG,EAAMuG,YAAYxvB,KAAKssC,QAAQ1rC,IAGvCyrC,EAAa,CAAC,EAEdl4B,OAAOC,KAAK2Z,GAAS9pB,SAASI,IAC3BgoC,EAAW,GAAG9c,KAASlrB,KAAS0pB,EAAQ1pB,EAAI,IAIxCrE,KAAKgsC,aAAaK,EAAY5c,EAAMgc,MAG9C,IAAK,qBACL,IAAK,yBAEF,OAAOzrC,KAAKksC,oBAAoBne,EAAS0B,EAAMgc,GAExD,CAEAc,kBAAkBC,EAAgB,IAC3BA,IAAkBr/B,MAAMC,QAAQo/B,KACjCA,EAAgB,CAACA,IAEpBxsC,KAAKysC,eAAiBD,EAEtBxsC,KAAK0sC,QACR,CASA7Y,WAAW9sB,EAAS,GAAI9B,EAAS,MAS9B,GARAjF,KAAKoqC,QAAUrjC,EAAO+B,QAClB9B,GAAMA,GAAKA,EAAE2lC,mBAAqB3lC,EAAE2lC,sBAExC3sC,KAAKmqC,aAAenqC,KAAKoqC,QACpBpqC,KAAKoqC,QAAQthC,QAAQ9B,GAAMA,GAAKA,EAAE25B,cAAyB,QAAT35B,EAAE3C,MACpD,GAGDY,EAAQ,CACTjF,KAAKssC,QAAUrnC,EAGf,IAAI2nC,EAAgB,CACjBhsC,GAAI,cACJQ,MAAO6D,EAAO7D,MACdiD,IAAK,QAMJY,EAAOs2B,WACRqR,EAAcrd,MAAQ,eAGzBvvB,KAAKoqC,QAAQyC,QAAQD,EACxB,aACU5sC,KAAKssC,OAElB,CAEAQ,aA6MG,OA/Kc9sC,KAAKoqC,SAAW,IAAIj8B,KAAKnH,IACpC,IAAI5F,EAAQ4F,EAAE5F,MACVpB,KAAKqM,UAAU0gC,gBAAkB/lC,EAAE/B,QAAU+B,EAAE/B,OAAO7D,QACvDA,EAAQ,GAAG4F,EAAE/B,OAAO7D,SAAS4F,EAAE5F,SAElC,IAAIQ,EAAO,OACPorC,EAAa,GACbC,EAAmB,GACnBC,GAAgB,EAEpB,GAAKltC,KAAKqM,UAAU8gC,qBA2FjB,OAAQnmC,EAAE3C,KACP,IAAK,gBACL,IAAK,OACF6oC,GAAgB,OA7FtB,OAAQlmC,EAAE3C,KACP,IAAK,UACF2oC,EAAaA,EAAWzlB,OACrBvnB,KAAKotC,wBAAwBpmC,IAEhCimC,EAAmB,CAAC,WAEpB,MAEH,IAAK,gBACFD,EAAahtC,KAAKqtC,8BAA8BrmC,GAI7CA,EAAEZ,SAASgB,aAEc,OAAvBJ,EAAEZ,SAASa,UACgB,QAA1BD,EAAEZ,SAASc,aAEa,OAAvBF,EAAEZ,SAASa,UACiB,OAA1BD,EAAEZ,SAASc,aACXF,EAAEZ,SAASM,YAIjBsmC,EAFsBhtC,KAAKstC,uBAAuBtmC,GAEvBugB,OAAOylB,IAGrCE,GAAgB,EAChBD,EAAmB,CAAC,iBAEpB,MAEH,IAAK,OACL,IAAK,WACFrrC,EAAO,OACPorC,EAAaA,EAAWzlB,OAAOvnB,KAAKutC,qBAAqBvmC,IACzDimC,EAAmB,CAAC,OAAQ,YAE5B,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACFrrC,EAAO,SACPorC,EAAaA,EAAWzlB,OACrBvnB,KAAKwtC,uBAAuBxmC,IAE/BimC,EAAmB,CAAC,YAAa,UAAW,UAE5C,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACFD,EAAaA,EAAWzlB,OACrBvnB,KAAKstC,uBAAuBtmC,IAE/BimC,EAAmB,CAChB,SACA,WACA,QACA,aAGH,MAEH,IAAK,OACFD,EAAaA,EAAWzlB,OAAOvnB,KAAKytC,qBAAqBzmC,IAEzD,MAEH,IAAK,OACFgmC,EAAaA,EAAWzlB,OAAOvnB,KAAK0tC,qBAAqB1mC,IACzDimC,EAAmB,CAAC,QAEpB,MAEH,IAAK,OACFD,EAAaA,EAAWzlB,OACrBvnB,KAAK2tC,2BAA2B3mC,IAEnCkmC,GAAgB,EAqDzB,OAtCAF,EAAaA,EAAWzlB,OACrBvnB,KAAK4tC,sBAAsB5mC,EAAGkmC,IAG7BltC,KAAKqM,UAAUwhC,eAChBb,EAAaA,EAAWzlB,OAAOvnB,KAAK8tC,2BAA2B9mC,MAI9DhH,KAAKysC,gBAAkB,IAAI3jC,QAAQilC,IACjC,IAAKA,EAAc,OAAO,EAE1B,GAAIA,EAAanoC,MACd,OAAOqnC,EAAiBe,SAASD,EAAanoC,MAAMvB,KAChD,GAAI0pC,EAAa1pC,IAAK,CAE1B,IAAI4pC,EAAiBF,EAAa1pC,IAAI4jB,MAAM,KAAKimB,MACjD,OAAOD,GAAkBjnC,EAAEpG,IAAMqtC,GAAkBjnC,EAAE3C,GACxD,KACA8B,OAAS,IAGZ6mC,EAAaA,EAAWzlB,OAAOvnB,KAAKmuC,wBAAwBnnC,KAgBxD,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOvB,EACPQ,KAAMA,EACNorC,WAAYA,EAEd,GAuBP,CAEAO,qBAAqB3nC,GAClB,IAAIwoC,EAAiB,CAClBC,KAAMruC,KAAKwS,OAAOrS,UAAUmuC,gBAC5BC,QAASvuC,KAAKwS,OAAOrS,UAAUquC,eAC/BC,cAAezuC,KAAKwS,OAAOrS,UAAUuuC,oBACrCC,iBAAkB3uC,KAAKwS,OAAOrS,UAAUyuC,mBACxCC,aAAc7uC,KAAKwS,OAAOrS,UAAU2uC,uBACpCC,gBAAiB/uC,KAAKwS,OAAOrS,UAAU6uC,sBACvCC,sBACGjvC,KAAKwS,OAAOrS,UAAU+uC,2BACzBC,yBACGnvC,KAAKwS,OAAOrS,UAAUivC,0BACzBC,UAAWrvC,KAAKwS,OAAOrS,UAAUmvC,oBACjCC,UAAWvvC,KAAKwS,OAAOrS,UAAUqvC,qBAGhC1hC,EAAS,GAEb,IAAK,IAAI2hC,KAAWrB,EACjBtgC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAOyrC,EAAeqB,GACtBC,MAAO,aACPC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKkrC,UAAUt9B,EAAG6hC,EAAS5hC,KAIpD,OAAOC,CACV,CAEAw/B,uBAAuB1nC,GACpB,IAAIgqC,EAAmB,CACpBC,SAAU,CACPH,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAU2vC,mBAEhCC,aAAc,CACXL,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAU6vC,sBAEhCC,OAAQ,CACLP,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAU+vC,aAEhCC,UAAW,CACRT,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUiwC,gBAEhCC,SAAU,CACPX,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUmwC,SAEhCC,aAAc,CACXb,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUqwC,aAI/B1iC,EAAS,GAEb,IAAK,IAAI2hC,KAAWG,EACjB9hC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAOitC,EAAiBH,GAASruC,MACjCsuC,MAAOE,EAAiBH,GAASC,MACjCC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKirC,UAAUr9B,EAAG6hC,EAAS5hC,KAIpD,OAAOC,CACV,CAEA0/B,uBAAuB5nC,GACpB,IAAI6qC,EAAmB,CACpBR,OAAQjwC,KAAKwS,OAAOrS,UAAUuwC,eAC9BP,UAAWnwC,KAAKwS,OAAOrS,UAAUwwC,kBACjCtC,KAAMruC,KAAKwS,OAAOrS,UAAUywC,kBAC5BrC,QAASvuC,KAAKwS,OAAOrS,UAAU0wC,kBAC/BpC,cAAezuC,KAAKwS,OAAOrS,UAAU2wC,yBACrCnC,iBAAkB3uC,KAAKwS,OAAOrS,UAAU4wC,0BAGvCjjC,EAAS,GAEb,IAAK,IAAI2hC,KAAWgB,EACjB3iC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAO8tC,EAAiBhB,GACxBC,MAAO,OACPC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKmrC,YAAYv9B,EAAG6hC,EAAS5hC,KAItD,OAAOC,CACV,CAEA2/B,qBAAqB7nC,GAClB,IAAIorC,EAAiB,CAClBf,OAAQjwC,KAAKwS,OAAOrS,UAAU8wC,mBAC9Bd,UAAWnwC,KAAKwS,OAAOrS,UAAU+wC,uBAGhCpjC,EAAS,GAEb,IAAK,IAAI2hC,KAAWuB,EACjBljC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAOquC,EAAevB,GACtBC,MAAO,OACPC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKorC,UAAUx9B,EAAG6hC,EAAS5hC,KAIpD,OAAOC,CACV,CAEAs/B,wBAAwBxnC,GACrB,IAAIurC,EAAoB,CACrBlB,OAAQjwC,KAAKwS,OAAOrS,UAAU8wC,oBAG7BnjC,EAAS,GAEb,IAAK,IAAI2hC,KAAW0B,EACjBrjC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAOwuC,EAAkB1B,GACzBC,MAAO,UACPC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKqrC,aAAaz9B,EAAG6hC,EAAS5hC,KAIvD,OAAOC,CACV,CAEA4/B,qBAAqB9nC,GAClB,IAAIwrC,EAAiB,CAClBC,gBAAiB,CACd3B,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUmxC,wBAEhCC,oBAAqB,CAClB7B,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUqxC,2BAEhCC,qBAAsB,CACnB/B,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUuxC,8BAEhCC,yBAA0B,CACvBjC,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUyxC,iCAEhC3B,OAAQ,CACLP,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAU8wC,oBAEhCd,UAAW,CACRT,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAU+wC,wBAI/BpjC,EAAS,GAEb,IAAK,IAAI2hC,KAAW2B,EACjBtjC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAOyuC,EAAe3B,GAASruC,MAC/BsuC,MAAO0B,EAAe3B,GAASC,MAC/BC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKsrC,UAAU19B,EAAG6hC,EAAS5hC,KAIpD,OAAOC,CACV,CAEAu/B,8BAA8BznC,GAC3B,MAAMisC,EAAoB,CACvBC,aAAc,CACXpC,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAU4xC,WAC7BpC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKsrC,UAAU19B,EAAG,eAAgBC,IAExDmkC,iBAAkB,CACftC,MAAO,OACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAU8xC,cAC7BtC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKsrC,UAAU19B,EAAG,mBAAoBC,IAE5DqkC,mBAAoB,CACjBxC,MAAO,iBACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUgyC,iBAC7BxC,QAAS,CAAC/hC,EAAGC,IACV7N,KAAKksC,oBAAoBt+B,EAAG,qBAAsBC,IAExDukC,uBAAwB,CACrB1C,MAAO,iBACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUkyC,oBAC7B1C,QAAS,CAAC/hC,EAAGC,IACV7N,KAAKksC,oBAAoBt+B,EAAG,yBAA0BC,KASzDC,EAAS,GAEf,IAAK,IAAI2hC,KAAWoC,EACjB/jC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAOkvC,EAAkBpC,GAASruC,MAClCsuC,MAAOmC,EAAkBpC,GAASC,MAClCC,QAASkC,EAAkBpC,GAASE,UAI1C,OAAO7hC,CACV,CAEA8/B,sBAAsBhoC,EAAOsnC,GAAgB,GAC1C,MAAMoF,EAAkBpF,EACnB,CACGqF,eAAgB,CACbnxC,MAAOpB,KAAKwS,OAAOrS,UAAUqyC,aAC7B9C,MAAO,cAEV+C,mBAAoB,CACjBrxC,MAAOpB,KAAKwS,OAAOrS,UAAUuyC,gBAC7BhD,MAAO,eAGb,CACGiD,SAAU,CACPvxC,MAAOpB,KAAKwS,OAAOrS,UAAUyyC,QAC7BlD,MAAO,SAEVmD,aAAc,CACXzxC,MAAOpB,KAAKwS,OAAOrS,UAAU2yC,WAC7BpD,MAAO,UAIZ5hC,EAAS,GAEf,IAAK,MAAM2hC,KAAW6C,EACnBxkC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAO2vC,EAAgB7C,GAASruC,MAChCsuC,MAAO4C,EAAgB7C,GAASC,MAChCC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAK2rC,gBAAgB/9B,EAAG6hC,EAAS5hC,KAI1D,OAAOC,CACV,CAEA6/B,2BAA2B/nC,GACxB,IAAImtC,EAAuB,CACxBb,mBAAoB,CACjBxC,MAAO,iBACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUgyC,kBAEhCC,uBAAwB,CACrB1C,MAAO,iBACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUkyC,sBAI/BvkC,EAAS,GAEb,IAAK,IAAI2hC,KAAWsD,EACjBjlC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAOowC,EAAqBtD,GAASruC,MACrCsuC,MAAOqD,EAAqBtD,GAASC,MACrCC,QAAS,CAAC/hC,EAAGC,IAAM7N,KAAKwrC,gBAAgB59B,EAAG6hC,EAAS5hC,KAI1D,OAAOC,CACV,CAEAggC,2BAA2BloC,GACxB,IAAIotC,EAAuB,CACxBC,cAAejzC,KAAKwS,OAAOrS,UAAU+yC,YACrCC,kBAAmBnzC,KAAKwS,OAAOrS,UAAUizC,gBAGxCtlC,EAAS,GAEb,IAAK,IAAI2hC,KAAWuD,EACjBllC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAOqwC,EAAqBvD,GAC5BC,MAAO,aACPC,QAAS,CAAC/hC,EAAGC,KAAM,IAIzB,OAAOC,CACV,CAEAqgC,wBAAwBvoC,GACrB,IAAIytC,EAAoB,CACrBC,eAAgB,CACb5D,MAAO,UACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUozC,mBAC7B5D,QAAS,CAAC/hC,EAAGC,IAAMD,GAAKC,GAE3B2lC,kBAAmB,CAChB9D,MAAO,UACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUszC,+BAC7B9D,QAAS,CAAC/hC,EAAGC,IAAMD,GAAKC,GAE3B6lC,WAAY,CACThE,MAAO,UACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAUwzC,wBAC7BhE,QAAS,CAAC/hC,EAAGC,IAAMD,EAAEP,QAAQQ,IAAM,GAEtC+lC,eAAgB,CACblE,MAAO,UACPtuC,MAAOpB,KAAKwS,OAAOrS,UAAU0zC,2BAC7BlE,QAAS,CAAC/hC,EAAGC,KAAuB,GAAjBD,EAAEP,QAAQQ,KAI/BC,EAAS,GAEb,IAAK,IAAI2hC,KAAW4D,EACjBvlC,EAAOxJ,KAAK,CACT1D,GAAI6uC,EACJ9sC,MAAO0wC,EAAkB5D,GAASruC,MAClCsuC,MAAO2D,EAAkB5D,GAASC,MAClCC,QAAS0D,EAAkB5D,GAASE,UAI1C,OAAO7hC,CACV,CAEAgmC,YAAYnsB,EAAU,IACnB3nB,KAAK+zC,SAAWpsB,CACnB,CAWAA,QAAQ7e,EAAS,MAAM,IAGpB,OAFkB9I,KAAK+zC,UAAY/zC,KAAK+B,IAAI4lB,aAAe,IAE1C7e,QAAQ8e,GAAM9e,EAAO8e,IACzC,CAEA/iB,SAASuB,GACNpG,KAAKkqC,UAAY9jC,GAAY,CAAC,EAE9BpG,KAAKkqC,UAAU/oB,MAAQnhB,KAAKkqC,UAAU/oB,OAAS,EAClD,CAiBAlV,WAMG,YAHkC,IAAvBjM,KAAKkqC,UAAU3gB,OACvBvpB,KAAKkqC,UAAU3gB,KAAO,OAElBvpB,KAAKkqC,SACf,CAEA8J,aACG,IAAIlmC,GAAS,EAEb,MAAMmmC,EAAe,CAClB,kBACA,sBACA,uBACA,2BACA,eACA,oBAGGC,EAAkB,CAAC/yB,EAAQ,MAChB,GAAVrT,GAEJqT,EAAMld,SAAS2L,IACRA,GAAGuR,OAAShU,MAAMC,QAAQwC,GAAGuR,OAC9B+yB,EAAgBtkC,GAAGuR,OAEnBrT,EACGA,GACU,MAAV8B,GAAGvL,KACO,IAAVuL,GAAGvL,KACQ,MAAXuL,GAAG6f,MACQ,IAAX7f,GAAG6f,OACW,MAAZ7f,GAAGjN,OAA6B,IAAZiN,GAAGjN,OACtBsxC,EAAa5mC,QAAQuC,GAAG6f,OAAS,EAC1C,GACD,EAKL,OAFAykB,EAAgBl0C,KAAKkqC,WAAW/oB,OAEzBrT,CACV,oBCtxCH,MAAMvO,EAAc,EAAQ,MAK5B,SAAS0qC,EAAYlc,EAASnoB,EAAOuuC,GAAiB,GACnD,IAAKvuC,EAAO,OAAO,KACnB,IAAKA,EAAMkB,WAAY,OAAO,KAE1BinB,GAAWA,EAAQ,KAAIA,EAAUA,EAAQ,IAE7C,IAAI5iB,EAAWvF,EAAMhF,GACjBkG,EAAalB,EAAMkB,WAEnBnE,EAAQ,KACZ,GAAImE,EAAWuG,QAAQ,MAAQ,EAAG,CAC/B,IAAI4pB,EAAUnwB,EAAWmhB,MAAM,KAAK,GACpCtlB,EAAQorB,EAAQjnB,IAAeinB,EAAQkJ,IAAYlJ,EAAQ5iB,EAC9D,MACGxI,EAAQorB,EAAQjnB,IAAeinB,EAAQ5iB,GAG1C,GAAIxI,EACD,OAAOA,EAKV,IAAK,IAAI0R,KAAK0Z,EAAS,CACpB,IAAI1pB,EAAMgQ,EAAE4T,MAAM,KAAK,IACnB5jB,GAAQA,GAAO8G,GAAY9G,GAAOyC,IACnCnE,EAAQorB,EAAQ1Z,GAEtB,CAQA,OALI1R,GAASwK,MAAMC,QAAQzK,KACxBA,EAAQA,EAAMmG,QAAQsK,GAAW,MAALA,IACxB+gC,IAAgBxxC,EAAQA,EAAM,KAG9BA,CACV,CAEAlD,EAAOC,QAAU,cAA4BH,EAC1CI,YAAYC,EAAKC,EAAQkC,GAGtBjC,MAAMF,EAFNC,EAASA,GAAU,gBAEAkC,GAEnB/B,KAAK4S,QAAU,CAAEhC,SAAU,MAC3B5Q,KAAKqM,UAAY,CAAC,EAClBrM,KAAKo0C,gBAAkB,CAAC,EAGxBp0C,KAAKmqC,aAAe,GACpBnqC,KAAKoqC,QAGL,IAAI5oC,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRnB,SAAU,QAkBb4J,SAAU,IACAjM,KAAKo0C,gBAGf/J,eAAgB,SAAUh8B,GACvB,IAAIP,EAAS,GACb,IACG,IAAIw8B,EAAMC,SAASC,cAAc,OACjCF,EAAIG,UAAYp8B,EAEhBP,EAASw8B,EAAII,aAAeJ,EAAIK,WAAa,EAGhD,CAFE,MAAOxiC,GACN2F,GAAUO,GAAQ,IAAI2E,QAAQ,gBAAiB,GAClD,CAEA,OAAOlF,CACV,EAEAm9B,UAAW,SAAUld,EAASnoB,EAAO6pB,EAAMgc,GACxC,IAAI39B,GAAS,EAETnL,EAAQsnC,EAAYlc,EAASnoB,GACpB,MAATjD,IAAeA,EAAQ,IAE3BA,EAAQA,EAAM+R,WAAWyuB,OAAOhrB,cAChCxV,EAAQnB,EAAO6oC,eAAe1nC,GAS9B,IAAI+oC,GAPJD,EAAeA,EACX/2B,WACAyuB,OACAhrB,cACAnF,QAAQ,OAAQ,MAGYiV,MAAM,KAEtC,OAAQwH,GACL,IAAK,WACFic,EAAaznC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,EAAM0K,QAAQ2I,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFlI,GAAS,EACT49B,EAAaznC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,EAAM0K,QAAQ2I,GAAO,EAAC,IAErC,MACH,IAAK,SACF01B,EAAaznC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,GAASqT,EAAG,IAE3B,MACH,IAAK,YACFlI,GAAS,EACT49B,EAAaznC,SAAS+R,IACL,GAAVlI,IAEDA,EAASnL,GAASqT,EAAG,IAE3B,MACH,IAAK,WACFlI,EAAkB,MAATnL,GAA0B,IAATA,EAC1B,MACH,IAAK,eACFmL,EAAkB,MAATnL,GAA0B,IAATA,EAC1B,MACH,QACGmL,EAAStM,EAAO6yC,WAAWtmB,EAAS0B,EAAMgc,GAIhD,OAAO39B,CACV,EAEAo9B,UAAW,SAAUnd,EAASnoB,EAAO6pB,EAAMgc,GACxC,IAAI39B,GAAS,EAETnL,EAAQsnC,EAAYlc,EAASnoB,GAMjC,OALMjD,aAAiB4d,OAAO5d,EAAQ,IAAI4d,KAAK5d,IAEzC8oC,aAAwBlrB,OAC3BkrB,EAAe,IAAIlrB,KAAKkrB,IAEnBhc,GACL,IAAK,SACF3hB,EAASnL,GAAS8oC,EAClB,MACH,IAAK,YACF39B,EAASnL,GAAS8oC,EAClB,MACH,IAAK,OACF39B,EAASnL,EAAQ8oC,EACjB,MACH,IAAK,UACF39B,EAASnL,EAAQ8oC,EACjB,MACH,IAAK,gBACF39B,EAASnL,GAAS8oC,EAClB,MACH,IAAK,mBACF39B,EAASnL,GAAS8oC,EAClB,MACH,QACG39B,EAAStM,EAAO6yC,WAAWtmB,EAAS0B,EAAMgc,GAIhD,OAAO39B,CACV,EAEAq9B,YAAa,SAAUpd,EAASnoB,EAAO6pB,EAAMgc,GAC1C,IAAI39B,GAAS,EAETnL,EAAQsnC,EAAYlc,EAASnoB,GAIjC,OAHAjD,EAAQipC,OAAOjpC,GACf8oC,EAAeG,OAAOH,GAEdhc,GACL,IAAK,SACF3hB,EAASnL,GAAS8oC,EAClB,MACH,IAAK,YACF39B,EAASnL,GAAS8oC,EAClB,MACH,IAAK,OACF39B,EAASnL,EAAQ8oC,EACjB,MACH,IAAK,UACF39B,EAASnL,EAAQ8oC,EACjB,MACH,IAAK,gBACF39B,EAASnL,GAAS8oC,EAClB,MACH,IAAK,mBACF39B,EAASnL,GAAS8oC,EAClB,MACH,QACG39B,EAAStM,EAAO6yC,WAAWtmB,EAAS0B,EAAMgc,GAIhD,OAAO39B,CACV,EAEAs9B,UAAW,SAAUrd,EAASnoB,EAAO6pB,EAAMgc,GACxC,IAAI39B,GAAS,EAETnL,EAAQsnC,EAAYlc,EAASnoB,GAOjC,OANIjD,GAASA,EAAMwV,cAAaxV,EAAQA,EAAMwV,eAE9CszB,EAAeA,EAAatzB,cAEvBhL,MAAMC,QAAQq+B,KAAeA,EAAe,CAACA,IAE1Chc,GACL,IAAK,SACE9sB,IAAOmL,EAAS29B,EAAap+B,QAAQ1K,IAAU,GACnD,MACH,IAAK,YACSmL,GAAPnL,GAAgB8oC,EAAap+B,QAAQ1K,GAAS,EAElD,MACH,QACGmL,EAAStM,EAAO6yC,WAAWtmB,EAAS0B,EAAMgc,GAIhD,OAAO39B,CACV,EAEAu9B,aAAc,SAAUtd,EAASnoB,EAAO6pB,EAAMgc,GAC3C,IAAI39B,GAAS,EAETnL,EAAQsnC,EAAYlc,EAASnoB,GAKjC,OAFa,MAATjD,IAAeA,GAAQ,GAEnB8sB,GACL,IAAK,SACF3hB,EAASnL,GAAS8oC,EAClB,MACH,IAAK,YACF39B,EAASnL,GAAS8oC,EAClB,MACH,QACG39B,EAAStM,EAAO6yC,WAAWtmB,EAAS0B,EAAMgc,GAIhD,OAAO39B,CACV,EAEAw9B,UAAW,CAACvd,EAASnoB,EAAO6pB,EAAMgc,KAC/B,IAAI39B,GAAS,EAETnL,EAAQsnC,EAAYlc,EAASnoB,GAIjC,OAAQ6pB,GACL,IAAK,kBACF3hB,EAASnL,GAAS3C,KAAK4S,QAAQhC,SAC/B,MACH,IAAK,sBACF9C,EAASnL,GAAS3C,KAAK4S,QAAQhC,SAC/B,MACH,IAAK,uBACF,IAAKjO,EAAO,CACTmL,GAAS,EACT,KACH,CACKX,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,GACInL,GAAS,IAAImG,QAAQsK,KACfA,IAEGA,EAAExC,UAAYwC,EAAExS,IAAMwS,EAAE/E,MAAQ+E,IACjCpT,KAAK4S,QAAQhC,WAKnBzK,OAAS,EACf,MACH,IAAK,2BACF,IAAKxD,EAAO,CACTmL,GAAS,EACT,KACH,CACKX,MAAMC,QAAQzK,KAAQA,EAAQ,CAACA,IAEpCmL,EAUgB,IATZnL,GAAS,IAAImG,QAAQsK,KACfA,IAEGA,EAAExC,UAAYwC,EAAExS,IAAMwS,EAAE/E,MAAQ+E,IACjCpT,KAAK4S,QAAQhC,WAKnBzK,OACN,MACH,IAAK,SACF2H,EAASnL,EAAM0K,QAAQo+B,IAAiB,EACxC,MACH,IAAK,YACF39B,EAASnL,EAAM0K,QAAQo+B,GAAgB,EACvC,MACH,QACG39B,EAAStM,EAAO6yC,WAAWtmB,EAAS0B,EAAMgc,GAIhD,OAAO39B,CAAM,EAGhBumC,WAAY,CAACtmB,EAAS0B,EAAMgc,KACzB,IAAI39B,GAAS,EAEb,IAAK9N,KAAK+B,KAAO0pC,EAAc,OAAO39B,EAGtC,IAAI+9B,EAAUJ,EAAaxjB,MAAM,KAAK,GACnCvd,EAAU+gC,EAAaxjB,MAAM,KAAK,GAGjCgB,EAAQjpB,KAAK2nB,SAASC,GAAMA,EAAEhnB,IAAMirC,IAAS,GACjD,IAAK5iB,EAAO,OAAOnb,EAInB,IADYmb,EAAMliB,QAAQC,GAAMA,EAAEpG,IAAM8J,IAAS,GACrC,OAAOoD,EAEnB,IAAIg+B,EAAU,4BACP94B,QAAQ,WAAYnT,GACpBmT,QAAQ,OAAQiW,EAAMroB,IAC1BmrC,EAAqB,IAAI/rC,KAAKL,YAAYK,KAAKJ,IAAKksC,GAMvD,OALAC,EAAmBn5B,QAAU5S,KAAK4S,QAElCm5B,EAAmBlY,WAAW5K,EAAMliB,UACpCglC,EAAmBlnC,SAASokB,EAAMoZ,2BAE1B5S,GACL,IAAK,iBACF3hB,EAASi+B,EAAmBxmC,QAAQwoB,GACpC,MACH,IAAK,qBACFjgB,GAAUi+B,EAAmBxmC,QAAQwoB,GAI3C,OAAOjgB,CAAM,EAGhBk+B,aAAc,CAACje,EAASjnB,EAAY2oB,EAAMgc,KACvC,IAAI39B,GAAS,EAMb,GAJIhH,IACDinB,EAAUA,EAAQjnB,IAAe,CAAC,IAGhC2kC,IAAiBzrC,KAAK+B,GAAI,OAAO+L,EAGtC,IAAImb,EAAQjpB,KAAK2nB,SAASC,GAAMA,EAAEhnB,IAAM6qC,IAAc,GACtD,IAAKxiB,EAAO,OAAOnb,EAEnB,IAAIg+B,EAAU,sBACP94B,QAAQ,WAAYnT,GACpBmT,QAAQ,OAAQiW,EAAMroB,IAC1BqrC,EAAgB,IAAIjsC,KAAKL,YAAYK,KAAKJ,IAAKksC,GAMlD,OALAG,EAAcr5B,QAAU5S,KAAK4S,QAE7Bq5B,EAAcpY,WAAW5K,EAAMliB,UAC/BklC,EAAcpnC,SAASokB,EAAMoZ,2BAErB5S,GACL,IAAK,WACF3hB,EAASm+B,EAAc1mC,QAAQwoB,GAC/B,MACH,IAAK,eACFjgB,GAAUm+B,EAAc1mC,QAAQwoB,GAItC,OAAOjgB,CAAM,EAGhBo+B,oBAAqB,CAACne,EAASjnB,EAAY2oB,EAAMgc,KAC9C,IAAI39B,GAAS,EAEb,IAAK29B,IAAiBzrC,KAAK+B,GAAI,OAAO+L,EAElChH,IACDinB,EAAUA,EAAQjnB,IAAe,CAAC,GAGrC,IAAI6lB,EAAK3sB,KAAK+B,GAAG+pB,mBAAmB2f,GAEpC,OAAQhc,GACL,IAAK,qBACF,IAAK9C,EAAI,OAAO,EAEhB7e,EACG6e,EAAGyG,SACC/C,IAAOA,EAAEzvB,IAAMyvB,EAAExgB,QAAUke,EAAQntB,IAAMmtB,EAAQle,QACnD1J,OAAS,EACd,MACH,IAAK,yBACF,IAAKwmB,EAAI,OAAO,EAEhB7e,EACG6e,EAAGyG,SACC/C,IAAOA,EAAEzvB,IAAMyvB,EAAExgB,QAAUke,EAAQntB,IAAMmtB,EAAQle,QACnD1J,OAAS,EAIpB,OAAO2H,CAAM,EAGhBy9B,kBAAmB,SAAUxd,EAASnoB,EAAO6pB,EAAMgc,GAChD,IAAIjb,EAAe5qB,EAAM4qB,eAGrBsa,GAFallC,EAAMkB,WAEJ,IAEnB,GAAIinB,EACD,GAAIA,EAAQyC,GACTsa,KACIllC,EAAMyB,YACF0mB,EAAQyC,GAAc5qB,EAAMyB,WAAWP,eAE3ClB,EAAM0B,aACFymB,EAAQyC,GAAc5qB,EAAM0B,YAAYR,aAE7CinB,EAAQyC,GAAc5vB,IACtBmtB,EAAQyC,IAEP9b,WACAyD,kBACA,CACJ,IAAI4yB,EAAWd,EAAYlc,EAASnoB,GACpB,MAAZmlC,IACDD,EAAeC,EAErB,CAGH,IAAIoB,GAAyBV,GAAgB,IAAItzB,cAEjD,OAAQsX,GACL,IAAK,WACF,OACGqb,EAAap2B,WAAWrH,QAAQ8+B,IAA0B,EAEhE,IAAK,eACF,OAEI,GADDrB,EAAap2B,WAAWrH,QAAQ8+B,GAGtC,IAAK,SACF,OAAOrB,GAAgBqB,EAC1B,IAAK,YACF,OAAOrB,GAAgBqB,EAC1B,IAAK,WACL,IAAK,eACF,OAAO3qC,EAAOwqC,aACXje,EACAyC,EACAf,EACAgc,GAEN,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAOjqC,EAAO8pC,UAAUvd,EAASnoB,EAAO6pB,EAAMgc,GACjD,IAAK,WACF,OAC4B,MAAzB1d,EAAQyC,IACRzC,EAAQyC,GAAcrqB,OAAS,GACN,IAAzB4nB,EAAQyC,GAEd,IAAK,eACF,OAC4B,MAAzBzC,EAAQyC,KACNrjB,MAAMC,QAAQ2gB,EAAQyC,KACrBzC,EAAQyC,GAAcrqB,OAAS,GACN,IAAzB4nB,EAAQyC,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAOhvB,EAAO0qC,oBACXne,EACAyC,EACAf,EACAgc,GAGZ,EAEAD,gBAAiB,CAACzd,EAAS0B,EAAMgc,KAG9B,OAAQhc,GAEL,IAAK,WACL,IAAK,eACF,IAAKzvB,KAAK+B,KAAO/B,KAAKssC,QAAS,OANxB,EASP,IAAIrjB,EAAQjpB,KAAK2nB,SAASC,GAAMA,EAAEhnB,IAAM6qC,IAAc,GACtD,IAAKxiB,EAAO,OAVL,EAeP,GAHsBA,EAAM9C,SAASL,GAC3BA,EAAEllB,IAAMZ,KAAKssC,QAAQ1rC,KAEXuF,OAAS,EAQ1B,OAHAqC,QAAQ+G,MACL,iFAEI,EAIV,IAAIggB,EAAQtG,EAAMuG,YAAYxvB,KAAKssC,QAAQ1rC,IAGvCyrC,EAAa,CAAC,EAMlB,OALAl4B,OAAOC,KAAK2Z,GAAS9pB,SAASI,IAC3BgoC,EAAW,GAAG9c,KAASlrB,KAAS0pB,EAAQ1pB,EAAI,IAIxC7C,EAAOwqC,aACXK,EACA,KACA5c,EACAgc,GAKN,IAAK,qBACL,IAAK,yBAEF,OAAOjqC,EAAO0qC,oBACXne,EACA,KACA0B,EACAgc,GAGT,GAONzrC,KAAKiM,SAAWzK,EAAOyK,QAG1B,CAEA3I,KAAKnB,GACEA,EAAQ4qC,iBACT/sC,KAAKqM,UAAU0gC,eAAiB5qC,EAAQ4qC,eAE9C,CAQAxnC,QAAQwoB,GACL,IAAIqmB,EAAkBp0C,KAAKo0C,gBACvB5yC,EAASxB,KAAKwB,OAGlB,GACsB,MAAnB4yC,GACyB,MAAzBA,EAAgBjzB,OACgB,GAAhCizB,EAAgBjzB,MAAMhb,OAEtB,OAAO,EAEV,GAAe,MAAX4nB,EAAiB,OAAO,EAE5B,IAAIjgB,EAAkC,QAAzBsmC,EAAgB7qB,KAiG7B,OA/FA6qB,EAAgBjzB,MAAMld,SAAS6E,IAC5B,GAAKA,EAAOzE,KAAQyE,EAAO2mB,KAA3B,CAEA,IAAIkV,EAAY3kC,KAAKoqC,QAAQthC,QAAQ9B,GAAMA,EAAEpG,IAAMkI,EAAOzE,MAAK,GAC/D,GAAKsgC,EAAL,CAEA,IAAIiG,EAIAC,EAAgBlG,EAAUtgC,IAQ9B,YAP4B,IAAjBsgC,EAAUtgC,MACE,eAAhBsgC,EAAU/jC,IACX+jC,EAAUtgC,IAAM,eAChBwmC,EAAgBlG,EAAUtgC,KACtBwmC,EAAgB,eAGlBA,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACFD,EAAappC,EAAOypC,UACjBld,EACA4W,EACA77B,EAAO2mB,KACP3mB,EAAOnG,OAEV,MACH,IAAK,OACL,IAAK,WACFioC,EAAappC,EAAO0pC,UACjBnd,EACA4W,EACA77B,EAAO2mB,KACP3mB,EAAOnG,OAEV,MACH,IAAK,SACFioC,EAAappC,EAAO2pC,YACjBpd,EACA4W,EACA77B,EAAO2mB,KACP3mB,EAAOnG,OAEV,MACH,IAAK,OACFioC,EAAappC,EAAO4pC,UACjBrd,EACA4W,EACA77B,EAAO2mB,KACP3mB,EAAOnG,OAEV,MACH,IAAK,UACFioC,EAAappC,EAAO6pC,aACjBtd,EACA4W,EACA77B,EAAO2mB,KACP3mB,EAAOnG,OAEV,MACH,IAAK,OACFioC,EAAappC,EAAO8pC,UACjBvd,EACA4W,EACA77B,EAAO2mB,KACP3mB,EAAOnG,OAEV,MACH,IAAK,eACL,IAAK,gBACFioC,EAAappC,EAAO+pC,kBACjBxd,EACA4W,EACA77B,EAAO2mB,KACP3mB,EAAOnG,OAEV,MACH,IAAK,cACFioC,EAAappC,EAAOgqC,gBACjBzd,EACAjlB,EAAO2mB,KACP3mB,EAAOnG,OAMbmL,EAD0B,QAAzBsmC,EAAgB7qB,KACRzb,GAAU88B,EAEV98B,GAAU88B,CAvFA,CAHiB,CA2FvC,IAGI98B,CACV,CAsBA+lB,WAAW9sB,EAAS,GAAI9B,EAAS,MAS9B,GARAjF,KAAKoqC,QAAUrjC,EAAO+B,QAAQ9B,GAAMA,GAAKA,EAAE2lC,sBAG3C3sC,KAAKmqC,aAAenqC,KAAKoqC,QACpBpqC,KAAKoqC,QAAQthC,QAAQ9B,GAAMA,GAAKA,EAAE25B,cAAyB,QAAT35B,EAAE3C,MACpD,GAGDY,EAAQ,CACTjF,KAAKssC,QAAUrnC,EAEf,IAAI2nC,EAAgB,CACjBhsC,GAAI,cACJQ,MAAO6D,EAAO7D,OAIb6D,EAAOs2B,WACRqR,EAAcrd,MAAQ,eAGzBvvB,KAAKoqC,QAAQyC,QAAQD,EACxB,aACU5sC,KAAKssC,OAElB,CAEAwH,YAAYnsB,EAAU,IACnB3nB,KAAK+zC,SAAWpsB,CACnB,CAQAA,QAAQ7e,EAAS,MAAM,IACpB,IAAIgF,EAAS,GAcb,OAZI9N,KAAK+B,KACN+L,EAASA,EAAOyZ,OAAOvnB,KAAK+B,GAAG4lB,QAAQ7e,KAGtC9I,KAAK+zC,WACNjmC,EAASA,EAAOyZ,QACZvnB,KAAK+zC,UAAY,IAAIjrC,QAClB8e,GAAM9e,EAAO8e,IAAM9Z,EAAOhF,QAAQ8G,GAAMA,EAAEhP,IAAMgnB,EAAEhnB,KAAIuF,OAAS,MAKlE2H,CACV,CAEAjJ,SAASuB,GACNpG,KAAKo0C,gBAAkBhuC,GAAY,CAAC,EACpCpG,KAAKo0C,gBAAgBjzB,MAAQnhB,KAAKo0C,gBAAgBjzB,OAAS,EAC9D,oBC7xBH,MAAMmzB,EAAU,EAAQ,OAExB,SAASv0C,EAAEsE,EAAKwO,GAEb,OAAOA,CACV,CAEA,MAAM0hC,EAA2B,CAC9BlwC,IAAK,YAGLmwC,YAAa,uBAIbjpC,KAAM,MAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,aAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,UAAW,WAAY,YAAa,MAAO,YAO/DtS,EAAgB,CACnB9nB,OAAQ,GACRq6B,UAAW,OACXC,cAAe,EACfC,YAAa,QAGhBz1C,EAAOC,QAAU,cAAmC40C,EACjD30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQsvC,EACzB,CAGA7pB,kBACG,OAAO6pB,CACV,CAEA7pB,uBACG,OAAO+X,CACV,CAEA/X,wBAAwBrc,GACrB,MAAM8mC,EAAgBn1C,KAAKo1C,gBAAgBtsC,QAAQsF,GACzCA,EAAKxN,IAAMyN,IAClB,GAEH,OAAO8mC,EAAgBA,EAAcE,KAAO,EAC/C,CAEA3qB,uBACG,MAAO,CACJ,CAAE9pB,GAAI,OAAQ+B,MAAO5C,IAAWs1C,KAAM,IACtC,CAAEz0C,GAAI,QAAS+B,MAAO5C,IAAYs1C,KAAM,MACxC,CAAEz0C,GAAI,QAAS+B,MAAO5C,IAAYs1C,KAAM,KACxC,CAAEz0C,GAAI,QAAS+B,MAAO5C,IAAYs1C,KAAM,KACxC,CAAEz0C,GAAI,OAAQ+B,MAAO5C,IAAWs1C,KAAM,KACtC,CAAEz0C,GAAI,QAAS+B,MAAO5C,IAAYs1C,KAAM,KAE9C,CAEA3qB,uBAAuB/P,EAAQq6B,EAAWC,EAAeK,GAMtD,OAJG36B,EACA3a,KAAKu1C,iBAAiBP,IACrB,aAAeM,GAAepiC,OAAOoS,SAAS2vB,GAGrD,CAEAhvC,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS6uC,cAAgB3vB,SAAStlB,KAAKoG,SAAS6uC,cACxD,CAQAvS,aAAa/8B,UAEHA,EAAO3F,KAAK8G,WACtB,CAEAwZ,OAAOyN,GACJ,IAAKA,IAAU/tB,KAAK8G,YAAa,MAAO,GAExC,IAQG,OAPwB9G,KAAKL,YAAY61C,gBACtCx1C,KAAKoG,SAASuU,OACd3a,KAAKoG,SAAS4uC,UACdh1C,KAAKoG,SAAS6uC,cACdlnB,EAAQ/tB,KAAK8G,YAMnB,CAFE,MAAOqB,GACN,MAAO,EACV,CACH,oBC/IH,MAAMmsC,EAAU,EAAQ,OAOlBmB,EAAyB,CAC5BpxC,IAAK,UAGLmwC,YAAa,sDAIbjpC,KAAM,iBAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,WAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAKrBC,qBAAsB,CAAC,OAAQ,YAM5BtS,EAAgB,CACnBqH,QAAS,GAGZrqC,EAAOC,QAAU,cAAiC40C,EAC/C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQwwC,EACzB,CAGA/qB,kBACG,OAAO+qB,CACV,CAEA/qB,uBACG,OAAO+X,CACV,CAYAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEY,MAAzB3F,KAAKoG,SAAS0jC,UACf9pC,KAAKoG,SAAS0jC,QAAUxkB,SAAStlB,KAAKoG,SAAS0jC,SACrD,CAQApH,aAAa/8B,GACqB,MAA3BA,EAAO3F,KAAK8G,aAAgD,MAAzB9G,KAAKoG,SAAS0jC,UAClDnkC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0jC,QAE9C,kECzGH,MAAMwK,QAAU,oBAAQ,OAExB,SAASv0C,EAAEsE,EAAKwO,GAEb,OAAOA,CACV,CAGA,SAAS6iC,IAAIC,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIr1B,KAAKo1B,GAC1B,IAAKC,EAAU,OAAO,EAEtB,MAEMC,GAFQ,IAAIt1B,KAESq1B,GADX,QAGhB,OAAIC,EAAY,EAAUtvC,KAAKuvC,MAAkB,GAAZD,GAAkB,GAE3CtvC,KAAKC,MAAMqvC,EAc1B,CAEA,SAASE,KAAKJ,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIr1B,KAAKo1B,GAC1B,OAAKC,EAEEA,EAASI,cAFM,CAGzB,CAEA,SAASC,MAAMN,GAEZ,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIr1B,KAAKo1B,GAC1B,OAAKC,EAGEA,EAASM,WAHM,CAIzB,CAEA,SAASC,IAAIR,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIr1B,KAAKo1B,GAC1B,OAAKC,EAEEA,EAASQ,UAFM,CAGzB,CAEA,SAASC,KAAKV,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIr1B,KAAKo1B,GAC1B,OAAKC,EAMErvC,KAAKuvC,MAAMF,EAASU,UAHZ,OAHO,CAOzB,CAEA,SAASC,KAAKZ,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIr1B,KAAKo1B,GAC1B,OAAKC,EAMErvC,KAAKuvC,MAAMF,EAASU,UAHX,MAHM,CAOzB,CAEA,SAASE,OAAOb,GAEb,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIr1B,KAAKo1B,GAC1B,OAAKC,EAMErvC,KAAKuvC,MAAMF,EAASU,UAHT,KAHI,CAOzB,CAEA,SAASG,eAAeC,GACrB,MAAMC,EAAQD,EAAO,GACfE,EAASrwC,KAAKC,MAAMmwC,GACpBE,EAA6B,IAAlBF,EAAQC,GACnBE,EAAWvwC,KAAKuvC,MAAMe,GAE5B,OAAOE,WAAW,GAAGH,KAAUE,IAClC,CAEA,MAAME,yBAA2B,CAC9B3yC,IAAK,YAGLmwC,YAAa,mDAIbjpC,KAAM,aAINkpC,aAAe7uC,GAKiB,GAJD,CAAC,iBAAkB,OAAQ,OAAQ,UACvBkD,QAAQsF,GAC7CxI,EAAMQ,SAAS6wC,QAAQjJ,SAAS5/B,KAEhBjI,OAQtBuuC,YAAY,EAMZvwC,SAAU,YAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAtS,cAAgB,CACnBwU,QAAS,GACTC,YAAa,OACbC,cAAe,GAGlB13C,OAAOC,QAAU,MAAM03C,6BAA6B9C,QACjD30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ+xC,yBACzB,CAGAtsB,kBACG,OAAOssB,wBACV,CAEAtsB,uBACG,OAAO+X,aACV,CAWA/X,mBAAmBzlB,OAAQgyC,QAASlpB,QAASspB,MAAO9nB,MAAQ,MACzD,OAAK0nB,SAGLA,QAAUA,QAAQjkC,QAAQ,eAAgB,gBAE1C/N,OAAO8B,SAAS9C,SAAS+C,IACtB,IAAIiwB,EAAUjwB,EAAEF,WAMhB,GALImwB,EAAQ5pB,QAAQ,MAAQ,IAEzB4pB,EAAUA,EAAQhP,MAAM,KAAK,IAG5BgvB,QAAQ5pC,QAAQ,IAAM4pB,EAAU,KAAO,EAAG,OAE9C,MAAMptB,EACHkkB,QAAQ,GAAG9oB,OAAOsqB,OAASA,SAASvoB,EAAEF,eACtCinB,QAAQ/mB,EAAEF,YAGb,GAAa,UAATE,EAAE3C,IAAiB,CACpB,MAAMizC,EAAY,IAAIztC,GAAQ,KAC9BotC,QAAUA,QAAQjkC,QACf,IAAIoP,OAAO,IAAM6U,EAAU,IAAK,KAChCqgB,EAEN,MAEK,GAAa,aAATtwC,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAAkB,CAClD,IAAIkzC,EAASvwC,EAAEsZ,OAAOyN,UAAY,EAGb,iBAAVwpB,IACRA,EAASA,EAAOvkC,QAAQ,YAAa,KAExCukC,EAAS,IAAIA,KAEbN,QAAUA,QAAQjkC,QACf,IAAIoP,OAAO,IAAM6U,EAAU,IAAK,KAChCsgB,EAEN,MAEK,GAAa,QAATvwC,EAAE3C,IAAe,CACvB,MAAMmzC,EAAU,IAAI3tC,GAAQ,MAC5BotC,QAAUA,QAAQjkC,QACf,IAAIoP,OAAO,IAAM6U,EAAU,IAAK,KAChCugB,EAEN,MAEK,GAAa,WAATxwC,EAAE3C,IAAkB,CAC1B,MAAMozC,EAAa,IAAI5tC,GAAQ,KAC/BotC,QAAUA,QAAQjkC,QACf,IAAIoP,OAAO,IAAM6U,EAAU,IAAK,KAChCwgB,EAEN,KAMIC,KAAKT,SAASU,QAAQN,OAAS,IA9DjB,EA+DxB,CAYA3U,aAAa/8B,UAEHA,EAAO3F,KAAK8G,WACtB,CAEAwZ,OAAOyN,GACJ,IAAIspB,EAAQ,EACqB,QAA7Br3C,KAAKoG,SAAS8wC,cACfG,EAAQr3C,KAAKoG,SAAS+wC,eAGzB,IACG,IAAIrpC,EAAS9N,KAAKL,YAAYi4C,YAC3B53C,KAAKiF,OACLjF,KAAKoG,SAAS6wC,QACdlpB,EACAspB,EACAr3C,KAAKuvB,OAGR,OAAQvvB,KAAKoG,SAAS8wC,aACnB,IAAK,QACFppC,EAASA,EAAOkF,QAAQ,IAAK,KAC7B,MACH,IAAK,QACFlF,EAASA,EAAOkF,QAAQ,IAAK,KAInC,OAAOlF,CAGV,CAFE,MAAO3F,GACN,MAAO,EACV,CACH,oBClUH,MAAMmsC,EAAU,EAAQ,OAOlBuD,EAA0B,CAC7BxzC,IAAK,WAGLmwC,YAAa,iBAIbjpC,KAAM,MAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,iBAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1CtS,EAAgB,CACnBqV,eAAgB,GAKhB9C,UAAW,QAGdv1C,EAAOC,QAAU,cAAiC40C,EAC/C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ4yC,EACzB,CAGAntB,kBACG,OAAOmtB,CACV,CAEAntB,uBACG,OAAO+X,CACV,CAEAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS4uC,UACXrvC,EAAOS,SAAS4uC,WAAavS,EAAcuS,SACjD,CAQAtS,aAAa/8B,UAEHA,EAAO3F,KAAK8G,WACtB,oBCpGH,IAAIwtC,EAAU,EAAQ,OAOtB,MAAMyD,EAAyB,CAC5B1zC,IAAK,gBAGLmwC,YAAa,oCAIbjpC,KAAM,gBAINkpC,cAAc,EAOdC,WAAa9uC,GAEH,CAAC,WAAY,WAAWyH,QADd,GAAGzH,GAAOQ,UAAUa,YAAYrB,GAAOQ,UAAUc,gBACd,EAOvD/C,SAAU,4BAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCtS,EAAgB,CACnB97B,WAAY,GAGZM,SAAU,MAIVC,YAAa,OAIbe,WAAY,GAIZvB,SAAU,KAUVU,WAAY,EAKZC,WAAY,GASZC,YAAa,IAMhB7H,EAAOC,QAAU,cAAiC40C,EAC/C30C,YAAYgG,EAAQV,EAAQ+yC,EAAgBD,GACzCj4C,MAAM6F,EAAQV,EAAQ+yC,GAEtBh4C,KAAK2gC,cAAe,CAUvB,CAGAjW,kBACG,OAAOqtB,CACV,CAEArtB,uBACG,OAAO+X,CACV,CAMAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASM,SAAW4e,SAAStlB,KAAKoG,SAASM,UAAY,GAC5D1G,KAAKoG,SAASgB,WAAake,SAAStlB,KAAKoG,SAASgB,YAAc,EACnE,CAYAs7B,eAA4B,CAU5B7S,YAAYhmB,EAAMtC,GACfzH,MAAM+vB,YAAYhmB,EAAMtC,EAC3B,CAEAipB,eAEG,GAAIxwB,KAAK8G,WAAWuG,QAAQ,MAAQ,EAAG,CACpC,MAAM4qC,EAAQj4C,KAAK8G,WAAWmhB,MAAM,KACpC,MAAO,GAAGgwB,EAAM,MAAMj4C,KAAK+B,GAAGof,MAAM6V,sBAAsBihB,EAAM,KACnE,CACG,OAAOj4C,KAAK+B,GAAGof,MAAM6V,sBAAsBh3B,KAAK8G,WAEtD,CAOIF,qBACD,MAAMsxC,EAAUl4C,KAAK+B,GAAGgW,WAAW/X,KAAKoG,SAASO,YACjD,IAAKuxC,EAAS,CACX,MAAMC,EAAc,IAAI7vC,MACrB,gBAAgBtI,KAAKoB,UAAUpB,KAAKY,iCAAiCZ,KAAKoG,SAASO,eAEtF3G,KAAK+B,GAAGqG,OAAOotB,QAAQ2iB,EAAa,CACjCvyC,MAAO5F,KACP2G,WAAY3G,KAAKoG,SAASO,YAEhC,CACA,OAAOuxC,CACV,CAOInsB,gBACD,MAAMmT,EAAal/B,KAAK4G,eACxB,IAAKs4B,EAAY,OAAO,KAExB,MAAMj3B,EAAai3B,EAAWnxB,UAAU/N,KAAKoG,SAAS6B,YACtD,IAAKA,EAAY,CACd,MAAMkwC,EAAc,IAAI7vC,MACrB,gBAAgBtI,KAAKoB,UAAUpB,KAAKY,iCAAiCZ,KAAKoG,SAAS6B,eAEtFjI,KAAK+B,GAAGqG,OAAOotB,QAAQ2iB,EAAa,CACjCvyC,MAAO5F,KACPiI,WAAYjI,KAAKoG,SAAS6B,YAEhC,CACA,OAAOA,CACV,CAQAmwC,mBAAmBl5B,GAChB,IAAIm5B,EAGJ,MAAMpS,EAAejmC,KAAK4G,eAE1B,IAAIiD,EAAO7J,KAAKs4C,UAAUp5B,GAC1B,GAAIrV,GAAQo8B,EAAc,CAEvB,GAAmB,iBAARp8B,EACR,IACGA,EAAOgK,KAAK0D,MAAM1N,EAKrB,CAJE,MAAOQ,GAGNguC,EAAexuC,CAClB,CAGHwuC,EAAexuC,CAClB,CAEA,OAAOwuC,CACV,CAEAC,UAAUvqB,GACP,GAAe,MAAXA,EAAiB,MAAO,GAE5B,MAAMwqB,EAAW,GAAGv4C,KAAKiF,OAAOkC,QAAQnH,KAAKwwB,iBAE7C,OACGzC,EAAQ/tB,KAAKwwB,iBACbzC,EAAQwqB,IACRxqB,EAAQ/tB,KAAK8G,aACb,EAEN,CAEAwZ,OAAOyN,GACJ,MAAM/X,EAAMhW,KAAKo4C,mBAAmBrqB,GAC9BkY,EAAejmC,KAAK4G,eAG1B,OAAIuG,MAAMC,QAAQ4I,GACRA,EACH7H,KAAKiF,GACW,MAAVA,EAAE/E,KAAqB43B,EAAalD,YAAY3vB,IAAM,GAC9CA,EAAE/E,MAAQ,KAExBC,KAAK,MAEH0H,EACU,MAAZA,EAAI3H,KAAqB43B,EAAalD,YAAYhV,IAAY,GACzD/X,EAAI3H,KAAa2H,EAAI3H,MAAQ,QAAjC,EAGI,EACf,CAOApH,WACG,OAAOjH,KAAKoG,SAASa,QACxB,CAOAC,cACG,OAAOlH,KAAKoG,SAASc,WACxB,CAOAR,WACG,OAAO1G,KAAKoG,SAASM,QACxB,CAMIW,iBACD,IAAKrH,KAAKoG,SAASgB,aAAepH,KAAKoG,SAASiB,WAC7C,OAAO,KAEV,MAAMJ,EAAW,GAAGjH,KAAKoG,SAASa,YAAYjH,KAAKoG,SAASc,cAE5D,GAAiB,aAAbD,EACD,OAAOjH,KAAK4G,eAAemH,UAAU/N,KAAKoG,SAASiB,YAGjD,GAAiB,YAAbJ,EACN,OAAIjH,KAAKoG,SAASM,SACR1G,KAAK4G,eAAemH,UAAU/N,KAAKoG,SAASiB,YAE5CrH,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASiB,YAI5C,GAAiB,aAAbJ,EACN,OAAOjH,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASiB,YAGzC,GAAiB,cAAbJ,EAA0B,CAChC,IAAII,EAAarH,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASiB,YAOrD,OALkB,MAAdA,IACDA,EAAarH,KAAK4G,eAAemH,UAC9B/N,KAAKoG,SAASiB,aAGbA,CACV,CAEA,OAAO,IACV,CAMIC,kBACD,IAAKtH,KAAKoG,SAASgB,aAAepH,KAAKoG,SAASkB,YAC7C,OAAO,KAGV,IAAID,EAeJ,MAX6B,QAA1BrH,KAAKoG,SAASa,UACe,QAA7BjH,KAAKoG,SAASc,cAEdG,EAAarH,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASkB,aAE/B,MAAdD,IACDA,EAAarH,KAAK4G,eAAemH,UAC9B/N,KAAKoG,SAASkB,eAIhBD,CACV,CAWAmxC,iBAAiBzqB,EAAS5rB,EAAU,CAAC,GAClC,GAAe,MAAX4rB,EAAiB,OACrB,IAAIkJ,EACJ,MAAM5vB,EAAarH,KAAKqH,WAClBT,EAAiB5G,KAAK4G,eAEtBK,EAAW,GAAGjH,KAAKoG,SAASa,YAAYjH,KAAKoG,SAASc,cAI5D,GAAiB,cAAbD,EAA0B,CAC3B,MAAMK,EAActH,KAAKsH,YAErBD,GAAcA,EAAWpC,OAAOrE,IAAMgG,EAAehG,GACtDq2B,EAAU5vB,EAAWP,WACbQ,GAAeA,EAAYrC,OAAOrE,IAAMgG,EAAehG,KAC/Dq2B,EAAU3vB,EAAYR,WAE5B,MAGGO,IACc,aAAbJ,GACgB,YAAbA,GAA0BjH,KAAKoG,SAASM,UAE5CuwB,EAAU5vB,EAAWP,WAGF,aAAbG,EAMHgwB,EADC90B,EAAQs2C,UACC7xC,EAAemoB,KAEf1nB,EACLA,EAAWP,WACX9G,KAAK+rB,UAAUjlB,WAIjBF,IACNqwB,EAAUrwB,EAAemoB,MAG5B,IAAIjhB,EAASigB,EAAQkJ,IAAYlJ,EAAQntB,IAAMmtB,EAM/C,MAJe,MAAXkJ,IACDnpB,EAASwX,SAASxX,IAGdA,CACV,oBCxbH,MAAMiV,EAAY,EAAQ,OAE1BtjB,EAAOC,QAAU,cAA0BqjB,EACxCpjB,YAAYgG,EAAQV,EAAQ+yC,GACzBl4C,MAAM,CAAC,SAAUmF,EAAOlD,IAGxB/B,KAAKoE,SAAW4zC,GAAiB,CAAC,EAsBlCh4C,KAAKiF,OAASA,EAEdjF,KAAKiG,WAAWN,EACnB,CAQW+yC,2BACR,MAAO,CACJ,KACA,aACA,aACA,aACA,YACA,YAEN,CAEAhuB,uBACG,MAAO,CAAC,CACX,CAGAhhB,WACG,OAAO1J,KAAKoE,SAASC,GACxB,CAMAs0C,gBACG,OAAI34C,KAAKoE,SAAS0wC,mBACX3nC,MAAMC,QAAQpN,KAAKoE,SAAS0wC,oBACtB90C,KAAKoE,SAAS0wC,mBAEd,CAAC90C,KAAKoE,SAAS0wC,oBAGlB,EAEb,CAMA8D,kBACG,OAAI54C,KAAKoE,SAAS2wC,qBACX5nC,MAAMC,QAAQpN,KAAKoE,SAAS2wC,sBACtB/0C,KAAKoE,SAAS2wC,qBAEd,CAAC/0C,KAAKoE,SAAS2wC,sBAGlB,EAEb,CAGA8D,YACG,OAAO74C,KAAKoE,SAASmH,IACxB,CAGAutC,gBACG,OAAO94C,KAAKoE,SAASD,QACxB,CAGA40C,mBACG,OAAO/4C,KAAKoE,SAASowC,WACxB,CAGA7H,oBACG,OAAkC,MAA9B3sC,KAAKoE,SAASqwC,aAC2B,mBAA/Bz0C,KAAKoE,SAASqwC,aACfz0C,KAAKoE,SAASqwC,aAAaz0C,MAE3BA,KAAKoE,SAASqwC,aAIpB,CACV,CAGA7oC,kBACG,OAAgC,MAA5B5L,KAAKoE,SAASswC,WACyB,mBAA7B10C,KAAKoE,SAASswC,WACf10C,KAAKoE,SAASswC,WAAW10C,MAEzBA,KAAKoE,SAASswC,WAIpB,CACV,CAGAxR,kBACG,OAAgC,MAA5BljC,KAAKoE,SAASywC,WACyB,mBAA7B70C,KAAKoE,SAASywC,WACf70C,KAAKoE,SAASywC,WAAW70C,MAEzBA,KAAKoE,SAASywC,WAIpB,CACV,CAEAmE,sBACG,OAAIh5C,KAAKoE,SAASuwC,gBAAuB30C,KAAKoE,SAASuwC,cAG1D,CAEAsE,oBACG,OAAkC,MAA9Bj5C,KAAKoE,SAAS80C,eAC2B,mBAA/Bl5C,KAAKoE,SAAS80C,aACfl5C,KAAKoE,SAAS80C,aAAal5C,MAE3BA,KAAKoE,SAAS80C,aAK9B,CAgBApzC,QACG,MAAMgS,EAAMhY,MAAMgG,QAElB,MAAO,CACJlF,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,QACnByC,IAAKrE,KAAKqE,IACVkH,KAAMvL,KAAKuL,KACX3C,WAAY5I,KAAK4I,WACjB9B,WAAY9G,KAAK8G,WACjBV,SAAUpG,KAAKoG,SACf+e,aAAcrN,EAAIqN,aAExB,CAEAg0B,aAAanjC,EAAKojC,GACf,IAAIC,EAAYD,EAIhB,YAHkB,IAAPpjC,IACRqjC,EAAYrjC,GAERqjC,CACV,CAQApzC,WAAWN,GACH3F,KAAKY,KAAIZ,KAAKY,GAAK+E,EAAO/E,IAC/BZ,KAAK4B,KAAQ+D,EAAO/D,KACpB5B,KAAKqE,IAAMsB,EAAOtB,KAAOrE,KAAK0J,WAC9B1J,KAAKuL,KAAO5F,EAAO4F,MAAQvL,KAAK64C,YAEhClzC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EAItCpG,KAAKoB,MAAQuE,EAAOvE,OAASuE,EAAOS,SAAShF,OAAS,UAEtDpB,KAAK8G,WAAanB,EAAOmB,YAAc,GAEvC9G,KAAK4I,WAAajD,EAAOiD,YAAc,EAEvC5I,KAAKoG,SAAWT,EAAOS,SACvBpG,KAAKoG,SAASC,SAAWrG,KAAKm5C,aAAaxzC,EAAOS,SAASC,SAAU,KACrErG,KAAKoG,SAASkzC,SAAWt5C,KAAKm5C,aAAaxzC,EAAOS,SAASkzC,SAAU,KACrEt5C,KAAKoG,SAASpF,MAAQhB,KAAKm5C,aAAaxzC,EAAOS,SAASpF,MAAO,KAG/DhB,KAAK4I,WAAa0c,SAAStlB,KAAK4I,YAChC5I,KAAKoG,SAASC,SAAWif,SAAStlB,KAAKoG,SAASC,UAChDrG,KAAKoG,SAASkzC,SAAWh0B,SAAStlB,KAAKoG,SAASkzC,UAChDt5C,KAAKoG,SAAShG,OAASklB,SAAStlB,KAAKoG,SAAShG,QAAU,GACxDJ,KAAKoG,SAASpF,MAAQskB,SAAStlB,KAAKoG,SAASpF,OAG7C,MAAMyhC,EAAgBziC,KAAKL,YAAY8iC,iBAAmB,CAAC,EAC3D,IAAK,MAAMjQ,KAAMiQ,EACdziC,KAAKoG,SAASosB,GAAMxyB,KAAKm5C,aACtBxzC,EAAOS,SAASosB,GAChBiQ,EAAcjQ,IAKpB1yB,MAAMmG,WAAWN,GAGjB3F,KAAK8G,WAAa9G,KAAK8G,YAAc9G,KAAKoB,MAI1CpB,KAAK8G,WAAa9G,KAAK8G,WAAWkM,QAAQ,mBAAoB,GACjE,CAQAoV,aACG,OAAOpoB,KAAKiF,OAAO09B,WAAa3iC,KAAKY,EACxC,CAQA8hC,aAAa/8B,GACVA,EAAO3F,KAAK8G,YAAc,EAC7B,CAQA+oB,YAAYhmB,EAAMtC,IAGZvH,KAAKoG,SAASkzC,UACY,MAAzBzvC,EAAK7J,KAAK8G,aAAgD,IAAzB+C,EAAK7J,KAAK8G,aACnB,GAAzB+C,EAAK7J,KAAK8G,aAEVS,EAAUgW,SAASvd,KAAK8G,WAAY,4BAE1C,CAOI26B,qBACD,OAAO,CACV,CAEA6W,UAAUvqB,GACP,MAAMwqB,EAAW,GAAGv4C,KAAKuvB,OAASvvB,KAAKiF,OAAOkC,QAAQnH,KAAK8G,aAE3D,IAAIgH,EAAS,GAOb,OANkC,MAA9BigB,IAAU/tB,KAAK8G,YAChBgH,EAASigB,EAAQ/tB,KAAK8G,YACS,MAAvBinB,IAAUwqB,KAClBzqC,EAASigB,EAAQwqB,IAGbzqC,CACV,CAQAwS,OAAOyN,GACJ,OAAIA,EACM/tB,KAAKs4C,UAAUvqB,GACX,EACjB,CASAlZ,eACG,MAAM0kC,EAAQz5C,MAAM+U,eAWpB,MAPkB,IAAd0kC,EAAMpyC,OACPoyC,EAAMpyC,KACHoyC,EAAMh4B,KAAKpa,MAAQoyC,EAAMh4B,KAAKngB,OAASm4C,EAAMh4B,KAAKza,YAEpD9G,KAAKiF,QAAUjF,KAAKiF,OAAOkC,OAC5BoyC,EAAMpyC,KAAO,GAAGnH,KAAKiF,OAAOkC,SAASoyC,EAAMpyC,QAEvCoyC,CACV,oBC5VH,MAAMjF,EAAU,EAAQ,OAExB,SAASv0C,EAAEsE,EAAKwO,GAEb,OAAOA,CACV,CAEA,MAAM2mC,EAAsB,CACzBn1C,IAAK,OAGLmwC,YAAa,4BAIbjpC,KAAM,WAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,OAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpBtS,EAAgB,CACnBgX,WAAY,EACZC,YAAa,EACbC,iBAAkB,KAClBC,kBAAmB,OACnBC,kBAAmB,OACnBC,oBAAqB,EACrBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,MAGpBx6C,EAAOC,QAAU,cAA8B40C,EAC5C30C,YAAYgG,EAAQV,EAAQw9B,EAAgB+W,GACzC15C,MAAM6F,EAAQV,EAAQw9B,EACzB,CAGA/X,kBACG,OAAO8uB,CACV,CAEA9uB,uBACG,OAAO+X,CACV,CAgBAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASqzC,WAAan0B,SAAStlB,KAAKoG,SAASqzC,YAClDz5C,KAAKoG,SAASszC,YAAcp0B,SAAStlB,KAAKoG,SAASszC,YACtD,CAYAhX,aAAa/8B,GACV,GAA+B,MAA3BA,EAAO3F,KAAK8G,YAAqB,OAErC,IAAIozC,EAG6B,GAA7Bl6C,KAAKoG,SAASszC,YACfQ,EAAa,IAAI35B,KAIY,GAA7BvgB,KAAKoG,SAASszC,aACd15C,KAAKoG,SAASuzC,mBAEdO,EAAa,IAAI35B,KAAKvgB,KAAKoG,SAASuzC,mBAIrB,MAAdO,IACDv0C,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAGof,MAAMX,aAAa05B,EAAY,CAC9D55B,OAAQ,eAIjB,CASAuP,YAAYhmB,EAAMtC,GAGf,GAFAzH,MAAM+vB,YAAYhmB,EAAMtC,GAEpBsC,EAAK7J,KAAK8G,YAAa,CACxB,IAAInE,EAAQkH,EAAK7J,KAAK8G,YAQtB,GANMnE,aAAiB4d,OACpB5d,EAAQ3C,KAAK+B,GAAGof,MAAMhB,OAAOxd,IAMa,kBAA1CwR,OAAOgmC,UAAUzlC,SAAS0lC,KAAKz3C,IAC/B03C,SAAS13C,GACV,CACC,IAAI4C,GAAU,EAGd,GAAIvF,KAAKoG,UAAYpG,KAAKoG,SAASwzC,kBAAmB,CACnD,MAAMU,EAAYt6C,KAAKoG,SAAS4zC,kBACxB,IAAIz5B,KAAKvgB,KAAKoG,SAAS4zC,mBACvB,KACLO,EAAUv6C,KAAKoG,SAAS6zC,gBACnB,IAAI15B,KAAKvgB,KAAKoG,SAAS6zC,iBACvB,KACLO,EAAmBx6C,KAAKy6C,eAAeH,GACvCI,EAAiB16C,KAAKy6C,eAAeF,GAClCI,EAAU36C,KAAK+B,GAAGof,MAAMN,aAC3B,IAAIN,KACJvgB,KAAKoG,SAAS0zC,oBACd95C,KAAKoG,SAASyzC,mBAEXe,EAAU56C,KAAK+B,GAAGof,MAAMF,QAC3B,IAAIV,KACJvgB,KAAKoG,SAAS2zC,mBACd/5C,KAAKoG,SAASyzC,mBAEjB,OAAQ75C,KAAKoG,SAASwzC,mBACnB,IAAK,YACEe,EAAUh4C,GAASA,EAAQi4C,EAASr1C,GAAU,GAE/CA,GAAU,EACVgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAoC,CACnCC,KAAKy6C,eAAeE,GACpB36C,KAAKy6C,eAAeG,OAK7B,MACH,IAAK,UACEN,EAAY33C,GAASA,EAAQ43C,EAASh1C,GAAU,GAEjDA,GAAU,EACVgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAoC,CACnCy6C,EACAE,MAIT,MACH,IAAK,aACE/3C,EAAQ23C,GAAaC,EAAU53C,EAAO4C,GAAU,GAEjDA,GAAU,EACVgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAwC,CACvCy6C,EACAE,MAIT,MACH,IAAK,IACFn1C,EACG5C,EAAM2zC,SACNgE,EAAUhE,SACV3zC,EAAM2zC,WAAagE,EAAUhE,UAC3B/wC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAoB,CAACy6C,KAE7B,MACH,IAAK,KACFj1C,EACG5C,EAAM2zC,SACNgE,EAAUhE,SACV3zC,EAAM2zC,WAAagE,EAAUhE,UAC3B/wC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAwB,CAACy6C,KAEjC,MACH,IAAK,IACFj1C,EACG5C,EAAM2zC,SACNgE,EAAUhE,SACV3zC,EAAM2zC,UAAYgE,EAAUhE,UAC1B/wC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAoB,CAACy6C,KAE7B,MACH,IAAK,IACFj1C,EACG5C,EAAM2zC,SACNgE,EAAUhE,SACV3zC,EAAM2zC,UAAYgE,EAAUhE,UAC1B/wC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAAqB,CAACy6C,KAE9B,MACH,IAAK,KACFj1C,EACG5C,EAAM2zC,SACNgE,EAAUhE,SACV3zC,EAAM2zC,WAAagE,EAAUhE,UAC3B/wC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAA6B,CAACy6C,KAEtC,MACH,IAAK,KACFj1C,EACG5C,EAAM2zC,SACNgE,EAAUhE,SACV3zC,EAAM2zC,WAAagE,EAAUhE,UAC3B/wC,GACFgC,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,EAA8B,CAACy6C,KAIhD,CAEIj1C,IAGDsE,EAAK7J,KAAK8G,YAAc9G,KAAK66C,YAAYl4C,GAE/C,MAEG4E,EAAUgW,SAASvd,KAAK8G,WAAY,oBAE1C,CACH,CAEAwZ,OAAOyN,GACJ,MAAMsC,EAAIrwB,KAAKs4C,UAAUvqB,GAEzB,GAAS,IAALsC,GAAgB,MAALA,EACZ,MAAO,GAIV,MAAMyqB,EAAU96C,KAAK+B,GAAGof,MAAMhB,OAAOkQ,GACrC,OAAOrwB,KAAKy6C,eAAeK,EAI9B,CAEAC,YACG,IAAIC,EAAmB,GAOvB,OAJGh7C,KAAKoG,UAAYpG,KAAKoG,SAASqzC,WAC1Bz5C,KAAKoG,SAASqzC,WACd,IAIL,KAAS,EAuBT,QAEMuB,EAAmB,WAEtB,MArBH,KAAK,EAECA,EAAmB,WAEtB,MAEH,KAAK,EAECA,EAAmB,YAEtB,MAEH,KAAK,EAECA,EAAmB,YAU5B,OAAOA,CACV,CAEAP,eAAeQ,GACZ,MAAMxB,EAAaz5C,KAAK+6C,YAExB,OAAO/6C,KAAKk7C,aAAazB,EAAYwB,EACxC,CAmBAJ,YAAYl4C,GACT,OAAOA,EAAQ3C,KAAK+B,GAAGof,MAAMX,aAAa7d,EAAO,CAC9C2d,OAAQ,eACN,EAER,CAEA46B,aAAazB,EAAYwB,GACtB,OAAIA,GAAYA,EAASvmC,SAAiBumC,EAASvmC,WACvC,EACf,GAKHjV,EAAOC,QAAQy7C,MAAQ,+CCvZvB,MAAMC,EAAkB,EAAQ,OAO1B5B,EAAsB,CACzBn1C,IAAK,WAGLmwC,YAAa,6BAIbjpC,KAAM,UAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,cAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,YAKrBC,qBAAsB,CAAC,aAMpBtS,EAAgB,CACnB4Y,WAAY,EACZC,YAAa,EACbC,iBAAkB,MAGrB97C,EAAOC,QAAU,cAAkC07C,EAChDz7C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQu0C,EACzB,CAGA9uB,kBACG,OAAO8uB,CACV,CAEA9uB,uBACG,MAAM8wB,EAAc17C,MAAM2iC,gBAC1B,OAAOtuB,OAAOsnC,OAAOD,EAAa/Y,EACrC,CAgBAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASi1C,WAAa/1B,SAAStlB,KAAKoG,SAASi1C,YAClDr7C,KAAKoG,SAASk1C,YAAch2B,SAAStlB,KAAKoG,SAASk1C,YACtD,CAYA5Y,aAAa/8B,GACV,GAA+B,MAA3BA,EAAO3F,KAAK8G,YAAqB,OAIrC,IAAIozC,EAYJ,GAdAp6C,MAAM4iC,aAAa/8B,GAKfA,EAAO3F,KAAK8G,cACbozC,EAAal6C,KAAK+B,GAAGof,MAAMhB,OAAOxa,EAAO3F,KAAK8G,cAQhB,GAA7B9G,KAAKoG,SAASk1C,YAAkB,CACjC,MAAMI,EAAW,IAAIn7B,KAEH,MAAd25B,IAAoBA,EAAa,IAAI35B,MAEzC25B,EAAWyB,SAASD,EAASE,YAC7B1B,EAAW2B,WAAWH,EAASI,cAC/B5B,EAAW6B,WAAWL,EAASM,cAC/B9B,EAAW+B,gBAAgBP,EAASQ,kBACvC,MAEK,GAC2B,GAA7Bl8C,KAAKoG,SAASk1C,aACdt7C,KAAKoG,SAASm1C,iBACf,CACC,MAAMD,EAAc,IAAI/6B,KAAKvgB,KAAKoG,SAASm1C,kBAEzB,MAAdrB,IAAoBA,EAAa,IAAI35B,MAEzC25B,EAAWyB,SAASL,EAAYM,YAChC1B,EAAW2B,WAAWP,EAAYQ,cAClC5B,EAAW6B,WAAWT,EAAYU,cAClC9B,EAAW+B,gBAAgBX,EAAYY,kBAC1C,CAGkB,MAAdhC,IACDv0C,EAAO3F,KAAK8G,YAAcozC,EAAWz2B,cAC3C,CAEAs3B,YACG,MAAMM,EAAar7C,KAAKm8C,gBAIxB,OAFAn8C,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAEF,GAA5BpG,KAAKoG,SAASqzC,WACR4B,EAKH,GAFYv7C,MAAMi7C,eAEDM,GAC3B,CAEA/6B,OAAOyN,GACJ,MAAMquB,EAAiBp8C,KAAK+6C,YACtB1qB,EAAIrwB,KAAKs4C,UAAUvqB,GACnB+sB,EAAU96C,KAAK+B,GAAGof,MAAMhB,OAAOkQ,GAErC,MAAS,IAALA,GAAgB,MAALA,EACL,GAGH5sB,MAAM8c,KAAK87B,UAAUD,EAArB34C,CAAqCq3C,EAC/C,CAEAqB,gBAEG,OADAn8C,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAC1BpG,KAAKoG,SAASi1C,YACnB,KAAK,EACF,MAAO,YACV,KAAK,EACF,MAAO,SACV,QACG,MAAO,GAEhB,CAOAR,YAAYp6B,GACT,OAAOA,GAAMgD,iBAAmB,EACnC,GAKHhkB,EAAOC,QAAQy7C,MACZ,0ECnNH,MAAM7G,EAAU,EAAQ,OAOlBgI,EAAuB,CAC1Bj4C,IAAK,QAGLmwC,YAAa,kDAIbjpC,KAAM,WAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,QAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCtS,EAAgB,CACnBqH,QAAS,GACTyS,gBAAiB,GAGpB98C,EAAOC,QAAU,cAA+B40C,EAC7C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQq3C,EACzB,CAGA5xB,kBACG,OAAO4xB,CACV,CAEA5xB,uBACG,OAAO+X,CACV,CAMAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0jC,QAAUnkC,EAAOS,SAAS0jC,SAAW,EACtD,CAYApH,aAAa/8B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAAS0jC,UACfnkC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0jC,QAGjD,CAUAja,YAAYhmB,EAAMtC,GACf,GAAIsC,EAAK7J,KAAK8G,YAAa,CACxB,MAAM01C,EAAM,wJAEZ,IAAI75C,EAAQkH,EAAK7J,KAAK8G,YACtBnE,EAAQuY,OAAOvY,GAAOwV,cACjBqkC,EAAIn6B,KAAK1f,IACX4E,EAAUgW,SAASvd,KAAK8G,WAAY,gBAE1C,CACH,oBC/HH,MAAMwtC,EAAU,EAAQ,OAOlBmI,EAAsB,CACzBp4C,IAAK,OAGLmwC,YAAa,gCAIbjpC,KAAM,OAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,kBAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCtS,EAAgB,CACnBia,mBAAoB,EACpBC,SAAU,EACVC,SAAU,IAGbn9C,EAAOC,QAAU,cAA8B40C,EAC5C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQw3C,EACzB,CAGA/xB,kBACG,OAAO+xB,CACV,CAEA/xB,uBACG,OAAO+X,CACV,CAMAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASu2C,SAAWr3B,SAAStlB,KAAKoG,SAASu2C,UAChD38C,KAAKoG,SAASy2C,cAAgBv3B,SAAStlB,KAAKoG,SAASy2C,eACrD78C,KAAKoG,SAAS02C,cAAgBx3B,SAAStlB,KAAKoG,SAAS02C,eACrD98C,KAAKoG,SAASs2C,mBAAqBp3B,SAChCtlB,KAAKoG,SAASs2C,mBAEpB,CAcApE,UAAUvqB,GACP,MAAMwqB,EAAW,GAAGv4C,KAAKuvB,OAASvvB,KAAKiF,OAAOkC,QAAQnH,KAAK8G,aAE3D,IAAIgH,EAASigB,EAAQ/tB,KAAK8G,aAAeinB,EAAQwqB,IAAa,CAAC,EAC/D,GAAqB,iBAAVzqC,EACR,IACGA,EAAS+F,KAAK0D,MAAMzJ,EAGvB,CAFE,MAAO3F,GAET,CAGH,OAAO2F,CACV,CAcA40B,aAAa/8B,GACVA,EAAO3F,KAAK8G,YAAc,IAC7B,CAEAwZ,OAAOyN,GACJ,IAAIjgB,EAAS9N,KAAKs4C,UAAUvqB,GAC5B,GAAIjgB,EAAQ,CACT,GAAqB,iBAAVA,EACR,IACGA,EAAS+F,KAAK0D,MAAMzJ,EAGvB,CAFE,MAAO3F,GAET,CAIH,OAAO2F,GAASA,EAAOivC,UAAiB,EAC3C,CACG,MAAO,EAEb,CAQAC,aAAaC,GACV,MAAMC,EAAcp9C,MAAMk9C,aAAaC,GAQvC,MAJsC,MAAlCC,IAAcl9C,KAAK8G,oBACbo2C,EAAYl9C,KAAK8G,YAGpBo2C,CACV,oBC5KH,MAAM5I,EAAU,EAAQ,OAMlB6I,EAAyB,CAC5B94C,IAAK,UAGLmwC,YACG,qEAIHjpC,KAAM,iBAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,UAIV+0C,aAAetzC,IACZ,MAAMmmB,EAAYnmB,EAAMmmB,UACxB,OAAiB,MAAbA,GAGqB,cAAlBA,EAAU1nB,GAAmB,EAGvCswC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAtS,EAAgB,CACnB78B,MAAO,GACPs5B,WAAY,GACZnT,UAAW,GACXnqB,KAAM,MACNytB,MAAO,IAGV5vB,EAAOC,QAAU,cAAiC40C,EAC/C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQk4C,EACzB,CAGAzyB,kBACG,OAAOyyB,CACV,CAEAzyB,uBACG,OAAO+X,CACV,CAYAC,aAAa/8B,UAEHA,EAAO3F,KAAK8G,WACtB,CAWAwZ,OAAOyN,EAASqvB,GAAc,EAAOC,GAAY,GAC9C,MAAMtxB,EAAY/rB,KAAK+rB,UAEjBuxB,EAAYC,IAEf,GAAKxxB,GAA8B,aAAjBA,EAAU1nB,IAErB,CACJ,MAAMm5C,EAAgB,CAAC,EAEvB,OADAA,EAAczxB,EAAUjlB,YAAcy2C,EAC/BxxB,EAAUzL,OAAOk9B,EAC3B,CALG,OAAOD,CAKV,EAKH,GAAgC,MAA5BxvB,EAAQ/tB,KAAK8G,cAAwBs2C,IAAgBC,EAEtD,OAAOC,EAASvvB,EAAQ/tB,KAAK8G,aACzB,GACwB,MAA5BinB,EAAQ/tB,KAAK8G,cACZs2C,GACDC,EAEA,OAAOtvB,EAAQ/tB,KAAK8G,YAGvB,IAAKilB,EAAW,OAAO,EAEvB,MAAM0xB,EAAYz9C,KAAKy9C,YACvB,IAAKA,EAAW,OAAO,EAEvB,IAAI5zC,EACDkkB,EAAQ0vB,EAAUjtB,iBAClBzC,EAAQ0vB,EAAU32C,aAClB,GACEqG,MAAMC,QAAQvD,KAAOA,EAAO,CAACA,IAI/BA,GACAA,EAAK1D,QACLnG,KAAKoG,UACLpG,KAAKoG,SAASipB,OACdrvB,KAAKoG,SAASipB,MAAMlO,OACpBnhB,KAAKoG,SAASipB,MAAMlO,MAAMhb,SAE1BnG,KAAK09C,aAAa74C,SAAS7E,KAAKoG,SAASipB,OACzCxlB,EAAOA,EAAKf,QAAQsF,GAASpO,KAAK09C,aAAan4C,QAAQ6I,MAG1D,IAAIuvC,EAAa,GAGjB,OAAQ5xB,EAAU1nB,KACf,IAAK,YACFwF,EAAK5F,SAASosB,IACXstB,EAAWr5C,KAAKyyC,WAAWhrB,EAAUzL,OAAO+P,IAAM,GAAG,IAExD,MACH,IAAK,SACFstB,EAAa9zC,EAAKsE,KAAKkiB,GAAMA,EAAEtE,EAAUjlB,aAAe,IAI9D,IAAIgH,EAAS,EAGb,MAAM8vC,EAAc7xB,EAAU8xB,iBAG9B,OAAQ79C,KAAKoG,SAASxE,MACnB,IAAK,MACF,GAAI+7C,EAAWx3C,OAAS,EAAG,CAGxB,MAAM23C,EAAav3C,KAAKw3C,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAW15C,SAAS+R,IACjBgoC,GAAOhoC,EAAM8nC,GAAc,CAAC,IAG/BhwC,EAASkwC,EAAMF,CAClB,CACA,MAEH,IAAK,UACF,GAAIH,EAAWx3C,OAAS,EAAG,CAGxB,MAAM23C,EAAav3C,KAAKw3C,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAW15C,SAAS+R,IACjBgoC,GAAOhoC,EAAM8nC,GAAc,CAAC,IAI/BhwC,EAASkwC,EAAMF,EAAaH,EAAWx3C,MAC1C,CACA,MAEH,IAAK,MACF2H,EAASvH,KAAK03C,OAAON,IAAe,EACpC,MACH,IAAK,MACF7vC,EAASvH,KAAK23C,OAAOP,IAAe,EACpC,MACH,IAAK,QACF7vC,EAAS6vC,EAAWx3C,OAO1B,OAHA4nB,EAAQ/tB,KAAK8G,YAAcgH,EAGN,aAAjBie,EAAU1nB,IACJyJ,EAEAwvC,EAASxvC,EAEtB,CAEA2vC,YACG,OAAOz9C,KAAKiF,OAAO8I,UAAU/N,KAAKoG,SAASR,MAC9C,CAEImmB,gBACD,MAAMjU,EAAM9X,KAAK+B,GAAGgW,WAAW/X,KAAKoG,SAASnB,QAC7C,IAAK6S,EAAK,OAAO,KAGjB,OADcA,EAAI/J,UAAU/N,KAAKoG,SAAS2lB,YACvB,IAGtB,CAEI2xB,mBAUD,OATuB,MAAnB19C,KAAKm+C,aACNn+C,KAAKm+C,WAAan+C,KAAK+B,GAAG6xB,iBAAiB,GAAG5zB,KAAKY,oBAE/CZ,KAAK+rB,WAAa/rB,KAAK+rB,UAAU9mB,SAClCjF,KAAKm+C,WAAWtqB,WAAW7zB,KAAK+rB,UAAU9mB,OAAO8B,UACjD/G,KAAKm+C,WAAWt5C,SAAS7E,KAAKoG,SAASipB,SAItCrvB,KAAKm+C,UACf,oBCzRH,MAAM7J,EAAU,EAAQ,OAElB8J,EAAuB,CAC1B/5C,IAAK,QAGLmwC,YAAa,kCAIbjpC,KAAM,eAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,mBAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCtS,EAAgB,CACnB4b,SAAU,EACVC,WAAY,GACZC,UAAW,EACXC,YAAa,GACb9B,mBAAoB,EACpB+B,iBAAiB,EACjBC,gBAAiB,IAGpBj/C,EAAOC,QAAU,cAA+B40C,EAC7C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQm5C,EAuBzB,CAGA1zB,kBACG,OAAO0zB,CACV,CAEA1zB,uBACG,OAAO+X,CACV,CAMAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASi4C,SAAW/4B,SAAStlB,KAAKoG,SAASi4C,UAChDr+C,KAAKoG,SAASm4C,UAAYj5B,SAAStlB,KAAKoG,SAASm4C,WACjDv+C,KAAKoG,SAASk4C,WAAah5B,SAAStlB,KAAKoG,SAASk4C,YAClDt+C,KAAKoG,SAASo4C,YAAcl5B,SAAStlB,KAAKoG,SAASo4C,aACnDx+C,KAAKoG,SAASq4C,gBAAkBn5B,SAAStlB,KAAKoG,SAASq4C,iBACvDz+C,KAAKoG,SAASs2C,mBAAqBp3B,SAChCtlB,KAAKoG,SAASs2C,mBAEpB,CAUA7sB,YAAYhmB,EAAMtC,GACfzH,MAAM+vB,YAAYhmB,EAAMtC,EAC3B,oBCjIH,MAAM+sC,EAAU,EAAQ,OAElBqK,EAAsB,CACzBt6C,IAAK,OAGLmwC,YAAa,aAIbjpC,KAAM,OAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,OAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpBtS,EAAgB,CAAC,EAEvBhjC,EAAOC,QAAU,cAA8B40C,EAC5C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ05C,EACzB,CAGAj0B,kBACG,OAAOi0B,CACV,CAEAj0B,uBACG,OAAO+X,CACV,CAQAC,aAAa/8B,GAIb,oBChFH,MAAM2uC,EAAU,EAAQ,OAOlBsK,EAAsB,CACzBv6C,IAAK,OAGLmwC,YACG,6EAIHjpC,KAAM,UAINkpC,aAAe7uC,IACRA,EAAMQ,SAASy4C,WAYtBnK,WAAa9uC,IACNA,EAAMQ,SAASy4C,WAWtB16C,SAAU,cAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,OACA,UACA,YAMH+J,UAAYl5C,KACLA,EAAMQ,SAAS04C,WAQnBrc,EAAgB,CACnBoc,WAAY,EAIZC,UAAW,EAIX38C,QAAS,GAST2nC,QAAS,OACTiV,gBAAiB,IAGpBt/C,EAAOC,QAAU,cAA8B40C,EAC5C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQ25C,GAEtB5+C,KAAKg/C,iBAAmB,EAI3B,CAGAt0B,kBACG,OAAOk0B,CACV,CAEAl0B,uBACG,OAAO+X,CACV,CAYAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGb3F,KAAKoG,SAASjE,SAAWnC,KAAKoG,SAASjE,QAAQgE,OAAS,GACzDnG,KAAKoG,SAASjE,QAAQ8B,SAASg7C,IAC5Bj/C,KAAKo8B,UAAU6iB,EAAKA,EAAK,CAAC,QAAQ,IAIxCj/C,KAAKoG,SAASy4C,WAAav5B,SAAStlB,KAAKoG,SAASy4C,YAClD7+C,KAAKoG,SAAS04C,UAAYx5B,SAAStlB,KAAKoG,SAAS04C,UACpD,CAaAh5C,QACG,MAAMgS,EAAMhY,MAAMgG,QAOlB,OAJAgS,EAAI1R,SAASjE,QAAQ8B,SAASg7C,IAC3Bj/C,KAAKw8B,YAAYyiB,EAAKA,EAAK,CAAC,QAAQ,IAGhCnnC,CACV,CAYA4qB,aAAa/8B,GAEV,GAAgC,GAA5B3F,KAAKoG,SAASy4C,WAAoB,CACnC,IAAIK,EAAc,GAClBl/C,KAAKoG,SAAS24C,gBAAgB96C,SAASwd,IACpCzhB,KAAKoG,SAASjE,QAAQ8B,SAASg7C,IACxBA,EAAIr+C,IAAM6gB,EAAIpT,MACf6wC,EAAY56C,KAAK26C,EACpB,GACD,IAELt5C,EAAO3F,KAAK8G,YAAco4C,GAAe,EAC5C,MAESl/C,KAAKoG,SAAS0jC,SAAoC,IAAzB9pC,KAAKoG,SAAS0jC,UAC7CnkC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0jC,QAE9C,CAUAja,YAAYhmB,EAAMtC,GACfzH,MAAM+vB,YAAYhmB,EAAMtC,EAC3B,CAOApF,UACG,OAAOnC,KAAKoG,SAASjE,QAAQgM,KAAK8wC,IACxB,CACJr+C,GAAIq+C,EAAIr+C,GACRyN,KAAM4wC,EAAI5wC,KACV8wC,IAAKF,EAAIE,IAAMF,EAAIE,IAAM,GACzBh6B,aAAc85B,EAAI95B,aAAe85B,EAAI95B,aAAe,MAG7D,CAEA7E,OAAOyN,EAAS5rB,EAAU,CAAC,GACxB,IAAI6T,EAAMhW,KAAKs4C,UAAUvqB,IAAY,GAErC,GAAkB,iBAAP/X,EACR,IACGA,EAAMnC,KAAK0D,MAAMvB,EAGpB,CAFE,MAAO3L,GAET,CAqBH,OAjBK8C,MAAMC,QAAQ4I,KAAMA,EAAM,CAACA,IAEZhW,KAAKoG,SAASjE,QAC9B2G,QAAQm2C,GAAQjpC,EAAIlN,QAAQsK,IAAOA,EAAExS,IAAMwS,IAAM6rC,EAAIr+C,KAAIuF,OAAS,IAClEgI,KAAK8wC,IACH,IAAI5wC,EAAO4wC,EAAI5wC,KACf,MAAM8B,EAAehO,EAAQgO,cAAgB,KAGvCivC,GAAWH,EAAI95B,cAAgB,IAAIrc,QACrCgd,GAAMA,EAAEwW,eAAiBnsB,IAC3B,GAGF,OAFIivC,IAAS/wC,EAAO+wC,EAAQ/wC,MAErBA,CAAI,IAGEC,KAAK,KAC3B,oBCpQH,MAAMgmC,EAAU,EAAQ,OASlB+K,EAA0B,CAC7Bh7C,IAAK,WAELmwC,YAAa,yBAIbjpC,KAAM,cAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,YAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAAY,aAAc,QAK/CC,qBAAsB,CAAC,OAAQ,aAAc,YAK7CuK,gBA1DqB,KAgElB7c,EAAgB,CACnBqH,QAAS,GACTyV,oBAAqB,GAGxB9/C,EAAOC,QAAU,cAA8B40C,EAC5C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQo6C,EAUzB,CAGA30B,kBACG,OAAO20B,CACV,CAEA30B,uBACG,OAAO+X,CACV,CAYAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0jC,QAAUnkC,EAAOS,SAAS0jC,SAAW,GAGnD9pC,KAAKoG,SAASm5C,oBACX55C,EAAOS,SAASm5C,oBAAsB,IACtC9c,EAAc8c,oBAGjBv/C,KAAKoG,SAASm5C,oBAAsBj6B,SACjCtlB,KAAKoG,SAASm5C,qBAGbv/C,KAAKoG,SAASm5C,oBACXv/C,KAAKiF,QACNjF,KAAKiF,OAAOm3B,UAAUp8B,KAAKoG,SAAUpG,KAAKoG,SAAU,CAAC,YACpDpG,KAAKoG,SAAS0jC,QAAUnkC,EAAOS,SAAS0jC,SAAW,EAC7D,CAaAhkC,QACG,MAAMgS,EAAMhY,MAAMgG,QAOlB,OALI9F,KAAKoG,SAASm5C,sBACXv/C,KAAKiF,OACNjF,KAAKiF,OAAOu3B,YAAY1kB,EAAI1R,SAAU0R,EAAI1R,SAAU,CAAC,YACnD0R,EAAI1R,SAAS0jC,QAAU9pC,KAAKoG,SAAS0jC,SAEtChyB,CACV,CAOI2pB,qBACD,OAA4C,GAArCzhC,KAAKoG,SAASm5C,mBACxB,CAQA7c,aAAa/8B,GACqB,MAA3BA,EAAO3F,KAAK8G,cACuB,iBAAzB9G,KAAKoG,SAAS0jC,QACtBnkC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0jC,QAExCnkC,EAAO3F,KAAK8G,YAAc,GAGnC,CAUA+oB,YAAYhmB,EAAMtC,GACfzH,MAAM+vB,YAAYhmB,EAAMtC,GAGrBsC,GACAA,EAAK7J,KAAK8G,aACV+C,EAAK7J,KAAK8G,YAAYX,OAxLP,KA0LfoB,EAAUgW,SACPvd,KAAK8G,WACL,4CAGT,oBCjMH,MAAMwtC,EAAU,EAAQ,OAElBkL,EAAwB,CAC3Bn7C,IAAK,SAGLmwC,YAAa,2BAIbjpC,KAAM,UAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,SAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAtS,EAAgB,CAEnBqH,QAAS,GACT2V,WAAY,OACZC,aAAc,OACdC,kBAAmB,EACnBC,aAAc,OACdC,cAAe,OACfC,WAAY,EACZC,gBAAiB,GACjBC,gBAAiB,IAGpB,IAAIjgD,EAAI,KAERN,EAAOC,QAAU,cAAgC40C,EAC9C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQu6C,GAkBjBz/C,IACFA,EAAIC,KAAK+B,GAAG9B,QAElB,CAGAyqB,kBACG,OAAO80B,CACV,CAEA90B,uBACG,OAAO+X,CACV,CAEA/X,kBAAkBu1B,GAEf,OADIA,IAAOlgD,IAAGA,EAAIkgD,GACX,CACJ,CAAEr/C,GAAI,OAAQ+B,MAAO5C,EAAE,SACvB,CACGa,GAAI,SACJ+B,MAAO5C,EAAE,KACTs1C,KAAM,IACN10C,SAAU,UAEb,CACGC,GAAI,MACJ+B,MAAO5C,EAAE,KACTs1C,KAAM,IACN10C,SAAU,UAEb,CACGC,GAAI,QACJ+B,MAAO5C,EAAE,KACTs1C,KAAM,IACN10C,SAAU,UAEb,CACGC,GAAI,aACJ+B,MAAO5C,EAAE,cACTs1C,KAAM,IACN10C,SAAU,UAEb,CACGC,GAAI,YACJ+B,MAAO5C,EAAE,aACTs1C,KAAM,IACN10C,SAAU,WAEb,CACGC,GAAI,UACJ+B,MAAO5C,EAAE,KACTs1C,KAAM,IACN10C,SAAU,WAGnB,CAEA+pB,uBACG,MAAO,CACJ,CAAE9pB,GAAI,OAAQ+B,MAAO5C,EAAE,SACvB,CACGa,GAAI,QACJ+B,MAAO5C,EAAE,SACTs1C,KAAM,KAET,CACGz0C,GAAI,SACJ+B,MAAO5C,EAAE,UACTs1C,KAAM,KAET,CACGz0C,GAAI,QACJ+B,MAAO5C,EAAE,SACTs1C,KAAM,KAGf,CAMApvC,WAAWN,GACR7F,MAAMmG,WAAWN,GAIjB3F,KAAKoG,SAAS05C,WAAax6B,SAAStlB,KAAKoG,SAAS05C,WACrD,CAYApd,aAAa/8B,GAEmB,IAAzB3F,KAAKoG,SAAS0jC,UACfnkC,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0jC,QAE9C,CAUAja,YAAYhmB,EAAMtC,GAKf,GAJAzH,MAAM+vB,YAAYhmB,EAAMtC,GAIK,MAAzBsC,EAAK7J,KAAK8G,aAAgD,IAAzB+C,EAAK7J,KAAK8G,YAAmB,CAC/D,IAAInE,EAAQkH,EAAK7J,KAAK8G,YAGtB,GAAkC,QAA9B9G,KAAKoG,SAASs5C,aACf/8C,EAAQ2iB,SAAS3iB,OACb,CACJ,MAAMu9C,EAAS56B,SAAStlB,KAAKoG,SAASu5C,oBAAsB,EAC5Dh9C,EAAQo0C,WAAWA,WAAWp0C,GAAOg1C,QAAQuI,GAChD,CAUA,GARmBC,EAGJx9C,GAFJipC,OAAOwU,MAAMrJ,WAAWoJ,KAAOvU,OAAOyO,SAAS8F,IAGvD54C,EAAUgW,SAASvd,KAAK8G,WAAY/G,EAAE,mBAKV,GAA5BC,KAAKoG,SAAS05C,YACmB,MAAjC9/C,KAAKoG,SAAS25C,iBACd//C,KAAKoG,SAAS25C,gBAAkBp9C,EACjC,CACC,MAAM09C,EAAatgD,EAAE,6BAA8B,CAChDC,KAAKoG,SAAS25C,kBAGjBx4C,EAAUgW,SAASvd,KAAK8G,WAAYu5C,EACvC,CAGA,GAC+B,GAA5BrgD,KAAKoG,SAAS05C,YACmB,MAAjC9/C,KAAKoG,SAAS45C,iBACdhgD,KAAKoG,SAAS45C,gBAAkBr9C,EACjC,CACC,MAAM09C,EAAatgD,EAAE,0BAA2B,CAC7CC,KAAKoG,SAAS45C,kBAGjBz4C,EAAUgW,SAASvd,KAAK8G,WAAYu5C,EACvC,CACH,CAhCqB,IAACF,CAiCzB,CAEA7/B,OAAOyN,GACJ,GAC+B,MAA5BA,EAAQ/tB,KAAK8G,aACgB,GAA5BinB,EAAQ/tB,KAAK8G,aAAgD,IAA5BinB,EAAQ/tB,KAAK8G,YAE/C,MAAO,GAEV,IAAI+C,EAAOkkB,EAAQ/tB,KAAK8G,aAAe,EAEpB,iBAAR+C,IACRA,EAAOA,EAAKmJ,QAAQ,KAAM,KAIzBotC,MAAMrJ,WAAWltC,MAAQA,EAAO,GAEpC,MAAMy2C,EAAatgD,KAAKL,YACpB4gD,aACAz3C,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAASq5C,aAAY,GACpDtI,EACgC,QAAnCn3C,KAAKoG,SAASu5C,kBACTr6B,SAAStlB,KAAKoG,SAASu5C,mBACvB,EAER,IAAIa,EAAgBxgD,KAAKL,YACrBy1C,gBACAtsC,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAASy5C,gBAAe,GACzD3I,EAAcl3C,KAAKL,YACnBy1C,gBACAtsC,QAAQsF,GAASA,EAAKxN,IAAMZ,KAAKoG,SAASs5C,eAAc,GACxD/kC,EAAS,GACT8lC,EAAU,GAEd,GAAIH,GAAcA,EAAWjL,KAC1B,OAAQiL,EAAW3/C,UAChB,IAAK,SACFga,EAAS2lC,EAAWjL,KACpB,MACH,IAAK,UACFoL,EAAUH,EAAWjL,KAS9B,GAJA6B,EAAcA,EAAY7B,MAAQ,GAClCmL,EAAgBA,EAAcnL,MAAQ,GAGJ,aAA9Br1C,KAAKoG,SAASw5C,aAA6B,CAC5C,MAAMc,EAAQn6C,KAAKw3C,IAAI,GAAI5G,GAC3BttC,EAAOtD,KAAKC,MAAMqD,EAAO62C,GAASA,CACrC,CASA,MAAO,GAAG/lC,KAPK3a,KAAK2gD,aAAa92C,EAAM,CACpC+2C,eAAgBJ,EAChBK,UAAW,EACXC,iBAAkB5J,EAClB0G,YAAazG,OAGcsJ,GACjC,CAEAE,aAAa92C,EAAM1H,EAAU,CAAC,GAC3B,GAAa,KAAT0H,GAAuB,MAARA,EAAc,OAAOA,EAGxC,MAAMk3C,GADNl3C,EAAOktC,WAAWltC,IACU,EAAI,IAAM,GAGhCm3C,GAFNn3C,EAAOtD,KAAK06C,IAAIp3C,IAEK6K,WACfwsC,EAAaF,EAAQ/4B,MAAM,KAAK,GAChCk5B,EAAaH,EAAQ/4B,MAAM,KAAK,GAEtC,IAAIm5B,EAAe,GAGnB,GAAIj/C,EAAQy+C,eAAgB,CACzB,MAAMS,EAAO,EACb,IAAIhuC,EAAI6tC,EAAW/6C,OAEnB,GACGkN,GAAKguC,EAKLD,EAAe,GAHZ/tC,EAAI,EACC6tC,EAAWI,OAAOjuC,EAAGguC,GACrBH,EAAWI,OAAO,EAAGD,EAAOhuC,KAEjC+tC,EAAej/C,EAAQy+C,eAAiBQ,EAAe,WAEpD/tC,EAAI,EAChB,MACG+tC,EAAeF,EAGlB,IAAIpzC,EAAS,GAgBb,OAZGA,EADC3L,EAAQ2+C,kBAAoB3+C,EAAQy7C,YAC5B,GAAGmD,IAAeK,IACxBD,EACKh/C,EAAQ2+C,iBACRK,EAAWzsC,WAAW4sC,OAAO,EAAGn/C,EAAQy7C,aACxC,KAKC,GAAGmD,IAAeK,IAGvBtzC,CACV,CAEA+vC,iBACG,MAAuC,QAAnC79C,KAAKoG,SAASu5C,kBACRr6B,SAAStlB,KAAKoG,SAASu5C,mBAEvB,CAEb,oBCrYH,MAAMrL,EAAU,EAAQ,OAIlBiN,EAAwB,CAC3Bl9C,IAAK,SAGLmwC,YAAa,qBAIbjpC,KAAM,OAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,mBAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1CuK,gBAtDqB,KA2DlB7c,EAAgB,CACnBqH,QAAS,GACTyV,oBAAqB,GAGxB9/C,EAAOC,QAAU,cAAgC40C,EAC9C30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQs8C,EAUzB,CAGA72B,kBACG,OAAO62B,CACV,CAEA72B,uBACG,OAAO+X,CACV,CAYAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS0jC,QAAUnkC,EAAOS,SAAS0jC,SAAWrH,EAAcqH,QACjE9pC,KAAKoG,SAASm5C,oBACX55C,EAAOS,SAASm5C,oBAAsB,IACtC9c,EAAc8c,oBAGjBv/C,KAAKoG,SAASm5C,oBAAsBj6B,SACjCtlB,KAAKoG,SAASm5C,qBAGbv/C,KAAKoG,SAASm5C,oBACfv/C,KAAKo8B,UAAUp8B,KAAKoG,SAAUpG,KAAKoG,SAAU,CAAC,YAC1CpG,KAAKoG,SAAS0jC,QAAUnkC,EAAOS,SAAS0jC,SAAW,EAC7D,CAaAhkC,QACG,MAAMgS,EAAMhY,MAAMgG,QAMlB,OAJI9F,KAAKoG,SAASm5C,oBACfv/C,KAAKw8B,YAAY1kB,EAAI1R,SAAU0R,EAAI1R,SAAU,CAAC,YAC1C0R,EAAI1R,SAAS0jC,QAAU9pC,KAAKoG,SAAS0jC,QAErChyB,CACV,CAYA4qB,aAAa/8B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAAS0jC,UACX9pC,KAAKoG,SAAS0jC,QAAQz8B,QAAQ,WAAa,EAC5C1H,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG8N,OAElClK,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0jC,QAIpD,CAUAja,YAAYhmB,EAAMtC,GACfzH,MAAM+vB,YAAYhmB,EAAMtC,GAExB,MAAMxH,EAAIC,KAAK+B,GAAG9B,QAGf4J,GACAA,EAAK7J,KAAK8G,aACV+C,EAAK7J,KAAK8G,YAAYX,OAjLP,KAmLfoB,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,2CAA4C,CArLlC,MAwLrB,CAOI0hC,qBACD,OAA4C,GAArCzhC,KAAKoG,SAASm5C,mBACxB,kECnMH,MAAMjL,QAAU,oBAAQ,OAExB,SAASv0C,EAAEsE,EAAKwO,GAEb,OAAOA,CACV,CAEA,MAAM2uC,2BAA6B,CAChCn9C,IAAK,cAGLmwC,YAAa,eAIbjpC,KAAM,WAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,eAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1CtS,cAAgB,CACnBgf,YAAa,IAoBhB,SAASC,kBAAkBz8C,OAAQ08C,cAAe5zB,SAC/C,IAAK4zB,cAAe,OAEpB,MAAMC,YAAc,aACdC,oBAAsBF,cAAcre,MAAMse,aA8BhD,OA7BAC,oBAAoB59C,SAASw1B,UAC1B,MAAM3yB,WAAa2yB,QAAQzmB,QAAQ,SAAU,IAC7C/N,OAAO8B,SAAS9C,SAAS2B,QACtB,GAAIA,MAAMkB,YAAcA,WACrB,GAAiB,aAAblB,MAAMvB,IAAoB,CAE3B,MAAMy9C,EAAel8C,MAAM0a,OAAOyN,UAAY,EAC9C4zB,cAAgBA,cAAc3uC,QAAQymB,QAASqoB,EAClD,MAAO,GAAiB,aAAbl8C,MAAMvB,IAAoB,CAElC,MAAMkzC,OAAS,IAAI3xC,MAAM0a,OAAOyN,UAAY,KAC5C4zB,cAAgBA,cAAc3uC,QAAQymB,QAASie,KAAKH,QACvD,MACGoK,cADqB,QAAb/7C,MAAMvB,IACEs9C,cAAc3uC,QAC3BymB,QACA1L,QAAQjnB,YACHlB,MAAMi1C,YAAY9sB,QAAQjnB,aAC1B,IAGQ66C,cAAc3uC,QAC3BymB,QACA1L,QAAQjnB,YAAclB,MAAM0a,OAAOyN,SAAW,GAGvD,GACD,IAGE4zB,aACV,CASA,SAASI,yBAAyBhgD,EAAI4/C,GACnC,MACMK,EAAwBL,EAAcre,MADtB,gBAEtB,GAAI0e,EAAuB,CACxB,MAAMC,EAAcC,qBACpBF,EAAsB/9C,SAASw1B,IAC5B,MAAM0oB,EAAgB1oB,EAAQxR,MAAM,SAC9Bm6B,EACHD,EAAch8C,OAAS,GAAyB,IAApBg8C,EAAc,GACvCE,EAAeF,EAAc,GAC7BG,EAAmBH,EAAc,GAAGl6B,MAAM,KAChD,IAAIs6B,GAAU,EACd,IAAK,IAAIlvC,EAAI,EAAGA,EAAI4uC,EAAY97C,OAAQkN,IAAK,CAC1C,IAAImvC,EAAmB/oB,EACvB,GAAI4oB,GAAgBJ,EAAY5uC,GAAGzS,GAAI,CACpC,GAAI0hD,EAAiBn8C,QAAU87C,EAAY5uC,GAAGovC,eAAgB,CAC3D,OAAQJ,GACL,IAAK,OACFG,EAAmBE,QAChBJ,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,QACFE,EAAmBG,SAChBL,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,MACFE,EAAmBI,OAChBN,EAAiB,GACjBA,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,OACFE,EAAmBK,QAAQP,EAAiB,IAC5C,MACH,IAAK,WACFE,EAAmBM,YAAYR,EAAiB,IAChD,MACH,IAAK,YACFE,EAAmBO,aAAaT,EAAiB,IACjD,MACH,IAAK,SACFE,EAAmBQ,UAAUV,EAAiB,IAC9C,MACH,IAAK,eACFE,EAAmBS,iBAChBX,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,eACFV,EAAmBW,gBAChBb,EAAiB,GACjBA,EAAiB,GAAGY,YAEvB,MACH,IAAK,UACFV,EAAmBY,WAChBd,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,QACFV,EAAmBa,SAASf,EAAiB,IAC7C,MACH,IAAK,QACFE,EAAmBc,SAAShB,EAAiB,IAC7C,MACH,IAAK,aACFE,EAAmBe,cAAcjB,EAAiB,IAClD,MACH,IAAK,SACFE,EAAmBgB,UAAUlB,EAAiB,IAC9C,MACH,IAAK,gBACFE,EAAmBiB,iBAChBnB,EAAiB,IAEpB,MACH,IAAK,uBACEF,IACD3oB,GAAoB,KAEvB+oB,EAAmBkB,qBAChB3hD,EACAugD,EAAiB,IAEpB,MACH,IAAK,yBACEF,IACD3oB,GAAoB,KAEvB+oB,EAAmBmB,uBAChB5hD,EACAugD,EAAiB,IAEpB,MACH,IAAK,aACFE,EAAmBoB,cAChBtB,EAAiB,GACjBA,EAAiB,GAAGY,YAW7B,OALAX,GAAU,OACVZ,EAAgBA,EAAc3uC,QAC3BymB,EACA+oB,GAGN,CACGA,EAAmBH,EAAe,kBAClCV,EAAgBA,EAAc3uC,QAC3BymB,EACA+oB,EAGT,CACH,IAEN,CACA,OAAOb,CACV,CAEA,SAASO,qBA0GN,MAzGqB,CAClB,CACGthD,GAAI,OACJ+B,MAAO,yBACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,QACJ+B,MAAO,0BACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,MACJ+B,MAAO,2BACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,OACJ+B,MAAO,sBACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,WACJ+B,MAAO,0BACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,YACJ+B,MAAO,2BACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,SACJ+B,MAAO,wBACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,eACJ+B,MAAO,kDACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,eACJ+B,MAAO,mCACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,UACJ+B,MAAO,sDACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,QACJ+B,MAAO,uBACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,QACJ+B,MAAO,uBACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,aACJ+B,MAAO,4BACPf,KAAM,WACN6gD,eAAgB,GAEnB,CAAE7hD,GAAI,SAAU+B,MAAO,YAAaf,KAAM,WAAY6gD,eAAgB,GACtE,CACG7hD,GAAI,gBACJ+B,MAAO,2CACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,uBACJ+B,MAAO,sCACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,yBACJ+B,MAAO,wCACPf,KAAM,WACN6gD,eAAgB,GAEnB,CACG7hD,GAAI,aACJ+B,MAAO,2CACPf,KAAM,WACN6gD,eAAgB,GAIzB,CAEA,SAASC,QAAQmB,EAAQC,GACtB,OAAOD,EAAOxsB,UAAU,EAAG/R,SAASw+B,GACvC,CAEA,SAASnB,SAASkB,EAAQE,GACvB,MAAMC,EAAaC,cAAcJ,GAAQxsB,UAAU,EAAG/R,SAASy+B,IAC/D,OAAOE,cAAcD,EACxB,CAEA,SAASC,cAAcJ,GACpB,OAAOA,EAAO57B,MAAM,KAAKi8B,UAAU51C,KAAK,IAC3C,CAEA,SAASs0C,OAAOiB,EAAQM,EAAeh+C,GACpC,OAAI09C,EAAO19C,OAASg+C,EAAsB,qBACnCN,EAAOxsB,UACX/R,SAAS6+B,GACT7+B,SAAS6+B,GAAiB7+B,SAASnf,GAEzC,CAEA,SAAS08C,QAAQgB,GACd,OAAOA,EAAO1gB,MACjB,CAEA,SAAS2f,YAAYe,GAClB,OAAOA,EAAOX,UACjB,CAEA,SAASH,aAAac,GACnB,OAAOA,EAAOO,WACjB,CAEA,SAASpB,UAAUa,GAChB,OAAOA,EAAO19C,MACjB,CAEA,SAAS88C,iBAAiBY,EAAQQ,EAAQC,GACvC,OAAOT,EAAO7wC,QAAQqxC,EAAQC,EACjC,CAEA,SAASnB,gBAAgBU,EAAQQ,GAC9B,MAAME,EAAgBV,EAAOvgB,MAAM+gB,GACnC,OAAIl3C,MAAMC,QAAQm3C,GACRA,EAAc,GAEjBA,CACV,CAEA,SAASnB,WAAWS,EAAQW,EAAaC,GACtC,OAAOZ,EAAO7wC,QAAQwxC,EAAaC,EACtC,CAEA,SAASpB,SAASQ,GACf,OAAOA,EAAO1rC,aACjB,CAEA,SAASmrC,SAASO,GACf,OAAOA,EAAOa,aACjB,CAEA,SAASnB,cAAcM,GACpB,OAAOA,EACH1rC,cACA8P,MAAM,KACN9Z,KAAKvB,GAAMA,EAAE+3C,OAAO,GAAGD,cAAgB93C,EAAEyqB,UAAU,KACnD/oB,KAAK,IACZ,CAEA,SAASk1C,UAAUvF,GAChB,OAAO13C,KAAKC,MAAMD,KAAKE,UAAYw3C,EAAM,GAC5C,CAEA,SAASwF,iBAAiB3iC,GACvB,MAAM+iC,EAAS/iC,EAAOqiB,KAAK,KAAKzuB,WAEhC,IAAIkwC,EACDC,EACAC,EACA5yB,EACA6yB,EACAC,EACAC,EACAC,EACAC,EACA9xC,EACA+xC,EACAC,EAKH,GAAyB,IAArB//B,SAASu+B,GACV,MAAO,OAuEV,IAnEAe,EAAQ,CACL,GACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,UACA,UACA,YACA,WACA,YAIHC,EAAO,CACJ,GACA,GACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,UAIHC,EAAS,CACN,GACA,WACA,UACA,UACA,WACA,cACA,cACA,aACA,aACA,YACA,YACA,YACA,cACA,eACA,eACA,sBACA,gBACA,eACA,mBACA,gBACA,iBACA,eACA,cAIH5yB,EAAQ2xB,EAAO19C,OACf6+C,EAAS,GACF9yB,EAAQ,GACZ6yB,EAAM7yB,EACN8yB,EAAO1gD,KAAKu/C,EAAO3wC,MAAOgf,EAAQ3rB,KAAK03C,IAAI,EAAG/rB,EAAQ,GAAK6yB,IAK9D,GADAE,EAAYD,EAAO7+C,OACf8+C,EAAYH,EAAO3+C,OACpB,MAAO,GAKV,IADAk/C,EAAQ,GACHhyC,EAAI,EAAGA,EAAI4xC,EAAW5xC,IACxB6xC,EAAQ5/B,SAAS0/B,EAAO3xC,IAEpB6xC,IAEDC,EAAOH,EAAO3xC,GAAG4U,MAAM,IAAIi8B,UAAU/1C,IAAI4oC,YAGzB,IAAZoO,EAAK,KACNA,EAAK,IAAM,KAITC,EAAON,EAAOzxC,KAChBgyC,EAAM/gD,KAAK8gD,IAITA,EAAOR,EAAMO,EAAK,MACpBE,EAAM/gD,KAAK8gD,IAITA,EAAOP,EAAKM,EAAK,MACnBE,EAAM/gD,KAAK8gD,IAIVD,EAAK,IAAMA,EAAK,MAEbA,EAAK,KAAQ9xC,GAAK4xC,IACnBI,EAAM/gD,KAvHN,KA4HD8gD,EAAOR,EAAMO,EAAK,MACpBE,EAAM/gD,KAAK8gD,EAAO,aAK3B,OAAOC,EAAMnB,UAAU51C,KAAK,IAC/B,CAEA,SAASo1C,qBAAqB3hD,EAAI0e,GAK/B,OAAO1e,EAAGof,MAAMX,aAAaC,EAAM,CAChCH,OAAQ,OACRK,WAAY5e,EAAG6Q,QAAQ1C,YAE7B,CAEA,SAASyzC,uBAAuB5hD,EAAI0e,GAKjC,OAAO1e,EAAGof,MAAMX,aAAaC,EAAM,CAChCH,OAAQ,OACRK,WAAY5e,EAAG6Q,QAAQ1C,YAE7B,CAEA,SAAS0zC,cAAcnjC,EAAMH,GAE1B,OADW,IAAIC,KAAKE,GACV/L,SAAS4L,EACtB,CAEA7gB,OAAOC,QAAU,cAAqC40C,QACnD30C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQu8C,2BAazB,CAGA92B,kBACG,OAAO82B,0BACV,CAEA92B,uBACG,OAAO+X,aACV,CAEA/X,4BACG,OAAOw3B,oBACV,CAYAxf,aAAa/8B,GAELA,EAAO3F,KAAK8G,WAIpB,CAUA+oB,YAAYhmB,EAAMtC,GAKf,OAJYzH,MAAMyF,SAKrB,CAOIk8B,qBAED,OAAO,CACV,CAEAnhB,OAAOyN,GACJ,IACG,IAAK/tB,KAAKoG,SAASq7C,YAAa,MAAO,GAEvC,IAAI6D,EAAgBtlD,KAAKoG,SAASq7C,YAQlC,OALA6D,EAAgB5D,kBAAkB1hD,KAAKiF,OAAQqgD,EAAev3B,GAG9Du3B,EAAgBvD,yBAAyB/hD,KAAK+B,GAAIujD,GAE3CA,CAGV,CAFE,MAAOn9C,GACN,MAAO,EACV,CACH,oBClsBH,MAAMo9C,EAAqB,EAAQ,OAO7BC,EAAsB,CACzBnhD,IAAK,OAGLmwC,YACG,2GAIHjpC,KAAM,UAINkpC,cAAc,EAOdC,YAAY,EAMZvwC,SAAU,YAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAM1CtS,EAAgB,CACnBtgC,QAAS,IAGZ1C,EAAOC,QAAU,cAA8B6lD,EAC5C5lD,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQugD,EACzB,CAGA96B,kBACG,OAAO86B,CACV,CAEA96B,uBACG,OAAO+X,CACV,CAYAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGb3F,KAAKoG,SAASjE,SAAWnC,KAAKoG,SAASjE,QAAQgE,OAAS,GACzDnG,KAAKoG,SAASjE,QAAQ8B,SAASg7C,IAC5Bj/C,KAAKo8B,UAAU6iB,EAAKA,EAAK,CAAC,QAAQ,GAG3C,CAaAn5C,QACG,MAAMgS,EAAMhY,MAAMgG,QASlB,OANIgS,EAAI1R,SAASjE,SAAW2V,EAAI1R,SAASjE,QAAQgE,OAAS,GACvD2R,EAAI1R,SAASjE,QAAQ8B,SAASg7C,IAC3Bj/C,KAAKw8B,YAAYyiB,EAAKA,EAAK,CAAC,QAAQ,IAInCnnC,CACV,CAYA4qB,aAAa/8B,GAAS,CAUtBkqB,YAAYhmB,EAAMtC,GACfzH,MAAM+vB,YAAYhmB,EAAMtC,EAC3B,oBClJH,MAAMk+C,EAAiB,EAAQ,OAOzBC,EAAsB,CACzBrhD,IAAK,OAGLmwC,YAAa,yBAIbjpC,KAAM,SAINkpC,cAAc,EAOdC,WAAa9uC,IACNA,EAAMQ,SAASy4C,WAWtB16C,SAAU,OAIVwwC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1C4Q,kBAAmB,wCAMhBljB,EAAgB,CACnBmjB,SAAU,EACV/G,WAAY,EACZgH,cAAe,EACfC,mBAAoB,EACpBC,eAAgB,GAGnBtmD,EAAOC,QAAU,cAA8B+lD,EAC5C9lD,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAAQygD,EACzB,CAGAh7B,kBACG,OAAOg7B,CACV,CAEAh7B,uBACG,OAAO+X,CACV,CAMAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASw/C,SAAWtgC,SAAStlB,KAAKoG,SAASw/C,UAChD5lD,KAAKoG,SAASy4C,WAAav5B,SAAStlB,KAAKoG,SAASy4C,YAClD7+C,KAAKoG,SAASy/C,cAAgBvgC,SAAStlB,KAAKoG,SAASy/C,eACrD7lD,KAAKoG,SAAS0/C,mBAAqBxgC,SAChCtlB,KAAKoG,SAAS0/C,oBAEjB9lD,KAAKoG,SAAS2/C,eAAiBzgC,SAAStlB,KAAKoG,SAAS2/C,eACzD,CAMAzlC,OAAOyN,GACJ,IAAI/X,EAAMhW,KAAKs4C,UAAUvqB,IAAY,GAKrC,OAHI/X,IAAQ7I,MAAMC,QAAQ4I,KAAMA,EAAM,CAACA,IAClCA,IAAKA,EAAM,IAETA,EAAI7H,KAAKiF,GAAMA,EAAExC,UAAYwC,IAAG9E,KAAK,KAC/C,oBCzHH,MAAM4nB,EAAuB,EAAQ,OAE/B8vB,EAAwB,CAC3BpkD,KAAM,gBASTnC,EAAOC,QAAU,cAAgCw2B,EAC9Cv2B,YAAYqjB,EAAYiE,EAASllB,GAC9BjC,MAAMkjB,EAAYiE,EAASllB,EAK9B,CAEA2oB,kBACG,OAAOs7B,CACV,CAEA//C,WAAW+c,GASRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAK4B,KAAOohB,EAAWphB,MAAQokD,EAAsBpkD,IACxD,oBCrCH,MAAMmhB,EAAY,EAAQ,OAEpBkjC,EAA+B,CAClCrkD,KAAM,uBAOTnC,EAAOC,QAAU,cAAuCqjB,EACrDpjB,YAAYqjB,EAAYiE,EAASllB,GAC9BjC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAKinB,QAAUA,EACVjnB,KAAK6kB,YACP7kB,KAAK6kB,UAAYoC,EAAQrmB,IAG5BZ,KAAKiG,WAAW+c,EAKnB,CAEA0H,kBACG,OAAOu7B,CACV,CAEAhgD,WAAW+c,GAwBR,SAASkjC,EAAaC,GACnB,YAA2B,IAAbA,GAAyC,MAAbA,CAC7C,CAhBAnmD,KAAKY,GAAKoiB,EAAWpiB,GACrBZ,KAAKmH,KAAO6b,EAAW7b,MAAQ,GAC/BnH,KAAK4B,KAAOohB,EAAWphB,MAAQqkD,EAA6BrkD,KAC5D5B,KAAKqE,IAAM2e,EAAW3e,KAAO4hD,EAA6BrkD,KAG1D5B,KAAK6kB,UAAY7B,EAAW6B,WAAa,KACzC7kB,KAAK8mC,UAAY9jB,EAAW8jB,WAAa,cACzC9mC,KAAKomD,QAAUpjC,EAAWojC,SAAW,GACrCpmD,KAAKqmD,SAAU,EACXrjC,EAAWqjC,SAAiC,IAAtBrjC,EAAWqjC,UAClCrmD,KAAKqmD,QAAUrjC,EAAWqjC,SAO7BrmD,KAAKulB,QAAU,EACX2gC,EAAaljC,EAAWuC,WACzBvlB,KAAKulB,QAAUD,SAAStC,EAAWuC,UAGtCvlB,KAAKwlB,KAAO,EACR0gC,EAAaljC,EAAWwC,QACzBxlB,KAAKwlB,KAAOxC,EAAWwC,MAG1BxlB,KAAKsmD,WAAa,EACdJ,EAAaljC,EAAWsjC,cACzBtmD,KAAKsmD,WAAahhC,SAAStC,EAAWsjC,aAGzCtmD,KAAKumD,QAAU,EACXL,EAAaljC,EAAWujC,WACzBvmD,KAAKumD,QAAUvjC,EAAWujC,SAG7BvmD,KAAKwmD,SAAW,EACZN,EAAaljC,EAAWwjC,YACzBxmD,KAAKwmD,SAAWlhC,SAAStC,EAAWwjC,WAGvCxmD,KAAKymD,UAAY,GACbP,EAAaljC,EAAWyjC,aACzBzmD,KAAKymD,UAAYzjC,EAAWyjC,WAI/BzmD,KAAK+G,OAAS,GACVm/C,EAAaljC,EAAWjc,UACzB/G,KAAK+G,OAASic,EAAWjc,QAG5BjH,MAAMmG,WAAW+c,GAGZhjB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAaArB,SAEQ9F,KAAKoB,OAASpB,KAAKmH,MAAqB,IAAbnH,KAAKmH,OAClCnH,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAuBjB,MArBmB,CAChB,KACA,OACA,OACA,YACA,YACA,UACA,QACA,UACA,OACA,aACA,UACA,WACA,YACA,SACA,WAEU7B,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGb6C,CACV,CAOAw8B,iBAAkB,oBClJrB,IAAIqgB,EAAQ,CAAC,EAWTC,EAAkB,CAAC,EAEnBC,EAAqB,CACtB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGXA,EAAmB3iD,SAAS4iD,IAGzB,OAFAH,EAAMG,EAAQziD,WAAWC,KAAOwiD,EAExBA,EAAQziD,WAAW0iD,UACxB,IAAK,QACL,IAAK,MACFH,EACGE,EAAQE,iBAAiBC,OAAOC,qBAC/BJ,EAAQziD,WACZ,MAEH,IAAK,UACL,IAAK,OACFuiD,EACGE,EAAQE,iBAAiBC,OAAOplD,MAC/BilD,EAAQziD,WAElB,IAGH3E,EAAOC,QAAU,CAMdwnD,SAAU,WACP,IAAIC,EAAQ,GACZ,IAAK,IAAIxqB,KAAK+pB,EACXS,EAAM7iD,KAAKoiD,EAAM/pB,IAEpB,OAAOwqB,CACV,EAOA5tB,QAAS,SAAU5zB,EAAQshB,EAASllB,GACjC,GAAI4D,EAAOtB,IACR,OAAO,IAAIqiD,EAAM/gD,EAAOtB,KAAKsB,EAAQshB,EAASllB,EAIpD,EAEAqlD,iCAAkC,SAAUxlD,GAMzC,OALkBglD,EAAmB99C,QAAQuB,GACnCA,EAAEjG,WAAW0iD,UAAYllD,IAChCuM,KAAK9D,GACEA,EAAE08C,kBAGf,EAEAM,YAAa,WACV,OAAOrnD,KAAKonD,iCAAiC,QAChD,EAEAE,SAAU,WACP,OAAOtnD,KAAKonD,iCAAiC,UAChD,EAEAV,MAAO,WACJ,OAAO1mD,KAAKonD,iCAAiC,OAChD,EAEAG,UAAW,WACR,OAAOvnD,KAAKonD,iCAAiC,MAChD,EAEAxtB,qBAAsB,SAAUH,GAG7B,IAAIp1B,EAAM,KACV,GAAIo1B,EAAQmO,eAAe4f,iBAAkB,CAC1C,IAAI/lC,EAAMgY,EAAQmO,eAAe4f,iBAAiB,GAC9C/lC,IACDpd,EAAMod,EAAIgmC,MAEhB,CAOA,OAJKpjD,IACFA,EAAMo1B,EAAQ73B,MAGV+kD,EAAgBtiD,EAC1B,oBCvIH,IAAI0e,EAAY,EAAQ,OAExBtjB,EAAOC,QAAU,cAAgCqjB,EAC9CpjB,YAAYqjB,EAAYiE,EAASllB,EAAI0gC,GAClC3iC,MAAM,CAAC,SAAUiC,GAEjB/B,KAAKoE,SAAWq+B,GAAiB,CAAEp+B,IAAK,OAAQkH,KAAM,QAKtDvL,KAAKiG,WAAW+c,GAEhBhjB,KAAKinB,QAAUA,EACVjnB,KAAK6kB,YACP7kB,KAAK6kB,UAAYoC,EAAQrmB,IAQ5BZ,KAAK0nD,MAAQ,IAChB,CAMAzhD,WAAW+c,GAURhjB,KAAKY,GAAKoiB,EAAWpiB,GACrBZ,KAAKmH,KAAO6b,EAAW7b,MAAQ,GAC/BnH,KAAK4B,KAAOohB,EAAWphB,MAAQ,uBAG/B5B,KAAKqE,IAAM2e,EAAW3e,KAAOrE,KAAKoE,SAASC,KAAO,QAClDrE,KAAK6kB,UAAY7B,EAAW6B,WAAa,KACzC7kB,KAAK8mC,UAAY9jB,EAAW8jB,WAAa,cACzC9mC,KAAK2nD,cAAgB3kC,EAAW2kC,eAAiB,WAU7C3nD,KAAKoE,UAAYpE,KAAKoE,SAASgC,UAChCpG,KAAKoE,SAASgC,SAASnC,SAAS2I,SACD,IAAjBoW,EAAWpW,GAAmB5M,KAAK4M,GAAK,KAC9C5M,KAAK4M,GAAKoW,EAAWpW,EAAE,IAIlC9M,MAAMmG,WAAW+c,GAGZhjB,KAAKoB,QACPpB,KAAKoB,MAAQpB,KAAKmH,KAExB,CAaArB,SAEQ9F,KAAKoB,OAASpB,KAAKmH,MAAqB,IAAbnH,KAAKmH,OAClCnH,KAAKoB,MAAQpB,KAAKmH,MAIrB,IAAI0C,EAAO/J,MAAMgG,QAsBjB,MApBmB,CAChB,KACA,OACA,OACA,YACA,YACA,gBACA,OAEU7B,SAAS+C,IACnB6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAIhBhH,KAAKoE,UAAYpE,KAAKoE,SAASgC,UAChCpG,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B/C,EAAK+C,GAAK5M,KAAK4M,EAAE,IAIhB/C,CACV,CAmBA+9C,YAAYC,EAAU9oC,EAAKhY,EAAS,IACjC/G,KAAKmX,IAAI0wC,EAAU9oC,GACnB,IAAIxP,EAAQ,IAAIjH,MAAM,GAAGtI,KAAK4B,SAASmd,KACnC4C,EAAO,CAAEynB,KAAMppC,MAMnB,OALKmN,MAAMC,QAAQrG,KAASA,EAAS,CAACA,IACtCA,EAAO9C,SAAS2B,IACb+b,EAAK/b,GAAS5F,KAAK4F,EAAM,IAE5B5F,KAAK+B,GAAGqG,OAAOotB,QAAQjmB,EAAOoS,GACvBlS,QAAQkH,OAAOpH,EACzB,CAYAu4C,UAAUx4C,EAASlL,EAAU4R,GAiB1B,GAhBA5R,EAAWA,GAAY,CAAC,EACnB4R,IACFA,EAAM5R,EACNA,EAAW,CAAC,EAGRpE,KAAKoE,UAAYpE,KAAKoE,SAAS2jD,gBAChC/nD,KAAKoE,SAAS2jD,eAAe9jD,SAASmP,IACnChP,EAASgP,GAAK,IAAI,KAK3B9D,EAAQ04C,UAAY14C,EAAQ04C,WAAa,CAAC,GAGrC14C,EAAQ04C,UAAUhoD,KAAK8mC,WAAY,CAKrC,IAAK,IAAIzW,KAJT/gB,EAAQ04C,UAAUhoD,KAAK8mC,WAAa,CACjC7a,aAAa,EACb5U,OAAQ,eAEGjT,EACXkL,EAAQ04C,UAAUhoD,KAAK8mC,WAAWzW,GAAKjsB,EAASisB,GAEnD,IAAK,IAAIjd,KAAK4C,EACX1G,EAAQ04C,UAAUhoD,KAAK8mC,WAAW1zB,GAAK4C,EAAI5C,EAEjD,CACH,CAOA60C,YACG,OAAO,CACV,CAQA9wC,IAAI0wC,KAAaK,GACd,IAAI75C,EAAO,GAAGrO,KAAK8mC,eAChB9mC,KAAKmH,KAAOnH,KAAKmH,KAAOnH,KAAKqE,SAC1B6jD,EAAQ55C,KAAK,OACnBu5C,EAAS1wC,IAAI7S,KAAK+J,EACrB,CAQA85C,SACG,OAAOnoD,KAAKinB,QAAQkhB,oBAAoBnoC,KAAK2nD,cAChD,CAQAS,QAAQP,GACL,OAAOA,EAASv4C,QAAQ04C,UAAUhoD,KAAK8mC,UAC1C,CASAuhB,UAAUR,GACP,IAAIQ,EAAY,GAEZC,EAAeT,EAASU,mBAAmBvoD,KAAK8mC,WACpD,IAAKwhB,EAAc,CAChB,IAAI/4C,EAAQ,IAAIjH,MACb,2DAA2DtI,KAAK8mC,cAGnE,OADA9mC,KAAKwoD,QAAQX,EAAUt4C,GAChB,IACV,CAUA,IAAIk5C,EAAYH,EAAa,kBAC7B,IAAKG,EAMF,OALIl5C,EAAQ,IAAIjH,MACb,gEAAgEtI,KAAK8mC,cAExE9mC,KAAK+B,GAAGqG,OAAOotB,QAAQjmB,EAAO,CAAE65B,KAAMppC,OACtCA,KAAKwoD,QAAQX,EAAUt4C,GAChB,KAGLpC,MAAMC,QAAQq7C,KAChBA,EAAY,CAACA,IAGhB,IAAIC,EAAiBC,IAIlB,IAAIC,EAAUf,EAASU,mBAAmBI,EAAY,OACtD,GAAKC,EAAL,CAEA,IAAIC,EAAYD,EAAqB,YAAa,UAC7CC,IAEA17C,MAAMC,QAAQy7C,KAChBA,EAAY,CAACA,IAGhBA,EAAU5kD,SAAS6kD,IAChB,IAAIC,EAAa/oD,KAAKinB,QAAQkhB,oBAAoB2gB,GAClD,GAAIC,EACGV,GACDA,EAAU/jD,KAAKykD,OAEd,CACJ,IAAIx5C,EAAQ,IAAIjH,MACb,8DAA8DwgD,MAEjE9oD,KAAK+B,GAAGqG,OAAOotB,QAAQjmB,EAAO,CAAE65B,KAAMppC,OACtCA,KAAKwoD,QAAQX,EAAUt4C,GACvB84C,EAAY,IACf,KAtBiB,CAuBlB,EAOL,OAJAI,EAAUxkD,SAAS+C,IAChB0hD,EAAc1hD,EAAE,IAGZqhD,CACV,CAQAG,QAAQX,EAAUt4C,GACf,GAAIA,EAAO,CACR,IAAIlB,EAAO,GAAGkB,EAAMmF,aACpB1U,KAAKmX,IAAI0wC,EAAUx5C,EACtB,CACcrO,KAAKooD,QAAQP,GACnBxwC,OAAS,OACpB,CAUAyxB,oBACG,OAAO,IACV,CAQAJ,YAAYmf,EAAUxjD,GACnB,OAAO,IACV,CAQAilC,qBACG,OAAO,IACV,CAQA0f,sBAAsBnB,GACnB,IAAIoB,EAAiBjpD,KAAKinB,QAAQ6hB,kBAAkB9oC,MAChDkpD,EAAuB,CAAC,EAO5B,OANAD,EAAehlD,SAAS+C,IACrBkiD,EAAqBliD,EAAE3C,KAAOrE,KAAKinB,QAAQyhB,YAAY1oC,KAAM,CAC1D6nD,EACA7gD,EAAE3C,KACH,IAEE6kD,CACV,CAWA5uC,MAAMutC,GAEH,IAAIO,EAAUpoD,KAAKooD,QAAQP,GAItBO,EAKoB,aAAlBA,EAAQ/wC,QAA2C,SAAlB+wC,EAAQ/wC,gBAEnCwwC,EAASv4C,QAAQ04C,UAAUhoD,KAAK8mC,WAGvC9mC,KAAK8nD,UAAUD,EAASv4C,SAGTtP,KAAKooD,QAAQP,GACnBsB,WAAaf,EACtBpoD,KAAKmX,IAAI0wC,EAAU,qCAdtB7nD,KAAK8nD,UAAUD,EAASv4C,QAiB9B,CAOA85C,eAAevB,GACE7nD,KAAKooD,QAAQP,GACnBxwC,OAAS,WACpB,CAQAgyC,YAAYxB,EAAUliD,GACnBA,EAASA,GAAU,CAAC,EACpB,IAAIyiD,EAAUpoD,KAAKooD,QAAQP,GAC3B,IAAK,IAAIz0C,KAAKzN,EACXyiD,EAAQh1C,GAAKzN,EAAOyN,EAE1B,CAQAk2C,kBAAkBzB,GACf,IAAIH,EAAQ1nD,KAAKooD,QAAQP,GACzB,OAAIH,EACsB,aAAhBA,EAAMrwC,QAAyC,SAAhBqwC,EAAMrwC,QAG5C7O,QAAQC,KACL,4FACAo/C,GAGH7nD,KAAK8nD,UAAUD,EAASv4C,SACjBtP,KAAKspD,kBAAkBzB,GAEpC,CAMAxhB,iBAAkB,CAEdkjB,oBAMD,OAJGvpD,KAAKinB,QAAQ/d,UACTE,GACEA,GAAQA,EAAKhF,UAAuC,UAA3BgF,EAAKhF,SAAS0iD,YACxC,EAEX,CAEI0C,uBACD,OAAOxpD,KAAKinB,QAAQwhB,uBAAuBzoC,KAC9C,CAEIypD,2BACD,MAAMC,EAAY1pD,KAAKupD,cAAc,GACrC,OAAKG,EAEE1pD,KAAK+B,GAAGgW,WAAW2xC,EAAUrvB,UAFb,IAG1B,CAEIsvB,0BACD,IAGItvB,EAHAuvB,EAAW5pD,KAAKwpD,iBAAiB,GACrC,OAAKI,GAKCvvB,EADE,+BADAuvB,EAAShoD,KAEAgoD,EAASC,MAAQD,EAASC,MAAMxvB,SAAW,KAI3CuvB,EAASvvB,SAInBr6B,KAAK+B,GAAGgW,WAAWsiB,IAbJ,IAczB,oBC/eH,MAAMyvB,EAAmB,EAAQ,OAEjC,IAAIC,EAA2B,CAC5BjD,SAAU,MAQV//C,OAAQ,GAIRwE,KAAM,OAKNlH,IAAK,OAKR5E,EAAOC,QAAU,cAAmCoqD,EACjDnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,mBACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAIgoD,EAGlC,CAGAr/B,kBACG,OAAOq/B,CACV,CAEAr/B,wBACG,MAAO,CACJtpB,MAAO,sBACP4oD,WAAY,6BACZC,UAAW,gCACXjD,OAAQ,CACLplD,KAAM,gBACNqlD,oBAAqB,iCAG9B,CA4BAa,UAAUx4C,EAAS0G,GAKhBlW,MAAMgoD,UAAUx4C,EAJC,CACd46C,WAAW,GAGuBl0C,EACxC,CAOAiyC,YACG,OAAO,CACV,CASAI,UAAUR,GAEP,MAAO,EACV,oBCvGH,MAAMiC,EAAmB,EAAQ,OAEjC,IAAIK,EAAoC,CACrCrD,SAAU,UAQVv7C,KAAM,eAKNw8C,eAAgB,GAIhB1jD,IAAK,mBAIL+B,SAAU,CAAC,eAMd3G,EAAOC,QAAU,cAA4CoqD,EAC1DnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,4BACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAIooD,EAGlC,CAGAz/B,kBACG,OAAOy/B,CACV,CAEAz/B,wBACG,MAAO,CACJtpB,MAAO,oBACP4oD,WAAY,iCACZC,UAAW,wBACXjD,OAAQ,CACLplD,KAAM,yBAGf,CAEAqE,WAAW+c,GASRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAKgtC,WAAahtC,KAAKgtC,YAAc,CAAC,CACzC,oBChEH,MAAM8c,EAAmB,EAAQ,OAEjC,IAAIM,EAA6B,CAC9BtD,SAAU,OAQV//C,OAAQ,CACL,KACA,OACA,UACA,UACA,WACA,aACA,UACA,YACA,iBACA,oBAKHwE,KAAM,QAINlH,IAAK,SAKR5E,EAAOC,QAAU,cAAqCoqD,EACnDnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,qBACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAIqoD,EAGlC,CAGA1/B,kBACG,OAAO0/B,CACV,CAEA1/B,wBACG,MAAO,CACJtpB,MAAO,YACP4oD,WAAY,yBACZC,UAAW,iBACXjD,OAAQ,CACLplD,KAAM,iBAGf,CAEAqE,WAAW+c,GASRljB,MAAMmG,WAAW+c,GAEjBonC,EAA2BrjD,OAAO9C,SAAS+C,IACxChH,KAAKgH,GAAKgc,EAAWhc,EAAE,GAE7B,CAkBAlB,QACG,IAAI+D,EAAO/J,MAAMgG,QAMjB,OAJAskD,EAA2BrjD,OAAO9C,SAAS+C,IACxC6C,EAAK7C,GAAKhH,KAAKgH,EAAE,IAGb6C,CACV,CA8BAi+C,UAAUx4C,EAAS0G,GAChB,IAAIq0C,EAAa,CACd/iB,GAAI,GACJE,KAAM,GACN8iB,QAAStqD,KAAKsqD,QACdh5C,QAAStR,KAAKsR,SAGjBxR,MAAMgoD,UAAUx4C,EAAS+6C,EAAYr0C,EACxC,mBC5IH,MAAM8zC,EAAmB,EAAQ,OAEjC,IAAIS,EAAoC,CACrCzD,SAAU,KAQVv7C,KAAM,eAINw8C,eAAgB,GAIhB1jD,IAAK,4BAIL+B,SAAU,CACP,cACA,oBACA,oBACA,4BACA,WACA,iBACA,YACA,gBACA,wBACA,WACA,yBACA,iBACA,YACA,mBAON3G,EAAOC,QAAU,cAA4CoqD,EAC1DnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,kDACtB9B,MAAMkjB,EAAYiE,EAASllB,EAAIwoD,EAGlC,CAGA7/B,kBACG,OAAO6/B,CACV,CAEA7/B,wBACG,OAAO,IACV,oBC5DH,MAAMo/B,EAAmB,EAAQ,OAEjC,IAAIU,EAA4B,CAC7B1D,SAAU,KAQVv7C,KAAM,eAINw8C,eAAgB,GAIhB1jD,IAAK,oBAIL+B,SAAU,CACP,iBACA,WACA,WACA,YACA,eACA,cACA,gBACA,gBACA,kBACA,iBACA,iBACA,YACA,eACA,gBACA,eACA,gBACA,kBACA,sBACA,iBACA,mBAON3G,EAAOC,QAAU,cAAoCoqD,EAClDnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,0CACtB9B,MAAMkjB,EAAYiE,EAASllB,EAAIyoD,EAGlC,CAGA9/B,kBACG,OAAO8/B,CACV,CAEA9/B,wBACG,OAAO,IACV,oBClEH,MAAMo/B,EAAmB,EAAQ,OAEjC,IAAIW,EAAgC,CACjC3D,SAAU,KAQVv7C,KAAM,eAINw8C,eAAgB,GAIhB1jD,IAAK,wBAIL+B,SAAU,CACP,qBACA,eACA,gBACA,WACA,gBACA,oBACA,iBACA,mBACA,iBACA,oBACA,oBACA,oBACA,kBACA,sBACA,wBACA,YACA,iBACA,eACA,qBACA,sBACA,uBAON3G,EAAOC,QAAU,cAAwCoqD,EACtDnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,8CACtB9B,MAAMkjB,EAAYiE,EAASllB,EAAI0oD,EAGlC,CAGA//B,kBACG,OAAO+/B,CACV,CAEA//B,wBACG,OAAO,IACV,oBCnEH,MAAMo/B,EAAmB,EAAQ,OAEjC,IAAIY,EAA8B,CAC/B5D,SAAU,KAQVv7C,KAAM,UAINw8C,eAAgB,GAIhB1jD,IAAK,sBAIL+B,SAAU,CACP,oBACA,cACA,gBACA,WACA,kBAEA,wBACA,iBACA,YACA,wBACA,qBACA,iBACA,YACA,gBAON3G,EAAOC,QAAU,cAAsCoqD,EACpDnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,4CACtB9B,MAAMkjB,EAAYiE,EAASllB,EAAI2oD,EAGlC,CAGAhgC,kBACG,OAAOggC,CACV,CAEAhgC,wBACG,OAAO,IACV,oBC5DH,MAAMo/B,EAAmB,EAAQ,OAEjC,IAAIa,EAAoB,CACrB7D,SAAU,KAQVv7C,KAAM,aAINw8C,eAAgB,GAIhB1jD,IAAK,YAIL+B,SAAU,CAAC,gBAGd3G,EAAOC,QAAU,cAAgCoqD,EAC9CnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,iCACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAI4oD,EAGlC,CAGAjgC,kBACG,OAAOigC,CACV,CAEAjgC,wBACG,OAAO,IACV,CAUAoe,oBACG,MAAM1nC,EAAQ,GAAGpB,KAAKoB,eAWtB,OAPKpB,KAAK4qD,WACP5qD,KAAK6qD,SAAW7qD,KAAK+B,GAAG22B,UAAU,CAAC,GACnC14B,KAAK4qD,SAAW5qD,KAAK+B,GAAGmE,SACrB,CAAE7B,IAAK,SAAU8C,KAAM/F,EAAOA,SAC9BpB,KAAK6qD,WAGJ,CACJxmD,IAAK,GAAGrE,KAAKY,WACbQ,QACAwE,MAAO5F,KAAK4qD,SAElB,oBCzDH,MAAMd,EAAmB,EAAQ,OAEjC,IAAIgB,EAA+B,CAChChE,SAAU,OAQVv7C,KAAM,eAINw8C,eAAgB,GAIhB1jD,IAAK,cAIL+B,SAAU,IAMb3G,EAAOC,QAAU,cAAuCoqD,EACrDnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,uBACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAI+oD,EAGlC,CAGApgC,kBACG,OAAOogC,CACV,CAEApgC,wBACG,MAAO,CACJtpB,MAAO,eACP4oD,WAAY,4BACZC,UAAW,oBACXjD,OAAQ,CACLplD,KAAM,oBAGf,oBC5DH,MAAMkoD,EAAmB,EAAQ,OAE3BiB,EAA2C,CAC9CjE,SAAU,KAQVv7C,KAAM,cAINw8C,eAAgB,GAIhB1jD,IAAK,sBAIL+B,SAAU,CAAC,UAMd3G,EAAOC,QAAU,cAAmD,EAGjEC,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KACRohB,EAAWphB,MAAQ,2CACtB9B,MAAMkjB,EAAYiE,EAASllB,EAAIgpD,EAGlC,CAGArgC,kBACG,OAAOqgC,CACV,CAEArgC,wBACG,OAAO,IACV,CAUAoe,oBACG,MAAO,CACJzkC,IAAK,GAAGrE,KAAKY,SACbQ,MAAO,GAAGpB,KAAKoB,aAErB,oBChEH,MAAM0oD,EAAmB,EAAQ,OAEjC,IAAIkB,EAAuB,CACxBlE,SAAU,KAQVv7C,KAAM,cAINw8C,eAAgB,GAIhB1jD,IAAK,eAIL+B,SAAU,CACP,WACA,cACA,WACA,aACA,iBAIN3G,EAAOC,QAAU,cAA+BoqD,EAC7CnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,oCACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAIipD,EAGlC,CAGAtgC,kBACG,OAAOsgC,CACV,CAEAtgC,wBACG,OAAO,IACV,CAEAzkB,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAKirD,SAAWp3C,KAAK0D,MAAMyL,EAAWioC,WAAY,EACrD,CAEIC,mBACD,IAAIxB,EAAY,KACZyB,EAAcnrD,KAAKinB,QAGvB,MAAQyiC,GAAayB,GAClBzB,EAAYyB,EAAYjiD,UACpBE,GAAqC,SAA5BA,GAAMhF,UAAU0iD,WAC3B,GAGFqE,EAAcA,EAAYlkC,QAG7B,OAAOyiC,CACV,CAEI0B,sBACD,OAAOprD,KAAKinB,QAAQwhB,uBAAuBzoC,MAAM,EACpD,CAEIypD,2BACD,IAAIC,EAAY1pD,KAAKkrD,aACrB,OAAKxB,EAEc1pD,KAAK+B,GAAGgW,WAAW2xC,EAAUrvB,UAFzB,IAI1B,CAEIsvB,0BACD,IAGItvB,EAHAuvB,EAAW5pD,KAAKorD,gBACpB,OAAKxB,GAKCvvB,EADE,+BADAuvB,EAAShoD,KAEAgoD,EAASC,MAAQD,EAASC,MAAMxvB,SAAW,KAI3CuvB,EAASvvB,SAInBr6B,KAAK+B,GAAGgW,WAAWsiB,IAbJ,IAczB,CAEIgxB,kBACD,IAAIvzC,EAAM9X,KAAKypD,qBACf,OAAK3xC,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKsrD,eAAc,GAFnC,IAGpB,oBC3GH,MAAMxB,EAAmB,EAAQ,OAE3ByB,EAAc,EAAQ,OAEtBC,EAAoC,CACvC1E,SAAU,KAQVv7C,KAAM,eAINw8C,eAAgB,GAIhB1jD,IAAK,mBAIL+B,SAAU,CAAC,UAMd3G,EAAOC,QAAU,cAA4CoqD,EAC1DnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,6BACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAIypD,EAGlC,CAGA9gC,kBACG,OAAO8gC,CACV,CAEA9gC,wBACG,OAAO,IACV,CAEAzkB,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAGjBhjB,KAAKyrD,aAAe,GAGhBzrD,KAAK6pD,QACN7pD,KAAK6pD,MAAQ0B,EAAYG,eAAe1rD,KAAK6pD,MAAO7pD,KAAMA,KAAK+B,IAErE,CAQA+D,QACG,MAAM+D,EAAO/J,MAAMgG,QAKnB,OAFI9F,KAAK6pD,QAAOhgD,EAAKggD,MAAQ7pD,KAAK6pD,MAAM/jD,SAEjC+D,CACV,CAEA8hD,mBAAmB7zC,GAChB9X,KAAKyrD,aAAannD,KAAKwT,EAC1B,CA+BAgxB,oBAEG,IAAI/hC,EAAS,KAcb,OAZI/G,KAAKyrD,aAAatlD,OAAS,IAC5BY,EAAS,GAET/G,KAAKyrD,aAAaxnD,SAAS2I,IACxB,MAAM48B,EAAQ58B,EAAEg/C,iBAAiB5rD,KAAKY,GAAIZ,KAAKoB,OAE3CooC,GACDziC,EAAOzC,KAAKklC,EACf,KAICziC,CACV,CAQA2hC,YAAYmf,EAAUxjD,GACnB,MAAM2jB,EAAQ3jB,EAAI4jB,MAAM,KAExB,OAAID,EAAM,KAAOhoB,KAAKY,GACHZ,KAAKooD,QAAQP,GAEd7/B,EAAM,IAGjB,IACV,oBC/IH,MAAM8hC,EAAmB,EAAQ,OAEjC,IAAI+B,EAAqB,CACtB/E,SAAU,OAQVv7C,KAAM,eAINw8C,eAAgB,GAIhB1jD,IAAK,aAIL+B,SAAU,CACP,WACA,cACA,kBACA,aACA,aAIN,MAAM0lD,EAAS,CAEf,EAGArsD,EAAOC,QAAU,cAA6BoqD,EAC3CnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,kCACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAI8pD,EAGlC,CAGAnhC,kBACG,OAAOmhC,CACV,CAEAnhC,wBAEG,MAAO,CACJtpB,MAAO,cACP4oD,WAAY,0BACZC,UAAW,gCACXjD,OAAQ,CACLplD,KAAM,kBACNmqD,YAAY,GAGrB,CAEA9lD,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAGjBhjB,KAAKgsD,SAA4B,MAAjBhsD,KAAKgsD,UAA0Bn4C,KAAK0D,MAAMvX,KAAKgsD,UAE/D,IAAIzlB,EAAevmC,KAAKwmC,WAAa,CAAC,EACtCxmC,KAAKisD,mBAAqB,GAC1BjsD,KAAKwmC,UAAY,CAAC,GACjBxjB,EAAWyjB,YAAc,IAAIxiC,SAASyiC,IACpC,IAAIC,EAAM3mC,KAAK+B,GAAGs3B,kBAAkBqN,EAAK1mC,MACrC2mC,EACD3mC,KAAKwmC,UAAUE,GAAOC,EAIlBJ,EAAaG,GACd1mC,KAAKwmC,UAAUE,GAAOH,EAAaG,GAEnC1mC,KAAKisD,mBAAmB3nD,KAAKoiC,EAEnC,IAGH1mC,KAAKisD,mBAAmBhoD,SAASyiC,IAC9B,IAAIriC,EAAM,WAAWrE,KAAK6kB,mBAAmB7kB,KAAKoB,gDAAgDslC,KAClG,IAAKolB,EAAOznD,GAAM,CACf,IAAI8D,EAAM,IAAIG,MAAMjE,GACpBrE,KAAK+B,GAAGqG,OAAOotB,QAAQrtB,EAAK,CAAE+jD,YAAalsD,KAAKY,GAAI8lC,QACpDolB,EAAOznD,IAAO,CACjB,KAGHrE,KAAK4mC,aAAe5jB,EAAWmpC,iBAAmB,CAAC,CACtD,CAaArmD,QACG,IAAI+D,EAAO/J,MAAMgG,QAEjB+D,EAAK48B,WAAa,GAClB,IAAK,IAAIp8B,KAAKrK,KAAKwmC,UAChB38B,EAAK48B,WAAWniC,KAAKtE,KAAKwmC,UAAUn8B,GAAGzJ,IAK1C,OAFAiJ,EAAKsiD,gBAAkBnsD,KAAK4mC,aAErB/8B,CACV,CAYAi/B,kBAAkBN,GACf,GAAwB,MAApBxoC,KAAKosD,YAAqB,MAAO,GAErC,IAAIC,GAAgBrsD,KAAKinB,QAAQ6hB,kBAAkB9oC,OAAS,IAAI8I,QAC5Dm2C,GAAQA,EAAI56C,KAAOrE,KAAKosD,cAC1B,GACF,GAAoB,MAAhBC,EAAsB,MAAO,GAEjC,IAAIv+C,EAAS,GAIVu+C,EAAazmD,OACa,iBAA1BymD,EAAazmD,MAAMvB,KACnBgoD,EAAazmD,MAAMgB,gBACnBylD,EAAazmD,MAAMgB,eAAeG,QAElC+G,EAAOxJ,KAAK,CACTD,IAAK,GAAGrE,KAAKY,UACbQ,MAAO,GAAGpB,KAAKoB,wBACf6D,OAAQonD,EAAazmD,MAAMgB,iBAG9BylD,EAAazmD,MAAMgB,eAAeG,SAAS9C,SAAS+C,IACjD8G,EAAOxJ,KAAK,CACTD,IAAK,GAAGrE,KAAKY,MAAMoG,EAAEpG,KACrBQ,MAAO,GAAGpB,KAAKoB,sBAAsB4F,EAAE5F,QACvCwE,MAAOoB,EACP/B,OAAQ+B,EAAE/B,QACX,KAKL6I,EAAOxJ,KAAK,CACTD,IAAKgoD,EAAazmD,MACb,GAAG5F,KAAKY,MAAMyrD,EAAazmD,MAAMhF,KACjC,GAAGZ,KAAKY,gBACbQ,MAAO,GAAGpB,KAAKoB,qBACfwE,MAAOymD,EAAazmD,MACpBX,OAAQonD,EAAapnD,SAI3B,IAAIqnD,EAAiBtsD,KAAKinB,QAAQ6hB,kBAAkBsR,KACjDp6C,KACAwoC,GAMH,OAJI8jB,GAAkBA,EAAenmD,OAAS,IAC3C2H,EAASA,EAAOyZ,OAAO+kC,IAGnBx+C,CACV,CAUA46B,YAAYF,EAAa5yB,GACtB,IAEI/L,EAFAg+C,EAAWjyC,EAAO,GAClBvR,EAAMuR,EAAO,GAGjB,GAAIiyC,GAAYxjD,GAAKkoD,aAAavsD,KAAKY,IAAK,CACzC,IAAI8J,EAAUrG,EAAI4jB,MAAM,KAAK,GACzBmgC,EAAUpoD,KAAKooD,QAAQP,GACvB2E,EAAYpE,EAAUA,EAAQv+C,KAAO,KAGzC,GAFAA,EAAO2iD,EAEHA,GAAa9hD,EAAS,CACvB,IAAI2hD,GACDrsD,KAAKinB,QAAQ6hB,kBAAkB9oC,OAAS,IACzC8I,QAAQm2C,GAAQA,EAAI56C,KAAOrE,KAAKosD,cAAa,GAEf,iBAA5BC,GAAczmD,OAAOvB,MACjB8I,MAAMC,QAAQo/C,KAAYA,EAAY,CAACA,IAG5C3iD,EAAO2iD,EAAUr+C,KAAKC,IACnB,GAAe,QAAX1D,GAAgC,MAAXA,EACtB,OAAO0D,EAAKyB,MAAQzB,EAAKxN,GACrB,GAAIyrD,EAAazmD,MAAMgB,eAAgB,CAC3C,IAAI6lD,EAAcJ,EAAazmD,MAAMgB,eAAeG,QAChDC,GAAMA,EAAEpG,IAAM8J,IAChB,GACF,OAAI+hD,EAAoBr+C,EAAKq+C,EAAY3lD,YAC7BsH,CACf,KAGT,CACH,CAOA,OALY,MAARvE,IACDA,EAAO7J,KAAKinB,QAAQyhB,YAAY0R,KAAKp6C,KAAMwoC,EAAa5yB,IAE/C,MAAR/L,IAAcA,EAAO7J,KAAKinB,QAAQyhB,YAAY1oC,KAAM4V,IAEjD/L,CACV,CAEA++B,oBAAoBhzB,GACjB,OAAO5V,KAAKinB,QAAQ2hB,iBAAiBwR,KAAKp6C,QAAS4V,EACtD,CAEAszB,oCAAoCtzB,GACjC,OAAO5V,KAAKinB,QAAQiiB,iCAAiCkR,KAClDp6C,QACG4V,EAET,CAEAmzB,uCAAuCnzB,GACpC,OAAO5V,KAAKinB,QAAQ8hB,oCAAoCqR,KACrDp6C,QACG4V,EAET,CAcAixB,YAAYn2B,GACT,OAAO1Q,KAAKinB,QAAQ4f,YAAYuT,KAAKp6C,KAAM0Q,EAC9C,CAQAy2B,uBAAuBC,GACpB,GAAKA,EAEL,OAAOpnC,KAAKinB,QAAQkgB,uBAAuBiT,KAAKp6C,KAAMonC,EACzD,CAQAC,oBAAoBD,GACjB,GAAKA,EAEL,OAAOpnC,KAAKinB,QAAQogB,oBAAoB+S,KAAKp6C,KAAMonC,EACtD,CAQAG,oBAAoBH,GACjB,GAAKA,EAEL,OAAOpnC,KAAKinB,QAAQsgB,oBAAoB6S,KAAKp6C,KAAMonC,EACtD,CAQAK,iBAAiBhO,GACTA,GAELz5B,KAAKinB,QAAQwgB,iBAAiB2S,KAAKp6C,KAAMy5B,EAC5C,CAcAiO,wBAAwBjO,GACrB,GAAKA,EAEL,OAAOz5B,KAAKinB,QAAQygB,wBAAwB0S,KAAKp6C,KAAMy5B,EAC1D,CAQAsO,iBAAiBtO,GACTA,GAELz5B,KAAKinB,QAAQ8gB,iBAAiBqS,KAAKp6C,KAAMy5B,EAC5C,CASAgP,uBAAuBD,GACpB,GAAKA,EAEL,OAAOxoC,KAAKinB,QAAQwhB,uBAAuB2R,KAAKp6C,KAAMwoC,EACzD,CAUAt/B,SAASwH,EAAK,MAAM,IACjB,OAAO1Q,KAAKinB,QAAQ/d,SAASkxC,KAAKp6C,KAAM0Q,EAC3C,CAQAu3B,WAAWxO,GACHA,GAELz5B,KAAKinB,QAAQghB,WAAWmS,KAAKp6C,KAAMy5B,EACtC,CAQA0O,oBAAoBf,GACjB,OAAKA,EAEEpnC,KAAKinB,QAAQkhB,oBAAoBiS,KAAKp6C,KAAMonC,GAFlC,IAGpB,CASAgB,cAAc3mB,GACNA,GAELzhB,KAAKinB,QAAQmhB,cAAcgS,KAAKp6C,KAAMyhB,EACzC,oBC3ZH,MAAMqoC,EAAmB,EAAQ,OAE3B4C,EAAc,EAAQ,OAE5B,IAAIC,EAAgC,CACjC7F,SAAU,KAQVv7C,KAAM,eAINw8C,eAAgB,CAAC,aAAc,oBAI/B1jD,IAAK,WAIL+B,SAAU,CAAC,MAAO,UAAW,gBAMhC3G,EAAOC,QAAU,cAA4CoqD,EAC1DnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,6BACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAI4qD,EAGlC,CAGAjiC,kBACG,OAAOiiC,CACV,CAEAjiC,wBACG,OAAO,IACV,CAEAzkB,WAAW+c,GASRljB,MAAMmG,WAAW+c,GAEjB,SAAS4pC,EAAW90C,GACbA,GACD3D,OAAOC,KAAK0D,GAAK7T,SAASoQ,IACT,SAAVyD,EAAIzD,GACLyD,EAAIzD,IAAK,EACS,QAAVyD,EAAIzD,GACZyD,EAAIzD,IAAK,EACgB,iBAAVyD,EAAIzD,IACnBu4C,EAAW90C,EAAIzD,GAClB,GAGT,CACAu4C,CAAW5sD,KAAK6sD,YACnB,CA8CAC,6BACG,IAAI/lD,EAAS/G,KAAKinB,QAAQ6hB,kBAAkB9oC,MAmD5C,OAlDI+G,GAAU/G,KAAK6sD,aAAe7sD,KAAK6sD,YAAYE,YAChD/sD,KAAK6sD,YAAYE,WAAW9oD,SAASV,IAC9BA,EAAEypD,UACHjmD,EAAO+B,QAAQoR,IACZ,GAAIA,EAAMtU,OAAOhF,IAAM2C,EAAEypD,YACtBzpD,EAAEnC,MAAQ8Y,EAAMtU,MAAMxE,MACtBmC,EAAEc,IAAM6V,EAAM7V,IACVd,EAAEsG,MAAMlE,QAAUuU,EAAMtU,MAAMQ,SAASjE,SAAS,CACjD,IAAIsD,EAAO,GACXyU,EAAMtU,MAAMQ,SAASjE,QAAQ8B,SAASg7C,IACnCx5C,EAAKnB,KAAK,CACPlD,MAAO69C,EAAI5wC,KACX1L,MAAOs8C,EAAIr+C,IACZ,IAEL2C,EAAEsG,KAAKlE,OAASF,CACnB,CACH,IAEKlC,EAAEwpD,YAAcxpD,EAAEwpD,WAAW5mD,SACrC5C,EAAEc,IAAMd,EAAE0pD,KACV1pD,EAAEwpD,WAAW9oD,SAAS6hB,IACnB,GAAIA,EAAEknC,UAAW,CAGd,IAAIE,EAAQnmD,EAAO+B,QAAQ9B,GACjBA,EAAE3C,KAAOd,EAAE0pD,OAClB,GACH,IAAKC,EAAO,OACZA,EAAMjoD,OAAO8B,SAAS+B,QAAQoR,IAC3B,GAAIA,GAAOtZ,IAAMklB,EAAEknC,YAChBlnC,EAAE1kB,MAAQ8Y,EAAM9Y,MAChB0kB,EAAEzhB,IAAM6V,EAAMpT,WACVgf,EAAEjc,MAAMlE,QAAUuU,EAAM9T,SAASjE,SAAS,CAC3C,IAAIsD,EAAO,GACXyU,EAAM9T,SAASjE,QAAQ8B,SAASg7C,IAC7Bx5C,EAAKnB,KAAK,CACPlD,MAAO69C,EAAI5wC,KACX1L,MAAOs8C,EAAIr+C,IACZ,IAELklB,EAAEjc,KAAKlE,OAASF,CACnB,CACH,GAEN,KAEN,IAGCzF,KAAK6sD,WACf,CAUA/jB,oBAEG,IAAI3mC,EAAU,GACdnC,KAAK6sD,YAAYE,WAAW9oD,SAASkpD,IACjB,UAAbA,EAAKvrD,MAAmC,SAAfurD,EAAKC,QAAqBD,EAAKj9B,OACzD/tB,EAAQmC,KAAK,CACV1D,GAAIusD,EAAKj9B,MACT7hB,KAAM8+C,EAAK/rD,OAEjB,IAMH,IAAIisD,EAAOrtD,KAAK8mC,UAKZjI,EAAQ7+B,KAAK+B,GAAG22B,UAAU,CAAC,GAC3B40B,EAAY,IAAIZ,EACjB,CACG9rD,GAAI,GAAGysD,qBACPjsD,MAAO,GAAGpB,KAAKoB,kBACf0F,WAAY,GAAGumD,qBACfjnD,SAAU,CACPjE,QAASA,IAGf08B,GAGH,MAAO,CACJ,CACGx6B,IAAK,GAAGgpD,qBACRjsD,MAAO,GAAGpB,KAAKoB,kBACfwE,MAAO0nD,EACProD,OAAQ,MAGjB,CAQAyjC,YAAYmf,EAAUxjD,GACnB,GAAIA,EAAK,CACN,IAAI2jB,EAAQ3jB,EAAI4jB,MAAM,KACtB,GAAID,EAAM,IAAMhoB,KAAK8mC,UAElB,OADc9mC,KAAKooD,QAAQP,GACZ7/B,EAAM,GAE3B,CACA,OAAO,IACV,oBCjOH,MAAM8hC,EAAmB,EAAQ,OAEjC,IAAIyD,EAA4B,CAC7BzG,SAAU,OAQVv7C,KAAM,OAINw8C,eAAgB,GAIhB1jD,IAAK,WAIL+B,SAAU,IAMb3G,EAAOC,QAAU,cAAoCoqD,EAClDnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,oBACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAIwrD,EAGlC,CAGA7iC,kBACG,OAAO6iC,CACV,CAEA7iC,wBAEG,MAAO,CACJtpB,MAAO,YACP4oD,WAAY,yBACZC,UAAW,iBACXjD,OAAQ,CACLplD,KAAM,iBAGf,CA8BAkmD,UAAUx4C,EAAS0G,GAMhBlW,MAAMgoD,UAAUx4C,EALC,CACdJ,MAAO,GACPzO,GAAI,MAG8BuV,EACxC,oBCtGH,MAAM8zC,EAAmB,EAAQ,OAE3B0D,EAAoC,CACvC1G,SAAU,KAQVv7C,KAAM,cAINw8C,eAAgB,CAAC,aAAc,oBAI/B1jD,IAAK,WAIL+B,SAAU,CAAC,MAAO,UAAW,QAM1BA,EAAW,CACdqnD,IAAK,EACLC,QAAS,KACTp9C,IAAK,IAGR7Q,EAAOC,QAAU,cAA4CoqD,EAC1DnqD,YAAYqjB,EAAYiE,EAASllB,GAC9B,IAAK,MAAMsC,KAAO+B,EACf4c,EAAW3e,GAAO2e,EAAW3e,IAAQ+B,EAAS/B,GACjDvE,MACGqU,OAAOsnC,OACJ,CACG75C,KAAM,iCAETohB,GAEHiE,EACAllB,EACAyrD,EAIN,CAGA9iC,kBACG,OAAO8iC,CACV,CAEA9iC,wBACG,OAAO,IACV,CAUAoe,oBACG,MAAO,CACJ,CACGzkC,IAAK,GAAGrE,KAAKY,sBACbQ,MAAO,GAAGpB,KAAKoB,mBAGxB,oBChFH,MAAM0oD,EAAmB,EAAQ,OAEjC,IAAI6D,EAA2B,CAC5B7G,SAAU,QAQV//C,OAAQ,GAIRwE,KAAM,MAINlH,IAAK,WAKR5E,EAAOC,QAAU,cAAmCoqD,EACjDnqD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,UACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAI4rD,EAGlC,CAGAjjC,kBACG,OAAOijC,CACV,CAEAjjC,wBACG,MAAO,CACJtpB,MAAO,qBACP4oD,WAAY,4BACZC,UAAW,+BACXjD,OAAQ,CACLplD,KAAM,kBAGNqlD,oBAAqB,8BAG9B,CAEAhhD,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAKupC,WAAavmB,EAAWumB,YAAc,eAC9C,CAaAzjC,QACG,IAAI+D,EAAO/J,MAAMgG,QAIjB,OAFA+D,EAAK0/B,WAAavpC,KAAKupC,WAEhB1/B,CACV,oBCxEH,MAAM+jD,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzC/G,SAAU,QAQV//C,OAAQ,CACL,WACA,gBAKHwE,KAAM,MAINlH,IAAK,oBAKR5E,EAAOC,QAAU,cAAwCkuD,EACtDjuD,YAAYqjB,EAAYiE,EAASllB,GAC9BihB,EAAWphB,KAAOohB,EAAWphB,MAAQ,UACrC9B,MAAMkjB,EAAYiE,EAASllB,EAAI8rD,EAGlC,CAGAnjC,kBACG,OAAOmjC,CACV,CAEAnjC,wBACG,MAAO,CACJtpB,MAAO,2BACP4oD,WAAY,sCAEZC,UAAW,+BACXjD,OAAQ,CACLplD,KAAM,kBAGNqlD,oBAAqB,sBAG9B,CAEAhhD,WAAW+c,GACRljB,MAAMmG,WAAW+c,GAEjBhjB,KAAKq6B,SAAWrX,EAAWqX,UAAY,WACvCr6B,KAAK8tD,aAAe9qC,EAAW8qC,cAAgB,iBAClD,CAaAhoD,QACG,IAAI+D,EAAO/J,MAAMgG,QAIjB,OAFA+D,EAAKwwB,SAAWr6B,KAAKq6B,SACrBxwB,EAAKikD,aAAe9tD,KAAK8tD,aAClBjkD,CACV,CAUAi/B,oBACG,IAAI/hC,EAAS,KACb,GAAI/G,KAAKq6B,SAAU,CAChBtzB,EAAS,GACT,IAAI9B,EAASjF,KAAK+B,GAAGgW,WAAW/X,KAAKq6B,UACrC,GAAIp1B,EAAQ,CACT,IAAIooD,EAAOrtD,KAAK8mC,UAChB7hC,EAAO8B,SAAS9C,SAAS2B,IACtBmB,EAAOzC,KAAK,CACTD,IAAK,GAAGgpD,KAAQznD,EAAMhF,KACtBQ,MAAO,GAAGpB,KAAKoB,UAAU6D,EAAO7D,UAAUwE,EAAMxE,QAChDwE,QACAX,UACD,IAEL8B,EAAOzC,KAAK,CACTD,IAAK,GAAGgpD,SACRjsD,MAAO,GAAGpB,KAAKoB,UAAU6D,EAAO7D,QAChCwE,MAAO,KACPX,UAEN,KAAO,CAGJ,IAAIsK,EAAQ,IAAIjH,MACb,4DAA4DtI,KAAKY,gDAAgDZ,KAAKq6B,aAEzHr6B,KAAK+B,GAAGqG,OAAOotB,QAAQjmB,EAAO,CAC3B65B,KAAMppC,KAAKY,GACXkkC,MAAO9kC,KAAKq6B,UAElB,CACH,CACA,OAAOtzB,CACV,CAQA2hC,YAAYmf,EAAUxjD,GACnB,IAAI2jB,EAAQ3jB,EAAI4jB,MAAM,KACtB,GAAID,EAAM,IAAMhoB,KAAK8mC,UAAW,CAC7B,IAAIshB,EAAUpoD,KAAKooD,QAAQP,GAC3B,GAAIO,EAAc,KAAG,CAClB,IA2BOxiD,EAvBP,GAHIA,EADS5F,KAAK+B,GAAGgW,WAAW/X,KAAKq6B,UAClBtzB,QAAQC,GACjBA,EAAEpG,IAAMonB,EAAM,KACrB,GAEA,OAAIA,EAAM,GACApiB,EAAMoiB,EAAM,IAAIoyB,KAAKx0C,EAAOwiD,EAAc,OAKO,GAApD,CAAC,YAAa,eAAe/6C,QAAQzH,EAAMvB,KACrCuB,EAAM0a,OAAO8nC,EAAc,MACb,iBAAbxiD,EAAMvB,IAEX+jD,EAAc,KAAExiD,EAAMkB,aACtBshD,EAAc,KAAExiD,EAAM4qB,gBAGlB43B,EAAc,KAAExiD,EAAMkB,YAG/B,GAAgB,QAAZkhB,EAAM,GACd,OAAOogC,EAAc,KAAQ,KAO7B,GAHIxiD,EADS5F,KAAK+B,GAAGgW,WAAW/X,KAAKq6B,UAClBtzB,QAAQC,GACjBA,EAAEpG,IAAMonB,EAAM,KACrB,GAEA,OAAIA,EAAM,GACApiB,EAAMoiB,EAAM,IAAIoyB,KAAKx0C,EAAOwiD,EAAc,MAG1CA,EAAc,KAAExiD,EAAMkB,WAIzC,CACH,CACA,OAAO,IACV,CAQAwiC,qBACG,IAAInjB,EAAU,KAId,OAHInmB,KAAKq6B,WACNlU,EAAU,CAACnmB,KAAK+B,GAAGgW,WAAW/X,KAAKq6B,YAE/BlU,CACV,oBClMH,MAAMynC,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzC/G,SAAU,QAQV//C,OAAQ,CACL,cACA,aACA,cACA,eACA,gBACA,aAKHwE,KAAM,UAINlH,IAAK,kBAIL0pD,YAAa,QACbC,WAAY,QACZC,YAAa,MACbC,aAAc,MACdC,cAAe,OACfC,WAAW,GAGd3uD,EAAOC,QAAU,cAAoCkuD,EAClDjuD,YAAYqjB,EAAYiE,EAASliB,GAC9Bie,EAAWphB,KAAOohB,EAAWphB,MAAQ,UACrC9B,MACGkjB,EACAiE,EACAliB,EACA8oD,EAEN,CAGAnjC,kBACG,OAAOmjC,CACV,CAEAnjC,wBACG,MAAO,CACJtpB,MAAO,oBACP4oD,WAAY,kCAEZC,UAAW,8BACXjD,OAAQ,CACLplD,KAAM,kBAGNqlD,oBAAqB,yBAG9B,CAEAhhD,WAAW+c,GAoBR,GAnBAljB,MAAMmG,WAAW+c,GAEjBhjB,KAAK+tD,YACF/qC,EAAW+qC,aACXF,EAAsCE,YAEzC/tD,KAAKiuD,YACFjrC,EAAWirC,aACXJ,EAAsCI,YAEzCjuD,KAAKkuD,aACFlrC,EAAWkrC,cACXL,EAAsCK,aAEzCluD,KAAKmuD,cACFnrC,EAAWmrC,eACXN,EAAsCM,cAGrCnrC,EAAWgrC,WAAY,CACxB,IAAIK,EAAWrrC,EAAWgrC,WAAW/lC,MAAM,KACvCyzB,EAAW,IAAIn7B,KACnBm7B,EAAS4S,YAAYD,EAAS,IAC9B3S,EAAS6S,cAAcF,EAAS,IAChCruD,KAAKguD,WAAa,GAAGtS,EAASE,cAAcF,EAASI,cACxD,MACG97C,KAAKguD,WAAaH,EAAsCG,gBAGxB,IAAxBhrC,EAAWorC,UACnBpuD,KAAKouD,UAAYv6C,KAAK0D,MAAMyL,EAAWorC,WAEvCpuD,KAAKouD,UAAYP,EAAsCO,SAE7D,CAaAtoD,QACG,IAAI+D,EAAO/J,MAAMgG,QAejB,OAbA+D,EAAKkkD,YAAc/tD,KAAK+tD,YACxBlkD,EAAKokD,YAAcjuD,KAAKiuD,YACxBpkD,EAAKqkD,aAAeluD,KAAKkuD,aACzBrkD,EAAKskD,cAAgBnuD,KAAKmuD,cAG1BtkD,EAAKmkD,WAAahuD,KAAKguD,WACnBnkD,EAAKmkD,YAAcnkD,EAAKmkD,sBAAsBztC,OAC/C1W,EAAKmkD,WAAa,GAAGnkD,EAAKmkD,WAAWQ,iBAAiB3kD,EAAKmkD,WAAWlS,gBAGzEjyC,EAAKukD,UAAYpuD,KAAKouD,UAEfvkD,CACV,CAEA4kD,oBACG,IAIIC,EACAC,EACAC,EANAP,EAAWruD,KAAKguD,WAAW/lC,MAAM,KAEjC4mC,EAASR,EAAS,GAClBS,EAAOT,EAAS,GAMpB,OAAQruD,KAAK+tD,aACV,IAAK,QACFW,EAAM,IACNC,EAAQ,IACRC,EAA8B,WAApB5uD,KAAKiuD,YAA2B,MAAQ,IAClD,MACH,IAAK,SACFS,EAAM,IACNC,EAAQ,IACRC,EAAU5uD,KAAKkuD,aACf,MACH,IAAK,UACFQ,EAAM1uD,KAAKmuD,cACXQ,EAAQ,IACRC,EAAU,IAIhB,MAAO,KAAaC,KAAUC,KAAQJ,KAAOC,KAASC,KACzD,oBC5JH,IAAI3yB,EAAY,EAAQ,OAwKxBx8B,EAAOC,QAvKP,cAAuBu8B,EACpBt8B,YAAYqjB,EAAY+rC,EAAsBC,EAAQ5lB,EAAMrnC,GACzDjC,QAGKqN,MAAMC,QAAQ2hD,KAChBA,EAAuB,CAACA,IAG3B/uD,KAAK+uD,qBAAuBA,EAE5B/uD,KAAKiF,OAAS+pD,EAASA,EAAO/pD,OAAS,KAOnC+pD,GAAUA,EAAOC,YAAWjvD,KAAKiF,OAAS+pD,EAAOC,WAErDjvD,KAAKgvD,OAASA,EACdhvD,KAAKopC,KAAOA,EAMZppC,KAAK+B,GAAKA,EACV/B,KAAKmrB,KAAO,KAEZnrB,KAAK0rD,eAAe1oC,EACvB,CAKAksC,WAAWlsC,GAAa,CAExB0oC,eAAe1oC,GAsCZ,GA3BAhjB,KAAKqE,IAAMrE,KAAKL,YAAY0E,KAAO,KAGnCrE,KAAK4V,OAASoN,EAAWpN,QAAU,CAAC,EAKpC5V,KAAKq6B,SAAWrX,EAAWqX,UAAY,KAGnCr6B,KAAKq6B,WAAUr6B,KAAKiF,OAASjF,KAAKmvD,aAAanvD,KAAKq6B,WAExDr6B,KAAKkvD,WAAWlsC,GAGZhjB,KAAKq6B,WAAar6B,KAAKiF,QACxBjF,KAAK+B,GAAGqG,OAAOC,UACZ,IAAIC,MACD,6DAA6DtI,KAAKq6B,aAErE,CACGrX,aACAqX,SAAUr6B,KAAKq6B,WAIpBrX,EAAWmI,KAAM,CAClB,IAAIikC,EAAS,KAMb,IAJCpvD,KAAKqvD,WAAarvD,KAAKL,YAAY0vD,WAAWprD,SAASqrD,IACjDA,EAAGjrD,MAAQ2e,EAAWmI,KAAK9mB,MAAK+qD,EAASE,EAAE,IAG9CF,EAAQ,CAET,MAAMG,EAAO,IAAIH,EAAOpsC,EAAWmI,KAAMnrB,KAAMA,KAAKopC,KAAMppC,KAAK+B,IAE/D/B,KAAKmrB,KAAOokC,CACf,CACH,CACH,CAUAJ,aAAarqB,GACV,OAAO9kC,KAAK+B,GAAGokB,SAASL,IACrB,MAAM0pC,EAAc,IAAI1pC,EAAE1kB,SAE1B,OAEG0kB,EAAEllB,KAAOkkC,GAAwC,IAA/B0qB,EAAYniD,QAAQy3B,EACxC,IACD,EACN,CAQA2qB,iCACG,MAAMC,EACH1vD,KAAKopC,KAAKniB,QAAQ6hB,kBAAkB9oC,KAAKopC,OAAS,GAC/CumB,EAAe,CAAC,EAUtB,OARAD,EAA2BzrD,SAAS+C,IAC7BA,EAAEpB,MACH+pD,EAAa3oD,EAAEpB,MAAMhF,IAAMoG,EAE3B2oD,EAAa3oD,EAAE3C,KAAO2C,CACzB,IAGI2oD,CACV,CAUAC,aAAaC,GAAO,CAQpB/pD,QACG,MAAMgS,EAAM,CACTzT,IAAKrE,KAAKL,YAAY0E,IAEtBuR,OAAQ5V,KAAK4V,OAGbykB,SAAUr6B,KAAKiF,QAAQrE,IAAM,MAOhC,OAJIZ,KAAKmrB,OACNrT,EAAIqT,KAAOnrB,KAAKmrB,KAAKrlB,SAGjBgS,CACV,oBCtKH,MAAMg4C,EAAO,EAAQ,OACfT,EAAY,EAAQ,OAMpBU,EAAuB,CAC1B,CACGnuD,KAAM,mBACNuF,KAAM,SAIZ,MAAM6oD,UAAqBF,EACxBnwD,YAAYqjB,EAAYgsC,EAAQ5lB,EAAMrnC,GACnCjC,MAAMkjB,EAAY+sC,EAAsBf,EAAQ5lB,EAAMrnC,EACzD,EAOHiuD,EAAa3rD,IAAM,OACnB2rD,EAAa5uD,MAAQ,OACrB4uD,EAAaX,UAAYA,EAEzB5vD,EAAOC,QAAUswD,mBC5BjB,MAGMC,EAAkB,CAarBvE,eAAgB,SAAU1oC,EAAYomB,EAAMrnC,GACzC,IAAKihB,EAAY,OAAO,KAExB,MAAMktC,EAAc,GAMpB,OAJAD,EAAgBE,MAAMlsD,SAASmsD,IACxBA,EAAG/rD,MAAQ2e,EAAW3e,KAAK6rD,EAAY5rD,KAAK8rD,EAAG,IAG3B,IAAvBF,EAAY/pD,OAGA,IAAI+pD,EAAY,GAAGltC,EAAYomB,EAAMrnC,GAGvC,IACjB,EAMAouD,MArCW,CADG,EAAQ,SAwCzB1wD,EAAOC,QAAUuwD,mBCtCjB,MAAMH,EAAO,EAAQ,OAMfT,EAAY,CADH,EAAQ,QAGjBU,EAAuB,CAC1B,CACGnuD,KAAM,aACNuF,KAAM,SAIZ,MAAMkpD,UAAuBP,EAC1BnwD,YAAYqjB,EAAYomB,EAAMrnC,GAE3BjC,MAAMkjB,EAAY+sC,EAAsB,KAAM3mB,EAAMrnC,EACvD,CAKAmtD,WAAWlsC,GACR,IAAKhjB,KAAKiF,QAAUjF,KAAK4V,OAAQ,CAC9B,MAAM06C,EAAatwD,KAAK+uD,qBAAqBjiC,MAAM+iC,GAC3B,eAAdA,EAAKjuD,OAGX0uD,IACDtwD,KAAKq6B,SAAWr6B,KAAK4V,OAAO06C,EAAWnpD,MACvCnH,KAAKiF,OAASjF,KAAKmvD,aAAanvD,KAAKq6B,WAGnCr6B,KAAKiF,QACPjF,KAAKuwD,eAAe,qBAAsB,CACvCl2B,SAAUr6B,KAAKq6B,UAGxB,CACH,CAEAv0B,QACG,MAAMgS,EAAMhY,MAAMgG,QAIlB,IAAKgS,EAAIuiB,UAAYr6B,KAAK4V,OAAQ,CAC/B,MAAM06C,EAAatwD,KAAK+uD,qBAAqBjiC,MAAM+iC,GAC3B,eAAdA,EAAKjuD,OAGX0uD,IAAYx4C,EAAIuiB,SAAWr6B,KAAK4V,OAAO06C,EAAWnpD,MACzD,CAEA,OAAO2Q,CACV,EAGHu4C,EAAehsD,IAAM,SACrBgsD,EAAejvD,MAAQ,SACvBivD,EAAehB,UAAYA,EAE3B5vD,EAAOC,QAAU2wD,mBClEjB,MAAMG,EAAW,EAAQ,KACnBC,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAExBjxD,EAAOC,QAAU,CAAC8wD,EAAUC,EAAQC,oBCDpC,MAAMC,EAAe,EAAQ,MACvBC,EAAgB,EAAQ,KACxBC,EAAc,EAAQ,OAE5B,MAAMC,UAAyBH,EAExBtB,gBACD,IAAI0B,EAAY,GAEhB,MAAMnrD,EAAQ5F,KAAK4F,OAAS5F,KAAKiF,OAAO8I,UAAU/N,KAAKs6B,UAAY,KAGnE,OAAQ10B,GAAOvB,KAEZ,IAAK,gBACF,GAAgC,SAA5BuB,EAAMQ,SAASa,SAAqB,CAIrC8pD,EAFgB,EAAQ,OAIxB,KACH,CAGAA,EAAY/wD,KAAKgvD,OAAOrvD,YAAY0vD,UAAUvmD,QAC1CkoD,GACEA,EAAS3sD,MAAQrE,KAAKL,YAAY0E,KAClC2sD,EAAS3sD,MAAQusD,EAAcvsD,MAGrC,MAEH,QAEG0sD,EAAY/wD,KAAKgvD,OAAOrvD,YAAY0vD,UAAUvmD,QAC1CkoD,GAAaA,EAAS3sD,MAAQwsD,EAAYxsD,MAMpD,OAAO0sD,CACV,EAGHD,EAAiBzsD,IAAM,YACvBysD,EAAiB1vD,MAAQ,gCACzB0vD,EAAiBzB,UAAY,GAE7B5vD,EAAOC,QAAUoxD,mBCpDjB,MAAMG,EAAc,EAAQ,OAE5B,MAAMC,UAAwBD,GAE9BC,EAAgB7sD,IAAM,WACtB6sD,EAAgB9vD,MAAQ,oBACxB8vD,EAAgB7B,UAAY,GAG5B5vD,EAAOC,QAAUwxD,mBCVjB,MAAMpB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACGnuD,KAAM,eACNuF,KAAM,WAIZ,MAAMgqD,UAA0BrB,EAC7BnwD,YAAYqjB,EAAYgsC,EAAQ5lB,EAAMrnC,GACnCjC,MAAMkjB,EAAY+sC,EAAsBf,EAAQ5lB,EAAMrnC,GAKtD/B,KAAKL,YAAY0vD,UAAYL,EAAOrvD,YAAY0vD,SACnD,EAOH8B,EAAkB9sD,IAAM,SACxB8sD,EAAkB/vD,MAAQ,qBAC1B+vD,EAAkB9B,UAAY,GAG9B5vD,EAAOC,QAAUyxD,mBC9BjB1xD,EAAOC,QAAU,CACd,EAAQ,OACR,EAAQ,MACR,EAAQ,yBCFX,MAAMowD,EAAO,EAAQ,OACfsB,EAAU,EAAQ,OAMxB,MAAMC,UAAyBvB,EAC5BnwD,YAAYqjB,EAAYgsC,EAAQ5lB,EAAMrnC,GACnCjC,MAAMkjB,EAAY,GAAIgsC,EAAQ5lB,EAAMrnC,EACvC,EAOHsvD,EAAiBhtD,IAAM,QACvBgtD,EAAiBjwD,MAAQ,0BACzBiwD,EAAiBhC,UAAY+B,EAE7B3xD,EAAOC,QAAU2xD,mBCrBjB,MAAMvB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACGnuD,KAAM,eACNuF,KAAM,YAIZ,MAAMmqD,UAAyBxB,EAC5BnwD,YAAYqjB,EAAYgsC,EAAQ5lB,EAAMrnC,GACnCjC,MAAMkjB,EAAY+sC,EAAsBf,EAAQ5lB,EAAMrnC,EACzD,CAMA2pD,eAAe1oC,GAIZhjB,KAAKL,YAAY0vD,UAAYrvD,KAAKgvD,OAAOrvD,YAAY0vD,UAKrDrvD,KAAKs6B,QAAUtX,EAAWsX,QAC1Bt6B,KAAK4F,MAAQ5F,KAAKiF,QAAQ8I,UAAU/N,KAAKs6B,SAkBrCtX,EAAWuuC,cACZvxD,KAAKivD,UAAYjvD,KAAKmvD,aAAansC,EAAWuuC,cAEjDzxD,MAAM4rD,eAAe1oC,EACxB,CAEAld,QACG,MAAMgS,EAAMhY,MAAMgG,QAElB,GAAI9F,KAAKs6B,QACNxiB,EAAIwiB,QAAUt6B,KAAKs6B,QAEft6B,KAAKivD,YAAWn3C,EAAIy5C,YAAcvxD,KAAKivD,UAAUruD,QACjD,CACJkX,EAAIwiB,QAAUt6B,KAAK4V,OAAOhQ,OAAS,KAEnC,MAAMA,EAAQ5F,KAAKiF,OAAO8I,UAAU+J,EAAIwiB,SAEpC10B,GAAO+6B,eAAc7oB,EAAIy5C,YAAc3rD,EAAMgB,eAAehG,GACnE,CAEA,OAAOkX,CACV,EAGHw5C,EAAiBjtD,IAAM,YACvBitD,EAAiBlwD,MAAQ,gCACzBkwD,EAAiBjC,UAAY,GAE7B5vD,EAAOC,QAAU4xD,mBC5EjB,MAAMxB,EAAO,EAAQ,OAEfC,EAAuB,CAC1B,CACGnuD,KAAM,YACNuF,KAAM,eAIZ,MAAMqqD,UAAwB1B,EAC3BnwD,YAAYqjB,EAAYgsC,EAAQ5lB,EAAMrnC,GACnCjC,MAAMkjB,EAAY+sC,EAAsBf,EAAQ5lB,EAAMrnC,GAGlD/B,KAAKyxD,YACNroB,EAAKuiB,mBAAmB3rD,MACxBA,KAAK0xD,YAAa,EAExB,CAMAhG,eAAe1oC,GAIZhjB,KAAKL,YAAY0vD,UAAYrvD,KAAKgvD,OAAOrvD,YAAY0vD,UAErDvvD,MAAM4rD,eAAe1oC,GAErBhjB,KAAKyxD,UAAYzuC,EAAWyuC,WAAazxD,KAAK4V,OAAO+7C,UACxD,CAEA7rD,QACG,MAAMgS,EAAMhY,MAAMgG,QAIlB,OAFAgS,EAAI25C,UAAYzxD,KAAKyxD,WAAazxD,KAAK4V,OAAO+7C,WAEvC75C,CACV,CAEA8zC,iBAAiBhrD,EAAIQ,GAQlB,IAAIwE,EAAQ,KAUZ,MAHgC,kBAA5B5F,KAAKgvD,QAAQppD,OAAOvB,MACrBuB,EAAQ5F,KAAKgvD,OAAOppD,OAEhB,CACJvB,IAAK,GAAGzD,KAAMZ,KAAKyxD,WAAazxD,KAAK4V,OAAO+7C,aAC5CvwD,MAAO,GAAGA,MAAUpB,KAAKyxD,WAAazxD,KAAK4V,OAAO+7C,aAClD/rD,MAAOA,EACPX,OAAQjF,KAAKiF,OACb4U,KAAK,EAEX,EAGH23C,EAAgBntD,IAAM,WACtBmtD,EAAgBpwD,MAAQ,oBACxBowD,EAAgBnC,UAAY,GAG5B5vD,EAAOC,QAAU8xD,mBCrFjB,MAAMI,EAAe,EAAQ,OAEvBC,EAA4B,CAC/BxtD,IAAK,cACLkH,KAAM,WACNumD,SAAU,gBAGPC,EAA6C,CAChDC,WAAY,KACZ3iC,MAAO,KACP4iC,YAAa,aACblV,SAAU,YACVmV,WAAW,EACXlxD,MAAO,KAGVvB,EAAOC,QAAU,cAAoCkyD,EAClDjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBovB,EAEvB,CAEAnnC,gBACG,OAAOmnC,CACV,CAEAnnC,uBACG,OAAOqnC,CACV,CAYA9rD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGuB,iBAA7BA,EAAOS,SAAS8rD,YACxBlyD,KAAKoG,SAAS8rD,UAAYr+C,KAAK0D,MAAM5R,EAAOS,SAAS8rD,YAEzB,MAA3BlyD,KAAKoG,SAAS8rD,YACflyD,KAAKoG,SAAS8rD,UACXH,EAA2CG,WAGjDlyD,KAAKoG,SAASpF,MAAQskB,SACnB3f,EAAOS,SAASpF,OACb+wD,EAA2C/wD,MAEpD,oBC7DH,MAAM4wD,EAAe,EAAQ,OAEvBO,EAAe,EAAQ,OAEvBC,EAA4B,CAC/B/tD,IAAK,cAILkH,KAAM,SAINumD,SAAU,gBAMPO,EAA6C,CAChDL,WAAY,KAKZM,kBAAmB,GAInBL,YAAa,aAIbjxD,MAAO,EAIPuxD,YAAa,IAuBhB9yD,EAAOC,QAAU,cAAoCkyD,EAClDjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiB2vB,EAEvB,CAOA1nC,gBACG,OAAO0nC,CACV,CAQA1nC,uBACG,OAAO2nC,CACV,CAYApsD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQskB,SACnBtlB,KAAKoG,SAASpF,OAASqxD,EAA2CrxD,MAExE,CAEIwxD,iBACD,IAAIvtD,EAASjF,KAAK2rB,gBAAgBD,WAClC,GAAKzmB,EAUL,OARwB,MAApBjF,KAAKyyD,cACNzyD,KAAKyyD,YAAc,IAAIN,GAG1BnyD,KAAKyyD,YAAYC,SAAS1yD,MAC1BA,KAAKyyD,YAAYE,aAAa3yD,KAAKoG,SAASmsD,aAC5CvyD,KAAKyyD,YAAYztD,WAAWC,GAErBjF,KAAKyyD,WACf,CAEAG,iBAAiBC,GACVA,IAAa1lD,MAAMC,QAAQylD,KAC5BA,EAAW,CAACA,IAGfA,EAAS5uD,SAASib,IACflf,KAAKwyD,YAAYM,WAAW,CAAEjpD,KAAMqV,EAAIrV,MAAQqV,EAAKhV,KAAMlK,MAAO,GAExE,CAEA+yD,cAAcF,GAKX,GAJIA,IAAa1lD,MAAMC,QAAQylD,KAC5BA,EAAW,CAACA,KAGV7yD,KAAKwyD,WAAY,OAAO/iD,QAAQC,UAErC,IAAIy3C,EAAQ,GAQZ,OANA0L,EAAS5uD,SAASib,IACfioC,EAAM7iD,KACHtE,KAAKwyD,WAAWvrC,QAAQ,CAAEpd,KAAMqV,EAAIrV,MAAQqV,EAAKhV,KAAMlK,OACzD,IAGGyP,QAAQ4R,IAAI8lC,EACtB,oBCrJH,MAAMyK,EAAe,EAAQ,OAEvBoB,EAA0C,CAC7ChB,WAAY,KACZpsD,MAAO,KAEP5E,MAAO,IACPD,OAAQ,IACRkyD,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,eAAgB,SAChBC,gBAAgB,EAEhBC,YAAa,KACbC,WAAY,KACZC,SAAU,KACVC,QAAS,MAGNC,EAAiB,CACpBrvD,IAAK,WACLkH,KAAM,QACNumD,SAAU,YAGbryD,EAAOC,QAAU,cAAiCkyD,EAC/CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOsoC,CACV,CAYA/sD,WAAWN,GACR7F,MAAMmG,WAAWN,QAGiB,IAAvB3F,KAAKoG,SAASpF,MACtBhB,KAAKoG,SAASpF,MAAQskB,SAAStlB,KAAKoG,SAASpF,OAE7ChB,KAAKoG,SAASpF,MAAQgyD,EAAwChyD,WAE9B,IAAxBhB,KAAKoG,SAASrF,OACtBf,KAAKoG,SAASrF,OAASukB,SAAStlB,KAAKoG,SAASrF,QAE9Cf,KAAKoG,SAASrF,OAASiyD,EAAwCjyD,OAElE,IACGf,KAAKoG,SAAS6sD,UAAYp/C,KAAK0D,MAAMvX,KAAKoG,SAAS6sD,UAItD,CAHE,MAAO5oD,GACNrK,KAAKoG,SAAS6sD,UACXD,EAAwCC,SAC9C,CACA,IACGjzD,KAAKoG,SAAS8sD,SAAWr/C,KAAK0D,MAAMvX,KAAKoG,SAAS8sD,SAIrD,CAHE,MAAO7oD,GACNrK,KAAKoG,SAAS8sD,SACXF,EAAwCE,QAC9C,CACA,IACGlzD,KAAKoG,SAAS+sD,WAAat/C,KAAK0D,MAAMvX,KAAKoG,SAAS+sD,WAIvD,CAHE,MAAO9oD,GACNrK,KAAKoG,SAAS+sD,WACXH,EAAwCG,UAC9C,CACAnzD,KAAKoG,SAASgtD,eACXpzD,KAAKoG,SAASgtD,gBACdJ,EAAwCI,eAC3C,IACGpzD,KAAKoG,SAASitD,eAAiBx/C,KAAK0D,MACjCvX,KAAKoG,SAASitD,eAKpB,CAHE,MAAOhpD,GACNrK,KAAKoG,SAASitD,eACXL,EAAwCK,cAC9C,CACH,CAMAM,gBACG,MAAO,EACV,CAEIC,iBACD,IAAIjnC,EAAK3sB,KAAK2rB,eACd,IAAKgB,EAAI,OAAO,KAEhB,IAAI7U,EAAM6U,EAAGjB,WACb,OAAK5T,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASR,QAAO,GAFrC,IAGpB,oBC9GH,MAAMiuD,EAAuB,EAAQ,OAE/BC,EAA2C,CAC9CC,SAAU,OACVC,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPV,EAAiB,CACpBrvD,IAAK,OACLkH,KAAM,aACNumD,SAAU,QAGbryD,EAAOC,QAAU,cAAkCm0D,EAChDl0D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOopC,CACV,CAYA7tD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS2tD,SACX/zD,KAAKoG,SAAS2tD,UACdD,EAAyCC,SAE5C/zD,KAAKoG,SAAS4tD,SAAW1uC,SACtBtlB,KAAKoG,SAAS4tD,UACXF,EAAyCE,UAI/Ch0D,KAAKoG,SAAS6tD,YAAc3uC,SACzBtlB,KAAKoG,SAAS6tD,aACXH,EAAyCG,aAG/Cj0D,KAAKoG,SAAS8tD,cAAgB5uC,SAC3BtlB,KAAKoG,SAAS8tD,eACXJ,EAAyCI,eAE/Cl0D,KAAKoG,SAAS+tD,UAAY7uC,SACvBtlB,KAAKoG,SAAS+tD,WACXL,EAAyCK,WAE/Cn0D,KAAKoG,SAASguD,SAAW9uC,SACtBtlB,KAAKoG,SAASguD,UACXN,EAAyCM,UAG/Cp0D,KAAKo8B,UAAUp8B,KAAMA,KAAM,CAAC,aAC/B,CAMA2zD,gBACG,MAAO,EACV,oBCjFH,MAAME,EAAuB,EAAQ,OAE/BQ,EAA0C,CAC7CC,QAAS,MACTC,UAAW,SACXP,SAAU,EAEVjzD,OAAQ,IACRmzD,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPV,EAAiB,CACpBrvD,IAAK,MACLkH,KAAM,YACNumD,SAAU,OAGbryD,EAAOC,QAAU,cAAiCm0D,EAC/Cl0D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAO2pC,CACV,CAYApuD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASkuD,QACXt0D,KAAKoG,SAASkuD,SACdD,EAAwCC,QAE3Ct0D,KAAKoG,SAASmuD,UACXv0D,KAAKoG,SAASmuD,WACdF,EAAwCE,UAE3Cv0D,KAAKoG,SAAS4tD,SAAW1uC,SACtBtlB,KAAKoG,SAAS4tD,UACXK,EAAwCL,UAI9Ch0D,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QAAUszD,EAAwCtzD,QAGnEf,KAAKoG,SAAS8tD,cAAgB5uC,SAC3BtlB,KAAKoG,SAAS8tD,eACXG,EAAwCH,eAE9Cl0D,KAAKoG,SAAS+tD,UAAY7uC,SACvBtlB,KAAKoG,SAAS+tD,WACXE,EAAwCF,WAE9Cn0D,KAAKoG,SAASguD,SAAW9uC,SACtBtlB,KAAKoG,SAASguD,UACXC,EAAwCD,UAG9Cp0D,KAAKo8B,UAAUp8B,KAAMA,KAAM,CAAC,YAC/B,CAMA2zD,gBACG,MAAO,EACV,oBCrFH,MAAMa,EAAkB,EAAQ,OAE1BC,EAAuC,CAC1CzC,WAAY,GACZ0C,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,aAAc,EACd5B,UAAW,EACX6B,cAAe,OACfhzD,WAAY,IACZf,OAAQ,IACRg0D,eAAgB,GAGbC,EAAsB,CACzB3wD,IAAK,QACLkH,KAAM,YACNumD,SAAU,SAGbryD,EAAOC,QAAU,cAA8B80D,EAC5C70D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBuyB,EACvD,CAEAtqC,gBACG,OAAOsqC,CACV,CAEAtqC,uBACG,OAAO+pC,CACV,CAYAxuD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS4rD,WACXhyD,KAAKoG,SAAS4rD,YACdyC,EAAqCzC,WAExChyD,KAAKoG,SAASsuD,YACX10D,KAAKoG,SAASsuD,aACdD,EAAqCC,YAExC10D,KAAKoG,SAASuuD,YACX30D,KAAKoG,SAASuuD,aACdF,EAAqCE,YAExC30D,KAAKoG,SAASwuD,aACX50D,KAAKoG,SAASwuD,cACdH,EAAqCG,aAExC50D,KAAKoG,SAASyuD,aAAevvC,SAC1BtlB,KAAKoG,SAASyuD,cACXJ,EAAqCI,cAG3C70D,KAAKoG,SAAS6sD,UAAY3tC,SACvBtlB,KAAKoG,SAAS6sD,WACXwB,EAAqCxB,WAG3CjzD,KAAKoG,SAAS0uD,cACX90D,KAAKoG,SAAS0uD,eACdL,EAAqCK,cAExC90D,KAAKoG,SAAStE,WAAawjB,SACxBtlB,KAAKoG,SAAStE,YACX2yD,EAAqC3yD,YAG3C9B,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QAAU0zD,EAAqC1zD,QAGhEf,KAAKoG,SAAS2uD,eAAiBzvC,SAC5BtlB,KAAKoG,SAAS2uD,gBACXN,EAAqCM,gBAG3C/0D,KAAKo8B,UAAUp8B,KAAMA,KAAM,CAAC,eAC5BA,KAAKi1D,aACR,CAMAtB,gBACG,MAAMuB,EAAe,CAAC,QAAS,MAAO,MAAO,OAAQ,QAMrD,OALmBl1D,KAAK+E,YAAYyiB,UAEV1e,QAAQvF,GACxB2xD,EAAa7nD,QAAQ9J,EAAEwmC,SAAS1lC,MAAQ,GAGrD,CAEA8wD,aACG,MAAMxoC,EAAK3sB,KAAK2rB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAM7U,EAAM6U,EAAGjB,WACf,OAAK5T,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASuuD,cAAa,GAF3C,IAGpB,CAEAS,aACG,MAAMzoC,EAAK3sB,KAAK2rB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAM7U,EAAM6U,EAAGjB,WACf,OAAK5T,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASsuD,cAAa,GAF3C,IAGpB,CAEAW,cACG,MAAM1oC,EAAK3sB,KAAK2rB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAM7U,EAAM6U,EAAGjB,WACf,OAAK5T,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASwuD,eAAc,GAF5C,IAGpB,oBCzIH,MAAMf,EAAuB,EAAQ,OAE/ByB,EAA2C,CAC9CC,SAAU,OACVC,WAAY,OACZxB,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPV,EAAiB,CACpBrvD,IAAK,OACLkH,KAAM,aACNumD,SAAU,QAGbryD,EAAOC,QAAU,cAAkCm0D,EAChDl0D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAO4qC,CACV,CAYArvD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASmvD,SACXv1D,KAAKoG,SAASmvD,UACdD,EAAyCC,SAE5Cv1D,KAAKoG,SAASovD,WACXx1D,KAAKoG,SAASovD,YACdF,EAAyCE,WAE5Cx1D,KAAKoG,SAAS4tD,SAAW1uC,SACtBtlB,KAAKoG,SAAS4tD,UACXsB,EAAyCtB,UAI/Ch0D,KAAKoG,SAAS6tD,YAAc3uC,SACzBtlB,KAAKoG,SAAS6tD,aACXqB,EAAyCrB,aAG/Cj0D,KAAKoG,SAAS8tD,cAAgB5uC,SAC3BtlB,KAAKoG,SAAS8tD,eACXoB,EAAyCpB,eAE/Cl0D,KAAKoG,SAAS+tD,UAAY7uC,SACvBtlB,KAAKoG,SAAS+tD,WACXmB,EAAyCnB,WAE/Cn0D,KAAKoG,SAASguD,SAAW9uC,SACtBtlB,KAAKoG,SAASguD,UACXkB,EAAyClB,UAG/Cp0D,KAAKo8B,UAAUp8B,KAAMA,KAAM,CAAC,aAC/B,CAMA2zD,gBACG,MAAO,EACV,oBCtFH,MAAME,EAAuB,EAAQ,OAE/B4B,EAA0C,CAC7CC,QAAS,MACT1B,SAAU,EAEVjzD,OAAQ,IACR40D,cAAe,GACfzB,cAAe,IAGZR,EAAiB,CACpBrvD,IAAK,MACLkH,KAAM,YACNumD,SAAU,OAGbryD,EAAOC,QAAU,cAAiCm0D,EAC/Cl0D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAO+qC,CACV,CAYAxvD,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASsvD,QACX11D,KAAKoG,SAASsvD,SACdD,EAAwCC,QAE3C11D,KAAKoG,SAAS4tD,SAAW1uC,SACtBtlB,KAAKoG,SAAS4tD,UACXyB,EAAwCzB,UAI9Ch0D,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QAAU00D,EAAwC10D,QAGnEf,KAAKoG,SAASuvD,cAAgBrwC,SAC3BtlB,KAAKoG,SAASuvD,eACXF,EAAwCE,eAE9C31D,KAAKoG,SAAS8tD,cAAgB5uC,SAC3BtlB,KAAKoG,SAAS8tD,eACXuB,EAAwCvB,eAG9Cl0D,KAAKo8B,UAAUp8B,KAAMA,KAAM,CAAC,YAC/B,CAMA2zD,gBACG,MAAO,EACV,oBC3EH,MAAM/B,EAAe,EAAQ,OAEvBgE,EAAyC,CAC5C5D,WAAY,KACZ6D,WAAY,KACZC,cAAe,KACfC,WAAY,KACZh1D,OAAQ,IACRK,MAAO,IAIJsyD,EAAiB,CACpBrvD,IAAK,UACLkH,KAAM,WACNumD,SAAU,WAGbryD,EAAOC,QAAU,cAAgCkyD,EAC9CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOkrC,CACV,CAYA3vD,WAAWN,GACR7F,MAAMmG,WAAWN,GAKjB3F,KAAKoG,SAASrF,OAASukB,SAAStlB,KAAKoG,SAASrF,QAAU,EAC3D,CAMA4yD,gBACG,MAAO,EACV,CAEAqC,mBACG,MAAMC,EAAaj2D,KAAKk2D,WAClBC,EAAcn2D,KAAK+B,GAAG6Q,QAAQhC,WAGpC,GAAKqlD,EAEL,OAAOA,EAAWG,WAAW/rD,GAAMA,EAAE1H,QAAUwzD,IAAe,CACjE,CAEAD,WACG,OAAOl2D,KAAK+B,GAAG6Q,QAAQ/B,WAAW1C,KAAK9D,IAC7B,CACJzJ,GAAIyJ,EAAEuG,SACNjO,MAAO0H,EAAEuG,SACTylD,MAAOhsD,EAAE0G,YAGlB,CAEAulD,eACG,IAAI9jC,EAAKxyB,KAAK2rB,eACd,IAAK6G,EAAI,OAAO,KAEhB,IAAI1a,EAAM0a,EAAG9G,WACb,OAAK5T,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASyvD,aAAY,GAF1C,IAGpB,CAEAU,kBACG,IAAI/jC,EAAKxyB,KAAK2rB,eACd,IAAK6G,EAAI,OAAO,KAEhB,IAAI1a,EAAM0a,EAAG9G,WACb,OAAK5T,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAAS0vD,gBAAe,GAF7C,IAGpB,CAEAU,eACG,IAAIhkC,EAAKxyB,KAAK2rB,eACd,IAAK6G,EAAI,OAAO,KAEhB,IAAI1a,EAAM0a,EAAG9G,WACb,OAAK5T,EAEEA,EAAI/Q,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAAS2vD,aAAY,GAF1C,IAGpB,CAEAU,cACG,IAAIR,EAAaj2D,KAAKk2D,WAClBrlD,EAAW,GAEf,GAAKolD,EAUL,OARAA,EAAWhyD,SAAQ,CAACmK,EAAMrC,KACvB,IAAI2qD,EAAW,GACXtoD,EAAKioD,QACNK,EAAW,gCAAkCtoD,EAAKioD,OAErD,IAAIr7B,EAAO,CAAEp6B,GAAImL,EAAQ,EAAGpJ,MAAOyL,EAAKzL,MAAO0zD,MAAOK,GACtD7lD,EAASvM,KAAK02B,EAAK,IAEfnqB,CACV,CAEA7I,QACG,IAAIwqB,EAAKxyB,KAAK2rB,eACd,OAAK6G,EAIM,MADDA,EAAG9G,WACW,KAGZ8G,EAAGxqB,OACI,KARH,IAWnB,oBC1IH,MAAMwsD,EAAkB,EAAQ,OAE1BmC,EAAyB,CAC5B3E,WAAY,KACZ1oC,iBAAkB,CAAC,GAGhBoqC,EAAiB,CACpBrvD,IAAK,uBACLkH,KAAM,SACNumD,SAAU,yBAGbryD,EAAOC,QAAU,cAA6C80D,EAC3D70D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,GAEpD,MAAM3zD,EAAI,IAAI6V,IAAW5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,GAGvD,GAAI5V,KAAKknB,OAAO9T,GAAMA,aAAaohD,IAAiBruD,OAAS,EAAG,CAC7DnG,KAAKmnB,OAAS,GAGd,MAAMyvC,EAAU7xD,EAAYgkB,QACzB,CACG1kB,IAAKmwD,EAAgBzqB,SAAS1lC,IAC9BjD,MAAOrB,EAAE,MACToH,KAAM,KACNf,SAAU,CACPywD,WAAW,IAGjB9xD,EACA/E,MAGHA,KAAKmnB,OAAO7iB,KAAKsyD,GAGjB,MAAME,EAAY/xD,EAAYgkB,QAC3B,CACG1kB,IAAKmwD,EAAgBzqB,SAAS1lC,IAC9BjD,MAAOrB,EAAE,QACToH,KAAM,OACNf,SAAU,CACPywD,WAAW,IAGjB9xD,EACA/E,MAGHA,KAAKmnB,OAAO7iB,KAAKwyD,EACpB,CACH,CAEApsC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOisC,CACV,mBC/DH,MAAM/E,EAAe,EAAQ,OAEvBmF,EAAmD,CACtD/E,WAAY,KACZpsD,MAAO,MAGJ8tD,EAAiB,CACpBrvD,IAAK,sBACLkH,KAAM,SACNumD,SAAU,yBAGbryD,EAAOC,QAAU,cAA0CkyD,EACxDjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOqsC,CACV,CAYA9wD,WAAWN,GACR7F,MAAMmG,WAAWN,EACpB,CAMAguD,gBACG,MAAO,EACV,oBCrCH,MAAMqD,EAAS,EAAQ,OAMjBtD,EAAiB,CACpBrvD,IAAK,gBACLkH,KAAM,UACNumD,SAAU,aAGPmF,EAA8B,CACjCC,QAAS,EACTC,QAAS,GAGZ13D,EAAOC,QAAU,cAAkCs3D,EAOhDr3D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOusC,CACV,CAQAhxD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS8wD,QAAU5xC,SACrBtlB,KAAKoG,SAAS8wD,SAAWD,EAA4BC,cAGpB,IAAzBl3D,KAAKoG,SAAS+wD,SACtBn3D,KAAKoG,SAAS+wD,QAAQhpD,KAAI,SAAUgpD,GACjC,OAAO7xC,SAAS6xC,EACnB,IAG4B,MAA3Bn3D,KAAKoG,SAASywD,UACf72D,KAAKoG,SAASywD,UAAYhjD,KAAK0D,MAAMvX,KAAKoG,SAASywD,WAEnD72D,KAAKoG,SAASywD,WAAY,EAGA,MAAzB72D,KAAKoG,SAASgxD,QACfp3D,KAAKoG,SAASgxD,QAAUvjD,KAAK0D,MAAMvX,KAAKoG,SAASgxD,SAEjDp3D,KAAKoG,SAASgxD,SAAU,CAE9B,CAEAC,sBAEG,OAAOr3D,KAAKknB,QAAQvZ,MAAK,CAACC,EAAGC,IACtBD,EAAEjN,SAAS22D,GAAKzpD,EAAElN,SAAS22D,EAAU1pD,EAAEjN,SAASuM,EAAIW,EAAElN,SAASuM,EACvDU,EAAEjN,SAAS22D,EAAIzpD,EAAElN,SAAS22D,GAE5C,oBC3EH,IAAIv0C,EAAY,EAAQ,OAExB,MAAM2wC,EAAiB,CACpBrvD,IAAK,OACLkH,KAAM,kBACNumD,SAAU,qBACVyF,QAAS,IAGNC,EAAkC,CACrCp2D,MAAO,IAGV3B,EAAOC,QAAU,cAAyBqjB,EAMvCpjB,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM,CAAC,SAAUiF,EAAYhD,IAE7B/B,KAAKq1B,SAAW,GAGhBr1B,KAAKoE,SAAWq+B,GAAiBixB,EAEjC1zD,KAAK+E,YAAcA,EAEnB/E,KAAK+U,OAASA,GAAU,KAExB/U,KAAKy3D,gBAAiB,EAItBz3D,KAAKiG,WAAWN,EACnB,CAEA+kB,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAO8sC,CACV,CASA9sC,mBAAmB3lB,EAAagQ,GAG7B,OAFAvM,QAAQ+G,MAAM,qCAEPxK,EAAYgkB,QAChB,CAAE1kB,IAAKrE,KAAK+pC,SAAS1lC,KACrBU,EACAgQ,EAEN,CAEAymB,UACG,OAAOx7B,KAAKoE,SAASC,GACxB,CAEAqzD,WACG,OAAO13D,KAAKoE,SAASmH,IACxB,CAEAosD,UACG,OAAO33D,KAAKoE,SAASmzD,OACxB,CAUAzxD,QASG,IAAIgS,EAAMhY,MAAMgG,QAEZgI,EAAS,CACVlN,GAAIZ,KAAKY,GACTgB,KAAM5B,KAAK4B,MAAQ,OACnByC,IAAKrE,KAAKqE,IACVkH,KAAMvL,KAAKuL,KACXgsD,QAASv3D,KAAKu3D,QACdpwD,KAAMnH,KAAKmH,KACXf,SAAUpG,KAAK+B,GAAG2D,UAAU1F,KAAKoG,UAAY,CAAC,GAC9CwxD,aAAc53D,KAAK43D,aACnBzyC,aAAcrN,EAAIqN,cAcrB,OAVArX,EAAO+pD,SAAW73D,KAAKmnB,QAAU,IAAIhZ,KAAKiF,GAAMA,EAAExS,KAAIkI,QAAQlI,GAAOA,IAEjEZ,KAAKW,WAAUmN,EAAOnN,SAAWX,KAAKW,UAM1CmN,EAAOgqD,OAAS93D,KAAK83D,SAEdhqD,CACV,CAQA7H,WAAWN,GAkDR,GAjDA3F,KAAKY,GAAK+E,EAAO/E,GAIjBZ,KAAK4B,KAAO+D,EAAO/D,MAAQ,OAI3B5B,KAAKqE,IAAMsB,EAAOtB,KAAOrE,KAAKw7B,UAK9Bx7B,KAAKuL,KAAO5F,EAAO4F,MAAQvL,KAAK03D,WAKhC13D,KAAKu3D,QAAU5xD,EAAO4xD,SAAWv3D,KAAK23D,UAEtC33D,KAAKmH,KAAOxB,EAAOwB,KAOnBxB,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCpG,KAAKoB,MAAQuE,EAAOvE,OAASuE,EAAOS,SAAShF,OAAS,UAEtDpB,KAAKoG,SAAWT,EAAOS,UAAY,CAAC,EAKpCpG,KAAKoG,SAASrF,OAASukB,SAAStlB,KAAKoG,SAASrF,QAAU,GAExDf,KAAK43D,aAAejyD,EAAOiyD,cAAgB,CAAC,EAQ5C93D,MAAMmG,WAAWN,IAIZ3F,KAAKmH,MAAQgG,MAAMC,QAAQpN,KAAKmlB,cAClC,IAAK,IAAI9R,EAAI,EAAGA,EAAIrT,KAAKmlB,aAAahf,OAAQkN,IAK3C,GAJS,GAALA,IAEDrT,KAAKmH,KAAOnH,KAAKmlB,aAAa9R,GAAGjS,OAEM,MAAtCpB,KAAKmlB,aAAa9R,GAAGipB,cAAuB,CAE7Ct8B,KAAKmH,KAAOnH,KAAKmlB,aAAa9R,GAAGjS,MACjC,KACH,CAKY,WAAdpB,KAAKoB,OACFpB,KAAK+U,SACN/U,KAAKoB,MAAQpB,KAAK+U,OAAO3T,MAAQ,IAAMpB,KAAKoE,SAASC,KAI3D,IAAI6iB,EAAQ,IACXvhB,EAAOkyD,SAAW,IAAI5zD,SAASrD,IAC7B,IAAI6gB,EAAMzhB,KAAK+B,GAAGsiB,eAAezjB,GAC7B6gB,EACDyF,EAAM5iB,KAAKtE,KAAK+E,YAAYgkB,QAAQtH,EAAKzhB,KAAK+E,YAAa/E,OAE3DA,KAAK+B,GAAGqG,OAAOotB,QACZ,IAAIltB,MACD,eAAetI,KAAK+E,YAAYoC,SAASnH,KAAK+E,YAAYnE,YAAYZ,KAAKmH,SAASnH,KAAKY,+BAA+BA,MAE3H,CACG0O,QAAQ,kDACR1O,MAGT,IAEHZ,KAAKmnB,OAASD,EAGdlnB,KAAKW,SAAWgF,EAAOhF,UAAY,CAAC,EAEb,MAAnBX,KAAKW,SAASuM,IAAWlN,KAAKW,SAASuM,EAAIoY,SAAStlB,KAAKW,SAASuM,IAC/C,MAAnBlN,KAAKW,SAAS22D,IAAWt3D,KAAKW,SAAS22D,EAAIhyC,SAAStlB,KAAKW,SAAS22D,IAEtEt3D,KAAKW,SAASo3D,GAAKzyC,SAAStlB,KAAKW,SAASo3D,IAAM,GAChD/3D,KAAKW,SAASq3D,GAAK1yC,SAAStlB,KAAKW,SAASq3D,IAAM,EACnD,CAEAF,SACG,OAAsB,MAAf93D,KAAK+U,QAAkB/U,KAAK+U,QAAU/U,KAAK+E,WACrD,CASAkzD,aACG,IAAIC,EAAU,GACVC,EAAUn4D,KAKd,IAFAk4D,EAAQrrB,QAAQsrB,IAERA,EAAQL,UAAYK,EAAQpjD,QACjCmjD,EAAQrrB,QAAQsrB,EAAQpjD,QAExBojD,EAAUA,EAAQpjD,OAGrB,OAAOmjD,CACV,CAUA9yC,qBAAqBlW,GAClB,IAAImW,GAAY,EAEZ+yC,EAAkBjkD,OAAOC,KAAKpU,KAAK43D,eAAiB,GAOxD,OANC1oD,GAAS,IAAIjL,SAAS2L,IAChBwoD,EAAgB/qD,QAAQuC,EAAEC,MAAQD,IAAM,IACzCyV,GAAY,EACf,IAGIA,CACV,CASAgzC,gBAEG,IAAIC,EAAc,EAElB,GAAIt4D,KAAK+E,YAAY6e,gBAAiB,CAEnC,IAAI20C,GAAkB,EAEmC,GAArDjzC,SAAStlB,KAAK+E,YAAY8e,eAAe0B,UAE1CvlB,KAAK+B,GAAG6Q,QAAQ1D,QAAQjL,SAASuhB,IAE3BxlB,KAAK+E,YAAY8e,eAAe2B,KAAKnY,QAClCmY,EAAK5kB,IAAM4kB,EAAK3V,OACd,IAGL0oD,GAAkB,EAClBD,EAAc,EACjB,IAKFC,GACuD,GAAxDjzC,SAAStlB,KAAK+E,YAAY8e,eAAeyiC,aAItCtmD,KAAK+E,YAAY8e,eAAe0iC,QAAQl5C,QACrCrN,KAAK+B,GAAG6Q,QAAQ/C,OAAS,KACvB,IAGL0oD,GAAkB,EAClBD,EAAc,GAMjBt4D,KAAK43D,cACLzjD,OAAOC,KAAKpU,KAAK43D,cAAczxD,OAAS,IACvCoyD,GAGDv4D,KAAK+B,GAAG6Q,QAAQ1D,QAAQjL,SAASuhB,IAC9B,IAAIgzC,EAAcx4D,KAAK43D,aAAapyC,EAAK5kB,IAAM4kB,EAAK3V,MAChD2oD,GAAelzC,SAASkzC,GAAeF,IAExCA,EAAchzC,SAASkzC,GAAY,GAG/C,MACGF,EAAc,EAGjB,OAAOA,CACV,CAMAG,sBAIG,IAHA,IAAIvuD,EAAO,KAEPiuB,EAAOn4B,KACQ,QAAZm4B,EAAK9zB,MAAkB8zB,EAAK2/B,UAAY3/B,EAAKpjB,QACjDojB,EAAOA,EAAKpjB,OAOf,MAJgB,QAAZojB,EAAK9zB,MACN6F,EAAOiuB,GAGHjuB,CACV,CAOAwuD,wBAIG,IAHA,IAAIC,EAAS,KAETxgC,EAAOn4B,KACQ,UAAZm4B,EAAK9zB,MAAoB8zB,EAAK2/B,UAAY3/B,EAAKpjB,QACnDojB,EAAOA,EAAKpjB,OAOf,MAJgB,UAAZojB,EAAK9zB,MACNs0D,EAASxgC,GAGLwgC,CACV,CAEAC,WAAWC,GAIR,GAHgB,MAAZA,IAAkBA,EAAW,KAAM,GAGnC74D,KAAK83D,SACN,OAAO93D,KAIV,IADA,IAAI84D,EAAa94D,KAAK+U,OAEnB+jD,IACmB,QAAlBA,EAAWz0D,MAAkBw0D,EAASC,KAEvCA,EAAaA,EAAW/jD,OAG3B,OAAO+jD,CACV,CAEAC,WAGG,IAFA,IAAIC,EAAWh5D,KAAK44D,cAEZI,EAASlB,UACdkB,EAAWA,EAASJ,aAGvB,OAAOI,CACV,CASA5wC,aACG,OAAIpoB,KAAK+U,OACC/U,KAAK+U,OAAOkkD,UAAYj5D,KAAKY,GAE7BZ,KAAK+E,YAAYwjB,UAAYvoB,KAAKY,EAE/C,CAOAq4D,UACG,OAAOj5D,KAAKooB,aAAe,UAC9B,CAQIuD,qBACD,IAAIqmC,GAAchyD,KAAKoG,UAAY,CAAC,GAAG4rD,WACvC,IAAKA,EAAY,CACd,GACG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,QAAS,UAAU3kD,QACxDrN,KAAKqE,MACH,EACN,CAEC,GAAgB,QAAZrE,KAAKqE,KAAiBrE,KAAKkD,eAAgB,OAAO,KAEtD,GAAIlD,KAAKy3D,eAAgB,OAAO,KAEhC,IAAIyB,EAAY,IAAI5wD,MACjB,yCAAyCtI,KAAKqE,oCAEjDrE,KAAK+B,GAAGqG,OAAOotB,QAAQ0jC,EAAW,CAC/Bx4D,KAAMV,KACNoG,SAAUpG,KAAKoG,UAErB,MAEuD,GAAhD,CAAC,OAAQ,iBAAiBiH,QAAQrN,KAAKqE,MACxCmE,QAAQC,KACL,yDAAyDzI,KAAKqE,QAIvE,OAAO,IACV,CAEA,IAAIsoB,EAAK3sB,KAAK+B,GAAG+pB,mBAAmBkmC,GACpC,IAAKrlC,EAAI,CACN,IAAIwsC,EAAU,IAAI7wD,MACf,QAAQtI,KAAKoB,UAAUpB,KAAKY,mDAE/BZ,KAAK+B,GAAGqG,OAAOotB,QAAQ2jC,EAAS,CAC7Bz4D,KAAMV,KACNgyD,cAEN,CACA,OAAOrlC,CACV,CAiBAysC,mBAAmBC,EAAQf,GAOxB,OAN6B,GAAzBhzC,SAASgzC,GACNt4D,KAAK43D,aAAayB,WAAgBr5D,KAAK43D,aAAayB,GAExDr5D,KAAK43D,aAAayB,GAAUf,EAGxBt4D,KAAK4H,MAAK,GAAO,EAC3B,CAiBAsf,MAAMpe,EAAS,MAAM,GAAM+d,GAAO,GAC/B,IAAI/Y,EAAS,GAEb,OAAK9N,KAAKmnB,QAAUnnB,KAAKmnB,OAAOhhB,OAAS,IAGrC2C,GAAU+d,GACX/Y,EAASA,EAAOyZ,OAAOvnB,KAAKmnB,OAAOre,OAAOA,IAE1C9I,KAAKmnB,OAAOljB,SAASmP,IAClB,IAAIgU,EAAWhU,EAAE8T,MAAMpe,EAAQ+d,GAC3BO,GAAYA,EAASjhB,OAAS,IAC/B2H,EAASA,EAAOyZ,OAAOH,GAC1B,KAGHtZ,EAAS9N,KAAKmnB,OAAOre,OAAOA,IAboBgF,CAiBtD,CAQAib,QAAQpjB,EAAQZ,EAAagQ,GAC1B,OAAO/U,KAAK+E,YAAYgkB,QACrBpjB,EACAZ,GAAe/E,KAAK+E,YACpBgQ,GAAU/U,KAEhB,CAUAs5D,YAAY54D,GAET,OADA8H,QAAQ+G,MAAM,sCACPvP,KAAKu5D,WAAW74D,EAC1B,CAUA64D,WAAW74D,GACR,IAAIogC,EAAU9gC,KAAKmnB,OAAOhhB,OAK1B,OAJAnG,KAAKmnB,OAASnnB,KAAKknB,OAAM,SAAU9T,GAChC,OAAOA,EAAExS,IAAMF,EAAKE,EACvB,IAEIZ,KAAKmnB,OAAOhhB,OAAS26B,EACf9gC,KAAK4H,OAGR6H,QAAQC,SAClB,CAUA8pD,WAAW94D,GAKR,OAHGV,KAAKknB,OAAM,SAAU9T,GAClB,OAAOA,EAAExS,IAAMF,EAAKE,EACvB,IAAGuF,OAAS,EAMRsJ,QAAQC,WAJZ1P,KAAKmnB,OAAO7iB,KAAK5D,GACVV,KAAK4H,OAIlB,CAWA6xD,YAAYC,EAAQC,GACjB,IAAInyB,EAAOxnC,KAAKmnB,OAAOivC,WAAWhjD,GAAMA,EAAExS,IAAM84D,IAChD,KAAIlyB,EAAO,GAMX,OAHAxnC,KAAKmnB,OAAOhb,OAAOwtD,EAAY,EAAG35D,KAAKmnB,OAAOhb,OAAOq7B,EAAM,GAAG,IAGvDxnC,KAAK4H,MAAK,EACpB,CAaAgN,UAIG,OAFA5U,KAAKs1B,YAAW,GAET7lB,QAAQC,UACX8E,MAAK,KAKH,IAAIolD,EAAiB,GACjBnyC,EAAWznB,KAAKknB,QAQpB,OAPAlnB,KAAKmnB,OAAS,GAIdM,EAASxjB,SAASmP,IACfwmD,EAAet1D,KAAK8O,EAAEwB,UAAU,IAE5BnF,QAAQ4R,IAAIu4C,EAAe,IAEpCplD,MAAK,KAEH,GAAIxU,KAAK+U,SAAW/U,KAAKylB,MACtB,OAAOzlB,KAAK+U,OAAOwkD,WAAWv5D,KACjC,IAEFwU,MAAK,IACI1U,MAAM8U,YAEfJ,MAAK,KACHxU,KAAKwP,KAAK,YAAY,GAE/B,CAQA5H,OACG,OAAO6H,QAAQC,UACX8E,MAAK,IAEI1U,MAAM8H,SAEf4M,MAAK,KAEH,GAAIxU,KAAK+U,SAAW/U,KAAKylB,MAGtB,OAAOzlB,KAAK+U,OAAOykD,WAAWx5D,KACjC,IAEFwU,MAAK,IACIxU,MAEhB,CAiBA4xB,SAASwD,GACN,GAAKA,GAAQA,EAAIvD,SAAYuD,EAAIrD,SAAjC,CAEA,IAAInF,EAAS5sB,KAAKq1B,SAASvI,MAAMziB,GACvBA,EAAEwnB,SAAWuD,EAAIvD,SAAWxnB,EAAEynB,WAAasD,EAAItD,cAIpDlF,GAAUA,EAAOzmB,OAAS,KAE5BnG,KAAKq1B,SAAS/wB,KAAK,CAChButB,QAASuD,EAAIvD,QACbC,UAAWsD,EAAItD,UACfC,SAAUqD,EAAIrD,WAIjBqD,EAAIvD,QAAQzvB,GAAGgzB,EAAItD,UAAWsD,EAAIrD,UAhBY,CAkBpD,CASAuD,WAAWzO,GACJA,GACD7mB,KAAKknB,QAAQjjB,SAASmP,IACnBA,EAAEkiB,WAAWzO,EAAK,IAIpB7mB,KAAKq1B,UAAYr1B,KAAKq1B,SAASlvB,OAAS,GACzCnG,KAAKq1B,SAASpxB,SAASoG,IACpBA,EAAEwnB,QAAQ0D,eAAelrB,EAAEynB,UAAWznB,EAAE0nB,SAAS,GAG1D,CAkBA+C,MAAM+kC,EAAW9kD,EAAQ5S,EAAU,CAAC,GACjC03D,EAAYA,GAAa,CAAC,EAG1B,IAAI53D,EAASjC,KAAK8F,QAGlB,CAAC,QAAS,SAAS7B,SAAS6+B,WAClB7gC,EAAO6gC,EAAK,IAIlB9iC,KAAK85D,wBACL95D,KAAK85D,yBAA2B,IAAI71D,SAAS6+B,IACvC7gC,GAAUA,EAAOmE,WAClBnE,EAAOmE,SAAS08B,GAAQ+2B,EAAU53D,EAAOmE,SAAS08B,IAAM,IAKjE,IAAIh1B,EAAS9N,KAAK+oB,QAAQ9mB,EAAQjC,KAAK+E,YAAagQ,GA+BpD,OA1BGjH,EAAOlN,GAFI,MAAVmU,EAEW,KAEA8kD,EAAU/rD,EAAOlN,KAAOZ,KAAK+B,GAAG8N,OAI3C7P,KAAKylB,QAAUtjB,EAAQ43D,iBACxBjsD,EAAO2W,OAAS,GAChBzkB,KAAKylB,QAAQxhB,SAAS6d,IACnB,IAAIk4C,EAAgBl4C,EAAEgT,MAAM+kC,EAAW/rD,EAAQ3L,GAC/C63D,EAAcjlD,OAASjH,EAEvBA,EAAO2W,OAAOngB,KAAK01D,EAAc,KAKnCh6D,KAAKknB,QAAU/kB,EAAQ83D,iBACxBnsD,EAAOqZ,OAAS,GAChBnnB,KAAKknB,QAAQjjB,SAASmP,IACnB,IAAI8mD,EAAa9mD,EAAE0hB,MAAM+kC,EAAW/rD,EAAQ3L,GAE5C2L,EAAOqZ,OAAO7iB,KAAK41D,EAAW,KAI7BpsD,CACV,CAsBAqsD,KAAKN,EAAW9kD,EAAQ5S,EAAU,CAAC,GAChC03D,EAAYA,GAAa,CAAC,EAG1B,IAAI53D,EAASjC,KAAK8F,QAGlB,CAAC,UAAW,WAAW7B,SAAS6+B,WACtB7gC,EAAO6gC,EAAK,IAIlB9iC,KAAK85D,wBACL95D,KAAK85D,yBAA2B,IAAI71D,SAAS6+B,IACvC7gC,GAAUA,EAAOmE,WAClBnE,EAAOmE,SAAS08B,GAAQ+2B,EAAU53D,EAAOmE,SAAS08B,IAAM,IAKjE,IAAIh1B,EAAS9N,KAAK+E,YAAYgkB,QAAQ9mB,EAAQjC,KAAK+E,YAAagQ,GAuBhE,OApBAjH,EAAOiH,OAASA,GAAU/U,KAAK+U,OAM5BjH,EAAOlN,GAHI,MAAVmU,EAGW,KAEA8kD,EAAU/rD,EAAOlN,KAAOZ,KAAK+B,GAAG8N,OAI/B,QAAZ7P,KAAKqE,MACNyJ,EAAO3G,KACJhF,GAASi4D,SACT,GAAGtsD,EAAO3G,eAAenH,KAAK+B,GAAG8N,OAAOqD,MAAM,EAAG,KAEpDpF,EAAO1M,MAAQe,GAASi4D,SAAW,GAAGtsD,EAAO1M,kBAGzCqO,QAAQC,UACX8E,MAAK,KAEH,IAAI6lD,EAAW,GA2Bf,OAzBIr6D,KAAKykB,SAAWtiB,EAAQ43D,iBACzBjsD,EAAO2W,OAAS,GAChBzkB,KAAKylB,QAAQxhB,SAAS6d,IAGfA,EAAEg2C,UACH93D,KAAK+E,YAAY0f,OAAOngB,KAAK,CAAE1D,GAAIi5D,EAAU/3C,EAAElhB,MAElDy5D,EAAS/1D,KACNwd,EACIq4C,KAAKN,EAAW/rD,EAAQ3L,GACxBqS,MAAMwlD,IACJA,EAAcjlD,OAASjH,EAEvB9N,KAAK+E,YAAY0f,OAASzkB,KAAK+E,YAAY0f,OAAO3b,QAC9CwxD,GAAOA,EAAG15D,IAAMi5D,EAAU/3C,EAAElhB,MAIhCkN,EAAO2W,OAAOngB,KAAK01D,EAAc,IAEzC,KAIAvqD,QAAQ4R,IAAIg5C,EAAS,IAE9B7lD,MAAK,KAEH,IAAI6lD,EAAW,GAsBf,OApBIr6D,KAAKmnB,SAAWhlB,EAAQ83D,iBACzBnsD,EAAOqZ,OAAS,GAChBnnB,KAAKknB,QAAQjjB,SAASmP,IACnBinD,EAAS/1D,KAGN8O,EAAE+mD,KAAKN,EAAW/rD,EAAQ3L,GAASqS,MAAM0lD,IAInCpsD,EAAOqZ,OAAOre,QAAQyxD,GAAOA,EAAG35D,IAAMs5D,EAAWt5D,KAC7CuF,OAAS,GAEb2H,EAAOqZ,OAAO7iB,KAAK41D,EACtB,IAEL,KAIAzqD,QAAQ4R,IAAIg5C,EAAS,IAE9B7lD,MAAK,IAEI1G,EAAOlG,SAEhB4M,MAAK,IACI1G,GAEhB,oBCz8BH,MAAM8jD,EAAe,EAAQ,OAEvB4I,EAA4C,CAC/CxI,WAAY,KACZpsD,MAAO,KACP60D,SAAU,WACVC,WAAY,EACZC,SAAU,GAGPjH,EAAiB,CACpBrvD,IAAK,cACLkH,KAAM,SACNumD,SAAU,4BAGbryD,EAAOC,QAAU,cAAmCkyD,EACjDjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAO8vC,CACV,CAYAv0D,WAAWN,GACR7F,MAAMmG,WAAWN,EACpB,CAMAguD,gBACG,MAAO,EACV,oBCjDH,MAAMiH,EAAe,EAAQ,OAEvBC,EAA0C,CAC7CC,OAAQ,EACRxH,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,QAAS,IAGNsH,EAAyB,CAC5B12D,IAAK,WACLkH,KAAM,KACNumD,SAAU,aAGbryD,EAAOC,QAAU,cAAiCk7D,EAM/Cj7D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBs4B,EAEvB,CAEArwC,gBACG,OAAOqwC,CACV,CAEArwC,uBACG,OAAOmwC,CACV,CAYA50D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS00D,OAASx1C,SACpBtlB,KAAKoG,SAAS00D,QAAUD,EAAwCC,QAEnE96D,KAAKoG,SAASktD,YACXtzD,KAAKoG,SAASktD,aACduH,EAAwCvH,YAC3CtzD,KAAKoG,SAASotD,SACXxzD,KAAKoG,SAASotD,UACdqH,EAAwCrH,SAC3CxzD,KAAKoG,SAASmtD,WACXvzD,KAAKoG,SAASmtD,YACdsH,EAAwCtH,WAC3CvzD,KAAKoG,SAASqtD,QACXzzD,KAAKoG,SAASqtD,SACdoH,EAAwCpH,OAC9C,CAEAiF,wBACG,IAAIsC,EAAW,KAEX7iC,EAAOn4B,KACX,KAAmB,YAAZm4B,EAAK9zB,MAAsB8zB,EAAK2/B,UAAY3/B,EAAKpjB,QACrDojB,EAAOA,EAAKpjB,OAOf,MAJgB,YAAZojB,EAAK9zB,MACN22D,EAAW7iC,GAGP6iC,CACV,oBClFH,MAAM3kC,EAAmB,EAAQ,OAE3B4kC,EAAgD,CAAC,EAEjDC,EAA+B,CAClC72D,IAAK,iBACLkH,KAAM,iBACNumD,SAAU,iCAGbryD,EAAOC,QAAU,cAAuC22B,EAMrD12B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBy4B,EAEvB,CAEAxwC,gBACG,OAAOwwC,CACV,CAEAxwC,uBACG,OAAOuwC,CACV,CAMAtH,gBACG,MAAO,EACV,oBCtCH,MAAMt9B,EAAmB,EAAQ,OAE3B8kC,EAAwC,CAC3CC,SAAU,IAGP1H,EAAiB,CACpBrvD,IAAK,gBACLkH,KAAM,UACNumD,SAAU,gCAGbryD,EAAOC,QAAU,cAAsC22B,EAMpD12B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOywC,CACV,oBC7BH,MAAM3G,EAAkB,EAAQ,OAE1B6G,EAAuB,CAC1Bh3D,IAAK,SACLkH,KAAM,cACNumD,SAAU,UAGPqJ,EAAwC,CAC3CnJ,WAAY,KACZiB,WAAW,EACX6B,cAAe,OACfhzD,WAAY,IACZf,OAAQ,GAGXtB,EAAOC,QAAU,cAA+B80D,EAM7C70D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiB44B,EACvD,CAEA3wC,gBACG,OAAO2wC,CACV,CAEA3wC,uBACG,OAAOywC,CACV,CAQAl1D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0uD,cACX90D,KAAKoG,SAAS0uD,eACdqG,EAAsCrG,cAGzC90D,KAAKoG,SAAS6sD,UAAYp/C,KAAK0D,MACD,MAA3BvX,KAAKoG,SAAS6sD,UACTjzD,KAAKoG,SAAS6sD,UACdkI,EAAsClI,WAI9CjzD,KAAKoG,SAAStE,WAAawjB,SACxBtlB,KAAKoG,SAAStE,YACXq5D,EAAsCr5D,YAE5C9B,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QAAUo6D,EAAsCp6D,OAEpE,CAMA4yD,gBACG,IAAIuB,EAAe,CAAC,QAAS,QAG7B,OAFmBl1D,KAAK+E,YAAYyiB,UAEf1e,QAAQvF,GACnB2xD,EAAa7nD,QAAQ9J,EAAEwmC,SAAS1lC,MAAQ,GAErD,CAEAi3D,iBAAiB11D,EAAO21D,GACrB,GAAa,MAAT31D,EAAe,OAEnB,IAAIijB,EAAUjjB,EAAM41D,kBAAkBC,YAAYz7D,KAAK+E,YAAa/E,MACpE,OAAe,MAAX6oB,GAGJA,EAAQziB,SAAWyiB,EAAQziB,UAAY,CAAC,EACxCyiB,EAAQziB,SAASsE,QAAU9E,EAAMhF,GACjCioB,EAAQziB,SAAStE,WACd9B,KAAKoG,SAAStE,YACdq5D,EAAsCr5D,WAIzC+mB,EAAQziB,SAASmpB,MAAQ3pB,EAAM2pB,MAI/B1G,EAAQloB,SAAS22D,EAAIiE,EAGrBv7D,KAAKmnB,OAAO7iB,KAAKukB,GAEVA,QApBP,CAqBH,oBCtGH,MAAMwN,EAAmB,EAAQ,OAE3BqlC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCt3D,IAAK,eACLkH,KAAM,eACNumD,SAAU,+BAGbryD,EAAOC,QAAU,cAAqC22B,EAMnD12B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBk5B,EAEvB,CAEAjxC,gBACG,OAAOixC,CACV,CAEAjxC,uBACG,OAAOgxC,CACV,CAMA/H,gBACG,MAAO,EACV,oBCvCH,MAAMt9B,EAAmB,EAAQ,OAE3BulC,EAA6C,CAChD76D,OAAQ,GACRC,MAAO,KAGJ66D,EAA4B,CAC/Bx3D,IAAK,cACLkH,KAAM,QACNumD,SAAU,8BAGbryD,EAAOC,QAAU,cAAoC22B,EAMlD12B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBo5B,EAEvB,CAEAnxC,gBACG,OAAOmxC,CACV,CAEAnxC,uBACG,OAAOkxC,CACV,CAYA31D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QACX66D,EAA2C76D,QAEjDf,KAAKoG,SAASpF,MAAQskB,SACnBtlB,KAAKoG,SAASpF,OAAS46D,EAA2C56D,MAExE,CAMA2yD,gBACG,MAAO,EACV,oBCjEH,MAAM/B,EAAe,EAAQ,OAE7BnyD,EAAOC,QAAU,cAAmCkyD,EAKjD4J,kBACG,IAAIM,EAAa,KAEb3jC,EAAOn4B,KACX,MACIm4B,EAAK2/B,UACN3/B,EAAKpjB,QACO,UAAZojB,EAAK9zB,KACO,YAAZ8zB,EAAK9zB,KAEL8zB,EAAOA,EAAKpjB,OAOf,MAJgB,UAAZojB,EAAK9zB,KAA+B,YAAZ8zB,EAAK9zB,MAC9By3D,EAAa3jC,GAGT2jC,CACV,CAEAl2D,QACG,IAAI41D,EAAkBx7D,KAAKw7D,kBAC3B,GAAuB,MAAnBA,EAAyB,OAAO,KAEpC,IAAI7vC,EAAiB6vC,EAAgB7vC,eACrC,GAAsB,MAAlBA,EAAwB,OAAO,KAEnC,IAAI1mB,EAAS0mB,EAAeD,WAC5B,GAAc,MAAVzmB,EAAgB,OAAO,KAE3B,IAAIW,EAAQX,EAAO8B,QAAQqM,GAAMA,EAAExS,IAAMZ,KAAKoG,SAASsE,UAAS,GAQhE,OAJI9E,GAAS5F,KAAKoG,SAASmpB,QACxB3pB,EAAM2pB,MAAQvvB,KAAKoG,SAASmpB,OAGxB3pB,CACV,CAEAm2D,iBACG,IAAIC,EAAYh8D,KAAKw7D,kBACrB,IAAKQ,EAAW,OAAO,KAEvB,IAAIxpC,EAAKwpC,EAAUrwC,eACnB,IAAK6G,EAAI,OAAO,KAEhB,IAAI5sB,EAAQ5F,KAAK4F,QACjB,IAAKA,EAAO,OAAO,KAEnB,IAAIgpB,EAAW4D,EAAGjG,YAClB,OAAIqC,EAAiBA,EAAShpB,EAAMkB,YACxB,IACf,oBC7DH,MAAMuvB,EAAmB,EAAQ,OAE3B4lC,EAA4C,CAC/Cl7D,OAAQ,GAGLm7D,EAA2B,CAC9B73D,IAAK,aACLkH,KAAM,OACNumD,SAAU,6BAGbryD,EAAOC,QAAU,cAAmC22B,EAMjD12B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBy5B,EAEvB,CAEAxxC,gBACG,OAAOwxC,CACV,CAEAxxC,uBACG,OAAOuxC,CACV,CAYAh2D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QACXk7D,EAA0Cl7D,OAEnD,CAMA4yD,gBACG,MAAO,EACV,mBC7DH,MAAMt9B,EAAmB,EAAQ,OAE3B8kC,EAAwC,CAAC,EAEzCgB,EAA2B,CAC9B93D,IAAK,aACLkH,KAAM,UACNumD,SAAU,6BAGbryD,EAAOC,QAAU,cAAmC22B,EAMjD12B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiB05B,EAEvB,CAEAzxC,gBACG,OAAOyxC,CACV,CAEAzxC,uBACG,OAAOywC,CACV,CAMAxH,gBACG,MAAO,EACV,oBCvCH,MAAM/B,EAAe,EAAQ,OAEvBwK,EAA6C,CAChDC,YAAa,gBACbrK,WAAY,KACZhxD,MAAO,EACP+7C,SAAU,GACVuf,UAAW,cACXpsD,SAAU,KACVqsD,kBAAmB,wBACnBC,eAAgB,QAGb9I,EAAiB,CACpBrvD,IAAK,cACLkH,KAAM,cACNumD,SAAU,gBAGbryD,EAAOC,QAAU,cAAoCkyD,EAClDjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAO0xC,CACV,CAcAt2D,QACG9F,KAAKw8B,YAAYx8B,KAAMA,KAAM,CAAC,YAAa,gBAE3C,IAAI8X,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI+/C,QAAU,GACP//C,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQskB,SACnBtlB,KAAKoG,SAASpF,OAASo7D,EAA2Cp7D,OAGrEhB,KAAKo8B,UAAUp8B,KAAMA,KAAM,CAAC,YAAa,eAC5C,CAEAy8D,YAGGj0D,QAAQC,KACL,IAAIH,MACD,4EAWN,MAAMrD,EAASjF,KAAK2rB,eAAeD,WAI7B9lB,EAAQX,EAASA,EAAO8B,SAAS,GAAK,KAE5C,MAAO,gBAAgB9B,GAAQrE,MAAMgF,GAAOhF,MAC/C,CAEA87D,cACG,MAAO,SAAS18D,KAAKoG,SAAS22C,UACjC,CAEI5sC,mBACD,OACGnQ,KAAKoG,SAAS8J,UACdksD,EAA2ClsD,QAEjD,CAEI2V,sBACD,IAAImsC,GAAchyD,KAAKoG,UAAY,CAAC,GAAG4rD,WACvC,IAAKA,EAAY,MAAO,GAExB,IAAI2K,EAAS3K,EAAW/pC,MAAM,MAAQ,GAEtC,OAAOjoB,KAAK+B,GAAG8jB,iBAAiB2M,GAAOmqC,EAAOtvD,QAAQmlB,EAAG5xB,KAAO,KAAM,EACzE,oBChHH,MAAMo2D,EAAS,EAAQ,OAEjB4F,EAA4C,CAC/CC,aAAa,EACbC,UAAW,GACXC,eAAe,EACfC,YAAa,GACbC,cAAc,EACdC,WAAY,GACZC,YAAa,KACbC,UAAW,QACXC,WAAW,GAGRC,EAA2B,CAC9Bj5D,IAAK,SAGLkH,KAAM,SAGNumD,SAAU,wBAIbryD,EAAOC,QAAU,cAAmCs3D,EACjDr3D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiB66B,EAEvB,CAEA5yC,gBACG,OAAO4yC,CACV,CAEA5yC,uBACG,OAAOkyC,CACV,CAMA92D,QAEG,IAAI0M,EAAS,GAYb,OAVIxS,KAAKoG,SAAS02D,WAAWtqD,EAAOlO,KAAK,aAErCtE,KAAKoG,SAAS42D,aAAaxqD,EAAOlO,KAAK,eAEvCtE,KAAKoG,SAAS82D,YAAY1qD,EAAOlO,KAAK,cAE1CtE,KAAKw8B,YAAYx8B,KAAKoG,SAAUpG,KAAKoG,SAAUoM,GAElC1S,MAAMgG,OAGtB,CAEAG,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB,IAAI6M,EAAS,GAETxS,KAAKoG,SAAS02D,WAAWtqD,EAAOlO,KAAK,aAErCtE,KAAKoG,SAAS42D,aAAaxqD,EAAOlO,KAAK,eAEvCtE,KAAKoG,SAAS82D,YAAY1qD,EAAOlO,KAAK,cAE1CtE,KAAKw8B,YAAYx8B,KAAKoG,SAAUpG,KAAKoG,SAAUoM,GAE/CxS,KAAKoG,SAASy2D,YAAchpD,KAAK0D,MAC9BvX,KAAKoG,SAASy2D,aACXD,EAA0CC,aAEhD78D,KAAKoG,SAAS22D,cAAgBlpD,KAAK0D,MAChCvX,KAAKoG,SAAS22D,eACXH,EAA0CG,eAEhD/8D,KAAKoG,SAAS62D,aAAeppD,KAAK0D,MAC/BvX,KAAKoG,SAAS62D,cACXL,EAA0CK,cAGhDj9D,KAAKoG,SAASi3D,UAAYxpD,KAAK0D,MAC5BvX,KAAKoG,SAASi3D,WACXT,EAA0CS,UAEnD,CAMA1J,gBACG,MAAO,EACV,oBCvGH,MAAMr9B,EAAiB,EAAQ,OAEzBinC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCn5D,IAAK,WACLkH,KAAM,iBACNumD,SAAU,0BAGbryD,EAAOC,QAAU,cAAqC42B,EACnD32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiB+6B,EAEvB,CAEA9yC,gBACG,OAAO8yC,CACV,CAEA9yC,uBACG,OAAO6yC,CACV,CAMA5J,gBACG,MAAO,EACV,oBClCH,MAAMr9B,EAAiB,EAAQ,OAEzBmnC,EAA6C,CAChDrC,SAAU,GACV9xC,iBAAkB,CAEfC,KAAM,MACNpI,MAAO,IAEV5U,WAAY,GAQZmxD,WAAY,IACZC,YAAa,KAGVC,EAA4B,CAC/Bv5D,IAAK,UACLkH,KAAM,UACNumD,SAAU,WAGbryD,EAAOC,QAAU,cAAoC42B,EAClD32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBm7B,EAEvB,CAEAlzC,gBACG,OAAOkzC,CACV,CAEAlzC,uBACG,OAAO+yC,CACV,CAYAx3D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASkjB,iBACXtpB,KAAKoG,SAASkjB,kBACdm0C,EAA2Cn0C,gBACjD,CAMAqqC,gBACG,MAAO,EACV,oBCrEH,MAAMa,EAAkB,EAAQ,OAC1Bl+B,EAAiB,EAAQ,OAEzB67B,EAAe,EAAQ,OACvB0L,EAAe,EAAQ,OAEvBC,EAAqB,CACxBz5D,IAAK,OACLkH,KAAM,WACNumD,SAAU,QAGPiM,EAAsC,CACzC/L,WAAY,KACZiB,WAAW,EACX6B,cAAe,OACfhzD,WAAY,IACZf,OAAQ,IACRi9D,aAAa,EACbC,aAAa,EACbC,aAAc,GACdC,SAAU,OAkBV5L,YAAa,GAab6L,YAAa,IAGhB3+D,EAAOC,QAAU,cAA6B80D,EAC3C70D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBq7B,EACvD,CAEApzC,gBACG,OAAOozC,CACV,CAEApzC,uBACG,OAAOqzC,CACV,CAYA93D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS0uD,cACX90D,KAAKoG,SAAS0uD,eACdiJ,EAAoCjJ,cAGvC90D,KAAKoG,SAAS6sD,UAAYp/C,KAAK0D,MACD,MAA3BvX,KAAKoG,SAAS6sD,UACTjzD,KAAKoG,SAAS6sD,UACd8K,EAAoC9K,WAE5CjzD,KAAKoG,SAAS43D,YAAcnqD,KAAK0D,MACD,MAA7BvX,KAAKoG,SAAS43D,YACTh+D,KAAKoG,SAAS43D,YACdD,EAAoCC,aAE5Ch+D,KAAKoG,SAAS63D,YAAcpqD,KAAK0D,MACD,MAA7BvX,KAAKoG,SAAS63D,YACTj+D,KAAKoG,SAAS63D,YACdF,EAAoCE,aAI5Cj+D,KAAKoG,SAAStE,WAAawjB,SACI,MAA5BtlB,KAAKoG,SAAStE,WACTi8D,EAAoCj8D,WACpC9B,KAAKoG,SAAStE,YAEtB9B,KAAKoG,SAASrF,OAASukB,SACI,MAAxBtlB,KAAKoG,SAASrF,OACTg9D,EAAoCh9D,OACpCf,KAAKoG,SAASrF,OAEzB,CAGAiE,WAAWC,GACRjF,KAAKkD,eAAiB+B,CACzB,CAMA0uD,gBACG,IAAIuB,EAAe,CAAC,QAAS,SAAU,SAAU,QAGjD,OAFmBl1D,KAAK+E,YAAYyiB,UAEf1e,QAAQvF,GACnB2xD,EAAa7nD,QAAQ9J,EAAEwmC,SAAS1lC,MAAQ,GAErD,CAWAg6D,gBAAgBv1D,GACb,MAAMw1D,EAAqBp3C,IACxB,IAAI6lC,EAAa,GAYjB,OAVA7lC,EAAMjjB,SAASmP,IACH,MAALA,IAEJ25C,EAAWzoD,KAAK8O,GAEZA,EAAE+T,QAAQhhB,SACX4mD,EAAaA,EAAWxlC,OAAO+2C,EAAkBlrD,EAAE+T,UACtD,IAGI4lC,CAAU,EAGpB,OAAI/sD,KAAKmnB,QAAQhhB,QAGA,MAAV2C,IACDA,EAAUqkD,GAASA,aAAgB72B,GAHhBgoC,EAAkBt+D,KAAKmnB,QAMxBre,OAAOA,IAErB,EAEb,CAEAy1D,eAAe34D,EAAO21D,GACnB,GAAa,MAAT31D,EAAJ,CAEA,IAAI44D,EAAiB54D,EAAM64D,gBAC3B,GAAsB,MAAlBD,EAAJ,CAEA,IAAI31C,EAAU21C,EAAe/C,YAAYz7D,KAAK+E,YAAa/E,MAC3D,GAAe,MAAX6oB,EAYJ,OATAA,EAAQziB,SAAWyiB,EAAQziB,UAAY,CAAC,EACxCyiB,EAAQziB,SAASsE,QAAU9E,EAAMhF,GAGhB,MAAb26D,IAAmB1yC,EAAQloB,SAAS22D,EAAIiE,GAG5Cv7D,KAAKmnB,OAAO7iB,KAAKukB,GAEVA,CAf2B,CAHT,CAmB5B,CAEI2pC,iBACD,IAAIvtD,EAASjF,KAAK2rB,eAAeD,WAUjC,OARwB,MAApB1rB,KAAKyyD,cACNzyD,KAAKyyD,YAAc,IAAIN,GAG1BnyD,KAAKyyD,YAAYC,SAAS1yD,MAC1BA,KAAKyyD,YAAYE,aAAa3yD,KAAKoG,SAASmsD,aAC5CvyD,KAAKyyD,YAAYztD,WAAWC,GAErBjF,KAAKyyD,WACf,CAEAG,iBAAiB7kC,GACd,OAAO/tB,KAAKwyD,WAAWM,WAAW,CAAEjpD,KAAMkkB,EAAS7jB,KAAMlK,MAC5D,CAEA+yD,cAAchlC,GAEX,OAAIA,IACY/tB,KAAK2rB,eAAeD,WACNmE,YAAY9B,GACAvQ,QAEpChV,QAAQ+G,MAAM,2BAA4B,CAAEwe,QAASA,IAC9Cte,QAAQkH,OAAO,IAAIrO,MAAM,8BAI/BtI,KAAKwyD,WAAWvrC,QAAQ,CAAEpd,KAAMkkB,EAAS7jB,KAAMlK,MACzD,CAEA0+D,cAAc3wC,GACX,IAAI9oB,EAASjF,KAAK2rB,eAAeD,WAE7BizC,EAAc,IAAId,EAKtB,OAJAc,EAAYjM,SAAS1yD,MACrB2+D,EAAYhM,aAAa3yD,KAAKoG,SAASg4D,aACvCO,EAAY35D,WAAWC,GAEhB05D,EAAY13C,QAAQ,CAAEpd,KAAMkkB,EAAS7jB,KAAMlK,MACrD,oBC5OH,MAAMs2B,EAAiB,EAAQ,OAEzBsoC,EAA4C,CAAC,EAE7CC,EAA2B,CAC9Bx6D,IAAK,cAELkH,KAAM,eAENumD,SAAU,wBAIbryD,EAAOC,QAAU,cAA+B42B,EAC7C32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBo8B,EAEvB,CAEAn0C,gBACG,OAAOm0C,CACV,CAEAn0C,uBACG,OAAOk0C,CACV,CAMAjL,gBACG,MAAO,EACV,oBCrCH,MAAMr9B,EAAiB,EAAQ,OAEzBwoC,EAAgD,CACnDC,YAAY,GAGTC,EAA+B,CAClC36D,IAAK,aACLkH,KAAM,WACNumD,SAAU,4BAGbryD,EAAOC,QAAU,cAAuC42B,EACrD32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBu8B,EAEvB,CAEAt0C,gBACG,OAAOs0C,CACV,CAEAt0C,uBACG,OAAOo0C,CACV,CAUAnL,gBACG,MAAO,EACV,oBCxCH,MAAMqD,EAAS,EAAQ,OAEjBiI,EAA2C,CAC9C3lB,SAAU,EACVl0C,QAAS,GAGZ3F,EAAOC,QAAU,cAAsCs3D,EAKpDtsC,uBACG,OAAOu0C,CACV,CAEAr5D,QACG,GAAI5F,KAAKoG,SAAS4R,SAAU,CACzB,IAAI/S,EAASjF,KAAK+B,GAAGgW,WAAW/X,KAAKoG,SAAS4R,UAC9C,OAAK/S,EAEEA,EAAO8I,UAAU/N,KAAKoG,SAASsE,SAFlB,IAGvB,CAAO,CACJ,IAGIzF,EAHAiF,EAAOlK,KAAKy4D,sBAChB,GAAY,MAARvuD,EAAc,OAAO,KAGzB,GAAIA,EAAKhH,eACN+B,EAASiF,EAAKhH,mBACV,CACJ,IAAIyoB,EAAiBzhB,EAAKyhB,eAC1B,GAAsB,MAAlBA,EAAwB,OAAO,KAEnC1mB,EAAS0mB,EAAeD,UAC3B,CAEA,OAAc,MAAVzmB,EAAuB,KAEfA,EAAO8I,UAAU/N,KAAKoG,SAASsE,QAE9C,CACH,oBCzCH,MAAM4rB,EAAiB,EAAQ,OAEzB4oC,EAA0C,CAC7Ct9D,KAAM,UAGHu9D,EAAyB,CAC5B96D,IAAK,OACLkH,KAAM,iBACNumD,SAAU,sBAGbryD,EAAOC,QAAU,cAAiC42B,EAC/C32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiB08B,EAEvB,CAEAz0C,gBACG,OAAOy0C,CACV,CAEAz0C,uBACG,OAAOw0C,CACV,CAMAvL,gBACG,MAAO,EACV,oBCpCH,MAAMr9B,EAAiB,EAAQ,OAEzB8oC,EAA4C,CAC/CC,UAAW,GAGRC,EAA2B,CAC9Bj7D,IAAK,YACLkH,KAAM,UACNumD,SAAU,wBAGbryD,EAAOC,QAAU,cAAmC42B,EACjD32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiB68B,EAEvB,CAEA50C,gBACG,OAAO40C,CACV,CAEA50C,uBACG,OAAO00C,CACV,CAcAt5D,QACG9F,KAAKw8B,YAAYx8B,KAAMA,KAAM,CAAC,QAAS,cAEvC,IAAI8X,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAIoP,MAAQ,GACLpP,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASi5D,UACXr/D,KAAKoG,SAASi5D,WACdD,EAA0CC,UAG7Cr/D,KAAKoG,SAASi5D,UAAY/5C,SAAStlB,KAAKoG,SAASi5D,UACpD,CAMA1L,gBACG,MAAO,EACV,oBC1EH,MAAM4L,EAAmB,EAAQ,OAE3BC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCp7D,IAAK,gBACLkH,KAAM,aACNumD,SAAU,0BAGbryD,EAAOC,QAAU,cAAiC6/D,EAC/C5/D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBg9B,EAEvB,CAEA/0C,gBACG,OAAO+0C,CACV,CAEA/0C,uBACG,OAAO80C,CACV,CAMA7L,gBACG,MAAO,EACV,oBClCH,MAAMr9B,EAAiB,EAAQ,OAEzBopC,EAAoD,CACvD99D,KAAM,cAGH+9D,EAA2B,CAC9Bt7D,IAAK,iBACLkH,KAAM,UACNumD,SAAU,gCAGbryD,EAAOC,QAAU,cAA2C42B,EACzD32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBk9B,EAEvB,CAEAj1C,gBACG,OAAOi1C,CACV,CAEAj1C,uBACG,OAAOg1C,CACV,CAMA/L,gBACG,MAAO,EACV,oBCpCH,MAAMr9B,EAAiB,EAAQ,OAEzBspC,EAAkD,CACrDh+D,KAAM,cAGHi+D,EAAyB,CAC5Bx7D,IAAK,eACLkH,KAAM,UACNumD,SAAU,8BAGbryD,EAAOC,QAAU,cAAyC42B,EACvD32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBo9B,EAEvB,CAEAn1C,gBACG,OAAOm1C,CACV,CAEAn1C,uBACG,OAAOk1C,CACV,CAMAjM,gBACG,MAAO,EACV,oBCpCH,MAAMr9B,EAAiB,EAAQ,OAEzBwpC,EAA6C,CAChDl+D,KAAM,UAGHm+D,EAA4B,CAC/B17D,IAAK,UACLkH,KAAM,WACNumD,SAAU,yBAGbryD,EAAOC,QAAU,cAAoC42B,EAClD32B,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MACG6F,EACAZ,EACAgQ,EACA0tB,GAAiBs9B,EAEvB,CAEAr1C,gBACG,OAAOq1C,CACV,CAEAr1C,uBACG,OAAOo1C,CACV,CAMAnM,gBACG,MAAO,EACV,oBCpCH,MAAM4L,EAAmB,EAAQ,OAE3BS,EAA0C,CAAC,EAE3CC,EAAiB,CACpB57D,IAAK,WACLkH,KAAM,UACNumD,SAAU,sBAGbryD,EAAOC,QAAU,cAAiC6/D,EAC/C5/D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBw9B,EACvD,CAEAv1C,gBACG,OAAOu1C,CACV,CAEAv1C,uBACG,OAAOs1C,CACV,CAMArM,gBACG,MAAO,EACV,oBC7BH,MAAM/B,EAAe,EAAQ,OAEvBsO,EAAuC,CAC1ClO,WAAY,GAKZmO,aAAc,GAKdC,iBAAkB,GAIlBC,eAAgB,GAIhBC,gBAAiB,GAIjBC,gBAAiB,GAIjBC,aAAc,IAMX9M,EAAiB,CACpBrvD,IAAK,QACLkH,KAAM,QACNumD,SAAU,SAGbryD,EAAOC,QAAU,cAA8BkyD,EAM5CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOw1C,CACV,CAQAj6D,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjBwO,OAAOC,KAAK8rD,GAAsCj8D,SAASoQ,IACxDrU,KAAKoG,SAASiO,GACXrU,KAAKoG,SAASiO,IAAM6rD,EAAqC7rD,EAAE,GAEpE,CAMAs/C,gBACG,MAAO,EACV,oBChFH,MAAM/B,EAAe,EAAQ,OAEvB6O,EAAsC,CACzCr/D,MAAO,GAKP4wD,WAAY,GAIZxvD,QAAS,GAITk+D,YAAa,EAIbC,WAAY,EAIZC,WAAY,EAKZC,YAAa,EAMbnsB,WAAY,EAIZosB,aAAc,EAWdxN,YAAa,GAIbC,WAAY,GAMZC,SAAU,GAIVC,QAAS,GAMTsN,UAAW,EAIX9gC,eAAgB,GAIhBC,aAAc,GAId8gC,eAAgB,GAIhBC,aAAc,GAKd53C,gBAAiB,CAGd4W,eAAgB,GAChBC,aAAc,GACd8gC,eAAgB,GAChBC,aAAc,IAEjBC,WAAY,CACTC,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAKpBtgE,OAAQ,EAKRugE,WAAY,EACZC,aAAc,EACdC,YAAa,EACbC,QAAS,GAGTh1D,aAAc,GAiBdi1D,UAAW,GAMRhO,EAAiB,CACpBrvD,IAAK,OACLkH,KAAM,QACNumD,SAAU,QAcb,SAAS6P,EAAgBC,EAAMh8D,QACF,IAAfg8D,EAAKh8D,GAIhBg8D,EAAKh8D,GAASg8D,EAAKh8D,IAAU66D,EAAoC76D,GAH9Dg8D,EAAKh8D,GAAS66D,EAAoC76D,EAIxD,CAYA,SAASi8D,EAAoBD,EAAMh8D,GAChC,IACGg8D,EAAKh8D,GAASiO,KAAK0D,MAAMqqD,EAAKh8D,GAGjC,CAFE,MAAOyE,GACNu3D,EAAKh8D,GAAS66D,EAAoC76D,EACrD,CACH,CAEAnG,EAAOC,QAAU,cAA6BkyD,EAM3CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAO+1C,CACV,CAYAx6D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjBg8D,EAAgB3hE,KAAKoG,SAAU,cAM/By7D,EAAoB7hE,KAAKoG,SAAU,WACnCy7D,EAAoB7hE,KAAKoG,SAAU,eACnCy7D,EAAoB7hE,KAAKoG,SAAU,cACnCy7D,EAAoB7hE,KAAKoG,SAAU,cACnCy7D,EAAoB7hE,KAAKoG,SAAU,eAEnCy7D,EAAoB7hE,KAAKoG,SAAU,cACnCy7D,EAAoB7hE,KAAKoG,SAAU,gBACnCy7D,EAAoB7hE,KAAKoG,SAAU,cACnCy7D,EAAoB7hE,KAAKoG,SAAU,gBACnCy7D,EAAoB7hE,KAAKoG,SAAU,eACnCy7D,EAAoB7hE,KAAKoG,SAAU,gBACnCy7D,EAAoB7hE,KAAKoG,SAAU,aAEnCpG,KAAKoG,SAAS86D,WACXlhE,KAAKoG,SAAS86D,YACdT,EAAoCS,WAEvC,IACGlhE,KAAKoG,SAAS86D,WAAWC,aAAettD,KAAK0D,MAC1CvX,KAAKoG,SAAS86D,WAAWC,aAK/B,CAHE,MAAO92D,GACNrK,KAAKoG,SAAS86D,WAAWC,aACtBV,EAAoCS,WAAWC,YACrD,CAEA,IACGnhE,KAAKoG,SAAS86D,WAAWG,gBAAkBxtD,KAAK0D,MAC7CvX,KAAKoG,SAAS86D,WAAWG,gBAK/B,CAHE,MAAOh3D,GACNrK,KAAKoG,SAAS86D,WAAWG,gBACtBZ,EAAoCS,WAAWG,eACrD,CASAM,EAAgB3hE,KAAKoG,SAAU,eAC/Bu7D,EAAgB3hE,KAAKoG,SAAU,YAC/Bu7D,EAAgB3hE,KAAKoG,SAAU,cAC/Bu7D,EAAgB3hE,KAAKoG,SAAU,WAC/By7D,EAAoB7hE,KAAKoG,SAAU,aAwBnC,IAAI07D,EAAW,CACZ,aACA,mBACA,iBACA,eACA,iBACA,gBAGC9hE,KAAKoG,SAASijB,iBACfy4C,EAAS79D,SAAS+C,IACVhH,KAAKoG,SAASY,KAChBhH,KAAKoG,SAASY,GAAKhH,KAAKoG,SAASijB,gBAAgBriB,GAAE,IAK5D86D,EAAS79D,SAAS+C,IACf26D,EAAgB3hE,KAAKoG,SAAUY,EAAE,IAIpChH,KAAKmnB,OAAS,EACjB,CAMAwsC,gBACG,MAAO,EACV,CAEAoO,YAAYn8D,EAAOqU,GAChB,IAAI+nD,GAAa,EAYjB,GARIhiE,KAAKoG,UAAU65B,gBAAkBr6B,EAAMkB,aAExC9G,KAAKoG,SAAS65B,eAAiB,GAE/B+hC,GAAa,GAIZhiE,KAAKoG,SAAS85B,cAAc/5B,OAAQ,CAErC,IAAI4F,EAAQ/L,KAAKoG,SAAS85B,aAAa7yB,QAAQzH,EAAMkB,YAEjDiF,GAAS,IACV/L,KAAKoG,SAAS85B,aAAa/zB,OAAOJ,EAAO,GAEzCi2D,GAAa,EAEnB,CAGA,GAAIhiE,KAAKoG,SAAS46D,gBAAgB76D,OAAQ,CAEvC,IAAI4F,EAAQ/L,KAAKoG,SAAS46D,eAAe3zD,QAAQzH,EAAMhF,IAEnDmL,GAAS,IACV/L,KAAKoG,SAAS46D,eAAe70D,OAAOJ,EAAO,GAE3Ci2D,GAAa,EAEnB,CAGA,GAAIhiE,KAAKoG,SAAS66D,cAAc96D,OAAQ,CAErC,IAAI4F,EAAQ/L,KAAKoG,SAAS66D,aAAa5zD,QAAQzH,EAAMhF,IAEjDmL,GAAS,IACV/L,KAAKoG,SAAS66D,aAAa90D,OAAOJ,EAAO,GAEzCi2D,GAAa,EAEnB,CAGA/nD,EAAG,KAAM+nD,EACZ,CAEAlI,wBACG,MAAO,CAAC,cAAe,aAAc,WAAY,UACpD,oBC5XH,MAAMlI,EAAe,EAAQ,OAEvBqQ,EAAuC,CAC1CllB,SAAU,GACV/7C,MAAO,IACPD,OAAQ,KAGL2yD,EAAiB,CACpBrvD,IAAK,QACLkH,KAAM,YACNumD,SAAU,SAGbryD,EAAOC,QAAU,cAA8BkyD,EAC5CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOu3C,CACV,CAYAh8D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASpF,MAAQskB,SACnBtlB,KAAKoG,SAASpF,OAASihE,EAAqCjhE,OAE/DhB,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QAAUkhE,EAAqClhE,OAEnE,oBC/CH,MAAM6wD,EAAe,EAAQ,OAEvBsQ,EAAwC,CAC3ClQ,WAAY,KAKZmQ,WAAY,GAKZC,sBAAuB,GAKvBC,wBAAyB,GAKzBC,WAAY,GAKZC,SAAU,IAWP7O,EAAiB,CACpBrvD,IAAK,SAILkH,KAAM,UAINumD,SAAU,UAMbryD,EAAOC,QAAU,cAA+BkyD,EAC7CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAztD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGZ3F,KAAKoG,SAASm8D,WAChBviE,KAAKoG,SAASm8D,SAAW,CAAE3hE,GAAI,GAAGZ,KAAKY,cAAeyD,IAAK,QAC3DrE,KAAKoG,SAASm8D,SAASl0D,KAAOrO,KAAKoG,SAASo8D,cAG/CxiE,KAAKyiE,aAAeziE,KAAK+B,GAAGk4B,iBAAiBj6B,KAAKoG,SAASm8D,SAC9D,CAEAz8D,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI1R,SAASm8D,SAAWviE,KAAKyiE,aAAa38D,QACnCgS,CACV,CAEA4S,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOw3C,CACV,oBCnFH,MAAMtQ,EAAe,EAAQ,OAEvB8Q,EAAuC,CAC1Cr0D,KAAM,GACNiS,OAAQ,EACR88C,UAAW,QAGR1J,EAAiB,CACpBrvD,IAAK,QACLkH,KAAM,OACNumD,SAAU,SAGbryD,EAAOC,QAAU,cAA8BkyD,EAM5CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOg4C,CACV,CAcA58D,QACG9F,KAAKw8B,YAAYx8B,KAAMA,KAAM,CAAC,QAAS,SAEvC,IAAI8X,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI+/C,QAAU,GACP//C,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAIjB3F,KAAKqO,KAAO1I,EAAO0I,MAAQ1I,EAAOS,SAASiI,MAAQ,QAEnDrO,KAAKoG,SAASka,OACXtgB,KAAKoG,SAASka,QAAUoiD,EAAqCpiD,OAChEtgB,KAAKoG,SAASg3D,UACXp9D,KAAKoG,SAASg3D,WACdsF,EAAqCtF,UAGxCp9D,KAAKmnB,OAAS,GAGdnnB,KAAKoG,SAASka,OAASgF,SAAStlB,KAAKoG,SAASka,QAE9CtgB,KAAKo8B,UAAUp8B,KAAMA,KAAM,CAAC,QAAS,QACxC,CAMA2zD,gBACG,MAAO,EACV,CAQAgP,eACG3iE,KAAKoG,SAASka,OAAS,CAC1B,CAMAsiD,cACG5iE,KAAKoG,SAASka,OAAS,CAC1B,CAMAuiD,oBACG7iE,KAAKoG,SAASka,OAAS,CAC1B,oBChHH,MAAMk0C,EAAkB,EAAQ,OAC1B5C,EAAe,EAAQ,OAEvBkR,EAA4B,CAC/B1hE,MAAO,GACP2hE,WAAY,GAGTrP,EAAiB,CACpBrvD,IAAK,SACLkH,KAAM,UACNumD,SAAU,UAGbryD,EAAOC,QAAU,cAA+BkyD,EAM7CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOo4C,CACV,CAOAE,YACGhjE,KAAKmnB,OAAO7iB,KACTtE,KAAK+E,YAAYgkB,QACd,CACG1kB,IAAKmwD,EAAgBzqB,SAAS1lC,KAEjCrE,KAAK+E,YACL/E,MAGT,CAQA2zD,cAAcsP,GACX,OAAIA,EAGM,GAKHjjE,KAAK+U,OACC/U,KAAK+U,OAAO4+C,eAAc,GAE1B,EAGhB,oBCtEH,MAAM/B,EAAe,EAAQ,OAEvBsR,EAAsC,CACzClR,WAAY,KACZpsD,MAAO,KACP7E,OAAQ,GAGL2yD,EAAiB,CACpBrvD,IAAK,OACLkH,KAAM,UACNumD,SAAU,QAGbryD,EAAOC,QAAU,cAA8BkyD,EAC5CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOw4C,CACV,CAEAt9D,QACG,IAAI4sB,EAAKxyB,KAAK2rB,eACd,IAAK6G,EAAI,OAAO,KAEhB,IAAIvtB,EAASutB,EAAG9G,WAChB,OAAKzmB,EAEEA,EAAO8B,QAAQC,GAAMA,EAAEpG,IAAMZ,KAAKoG,SAASR,QAAO,GAFrC,IAGvB,oBCnCH,MAAMgsD,EAAe,EAAQ,OAEvBuR,EAAsC,CACzCC,YAAa,IACbC,YAAa,kBACbC,cAAe,eACfC,cAAe,EACfC,YAAa,GACbC,UAAW,UACXC,aAAc,OACdC,aAAc,GACdC,cAAe,GACfC,eAAgB,GAWhBp+C,MAAO,GACPq+C,MAAO,IAGJC,EAAiB,CACpB1/D,IAAK,OACLkH,KAAM,WACNumD,SAAU,QAGbryD,EAAOC,QAAU,cAA6BkyD,EAM3CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBshC,EACvD,CAEAr5C,gBACG,OAAOq5C,CACV,CAEAr5C,uBACG,OAAOy4C,CACV,CAcAr9D,QACG9F,KAAKw8B,YAAYx8B,KAAMA,KAAM,CAC1B,eACA,iBACA,kBAECA,KAAKoG,SAASqf,OACfzlB,KAAKoG,SAASqf,MAAMxhB,SAAS+/D,IAC1BhkE,KAAKw8B,YAAYwnC,EAAMA,EAAM,CAAC,aAAa,IAIjD,IAAIlsD,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAI+/C,QAAU,GACP//C,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKo8B,UAAUp8B,KAAMA,KAAM,CACxB,eACA,iBACA,kBAGHA,KAAKoG,SAASqf,MACXzlB,KAAKoG,SAASqf,OAAS09C,EAAoC19C,MAE9D,IAAK,IAAIpS,EAAI,EAAGA,EAAIrT,KAAKoG,SAASqf,MAAMtf,OAAQkN,IAAK,CAClD,IAAI2wD,EAAOhkE,KAAKoG,SAASqf,MAAMpS,GAC3B2wD,aAAgB7vD,QACjB6vD,EAAKC,UAAYpwD,KAAK0D,MAAMysD,EAAKC,YAAa,GAE9CjkE,KAAKo8B,UAAU4nC,EAAMA,EAAM,CAAC,eAGP,iBAARA,IACbhkE,KAAKoG,SAASqf,MAAMpS,GAAK,CACtB6wD,OAAQF,EACRC,WAAW,GAGpB,CACH,CAMAtQ,gBACG,MAAO,EACV,CAEAwQ,iBAAiBzjE,GAEVA,GAAQA,EAAKwwB,QAAU,GACxBxwB,EAAKosB,KAAK,CAAC,GAAG7oB,SAASmK,IACpB1N,EAAKma,OAAOzM,EAAKxN,GAAG,GAG7B,CAEAwjE,eAAe1jE,EAAM+kB,GACb/kB,GAAS+kB,IAEbA,GAAS,IAAIxhB,SAASogE,IACpB,GAAIA,EAAYJ,UAAW,CACxB,IAAIK,EAAatkE,KAAK+E,YAAY0gB,OAC9B3D,GAAMA,EAAElhB,IAAMyjE,EAAYH,SAC3B,GACD,GACF,IAAKI,EAAY,OAGjB,GAAuB,GADDA,EAAWjM,gBACP,OAE1B,GAAIgM,EAAYE,MAAO,CACpB,IAAIC,EAAYxkE,KAAK+E,YAAYmiB,OAC7B9T,GAAMA,EAAExS,IAAMyjE,EAAYE,QAC3B,GACD,GACF,IAAKC,EAAW,OAGhB,GAAsB,GADDA,EAAUnM,gBACN,MAC5B,CAEA,IAAIj3D,EAAQpB,KAAKykE,aAAaJ,GAE9B,IAAIK,EAoBJ,GAVgB,OANbA,EAFCL,EAAYtvD,QAAgC,KAAtBsvD,EAAYtvD,OAExBrU,EAAKqJ,WAAWs6D,EAAYtvD,QAG5BrU,KAKGA,EAAKikE,YAAYN,EAAYtvD,QAEnCjL,QAAU,GAElBpJ,EAAKgE,QAAQ2/D,EAAYtvD,QAEzB2vD,EAAWhkE,EAAKqJ,WAAWs6D,EAAYtvD,SAEtC2vD,EAAS93C,OAAOy3C,EAAYE,OAASF,EAAYH,QAClD,OAEHQ,EAASxjD,IACN,CACGtgB,GAAIyjE,EAAYE,OAASF,EAAYH,OACrCvhE,MAAOvB,EACPQ,KAAMyiE,EAAYziE,KAClBsiE,OAAQG,EAAYH,OACpB34D,KAAM84D,EAAY94D,KACb,eAAiB84D,EAAY94D,KAC7B,IAER84D,EAAY1jE,SAAW2kB,SAAS++C,EAAY1jE,UAAY,EAE9D,IAEN,CAgBA8jE,aAAaG,GACV,IAAIC,EAAO7kE,KAAK+B,GAAGsP,aAAasB,kBAC5BmyD,EAAcF,EAASz/C,aAAarc,QAAQ6zB,GACtCA,EAAEL,eAAiBuoC,IAGzBzjE,EAAQ,GAgBZ,GAdI0jE,EAAY3+D,SACT2+D,EAAY,GAAGC,UAChB3jE,EAAQ0jE,EAAY,GAAGC,UACfD,EAAY,GAAG1jE,QACvBA,EAAQ0jE,EAAY,GAAG1jE,SAKxBA,GAASwjE,EAASG,YACpB3jE,EAAQwjE,EAASG,YAKhB3jE,IAEAA,EAAM4R,QAAQ,aAAc,IAC9B,CAGC,IAAIkxD,EAEDA,EADCU,EAASV,OACDU,EAASV,OAETlkE,KAAKglE,gBAAgBJ,GAGjC,IAAIZ,EAAOhkE,KAAK+E,YAAY0gB,OAAO3D,GAAMA,EAAElhB,IAAMsjE,IAAQ,GAAM,GAC/D,GAAIF,EAED,GAAqB,OAAjBY,EAAShjE,MAAiC,iBAAhBgjE,EAASvgE,IAAwB,CAC5D,IAAI4gE,EAAUjB,EAAK98C,OACf9T,GAAMA,EAAExS,IAAMgkE,EAASL,OAASnxD,EAAExS,IAAMgkE,EAAShkE,KAClD,GACD,GACEqkE,IACD7jE,EAAQ6jE,EAAQ7jE,MAEtB,MACGA,EAAQ4iE,EAAK5iE,KAGtB,CAEA,OAAOA,CACV,CAEA4jE,gBAAgBE,GACb,MAAuB,QAAnBA,EAAY7gE,IACNrE,KAAKglE,gBAAgBE,EAAYnwD,QAEjCmwD,EAAYtkE,EAEzB,CAEAu5D,KAAKN,EAAW9kD,GACb,OAAOjV,MAAMq6D,KAAKN,EAAW9kD,GAAQP,MAAM1G,KAEvCA,EAAO1H,SAASqf,OAAS,IAAIxhB,SAAQ,CAAC6d,EAAGzO,KACvC,IAAI2wD,EAAOl2D,EAAO1H,SAASqf,MAAMpS,GAGd,iBAAR2wD,EACRl2D,EAAO1H,SAASqf,MAAMpS,GAAKwmD,EAAUmK,IAErCA,EAAKE,OAASrK,EAAUmK,EAAKE,QAC7BF,EAAKO,MAAQ1K,EAAUmK,EAAKO,OAC/B,IAGIz2D,EAAOlG,OAAO4M,MAAK,IAChB1G,MAGhB,oBC3RH,MAAM0mD,EAAkB,EAAQ,OAO1Bd,EAAiB,CACpBrvD,IAAK,OACLkH,KAAM,QAGH0rD,EAA8B,CACjCr1D,KAAM,OACN87D,WAAY,IACZC,YAAa,IACbwH,UAAW,KACXC,eAAgB,EAChBC,eAAgB,yBAGnB5lE,EAAOC,QAAU,cAA6B80D,EAC3C70D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,GAiBpD1zD,KAAK+U,OAAS,IAMjB,CAEA2V,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOusC,CACV,CAEAvsC,wBAAwBhqB,GACrB,MAAO,CACJ,WACA,MAAQwa,OAAOxa,EAAKqE,YAAYoC,MAAM6L,QAAQ,cAAe,IAC7DkI,OAAOxa,EAAKyG,MACR6L,QAAQ,cAAe,IACvBmF,cACJ,QACD7J,KAAK,IACV,CAUAxI,QACG,IAAIgS,EAAMhY,MAAMgG,QAehB,OAbAgS,EAAI3Q,KAAOnH,KAAKmH,KAEhB2Q,EAAIwtD,QAAUtlE,KAAKslE,QAGO,SAAtBtlE,KAAKoG,SAASxE,OAAiBkW,EAAIvM,KAAO,SAGzCvL,KAAKoB,OAAuB,WAAdpB,KAAKoB,QAAoB0W,EAAI1W,MAAQ0W,EAAI3Q,MAG5D2Q,EAAIsM,SAAWpkB,KAAKykB,QAAU,IAAItW,KAAK2T,GAAMA,EAAElhB,KAExCkX,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAGW,SAAxBA,EAAOS,SAASxE,OAAiB5B,KAAKuL,KAAO,SAG5CvL,KAAKoB,OAAuB,WAAdpB,KAAKoB,QAAoBpB,KAAKoB,MAAQpB,KAAKmH,MAG9DnH,KAAKslE,QAAU3/D,EAAO2/D,SACjBtlE,KAAKslE,SAAWtlE,KAAK+E,cACvB/E,KAAKslE,QAAUtlE,KAAK+E,YAAYnE,IAInC,IAAI6kB,EAAQ,IACX9f,EAAOye,SAAW,IAAIngB,SAASrD,IAC7B,IAAI6gB,EAAMzhB,KAAK+B,GAAGsiB,eAAezjB,GAC7B6gB,EACDgE,EAAMnhB,KAAKtE,KAAKskB,QAAQ7C,IAExBzhB,KAAK+B,GAAGwN,MACL,OAAOvP,KAAK+E,YAAYoC,SAASnH,KAAK+E,YAAYnE,aAAaZ,KAAKmH,SAASnH,KAAKY,kCAAkCA,KAE1H,IAEHZ,KAAKykB,OAASgB,EAGdzlB,KAAKoG,SAAS8wD,QAAUl3D,KAAKoG,SAAS8wD,SAAW,EACjDl3D,KAAKoG,SAAS+wD,QAAUn3D,KAAKoG,SAAS+wD,SAAW,CAAC,EAGrD,CAWAviD,UACG,OAAOnF,QAAQC,UACX8E,MAAK,KAMH,IAAI+wD,EAAiB,GACjBC,EAAWxlE,KAAKylB,QAQpB,OAPAzlB,KAAKykB,OAAS,GAId+gD,EAASvhE,SAAS6d,IACfyjD,EAAejhE,KAAKwd,EAAElN,UAAU,IAE5BnF,QAAQ4R,IAAIkkD,EAAe,IAEpC/wD,MAAK,KACUxU,KAAK+U,QAAU/U,KAAK+E,aAEnB0gE,WAAWzlE,QAE3BwU,MAAK,IACI1U,MAAM8U,WAuBtB,CAQAhN,OACG,OAAO6H,QAAQC,UACX8E,MAAK,IAEI1U,MAAM8H,SAEf4M,MAAK,KAEUxU,KAAK+U,QAAU/U,KAAK+E,aAEnB2gE,WAAW1lE,QAE3BwU,MAAK,IACIxU,MAEhB,CAiBAylB,MAAM3c,EAAS,MAAM,GAAM+d,GAAO,GAC/B,IAAI/Y,EAAS,GAsBb,OAnBIhF,GAAU+d,EACP7mB,KAAKykB,QAAUzkB,KAAKykB,OAAOte,OAAS,IACrC2H,EAAS9N,KAAKykB,OAAO3b,OAAOA,IAEjB3C,OAAS,GACjBnG,KAAKykB,OAAOxgB,SAAS6d,IAClB,IAAIgF,EAAWhF,EAAE2D,MAAM3c,EAAQ+d,GAC3BC,GAAYA,EAAS3gB,OAAS,IAC/B2H,EAASgZ,EACZ,IAOThZ,EAAS9N,KAAKykB,OAAO3b,OAAOA,GAGxBgF,CACV,CAWA43D,WAAW1B,GAER,OADiBhkE,KAAKylB,OAAOK,GAAMA,EAAEllB,KAAOojE,EAAKpjE,KAAIuF,OAAS,EAQvDsJ,QAAQC,WALZ1P,KAAKykB,OAAOngB,KAAK0/D,GACVhkE,KAAK4H,OAKlB,CAaA0c,QAAQ3e,GAELA,EAAOtB,IAAMqvD,EAAervD,IAK5B,IAAI2/D,EAAOhkE,KAAK+E,YAAYgkB,QAAQpjB,EAAQ3F,KAAK+E,YAAa,MAE9D,OADAi/D,EAAKjvD,OAAS/U,KACPgkE,CACV,CAWAyB,WAAWzB,GACR,IAAIljC,EAAU9gC,KAAKykB,OAAOte,OAK1B,OAJAnG,KAAKykB,OAASzkB,KAAKylB,OAAM,SAAU3D,GAChC,OAAOA,EAAElhB,IAAMojE,EAAKpjE,EACvB,IAEIZ,KAAKykB,OAAOte,OAAS26B,EACf9gC,KAAK4H,OAIR6H,QAAQC,SAClB,CAOA6Y,UACG,OAAOvoB,KAAKooB,aAAe,UAC9B,CASAA,aACG,OAAIpoB,KAAK+U,OACC/U,KAAK+U,OAAOwT,UAAYvoB,KAAKY,GAE7BZ,KAAK+E,YAAYwjB,UAAYvoB,KAAKY,EAE/C,CAEA+kE,WAAW7tD,GAOR,MALyB,SAArBA,EAAI1R,SAASxE,KACdkW,EAAIvM,KAAO,QAEXuM,EAAIvM,KAAOmoD,EAAenoD,KAEtBuM,CACV,CAcAgd,MAAM+kC,EAAW9kD,GAEd,GAAiB,MAAb8kD,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAI+L,EAAczjC,IACV03B,EAAU13B,EAASvhC,MACrBi5D,EAAU13B,EAASvhC,IAAMZ,KAAK+B,GAAG8N,QAEhCsyB,EAAS1c,OACV0c,EAAS1c,QAAQxhB,SAAS6d,GAAM8jD,EAAW9jD,KAG1CqgB,EAASjb,OACVib,EAASjb,QAAQjjB,SAASmP,GAAMwyD,EAAWxyD,IAC9C,EAIHwyD,EAAW5lE,KACd,CAGA,IAAI8N,EAAShO,MAAMg1B,MAAM+kC,EAAW9kD,GAKpC,OAFAjH,EAAO3G,KAAO,KAEP2G,CACV,CAgBAqsD,KAAKN,EAAW9kD,EAAQ5S,GAErB,GAAiB,MAAb03D,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAI+L,EAAczjC,IACV03B,EAAU13B,EAASvhC,MACrBi5D,EAAU13B,EAASvhC,IAAMZ,KAAK+B,GAAG8N,QAEhCsyB,EAAS1c,OACV0c,EAAS1c,QAAQxhB,SAAS6d,GAAM8jD,EAAW9jD,KAG1CqgB,EAASjb,OACVib,EAASjb,QAAQjjB,SAASmP,GAAMwyD,EAAWxyD,IAC9C,EAIHwyD,EAAW5lE,KACd,CAGA,OAAOF,MAAMq6D,KAAKN,EAAW9kD,EAAQ5S,EACxC,oBCvcH,MAAMyvD,EAAe,EAAQ,OAEvBiU,EAAuC,CAC1C7T,WAAY,KACZ8T,aAAc,EACdC,YAAa,EACbC,cAAe,EACf9nB,IAAK,EACLD,IAAK,EACLl9C,OAAQ,GAGL2yD,EAAiB,CACpBrvD,IAAK,QACLkH,KAAM,OACNumD,SAAU,SAGbryD,EAAOC,QAAU,cAA8BkyD,EAC5CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOm7C,CACV,CAYA5/D,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAAS0/D,aAAejyD,KAAK0D,MAC/BvX,KAAKoG,SAAS0/D,cACXD,EAAqCC,cAE3C9lE,KAAKoG,SAAS2/D,YAAclyD,KAAK0D,MAC9BvX,KAAKoG,SAAS2/D,aACXF,EAAqCE,aAE3C/lE,KAAKoG,SAAS4/D,cAAgBnyD,KAAK0D,MAChCvX,KAAKoG,SAAS4/D,eACXH,EAAqCG,eAE3ChmE,KAAKoG,SAAS83C,IAAMrqC,KAAK0D,MACtBvX,KAAKoG,SAASy6D,aAAegF,EAAqC3nB,KAErEl+C,KAAKoG,SAAS63C,IAAMpqC,KAAK0D,MACtBvX,KAAKoG,SAAS63C,KAAO4nB,EAAqC5nB,KAGzDj+C,KAAKoG,SAAS6/D,WAA+C,iBAA3BjmE,KAAKoG,SAAS6/D,YACjDjmE,KAAKoG,SAAS6/D,UAAYpyD,KAAK0D,MAAMvX,KAAKoG,SAAS6/D,YAGtDjmE,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QAAU8kE,EAAqC9kE,OAEnE,CAUA+E,QACG,IAAIgS,EAAMhY,MAAMgG,QAQhB,OANAgS,EAAIoP,MAAQ,GACZpP,EAAI1R,SAAW0R,EAAI1R,UAAY,CAAC,EAE5BpG,KAAKoG,SAAS6/D,YACfnuD,EAAI1R,SAAS6/D,UAAYpyD,KAAKC,UAAU9T,KAAKoG,SAAS6/D,YAElDnuD,CACV,CAMA67C,gBACG,MAAO,EACV,oBCnGH,MAAM/B,EAAe,EAAQ,OAEvBsU,EAA+C,CAClDC,WAAY,GACZC,UAAW,IAGR1S,EAAiB,CACpBrvD,IAAK,iBACLkH,KAAM,UACNumD,SAAU,mBAGbryD,EAAOC,QAAU,cAAuCkyD,EACrDjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOw7C,CACV,CAYAjgE,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAS+/D,WACXnmE,KAAKoG,SAAS+/D,YACdD,EAA6CC,WAEhDnmE,KAAKoG,SAASggE,UACXpmE,KAAKoG,SAASggE,WACdF,EAA6CE,SACnD,CAUAtgE,QACG,IAAIgS,EAAMhY,MAAMgG,QAIhB,OAFAgS,EAAI1R,SAAW0R,EAAI1R,UAAY,CAAC,EAEzB0R,CACV,CAMA67C,gBACG,MAAO,EACV,oBCtEH,MAAM/B,EAAe,EAAQ,OACvB4C,EAAkB,EAAQ,OAE1B6R,EAAqC,CACxCtlE,OAAQ,EACRulE,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,aAAc,IACdC,WAAY,OACZC,UAAW,GAGRC,EAAoB,CACvBviE,IAAK,MACLkH,KAAM,kBACNumD,SAAU,OAGbryD,EAAOC,QAAU,cAA4BkyD,EAM1CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBmkC,EACvD,CAEAl8C,gBACG,OAAOk8C,CACV,CAEAl8C,uBACG,OAAO27C,CACV,CAYApgE,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASrF,OAASukB,SAAStlB,KAAKoG,SAASrF,QAC9Cf,KAAKoG,SAASkgE,SAAWhhD,SAAStlB,KAAKoG,SAASkgE,UAAY,GAC5DtmE,KAAKoG,SAASmgE,UAAYjhD,SAAStlB,KAAKoG,SAASmgE,WACjDvmE,KAAKoG,SAASogE,UAAYlhD,SAAStlB,KAAKoG,SAASogE,WACjDxmE,KAAKoG,SAASqgE,aAAenhD,SAAStlB,KAAKoG,SAASqgE,cACpDzmE,KAAKoG,SAASsgE,WAAa1mE,KAAKoG,SAASsgE,WACzC1mE,KAAKoG,SAASugE,UAAYrhD,SAAStlB,KAAKoG,SAASugE,UACpD,CAEAE,OAAOC,EAASnP,GACb,OAAO33D,KAAK+E,YACRgkB,QACE,CACG1kB,IAAKmwD,EAAgBzqB,SAAS1lC,IAC9BjD,MAAO0lE,EACPvP,QAASI,GAEZ33D,KAAK+E,YACL/E,MAEF4H,MACP,CAMA+rD,gBACG,MAAO,EACV,oBChFH,MAAM/B,EAAe,EAAQ,OAEvBmV,EAAsC,CACzC14D,KAAM,GAKNtN,OAAQ,EAIRixD,WAAY,MAST0B,EAAiB,CACpBrvD,IAAK,OAILkH,KAAM,OAINumD,SAAU,QAKbryD,EAAOC,QAAU,cAA6BkyD,EAC3CjyD,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,GAEpD1zD,KAAKgnE,QAAU,IAClB,CAEAt8C,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOq8C,CACV,CAcAjhE,QAGG9F,KAAKw8B,YAAYx8B,KAAMA,KAAM,CAAC,SAE9B,IAAI8X,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAIoP,MAAQ,GACLpP,CACV,CAQA7R,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAGlCpG,KAAKoG,SAASrF,OAASukB,SACpBtlB,KAAKoG,SAASrF,QAAUgmE,EAAoChmE,QAI/Df,KAAKqO,KAAO1I,EAAO0I,MAAQ04D,EAAoC14D,KAI/DrO,KAAKo8B,UAAUp8B,KAAMA,KAAM,CAAC,QAC/B,CAMA2zD,gBACG,MAAO,EACV,CAQIhoC,qBACD,MAAwB,YAApB3rB,KAAK+U,QAAQ1Q,IACPrE,KAAK+B,GAAG+pB,mBAAmB9rB,KAAK+U,OAAO3O,SAAS4rD,YAEhDhyD,KAAK+B,GAAG+pB,mBAAmB9rB,KAAKoG,SAAS4rD,WAEtD,CAEAtoD,SAAS9D,GACN,IAAIxE,EAAQwE,EAAMxE,OAAS,GAG3B,OAFAA,EAAQA,EAAM4R,QAAQ,MAAO,OAC7B5R,EAAQA,EAAM4R,QAAQ,MAAO,OACtB5R,CACV,CAEA6lE,YAAYjxD,EAAKkxD,GACd,IAAIp5D,EAAS9N,KAAKqO,KAMdmkB,EAAKxyB,KAAK2rB,eAGV1mB,EAASutB,GAAI9G,YAAc1rB,KAAKgnE,QACpC,IAAK/hE,EAAQ,MARY,CAAC6I,GAChBA,EAAOkF,QAAQ,WAAY,IAOjBm0D,CAAmBr5D,GAEvC,MAAMigB,EAAU/X,GAAOwc,EAAGjG,aAAe,CAAC,EAqE1C,OAnEAtnB,EAAO8B,SAAS9C,SAAS+C,IAKtB,IAAI5F,EAAQpB,KAAK0J,SAAS1C,GAE1B,IAAIu7D,EAAW,IAAIngD,OAAO,IAAMhhB,EAAQ,IAAK,KAMzCyI,EAAO7C,EAAEsZ,OAAOyN,GACpB,GAAa,SAAT/mB,EAAE3C,IAAgB,CACnB,IAAI+iE,EAAQv9D,EACZA,EAAO7C,EAAEqgE,SAASD,IAMdA,GACDpgE,EAAEZ,SAASs4C,iBACX13C,EAAEZ,SAASq4C,gBAEX50C,EAAO7C,EAAEqgE,SAASrgE,EAAEZ,SAASs4C,iBA4B7B5wC,EAASA,EAAOkF,QACb,MACA,oDAGT,CAEAlF,EAASA,EAAOkF,QAAQuvD,EAAU14D,EAAK,IAI1CiE,EAASA,EAAOkF,QAAQ,QAAS+a,EAAQ9oB,EAAO8pB,MAGnD,CAEA/pB,WAAWC,GACRjF,KAAKgnE,QAAU/hE,CAClB,oBCpNH,MAAM+xD,EAAS,EAAQ,OAEjBtD,EAAiB,CACpBrvD,IAAK,aACLkH,KAAM,kBACNumD,SAAU,wBAGPmF,EAA8B,CACjCqQ,WAAY,EACZC,QAAS,GAGZ9nE,EAAOC,QAAU,cAA+Bs3D,EAO7Cr3D,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAAiBixB,EACvD,CAEAhpC,gBACG,OAAOgpC,CACV,CAEAhpC,uBACG,OAAOusC,CACV,CAQAhxD,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAKoG,SAASkhE,WAAahiD,SACxBtlB,KAAKoG,SAASkhE,YAAcrQ,EAA4BqQ,YAE3DtnE,KAAKoG,SAASmhE,QAAUjiD,SACrBtlB,KAAKoG,SAASmhE,SAAWtQ,EAA4BsQ,QAE3D,oBChDO,EAAQ,OAAlB,MAGMC,EAAoB,EAAQ,OAE5BC,EAAa,EAAQ,OACL,EAAQ,OAE9BhoE,EAAOC,QAAU,cAAiC8nE,EAC/C7nE,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAGlB/B,KAAK0nE,sBAAyBC,IAC3B,IAAIC,EAAW5nE,KAAKykB,OAAOqI,MAAMhL,GAAMA,EAAElhB,KAAO+mE,EAAW/mE,KACvDgnE,IACD5nE,KAAKykB,OAASzkB,KAAKykB,OAAO3b,QAAQgZ,GAAMA,EAAElhB,IAAMgnE,EAAShnE,KACzDZ,KAAKykB,OAAOngB,KAAKsjE,EAASC,mBAC7B,EAEH7nE,KAAKykB,OAAOxgB,SAAS6d,IAClBA,EAAE1f,GAAG,qBAAsBpC,KAAK0nE,sBAAsB,GAE5D,CAEAh9C,sBAIG,OAHAliB,QAAQ+G,MACL,qEAEI,IACV,CACAmb,0BACG,IAAIo9C,EAAiB,IAAIx/D,MACtB,qEAGH,OADAE,QAAQ+G,MAAMu4D,GACP,IACV,CAEAp9C,yBACG,IAAIo9C,EAAiB,IAAIx/D,MACtB,oEAGH,OADAE,QAAQ+G,MAAMu4D,GACP,IACV,CAEAC,UACG,OAAO/nE,KAAK+B,GAAG0gB,UAAU,MAAMziB,KAAKmH,OACvC,CASA0gE,kBACG,IAAIG,EAAShoE,KAAK+B,GAAGq2B,gBAAgBp4B,KAAKY,IAO1C,OAJAZ,KAAKykB,OAAOxgB,SAAS6d,IAClBA,EAAEyT,eAAe,qBAAsBv1B,KAAK0nE,sBAAsB,IAG9DM,CACV,CAcA7iE,kBAAkB8iE,EAAQ5jE,IAC2B,GAAjCrE,KAAKqE,GAAKgJ,QAAQ46D,EAAOrnE,MAEvCZ,KAAKqE,GAAKC,KAAK2jE,EAAOrnE,UAChBZ,KAAK4H,OAEjB,CAEAzC,kBAAkB8iE,EAAQ5jE,GACvB,IAAI6jE,EAASloE,KAAKqE,GAAK8B,OACvBnG,KAAKqE,GAAOrE,KAAKqE,GAAKyE,QAAQlI,GACpBA,GAAMqnE,EAAOrnE,KAGnBsnE,GAAUloE,KAAKqE,GAAK8B,cACfnG,KAAK4H,MAEjB,CAQAugE,qBAAqBx7C,GAClB,OAAO3sB,KAAKooE,YAAYz7C,EAAI,oBAC/B,CAQAnB,qBAAqBmB,GAClB,OAAO3sB,KAAKqoE,YAAY17C,EAAI,oBAC/B,CAQA27C,aAAarjE,GACV,OAAOjF,KAAKooE,YAAYnjE,EAAQ,YACnC,CASAsjE,aAAatjE,GACV,OAAOjF,KAAKqoE,YAAYpjE,EAAQ,YACnC,CAQAujE,cAAcvhD,GACX,OAAOjnB,KAAKooE,YAAYnhD,EAAS,aACpC,CASAwhD,cAAcxhD,GACX,OAAOjnB,KAAKqoE,YAAYphD,EAAS,aACpC,CAQAyhD,YAAYz/C,GACT,OAAOjpB,KAAKooE,YAAYn/C,EAAO,WAClC,CASA0/C,YAAY1/C,GACT,OAAOjpB,KAAKqoE,YAAYp/C,EAAO,WAClC,CAQA2/C,UAAU1oE,GAEP,KAAIA,EAAImN,QAAQrN,KAAKY,KAAO,GAA5B,CAEAV,EAAIoE,KAAKtE,KAAKY,IAGdZ,KAAKomB,kBAAkBniB,SAAS6hB,IAC7BA,EAAE8iD,UAAU1oE,EAAI,IAInBF,KAAK6nB,kBAAkB5jB,SAAS2jB,IAC7BA,EAAEghD,UAAU1oE,EAAI,IAMnBF,KAAKkkB,kBAAkBjgB,SAASmjC,IAC7B,KAAIlnC,EAAImN,QAAQ+5B,IAAQ,GAAxB,CAEA,IAAI3lB,EAAMzhB,KAAK+B,GAAGsiB,eAAe+iB,GACjC,GAAI3lB,IACDvhB,EAAIoE,KAAK8iC,GACL3lB,EAAIrb,SAAS8iB,cAAc,CAC5B,IAAIjkB,EAASjF,KAAK+B,GAAGgW,WAAW0J,EAAIrb,SAAS8iB,cACzCjkB,GACDA,EAAO2jE,UAAU1oE,EAEvB,CAV8B,CAWjC,IAIHF,KAAK+mB,YAAY9iB,SAAS6d,IACvBA,EAAE8mD,UAAU1oE,EAAI,IAMnB,IAAI2oE,EAAanoE,IACVR,EAAImN,QAAQ3M,EAAKE,KAAO,IAC5BV,EAAIoE,KAAK5D,EAAKE,KACbF,EAAK0jB,SAAW,IAAIngB,SAAS6kE,IAC3B,IAAIC,EAAO/oE,KAAK+B,GAAGsiB,eAAeykD,GAC9BC,GACDF,EAAUE,EACb,KAGFroE,EAAKm3D,SAAW,IAAI5zD,SAAS+kE,IAC3B,IAAIC,EAAOjpE,KAAK+B,GAAGsiB,eAAe2kD,GAC9BC,GACDJ,EAAUI,EACb,IACD,GAGSjpE,KAAKykB,OAAOtW,KAAK2T,GAAMA,EAAElhB,MAC3B,IAAIqD,SAAS6kE,IACtB,IAAIC,EAAO/oE,KAAK+B,GAAGsiB,eAAeykD,GAC9BC,GACDF,EAAUE,EACb,IAIH7oE,EAAMF,KAAK+B,GAAGygB,KAAKtiB,EAnEkB,CAoExC,CASAokB,QAAQ3e,GACL,OAAO,IAAI8hE,EAAW9hE,EAAQ3F,KACjC,CASAmF,iBAAiB6+D,GAGd,IADiBhkE,KAAKykB,OAAO3b,QAAQgZ,GAAMA,EAAElhB,IAAMojE,EAAKpjE,KAAI,GAIzD,OAFAZ,KAAKykB,OAAOngB,KAAK0/D,GAEVhkE,KAAK4H,MAElB,CAQAzC,iBAAiB6+D,GACd,IAAIljC,EAAU9gC,KAAKykB,OAAOte,OAK1B,GAJAnG,KAAKykB,OAASzkB,KAAKylB,OAAM,SAAU3D,GAChC,OAAOA,EAAElhB,IAAMojE,EAAKpjE,EACvB,IAEIZ,KAAKykB,OAAOte,OAAS26B,EACtB,OAAO9gC,KAAK4H,MAIlB,CAEAA,OAMG,OAHI5H,KAAKmH,MAAQnH,KAAKoB,QACnBpB,KAAKmH,KAAOnH,KAAKoB,OAEbtB,MAAM8H,MAChB,CAEAshE,eACGlpE,KAAKmpE,UAAY,GAKjB,IAAIC,EAAS,CACVplD,UAAW,SACXC,SAAU,QACVC,kBAAmB,kBAGtB/P,OAAOC,KAAKg1D,GAAQnlE,SAASoQ,IAC1BrU,KAAKqU,GAAGpQ,SAASrD,IACJZ,KAAK+B,GAAGsiB,eAAezjB,IAE9BZ,KAAKwP,KACF,UACA,wCAAwC45D,EAAO/0D,KAC/C,CACGkQ,MAAOvkB,KAAKY,GACZA,MAGT,GACD,IAMyB,GAA1BZ,KAAK2jB,WAAWxd,QAAgBnG,KAAK4jB,iBACtC5jB,KAAKwP,KACF,UACA,0DAKN,IAAI65D,EAAWrpE,KAAK+B,GAAG6Q,QAAQjC,WAAWxC,KAAKyB,GAAMA,EAAEhP,KACvDZ,KAAK2jB,WAAW1f,SAAS2L,KACM,GAAxBy5D,EAASh8D,QAAQuC,IAClB5P,KAAKwP,KACF,UACA,0BAA0BI,mCAC1B,CAAE4V,KAAM5V,GAEd,GAEN,CAEA05D,cACG,IAAIC,EAAW,GAAGhiD,OAAOvnB,KAAKmpE,WAc9B,MAbA,CACG,kBACA,kBACA,0BACA,YACA,QACA,SACDllE,SAASoQ,IACRrU,KAAKqU,KAAKpQ,SAAS6hB,IAChByjD,EAAWA,EAAShiD,OAAOzB,EAAEwjD,cAAc,GAC5C,IAGEC,CACV,mBChYH,MAAMttC,EAAY,EAAQ,OAEpButC,EAAyB,EAAQ,OAEvC,IAAIzpE,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA0Bu8B,EAOxCt8B,YAAYC,EAAKC,EAAQkC,GACtBjC,QAIIF,GAAOA,EAAImC,KACZ/B,KAAK+B,GAAKnC,EAAImC,IAIbA,IACD/B,KAAK+B,GAAKA,GAIRnC,IACEmC,EAAGi4B,KACJp6B,EAAMmC,EAAGi4B,MAETp6B,EAAM,CACHiQ,KAAM9N,EAAG0Y,MAAMvP,MAMfnJ,GAAIA,EAQJiI,QAAS,CAAC,EAMV/H,OAAQF,EAAGC,WAAWC,SAMtBwnE,OAAQ,KAMRrsD,MAAOrb,EAAGC,WAAWob,MAErBnd,MAAOF,EAMPyS,OAAQ,CACL0O,IAAKnhB,EAAE,OACP2pE,OAAQ3pE,EAAE,UACVqW,OAAQrW,EAAE,UACV4pE,KAAM5pE,EAAE,QACR6pE,OAAQ7pE,EAAE,UACV8pE,SAAU9pE,EAAE,QACZ+pE,OAAQ/pE,EAAE,UACVgqE,OAAQhqE,EAAE,UACVwR,GAAIxR,EAAE,MAEN4R,OAAQ5R,EAAE,UACV6H,KAAM7H,EAAE,QAERiqE,IAAKjqE,EAAE,OACPkqE,GAAIlqE,EAAE,MAENmqE,KAAMnqE,EAAE,QACRoqE,MAAOpqE,EAAE,SAET+pC,QAAS/pC,EAAE,WACXqqE,mBAAoBrqE,EAAE,uBAEtBqF,QAASrF,EAAE,WAEXu5C,SAAUv5C,EAAE,YACZK,OAAQL,EAAE,UAEVsqE,eAAgB,CACb/wB,SAAUv5C,EAAE,2BAGfuqE,mBAAoBvqE,EAAE,uCACtBwqE,qBAAsBxqE,EAAE,0BAExByqE,mBAAoBzqE,EAAE,uCACtB0qE,oBAAqB1qE,EAAE,0BAEvB2qE,mBAAoB3qE,EAAE,uCACtB4qE,qBAAsB5qE,EAAE,0BAExB6qE,mBAAoB7qE,EAAE,uCACtB8qE,qBAAsB9qE,EAAE,0BAGxB+qE,qBAAsB/qE,EAAE,iBACxBgrE,gCAAiChrE,EAAE,gBAEnCirE,eAAgBjrE,EAAE,SAClBkrE,0BAA2BlrE,EAAE,SAE7BmrE,oBAAqBnrE,EAAE,cACvBorE,+BAAgCprE,EAAE,uBAElCqrE,kBAAmBrrE,EAAE,cAErBsrE,kBAAmBtrE,EAAE,qBASxBK,OAAQ,SAAUiE,GACf,MAAO,GAAGA,IAAMrE,KAAK6P,MACxB,GAEH9N,EAAGi4B,KAAOp6B,IAIXA,EAAI6pE,SACD1nE,EAAG0nE,OAIL7pE,EAAI6pE,OAAS1nE,EAAG0nE,QAHO,IAAID,GACV8B,eAAe1rE,IAMtCI,KAAKJ,IAAMA,EAEXI,KAAKH,OAASA,GAAU,UAC3B,CAEAmK,QAAQuhE,GAEL,GADA/iE,QAAQ+G,MAAM,+BACVg8D,EACD,IAAK,IAAI39D,KAAK29D,EACXvrE,KAAKJ,IAAIoK,QAAQ4D,GAAK29D,EAAS39D,EAGxC,CAEA3N,QACG,MAAO,IAAI2V,IAED5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,EAE3C,CAEAxV,OAAOiE,GACJ,OAAOrE,KAAKJ,IAAIQ,OAAO,GAAGJ,KAAKH,UAAUwE,IAC5C,oBClLH,MAAM8qB,EAAgB,EAAQ,OACxBq8C,EAAuB,EAAQ,MAErC/rE,EAAOC,QAAU,cAA+B8rE,EAC7C7rE,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAClB/B,KAAKyY,gBAAgB,EACxB,CAWAtT,aAQG,OAPKnF,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,YAE7BrH,MAAM8H,OACZ5H,KAAK+B,GAAGyN,KAAK,2BAA4B,CACtCi8D,iBAAkBzrE,KAAKY,KAEnBZ,IACV,CAEAuF,UACG,IAAIgC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAC/BxH,EAAIC,KAAK+B,GAAG9B,QAiBhB,OARgB,GALbD,KAAK+B,GAAG8jB,iBAAiBC,GAEnBA,EAAEllB,IAAMZ,KAAKY,IACbklB,EAAE3e,KAAKgR,eAAiBnY,KAAKmH,KAAKgR,gBAErChS,QAEHoB,EAAUgW,SACP,OACAxd,EAAE,6CAA8C,CAACC,KAAKmH,QAIrDI,CACV,CAaA2mB,sBACG,OAAOluB,KAAK+B,GAAG6Q,QAAQhC,UAC1B,CAMAtN,OAEOtD,KAAKisB,cAGTnsB,MAAMwD,OAKNtD,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAG9C7J,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAO9C7J,KAAK+B,GAAGK,GAAG,2BAA4ByH,IAEpC7J,KAAKwP,KAAK,0BAA2B3F,EAAK,IAG7C7J,KAAK+B,GAAGK,GAAG,4BAA6ByH,IAErC7J,KAAKwP,KAAK,2BAA4B3F,EAAK,IAG9C7J,KAAK0rE,eACR,CAEAA,eAIG,IAAIC,EAAqB3rE,KAAK6rB,mBAC1BE,EAAY/rB,KAAK+rB,UACrB,IAAK/rB,KAAKoG,SAASojB,SAAWmiD,GAAsB5/C,EAAW,CAC5D,IAAIY,EAAK3sB,KAAKiqB,iBAEd0C,EAAG4G,KAAKo4C,EAAmB1hD,iBAAkB8B,EAAUnrB,IAEvD+rB,EAAGloB,OAAO,YAAY,CAAC9B,EAAOiT,KAE3B,IAAIwc,EAASpyB,KAAK+B,GAAG2D,UAClB1F,KAAKoG,SAASijB,gBAAgBC,kBAG7B3mB,IAGIyvB,EAAOjR,QACTiR,EAAS,OAGZA,EAAS,CACN7I,KAAM,MACNpI,MAAO,CACJiR,EACA,CACG7C,MAAOxD,EAAUwD,MACjBlrB,IAAK8P,OAAOC,KAAKwB,GAAQ,GACzB6Z,KAAM1D,EAAUwD,MAAQ,WAAa,SACrC5sB,MAAOopB,EAAUysB,iBACdmzB,EAAmB1hD,iBAAiBwC,QAAQ9pB,QAOjDwe,MAAQiR,EAAOjR,MAAMrY,QAAQ8G,GAAMA,KAG7C,IAAIg8D,GAAgB,EAEhB5rE,MAAM6rB,oBAAoBU,aAAa3rB,IAAM+B,IAC9CipE,GAAgB,IAKhBA,GACA/3D,KAAKC,UAAU9T,KAAK8vB,iBAAmBjc,KAAKC,UAAUse,IACtDA,GAAQjR,OAAOhb,OAAS,KAIxBnG,KAAKmzB,aAAaf,GAElBpyB,KAAKmwB,WAAW,EAAG,IACtB,GAEN,CACH,CAEA8B,SAASC,EAAOC,EAAQ,IACrB,OAAOryB,MAAMmyB,SAASC,EAAOC,GAAO1d,OAAOtM,IAKxC,GAHAnI,KAAK6rE,2BAGD1jE,EACD,MAAMA,CACT,GAEN,CAcAwqB,oBAAoB9oB,GAkDjB,OA9CIA,EAAKA,OAASsD,MAAMC,QAAQvD,EAAKA,QAClCA,EAAKA,KAAO,CAACA,EAAKA,OA6Cd/J,MAAM6yB,oBAAoB9oB,GAAM2K,MAAK,KAGzCxU,KAAK6rE,0BAA0B,GAErC,CAYAC,iBAAiB3rE,GACLH,KAAKiqB,iBAGVjqB,KAAKqqB,mBAAmBhd,QAAQlN,EAAU8B,OAAOrB,KAAO,GAIzDZ,KAAKqqB,mBAAmB/lB,KAAKnE,EAAU8B,OAAOrB,GAEpD,CAQA2yB,KAAKpzB,GACF,IAAIwsB,EAAK3sB,KAAKiqB,iBAIXjqB,KAAKoqB,mBAAmB/c,QAAQlN,EAAU8B,OAAOrB,KAAO,GACxD+C,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,MACxBlG,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,KAAKijB,MAC7BnpB,GAAGxD,EAAU8B,OAAOrB,IAAIiJ,KAAKijB,KAAK,CAAC,GAAG3mB,OAAS,IAI7CnG,KAAKoqB,mBAAmB9lB,KAAKnE,EAAU8B,OAAOrB,IAGvB,aAAzBT,EAAU8B,OAAOvB,MACQ,YAAzBP,EAAU8B,OAAOvB,MACQ,aAAzBP,EAAU8B,OAAOvB,MACQ,UAAzBP,EAAU8B,OAAOvB,KAEbisB,GAGW,GAFAA,EAAGuE,SAGXlxB,KAAKsqB,aAAetqB,KAAKuqB,eAAeC,YACtCxqB,KAAKsqB,aAAetqB,KAAKuqB,eAAeyB,eAC3C7rB,EAAUkF,cAEVlF,EAAUkF,aAAa,CAAEzD,KAAM,SAGlCzB,EAAUsE,OAAO,YAAa,IAC9BtE,EAAUsE,OAAO,eAAgB,KAGJ,aAAzBtE,EAAU8B,OAAOvB,KAEfV,KAAK0rB,YACL1rB,KAAK0rB,WAAWxG,SAChBllB,KAAK+qB,kBAEL5qB,EAAUsE,OAAO,OAAQzE,KAAK+qB,kBAC9B5qB,EAAUuE,YAIVvE,EAAUsE,OAAO,OAAQ,IACzBtE,EAAUoX,MAAMoV,EAAGG,KAAK,CAAC,KAG5B3sB,EAAU0J,KAAKkiE,KAAKp/C,GAIlB3sB,KAAKoG,SAASojB,UAChBrpB,EAAUsuB,MAAQtuB,EAAUsuB,OAAS,CAAC,EAEjCtuB,EAAUsuB,MAAMu9C,qBAClB7rE,EAAUsuB,MAAMu9C,mBAAqB7rE,EAAUwuB,YAC5C,iBACA,CAACuD,EAAOhB,KACD/wB,EAAUkF,cACXlF,EAAUkF,aAAa,CAAEzD,KAAM,SAGlC+qB,EAAGs/C,SAAS/6C,EAAOgB,IAEZ,QAsBnB/xB,EAAU0J,KAAKqiE,SAEV/rE,EAAUozB,OACd5G,EAEDxsB,EAAUozB,KAAK5G,GAEfxsB,EAAUqzB,SAGTrzB,EAAUuE,SAASvE,EAAUuE,WAEvC,CAEA8uB,OAAOrzB,GACCA,IAELA,EAAUgsE,YAAY,iBAClBhsE,EAAUsuB,QACPtuB,EAAUsuB,MAAMu9C,2BACV7rE,EAAUsuB,MAAMu9C,mBAEtB7rE,EAAUsuB,MAAM29C,eACbpsE,KAAKqsE,KAAKrsE,KAAKqsE,IAAI,WAAYlsE,EAAUsuB,MAAM29C,qBAC5CjsE,EAAUsuB,MAAM29C,eAIzBjsE,EAAU0J,MAAQ1J,EAAU0J,KAAKqiE,SAClC/rE,EAAU0J,KAAKqiE,SACf/rE,EAAUsE,OAAO,OAAQ,KAGxBtE,EAAUqzB,QAAQrzB,EAAUqzB,SAE5BrzB,EAAUuE,SAASvE,EAAUuE,UAGjC1E,KAAKoqB,oBAAsBpqB,KAAKoqB,oBAAsB,IAAIthB,QACtDlI,GAAOA,GAAMT,EAAU8B,OAAOrB,KAErC,CAEAirE,2BACG7rE,KAAKoqB,mBAAmBnmB,SAASyvB,IAC1B/vB,GAAG+vB,IAAU/vB,GAAG+vB,GAAO/rB,cAAchE,GAAG+vB,GAAO/rB,cAAc,GAEvE,CAYAuiB,mBAAmBrgB,GAEhB,IAAI8iB,EAAK,IAAIlpB,MAAM6oE,eAAe,CAC/BziE,KAAMA,GAAQ,KAKjB,OAFA7J,KAAKusE,kBAAkB5/C,GAEhBA,CACV,CASA3B,qBAEG,IAAIwhD,EAAY,IAAI/oE,MAAMgpE,eAI1B,OAFAzsE,KAAKusE,kBAAkBC,GAEhBA,CACV,CAEAD,kBAAkBG,GAGfjpE,MAAMC,OAAOgpE,EAAWjpE,MAAMkpE,gBAE9BD,EAAUj+C,MAAQi+C,EAAUj+C,OAAS,CAAC,EAGjCzuB,KAAKoG,SAASojB,UACXkjD,EAAUj+C,MAAMu9C,qBAClBU,EAAUj+C,MAAMu9C,mBAAqBU,EAAU/9C,YAC5C,iBACA,CAACuD,EAAOhB,KACDgB,EAAQ,IAAGA,EAAQ,GAGvBlyB,KAAKiyB,SAASC,EAAOhB,IAEd,MAKXw7C,EAAUj+C,MAAMm+C,mBAClBF,EAAUj+C,MAAMm+C,iBAAmBF,EAAU/9C,YAC1C,eACA,KACG3uB,KAAKwP,KAAK,WAAY,CAAC,EAAE,MAOrCk9D,EAAUG,OAAS,WAAa,EAChCH,EAAUI,UAAY,WAAa,EACnCJ,EAAUK,OAAS,WAAa,EAE3BL,EAAUj+C,MAAMu+C,cAClBN,EAAUj+C,MAAMu+C,YAAcN,EAAU/9C,YACrC,eACA,KACG3uB,KAAK6rE,0BAA0B,IAI3C,CAEAz7C,oBAAoBvmB,EAAO,CAAC,GACzB,KACK7J,KAAK6qB,wBAAwBsE,GAC9BnvB,KAAK6qB,aAAa3F,SAClBllB,KAAK+qB,kBAEN,OAEH,IAAIkiD,EAAe,CAAC3+D,EAAO,CAAC,EAAG4+D,EAAc,QAC1C,IAAI39C,EAAQjhB,EAAKihB,OAEhB1lB,EAAKA,MAAQ,IAAI5F,SAASib,IACxB,IAAIiuD,EAASjuD,EAAI,GAAGqQ,WAAiBrQ,EAAI,GAAGqQ,QAC5C,IAAK49C,EAAQ,OAGb,IAAIC,EAAgB,GAChBC,EACDnuD,EAAI,GAAGguD,WAAuBhuD,EAAI,GAAGguD,QAmBxC,GAlBIG,IACDD,EAAgBptE,KAAK+qB,iBACjB+B,MACG1e,GACEA,EAAKk/D,QAAUJ,GAAe9+D,EAAKm/D,SAAWF,IAEnDl/D,KAAKC,GAASA,EAAKxN,MAIbZ,KAAK+qB,iBAAiB+B,MAAM1e,GAEnCA,EAAKk/D,QAAU/9C,GACfnhB,EAAKm/D,SAAWJ,IACS,GAAxBC,EAAcjnE,QACZinE,EAAc//D,QAAQe,EAAK4e,UAAY,KAE7C,GACS,OAEZ,IAAIwgD,EAAW,CAAC,EAChBA,EAASF,OAAS/9C,EAClBi+C,EAASD,QAAUJ,EACnBK,EAAS9gD,QAAUxN,EAAIte,GAEvBuT,OAAOC,KAAK8K,GAAKjb,SAASs0C,IAEc,GAAjCA,EAASlrC,QAAQ,GAAGkiB,QACrBi+C,EAASj1B,GAAYr5B,EAAIq5B,GAC5B,IAGCr5B,EAAIiG,eAAcqoD,EAASroD,aAAejG,EAAIiG,cAG9CioD,EAAcjnE,OAAS,EACxBinE,EAAcnpE,SAASwpE,IACpBztE,KAAK+qB,iBAAiB7J,IAAIssD,EAAU,KAAMC,EAAa,IAGxDztE,KAAK+qB,iBAAiB7J,IAAIssD,EAAU,KAAK,KAIhDl/D,EAAK+2B,OAAS,IAAIphC,SAAS0hC,IACzBsnC,EAAatnC,EAAMpW,EAAM,GAC1B,GAIJvvB,KAAKoqB,oBAAsB,IAAInmB,SAASyvB,IAEtC,IAAIg6C,EAAY/pE,GAAG+vB,GACfg6C,GAAaA,EAAUroE,cACxBqoE,EAAUroE,aAAa,CAAEzD,KAAM,SAE9B8rE,EAAU7jE,MAAQ6jE,EAAU7jE,KAAKqiE,QAAQwB,EAAU7jE,KAAKqiE,QAAQ,IAGvEe,EAAajtE,KAAK6qB,aAAaoZ,UAG9BjkC,KAAKoqB,oBAAsB,IAAInmB,SAASyvB,IACtC,IAAIg6C,EAAY/pE,GAAG+vB,GACfg6C,GAAaA,EAAU/lE,cAAc+lE,EAAU/lE,eACnD+lE,EAAUjpE,OAAO,OAAQzE,KAAK+qB,iBAAiB,GAErD,CAEAm+C,eACGppE,MAAMopE,eAEDlpE,KAAK0rB,WAEC1rB,KAAKmpB,uBACEnpB,KAAK+B,GAAG4rE,mBAAmB3tE,KAAKmpB,uBAG5CnpB,KAAK4tE,gBACF,sCAAsC5tE,KAAKmpB,0BANjDnpB,KAAK4tE,gBAAgB,6BAS3B,CAEAA,gBAAgB7uD,EAAKlV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,kBAAkBtR,KAAKoB,WAAW2d,IAChD/e,KAAKmpE,UAAU7kE,KAAK,CAAEgN,UAASzH,QAClC,CAEIoqB,iBACD,OAAOj0B,KAAK+B,GAAG6Q,QAAQzD,QAC1B,oBCtmBH,IAAI0+D,EAAmB,EAAQ,OAE/BpuE,EAAOC,QAAU,cAA2BmuE,qBCK5C,IAAIt/D,EAAe,sBAEnB9O,EAAOC,QAAU,cAAwB6O,EACtC5O,cACGG,OACH,mBCZH,MAAMguE,EAAc,EAAQ,OAE5BruE,EAAOC,QAAU,cAAsBouE,EAUpClmE,OACG,OAAO9H,MACH8H,OACA4M,MAAK,IAAMxU,KAAKiF,OAAO48B,UAAU7hC,QACjCwU,MAAK,IAAMxU,KAAKkI,iBACvB,CAQA0M,UACG,OAAO,IAAInF,SAAQ,CAACC,EAASiH,KACtB3W,KAAKY,GACNZ,KAAK+tE,cACDv5D,MAAK,IACI1U,MAAM8U,YAEfJ,MAAK,IAAMxU,KAAKiF,OAAO08B,YAAY3hC,QACnCwU,KAAK9E,GACL+E,MAAMkC,GAEVjH,GACH,GAEN,CAEAw5D,eACGppE,MAAMopE,gBAELlpE,KAAK27B,kBAAoB,IAAI13B,SAASrD,IACpCZ,KAAK4tE,gBAAgB,sCAAsChtE,KAAM,IAG1C,GAAtBZ,KAAK+G,OAAOZ,QACbnG,KAAK4tE,gBAAgB,gCAE3B,CAYAA,gBAAgB7uD,EAAKlV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,SAAStR,KAAKoB,WAAW2d,IACvC/e,KAAKmpE,UAAU7kE,KAAK,CAAEgN,UAASzH,QAClC,CAMA3B,gBACG,OAAOlI,KAAK+B,GAAGsN,QAAQgB,KAAK,CACzBC,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAGtE,CAEAmtE,cACG,OAAO/tE,KAAK+B,GAAGsN,QAAgB,OAAE,CAC9BiB,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,oBCzEH,IAAIotE,EAAgB,EAAQ,OAE5BvuE,EAAOC,QAAU,cAAwBsuE,EACtCruE,YAAYu8B,EAAWn6B,GACpBjC,MAAMo8B,EAAWn6B,GAEjB/B,KAAKmpE,UAAY,EAQpB,CAWAI,WACG,OAAOvpE,KAAKmpE,SACf,CAOAD,eACGlpE,KAAKmpE,UAAY,EACpB,CASAG,cACG,OAAOtpE,KAAKupE,UACf,CAOAhtC,kBACG,OAAOv8B,KAAK+B,GAAG6Q,QAAQ1C,YAAc,IACxC,CAOA/K,gBACG,IAAIsc,EAAMzhB,KAAK6U,eACf,OAAI4M,EAAI7gB,GACE6gB,EAAI7M,UAAUH,OAAOtM,IACzB,GAAIA,EAAIuM,WAAWrH,QAAQ,oBAAsB,EAM9C,OAJA7E,QAAQ2O,IACL,qDAAqDsK,EAAI7gB,YAE5D4H,QAAQ2O,IAAIsK,GAGf,MAAMtZ,CAAG,IAGRsH,QAAQC,SAClB,CAOAvK,aACG,IAAIsc,EAAMzhB,KAAK6U,eAEf4M,EAAIta,KAAOsa,EAAIta,MAAQnH,KAAKmH,MAAQnH,KAAKoB,OAAS,OAClD,IAAIyI,QAAa4X,EAAI7Z,OAChB5H,KAAKY,KACPZ,KAAKY,GAAKiJ,EAAKjJ,GAErB,oBCxGH,MAAMqtE,EAAc,EAAQ,OAuB5B,SAASC,EAAW3+D,GAEbA,GAASA,EAAM1F,MAA4B,YAApB0F,EAAM1F,KAAK0F,OACnC9L,MAAM0N,MAAM,CACTC,MAAO,yBACPG,GAAI,KACJlD,KAAMkB,EAAM1F,KAAKyH,SAAW,GAC5B1P,KAAM,iBAGf,CA0BAnC,EAAOC,QAAU,cAAsBuuE,EACpCtuE,YAAYsF,GACTnF,MAAMmF,GAENjF,KAAKmuE,eAAiB,IAAIv4D,KACvB5V,KAAKouE,eAAe,8BAA+Bx4D,EAAO,EAG7D5V,KAAKquE,eAAiB,IAAIz4D,KACvB5V,KAAKouE,eAAe,8BAA+Bx4D,EAAO,EAG7D5V,KAAKsuE,gBAAkB,IAAI14D,KACxB5V,KAAKouE,eAAe,QAASx4D,EAAO,EAGvC5V,KAAKuuE,aAAe,CAACj/D,EAASnH,EAAK0B,KAC5B1B,EACDmH,EAAQqH,SAASxO,GAGpBmH,EAAQI,UAAU7F,EAAK,EAG1B7J,KAAKwuE,eAAiB,IAAI54D,KACvB5V,KAAKouE,eAAe,8BAA+Bx4D,EAAO,EAG7D5V,KAAKouE,eAAiB,CAAC/pE,EAAKiL,EAASnH,EAAK0B,KAQnC1B,EACDmH,EAAQqH,SAASxO,IAGhB9D,GAE6B,GAA1BA,EAAIgJ,QAAQ,WACbrN,KAAKiY,cAAcpO,GAItB7J,KAAKiY,cAAcpO,EAAKA,MAG3ByF,EAAQI,UAAU7F,GAEdxF,GA/Db,SAA2B2D,EAAO3D,EAAKwF,GAGL,UAA3B7B,EAAMjG,GAAGsN,QAAQzN,QAClBoG,EAAMjG,GAAGyN,KAAKnL,EAAK,CAChB2T,SAAUhQ,EAAM/C,OAAOrE,GACvBiJ,QAGT,CAuDY4kE,CAAkBzuE,KAAMqE,EAAKwF,GAChC,CAEN,CAeA4zB,wBAAwB93B,GAErB,IAAIw2B,EAAWn8B,KAAKiF,OAAOy4B,qBAEvBC,GAAkB,EAClBxB,EAASh2B,QACVg2B,EAASl4B,SAAQ,SAAU2B,GACH,MAAjBD,EAAOC,KACR+3B,GAAkB,EAExB,IAECA,IAEyB,MAAvBh4B,EAAOwf,mBACuB,IAAvBxf,EAAOwf,cACS,IAAvBxf,EAAOwf,eAEPxf,EAAOwf,aAAe,IAEzBnlB,KAAKiF,OAAOu3B,YAAY72B,EAAQA,EAAQw2B,GAE9C,CAEA/jB,QAAQpB,EAAQpB,GACb,OAAO5V,KAAK+B,GAAGsN,QAAQ2H,GAAQpB,EAClC,CAMA84D,YAAY/oE,GAKT,OAJAA,EAAO+pC,MAAMvhC,KAAK1I,GACRzF,KAAKy9B,wBAAwBh4B,EAAKoE,QAGrC,IAAI4F,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQs/D,KAAK1sD,GAAO,CAAC3S,EAASnH,EAAK0B,KACpC1B,EACDwO,EAAOxO,IAGVnI,KAAKiY,cAAcpO,GACnB6F,EAAQ7F,GAAK,IAMhB7J,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAKtQ,KAAKiF,OAAO68B,eACjBlsB,OAAQjQ,GAEX,CACGtB,IAAK4d,EACL3S,QAAS,CAAC,IAYZmF,MAAMkC,EAAO,GAEvB,CAMA+yD,OAAO/jE,GAUJ,OATA3F,KAAKy9B,wBAAwB93B,GAG7B3F,KAAKiF,OAAO8B,SAAS9C,SAAS+C,SACE2jB,IAAzBhlB,EAAOqB,EAAEF,aACVE,EAAE07B,aAAa/8B,EAClB,IAGI,IAAI8J,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQs/D,KAAK1sD,EAAOjiB,KAAKmuE,gBACjCnuE,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAKtQ,KAAKiF,OAAO44B,UACjBjoB,OAAQjQ,GAEX,CACGtB,IAAK4d,EACL3S,QAAS,CAAEI,UAASiH,YAExBlC,OAAOtM,IACN+lE,EAAW/lE,GACXwO,EAAOxO,EAAI,GACZ,GAER,CAQAiO,OAAOxV,GACJ,OAAO,IAAI6O,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQs/D,KAAK1sD,EAAOjiB,KAAKquE,gBACjCruE,KAAK+B,GAAGsN,QAAgB,OACrB,CACGiB,IAAKtQ,KAAKiF,OAAO84B,YAAYn9B,IAEhC,CACGyD,IAAK4d,EACL3S,QAAS,CAAEI,UAASiH,YAExBlC,OAAOtM,IACN+lE,EAAW/lE,GACXwO,EAAOxO,EAAI,GACZ,GAER,CAMAhD,cAAcqpB,GAqBX,OApBAA,EAAOA,GAAQ,CAAC,EAoBT,IAAI/e,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQs/D,KAAK1sD,EAAOjiB,KAAKsuE,iBACjCtuE,KAAK+B,GAAGsN,QAAQsG,IACb,CACGrF,IAAKtQ,KAAKiF,OAAO44B,UACjBjoB,OAAQ4Y,GAGX,CACGnqB,IAAK4d,EACL3S,QAAS,CAAEI,UAASiH,YAQtBlC,OAAOtM,IACDA,GAAOA,EAAIsO,OAEJ,mBADAtO,EAAIsO,KAENzW,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,oEACH44B,UAAW1b,IAKdxuB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,sEACH44B,UAAW1b,KAKvB7X,EAAOxO,EAAI,GACZ,GAEX,CAOAymE,SAASC,GAEF7uE,KAAKi9B,SACN4xC,EAAGpqE,OAAO,YAAazE,KAAKi9B,QAC5B4xC,EAAGpqE,OAAO,eAAgB,KAQ1BoqE,EAAGpgD,MAAQogD,EAAGpgD,OAAS,CAAC,EACpBogD,EAAGpgD,MAAMu9C,oBACV6C,EAAG1C,YAAY0C,EAAGpgD,MAAMu9C,oBAE3B6C,EAAGpgD,MAAMu9C,mBAAqB6C,EAAGlgD,YAC9B,iBACA,CAACuD,EAAOhB,KACL,IAAI1C,EAAO,CACRa,MAAOrvB,KAAK88B,OACZnvB,KAAM3N,KAAK+8B,MACX5K,MAAOjB,EACPmB,KAAMH,GA2BT,OAxBI28C,EAAGxpE,cAAcwpE,EAAGxpE,aAAa,CAAEzD,KAAM,SAE7C5B,KAAK0vB,QAAQlB,GAAMha,MAAM3K,IAiBtBglE,EAAGt3D,MAAM1N,GAELglE,EAAGlnE,cAAcknE,EAAGlnE,cAAc,KAGlC,CAAK,IAIlBknE,EAAGnqE,WAIN,IAAI8pB,EAAO,CAAC,EACRxuB,KAAK88B,SAAQtO,EAAKa,MAAQrvB,KAAK88B,QAC/B98B,KAAK+8B,QAAOvO,EAAK7gB,KAAO3N,KAAK+8B,OACd,MAAf/8B,KAAKi9B,SAAgBzO,EAAK2D,MAAQnyB,KAAKi9B,QACzB,MAAdj9B,KAAKg9B,QAAexO,EAAK6D,KAAOryB,KAAKg9B,OAErC6xC,EAAGxpE,cAAcwpE,EAAGxpE,aAAa,CAAEzD,KAAM,SAE7C5B,KAAK0vB,QAAQlB,GACTha,MAAM3K,IAgBJglE,EAAGt3D,MAAM1N,GAELglE,EAAGlnE,cAAcknE,EAAGlnE,cAAc,IAExC8M,OAAOtM,IACLK,QAAQ+G,MAAM,QAASpH,EAAI,GAEpC,CAgBA2mE,KAAK3sE,GACF,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQs/D,KAAK1sD,EAAOjiB,KAAKuuE,cACjCvuE,KAAK+B,GAAGsN,QAAQsG,IACb,CACGrF,IAAKtQ,KAAKiF,OAAO88B,aACjBnsB,OAAQzT,GAGX,CACGkC,IAAK4d,EACL3S,QAAS,CAAEI,UAASiH,YAExBlC,OAAOtM,IACFA,GAAOA,EAAIsO,MACZzW,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,mCACTnN,YAGNwU,EAAOxO,EAAI,GACZ,GAER,CAQAgqB,MAAMA,GAEH,OADAnyB,KAAKi9B,OAAS9K,EACPnyB,IACV,CAQAqyB,KAAKA,GAEF,OADAryB,KAAKg9B,MAAQ3K,EACNryB,IACV,CAMA+uE,OAAOnuE,EAAI+E,GAIR,IAAK,IAAItB,KAHTrE,KAAKy9B,wBAAwB93B,GAGbA,EACM,MAAfA,EAAOtB,WAAqBsB,EAAOtB,GAG1C,OAAO,IAAIoL,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQs/D,KAAK1sD,EAAOjiB,KAAKwuE,gBACjCxuE,KAAK+B,GAAGsN,QAAQ8G,IACb,CACG7F,IAAKtQ,KAAKiF,OAAO84B,YAAYn9B,GAC7BgV,OAAQjQ,GAEX,CAAEtB,IAAK4d,EAAO3S,QAAS,CAAEI,UAASiH,YAgBjClC,OAAOtM,IACL+lE,EAAW/lE,GACXwO,EAAOxO,EAAI,GACZ,GAEX,CAMA6mE,aAAY,OAAEC,EAAM,OAAEtpE,IACnB,OAAO,IAAI8J,SAAQ,CAACC,EAASiH,KAC1B,IAAIsL,EAAQjiB,KAAK+B,GAAGkgB,QACpBjiB,KAAK+B,GAAGsN,QAAQs/D,KAAK1sD,GAAO,CAAC3S,EAASnH,KAC/BA,EACDwO,EAAOxO,GAIVuH,GAAQ,EAAK,IAGhB1P,KAAK+B,GAAGsN,QAAQ8G,IACb,CACG7F,IAAKtQ,KAAKiF,OAAO68B,eACjBlsB,OAAQ,CACLq5D,SACAtpE,WAGN,CAAEtB,IAAK4d,EAAO3S,QAAS,CAAC,IAKvBmF,MAAMkC,EAAO,GAEvB,oBC/iBH,MAAM2oB,EAAU,EAAQ,OAExB7/B,EAAOC,QAAU,cAA2B4/B,EASzCovC,YAAY/oE,GACT,IAAI4J,EAAQ,IAAIjH,MACb,kEAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,CAMAm6D,OAAO/jE,GACJ,IAAI4J,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,CAQA6G,OAAOxV,GACJ,IAAI2O,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,CAMAw/D,OAAOnuE,EAAI+E,GACR,IAAI4J,EAAQ,IAAIjH,MACb,6DAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,CAMAy/D,aAAY,OAAEC,EAAM,OAAEtpE,IACnB,IAAI4J,EAAQ,IAAIjH,MACb,kEAEH,OAAOmH,QAAQkH,OAAOpH,EACzB,oBCnEH,MAAMgwB,EAAe,EAAQ,OACvB2vC,EAAkC,EAAQ,OAEhD,IAAInvE,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAmBhDnW,EAAOC,QAAU,cAAuB6/B,EACrC5/B,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAElB/B,KAAKkiC,eAAiB,IAAIgtC,EACvBlsD,EACAhjB,KACA+B,GAIH/B,KAAK+G,SAAS9C,SAAS+C,IACpBA,EAAE5E,GAAG,sBAAuBwD,IAEzB,IAAI6b,EAAMzhB,KAAK+B,GAAGsiB,eAAeze,EAAMhF,IACvC,GAAK6gB,EAAL,CAEA,IAAI+W,EAAWx4B,KAAK+B,GAAGmE,SAASub,EAAKzhB,MAGjC0kC,EAAY,GAChB1kC,KAAK+G,SAAS9C,SAAS+C,IAChBA,EAAEpG,KAAOgF,EAAMhF,GAInB8jC,EAAUpgC,KAAK0C,GAHZ09B,EAAUpgC,KAAKk0B,EAGD,IAGpBx4B,KAAKogC,QAAUsE,CAdC,CAcQ,GACzB,IAQL1kC,KAAKyf,wBAA0B,CAAC,EAMhCzf,KAAKmvE,wBAA0B,CAAC7/D,EAASnH,EAAKqP,KAE3C,IAAImI,EAAU3f,KAAKyf,0BAA0BnQ,EAAQO,MACjD1H,EACDwX,GAAShJ,OAAOxO,GAGnBwX,GAASjQ,QAAQ8H,EAAS,EAE7BxX,KAAK+B,GAAGsN,QAAQjN,GAAG,iBAAkBpC,KAAKmvE,wBAC7C,CASAtH,kBACG,IAAIG,EAAShoE,KAAK+B,GAAGgW,WAAW/X,KAAKY,IAerC,OAZIZ,KAAKyf,0BAENzf,KAAK+B,GAAGsN,QAAQkmB,eACb,iBACAv1B,KAAKmvE,yBAIRnH,EAAOvoD,wBAA0Bzf,KAAKyf,wBACtCzf,KAAKyf,wBAA0B,MAG3BuoD,CACV,CASA/hE,WAAW+c,GAoBRljB,MAAMmG,WAAW+c,GAEbhjB,KAAKkiC,gBAAgBliC,KAAKkiC,eAAektC,QAAQpsD,EACxD,CAIAzd,UACG,IAAIgC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAwBnC,OAfgB,GALbvH,KAAK+B,GAAGokB,SAASL,GAEXA,EAAEllB,IAAMZ,KAAKY,IACbklB,EAAE3e,KAAKgR,eAAiBnY,KAAKmH,KAAKgR,gBAErChS,QAEHoB,EAAUgW,SACP,OACAxd,EAAE,oDAAqD,CAACC,KAAKmH,QAW5DI,CACV,CASAsoB,YAAYhmB,GACT,IAAItC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAMnC,OALAvH,KAAK+G,SAAS9C,SAAS+C,IAEhB6C,EAAKwlE,eAAeroE,EAAEF,aAAaE,EAAE6oB,YAAYhmB,EAAMtC,EAAU,IAGjEA,CACV,CAmCApC,gBAuFG,IASG,QA/B0B,MAC1B,IAAImmB,EAAa,GAIjB,OAHAtrB,KAAK+B,GAAGqpB,eAAennB,SAASsnB,IAC7BD,EAAWhnB,KAAKinB,EAAIg9C,aAAavoE,MAAM,IAEnCyP,QAAQ4R,IAAIiK,EAAW,EAmBxBJ,QAhBmB,KAClB,IAAIzb,SAAS0b,IACjBnrB,KAAK+B,GAAG4lB,SACJC,GAAMA,EAAEzB,SAASL,GAAMA,EAAEllB,IAAMZ,KAAKY,KAAIuF,OAAS,IACnDlC,SAAS2jB,IAGRA,EAAEue,UAAW,CAAI,IAGpBhb,GAAM,IASHmkD,GAIFtvE,KAAK4I,WACN,OAAO6G,QAAQC,gBAOZ1P,KAAK+tE,cAKX,IAAIwB,EAAa,GAIjB,GAAiB,UAAbvvE,KAAK4B,KAAkB,CACxB,IAAIkC,EAAY9D,KAAK+G,SACrB/G,KAAKogC,QAAU,GAGft8B,EAAUG,SAAS+C,IAChBuoE,EAAWjrE,KAAK0C,EAAE4N,UAAU,GAElC,OACMnF,QAAQ4R,IAAIkuD,SAEZzvE,MAAM8U,UACZ5U,KAAKwP,KAAK,YAKb,CAJE,MAAOrH,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,gDAEf,CAmDH,CAWAnK,aACG,IAAIqqE,GAAQ,EAGPxvE,KAAKY,KACPZ,KAAKoB,MAAQpB,KAAKoB,OAASpB,KAAKmH,KAChCqoE,GAAQ,GAGX,IAKG,aAJM1vE,MAAM8H,OACR4nE,SACKxvE,KAAKkI,gBAEPlI,IAOV,CANE,MAAOmI,GAKN,MAJAnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kBACTwI,IAAK9X,KAAK8F,UAEPqC,CACT,CACH,CAaArC,QACG,IAAIgI,EAAShO,MAAMgG,QAInB,OAFAgI,EAAOs2B,qBAAuBpkC,KAAKkiC,eAAep8B,QAE3CgI,CACV,CAMA5F,gBACG,OAAO,IAAIuH,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK+B,GAAG8N,OACnB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,iBACLiL,QAAS,CAAEO,OAAMjP,GAAIZ,KAAKY,KAE7BZ,KAAK+B,GAAGsN,QAAQgB,KACb,CACGC,IAAK,8BAA8BtQ,KAAKY,MAE3CiV,EACF,GAEP,CAEAk4D,cACG,OAAO,IAAIt+D,SAAQ,CAACC,EAASiH,KAC1B,IAAI9G,EAAO7P,KAAK+B,GAAG8N,OACnB7P,KAAKyf,wBAAwB5P,GAAQ,CAAEH,UAASiH,UAChD,IAAId,EAAc,CACfxR,IAAK,iBACLiL,QAAS,CAAEO,OAAMjP,GAAIZ,KAAKY,KAE7BZ,KAAK+B,GAAGsN,QAAgB,OACrB,CACGiB,IAAK,8BAA8BtQ,KAAKY,MAE3CiV,EACF,GAEP,CAgBA45D,aAAa3oE,EAAY4oE,GAEtB,IADA,IAAIp1C,EAAU,KACLjnB,EAAI,EAAGA,EAAIrT,KAAKogC,QAAQj6B,OAAQkN,IACtC,GAAIrT,KAAKogC,QAAQ/sB,GAAGvM,YAAcA,EAAY,CAC3CwzB,EAAUt6B,KAAKogC,QAAQ/sB,GAAGzS,GAC1B,KAEH,CASH,IAAI6jC,EAAgBzkC,KAAK+B,GAAGmgB,cAAcoY,GAI1C,OAHAmK,EAAgBA,GAAiB,CAAC,GACpBzjC,MAAQ0uE,EAEf1vE,KAAK+B,GAAGmgB,cAAcoY,EAASmK,EAEzC,CAIAkrC,cACGC,EACAjP,EACAK,EACAC,EACA4O,GAEA7O,EAAiBA,GAAkB,GACnCC,EAAeA,GAAgB,GAE/B,IAAIrqD,EAAU,GA6Ed,OAzEA5W,KAAK+G,SAAS9C,SAAS+C,IACpB,IAAI8oE,EAAS9oE,EAAE+oE,aAAa,CACzBH,kBAAmBA,EACnBhqB,SAAU+a,IAGTA,IACDmP,EAAOE,gBAAkBhpE,EAAEZ,SAAS4pE,iBAGvCF,EAAOvgD,MAAQvoB,EAAEuoB,YAAS5E,EAC1BmlD,EAAOx1C,QAAUtzB,EAAEpG,GAIK,GAApBoG,EAAEZ,SAASpF,QACZ8uE,EAAO9uE,MAAQgG,EAAEZ,SAASpF,OAI7B,IAAIyjC,EAAgBzkC,KAAK+B,GAAGmgB,cAAclb,EAAEpG,IACxC6jC,GAAiBA,EAAczjC,SAC3B8uE,EAAO9uE,OAASyjC,EAAczjC,MAAQ8uE,EAAO9uE,SAE/C8uE,EAAO9uE,MAAQyjC,EAAczjC,OAI9B8uE,EAAO9uE,QAET8uE,EAAOG,QAAS,GAIfjP,EAAe3zD,QAAQrG,EAAEpG,KAAO,EACpB,aAAToG,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAC3ByrE,EAAOI,OAAS,CAAEC,QAAS,cAAevqE,MAAOoB,GAEjD8oE,EAAOI,OAAS,CAAEC,QAAS,cAIxBlP,EAAa5zD,QAAQrG,EAAEpG,KAAO,IACpCkvE,EAAOI,OAAS,CAAEC,QAAS,gBAE9Bv5D,EAAQtS,KAAKwrE,EAAO,IA4BhBl5D,CACV,CAMAw5D,eAAevmE,EAAMjK,EAAKywE,EAAWpB,EAAQtO,GAC1C,IAAK92D,IAASA,EAAK2jB,WAAY,OAG/B,IAAIzmB,EAAS,GAMb,GALAspE,EAAUC,YAAYxpE,IACnB,IAAIlB,EAAQ5F,KAAK+G,QAAQC,GAAMA,EAAEF,YAAcA,IAAY,GACvDlB,GAAOmB,EAAOzC,KAAKsB,EAAM,IAGlB,MAAVqpE,EACDA,EAAOhrE,SAASrD,IACb,IAAIse,EAAMrV,EAAK4iB,QAAQ7rB,GACnBse,GACDnY,EAAO9C,SAAS+C,IACb,IAAIzE,EAAO8tE,EAAUE,YAAY,CAC9BrxD,IAAKA,EAAIte,GACT4vE,OAAQxpE,EAAEF,aAEbE,EAAEypE,cAAcvxD,EAAKtf,EAAK2C,EAAM,CAC7BqjD,SAAU+a,GACX,GAER,QAEC,CACJ,IAAI//D,EAAKiJ,EAAK2jB,aACd,KAAO5sB,GAAI,CACR,IAAIse,EAAMrV,EAAK4iB,QAAQ7rB,GACnBse,GACDnY,EAAO9C,SAAS+C,IACb,IAAIzE,EAAO8tE,EAAUE,YAAY,CAC9BrxD,IAAKA,EAAIte,GACT4vE,OAAQxpE,EAAEF,aAEbE,EAAEypE,cAAcvxD,EAAKtf,EAAK2C,EAAM,CAC7BqjD,SAAU+a,GACX,IAGR//D,EAAKiJ,EAAK8jB,UAAU/sB,EACvB,CACH,CACH,CAGAmiC,YAAYhV,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAIoO,EAAWn8B,KAAK09B,qBACpB19B,KAAKo8B,UAAUrO,EAASA,EAASoO,GAEjC,IAAI6G,EAAYhjC,KAAKy/B,aAAe,GAGpC,IAAKuD,GAAahjC,KAAK+G,SAASZ,OAAS,EAAG,CACzC,IAAI88B,EAAejjC,KAAK+G,QAAQC,GAAMA,EAAEk8B,oBAAmB,GACzCF,EAAdC,EAA0B,IAAIA,EAAariC,MAEhC,GAAGZ,KAAK+B,GAAGogB,OAAO4L,EAAQntB,IAAM,OAAS,KAClDmtB,EAAQntB,IAEjB,CAIA,IAAIyiC,EAASL,EAAUM,MAAM,cAc7B,GAZID,GAAUA,EAAOp/B,SAClBo/B,EAAOp/B,SAASs/B,IACb,IAAIC,EAAiBD,EAAMvwB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDpN,EAAQ5F,KAAK+N,UAAUy1B,GACd,MAAT59B,IAEJo9B,EAAYA,EAAUhwB,QAAQuwB,EAAO39B,EAAM0a,OAAOyN,IAAY,IAAG,KAKlEiV,EAAUG,OAAQ,CACpB,IAAIzD,EAAgB1/B,KAAK0/B,eAAiB,CAAC,EAExCsD,EADCtD,GAAiBA,EAAcC,iBACpB5/B,EAAE2/B,EAAc0D,aAAe,cAG/B,GAAGpjC,KAAK+B,GAAGogB,OAAO4L,EAAQntB,IAAM,OAAS,KAClDmtB,EAAQntB,IAGjB,CAEA,OAAOoiC,CACV,CAEAkiC,cACG,OAAOllE,KAAKkiC,eAAeE,gBAC9B,CAEAknC,cAEG,IAAIoH,EAAc5wE,MAAMwpE,cASxB,OARAtpE,KAAK+G,SAAS9C,SAAS+C,IACpB0pE,EAAcA,EAAYnpD,OAAOvgB,EAAEuiE,WAAW,IAGjDvpE,KAAKwgC,UAAUv8B,SAASoP,IACrBq9D,EAAcA,EAAYnpD,OAAOlU,EAAEk2D,WAAW,IAG1CmH,EAAY5nE,QAAQ6nE,GAAMA,GACpC,CAEAzH,eACGppE,MAAMopE,eAEN,IAAIplE,EAAY9D,KAAK+G,SAEG,GAApBjD,EAAUqC,QACXnG,KAAK4tE,gBAAgB,kBAGvB5tE,KAAK27B,kBAAoB,IAAI13B,SAASrD,IACpCZ,KAAK4tE,gBAAgB,sCAAsChtE,KAAM,KAGnEZ,KAAKugC,eAAiB,IAAIt8B,SAASrD,IACjCZ,KAAK4tE,gBAAgB,sCAAsChtE,KAAM,IAGpEkD,EAAUG,SAAS+C,IAChBA,EAAEkiE,cAAc,IAGnBlpE,KAAKwgC,UAAUv8B,SAASoP,IACrBA,EAAE61D,cAAc,GAEtB,CAEA0E,gBAAgB7uD,EAAKlV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,UAAUtR,KAAKoB,WAAW2d,IACxC/e,KAAKmpE,UAAU7kE,KAAK,CAAEgN,UAASzH,QAElC,CAEA+mE,OAAOviE,GAIJ,OAHA7F,QAAQ+G,MACL,qFAEIvP,KAAK+B,GAAGogB,OAAO9T,EACzB,oBCvwBH,MAAM4iB,EAAW,EAAQ,OAOzBxxB,EAAOC,QAAU,cAA+BuxB,qBCPhD,MAAMA,EAAW,EAAQ,OASzBxxB,EAAOC,QAAU,cAA6BuxB,qBCM9C,MAAM4/C,EAAoB,EAAQ,OAElC,IAAI1yD,EAAY,KACC,oBAANvG,GACRA,GAAGC,OAAOzV,GAAG,mBAAmB,SAAU2c,GACnCZ,EACDA,EAAU3O,KAAK,kBAAmB,CAC/Bq8B,QAAS9sB,EAAI8sB,QACbhiC,KAAMkV,EAAIlV,QAGbrB,QAAQ+G,MACL,sEAEH/G,QAAQ+G,MAAM,iCAEpB,IAEA/G,QAAQ+G,MAAM,qDAMjB9P,EAAOC,QAAU,cAA4BmxE,EAC1ClxE,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAEboc,IACFA,EAAYpc,GAGf/B,KAAK+B,GAAGK,GAAG,mBAAoByH,IACxB7J,KAAKY,IAAMiJ,EAAKgiC,SAAS7rC,KAAKiG,WAAW4D,EAAKA,KAAK,IAW1D7J,KAAK8wE,cAAc9wE,KAAKqvB,MAC3B,CAmEA6U,aAAaO,GACV3kC,MAAMokC,aAAaO,GAEnBzkC,KAAKogC,QAAQn8B,SAAS8sE,IAGnBA,EAAWnrE,MAAMkB,WAAa,GAAGiqE,EAAWxhD,SAASwhD,EAAWnrE,MAAMkB,YAAY,GAExF,CAYA2oE,aAAa3oE,EAAY4oE,EAAUsB,GAChC,IAAIprE,EAAQ5F,KAAK+G,QAAQC,GAAMA,EAAEF,YAAcA,IAAY,GAC3D,OAAIlB,GACDA,EAAMQ,SAASpF,MAAQ0uE,EAEhB1vE,KAAK4H,QAEL6H,QAAQC,SAErB,CAQAigE,cACGC,EACAjP,EACAK,EACAC,EACA4O,GAEA,IAAIj5D,EAAU9W,MAAM6vE,cACjBC,EACAjP,EACAK,EACAC,EACA4O,GAyDH,OAtDAj5D,EAAQ3S,SAASgtE,IAEd,IAAIhsE,EAASjF,KAAK4kC,cAAcqsC,EAAE1hD,OAClC,IAAKtqB,EAAQ,OAEb,IAAIW,EAAQX,EAAO8I,UAAUkjE,EAAE32C,SAC/B,IAAK10B,EAAO,OAGZ,IAAI2pB,EAAQ,GA0BZ,GAxBGA,EADCpiB,MAAMC,QAAQpN,KAAKikC,SACZr+B,EAAMX,OAAOkC,KAEb8pE,EAAE1hD,MAKb0hD,EAAErwE,GAAK,GAAG2uB,KAAS3pB,EAAMkB,aAGrB9G,KAAKoG,UAAYpG,KAAKoG,SAASk+B,WAChC2sC,EAAEnB,OAAS,GAAGlqE,EAAMxE,OAAS,KAE7B6vE,EAAEnB,OAAS,GAAGlqE,EAAMX,OAAO7D,OAAS,MAAMwE,EAAMxE,OAAS,KAIxDwE,EAAMQ,UAAYR,EAAMQ,SAASC,WAClC4qE,EAAEnB,OAAS,iCAAiClqE,EAAMizC,uBAC/Co4B,EAAEnB,UAKJ9vE,KAAKklB,QAAS,CACf,IAAIgsD,EAAiBD,EAAE1O,SAEvB0O,EAAE1O,SAAW,CAACn0D,EAAM27B,IACb37B,EAAK6iE,EAAErwE,IAELmpC,EAAOx+B,KAAK6C,EAAM27B,IACjBmnC,EACIA,EAAe9iE,EAAM27B,EAAQ37B,EAAK6iE,EAAErwE,KACpCwN,EAAK6iE,EAAErwE,KAEN,EAElB,CAEAqwE,EAAEhB,QAAS,EACXgB,EAAE3K,SAAW,GAAG,IAGZ1vD,CACV,CAWAk6D,cAAcrhD,GACNA,IAIDA,EAAKlG,MACLkG,EAAKtO,OAAS,IAAIld,SAAS2L,IACzB5P,KAAK8wE,cAAclhE,EAAE,KAMf5P,KAAK+N,UAAU0hB,EAAKprB,MACN,eAAZorB,EAAKprB,KAChBrE,KAAK4tE,gBACF,iDACA,CACGn+C,SAMJzvB,KAAKmxE,kBACPnxE,KAAKmxE,gBAAkBnxE,KAAK+B,GAAG6xB,iBAC5B,GAAG5zB,KAAKY,sBAKTZ,KAAKmxE,gBAAgBC,oBAAoB3hD,IAC3CzvB,KAAK4tE,gBAAgB,kCAAmC,CACrDn+C,UAGT,CAEAy5C,eACGppE,MAAMopE,eAENlpE,KAAK8wE,cAAc9wE,KAAKqvB,OAGxBrvB,KAAK0jC,gBAAgBz/B,SAAS+C,IAC3BhH,KAAK4tE,gBACF,2CACG5mE,EAAEqzB,8BACiBxmB,KAAKC,UAAU9M,KACrC,CACG29B,UAAW39B,GAEhB,IAGJhH,KAAK2jC,gBAAgB1/B,SAAS+C,IAC3BhH,KAAK4tE,gBACF,yBAAyB5mE,EAAE89B,+BACxB99B,EAAEszB,6BACiBzmB,KAAKC,UAAU9M,EAAE29B,aACvC,CACG1/B,OAAQ+B,EAAE89B,MACVH,UAAW39B,EAAE29B,WAElB,IAGJ3kC,KAAK4jC,aAAa3/B,SAAS+C,IACxBhH,KAAK4tE,gBACF,SAAS5mE,EAAEpB,MAAMhF,kCAAkCiT,KAAKC,UACrD9M,EAAE29B,2CAEL,CACG/+B,MAAOoB,EAAEpB,MAAME,QACf6+B,UAAW39B,EAAE29B,WAElB,IAGJ3kC,KAAK6jC,kBAAkB5/B,SAAS+C,IAC7BhH,KAAK4tE,gBACF,SACG5mE,EAAE29B,UAAUrK,uCACiBzmB,KAAKC,UAClC9M,EAAE29B,6BAEL,CACGA,UAAW39B,EAAE29B,WAElB,IAGJ3kC,KAAK8jC,eAAe7/B,SAAS+C,IAC1BhH,KAAK4tE,gBAAgB5mE,EAAEsK,QAAStK,EAAE6C,KAAK,GAE7C,CAEA+jE,gBAAgB7uD,EAAKlV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,SAAStR,KAAKoB,WAAW2d,IACvC/e,KAAKmpE,UAAU7kE,KAAK,CAAEgN,UAASzH,QAClC,CAEA+mE,OAAOviE,GAIJ,OAHA7F,QAAQ+G,MACL,qFAEIvP,KAAK+B,GAAGogB,OAAO9T,EACzB,oBChWH,MAAMgjE,EAAgB,EAAQ,OAI9B5xE,EAAOC,QAAU,cAAwB2xE,EACtC1xE,YAAYqjB,EAAYjhB,GACrBjC,MAAMkjB,EAAYjhB,GAElB/B,KAAKsxE,eAAiB,GAMtBtxE,KAAK+B,GAAGK,GAAG,uBAAwByH,IAC5B7J,KAAKY,IAAMiJ,EAAKmO,UAAUhY,KAAKiG,WAAW4D,EAAKA,KAAK,GAE9D,CAWA+K,UAEG,IAAI28D,EAAcvxE,KAAKkJ,WACnBsoE,EAAa,GAKjB,OAJAD,EAAYttE,SAASoG,IAClBmnE,EAAWltE,KAAK+F,EAAEuK,UAAU,IAGxBnF,QAAQ4R,IAAImwD,GAAYh9D,MAAK,IAE1B,IAAI/E,SAAQ,CAACC,EAASiH,KAC1B3W,KAAK6U,eACDD,UACAJ,MAAK,KAEH9E,GAAS,IAEX8E,MAAK,KAIHhM,QAAQ+G,MACL,kGAEH,IAAIkiE,EAAkBzxE,KAAK+B,GAAGqpB,eAAe0B,MAAMlf,GACzCA,EAAEoZ,WAAWhnB,QAEnByxE,EAAgBtrE,OAAS,GAC1BsrE,EAAgBxtE,SAAS2J,IACtBA,EAAE66D,cAAczoE,KAAK,GAE3B,IAEFyU,OAAOtM,IACLwO,EAAOxO,EAAI,GACZ,KAGd,CAWAP,OAUG,IAAIyyD,EAAW,GAKf,OAJer6D,KAAKkJ,WACXjF,SAAS04B,IACf09B,EAAS/1D,KAAKq4B,EAAE/0B,OAAO,IAEnB6H,QAAQ4R,IAAIg5C,GAAU7lD,MAAK,IAExBxU,KAAK6U,eACRjN,OACA4M,MAAM3K,IAIC7J,KAAKY,KACPZ,KAAKY,GAAKiJ,EAAKjJ,IAMlB,IAAI8wE,EAAO,CAAC,EACZ,IAAIC,EAAO3xE,KAAKwmC,UAChBryB,OAAOC,KAAKpU,KAAKwmC,WAAWviC,SAASoQ,IAClCq9D,EAAK1xE,KAAKwmC,UAAUnyB,GAAGzT,IAAMZ,KAAKwmC,UAAUnyB,EAAE,IAEjDrU,KAAKwmC,UAAYkrC,EAIjB,IAAIE,GAAW,EAOf,GANAz9D,OAAOC,KAAKs9D,GAAMztE,SAASoQ,IACnBs9D,EAAKt9D,KACPu9D,GAAW,EACd,IAGCA,EACD,OAAO5xE,KAAK4H,MACf,KAGZ,CAEArC,UACG,IAAIgC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAcnC,OARgB,GAFbvH,KAAK+B,GAAGglB,WAAWjB,GACTA,EAAE3e,KAAKgR,eAAiBnY,KAAKmH,KAAKgR,gBACzChS,QAEHoB,EAAUgW,SACP,OA1IJ,KAAI3H,IAAW7T,GAAGsP,aAAajQ,SAASwU,GA2IpC7V,CAAE,qDAAsD,CAACC,KAAKmH,QAI7DI,CACV,CAaAsqE,6BAA6Bp4C,GAC1B,IAAI2P,EAAOppC,KAAK+B,GAAGy3B,oCAAoCC,EAASz5B,MAIhE,OAHIopC,GACDppC,KAAKioC,WAAWmB,GAEZA,CACV,CAQA0oC,aAAaC,GACV/xE,KAAKgyE,mBAAmBD,GACxB/xE,KAAKsxE,eAAehtE,KAAKytE,EAC5B,CAOAC,mBAAmBD,GAChB/xE,KAAKsxE,eAAiBtxE,KAAKsxE,eAAexoE,QAAQ8D,GAAMA,EAAEhM,IAAMmxE,EAAMnxE,IACzE,CAQA0oE,cAEG,IAAIoH,EAAc,GAAGnpD,OAAOvnB,KAAKmpE,WAYjC,GAXAnpE,KAAKkJ,WAAWjF,SAASoG,IACtBA,EAAE6+D,eACFwH,EAAcA,EAAYnpD,OAAOld,EAAEk/D,WAAW,IAGnB,GAA1BvpE,KAAKkJ,WAAW/C,QACjBuqE,EAAYpsE,KAAK,CAAEgN,QAAS,4BAA6BzH,KAAM,CAAC,KAK9D7J,KAAKiyE,WACP,GAAIj5D,OAAOk5D,UAERlyE,KAAKiyE,WAAa,SAAUE,GACzB,OAAO,IAAIn5D,OAAOk5D,WAAYE,gBAC3BD,EACA,WAEN,MACI,SAC2B,IAAxBn5D,OAAOq5D,gBACd,IAAIr5D,OAAOq5D,cAAc,oBASzB,MAAM,IAAI/pE,MAAM,uBAPhBtI,KAAKiyE,WAAa,SAAUE,GACzB,IAAIG,EAAS,IAAIt5D,OAAOq5D,cAAc,oBAGtC,OAFAC,EAAOntE,MAAQ,QACfmtE,EAAOC,QAAQJ,GACRG,CACV,CAGH,CAIH,IAAIprC,EAAMlnC,KAAKiyE,WAAWjyE,KAAKsmC,eA0B/B,MAzBsB,CACnB,mBACA,aACA,kBAEWriC,SAAS2I,IACpB,IAAI2kE,EAAcrqC,EAAIsrC,qBAAqB5lE,GAC3C,IAAK,IAAIM,EAAI,EAAGA,EAAIqkE,EAAYprE,OAAQ+G,IAE3BqkE,EAAYrkE,GACVlN,KAAKmoC,oBAAoBopC,EAAYrkE,GAAGtM,KAEjDZ,KAAK8xE,aAAaP,EAAYrkE,GAEpC,IAIClN,KAAKsxE,eAAenrE,QACrBuqE,EAAYpsE,KAAK,CACdgN,QAAS,iCACTzH,KAAM,CAAC,IAIN6mE,CACV,oBCnQH,MAAM+B,EAAoB,EAAQ,OAElChzE,EAAOC,QAAU,cAA4B+yE,eCF7C,IAAI1yE,EAAI,KAGRN,EAAOC,QAAU,MACdC,YAAYM,GAGJF,IACFA,EAAIE,EAGAA,EAAMA,QACPF,EAAIE,EAAMA,OAGnB,CAOAyyE,mBACG,MAAO,CACJ,CAAE9xE,GAAI,IAAK+B,MAAO5C,EAAE,cACpB,CAAEa,GAAI,KAAM+B,MAAO5C,EAAE,+CACrB,CAAEa,GAAI,IAAK+B,MAAO5C,EAAE,kBACpB,CAAEa,GAAI,IAAK+B,MAAO5C,EAAE,cAE1B,CASA4yE,aAAaC,GACV,IAAKA,IAAaA,EAASC,OAASD,EAASC,KAAKjxE,KAAM,OAAO,EAG/D,IAAIkxE,EAAgBF,EAASC,KAAKjxE,KAAKuW,cACvC,MACoB,YAAjB26D,GACiB,4BAAjBA,CAMN,CAcAC,YAAYH,EAAUI,GACnB,OAAKhzE,KAAK2yE,aAAaC,GAEhB,IAAInjE,SAAQ,CAACC,EAASiH,KAE1B,IAAIs8D,EAAS,IAAIj6D,OAAOk6D,WACxBD,EAAOE,OAAU9oE,IACd,IAAIyD,EAAS,IAGEmlE,EAAOnlE,OAClBma,MAAM,cACNnf,QAAQoW,GAAQA,GAAOA,EAAI/Y,OAAS,KAG3B,IAAIlC,SAASib,IACvB,IAAIk0D,EAAW,GAMZA,EALgB,KAAfJ,GAED9zD,EAAMA,EAAIlM,QAAQ,MAAO,QAGVswB,MAAM,gCAEVpkB,EAAI+I,MAAM+qD,GAGxBllE,EAAOxJ,KAAK8uE,EAASjlE,KAAKklE,GAASrzE,KAAKs9C,SAAS+1B,KAAO,IAG3D3jE,EAAQ5B,EAAO,EAElBmlE,EAAOK,WAAWV,EAASC,KAAK,IA/BMpjE,QAAQkH,QAiCpD,CAcA48D,iBAAiBC,EAAUC,GAOxB,IANA,IAAI5pE,EAMKwJ,EAAI,EAAGA,GAJD,GAIiBA,IAAK,CAClC,IAAIqgE,EAAOF,EAASngE,GACpB,IAAKqgE,EAAM,MAIX,GAAY,OAFZ7pE,EAAO6pE,EAAKD,KAEQ5pE,EAAK1D,OAAS,EAAG,KACxC,CAEA,OAAY,MAAR0D,GAAwB,IAARA,EACV,SAEC,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,WAARA,GACQ,aAARA,EAEO,UACEu2C,MAAMv2C,GAEP0W,KAAKhJ,MAAM1N,GACZ,OAGHA,EAAK1D,OAAS,IAAY,WAClB,SANL,QAQb,CAMAm3C,SAASq2B,GACN,OAAKA,EAEEA,EAAIxwC,OAAOnwB,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAFjC,EAGpB,oBC/JH,MAAM4gE,EAAoB,EAAQ,OAElC,IAAI7zE,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAkBhD,SAASi+D,EAAYrlD,EAAMznB,EAAS,IACjC,GAAKynB,EAAL,CACA,GAAIA,EAAKnqB,IAAK,CAWX,MAAMuB,EAAQmB,EAAO+B,QAAQ9B,GAAMA,EAAEpG,IAAM4tB,EAAKnqB,MAAK,GACrDmqB,EAAK5oB,MAAQA,GAAOhF,GAEpB4tB,EAAK0b,UAAY,CACdtoC,KAAM4sB,EAAKiB,KACX3mB,OAAQ0lB,EAAK7rB,OAGZwK,MAAMC,QAAQohB,EAAK7rB,OAAQ6rB,EAAKwf,SAAWxf,EAAK7rB,MAC/C6rB,EAAKwf,UAAYxf,EAAK7rB,OAAS,IAAIslB,MAAM,KAE5B,QAAdriB,GAAOvB,KAA+B,YAAduB,GAAOvB,MAChCmqB,EAAK0b,UAAUphC,OAAS0lB,EAAK0b,UAAUphC,OAClC/G,GAAGof,MAAMhB,OAAOqO,EAAK0b,UAAUphC,QAC/B,KAEL0lB,EAAKwf,SAAWxf,EAAKwf,SAAS7/B,KAAKiF,GAAMrR,GAAGof,MAAMhB,OAAO/M,aAGrDob,EAAKnqB,WACLmqB,EAAKiB,YACLjB,EAAK7rB,KACf,CAEI6rB,EAAKrN,OAASqN,EAAKrN,MAAMhb,SACzBqoB,EAAKrN,OAAS,IAAIld,SAAS2L,IACzBikE,EAAYjkE,EAAG7I,EAAO,GAtCX,CAyCpB,CAiBA,SAAS+sE,EAAYtlD,EAAMznB,EAAS,IACjC,GAAKynB,EAAL,CACA,GAAIA,EAAK5oB,MAAO,CACb,IAAIA,EAAQmB,EAAO+B,QAAQ9B,GAAMA,EAAEpG,IAAM4tB,EAAK5oB,QAAO,GAErD4oB,EAAKnqB,IAAMuB,GAAOhF,IAAM4tB,EAAK5oB,MAC7B4oB,EAAK0b,UAAY1b,EAAK0b,WAAa,CAAC,EACpC1b,EAAKiB,KAAOjB,EAAK0b,UAAUtoC,KAE3B,IAAI+D,EACD6oB,EAAKwf,SAAS7/B,KAAKiF,GAAOA,aAAamN,KAAOnN,EAAEqQ,cAAgBrQ,KAChE,GAGCob,EAAK0b,UAAUphC,SACZ0lB,EAAK0b,UAAUphC,kBAAkByX,KAC9B5a,EAAO0H,QAAQmhB,EAAK0b,UAAUphC,OAAO2a,eAAiB,GACvD9d,EAAOrB,KAAKkqB,EAAK0b,UAAUphC,QAEtBnD,EAAO0H,QAAQmhB,EAAK0b,UAAUphC,QAAU,GAChDnD,EAAOrB,KAAKkqB,EAAK0b,UAAUphC,SAGjC0lB,EAAK7rB,MAAQgD,EACTwI,KAAKiF,IAECxN,GAAuB,QAAbA,EAAMvB,KAA8B,YAAbuB,EAAMvB,IAGpC+O,EAFGxN,EAAMi1C,YAAY,IAAIt6B,KAAKnN,MAIvC9E,KAAK,YAEFkgB,EAAK5oB,aACL4oB,EAAK5sB,YACL4sB,EAAKwf,gBACLxf,EAAK0b,SACf,CAEI1b,EAAKrN,OAASqN,EAAKrN,MAAMhb,SACzBqoB,EAAKrN,OAAS,IAAIld,SAAS2L,IACzBkkE,EAAYlkE,EAAG7I,EAAO,GAxCX,CA2CpB,CAEAtH,EAAOC,QAAU,cAA4Bk0E,EAC1Cj0E,YAAYE,EAAQkC,EAAII,EAAU,CAAC,GAGhCrC,MAFAD,EAASA,GAAU,mBAELkC,GAEd/B,KAAK+zE,SAAW5xE,GAAW,CAAC,EAE5BnC,KAAKg0E,eAAgB,EAKrBh0E,KAAKi0E,WAAY,EAKHj0E,KAAKwS,OAAS,CACzBu3B,QAAShoC,EAAGi4B,MAAQ,CAAC,GAAGxnB,OACxBrS,UAAW,CACR+zE,IAAKn0E,EAAE,OACPo0E,GAAIp0E,EAAE,MAENq0E,WAAYr0E,EAAE,eACd6yC,QAAS7yC,EAAE,YACX+yC,WAAY/yC,EAAE,gBACdyyC,aAAczyC,EAAE,kBAChB2yC,gBAAiB3yC,EAAE,sBAEnBs0E,6BAA8Bt0E,EAAE,kBAChCu0E,6BAA8Bv0E,EAAE,kBAEhCgyC,WAAYhyC,EAAE,gBACdkyC,cAAelyC,EAAE,oBAEjBmzC,YAAanzC,EAAE,iBACfqzC,eAAgBrzC,EAAE,aAElBoyC,iBAAkBpyC,EAAE,sBACpBsyC,oBAAqBtyC,EAAE,0BAEvB+vC,kBAAmB/vC,EAAE,YACrBiwC,qBAAsBjwC,EAAE,mBACxBmwC,YAAanwC,EAAE,MACfqwC,eAAgBrwC,EAAE,UAClBuwC,QAASvwC,EAAE,YACXywC,WAAYzwC,EAAE,gBAEduuC,gBAAiBvuC,EAAE,aACnByuC,eAAgBzuC,EAAE,YAClB2uC,oBAAqB3uC,EAAE,mBACvB6uC,mBAAoB7uC,EAAE,kBACtB+uC,uBAAwB/uC,EAAE,0BAC1BivC,sBAAuBjvC,EAAE,yBACzBmvC,2BAA4BnvC,EAAE,gCAC9BqvC,0BAA2BrvC,EAAE,+BAC7BuvC,oBAAqBvvC,EAAE,iBACvByvC,oBAAqBzvC,EAAE,iBAEvB2wC,eAAgB3wC,EAAE,KAClB4wC,kBAAmB5wC,EAAE,KACrB6wC,kBAAmB7wC,EAAE,KACrB8wC,kBAAmB9wC,EAAE,KACrB+wC,yBAA0B/wC,EAAE,KAC5BgxC,yBAA0BhxC,EAAE,KAE5BkxC,mBAAoBlxC,EAAE,UACtBmxC,sBAAuBnxC,EAAE,kBAEzBw0E,iBAAkBx0E,EAAE,cACpBy0E,oBAAqBz0E,EAAE,kBAEvBuxC,uBAAwBvxC,EAAE,mBAC1ByxC,0BAA2BzxC,EAAE,uBAC7B2xC,6BAA8B3xC,EAAE,yBAChC6xC,gCAAiC7xC,EAAE,iCAEnC00E,qBAAsB10E,EAAE,iBACxBwzC,mBAAoBxzC,EAAE,wBACtB0zC,+BAAgC1zC,EAAE,4BAClC4zC,wBAAyB5zC,EAAE,oBAC3B8zC,2BAA4B9zC,EAAE,0BAhEpC,IAqEIG,EAAOF,KAAKE,IAAM,CACnBw0E,MAAO10E,KAAKI,OAAO,GAAGP,WACtB80E,aAAc30E,KAAKI,OAAO,GAAGP,kBAC7B+H,KAAM5H,KAAKI,OAAO,GAAGP,WAIxBG,KAAK4S,QAAQhC,SAAW5Q,KAAK+B,GAAG6Q,QAAQhC,WAExC5Q,KAAKqM,UAAUuoE,uBAAyB,GAGxC50E,KAAKS,GAAK,CACPoB,KAAM,CACH,CACGnB,KAAM,SACNkB,KAAM,QACND,WAAY3B,KAAK+zE,SAASpyE,aAAc,EACxCE,KAAM,CACH,CACGjB,GAAIV,EAAIy0E,aACRj0E,KAAM,QACNmJ,KAAM,IAAM,GAEZ9C,OAAQ,GACRo/B,UAAU,EACVplC,OAAQf,KAAK+zE,SAAShzE,UAI/B,CACGH,GAAIV,EAAI0H,KACRlH,KAAM,SACNQ,IAAK,gBACLyB,MAAO5C,EAAE,QACT80E,OAAQ70E,KAAK+zE,SAASe,eAAgB,EACtCvzE,MAAO,KACAvB,KAAK+0E,SAAS/0E,KAAK+0E,QAAQpwE,OAC/B3E,KAAKwP,KAAK,OAAQxP,KAAKiM,WAAW,IAKjD,CAGA3I,KAAKnB,GACF,GAAInC,KAAKg0E,cAAe,OAExBl0E,MAAMwD,KAAKnB,GAEX,MAAMqK,EAAK7I,GAAG3D,KAAKE,IAAIy0E,cAEvB,GAAInoE,EAAI,CACL,IAAKxM,KAAKi0E,UAAW,CAClBj0E,KAAKg1E,iBAAkB,EACvBxoE,EAAGyoE,WAAWC,SAAS,SAAU9hE,IAC9B,GAAIpT,KAAKg1E,gBAAiB,OAAO,EAEjCh1E,KAAKwP,KAAK,UAAWxP,KAAKiM,WAAW,IAExCjM,KAAKg1E,iBAAkB,EAMvB,IAAIG,EAAQn1E,KAAKkqC,UACjBlqC,KAAKkqC,UAAYirC,EACjBn1E,KAAKi0E,WAAY,CACpB,CACAj0E,KAAKg0E,eAAgB,CACxB,CACH,CAQAzuE,QAAQwoB,GACL,IAAIqnD,EAAS,KAAM,EAEfC,EAAS1xE,GAAG3D,KAAKE,IAAIy0E,cACzB,OAAIU,GACDD,EAASC,EAAOC,oBACTF,EAAOrnD,IAEPjuB,MAAMyF,QAAQwoB,EAE3B,CAeAqjD,oBAAoB5iD,GACjB,IAAKA,EAAM,OAAO,EAElB,IAAIwlB,GAAa,EAGjB,GAAIxlB,EAAKjF,MACLiF,EAAKrN,OAAS,IAAIld,SAAS2L,IACzBokC,EAAaA,GAAch0C,KAAKoxE,oBAAoBxhE,EAAE,SAYzD,GARK4e,EAAKnqB,KAAmB,IAAZmqB,EAAKnqB,MACnB2vC,GAAa,GAGXxlB,EAAKiB,MAAqB,IAAbjB,EAAKiB,OACpBukB,GAAa,GAGZA,EACD,OAAQxlB,EAAKiB,MACV,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eAGF,MAEH,QAEQjB,EAAK7rB,OAAuB,IAAd6rB,EAAK7rB,QACrBqxC,GAAa,GAO5B,OAAOA,CACV,CAEAnvC,SAASuB,GACNtG,MAAM+E,SAASuB,GACfpG,KAAKkqC,UAAY9jC,EAEjB,MAAMoG,EAAK7I,GAAG3D,KAAKE,IAAIy0E,cACvB,GAAInoE,EAAI,CACL,IAAKpG,EAMF,YAJAoG,EAAG/H,OAAO,QAAS,CAChB8kB,KAAM,MACNpI,MAAO,KAKb,IAAIo0D,EAAav1E,KAAK+B,GAAG2D,UAAUU,GAmBnCytE,EAAY0B,EAAYv1E,KAAKoqC,SAE7BpqC,KAAKg1E,iBAAkB,EACvBxoE,EAAG/H,OAAO,QAAS8wE,GACnBv1E,KAAKg1E,iBAAkB,CAC1B,CACH,CAEA/oE,WACG,GAAItI,GAAG3D,KAAKE,IAAIy0E,cAAe,CAC5B,IAAIvuE,EAAWpG,KAAK+B,GAAG2D,UACpB/B,GAAG3D,KAAKE,IAAIy0E,cAAcM,WAAWtyE,OAAS,CAAC,GAOlDmxE,EAAY1tE,EAAUpG,KAAKoqC,SAC3BpqC,KAAKkqC,UAAY9jC,CACpB,CAEA,OAAOtG,MAAMmM,UAChB,CAEA4nB,WAAW9sB,EAAS,GAAI9B,EAAS,MAC9BnF,MAAM+zB,WAAW9sB,EAAQ9B,GACzBjF,KAAK0sC,QACR,CAEA8oC,cACG,MAAO,aACV,CAEA9oC,SACG1sC,KAAKy1E,qBAEL,IAAIjpE,EAAK7I,GAAG3D,KAAKE,IAAIy0E,cACrB,GAAInoE,EAAI,CAEL,KAAOA,EAAGvK,OAAO8E,OAAOZ,OAAS,GAC9BqG,EAAGvK,OAAO8E,OAAOmnC,OAGnBluC,KAAK8sC,cAAgB,IAAI7oC,SAAS+C,IAChCwF,EAAGvK,OAAO8E,OAAOzC,KAAK0C,EAAE,IAEvBwF,EAAGvK,OAAO8E,OAAOZ,OAClBqG,EAAG9E,UAEH1H,KAAK6E,SAAS,IACd2H,EAAGpH,UAET,CACH,CAIAqwE,qBACG,MAAMC,EAAM/xE,GAAG3D,KAAKE,IAAIy0E,cACnBe,IAGLA,EAAIC,KAAKC,QAAQ,YAAa,UAAUz7B,UAAU07B,aAAe,CAC9DjwE,EACAhE,EACA0e,EACA0sB,EACAqK,KAEA,IAAIy+B,EAAS91E,KAAK+1E,QAAQnwE,GAEtBnF,EAAK,CACNG,GAAIy2C,EAAMp1C,OAAOrB,GACjBF,KAAM,SACNs1E,QAAS,SACThpC,WAAYA,EACZpnC,MAAOA,EACPqwE,KAAMr0E,EACN2gE,SAAU,SAAUz8C,GACjB,IAAI6tD,EAAM7tD,EAAElgB,GACRswE,EACD51D,IAAmB,QAAR1e,EAAiB6B,MAAM0yE,KAAKC,cAAgB,MAE1D,OADIF,IAAQvC,EAAMuC,EAAOvC,IAClBA,CACV,EACAmC,OAAQA,EACRO,OAAQ,GAYX,OATa5yE,MAAMhD,GAAGA,EAAI42C,EASb,EAEnB,CAEA0+B,QAAQO,GACL,IAAIxoE,EAGJ,GAAuB,eAAnBwoE,EACD,MAAO,GACH/uD,OAAOvnB,KAAKu2E,aAAa,gBACzBhvD,OAAOvnB,KAAKw2E,sBAAsB,gBAClCjvD,OAAOvnB,KAAKy2E,cAAc,gBAC1BlvD,OAAOvnB,KAAK02E,eAAe,cAAe,SAGjD,IAAI9wE,GAAS5F,KAAKoqC,SAAW,IAAIthC,QAC7B9B,GAAMA,EAAEpG,IAAM01E,IAChB,GAEF,OAAQ1wE,GAAOvB,KACZ,IAAK,UACFyJ,EAAS9N,KAAK22E,eAAe/wE,GAC7B,MACH,IAAK,gBACFkI,EAAS,GACLyZ,OAAOvnB,KAAKu2E,aAAa3wE,IACzB2hB,OAAOvnB,KAAK42E,YAAYhxE,IACxB2hB,OAAOvnB,KAAKw2E,sBAAsB5wE,IAClC2hB,OAAOvnB,KAAK02E,eAAe9wE,IAC3B2hB,OAAOvnB,KAAK62E,eAChB,MACH,IAAK,OACL,IAAK,WACF/oE,EAAS,CAAC,aAAc,mBACxB,MACH,IAAK,OACFA,EAAS9N,KAAK82E,YAAYlxE,GAC1B,MACH,IAAK,OACFkI,EAAS,GACLyZ,OAAOvnB,KAAK62E,eACZtvD,OAAOvnB,KAAK42E,YAAYhxE,IAC5B,MAIH,IAAK,SACL,IAAK,WACL,IAAK,QACFkI,EAAS9N,KAAK62E,cAKpB,MAAME,EAAW,GAAGnxE,GAAOQ,UAAUa,YAAYrB,GAAOQ,UAAUc,cA2BlE,OAzBGtB,GAAOQ,UAAUgB,aAEJ,YAAZ2vE,GAEe,WAAZA,GAAyBnxE,GAAOQ,UAAUM,UAE9CoH,GAAUA,GAAU,IAAIyZ,OAAOvnB,KAAKg3E,YAAYpxE,IAC1B,iBAAdA,GAAOvB,IACfyJ,GAAUA,GAAU,IAChByZ,OAAOvnB,KAAKg3E,YAAYpxE,IACxB2hB,OAAOvnB,KAAKi3E,kBAAkBrxE,IAC9B2hB,OAAOvnB,KAAK02E,eAAe9wE,IAIzB0wE,EAAgBjpE,QAAQ,SAAW,IACzCS,EAAS9N,KAAK02E,eAAe,KAAMJ,IAGlCt2E,KAAKqM,UAAUwhC,eAChB//B,GAAUA,GAAU,IAAIyZ,OAAOvnB,KAAKk3E,kBAAkBtxE,KAGzDkI,GAAUA,GAAU,IAAIyZ,OAAOvnB,KAAKy2E,cAAc7wE,IAE3CkI,CACV,CAEA+oE,cACG,MAAO,CACJ,CACGnnC,MAAO,OACP/tC,YAAY,EACZjB,KAAM,WACN6hE,SAAU,IAGnB,CAEAoU,eAAe/wE,GACZ,MAAO,CACJ,CACG8pC,MAAO,UACPhvC,KAAM,YAGf,CAEAs2E,YAAYpxE,GACT,MAAO,CACJ,CACG8pC,MAAO,OACPhvC,KAAM,OACN0B,GAAI,CACD+0E,cAAe,YAKTn3E,KAAKo3E,WAAU,SAAUxpE,GACtB,OAAQA,EAAEnC,eACb,GAAG,WAAazL,MACX0N,MAAM2pE,MAAMC,OAAS,GAChC,IAIZ,CAEAf,aAAa3wE,GACV,IAAIzD,EAAU,GAEVo1E,EACDv3E,KAAKmqC,cAAcrhC,QAAQ9B,GAAMA,EAAEpG,IAAMgF,EAAMhF,KAAIuF,OAAS,EAsB/D,MAnBa,eAATP,GAA0B5F,KAAKssC,QAChCnqC,EAAUnC,KAAK2nB,SAASC,GAAMA,EAAEoe,gBAAgBhmC,KAAKssC,WAG/CirC,IACNp1E,EAAUnC,KAAK2nB,SACXC,IACG5nB,KAAKssC,QAAUtsC,KAAKssC,QAAQ1rC,GAAK,KAAOgnB,EAAEhnB,IAC3CgnB,EAAEoe,gBAAgBpgC,EAAMgB,mBAIjCzE,GAAS8B,SAAS2jB,IACfzlB,EAAQmC,KAAK,CACV1D,GAAIgnB,EAAEhnB,GACN+B,MAAOilB,EAAExmB,OACV,IAGE,CACJ,CACGsuC,MAAO,QACPhvC,KAAM,QACNyB,QAASA,GAAW,IAG7B,CAEA20E,YAAYlxE,GACT,MAAO,CACJ,CACG8pC,MAAO,OACPhvC,KAAM,QACNyB,QAASyD,GAAOQ,UAAUjE,SAASgM,KAAI,SAAUjB,GAC9C,MAAO,CACJtM,GAAIsM,EAAEtM,GACN+B,MAAOuK,EAAEmB,KAEf,KAGT,CAEAuoE,YAAYhxE,GACT,MAAO,CACJ,CACG8pC,MAAO,OACPhvC,KAAM,QACNyB,QAASnC,KAAK+B,GAAG6Q,QAAQ/B,WAAW1C,KAAKqpE,IAC/B,CACJ52E,GAAI42E,EAAE5mE,SACNjO,MAAO60E,EAAE5mE,cAKxB,CAEA4lE,sBAAsB5wE,GACnB,IAAI6xE,EAOJ,OALGA,EADU,eAAT7xE,GAA0B5F,KAAKssC,QACjBtsC,KAAKssC,QAAQ1rC,GAEbgF,GAAOQ,UAAUO,WAG5B,CACJ,CACG+oC,MAAO,iBACPhvC,KAAM,QACNyB,QAASs1E,EACJz3E,KAAK+B,GAAG8jB,iBACJ8G,GAAOA,GAAIjB,YAAY9qB,IAAM62E,IAC/BtpE,KAAKwe,IACG,CACJ/rB,GAAI+rB,EAAG/rB,GACP+B,MAAOgqB,EAAGvrB,UAGhB,IAGd,CAEA61E,kBAAkBrxE,GACf,MAAO,CACJ,CACG8pC,MAAO,aACPhvC,KAAM,QACNg3E,YAAa13E,KAAKwS,OAAOrS,UAAUk0E,6BACnClyE,QAASnC,KAAK2nB,SACVC,GAAsB,MAAhB5nB,KAAKssC,SAAmB1kB,EAAEhnB,IAAMZ,KAAKssC,QAAQ1rC,KACrDuN,KAAKyZ,IACG,CACJhnB,GAAIgnB,EAAEhnB,GACN+B,MAAOilB,EAAExmB,WAKxB,CAEA81E,kBAAkBtxE,GACf,MAAO,CACJ,CACG8pC,MAAO,aACPhvC,KAAM,SACNyB,QAASnC,KAAKqM,UAAUuoE,wBAA0B,IAG3D,CAEA8B,eAAe9wE,EAAO+xE,EAAkB,MACrC,MAAMnrC,GAAiBxsC,KAAKysC,gBAAkB,IAC1C3jC,QAAQ8uE,IACN,IAAKA,EAAQ,OAAO,EAEpB,IAAI9pE,GAAS,EACb,GACQ,gBADAlI,EAEFkI,EACG9N,KAAKssC,QAAQ1rC,KAAOg3E,EAAO3yE,QAAQrE,KAAOg3E,EAAOhyE,WAKpD,OAAQA,EAAMvB,KACX,IAAK,UACFyJ,EAAS,CAAC,WAAWkgC,SAAS4pC,EAAOhyE,OAAOvB,KAE5C,MAEH,IAAK,gBAKF,GAJAyJ,EACGlI,EAAMQ,SAASO,cACdixE,EAAOhyE,OAAOX,OAAOrE,IAAMg3E,EAAO3yE,OAAOrE,KAExCgF,EAAMQ,SAASgB,WAAY,CAC7B0G,EAASA,IAAW8pE,EAAOhyE,MAE3B,KACH,CAEAkI,EACGA,IACClI,EAAMQ,SAASiB,YACbzB,EAAMQ,SAASkB,eAAiBswE,EAAOhyE,OAAOhF,GAEpD,MAEH,IAAK,OACL,IAAK,WACFkN,EAAS,CAAC,OAAQ,YAAYkgC,SAC3B4pC,EAAOhyE,OAAOvB,KAGjB,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACFyJ,EAAS,CAAC,YAAa,UAAW,UAAUkgC,SACzC4pC,EAAOhyE,OAAOvB,KAGjB,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACL,IAAK,OACFyJ,EAAS,CACN,SACA,WACA,QACA,YACA,QACDkgC,SAAS4pC,EAAOhyE,OAAOvB,KAEzB,MAEH,IAAK,OACFyJ,EAAS,CAAC,QAAQkgC,SAAS4pC,EAAOhyE,OAAOvB,KAEzC,MAEH,QACG,GAAIuzE,EAAOvzE,IAAK,CAEb,MAAM4pC,EAAiB2pC,EAAOvzE,IAAI4jB,MAAM,KAAKimB,MAE7CpgC,EACGmgC,IAAmBroC,EAAMhF,IACzBqtC,IAAmBroC,EAAMvB,KACzB4pC,IAAmB0pC,GACnBC,EAAOvzE,MAAQszE,CACrB,EAQZ,OAAO7pE,CAAM,IAEfK,KAAK9D,IACI,CACJzJ,GAAIyJ,EAAEhG,IACN1B,MAAO5C,EAAE,eAAgB,CAACsK,EAAEjJ,YAIrC,OAAKorC,EAEE,CACJ,CACGkD,MAAO,UACPhvC,KAAM,SACNyB,QAAS,CACN,CACGvB,GAAI,QACJ+B,MAAO3C,KAAKwS,OAAOrS,UAAUs0E,yBAE7BjoC,KAXe,EAe9B,CAEAiqC,cAAc7wE,GACX,OAAKA,IAEiB5F,KAAK63E,gBAAkB,CAAC,GAChBjyE,EAAMhF,IAAMgF,IAAU,CAAC,GACtCD,QAAU,GAJN,EAKtB,CAEAmyE,SAAS31E,GACN,MAAM+nC,EAAY/1B,OAAOsnC,OAAO,CAAC,EAAGz7C,KAAKkqC,WAEzC,GAAKlqC,KAAK+0E,QA6BP/0E,KAAK+0E,QAAQnwE,QAAQzC,OA7BL,CAChB,IAAI1B,EAAK,CACNG,GAAIZ,KAAKE,IAAIw0E,MACbh0E,KAAM,QACNK,OAAQ,IACRC,MAAO,IACPS,KAAMzB,KAAKS,IAGTkD,GAAG3D,KAAKE,IAAIw0E,OAiBd/wE,GAAG3D,KAAKE,IAAIw0E,OAAO9vE,QAAQzC,IAhB3BnC,KAAK+0E,QAAUtxE,MAAMhD,GAAGA,GACxBT,KAAKsD,KAAKtD,KAAKqM,WACXrM,KAAKoqC,SACNpqC,KAAK6zB,WAAW7zB,KAAKoqC,QAASpqC,KAAKssC,SAOlCpC,GACDlqC,KAAK6E,SAASqlC,GAGjBlqC,KAAK+0E,QAAQnwE,QAAQzC,GAI3B,CAGH,CAWA41E,gBAAgBrtE,EAASvI,EAAU,CAAC,GACjCnC,KAAK63E,eAAiB73E,KAAK63E,gBAAkB,CAAC,EAC9C73E,KAAK63E,eAAentE,GAAWvI,CAClC,oBC15BH,MAAM61E,EAAgB,EAAQ,OAE9B,IAAIj4E,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAwBs4E,EACtCr4E,YAAYC,EAAKC,EAAQkC,GACtBjC,MAAMF,EAAKC,EAAQkC,GAEnByG,QAAQ+G,MAAM,2CAGd,IAAIrP,EAAOF,KAAKE,IAAM,CACnBC,UAAWH,KAAKI,OAAO,GAAGP,eAC1Bo4E,WAAYj4E,KAAKI,OAAO,GAAGP,oBAC3Bq4E,aAAcl4E,KAAKI,OAAO,GAAGP,4BAE7B0pB,KAAMvpB,KAAKI,OAAO,GAAGP,oBACrB+F,MAAO5F,KAAKI,OAAO,GAAGP,qBACtB4vB,KAAMzvB,KAAKI,OAAO,GAAGP,oBACrBs4E,WAAYn4E,KAAKI,OAAO,GAAGP,0BAE3Bu4E,WAAYp4E,KAAKI,OAAO,GAAGP,0BAC3Bw4E,gBAAiBr4E,KAAKI,OAAO,GAAGP,+BAChCy4E,qBAAsBt4E,KAAKI,OACxB,GAAGP,oCAEN04E,qBAAsBv4E,KAAKI,OACxB,GAAGP,oCAEN24E,WAAYx4E,KAAKI,OAAO,GAAGP,+BAE3B44E,eAAgBz4E,KAAKI,OAAO,GAAGP,8BAE/B64E,YAAa14E,KAAKI,OAAO,GAAGP,2BAE5B84E,WAAY34E,KAAKI,OAAO,GAAGP,2BAM9B,IAAI+4E,EAGJ54E,KAAK64E,kBAAoB,CACtB,CACGl2E,MAAO5C,EAAE,kBACTa,GAAI,kBAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,uBAIVZ,KAAK84E,kBAAoB,GACzB94E,KAAK40E,uBAAyB,GAE9B,IAAIpzE,EAASxB,KAAKwB,QAAU,CAAC,EAM7BA,EAAOwJ,aAAe,KACXhL,KAAKoqC,SAAW,IAAIj8B,KAAKnH,IAC9B,IAAI5F,EAAQ4F,EAAE5F,MAOd,OAJIpB,KAAKqM,UAAU0gC,gBAAkB/lC,EAAE/B,SACpC7D,EAAQ4F,EAAE/B,OAAO7D,MAAQ,IAAM4F,EAAE5F,OAG7B,CACJR,GAAIoG,EAAEpG,GACN+B,MAAOvB,EACPmuB,MAAOvoB,EAAEuoB,YAAS5E,EACpB,IAIPnpB,EAAOu3E,YAAc,KAClB,IAAIlxB,EAAW7nD,KACXo0C,EAAkBp0C,KAAKo0C,iBAAmB,CAAC,EAE/C,MAAO,CACJxzC,GAAI,IAAM6C,MAAMyH,MAChB8tE,SAAS,EACT73E,KAAM,CACH,CAEGT,KAAM,QACNE,GAAIV,EAAIqpB,KACRvoB,MAAO,GACP2B,MAAOyxC,EAAgB7qB,MAAQ,MAC/BpnB,QAAS,CACN,CACGQ,MAAO5C,EAAE,OACTa,GAAI,OAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,OAGVwB,GAAI,CACDC,SAAU,SAAU42E,EAAQC,GACzB13E,EAAO23E,uBAAuBF,EACjC,IAGN,CAEGv4E,KAAM,QACNE,GAAIV,EAAI0F,MACRwzE,QAAS,CACNh3E,GAAI,CACDi3E,aAAc,WACXr5E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAOwJ,gBAEhB5I,GAAI,CACDC,SAAU,SAAU8I,GACjB,IAAImuE,EAAYt5E,KAAKyL,gBACrBjK,EAAO+3E,YAAYpuE,EAAUmuE,EAChC,IAIN,CACG14E,GAAIV,EAAIuvB,KACRzuB,MAAO,IACPyB,MAAO,CACJ,CAAC,EAED,CACGitC,MAAO,QACPhvC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,oBACTa,GAAI,oBAEP,CACG+B,MAAO5C,EAAE,sBACTa,GAAI,sBAEP,CACG+B,MAAO5C,EAAE,0BACTa,GAAI,2BAER2mB,OAAOsgC,EAASixB,mBAClB12E,GAAI,CACDC,SAAU,SAAU6nC,EAAWsvC,GAC5B,IACIF,EADgBt5E,KAAKyL,gBACKA,gBAC9BjK,EAAOi4E,aAAavvC,EAAWovC,GAC/B93E,EAAOa,UACV,IAKN,CACGqtC,MAAO,OACPhvC,KAAM,QACNiC,MAAO,OACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,aACTa,GAAI,QAEP,CACG+B,MAAO5C,EAAE,YACTa,GAAI,WAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,oBAEP,CACG+B,MAAO5C,EAAE,0BACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,yBACTa,GAAI,mBAEP,CACG+B,MAAO5C,EAAE,gCACTa,GAAI,yBAEP,CACG+B,MAAO5C,EAAE,+BACTa,GAAI,4BAEP,CACG+B,MAAO5C,EAAE,iBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,iBACTa,GAAI,cAGN2mB,OAAOsgC,EAASgxB,mBAChBtxD,OAAOsgC,EAASixB,mBACpB12E,GAAI,CACDC,SAAU,SAAU6nC,GACjB,IACIovC,EADgBt5E,KAAKyL,gBACKA,gBAC9BjK,EAAOi4E,aAAavvC,EAAWovC,GAC/B93E,EAAOa,UACV,IAIN,CACGqtC,MAAO,SACPhvC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,KACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,QAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,WAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,KACTa,GAAI,qBAGN2mB,OAAOsgC,EAASgxB,mBAChBtxD,OAAOsgC,EAASixB,mBACpB12E,GAAI,CACDC,SAAU,SAAU6nC,GACjB,IACIovC,EADgBt5E,KAAKyL,gBACKA,gBAC9BjK,EAAOi4E,aAAavvC,EAAWovC,GAC/B93E,EAAOa,UACV,IAIN,CACGqtC,MAAO,OACPhvC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,aAEP,CACG+B,MAAO5C,EAAE,gBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,oBACTa,GAAI,qBAGN2mB,OAAOsgC,EAASgxB,mBAChBtxD,OAAOsgC,EAASixB,mBACpB12E,GAAI,CACDC,SAAU,SAAU6nC,EAAWsvC,GAC5B,IACIF,EADgBt5E,KAAKyL,gBACKA,gBAC9BjK,EAAOi4E,aAAavvC,EAAWovC,GAC/B93E,EAAOa,UACV,IAIN,CACGqtC,MAAO,UACPhvC,KAAM,QACNiC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,cAGN2mB,OAAOsgC,EAASgxB,mBAChBtxD,OAAOsgC,EAASixB,mBACpB12E,GAAI,CACDC,SAAU,SAAU6nC,GACjB,IACIovC,EADgBt5E,KAAKyL,gBACKA,gBAC9BjK,EAAOi4E,aAAavvC,EAAWovC,GAC/B93E,EAAOa,UACV,IAIN,CACGqtC,MAAO,OACPhvC,KAAM,QACNiC,MAAO,kBACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,mBACTa,GAAI,mBAEP,CACG+B,MAAO5C,EAAE,uBACTa,GAAI,uBAEP,CACG+B,MAAO5C,EAAE,yBACTa,GAAI,wBAEP,CACG+B,MAAO5C,EAAE,iCACTa,GAAI,4BAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,kBACTa,GAAI,cAGN2mB,OAAOsgC,EAASgxB,mBAChBtxD,OAAOsgC,EAASixB,mBACpB12E,GAAI,CACDC,SAAU,SAAU6nC,GACjB,IACIovC,EADgBt5E,KAAKyL,gBACKA,gBAC9BjK,EAAOi4E,aAAavvC,EAAWovC,GAC/B93E,EAAOa,UACV,IAIN,CACGqtC,MAAO,SACPhvC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,cAGN2mB,OAAOsgC,EAASgxB,mBAChBtxD,OAAOsgC,EAASixB,mBACpB12E,GAAI,CACDC,SAAU,SAAU6nC,GACjB,IACIovC,EADgBt5E,KAAKyL,gBACKA,gBAC9BjK,EAAOi4E,aAAavvC,EAAWovC,GAC/B93E,EAAOa,UACV,IAIN,CACGqtC,MAAO,QACPhvC,KAAM,QACNiC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO5C,EAAE,YACTa,GAAI,YAEP,CACG+B,MAAO5C,EAAE,mBACTa,GAAI,gBAEP,CACG+B,MAAO5C,EAAE,MACTa,GAAI,UAEP,CACG+B,MAAO5C,EAAE,UACTa,GAAI,cAGN2mB,OAAOsgC,EAASgxB,mBAChBtxD,OAAOsgC,EAASixB,mBACpB12E,GAAI,CACDC,SAAU,SAAU6nC,GACjB,IACIovC,EADgBt5E,KAAKyL,gBACKA,gBAC9BjK,EAAOi4E,aAAavvC,EAAWovC,GAC/B93E,EAAOa,UACV,MAMZ,CACGzB,GAAIV,EAAIi4E,WACRa,SAAS,EACTv2E,MAAO,CACJ,CACGitC,MAAO,SAIV,CACG9uC,GAAIV,EAAIk4E,WAER1oC,MAAO,QACPhvC,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CACGzB,GAAIV,EAAIm4E,gBACR3oC,MAAO,aACP7tC,KAAM,CACH,CACGjB,GAAIV,EAAIo4E,qBACR53E,KAAM,QACNyB,QAAS,GACTu1E,YAAa33E,EAAE,kBACfqC,GAAI,CACDC,SAAU,SAAUM,GACjB,IACI22E,EADgBt5E,KAAKyL,gBAErBA,gBACAA,gBACJjK,EAAOk4E,wBACJ/2E,EACA22E,GAGH93E,EAAOa,UACV,IAGN,CACGzB,GAAIV,EAAIq4E,qBACR73E,KAAM,QACNyB,QAAS,GACTu1E,YAAa33E,EAAE,kBACfqC,GAAI,CACDC,SAAUb,EAAOa,aAO7B,CACGzB,GAAIV,EAAIs4E,WACR9oC,MAAO,aACPhvC,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CACGzB,GAAIV,EAAIu4E,eACR/oC,MAAO,iBACPhvC,KAAM,aACNyB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CAEGqtC,MAAO,OACP9uC,GAAIV,EAAIy4E,WACRj4E,KAAM,aACN0B,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGqtC,MAAO,SACPhvC,KAAM,OACNi5E,SAAUl2E,MAAM0d,MAAMy4D,SACtBx3E,GAAI,CACDy3E,gBAAiB,WACV75E,KAAK25E,YAAYn4E,EAAOa,UAC/B,IAIN,CACGqtC,MAAO,OACP9uC,GAAIV,EAAIw4E,YACRh4E,KAAM,QACNyB,QAAS,GACTC,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGqtC,MAAO,UACPhvC,KAAM,WACN0B,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGqtC,MAAO,OACPhvC,KAAM,QACNyB,QAASnC,KAAK+B,GAAG6Q,QAAQ/B,WAAW1C,KAAKqpE,IAC/B,CACJ52E,GAAI42E,EAAE5mE,SACNjO,MAAO60E,EAAE5mE,aAGfxO,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGqtC,MAAO,SACPhvC,KAAM,OACN0B,GAAI,CACDy3E,gBAAiB,WACdr4E,EAAOa,UACV,IAIN,CACGqtC,MAAO,QACPhvC,KAAM,OACN0B,GAAI,CACDy3E,gBAAiB,WACdr4E,EAAOa,UACV,MAKZ,CACG3B,KAAM,SACNQ,IAAK,gBACLqK,KAAM,aACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,IAEIu4E,EAFY95E,KAAK+5E,cAEKhuE,MAAM/L,KAAKyL,iBAErCjK,EAAO02E,aAAa4B,EAAY,EACnC,GAEH,CACGp5E,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,IAAI+3E,EAAYt5E,KAAKyL,gBAErBjK,EAAOw4E,gBAAgBV,EAC1B,IAGR,EAGJ93E,EAAOy4E,eAAiB,KACd,CACJv5E,KAAM,SACNE,GAAIV,EAAIg4E,aACRh3E,IAAK,gBACLU,KAAM,OACNR,MAAOrB,EAAE,gBACTwB,MAAO,KACJC,EAAO02E,cAAc,IAK9B12E,EAAO02E,aAAe,CAACnsE,EAAOrB,KAC3B,IAAIgvD,EACAj5D,EAAKe,EAAOu3E,cAEZmB,EAAYv2E,GAAGzD,EAAI+3E,YAUvB,OATIiC,IACDxgB,EAASwgB,EAAUjvE,QAAQxK,EAAIsL,GAE/BvK,EAAO24E,qBAGHzvE,GAASlJ,EAAO+3E,YAAY7uE,EAAS/G,GAAG+1D,IAAS,IAGjDA,CAAM,EAGhBl4D,EAAOw4E,gBAAkB,SAAUV,GAChB31E,GAAGzD,EAAI+3E,YAEbzsE,WAAW8tE,GAErB93E,EAAO24E,qBAEP34E,EAAOa,UACV,EAEAb,EAAO24E,mBAAqB,WACpBx2E,GAAGzD,EAAI+3E,cAGRt0E,GAAGzD,EAAI+3E,YAAYntE,gBAAgB3E,OAAS,GAC7CxC,GAAGzD,EAAI+3E,YAAYtzE,OACnBhB,GAAGzD,EAAIg4E,cAActzE,SAIrBjB,GAAGzD,EAAI+3E,YAAYrzE,OACnBjB,GAAGzD,EAAIg4E,cAAcvzE,QAE3B,EAEAnD,EAAO23E,uBAAyB,CAACnjE,EAAKokE,KAEnCp6E,KAAKo0C,gBAAgB7qB,KAAOvT,EAGXrS,GAAGzD,EAAI+3E,YAAYntE,gBACzB7G,SAASmP,IACbA,EAAEzP,IAAMyP,EAAEzP,GAAGzD,EAAIqpB,OAAOnW,EAAEzP,GAAGzD,EAAIqpB,MAAM1kB,SAASmR,EAAI,IAGtDokE,GAAc54E,EAAOa,UAAU,EAGvCb,EAAO+3E,YAAc,CAACpuE,EAAUmuE,EAAWc,KACxC,IAAKp6E,KAAKoqC,QAAS,OAEnB,IAAIxkC,EAAQ5F,KAAKoqC,QAAQthC,QAAQ9B,GAAMA,EAAEpG,IAAMuK,IAAU,GACzD,IAAKvF,EAAO,OAGZgzE,EAAYhzE,EAAMvB,IACF,eAAZuB,EAAMhF,GAAqBg4E,EAAY,QAErB,YAAbA,GAAwC,YAAbA,EACjCA,EAAY,SACO,WAAbhzE,EAAMvB,MAAkBu0E,EAAY,UAC7C,IAAIrB,EACDv3E,KAAKmqC,aAAarhC,QAAQ9B,GAChBA,EAAEpG,IAAMgF,EAAMhF,KACrBuF,OAAS,EACXoxE,IAEDqB,EAAY,SAEfU,EAAU31E,GAAGzD,EAAIuvB,MAAM4qD,UAAUzB,GACjCU,EAAU31E,GAAGzD,EAAIi4E,YAAYkC,UAAUzB,GAEvC,IAAIz2E,EAAU,GACVm4E,EAAU,GA6Bd,GA1BgB,eAAZ10E,EAAMhF,IAAuBZ,KAAKssC,QACnCguC,EAAUt6E,KAAK2nB,SAASC,GAAMA,EAAEoe,gBAAgBhmC,KAAKssC,WAG/CirC,IACN+C,EAAUt6E,KAAK2nB,SAASC,IAEjB5nB,KAAKssC,QAAUtsC,KAAKssC,QAAQ1rC,GAAK,KAAOgnB,EAAEhnB,IAC3CgnB,EAAEoe,gBAAgBpgC,EAAMgB,mBAKjC0zE,EAAQr2E,SAAS2jB,IACdzlB,EAAQmC,KAAK,CACV1D,GAAIgnB,EAAEhnB,GACN+B,MAAOilB,EAAExmB,OACV,IAELk4E,EACI31E,GAAGzD,EAAIi4E,YACPx0E,GAAGzD,EAAIk4E,YACP3zE,OAAO,UAAWtC,GACtBm3E,EAAU31E,GAAGzD,EAAIi4E,YAAYx0E,GAAGzD,EAAIk4E,YAAY1zE,UAG/B,QAAbkB,EAAMvB,IAAe,CACtB,IAAIq0E,EAAc9yE,EAAMQ,SAASjE,QAAQgM,KAAI,SAAUjB,GACpD,MAAO,CACJtM,GAAIsM,EAAEtM,GACN+B,MAAOuK,EAAEmB,KAEf,IAEAirE,EACI31E,GAAGzD,EAAIi4E,YACPx0E,GAAGzD,EAAIw4E,aACPj0E,OAAO,UAAWi0E,GACtBY,EAAU31E,GAAGzD,EAAIi4E,YAAYx0E,GAAGzD,EAAIw4E,aAAah0E,SACpD,KAEsB,QAAbkB,EAAMvB,MACZi1E,EACI31E,GAAGzD,EAAIi4E,YACPx0E,GAAGzD,EAAIy4E,YACPl0E,OAAO,SAAUmB,EAAMm1C,aAC3Bu+B,EAAU31E,GAAGzD,EAAIi4E,YAAYx0E,GAAGzD,EAAIy4E,YAAYj0E,WAGnD,IACG61E,EAAajB,EAAU31E,GAAGzD,EAAIuvB,MAAM+qD,cACpCC,EAAgBnB,EACZ31E,GAAGzD,EAAIuvB,MACP2nD,UAAU,CAAEx2E,GAAI25E,IACvB,GAAIE,GAAiBA,EAAcC,QAAS,CACzC,IAAIC,GAAcF,EAAcC,UAAUz4E,OAAO4H,MAAQ,IAAI,GACzD8wE,GACDF,EAAc51E,SAAS81E,EAAW/5E,GAWxC,CAEKw5E,GAAc54E,EAAOa,UAAU,EAGvCb,EAAOi4E,aAAe,CAAChqD,EAAM6pD,EAAWlxE,GAAS,KAC9C,OAAQqnB,GACL,IAAK,WACL,IAAK,eACL,IAAK,SACL,IAAK,YAEe,SAAbmpD,GACDU,EAAU31E,GAAGzD,EAAIi4E,YAAYkC,UAAU,UAI1C,MAEH,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eAEFf,EAAU31E,GAAGzD,EAAIi4E,YAAYkC,UAAU,SACvC74E,EAAOa,WACP,MAEH,IAAK,YACL,IAAK,YAEFi3E,EAAU31E,GAAGzD,EAAIi4E,YAAYkC,UAAU,UACvC,MAEH,IAAK,iBACL,IAAK,qBAEF,IAAIl4E,EAAU,GAGdnC,KAAK2nB,SACDC,GAAsB,MAAhB5nB,KAAKssC,SAAmB1kB,EAAEhnB,IAAMZ,KAAKssC,QAAQ1rC,KACrDqD,SAAS2jB,IACRzlB,EAAQmC,KAAK,CACV1D,GAAIgnB,EAAEhnB,GACN+B,MAAOilB,EAAExmB,OACV,IAGLk4E,EACI31E,GAAGzD,EAAIi4E,YACPx0E,GAAGzD,EAAIo4E,sBACP7zE,OAAO,UAAWtC,GACtBm3E,EACI31E,GAAGzD,EAAIi4E,YACPx0E,GAAGzD,EAAIo4E,sBACP5zE,UAGJ40E,EAAU31E,GAAGzD,EAAIi4E,YAAYkC,UAAU,cACvC,MAEH,IAAK,gBACL,IAAK,oBACFf,EACI31E,GAAGzD,EAAIi4E,YACPx0E,GAAGzD,EAAIs4E,YACP/zE,OAAO,UAAWzE,KAAK40E,wBAC3B0E,EAAU31E,GAAGzD,EAAIi4E,YAAYx0E,GAAGzD,EAAIs4E,YAAY9zE,UAGhD40E,EAAU31E,GAAGzD,EAAIi4E,YAAYkC,UAAU,cACvC,MAEH,IAAK,qBACL,IAAK,yBAA0B,CAC5B,IAKI5C,EALAmD,EAAY,GAMbzvE,EAAWmuE,EAAU31E,GAAGzD,EAAI0F,OAAOqG,WACtC,GAAgB,eAAZd,GAA6BnL,KAAKssC,QACnCmrC,EAAez3E,KAAKssC,QAAQ1rC,OACxB,CACJ,IAAIgF,EAAQ5F,KAAKoqC,QAAQthC,QAAQ9B,GAAMA,EAAEpG,IAAMuK,IAAU,GACrDvF,IAAO6xE,EAAe7xE,EAAMQ,SAASO,WAC5C,CAEI3G,KAAK66E,cAAgBpD,GACtBz3E,KAAK66E,aACDh1D,iBACG8G,GACEA,EAAGjB,YAAciB,EAAGjB,WAAW9qB,IAAM62E,IAE1CxzE,SAAS0oB,IACPiuD,EAAUt2E,KAAK,CACZ1D,GAAI+rB,EAAG/rB,GACP+B,MAAOgqB,EAAGvrB,OACX,IAIXk4E,EACI31E,GAAGzD,EAAIi4E,YACPx0E,GAAGzD,EAAIu4E,gBACPh0E,OAAO,UAAWm2E,GACtBtB,EAAU31E,GAAGzD,EAAIi4E,YAAYx0E,GAAGzD,EAAIu4E,gBAAgB/zE,UAGpD40E,EAAU31E,GAAGzD,EAAIi4E,YAAYkC,UAAU,kBACvC,KACH,CAEA,QAEGf,EAAU31E,GAAGzD,EAAIi4E,YAAYkC,UAAUzB,GAEnCxwE,GAAQ5G,EAAOa,WAGzB,EAGHb,EAAOk4E,wBAA0B,CAAC/2E,EAAO22E,KAEtC,IAAIn3E,EAAU,GAEV24E,EAAQ96E,KAAK2nB,SAASC,GAChBA,EAAEhnB,IAAM+B,IACf,GACCm4E,IACDA,EAAM/zE,QAAQC,IACHA,EAAE25B,eACV18B,SAAS2jB,IACTzlB,EAAQmC,KAAK,CACV1D,GAAIgnB,EAAEhnB,GACN+B,MAAOilB,EAAE3iB,OAAO7D,MAAQ,IAAMwmB,EAAExmB,OACjC,IAGLk4E,EACI31E,GAAGzD,EAAIi4E,YACPx0E,GAAGzD,EAAIq4E,sBACP9zE,OAAO,UAAWtC,GACtBm3E,EAAU31E,GAAGzD,EAAIi4E,YAAYx0E,GAAGzD,EAAIq4E,sBAAsB7zE,UAC7D,EAKHlD,EAAOa,SAAW,KACVrC,KAAKg1E,kBAEPxzE,EAAOyK,WAEPzD,QAAQC,KAAK,oDACbjH,EAAOgC,UAAUnB,WACjBrC,KAAKwP,KAAK,YAGN,GAGVhO,EAAOgM,cAAgB,KACpBxN,KAAKg1E,iBAAkB,CAAI,EAG9BxzE,EAAOiM,gBAAkB,KACtBzN,KAAKg1E,iBAAkB,CAAK,EAkB/BxzE,EAAOyK,SAAW,KACf,IAAImoC,EAAkB,CACnB7qB,KAAM,MACNpI,MAAO,IAGV,IAAI+4D,EAAYv2E,GAAGzD,EAAI+3E,YAyEvB,OAxEIiC,GACDA,EAAUpvE,gBAAgB7G,SAAQ,CAACq1E,EAAWvtE,KAC9B,GAATA,IACDqoC,EAAgB7qB,KAAO+vD,EAAU31E,GAAGzD,EAAIqpB,MAAMtd,YAGjD,IAAI8uE,EAAazB,EAAU31E,GAAGzD,EAAI0F,OAClC,GAAKm1E,EAAL,CAGA,IAAIrwE,EAAUqwE,EAAW9uE,WACzB,GAAKvB,EAAL,CAGA,IAAI6kB,EACAyrD,EAAc1B,EACd31E,GAAGzD,EAAI0F,OACPq1E,WACAh5E,OAAOR,KAAKoI,KAAKf,QAAQm2C,GAAQA,EAAIr+C,IAAM8J,IAAS,GACpDswE,IAAazrD,EAAQyrD,EAAYzrD,YAAS5E,GAG9C,IAAI8E,EAAO,KACR8qD,EAAajB,EAAU31E,GAAGzD,EAAIuvB,MAAM+qD,cACpCC,EAAgBnB,EACZ31E,GAAGzD,EAAIuvB,MACP2nD,UAAU,CAAEx2E,GAAI25E,IACnBE,GAAiBA,EAAcxuE,WAChCwjB,EAAOgrD,EAAcxuE,YAGxB,IAAItJ,EAAQ,KACTu4E,EAAc5B,EAAU31E,GAAGzD,EAAIi4E,YAAYqC,cAC3CW,EAAsB7B,EAClB31E,GAAGzD,EAAIi4E,YACPf,UAAU,CAAEx2E,GAAIs6E,IACvB,GAAIC,GAAuBA,EAAoBlvE,SAC5CtJ,EAAQw4E,EAAoBlvE,gBACxB,GACJkvE,GACAA,EAAoBrwE,gBACrB,CACC,IAAIrF,EAAO,GACX01E,EAAoBrwE,gBAAgB7G,SAASw1B,IAC1Ch0B,EAAKnB,KAAKX,GAAG81B,GAASxtB,WAAW,IAEpCtJ,EAAQ8C,EAAK6I,KAAK,IACrB,CAGA,GAAI3L,aAAiB4d,KAAM,CACxB,IAAI66D,EAAYp7E,KAAKoqC,QAAQthC,QACzB9B,GAAMA,EAAEpG,IAAM8J,IAChB,GAEC/H,EADCy4E,EACOA,EAAUvgC,YAAYl4C,GAEtBA,EAAM8gB,aAEpB,CAEA2wB,EAAgBjzB,MAAM7c,KAAK,CACxBirB,MAAOA,QAAS5E,EAChBtmB,IAAKqG,EACL+kB,KAAMA,EACN9sB,MAAOA,GAtDU,CAJG,CA2DrB,IAIR3C,KAAKo0C,gBAAkBA,EAEhBp0C,KAAKo0C,eAAe,EAI9Bp0C,KAAKS,GAAK,CACPG,GAAIV,EAAIC,UACR0B,KAAM,CACH,CACGnB,KAAM,OACNE,GAAIV,EAAI+3E,WACRpD,QAAQ,EACR3rE,SAAU,IAEb1H,EAAOy4E,kBAGhB,CAGA32E,KAAKnB,EAAU,CAAC,GAIb,IAAK,IAAIoB,KAHTzD,MAAMwD,KAAKnB,GAGGnC,KAAKwB,OAAOgC,UACvBxD,KAAKwB,OAAOgC,UAAUD,GAAKpB,EAAQoB,IAAMvD,KAAKwB,OAAOgC,UAAUD,GAG9DpB,EAAQ4qC,iBACT/sC,KAAKqM,UAAU0gC,eAAiB5qC,EAAQ4qC,gBAEvC5qC,EAAQ0rC,eACT7tC,KAAK84E,kBAAoB,CACtB,CACGn2E,MAAO5C,EAAE,iBACTa,GAAI,iBAEP,CACG+B,MAAO5C,EAAE,aACTa,GAAI,sBAGVZ,KAAK40E,uBAAyBzyE,EAAQk5E,aAE5C,CAEAx2E,SAASuB,GACNA,EAAWA,GAAY,CAAC,EAExBtG,MAAM+E,SAASuB,GAEf,IAAIlG,EAAMF,KAAKE,IACXo7E,EAAQt7E,KAAKwB,OAGjB85E,EAAM9tE,gBAEN,IAAI4mC,EAAkBp0C,KAAK+B,GAAG2D,UAAUU,GACxCguC,EAAgBjzB,MAAQizB,EAAgBjzB,OAAS,GAGjD,IAAI+4D,EAAYv2E,GAAGzD,EAAI+3E,YACnBiC,GAAWz2E,MAAMhD,GAAG,GAAIy5E,GAGQ,GAAhC9lC,EAAgBjzB,MAAMhb,QACvBm1E,EAAMnB,qBAGT/lC,EAAgBjzB,MAAMld,SAAS+C,IAC5B,IAAI0yD,EAAS4hB,EAAMpD,eAChBoB,EAAY31E,GAAG+1D,GAElB,GAAiB,MAAb4f,EAAJ,CAEA,IAAI1zE,EAAQ5F,KAAKoqC,QAAQthC,QAAQyyE,GAAQA,EAAI36E,IAAMoG,EAAE3C,MAAK,GAG1Di1E,EAAU31E,GAAGzD,EAAIqpB,MAAM9kB,OAAO,QAAS2vC,EAAgB7qB,MACvD+vD,EAAU31E,GAAGzD,EAAIqpB,MAAM7kB,UAGvB40E,EAAU31E,GAAGzD,EAAI0F,OAAOnB,OAAO,QAASuC,EAAE3C,KAC1Ci1E,EAAU31E,GAAGzD,EAAI0F,OAAOlB,UACxB42E,EAAM/B,YAAYvyE,EAAE3C,IAAKi1E,GAAW,GAGpC,IAAIiB,EAAajB,EAAU31E,GAAGzD,EAAIuvB,MAAM+qD,cACrCC,EAAgBnB,EACZ31E,GAAGzD,EAAIuvB,MACP2nD,UAAU,CAAEx2E,GAAI25E,IACnBE,GAAiBA,EAAc51E,WAChC41E,EAAch2E,OAAO,QAASuC,EAAEyoB,MAChCgrD,EAAc/1E,WAIjB40E,EAAUkC,aACVF,EAAM7B,aAAazyE,EAAEyoB,KAAM6pD,GAC3BA,EAAUmC,eAIV,IAAIP,EAAc5B,EAAU31E,GAAGzD,EAAIi4E,YAAYqC,cAC5CW,EAAsB7B,EAClB31E,GAAGzD,EAAIi4E,YACPf,UAAU,CAAEx2E,GAAIs6E,IACvB,GAAIC,GAAuBA,EAAoBt2E,SAGzCe,GACa,QAAbA,EAAMvB,KACN2C,EAAErE,QACS,QAAVqE,EAAEyoB,MACU,WAAVzoB,EAAEyoB,MACQ,iBAAVzoB,EAAEyoB,MACQ,oBAAVzoB,EAAEyoB,MAEL0rD,EAAoB12E,OAAO,QAAS,IAAI8b,KAAKvZ,EAAErE,QAE/Cw4E,EAAoB12E,OAAO,QAASuC,EAAErE,OAGzCw4E,EAAoBz2E,eAChB,GACJy2E,GACAA,EAAoBrwE,gBACrB,CACC,IAAIrF,GAAQuB,EAAErE,OAAS,IAAIslB,MAAM,KAC7Blc,EAAQ,EACZovE,EAAoBrwE,gBAAgB7G,SAASw1B,IAC1C91B,GAAG81B,GAAS+hD,aACZ73E,GAAG81B,GAAS50B,SAASY,EAAKsG,IACb,GAATA,GACDuvE,EAAM5B,wBAAwBj0E,EAAKsG,GAAQutE,GAE9C31E,GAAG81B,GAASgiD,eAEZ1vE,GAAO,GAEb,CAEInG,GAAsB,QAAbA,EAAMvB,MAChBi1E,EAAUkC,aACVF,EAAM7B,aAAazyE,EAAEyoB,KAAM6pD,GAC3BA,EAAUkC,aAxEgB,CAyE7B,IAIHF,EAAM7tE,iBACT,CASAumC,aAOG,OANKh0C,KAAK07E,sBACP17E,KAAK07E,oBAAsB17E,KAAK+B,GAAG6xB,iBAChC,GAAG5zB,KAAKE,IAAIC,yBAIXH,KAAK07E,oBAAoBtK,oBAAoBpxE,KAAKiM,WAC5D,iEC/vCH,MAAM0vE,EAAa,EAAQ,OAE3B,IAAI57E,EAAI,KAER,MAAM67E,UAAmB,IACtBj8E,YAAYE,EAAQkC,GACjBjC,MAAMD,EAAQ,CACXqK,KAAM,GAAGrK,mBACTg8E,OAAQ,GAAGh8E,qBACX+F,MAAO,GAAG/F,sBAGbG,KAAKH,OAASA,EAEdG,KAAKssC,QAAU,KAIftsC,KAAK87E,gBAAkB,KAKvB97E,KAAK+B,GAAKA,EAELhC,IACFA,EAAI,IAAI6V,IACE5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,GAG9C,CAOAmmE,SACG,MAAMC,EAAOh8E,KAEb,MAAO,CACJ6B,KAAM,CACH,CACGnB,KAAM,SACNs4E,SAAS,EACT73E,KAAM,CACH,CAEGT,KAAM,QACNM,MAAO,GACPI,MAAOrB,EAAE,QAEZ,CAEGW,KAAM,QACNE,GAAIZ,KAAKE,IAAI0F,MACbzD,QAASnC,KAAKgL,cAAa,GAC3B5I,GAAI,CACDC,SAAU8C,eAAgBgG,GACvB,MAAM8wE,EAAYj8E,KAAKyL,sBAEjBuwE,EAAKzC,YAAYpuE,EAAU8wE,EACpC,IAGN,CAEGv7E,KAAM,QACNM,MAAO,GACPI,MAAOrB,EAAE,OAEZ,CACGW,KAAM,YACNiC,MAAO,SACP5B,OAAQ,GACRm7E,SAAU,IACV/5E,QAAS,CACN,CAAEvB,GAAI,SAAU+B,MAAO5C,EAAE,WACzB,CAAEa,GAAI,UAAW+B,MAAO5C,EAAE,aAE7B80E,OAC4B,MAAzB70E,KAAKm8E,mBACJn8E,KAAKm8E,iBAAiBh2E,OAC1B/D,GAAI,CACDC,SAAU,SAAU2T,GACjB,MAAMimE,EAAYj8E,KAAKyL,gBAEvBuwE,EAAKI,0BACFH,EACO,WAAPjmE,EAEN,IAIN,CAAC,EAED,CACG6+D,QAAQ,GAEX,CAEGn0E,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EAEXC,MAAO,WACJ,MAAM+3E,EAAYt5E,KAAKyL,gBAAgBA,gBAEvCuwE,EAAKK,WAAW/C,EACnB,MAMlB,CAOA74E,KAEG,MAAO,CACJoB,KAAM,CACH,CACGnB,KAAM,OACNE,GAAIZ,KAAKE,IAAIgK,KACb2qE,QAAQ,EACRlzE,YAAY,EACZuH,SAAU,IAEb,CACGxI,KAAM,SACNE,GAAIZ,KAAKE,IAAI27E,OACbtwE,KAAM,aACN3J,KAAM,aACNR,MAAOrB,EAAE,qBACTwB,MAAO,KACJvB,KAAKs8E,SAAS,IAK7B,CAEAh5E,KAAKvB,GACF,MAAMw6E,EAAQ54E,GAAG3D,KAAKE,IAAIgK,MAG1B,OAFIqyE,GAAOx6E,EAAG0Y,MAAM/W,OAAO64E,EAAOx6E,EAAG0Y,MAAM7W,aAEpC6L,QAAQC,SAClB,CAUA4sE,QAAQvwE,GACL,MAAMwwE,EAAQ54E,GAAG3D,KAAKE,IAAIgK,MAG1B,GAFqBlK,KAAKgL,cAAa,GAEtB7E,OAAS,EAAG,OAE7B,MAAM1F,EAAKT,KAAK+7E,SACVriB,EAAS6iB,EAAMtxE,QAAQxK,EAAIsL,GAIjC,OAFA/L,KAAKw8E,aAEE9iB,CACV,CAaA1uD,aAAaW,GACV,IAAIxJ,GAAWnC,KAAKssC,QAAQvlC,UAAY,IAAIoH,KAAKnH,IACvC,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UAsBf,OAlBIuK,GACahI,GAAG3D,KAAKE,IAAIgK,MAEpBY,gBAAgB7G,SAASq1E,IAE5B,IAAKA,IAAcA,EAAU31E,GAAI,OAEjC,MAAMo3E,EAAazB,EAAU31E,GAAG3D,KAAKE,IAAI0F,OAEzC,IAAKm1E,EAAY,OAEjB,MAAMrwE,EAAUqwE,EAAW9uE,WAEtBvB,IAELvI,EAAUA,EAAQ2G,QAAQm2C,GAAQA,EAAIr+C,IAAM8J,IAAQ,IAGnDvI,CACV,CAgBA8J,WACG,MAAM6B,EAAS,GACTyuE,EAAQ54E,GAAG3D,KAAKE,IAAIgK,MAkE1B,OAhEIqyE,GACDA,EAAMzxE,gBAAgB7G,SAASw4E,IAC5B,MAAMR,EAAYQ,EAAe3xE,gBAAgB,GAGjD,IAAKmxE,IAAcA,EAAUt4E,GAAI,OAEjC,MAAMo3E,EAAakB,EAAUt4E,GAAG3D,KAAKE,IAAI0F,OAEzC,IAAKm1E,EAAY,OAEjB,MAAMrwE,EAAUqwE,EAAW9uE,WAE3B,IAAKvB,EAAS,OAEd,IAAIgyE,EAAmBT,EAAUnxE,gBAAgB,GACjD4xE,EAAmB18E,KAAK28E,kBAAkBD,GAE1C,MAAME,EAAoBX,EAAUnxE,gBAAgB,GAEpD,IAAK4xE,IAAqBE,EAAmB,OAE7C,MAAMj4C,EAAY3kC,KAAKssC,QAAQv+B,UAAUrD,GACnCsL,EAAM,CACTtL,QAASA,GAIZ,GAAIgyE,GAAoBA,EAAiBG,YACtC,GACqB,kBAAlBl4C,EAAUtgC,KACQ,SAAlBsgC,EAAUtgC,IAEV2R,EAAIrT,MAAQgiC,EAAU14B,SAASywE,QAC7B,GACgB,SAAlB/3C,EAAUtgC,KACQ,aAAlBsgC,EAAUtgC,IAKV,GAAmC,IAFhCq4E,EAAiB5xE,gBAAgB,IAAM4xE,GAErBzwE,WAClB+J,EAAIrT,MAAQ,sBACV,CACF,MAAMg2E,EACH+D,EAAiB5xE,gBAAgB,IAAM4xE,EAE1C1mE,EAAIrT,MAAQgiC,EAAU14B,SAAS0sE,EAClC,MAGE3iE,EAAIrT,MAAQgiC,EAAU14B,SAASywE,QAG9BE,GAAqBA,EAAkBC,cAC7C7mE,EAAI8mE,gBAAiB,EACrB9mE,EAAIrT,MAAQi6E,EAAkB3wE,YAIjC6B,EAAOxJ,KAAK0R,EAAI,IAIflI,CACV,CAOA9I,WAAWC,GACRjF,KAAKssC,QAAUrnC,EAEfjF,KAAKk6B,SAAWl6B,KAAK+B,GAAGu2B,eAAe,CAAC,GACxCt4B,KAAK87E,gBAAkB,IAAIH,EACxB,CACGv1E,SAAU,CACP6sD,WAAW,EACXnxD,WAAY,IAGlB9B,KAAKk6B,UAERl6B,KAAK87E,gBAAgB92E,WAAWC,GAEhCjF,KAAK6E,SAAS,KACjB,CASAw3E,WAAW/C,GACM31E,GAAG3D,KAAKE,IAAIgK,MAEpBsB,WAAW8tE,GACjBt5E,KAAKw8E,YACR,CAYAr3E,kBAAkBgG,EAAU8wE,GACzB,MAAMr2E,EAAQ5F,KAAKssC,QAAQv+B,UAAU5C,GAErC,IAAKvF,EASF,YARA5F,KAAK+B,GAAGqG,OAAOotB,QACZ,IAAIltB,MAAM,+BAA+B6C,MACzC,CACGmE,QAAS,kDACTgrB,QAASnvB,IAOlB,MAKG4xE,EALoBn3E,EAAM64D,gBACOhD,YAC9Bz7D,KAAKk6B,SACLl6B,KAAK87E,iBAE6B37E,UAClCH,KAAK+B,GAAGi4B,KACRh6B,KAAKH,QAELgM,EAAaowE,EAAUnxE,gBAE7B,IAAIkyE,EAAYD,EAAmBt8E,GAyBnC,OAtBAw7E,EAAUzwE,WAAWK,EAAW,IAE5B7L,KAAKm8E,kBAAkBh2E,OACxB81E,EAAUhxE,QACP,CACGvK,KAAM,aACNyB,QAASnC,KAAKm8E,iBACdtH,QAAQ,GAEX,GAGHoH,EAAUhxE,QACP,CACG4pE,QAAQ,GAEX,SAGA70E,KAAKi9E,OAGHr3E,EAAMvB,KACX,IAAK,gBACL,IAAK,OACF24E,EAAYA,EAAUn7E,KAAK,GAAGA,KAAK,GACnCm7E,EAAU5D,QAAQ33E,KAAKoI,YACbjE,EAAMs3E,cAAc/uE,KAAK9D,IACtB,CACJzJ,GAAIgF,EAAM4yC,iBAAiBnuC,GAC3B1H,MAAO0H,EAAEgE,UAET,GAES,SAAdzI,EAAMvB,KACP24E,EAAU5D,QAAQ33E,KAAKoI,KAAKgjC,QAAQ,CACjCjsC,GAAI,kBACJ+B,MAAO,oBAKb,MAEH,IAAK,OACL,IAAK,WACFq6E,EAAY,CACTt8E,KAAM,SACNmB,KAAM,CACH,CACGnB,KAAM,WACNoB,WAAY,EACZq7E,WAAYp9E,EAAE,qBACdqC,GAAI,CACDC,SAAU,SAAU42E,GACjB,MAAMmE,EAASp9E,KAAKyL,gBAEpB,IAAK2xE,EAAQ,OAEb,MAAMzE,EAAayE,EAAOtyE,gBAAgB,GAErC6tE,IAELM,EAASN,EAAWh0E,OAASg0E,EAAW/zE,OAC3C,IAGNo4E,IAQZf,EAAUzwE,WAAWK,EAAW,IAChCowE,EAAUhxE,QAAQ+xE,EAAW,GAE7BD,EAAmBz5E,OAGfsC,EAAM6qE,eACP7qE,EAAM6qE,cAAc,CAAC,EAAGzwE,KAAK+B,GAAGi4B,KAAMnuB,EAAW,GAAG6B,OAEvD1N,KAAKo8E,0BACFH,EAC6B,YAA7BpwE,EAAW,GAAGI,YAEjBtI,GAAGs4E,GAAWhM,SACdgM,EAAUlC,cAAc9J,SAExBjwE,KAAKq9E,OACR,CAcAx4E,SAASuB,GACN,MAAMm2E,EAAQ54E,GAAG3D,KAAKE,IAAIgK,MAErBqyE,IAGL94E,MAAMhD,GAAG,GAAI87E,IAEbn2E,EAAWA,GAAY,IACVD,OAAS,IAEtBC,EAASnC,SAAQkB,MAAOiJ,IACrB,MACM6tE,EADiBt4E,GAAG3D,KAAKs8E,WACExxE,gBAAgB,GACxBmxE,EAAU7E,UAChC,CAAE12E,KAAM,aACR,QAGcmE,SAASuJ,EAAK0uE,eAAiB,UAAY,UAE5D,MAAMQ,EAASrB,EAAUt4E,GAAG3D,KAAKE,IAAI0F,OAErC03E,EAAO74E,OAAO,QAAS2J,EAAK1D,SAC5B4yE,EAAO54E,gBAED1E,KAAKu5E,YAAYnrE,EAAK1D,QAASuxE,GAErC,MAAMt3C,EAAY3kC,KAAKssC,QAAQv+B,UAAUK,EAAK1D,SAE9C,IAAKi6B,EAAW,OAGhB,GAAIv2B,EAAK0uE,eAKN,YAJ0Bb,EAAUnxE,gBAAgB,GAElCjG,WAAWuJ,EAAKzL,OAMrC,IAAI+5E,EAAmBT,EAAUnxE,gBAAgB,GACjD4xE,EAAmB18E,KAAK28E,kBAAkBD,GAC1C,MAAM3uD,EAAU,CAAC,EAEjBA,EAAQ4W,EAAU79B,YAAcsH,EAAKzL,OAAOA,OAASyL,EAAKzL,MAC1DgiC,EAAU9/B,SAAS63E,EAAkB3uD,GAIhB,QAAjB4W,EAAUtgC,KAAkC,YAAjBsgC,EAAUtgC,KACL,mBAAjC0pB,EAAQ4W,EAAU79B,aACc,YAAhC41E,EAAiBz6E,OAAOvB,MAExBg8E,EAAiB73E,UAAS,EAC7B,IAGH7E,KAAKw8E,cACR,CAMAA,aACG,MAAMD,EAAQ54E,GAAG3D,KAAKE,IAAIgK,MAE1B,GAAIqyE,EAAO,CACR,MAAM1wE,EAAa0wE,EAAMzxE,gBAErBe,GAAcA,EAAW1F,OAAQo2E,EAAM33E,OACtC23E,EAAM53E,OACX43E,EAAMtM,QACT,CACH,CAEAsN,mBAAmBp7E,GAChBnC,KAAKm8E,iBAAmBh6E,CAC3B,CAEAi6E,0BAA0BH,EAAWuB,GAClC,MAAMC,EAAgBxB,EAAUnxE,gBAAgB,GAC1C4yE,EAAiBzB,EAAUnxE,gBAAgB,GAE7C0yE,GACDC,EAAc94E,OACd+4E,EAAe94E,SAEf64E,EAAc74E,OACd84E,EAAe/4E,OAErB,CAEAQ,aACGxB,GAAG3D,KAAKE,IAAI27E,QAAQz2E,UAEpB,MAAMm3E,EAAQ54E,GAAG3D,KAAKE,IAAIgK,MAErBqyE,IAEAA,EAAMl3E,oBAAoBrF,KAAKsD,KAAKtD,KAAK+B,IAE9Cw6E,EAAMl3E,aAAa,CAAEzD,KAAM,SAC9B,CAEAy7E,QACG15E,GAAG3D,KAAKE,IAAI27E,QAAQn0E,SACpB/D,GAAG3D,KAAKE,IAAIgK,MAAMvC,cACrB,CAEAg1E,kBAAkBgB,GACf,OAAKA,GAAO1xE,UAAY0xE,GAAO7yE,cAEzB6yE,EACI7yE,gBACAhC,QAAQ80E,GAAcA,EAAU3xE,WAAU,IAAM0xE,EAGhDA,CAEb,EAGH,2BC9lBA,MAAME,EAAc,EAAQ,OAEtB99E,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,cAAsBm+E,EACpCl+E,YAAYgG,EAAQV,EAAQ+yC,GACzBl4C,MAAM6F,EAAQV,EAAQ+yC,GAEtBh4C,KAAK+B,GAAGK,GAAG,0BAA2Bqf,IAC/BA,EAAI7gB,IAAMZ,KAAKY,IAChBZ,KAAKwP,KAAK,qBAAsBxP,KACnC,GA0BN,CASA0qB,oBAAoBtkB,GACjB,MAAM0R,EAAM,CACT1W,MAAOgF,EAAShF,MAChB0F,WAAYV,EAASU,WACrBV,SAAUA,GAMb,cAHOA,EAAShF,aACTgF,EAASU,WAETgR,CACV,CAEAgmE,cAAc59E,EAAKkG,GACJpG,KAAKiF,OAAOF,YAAYnF,IAApC,MACMm+E,EAAS/9E,KAAK+B,GAAG6xB,iBACpB,GAAG5zB,KAAKY,6BAEX+C,GAAGzD,EAAI89E,eAAe/yE,QAAQ,CAC3BvK,KAAM,OACNQ,IAAK,mBACLC,KAAM,CACH,CACGU,KAAM,CACH,CACGnB,KAAM,OACNyG,KAAM,iBACNrF,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCS,MACGyD,GAAYA,EAASikE,eAChBjkE,EAASikE,eACT,GACRjpE,MAAOrB,EAAE,oBAEZg+E,EAAOt9E,KAGb,CACGC,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,MAAM+3E,EAAYt5E,KAAKyL,gBACvB9H,GAAGzD,EAAI89E,eAAexyE,WAAW8tE,EACpC,MAIT31E,GAAGo6E,EAAO79E,IAAI0H,MAAMjD,OAEpBo5E,EAAOlqD,WAAW7zB,KAAKiF,OAAO8B,UAC1BX,GAAYA,EAAS+a,OAAO48D,EAAOl5E,SAASuB,EAAS+a,MAC5D,CASA5b,UACG,MAAMgC,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAoBrC,OAXgB,GALbvH,KAAKiF,OAAO8B,QAAQC,GAEdA,EAAEpG,IAAMZ,KAAKY,IACboG,EAAEF,WAAWqR,eAAiBnY,KAAK8G,WAAWqR,gBAEjDhS,QAEHoB,EAAUgW,SACP,aACAxd,EACG,oEACA,CAACC,KAAK8G,cAKRS,CACV,CAiBApC,gBAEQnF,KAAKY,WAKJZ,KAAK+tE,oBAKLjuE,MAAM8U,gBAEN5U,KAAKiF,OAAO47B,YAAY7gC,MACjC,CAWAmF,aACG,IAAIqqE,GAAQ,EASZ,GAPKxvE,KAAKY,KACP4uE,GAAQ,IAMNA,GAASxvE,KAAKoG,SAASkzC,UAAYt5C,KAAKoG,SAAS0jC,QAAS,CAC5D,MAAM9hC,EAAQhI,KAAKiF,OAAO+C,QAGpB8F,QAAe9F,EAAM0nB,QAAQ,CAChCL,MAAO,CACJ9F,KAAM,MACNpI,MAAO,CACJ,CACG9c,IAAKrE,KAAKY,GACV6uB,KAAM,eAMZ03B,EAAQ,GAGdr5C,EAAOjE,KAAK5F,SAASosB,IACbA,EAAErwB,KAAK8G,cAAaupB,EAAErwB,KAAK8G,YAAc9G,KAAKoG,SAAS0jC,SAE5Dqd,EAAM7iD,KAAK0D,EAAM+mE,OAAO1+C,EAAEzvB,GAAIyvB,GAAG,UAG9B5gB,QAAQ4R,IAAI8lC,EACrB,CAgBA,SAZMrnD,MAAM8H,aAKN5H,KAAKiF,OAAOs8B,SAASvhC,OAOtBA,KAAK2gC,aAAc,CACrB,MAAMs9C,EAAYzO,EAAQxvE,KAAKkI,gBAAkBlI,KAAKk+E,sBAChDD,CACT,CAEA,OAAOj+E,IACV,CAMAkI,gBACG,OAAOlI,KAAK+B,GAAGsN,QAAQgB,KAAK,CACzBC,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAEAs9E,gBACG,OAAOl+E,KAAK+B,GAAGsN,QAAQ8G,IAAI,CACxB7F,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAEAmtE,cACG,OAAO/tE,KAAK+B,GAAGsN,QAAgB,OAAE,CAC9BiB,IAAK,8BAA8BtQ,KAAKiF,OAAOrE,YAAYZ,KAAKY,MAEtE,CAmBAmvE,aAAa5tE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAAS,CACZrB,GAAIZ,KAAK8G,WACTgpE,OAAQ9vE,KAAKoB,OAShB,OANIe,EAAQytE,mBAAqB5vE,KAAKoG,SAASC,WAC5CpE,EAAO6tE,OAAS,iCAAiC9vE,KAAK64C,uBACnD52C,EAAO6tE,UAIN7tE,CACV,CAiBAwuE,cAAcvxD,EAAKtf,EAAK2C,EAAMJ,GAAU,CAYxCg8E,WAAWj/D,EAAKtf,EAAK2C,GAClB,OAAO,CACV,CAYA0J,SAASmC,EAAM2f,GACZ,OAAO3f,EAAKnC,UACf,CAWApH,SAASuJ,EAAM2f,EAAS2U,GACrB,IAAKt0B,EAAM,OAEX,IAAI4H,EAQDA,EALY,MAAX+X,GAA+C,MAA5BA,EAAQ/tB,KAAK8G,aACjB,MAAhB47B,EAGQ3U,GAAuC,MAA5BA,EAAQ/tB,KAAK8G,YAC1BinB,EAAQ/tB,KAAK8G,YAEbinB,EAJA2U,EAOTt0B,EAAKvJ,SAASmR,EACjB,CAWAyoD,cAAc2f,GAIX,MAAO,CAEJr0C,OAAQ,KACE,CACJ1lC,IAAK+5E,IAWX3iB,YAAa,CAAC12D,EAAagQ,KACxBhQ,EAAcA,GAAe/E,KAAK+B,GAAGm4B,SAQrC,MAAMv0B,EAAS3F,KAAKy+D,gBAAgB10B,SAapC,OAZApkC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCT,EAAOS,SAAS4R,SAAWhY,KAAKiF,OAAOrE,GACvC+E,EAAOS,SAASsE,QAAU1K,KAAKY,GAEJmE,EAAYgkB,QACpCpjB,EACAZ,EACAgQ,EAKsB,EAGlC,CAKAymD,kBACG,MAAO,CACJzxB,OAAQ,KACE,CACJx+B,KAAM,WAMZkwD,YAAa,CAAC12D,EAAagQ,KACxBhQ,EAAcA,GAAe/E,KAAK+B,GAAGm4B,SAGrC,MAAMv0B,EAAS3F,KAAKw7D,kBAAkBzxB,SAWtC,OAVApkC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCT,EAAOS,SAAS4R,SAAWhY,KAAKiF,OAAOrE,GACvC+E,EAAOS,SAASsE,QAAU1K,KAAKY,GAEJmE,EAAYgkB,QACpCpjB,EACAZ,EACAgQ,EAGsB,EAGlC,CAOAzI,cACG,OAAO6H,OAAOsnC,OAAO,CAAC,EAAGz7C,KAAKoG,SACjC,CAYAwnE,gBAAgB7uD,EAAKlV,EAAO,CAAC,GAC1B,IAAIyH,EAAU,GAAGtR,KAAK0J,cAAc1J,KAAKoB,WAAW2d,IACpD/e,KAAKmpE,UAAU7kE,KAAK,CAAEgN,UAASzH,QAClC,oBCheH,MAAMw0E,EAAuB,EAAQ,OAErC5+E,EAAOC,QAAU,cAA+B2+E,EAS7C94E,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAwqE,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOsgE,SAAYx0C,GAEXA,EAAQuwD,OAGH,GAFAt+E,KAAKsgB,OAAOyN,GAMlB9rB,CACV,CAWAw8D,gBACG,OAAO3+D,MAAM2+D,cAAc,gBAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,oBChEH,MAAMC,EAAqB,EAAQ,OAEnC/+E,EAAOC,QAAU,cAA6B8+E,EAC3C7+E,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAwqE,aAAa5tE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAyBlC,OAvBAF,EAAOqD,OAAS,WAChBrD,EAAOf,IAAM,SACbe,EAAOsgE,SAAW,CAACrjD,EAAK6qB,EAAQpnC,EAAOV,IAEhCid,EAAIo/D,OAAep/D,EAAIlf,KAAK8G,YAG5B3E,EAAQyjD,SAEN,mCACA7b,EAAO00C,SAASv/D,EAAK6qB,EAAQpnC,EAAOV,GACpC,SAMCU,EACM,sDACE,gDAIXV,CACV,CAWAw8D,gBACG,OAAO3+D,MAAM2+D,cAAc,WAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,mBAIJk6E,CACV,oBC9EH,MAAMnnC,EAAuB,EAAQ,OAErC33C,EAAOC,QAAU,cAA+B03C,EAC7Cz3C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAwqE,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAUlC,OARAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOsgE,SAAYx0C,GACZA,EAAQuwD,OAAevwD,EAAQ/tB,KAAK8G,YAEjC9G,KAAKsgB,OAAOyN,GAGf9rB,CACV,CAWAw8D,gBACG,OAAO3+D,MAAM2+D,cAAc,gBAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,oBC7DH,MAAMG,EAAqB,EAAQ,OAEnCj/E,EAAOC,QAAU,cAA6Bg/E,EAC3C/+E,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAwqE,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOsgE,SAAYx0C,GAEXA,EAAQuwD,OAGH,GAFAt+E,KAAKsgB,OAAOyN,GAMlB9rB,CACV,CAWAw8D,gBACG,OAAO3+D,MAAM2+D,cAAc,gBAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,CAEArV,eACGppE,MAAMopE,gBAELlpE,KAAKoG,SAAS0xC,eAAe7vB,MAAM,MAAQ,IAAIhkB,SAASrD,IAC1CZ,KAAKiF,OAAO8I,UAAUnN,IAE/BZ,KAAK4tE,gBAAgB,mBAAmBhtE,gBAAkB,CACvD05B,QAAS15B,EACTk3C,eAAgB93C,KAAKoG,SAAS0xC,gBAEpC,GAEN,oBC9EH,MAAM6mC,EAAqB,EAAQ,OAInCl/E,EAAOC,QAAU,cAA6Bi/E,EAC3Ch/E,YAAYgG,EAAQV,EAAQ+yC,GACzBl4C,MAAM6F,EAAQV,EAAQ+yC,EACzB,CAWA7yC,gBAEG,IAAKnF,KAAKY,GAAI,OAAO6O,QAAQC,UAsB7B,SALM5P,MAAM8U,WAIO5U,KAAK4G,eACP,OAAO6I,QAAQC,UAEhC,MAAMo2B,EAAY9lC,KAAK+rB,UACvB,OAAK+Z,EAGEA,EAAUlxB,UAHMnF,QAAQC,SAIlC,CAeA0oC,mBAAmBl5B,GAChB,IAAIm5B,EAAe,GAEnB,MAAMxuC,EAAO/J,MAAMs4C,mBAAmBl5B,GAChC+mB,EAAejmC,KAAK4G,eAwB1B,OAtBIiD,GAAQo8B,IAEL94B,MAAMC,QAAQvD,GACfwuC,EAAexuC,EAAKsE,KAAI,SAAUkiB,GAO/B,OALIA,IACDA,EAAEhiB,KAAOgiB,EAAEhiB,MAAQ43B,EAAalD,YAAY1S,GAC5CA,EAAE1tB,MAAQ0tB,EAAEhiB,MAGRgiB,CACV,IACQxmB,EAAKjJ,IAAMiJ,EAAKgG,MACxBwoC,EAAexuC,EACfwuC,EAAahqC,KACVgqC,EAAahqC,MAAQ43B,EAAalD,YAAYsV,GACjDA,EAAa11C,MAAQ01C,EAAahqC,MACX,iBAARxE,IACfwuC,EAAe,CAAEhqC,KAAMxE,KAItBwuC,CACV,CAEA03B,aAAa5tE,GACVA,EAAUA,GAAW,CAAC,EACtB,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAC5ByD,EAAQ5F,KACF4F,EAAM7D,GAAGi4B,KAEE,MAAnB73B,EAAQgzB,UACThzB,EAAQgzB,QAAU,CAAC,GAGtB,IAAIypD,EAAwC,QAA1B5+E,KAAKoG,SAASa,SA4DhC,OA1DAhF,EAAOqD,OAASs5E,EAAc,cAAgB,QAC9C38E,EAAO48E,WAAcl8E,GACX3C,KAAK6+E,WAAWl8E,GAE1BV,EAAO68E,UAAan8E,GACV3C,KAAK8+E,UAAUn8E,GAEzBV,EAAOsgE,SAAYrjD,IAChB,IAAIm5B,EAAezyC,EAAMwyC,mBAAmBl5B,GACxCvZ,EAAS,GAEb,GADAA,EAAOrB,KAAK,gCAET+zC,GACAlrC,MAAMC,QAAQirC,IACdA,EAAalyC,OAEbkyC,EAAap0C,SAAS+R,IACnBrQ,EAAOrB,KACJ,6CAA6C0R,EAAIrT,uCAAoCqT,EAAIpV,iGAC3F,IAEAy3C,EAAalyC,OAAS,GACvBR,EAAOrB,KACJ,8CAA8C+zC,EAAalyC,qBAG7D,KAAIkyC,EAAa11C,MASrB,MAAO,GATqB,CAC5B,IAAIuC,EAAQ,GACR/C,EAAQyjD,WACT1gD,EAAQ,0GAEXS,EAAOrB,KACJ,uCAAuCY,wBAA4BmzC,EAAa11C,qBAEtF,CAEA,CAEA,OADAgD,EAAOrB,KAAK,UACLqB,EAAO2I,KAAK,GAAG,EAGzBrM,EAAOm3E,QAAU,CACdh3E,GAAI,CACDi3E,aAAc,WACXzzE,EAAMm5E,YAAY/+E,KACrB,GAIH8I,OAAQ,EAAGnG,SAASoT,KAChBpT,GAAS,IAAIwV,cAAc61B,UAAUj4B,GAAU,IAAIoC,gBAGtDymE,IACD38E,EAAOm3E,QAAQ14E,KAAO,eACtBuB,EAAOm3E,QAAQ4F,QAAS,GAGpB/8E,CACV,CAEA88E,YAAYE,GAGT,MAAMC,EAAQD,EAASvE,UACU,OAA7B16E,KAAKoG,SAASc,cACVg4E,GAAOpyD,KAAK,CAAC,IAAM,IAAI3mB,SAI/B,CAAC,SAAU,UAAUlC,SAASI,IACvBrE,KAAK,OAAOqE,aAEhBrE,KAAK,OAAOqE,WAAerE,KAAK+B,GAAGK,GAChC,qBAAqBiC,KACpB+V,IACMpa,KAAK4G,eAAehG,IAAMwZ,EAAIpC,UAAUknE,EAAMpkE,UAAU,IAEjE,IAGJ9a,KAAKm/E,sBAAsBF,EAAU,KAAMj/E,MAC9C,CAcAm+E,WAAWj/D,EAAc3c,GAGzB,CAWAk8D,gBACG,OAAO3+D,MAAM2+D,cAAc,UAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,kBAIJk6E,CACV,CAQArB,WAAWkC,EAAaC,EAAM1xE,EAAMrI,GACjC,MAAMg6E,EAAYh6E,EAClB,OAAO,IAAImK,SAAQ,CAACC,EAASiH,KAC1B,IAAI4oE,GAAe,EAInB,MAAMC,EAAWr9E,IAEdA,EAAUA,EAAQ2G,QAAQsF,IACvB,GAAIA,EAAKC,KAAK8J,cAAc61B,SAASqxC,EAAKlnE,eACvC,OAAO,CACV,IAGEonE,EAMFv/E,KAAKwP,KAAK,cAAerN,IALzBo9E,GAAe,EACf7vE,EAAQvN,GAKX,EAKGktB,EAAQrvB,KAAK+B,GAAG2D,UAAU05E,GAAe,CAAC,GAUhD,GATAzxE,EAAOA,GAAQ,GAEV0hB,EAAM9F,OAAM8F,EAAM9F,KAAO,OAEzB8F,EAAMlO,QAAOkO,EAAMlO,MAAQ,IAEhCk+D,EAAOA,GAAQ,IAGVr/E,KAAKoG,SAASO,WAAY,MAAO,GAKtC,MAAM84E,EAAYz/E,KAAK4G,eAGvB,GAAiB,MAAb64E,EAAmB,MAAM,IAAIn3E,MAAM,oBAEvC,MAAMo3E,EAAY1/E,KAAK+rB,UAGvB,GAAiB,MAAb2zD,EAAmB,MAAM,IAAIp3E,MAAM,oBAGvC,MAAMq3E,EAAcF,EAAUz3E,QAID,QAA1BhI,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,aACoB,GAAlC5B,GAAQrD,QAAQ29E,eAEhBvwD,EAAMlO,MAAM7c,KAAK,CACdD,IAAKq7E,EAAU9+E,GACf6uB,KAAM,YAMiB,OAA1BzvB,KAAKoG,SAASa,UACe,OAA7BjH,KAAKoG,SAASc,aACoB,GAAlC5B,GAAQrD,QAAQ29E,iBAGc,GAA1B5/E,KAAKoG,SAASM,SAIf2oB,EAAMlO,MAAM7c,KAAK,CACdD,IAAKq7E,EAAU9+E,GACf6uB,KAAM,qBAKTJ,EAAMlO,MAAM7c,KAAK,CACdD,IAAKq7E,EAAU9+E,GACf6uB,KAAM,aAOf,MAAMowD,EAAY7/E,KAAK8/E,aAAazwD,GAEpC5f,QAAQC,UACJ8E,MAAKrP,UAII,IAQTqP,MAAKrP,MAAO46E,IACV,GAAIA,EAGD,OADA//E,KAAK+zE,SAAWgM,EACTP,EAAQx/E,KAAK+zE,UAGvB,IASIiM,EAAW,WACZ,OAAO,IAAIvwE,SAAQ,CAACC,EAASiH,KAE1BjH,EAAQ,CAAE7F,KAAM,IAAK,GAE3B,EAKA,GACkC,OAA/B7J,MAAMoG,UAAUc,cACflH,MAAMigF,kBAAoBX,GAAWr9E,QAAQU,OAC/C,CACC,IAAIgD,EAAS,GAGkB,cAA3B25E,GAAWr9E,QAAQvB,MACU,SAA3B4+E,GAAWr9E,QAAQvB,OACtBV,MAAMigF,iBAGEX,GAAWr9E,QAAQU,QAExBgD,EADCwH,MAAMC,QAAQkyE,EAAUr9E,OAAOU,OACvB28E,GAAWr9E,QAAQU,MAAM2L,OAEzBgxE,GAAWr9E,QAAQU,OAL/BgD,EAAS3F,MAAMigF,iBAQlB,IAAIC,EAAY,CAAC,EACbC,EAAW,GAEfD,EAAU32D,KAAO,KACjB22D,EAAU/+D,MAAQ,GAElBxb,EAAOsiB,MAAM,KAAKhkB,SAASmP,IACxB8sE,EAAU/+D,MAAM7c,KAAK,CAClBD,IAAK,OACLorB,KAAM,SACN9sB,MAAOyQ,GACR,IAEL4sE,EAAW,WACR,OAAOL,EAAYjwD,QAAQ,CACxBL,MAAO6wD,EACPvyE,KAAMwyE,EACNl3E,UAAU,GAEhB,CACH,CACA,IACG,MAAM21B,QAAgBnvB,QAAQ4R,IAAI,CA3D3Bs+D,EAAYjwD,QAAQ,CACxBL,MAAOA,EACP1hB,KAAMA,EACN1E,UAAU,IAwDiC+2E,MAIxClyE,EAAS8wB,EAAQ,GAAG/0B,KAAK0d,OAAOqX,EAAQ,GAAG/0B,MAejD,OAZA7J,KAAK+zE,SAAWjmE,EAAOjE,MAAQiE,GAAU,IAGxC9N,KAAK+zE,UAAY,IAAI9vE,SAASg7C,IAC5BA,EAAI5wC,KAAOoxE,EAAU18C,YAAYkc,GACjCA,EAAIt8C,MAAQs8C,EAAI5wC,IAAI,IAIY,OAA/BrO,MAAMoG,UAAUc,aACjBlH,KAAK+B,GAAG6X,QAAQC,IAAIgmE,EAAW7/E,KAAK+zE,UAEhCyL,EAAQx/E,KAAK+zE,SAWvB,CAVE,MAAO5rE,GASN,MARAnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,sEACH1J,MAAO5F,KAAK8F,QACZupB,UAGHkwD,GAAe,EACTp3E,CACT,IACD,GAEX,CAEA23E,aAAazwD,GACV,MAAO,GAAGrvB,KAAKY,MAAMiT,KAAKC,UAAUub,IACvC,CAEAlqB,mBAAmBkqB,GAChB,MAAMwwD,EAAY7/E,KAAK8/E,aAAazwD,SAC9BrvB,KAAK+B,GAAG6X,QAAQC,IAAIgmE,EAAW,KACxC,CAEAhB,WAAWl8E,GACR,IAAKA,EAAO,MAAO,GACnB,IAAI8C,EAAO,GACX,GAAI0H,MAAMC,QAAQzK,GACfA,EAAMsB,SAAS+R,IACZ,GAAkB,iBAAPA,EACRvQ,EAAKnB,KAAK0R,EAAIpV,QACV,CACJ,IAAIw/E,EAAUpgF,KAAKqgF,eAAerqE,GAClCvQ,EAAKnB,KAAK87E,EAAQx/E,GACrB,UAGH,GAAoB,iBAAT+B,EACR8C,EAAKnB,KAAK3B,EAAM/B,QACZ,CACJ,IAAIw/E,EAAUpgF,KAAKqgF,eAAe19E,GAC9By9E,GAAWA,EAAQx/E,IACpB6E,EAAKnB,KAAK87E,EAAQx/E,GAExB,CAEH,OAAO6E,EAAK6I,MACf,CAEAwwE,UAAUn8E,GAEP,GAD4C,QAA1B3C,KAAKoG,SAASa,SACf,CACd,GAAKtE,EAEE,CACJ,IAAI29E,EAAa,GAKjB,OAJW39E,EAAMslB,MAAM,KAClBhkB,SAAS+R,IACXsqE,EAAWh8E,KAAKtE,KAAKqgF,eAAerqE,GAAK,IAErCsqE,CACV,CARG,MAAO,EASb,CAEG,OADWtgF,KAAKqgF,eAAe19E,EAGrC,CAEAw8E,sBAAsB75E,EAAQnD,EAASyD,EAAOsE,GAC3C,MAAMo1E,EAAYh6E,EAGgB,OAA/BtF,MAAMoG,UAAUc,aAChBo4E,EAAUrzE,aACTrG,EAAMq6E,mBAEPr6E,EAAMq6E,iBAAmBX,EAAUrzE,YAMtC,MAAMs0E,EAAiBp+E,GAASgzB,QAC3BhhB,OAAOsnC,OAAO,CAAC,EAAGt5C,EAAQgzB,SAC1B,CAAE5L,KAAM,MAAOpI,MAAO,IAE3B,GAAIhf,GAASq+E,sBAAuB,CACjC,MAAMC,EAA6B,CAACzzC,EAAYrnC,EAAQ+6E,EAAQ,KAC7D,MAAMC,EAAgBh7E,EAAOmD,QAAQuB,GAAMA,GAAGq2E,QAAUA,IAExD,MAAO,IACD1zC,EAAW7rB,MAAMhT,KAAK9D,IACtB,GAAIA,EAAEkf,KACH,MAAO,CACJA,KAAMlf,EAAEkf,KACRpI,MAAOs/D,EAA2Bp2E,EAAG1E,EAAQ+6E,EAAQ,IAG3D,MAAM/9E,EAAQg+E,EAAc73E,QACxB83E,GAAOA,EAAGv8E,MAAQgG,EAAEhG,KAAOu8E,EAAGj+E,QAAU0H,EAAE1H,QAC5C,GAEF,IAAKA,EAAO,OAAO0H,EAEnB,MAAMw2E,EAAel+E,GAAOm+E,aAAa7+E,OAAOrB,GAC3C+C,GAAGhB,EAAMm+E,YAAY7+E,OAAOrB,IAC5B,KAEL,IAAKigF,EACF,MAAMv4E,MACH,mDAGN,MAAMy4E,EAAcp+E,GAAOm+E,YACtBD,EAAa50E,YAAc,GAC3B,GAEL,IAAIgtE,EAAS,GAoBb,OAlBI8H,IAOK9H,EANFt2E,EAAMq+E,cAEJp7E,EAAMX,OACF8I,UAAUpL,EAAMm+E,YAAY7+E,OAAOg/E,aACnCZ,eAAeU,GAEVn7E,EAAMX,OACX8I,UAAUpL,EAAMm+E,YAAY7+E,OAAOg/E,aACnCZ,eAAeU,GAAap+E,EAAMq+E,cAKhCD,GAIR,CACJ18E,IAAKgG,EAAEhG,IACPorB,KAAM,SACN9sB,MAAOs2E,EACT,IAEN,EAGJsH,EAAep/D,MAAQs/D,EACpBF,EACAp+E,EAAQq+E,sBAEd,CAEA,MAAMU,EAAqBr3E,IACpBy1E,EAAU6B,YACXnhF,KAAKu1B,eAAe,cAAe2rD,GAGtClhF,KAAKohF,gBAAgB9B,EAAWz1E,EAAMjE,EAAOsE,GAAM,EAAK,EAS3D,OALAlK,KAAKu1B,eAAe,cAAe2rD,GAAmBvS,KACnD,cACAuS,GAGI,IAAIzxE,SAAQ,CAACC,EAASiH,KAC1B3W,KAAKk9E,WAAWqD,EAAgB,GAAI,GAAIjB,GAAW9qE,MAAM3K,IACtD7J,KAAKohF,gBAAgB9B,EAAWz1E,EAAMjE,EAAOsE,GAAM,GACnDwF,EAAQ7F,EAAK,GACd,GAER,CAEAu3E,gBAAgB9B,EAAWz1E,EAAMjE,EAAOsE,EAAMm3E,GAC1B,MAAb/B,GAAqBA,EAAU6B,cAEnC7B,EAAU9D,aACV8D,EAAU5E,UAAU5/D,WACpBwkE,EAAU5E,UAAUj2E,OAAO,OAAQoF,GAC/Bw3E,GACDrhF,KAAKshF,sBAAsBhC,EAAW15E,EAAOsE,GAE5Co1E,EAAUrzE,UAAYqzE,EAAUrzE,YACjCqzE,EAAUz6E,SAASy6E,EAAUrzE,YAIhCqzE,EAAU7D,eACb,CAEA6F,sBAAsBhC,EAAW15E,EAAOsE,GACrC,IAAIo1E,GAAW6B,aAGX7B,GAAW5E,QAAS,CACrB,IAAK4E,EAAUrE,SAAU,OACzB,IAAIvG,EAAQ4K,EAAUrE,WACtB,IAAKvG,EAAO,OACZ4K,EAAU5E,UAAU7wE,KAAK03E,MAAMC,IAC5B,GAAKA,EAAL,CACA,IAAIj/E,EAAOmyE,EAAMhnE,MAAM+zE,cACpB,gBAAkBD,EAAO5gF,GAAK,MAE5B2B,GACLA,EAAKm/E,aACF,UACA,GAAG97E,EAAMvB,eAAem9E,EAAO5gF,MAAMgF,EAAMhF,MAAMsJ,GAAMtJ,KAPvC,CAQlB,GAEP,CACH,CAEAy/E,eAAerqE,GACZ,IAAI5H,EACAjM,EAAUnC,KAAK+zE,UAAY,GAC/B,GAAI5xE,EAAQgE,OAAS,EAAG,CACrB,IAAK,IAAIkN,EAAI,EAAGA,EAAIlR,EAAQgE,OAAQkN,IAAK,CACtC,GACGrT,KAAKqH,YACLlF,EAAQkR,GAAGrT,KAAKqH,WAAWpC,OAAO8pB,OAAS/Y,EAC5C,CACC5H,EAAOjM,EAAQkR,GACf,KACH,CAAO,GACJrT,KAAKsH,aACLnF,EAAQkR,GAAGrT,KAAKsH,YAAYrC,OAAO8pB,OAAS/Y,EAC7C,CACC5H,EAAOjM,EAAQkR,GACf,KACH,CACG,GACGlR,EAAQkR,GAAGzS,IAAMoV,GACjB7T,EAAQkR,GAAG1Q,OAASqT,GACpB7T,EAAQkR,GAAGrT,KAAKqH,YAAYP,YAAc,KAAOkP,GACjD7T,EAAQkR,GAAGrT,KAAKsH,aAAaR,YAAc,KAAOkP,EACnD,CACC5H,EAAOjM,EAAQkR,GACf,KACH,CAEN,CACA,OAAOjF,CACV,CACG,MAAO,EAEb,CAEAnC,SAASmC,GAEN,GAD4C,QAA1BpO,KAAKoG,SAASa,SACf,CACd,IAAIxB,EAAO,GAOX,OANI2I,EAAKnC,YACImC,EAAKnC,WAAWgc,MAAM,KAC5BhkB,SAASypB,IACVjoB,EAAKnB,KAAK8J,EAAKssE,UAAUjuD,QAAQiB,GAAQ,IAGxCjoB,CACV,CACG,OAAI2I,EAAKnC,WACCmC,EAAKssE,UAAUjuD,QAAQre,EAAKnC,YAE5B,EAGhB,CAEApH,SAASuJ,EAAM2f,GACZ,IAAK3f,EAAM,OAGX,IAAI4H,EAAMhW,KAAKo4C,mBAAmBrqB,GAGlC,GAAI3f,EAAKssE,SAAqC,GAA1BtsE,EAAKssE,UAAUxpD,QAAc,CACf,QAA3BlxB,KAAKoG,SAASa,UAAuBkG,MAAMC,QAAQ4I,KACpDA,EAAM,CAACA,IAGV,MAAMkpE,EAAQ9wE,EAAKssE,UAEnBwE,EAAMz6E,OAAO,OAAQuR,GACrBkpE,EAAMx6E,SACT,CAEA0J,EAAKvJ,SACFsI,MAAMC,QAAQ4I,GACTA,EAAI7H,KAAK9D,GAAMA,EAAEzJ,IAAMyJ,EAAEwF,MAAQxF,IAAGiE,KAAK,KACzC0H,EAAIpV,IAAMoV,EAAInG,MAAQmG,EAEjC,CAWA2rE,yBAAyBj0D,GACtB,IAAI2qB,EAAe,GAEfxuC,EAAO6jB,EACPuY,EAAejmC,KAAK4G,eAsBxB,OApBIiD,GAAQo8B,IAEL94B,MAAMC,QAAQvD,GACfwuC,EAAexuC,EAAKsE,KAAI,SAAUkiB,GAO/B,OALIA,IACDA,EAAEhiB,KAAOgiB,EAAEhiB,MAAQ43B,EAAalD,YAAY1S,GAC5CA,EAAE1tB,MAAQ0tB,EAAEhiB,MAGRgiB,CACV,KACQxmB,EAAKjJ,IAAMiJ,EAAKgG,SACxBwoC,EAAexuC,GACFwE,KACVgqC,EAAahqC,MAAQ43B,EAAalD,YAAYsV,GACjDA,EAAa11C,MAAQ01C,EAAahqC,OAIjCgqC,CACV,CAEA6wB,eACGppE,MAAMopE,eAEUlpE,KAAK+rB,WAElB/rB,KAAK4tE,gBACF,kCAAkC5tE,KAAKoG,SAAS6B,cAChD,CACGA,WAAYjI,KAAKoG,SAAS6B,aAKrBjI,KAAK4G,gBAEhB5G,KAAK4tE,gBACF,mCAAmC5tE,KAAKoG,SAASO,cACjD,CACGA,WAAY3G,KAAKoG,SAASO,YAItC,oBCpxBH,MAAMy0C,EAAkB,EAAQ,OAEhC37C,EAAOC,QAAU,cAA0B07C,EACxCz7C,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAwqE,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAuClC,OAlCAF,EAAOqD,OAAS,OAGhBrD,EAAO2jD,UAAW,EAOlB3jD,EAAOsgE,SAAYrjD,GACZA,EAAIo/D,OAAep/D,EAAIlf,KAAK8G,YAEzB9G,KAAKsgB,OAAOpB,GAGtBjd,EAAOqe,OAAU+P,IACd,MAAMtC,EAAU,CAAC,EAGjB,OAFAA,EAAQ/tB,KAAK8G,YAAcupB,EAEpBrwB,KAAKsgB,OAAOyN,EAAQ,EAG9B9rB,EAAO48E,WAAcxuD,GAGT,IAALA,GAAgB,MAALA,EACL,GAIHrwB,KAAK+B,GAAGof,MAAMhB,OAAOkQ,GAGxBpuB,CACV,CAWAw8D,gBAGG,MAAMmjB,EAAuB9hF,MAAM2+D,cAAc,cASjD,OANAmjB,EAAqB73C,OAAS,KACpB,CACJ1lC,IAAK,eAIJu9E,CACV,CAEApmB,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,CAEArjC,aAAazB,EAAYwB,GACtB,OAAOx3C,MAAM8c,KAAK87B,UAAU5C,EAArBh2C,CAAiCw3C,EAC3C,CAGA36B,OAAOyN,GACJ,IAAK/U,OAAO6oE,YAAa,OAAO/hF,MAAMwgB,OAAOyN,GAC7C,MAAMsC,EAAIrwB,KAAKs4C,UAAUvqB,GAEzB,GAAS,IAALsC,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMyqB,EAAU96C,KAAK+B,GAAGof,MAAMhB,OAAOkQ,GAOrC,OALmBrwB,KAAKoG,SAASqzC,YAKf,EACRh2C,MAAM0yE,KAAK2L,kBAAkBhnC,GAE7Br3C,MAAM0yE,KAAKC,cAAct7B,EAEtC,oBC/HH,MAAMinC,EAAsB,EAAQ,MAEpCtiF,EAAOC,QAAU,cAA8BqiF,EAC5CpiF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAmBA8qE,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAyClC,OAtCgC,GAA5BnC,KAAKoG,SAASqzC,WACfx3C,EAAOqD,OAAS,OAEhBrD,EAAOqD,OAAS,WAInBrD,EAAO2jD,UAAW,EAOlB3jD,EAAOsgE,SAAYrjD,GACZA,EAAIo/D,OAAep/D,EAAIlf,KAAK8G,YAEzB9G,KAAKsgB,OAAOpB,GAGtBjd,EAAOqe,OAAU+P,IACd,MAAMtC,EAAU,CAAC,EAGjB,OAFAA,EAAQ/tB,KAAK8G,YAAcupB,EAEpBrwB,KAAKsgB,OAAOyN,EAAQ,EAG9B9rB,EAAO48E,WAAcxuD,GAGT,IAALA,GAAgB,MAALA,EACL,GAIHrwB,KAAK+B,GAAGof,MAAMhB,OAAOkQ,GAGxBpuB,CACV,CAWAw8D,gBAGG,MAAMmjB,EAAuB9hF,MAAM2+D,cAAc,cASjD,OANAmjB,EAAqB73C,OAAS,KACpB,CACJ1lC,IAAK,eAIJu9E,CACV,CAEApmB,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,CAGAj+D,OAAOyN,GACJ,IAAK/U,OAAO6oE,YAAa,OAAO/hF,MAAMwgB,OAAOyN,GAC7C,MAAMsC,EAAIrwB,KAAKs4C,UAAUvqB,GAEzB,GAAS,IAALsC,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMyqB,EAAU96C,KAAK+B,GAAGof,MAAMhB,OAAOkQ,GAE/BopB,EAAaz5C,KAAKoG,SAASqzC,WAG3BuoC,EAAYv+E,MAAM8c,KAAK87B,UAAUr8C,KAAKm8C,iBAE5C,OAAI1C,GAAc,EACR,GAAGh2C,MAAM0yE,KAAK2L,kBAAkBhnC,MAAYknC,EAChDlnC,KAGI,GAAGr3C,MAAM0yE,KAAKC,cAAct7B,MAAYknC,EAAUlnC,IAE/D,oBC/HH,MAAMmnC,EAAmB,EAAQ,MAEjCxiF,EAAOC,QAAU,cAA2BuiF,EAsBzClS,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAIlC,OAFAF,EAAOqD,OAAS,OAETrD,CACV,CAWAw8D,gBAGG,MAAMmjB,EAAuB9hF,MAAM2+D,gBAYnC,OATAmjB,EAAqB73C,OAAS,KACpB,CACJ1lC,IAAK,UACL+B,SAAU,CACPxE,KAAM,YAKRggF,CACV,CAEApmB,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,oBCrEH,MAAM2D,EAAkB,EAAQ,OAE1BniF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,cAA0BwiF,EACxCviF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAMAJ,gBACG,OAAO,IAAIsK,SAAQ,CAACC,EAASiH,KAErB3W,KAAKY,GAMV6C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,eACTuR,QAASvR,EAAE,mDAAoD,CAC5DC,KAAKoB,QAERyQ,SAAU1M,MAAO2I,IAGd9N,KAAKoG,SAASs2C,mBAAqB5uC,EAAS,EAAI,EAEhD,UACS9N,KAAK4H,OAGXnE,MAAM0N,MAAM,CACTC,MAAO,aACP/C,KAAM,8DAIHvO,MAAM8U,UAEZlF,GAGH,CAFE,MAAOvH,GACNwO,EAAOxO,EACV,KA9BHuH,GAgCD,GAER,CAOAqgE,aAAa5tE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAElCF,EAAOqD,QAAS,EAEhB,MAAMsgD,EAAWzjD,EAAQyjD,SAmBzB,OAhBA3jD,EAAOsgE,SAAYzqD,GACZA,EAAIwmE,OAAet+E,KAAKs4C,UAAUxgC,GAEtB,CACb,wDACA,0CACA,+BACA9X,KAAKmiF,aAAarqE,EAAK8tC,GACvB,SACA,SACA,UACDt3C,KAAK,IAKHrM,CACV,CAUAwuE,cAAcvxD,EAAKtf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAEHJ,EAAUA,GAAW,CAAC,EAEtB,IAAIigF,EAAY,GACZC,EAAc,EAEdriF,KAAKoG,SAAS02C,eAAiB98C,KAAKoG,SAASw2C,WAC9CwlC,EAAYpiF,KAAKoG,SAASw2C,SAAS30B,MAAM,MAGxCjoB,KAAKoG,SAASy2C,eAAiB78C,KAAKoG,SAASu2C,WAC9C0lC,EAAcriF,KAAKoG,SAASu2C,UAM/B,MAAM2lC,EAAkB//E,EAAKk/E,cAAc,mBAC3C,GAAIa,EAAiB,CAClBA,EAAgB73C,UAAY,GAM5B,MAAM83C,EAAiB9+E,MAAMhD,GAAG,CAC7BC,KAAM,WACN8hF,UAAWF,EAEX/f,SAAUviE,KAAKmiF,aAAajjE,EAAK/c,EAAQyjD,UAEzCjkD,YAAY,EACZX,MAAO,IACPD,OAAQ,KAQX,GANA0C,MAAMC,OAAO6+E,EAAgB9+E,MAAMG,cAM9BzB,EAAQyjD,SAAU,CACpB,MAAM68B,EAAUH,EAAgBb,cAAc,iBAG9C,YAFIgB,IAASA,EAAQpL,MAAMqL,QAAU,QAGxC,CAEA,MAAMpyE,EAAMtQ,KAAK2iF,WAAU,GAErBC,EAAWn/E,MAAMhD,GAAG,CACvBC,KAAM,WACNmiF,SAAS,EACTC,OAAQxyE,EACRyyE,UAAW,OACXC,UAAU,EACV5gF,GAAI,CAED6gF,gBAAiB,SAAU70E,GACxB7L,EAAK2gF,UAAUroE,OAAO,iBACtBtY,EAAK2gF,UAAUroE,OAAO,sBAGtB,MAAMsoE,EAAkBf,EACxB,GAAIe,GAAsC,IAAnBA,EAAuB,CAC3C,MAAMvhF,EAAOwM,EAAKxM,KAAKuW,cACvB,IAAsC,GAAlCgrE,EAAgB91E,QAAQzL,GAMzB,OALA6B,MAAM6N,QACHvR,EAAE,iCAAkC,CACjCojF,EAAgB70E,KAAK,UAGpB,CAEb,CAIA,GAAI+zE,EAAc,EAAG,CAClB,MAAMe,EAAgC,IAAdf,EACxB,GAAIj0E,EAAKi1E,KAAOD,EAIb,OAHA3/E,MAAM6N,QACHvR,EAAE,6BAA8B,CAACsiF,MAE7B,CAEb,CAGAE,EAAel9E,aAAa,CACzBzD,KAAM,OACN0hF,MAAO,KAEb,EAGAC,aAAcp+E,MAAOiJ,EAAMoJ,KACxB+qE,EAAe56E,eAGf,MAAMhC,EAAS,CAAC,EAMhB,GALAA,EAAO3F,KAAK8G,YAAc,CAAC,EAC3BnB,EAAO3F,KAAK8G,YAAY+I,KAAO2H,EAAS3N,KAAKgG,KAC7ClK,EAAO3F,KAAK8G,YAAYi2C,SAAW3uC,EAAKjH,KAGpC+X,EAAIte,GACL,UACSZ,KAAKiF,OAAO+C,QAAQ+mE,OAAO7vD,EAAIte,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAMouB,YACtBhtB,GAAGpB,GAAMouB,WAAWzR,EAAIte,GAAI+E,EAWlC,CAVE,MAAOwC,GACN5F,EAAK2gF,UAAUhiE,IAAI,iBACnB3e,EAAK2gF,UAAUhiE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,wDACH4P,IAAKA,EACLvZ,OAAQA,GAEd,CAIH3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAAO,EAIlC69E,kBAAmB,CAACp1E,EAAMoJ,KACvBxX,KAAK+B,GAAGqG,OAAOC,UAAU,IAAIC,MAAM,sBAAuB,CACvDgJ,QAAS,qBACTkG,aAEH+qE,EAAe56E,cAAc,KAItCi7E,EAASa,YAAYlB,EAAe70E,OAGpCnL,EAAKmhF,QAAoB,WAAId,EAAS3gF,OAAOrB,GAG7C2B,EAAK0W,iBAAiB,SAAU5O,IACzBA,EAAE28C,OAAOiD,UAAU58C,QAAQ,iBAAmB,IAC/CrN,KAAK2jF,YAAa,EACrB,GAEN,CACH,CAUAxF,WAAWj/D,EAAKtf,EAAK2C,GAClB,GAAuB,GAAnBvC,KAAK2jF,kBAEC3jF,KAAK2jF,WAGZlgF,MAAMmO,QAAQ,CACXR,MAAO,GACPE,QAASvR,EAAE,8CACX8R,SAAU1M,MAAO2I,IAEd,KADsBA,EACH,CAEhB,MAAMnI,EAAS,CAAC,EAGhB,GAFAA,EAAO3F,KAAK8G,YAAc,GAEtBoY,EAAIte,GACL,UACSZ,KAAKiF,OAAO+C,QAAQ+mE,OAAO7vD,EAAIte,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAMouB,YACtBhtB,GAAGpB,GAAMouB,WAAWzR,EAAIte,GAAI+E,EAUlC,CATE,MAAOwC,GACN5F,EAAK2gF,UAAUhiE,IAAI,iBACnB3e,EAAK2gF,UAAUhiE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT4N,IAAKA,EACLvZ,OAAQA,GAEd,MAIA3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAE9B,SAGF,CACJ,MAAMooB,EAAU/tB,KAAKs4C,UAAUp5B,GAC/B,IAAK6O,IAAYA,EAAQle,KAAM,CAC5B,MAAM+zE,EAAarhF,EAAKmhF,QAAoB,WACzCd,EAAWj/E,GAAGigF,GAEbhB,GAAYA,EAASiB,YACtBjB,EAASiB,WAAW,CAAEC,MAAO5kE,EAAIte,IACvC,CACH,CAEA,OAAO,CACV,CAWA69D,gBACG,OAAO3+D,MAAM2+D,cAAc,cAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,iBAIJk6E,CACV,CAIA4D,aAAarqE,EAAK8tC,GACf,IAAIm+B,EAAc,GACdC,EAAc,gBACdC,EAAU,GAEVthF,EAAQ,GACRwE,EAAO,GAEX,MAAM4mB,EAAU/tB,KAAKs4C,UAAUxgC,GAyB/B,OAxBIiW,IACDprB,EAAQorB,EAAQle,KAChB1I,EAAO4mB,EAAQgvB,UAGdp6C,GAASwE,IACV48E,EAAc,gBACdC,EAAc,GACdC,EAAU,SAAWthF,GAGX,CACV,mPAAmPohF,kHAChPn+B,EAAW,QAAQ7lD,EAAE,iCAAmC,WAE3D,oHAAoHkkF,MACjH98E,GAAQ,SAERy+C,EACK,aAAao+B,qGACb,YAET11E,KAAK,GAGV,CAEArC,SAASmC,EAAM2f,GACZ,MAAM8kD,EAAOzkE,EAAKV,MAAM+zE,cAAc,yBAChCyC,EAAWrR,EAAK4O,cAAc,KAEpC,MAAO,CACJ5xE,KAAMgjE,EAAKsR,aAAa,aACxBpnC,SAAUmnC,EAASz5C,UAEzB,CAEA5lC,SAASuJ,EAAM2f,GACZ,IAAK3f,EAAM,OAEX,MAAMq0E,EAAUr0E,EAAKV,MACrB,IAAK+0E,EAAS,OAEd,IAAIzsE,EAAM,KACN+X,IACD/X,EAAMhW,KAAKs4C,UAAUvqB,IAQxB,MAAMq2D,EAAW3B,EAAQhB,cAAc,yBACnC2C,IAAUA,EAAS/M,MAAMqL,QAAU1sE,GAAOA,EAAInG,KAAO,OAAS,SAElE,MAAMgjE,EAAO4P,EAAQhB,cAAc,yBACnC,GAAI5O,EAAM,CACP,MAAMwR,EAAiBxR,EAAK4O,cAAc,oBACtC4C,IACDA,EAAehN,MAAMqL,QAAU1sE,GAAOA,EAAInG,KAAO,QAAU,QAE9DgjE,EAAKwE,MAAMqL,QAAU1sE,GAAOA,EAAInG,KAAO,QAAU,OAC7CmG,GAAOA,EAAInG,KAAMgjE,EAAK6O,aAAa,YAAa1rE,EAAInG,MACnDgjE,EAAKyR,gBAAgB,aAE1B,MAAMJ,EAAWrR,EAAK4O,cAAc,KAC9BwC,EAAU,UAAYjuE,EAAMA,EAAInG,KAAO,IAC7Cq0E,EAASK,KAAON,EAChBC,EAASz5C,UAAYz0B,EAAMA,EAAI+mC,SAAW,EAC7C,CACH,CAYA4lC,UAAU6B,GAAU,GACjB,MAAO,gBAAgBxkF,KAAKiF,OAAOrE,MAAMZ,KAAKY,MAAM4jF,EAAU,IAAM,KACvE,CAQAC,QAAQ7jF,GACL,MAAO,SAASA,GACnB,oBC3cH,MAAM8jF,EAAqB,EAAQ,OAEnCjlF,EAAOC,QAAU,cAA6BglF,EAsB3C3U,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAUlC,OARAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOsgE,SAAYx0C,GACZA,EAAQuwD,OAAevwD,EAAQ/tB,KAAK8G,YAEjC9G,KAAKsgB,OAAOyN,GAGf9rB,CACV,CAWAw8D,gBAEG,OAAO3+D,MAAM2+D,cAAc,gBAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,oBC9DH,MAAMoG,EAAmB,EAAQ,OAE3B5kF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,cAA2BilF,EACzChlF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EACjB,CAUAE,gBACG,OAAO,IAAIsK,SAAQ,CAACC,EAASiH,KAEtB3W,KAAKY,GAEN6C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,gBACTuR,QAASvR,EAAE,oDAAqD,CAC7DC,KAAKoB,QAERyQ,SAAU1M,MAAO2I,IAGd9N,KAAKoG,SAASs2C,mBAAqB5uC,EAAS,EAAI,EAEhD,UACS9N,KAAK4H,OAGXnE,MAAM0N,MAAM,CACTC,MAAO,aACP/C,KAAM,sFAGHvO,MAAM8U,UAEZlF,GAGH,CAFE,MAAOvH,GACNwO,EAAOxO,EACV,KAINuH,GACH,GAEN,CAMAk1E,kBAAkB9sE,EAAK+sE,GAIpB,OAAIA,EACM,GAAG7kF,KAAK8G,WAAWkM,QAAQ,KAAM,QAAQ6xE,UAEzC,GAAG7kF,KAAK8G,WAAWkM,QAAQ,KAAM,QAAQ8E,EAAIlX,UAE1D,CAGAmvE,aAAa5tE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAC5ByD,EAAQ5F,KAEdiC,EAAOqD,QAAS,EAGhB,IAAIw/E,EAAkB,OAClBtmC,EAAc,OACdx9C,EAAQ,OACR+jF,EAAiB,OACrB,GAAIn/E,EAAMQ,SAASi4C,SAAU,CAC1Bp8C,EAAOjB,MAAQ4E,EAAMQ,SAASk4C,YAAc,IAC5C,MAAM0mC,EACHp/E,EAAMQ,SAASm4C,WAAa34C,EAAMQ,SAASo4C,YACtC54C,EAAMQ,SAASo4C,YAAc,GAC7B,GACRsmC,EAAkB,GAAGE,MACrBhkF,EAAQ,GAAG4E,EAAMQ,SAASk4C,YAAc,QACxCE,EACG54C,EAAMQ,SAASm4C,WAAa34C,EAAMQ,SAASo4C,YACtC54C,EAAMQ,SAASo4C,YACf,GACRA,EAAc,GAAGA,MACjBumC,EACGn/E,EAAMQ,SAASm4C,WAAa34C,EAAMQ,SAASo4C,YACtC54C,EAAMQ,SAASo4C,YACf,GACRumC,EAAiB,GAAGA,KACvB,MAAW5iF,EAAQnB,QAChBiB,EAAOjB,MAAQmB,EAAQnB,OAAS,IAChCA,EAAQ,GAAGmB,EAAQnB,OAAS,QAC5Bw9C,EAAcr8C,EAAQnB,MACtBw9C,EAAc,GAAGA,MACjBumC,EAAiB5iF,EAAQnB,MACzB+jF,EAAiB,GAAGA,OAGpBn/E,EAAMQ,SAASm4C,WACf34C,EAAMQ,SAASo4C,aACe,OAA9B54C,EAAMQ,SAASo4C,cAEfv8C,EAAOlB,OAAS6E,EAAMQ,SAASo4C,aAAe,EAC9CsmC,EAAkBx/D,SAASrjB,EAAOlB,QAAU,GAC5C+jF,EAAkB,GAAGA,MACrBtmC,EAAcl5B,SAASrjB,EAAOlB,QAC9By9C,EAAc,GAAGA,MACjBumC,EAAiBz/D,SAASrjB,EAAOlB,QACjCgkF,EAAiB,GAAGA,OAGvB,MAAMn/B,EAAWzjD,EAAQyjD,SA4BzB,OAxBA3jD,EAAOsgE,SAAYzqD,GACZA,EAAIwmE,OAAexmE,EAAI9X,KAAK8G,YAMjB,CACZ,+DAL0B9F,cAAkB8jF,MAM5C,yDAJ0B9jF,cAAkBw9C,MAK5C,+BACAx+C,KAAKilF,cAAcntE,EAAK,CACrB8tC,SAAUA,EACV7kD,OAAQgkF,EACR/jF,MAAOA,IAEV,SACA,SACA,UACDsN,KAAK,IAKHrM,CACV,CAcAwuE,cAAcvxD,EAAKtf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAEH,MAAMxC,EAAIH,EAAIK,MAEdkC,EAAUA,GAAW,CAAC,EAEPvC,EAAIQ,OAAOJ,KAAK4kF,kBAAkB1lE,EAAK/c,EAAQ0iF,SAA9D,MAKMvC,EAAkB//E,EAAKk/E,cAAc,oBAC3C,GAAIa,EAAiB,CAClBA,EAAgB73C,UAAY,GAG5B,IAAIy6C,EAAY,EACZllF,KAAKoG,SAASm4C,YACf2mC,EAAY5/D,SAAStlB,KAAKoG,SAASo4C,cAAgB0mC,GAGtD,IAAIC,EAAW,EACXnlF,KAAKoG,SAASi4C,WACf8mC,EAAW7/D,SAAStlB,KAAKoG,SAASk4C,aAAe6mC,GAGhDhjF,EAAQpB,SAAQmkF,EAAY/iF,EAAQpB,QAEpCoB,EAAQnB,QAAOmkF,EAAWhjF,EAAQnB,OAMtC,MAAMuhF,EAAiB9+E,MAAMhD,GAAG,CAC7BC,KAAM,WACNQ,IAAK,kBAELshF,UAAWF,EAEX/f,SAAUviE,KAAKilF,cAAc/lE,EAAK,CAC/B0mC,SAAUzjD,EAAQyjD,SAClB7kD,OAAQmkF,EAAYA,EAAY,KAAO,EACvClkF,MAAOmkF,EAAWA,EAAW,KAAO,IAGvCxjF,YAAY,EACZZ,OAAQmkF,EACRlkF,MAAOmkF,IAQV,GANA1hF,MAAMC,OAAO6+E,EAAgB9+E,MAAMG,cAM9BzB,EAAQyjD,SAAU,CACpB,MAAM68B,EAAUH,EAAgBb,cAAc,iBAG9C,YAFIgB,IAASA,EAAQpL,MAAMqL,QAAU,QAGxC,CAEA,MAAMpyE,EAAMtQ,KAAK2iF,YAEXC,EAAWn/E,MAAMhD,GAAG,CACvBC,KAAM,WAENmiF,SAAS,EACTC,OAAQxyE,EACRyyE,UAAW,OACXC,UAAU,EAOV5gF,GAAI,CAED6gF,gBAAiB,SAAU70E,GACxB7L,EAAK2gF,UAAUroE,OAAO,iBACtBtY,EAAK2gF,UAAUroE,OAAO,sBAGtB,MAAMsoE,EAAkB,CACrB,MACA,OACA,MACA,MACA,MACA,QAEGvhF,EAAOwM,EAAKxM,KAAKuW,cACvB,IAAsC,GAAlCgrE,EAAgB91E,QAAQzL,GAMzB,OALA6B,MAAM6N,QACHvR,EAAE,kCAAmC,CAClCojF,EAAgB70E,KAAK,UAGpB,EAIVi0E,EAAel9E,aAAa,CACzBzD,KAAM,OACN0hF,MAAO,KAEb,EAGAC,aAAcp+E,MAAOiJ,EAAMoJ,KACxB+qE,EAAe56E,eACf3H,KAAKolF,UAAU5tE,EAAS3N,KAAKgG,KAAMtN,GAInC,MAAMoD,EAAS,CAAC,EAIhB,GAHAA,EAAO3F,KAAK8G,YAAc0Q,EAAS3N,KAAKgG,KAGpCqP,EAAIte,GACL,IAIG,SAHMZ,KAAKiF,OAAO+C,QAAQ+mE,OAAO7vD,EAAIte,GAAI+E,GAItChC,GAAGpB,IACHoB,GAAGpB,GAAMkqB,SACT9oB,GAAGpB,GAAMkqB,QAAQvN,EAAIte,IAErB+C,GAAGpB,GAAMouB,WAAWzR,EAAIte,GAAI+E,OACxB,CAEJ,MAAM0/E,EACH96C,SAASk3C,cAAc,iBACtB99E,GAAG0hF,IAAc1hF,GAAG0hF,GAAW54D,QAAQvN,EAAIte,KAC5C+C,GAAG0hF,GAAW10D,WAAWzR,EAAIte,GAAI+E,EACvC,CAYH,CAXE,MAAOwC,GACN5F,EAAK2gF,UAAUhiE,IAAI,iBACnB3e,EAAK2gF,UAAUhiE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,wEACH1J,MAAO5F,KACPkf,MACAvZ,UAEN,CAIH3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAAO,EAIlC69E,kBAAmB,CAACp1E,EAAMoJ,KACvBxX,KAAK+B,GAAGqG,OAAOC,UAAU,IAAIC,MAAM,yBAA0B,CAC1DgH,QAAS,+CACT1J,MAAO5F,KACPwX,aAEH+qE,EAAe56E,cAAc,KAItCi7E,EAASa,YAAYlB,EAAe70E,OAGpCnL,EAAKmhF,QAAoB,WAAId,EAAS3gF,OAAOrB,GAIvB,cAAlB2B,EAAK0nD,WACN1nD,EAAK0W,iBAAiB,SAAU5O,IACzBA,EAAE28C,OAAOiD,UAAU58C,QAAQ,iBAAmB,IAC/CrN,KAAKslF,aAAc,EACtB,GAGT,CACH,CAUAnH,WAAWj/D,EAAKtf,EAAK2C,EAAM3B,EAAIw0B,GAC5B,GACIA,GAAOA,EAAI4xB,OAAOiD,UAAU58C,QAAQ,iBAAmB,GACxDrN,KAAKslF,mBAEEtlF,KAAKslF,YACPpmE,EAAIqmE,qBACNrmE,EAAIqmE,mBAAqB,IAE5BrmE,EAAIqmE,mBAAmBvlF,KAAK8G,aAAc,EAG1CrD,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,+CACT8R,SAAU1M,MAAO2I,IAEd,KADsBA,EACH,CAEhB,MAAMnI,EAAS,CAAC,EAChBA,EAAO3F,KAAK8G,YAAc,GAE1B,UACS9G,KAAKiF,OAAO+C,QAAQ+mE,OAAO7vD,EAAIte,GAAI+E,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAMouB,YACtBhtB,GAAGpB,GAAMouB,WAAWzR,EAAIte,GAAI+E,GAG/B3F,KAAK6E,SAASlB,GAAGpB,GAAOoD,EAY3B,CAXE,MAAOwC,GACN5F,EAAK2gF,UAAUhiE,IAAI,iBACnB3e,EAAK2gF,UAAUhiE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,uDACH1J,MAAO5F,KACPkf,IAAKA,EACLvZ,OAAQA,GAEd,CACH,SAGF,CACJ,MAAMi+E,EAAarhF,EAAKmhF,QAAoB,WACzCd,EAAWj/E,GAAGigF,GAEbhB,GAAYA,EAASiB,YACtBjB,EAASiB,WAAW,CAAEC,MAAO5kE,EAAIte,IACvC,CAEA,OAAO,CACV,CAWA69D,gBACG,OAAO3+D,MAAM2+D,cAAc,cAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,gBAIJk6E,CACV,CAEA0G,cAAcntE,EAAK3V,IAChBA,EAAUA,GAAW,CAAC,GACdpB,OAASoB,EAAQpB,QAAU,OACnCoB,EAAQnB,MAAQmB,EAAQnB,OAAS,OAGjC,IAAI+iF,EAAc,GACdyB,EAAe,gBACf9uB,EAAW,GAEX/zD,EAAQ,GACR8iF,GAAuB,EACvB3tE,EAAI9X,KAAK8G,cACVnE,EAAQmV,EAAI9X,KAAK8G,aAEhBgR,EAAIytE,oBACDztE,EAAIytE,mBAAmBvlF,KAAK8G,cAC7B2+E,EAAuB3tE,EAAIytE,mBAAmBvlF,KAAK8G,aAIrDnE,GACDohF,EAAc,gBACdyB,EAAe,GACf9uB,EAAW,yBAAyB12D,KAAKqnE,SAAS1kE,SAE9C3C,KAAKoG,SAASq4C,kBAAoBgnC,IACnC1B,EAAc,gBACdyB,EAAe,GACf9uB,EAAW,yBAAyB12D,KAAKqnE,SACtCrnE,KAAKoG,SAASs4C,uBAKvB,IAAIgnC,EAAO,CACR,6CAA6C3B,6DACIyB,WAAsBrjF,EAAQnB,iBAAiBmB,EAAQpB,WAAW21D,qBACpHpoD,KAAK,IAeP,OAbAo3E,EAAOA,EAAK1yE,QACT,SACA7Q,EAAQyjD,SACH,QAAQ7lD,EAAE,uCACV,IAER2lF,EAAOA,EAAK1yE,QACT,WACA7Q,EAAQyjD,SACH,aAAa4/B,qGACb,IAGDE,CACV,CAEAN,UAAUv1E,EAAMtN,GACb,MAAM+/E,EAAkB//E,EAAKk/E,cAAc,oBAC3C,GAAIa,EAAiB,CAClBA,EAAgBb,cAAc,0BAA0BpK,MAAMqL,QAC3D,OACH,MAAMrsB,EAAQisB,EAAgBb,cAAc,2BAC5CprB,EAAMghB,MAAMqL,QAAU,GACtBrsB,EAAMghB,MAAMsO,gBAAkB,QAAQ3lF,KAAKqnE,SAASx3D,OACpDwmD,EAAMqrB,aAAa,aAAc7xE,EACpC,CACH,CAEA5D,SAASmC,EAAM2f,GAEZ,OADc3f,EAAKV,MAAM+zE,cAAc,2BAC1B0C,aAAa,aAC7B,CAEAt/E,SAASuJ,EAAM2f,GACZ,IAAK3f,EAAM,OAEX,MAAMq0E,EAAUr0E,EAAKV,MACrB,IAAK+0E,EAAS,OAEd,IAAIzsE,EAAM,KACN+X,IACD/X,EAAMhW,KAAKs4C,UAAUvqB,IAQxB,MAAM63D,EAAYnD,EAAQhB,cAAc,0BACpCmE,IAAWA,EAAUvO,MAAMqL,QAAU1sE,EAAM,OAAS,IAExD,MAAMqgD,EAAQosB,EAAQhB,cAAc,2BACpC,GAAIprB,EAAO,CACR,MAAMwvB,EAAkBxvB,EAAMorB,cAAc,oBACxCoE,IACDA,EAAgBxO,MAAMqL,QAAU1sE,EAAM,QAAU,QAEnDqgD,EAAMghB,MAAMqL,QAAU1sE,EAAM,QAAU,OAElCA,GACDqgD,EAAMghB,MAAMsO,gBAAkB,QAAQ3lF,KAAKqnE,SAASrxD,OACpDqgD,EAAMqrB,aAAa,aAAc1rE,IAEjCqgD,EAAMiuB,gBAAgB,aAE5B,CACH,CAaAwB,SAAS/3D,GACN,OAAO,IAAIte,SAAQ,CAACC,EAASiH,KAC1B,IAAKoX,EAAQ/tB,KAAK8G,YAAa,OAAO4I,EAAQ,MAE9C,MAAMq2E,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIG,QAAU,SAAU/9E,GACrBwO,EAAOxO,EACV,EACA49E,EAAI5S,OAAS,WACV,MAAMgT,EAAS57C,SAASC,cAAc,UACtC27C,EAAOnlF,MAAQ+kF,EAAI/kF,MACnBmlF,EAAOplF,OAASglF,EAAIhlF,OACRolF,EAAOC,WAAW,MAC1BC,UAAUN,EAAK,EAAG,GACtB,MACMO,EAAY,CACfz8E,KAFas8E,EAAOI,YAGpBvlF,MAAO+kF,EAAI/kF,MACXD,OAAQglF,EAAIhlF,QAEf2O,EAAQ42E,EACX,EAEAP,EAAIS,IAAMxmF,KAAKqnE,SAASt5C,EAAQ/tB,KAAK8G,YAAY,GAEvD,CASAugE,SAASzmE,GACN,MAAO,SAASA,GACnB,CAYA+hF,UAAU6B,GAAU,GACjB,MAAO,gBAAgBxkF,KAAKiF,OAAOrE,MAAMZ,KAAKY,MAAM4jF,EAAU,IAAM,KACvE,oBCvmBH,MAAMiC,EAAkB,EAAQ,OAEhChnF,EAAOC,QAAU,cAA0B+mF,EAUxC1W,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAUlC,OAPAF,EAAOqD,OAAS,OAChBrD,EAAOf,IAAM,WAIbe,EAAOsgE,SAAW,IAAM,GAEjBtgE,CACV,CAWAw8D,gBAEG,MAAMmjB,EAAuB9hF,MAAM2+D,gBAYnC,OATAmjB,EAAqB73C,OAAS,KACpB,CACJ1lC,IAAK,OACL+B,SAAU,CACPxE,KAAM,YAKRggF,CACV,CAEApmB,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,CAEA15E,SAASuJ,EAAM2f,GACZjuB,MAAM+E,SAASuJ,EAAM2f,EAAS,IAC9B3f,EAAKnM,OAAOU,MAAQorB,EAAQ/tB,KAAK8G,WACpC,oBCnEH,MAAM4/E,EAAkB,EAAQ,OAIhCjnF,EAAOC,QAAU,cAA0BgnF,EACxC/mF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAGjB,CAMA2C,OACG,OAAO9H,MAAM8H,OAAO4M,MAAK,KAEtB,GAAIxU,KAAKg/C,iBAAiB74C,OAAQ,CAC/B,MAAM6B,EAAQhI,KAAKiF,OAAO+C,QAE1B,GAAgC,GAA5BhI,KAAKoG,SAASy4C,WAGf,OAAO,IAAIpvC,SAAQ,CAACC,EAASiH,KAC1B,IAAIgwE,EAAU,EACVC,EAAU,EAEd5+E,EACI0nB,QAAQ,CAAC,GACTlb,MAAMvK,KACJA,EAAOA,EAAKJ,MAAQI,GAGfhG,SAASmK,IACX,GAAIjB,MAAMC,QAAQgB,EAAKpO,KAAK8G,aAAc,CAEvC,IAAI+/E,EAAkBz4E,EACnBpO,KAAK8G,YACNgC,QAAQuK,IAEoC,GAAxCrT,KAAKg/C,iBAAiB3xC,QAAQgG,EAAEzS,MAItC,GACGimF,EAAgB1gF,QAChBiI,EAAKpO,KAAK8G,YAAYX,OACvB,CACCygF,IAG8B,GAA1BC,EAAgB1gF,SACjB0gF,EAAkB,IAErB,MAAMlkF,EAAQ,CAAC,EACfA,EAAM3C,KAAK8G,YAAc+/E,EACzB7+E,EAAM+mE,OAAO3gE,EAAKxN,GAAI+B,GAAO6R,MAAK,KAG/BmyE,IACIA,GAAWC,GACZl3E,GACH,GAEN,CACH,KAEY,GAAXk3E,GACDl3E,GACH,IAEF+E,MAAMkC,EAAO,IAEhB,CAEJ,MAAM0Y,EAAQ,CAAC,EAEf,OADAA,EAAMrvB,KAAK8G,YAAc9G,KAAKg/C,iBACvB,IAAIvvC,SAAQ,CAACC,EAASiH,KAC1B,IAAIgwE,EAAU,EAEd3+E,EACI0nB,QAAQL,GACR7a,MAAMvK,IAEJA,EAAOA,EAAKJ,MAAQI,EAMpB,MAAMtH,EAAQ,CAAC,EACfA,EAAM3C,KAAK8G,YAAc,GAEzBmD,EAAKhG,SAASmK,IACXpG,EAAM+mE,OAAO3gE,EAAKxN,GAAI+B,GAAO6R,MAAK,KAC/BmyE,IACIA,GAAW18E,EAAK9D,QACjBuJ,GACH,GACD,IAEc,GAAfzF,EAAK9D,QACNuJ,GACH,IAEF+E,MAAMkC,EAAO,GAEvB,CACH,IAEN,CAEApR,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAwqE,aAAa5tE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GA4FlC,OA3FcnC,KACI+B,GAAGi4B,KAIjB73B,EAAQyjD,UArIR,KAAIhwC,KAAW7T,GAAGsP,aAAajQ,SAASwU,EAAO,EAuIY7V,CACzD,eAGYoC,EAAQyjD,UAAa5lD,KAAKoG,SAASkzC,SAErDr3C,EAAO48E,WAAcl8E,GACX3C,KAAK6+E,WAAWl8E,GAE1BV,EAAO68E,UAAan8E,GACV3C,KAAK8+E,UAAUn8E,GAGzBV,EAAOsgE,SAAYx0C,IAChB,IAAIsqB,EAAetqB,EAAQ/tB,KAAK8G,YAChC,GAAoB,MAAhBuxC,EAAsB,MAAO,GAC7Br4C,KAAKoG,SAASy4C,aACfxG,EAiRZ,SAA6BzyC,EAAOmoB,EAAU,CAAC,GAC5C,IAAIjgB,EAAS,GAiBb,OAhBiC,MAA7BigB,EAAQnoB,EAAMkB,cACfgH,EAASigB,EAAQnoB,EAAMkB,YAEF,iBAAVgH,IAAoBA,EAAS+F,KAAK0D,MAAMzJ,IAG/ClI,EAAMQ,WACP0H,GAAUlI,EAAMQ,SAASjE,SAAW,IAAI2G,QAAQm2C,IAEzCnxC,GAAU,IAAIhF,QAAQsK,IAAO6rC,EAAIr+C,IAAMq+C,KAAS7rC,EAAExS,IAAMwS,KACrDjN,OAAS,MAMlB2H,CACV,CApS2Bg5E,CAAoB9mF,KAAM+tB,IAE5C,IAAIpoB,EAAS,GACbA,EAAOrB,KAAK,gCACZ,IAAIyiF,EAAiB,GACjBC,EAAY,GAChB,GACG3uC,GACAlrC,MAAMC,QAAQirC,IACdA,EAAalyC,OAEbkyC,EAAap0C,SAAS+R,IACfhW,KAAKoG,SAAS04C,WAAa9oC,EAAImpC,MAChC4nC,EAAiB,iBACjBC,EAAY,eAAehxE,EAAImpC,QAE9BnpC,EAAI3H,MACL1I,EAAOrB,KACJ,eAAe0iF,oCAA4CD,YAAyB/wE,EAAI3H,sCAAmC2H,EAAIpV,iGAErI,IAECy3C,EAAalyC,OAAS,GACvBR,EAAOrB,KACJ,8CAA8C+zC,EAAalyC,qBAG7D,KAAIkyC,EAoBR,MAAO,GApBe,CACtB,IAAI4uC,EAAc5uC,EAIlB,GAH2B,iBAAhBA,IACR4uC,EAAcjnF,KAAKqgF,eAAehoC,KAEhC4uC,EAAa,MAAO,GAKzB,GAJIjnF,KAAKoG,SAAS04C,WAAamoC,EAAY9nC,MACxC4nC,EAAiB,iBACjBC,EAAY,eAAeC,EAAY9nC,QAEtC8nC,EAAY54E,KAAM,CACnB,IAAInJ,EAAQ,GACR/C,EAAQyjD,WAAa5lD,KAAKoG,SAASkzC,WACpCp0C,EAAQ,0GAEXS,EAAOrB,KACJ,eAAe0iF,oCAA4CD,MAAmB7hF,wBAA4B+hF,EAAY54E,oBAE5H,CACH,CAEA,CAEA,OADA1I,EAAOrB,KAAK,UACLqB,EAAO2I,KAAK,GAAG,EAEzBrM,EAAOqD,OAAStF,KAAKoG,SAASy4C,WAAa,cAAgB,QAC3D58C,EAAOm3E,QAAU,CACd4F,QAAQ,EACRn1E,KAAM7J,KAAKoG,SAASjE,QAAQgM,KAAI,SAAU8wC,GACvC,MAAO,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,KACX8wC,IAAKF,EAAIE,IAEf,KAECn/C,KAAKoG,SAASy4C,aACf58C,EAAOm3E,QAAQ14E,KAAO,gBAGlBuB,CACV,CAUAwuE,cAAcvxD,EAAKtf,EAAK2C,EAAMJ,GAE3B,GAAKI,IAILJ,EAAUA,GAAW,CAAC,EAEjBI,EAAKk/E,eAAV,CAEA,IAAIyF,EAAc3kF,EAAKk/E,cACpB,4CAECyF,GACDA,EAAYjuE,iBAAiB,SAAU5O,IACpCA,EAAE88E,kBACF,IAAIxhF,EAAS,CAAC,EACdA,EAAO3F,KAAK8G,YAAc,GAC1B9G,KAAKiF,OACD+C,QACA+mE,OAAO7vD,EAAIte,GAAI+E,GACf6O,MAAK,KAEH7Q,GAAGpB,IAAOouB,aAAazR,EAAIte,GAAI+E,EAAO,IAExC8O,OAAOtM,IACL5F,EAAK2gF,UAAUhiE,IAAI,iBACnB3e,EAAK2gF,UAAUhiE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT4N,IAAKA,EACLvZ,OAAQ,GACRC,MAAO5F,KAAK8F,SACb,GACH,GA3BoB,CA8BlC,CAuBA24D,gBAGG,MAAMmjB,EAAuB9hF,MAAM2+D,gBAkBnC,OAfAmjB,EAAqB73C,OAAS,KACpB,CACJ1lC,IAAKrE,KAAKoG,SAASy4C,WAAa,iBAAmB,eACnDz4C,SAAU,CACPjE,QAASnC,KAAKoG,SAASjE,QAAQgM,KAAI,SAAU8wC,GAC1C,MAAO,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,KACX8wC,IAAKF,EAAIE,IAEf,OAKFyiC,CACV,CAEApmB,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,KAAKrE,KAAKoG,SAASy4C,WAAa,gBAI/B0/B,CACV,CAEAM,WAAWl8E,GACR,IAAKA,EAAO,MAAO,GACnB,IAAI8C,EAAO,GACX,GAAI0H,MAAMC,QAAQzK,GACfA,EAAMsB,SAAS+R,IACZ,GAAkB,iBAAPA,EACRvQ,EAAKnB,KAAK0R,EAAIpV,QACV,CACJ,IAAIw/E,EAAUpgF,KAAKqgF,eAAerqE,GAClCvQ,EAAKnB,KAAK87E,EAAQx/E,GACrB,UAGH,GAAoB,iBAAT+B,EACR8C,EAAKnB,KAAK3B,EAAM/B,QACZ,CACJ,IAAIw/E,EAAUpgF,KAAKqgF,eAAe19E,GAC9By9E,GAAWA,EAAQx/E,IACpB6E,EAAKnB,KAAK87E,EAAQx/E,GAExB,CAEH,OAAO6E,EAAK6I,MACf,CAEAwwE,UAAUn8E,GACP,GAAI3C,KAAKoG,SAASy4C,WAAY,CAC3B,IAAIyhC,EAAa,GAKjB,OAJW39E,EAAMslB,MAAM,KAClBhkB,SAAS+R,IACXsqE,EAAWh8E,KAAKtE,KAAKqgF,eAAerqE,GAAK,IAErCsqE,CACV,CACG,OAAO39E,CAEb,CAEA09E,eAAerqE,GACZ,IAAI5H,EACAjM,EAAUnC,KAAKmC,UACnB,OAAIA,EAAQgE,OAAS,GAClBhE,EAAQ8B,SAASu9E,IACd,GAAIA,EAAO5gF,IAAMoV,EAEd,OADA5H,EAAOozE,GACA,CACV,IAEIpzE,GAEA,EAEb,CAEAnC,SAASmC,EAAM2f,GACZ,OAAO/tB,KAAK8+E,UAAU1wE,EAAKnC,WAC9B,CAEAm7E,mBAAmBxhF,EAAOmoB,EAAU,CAAC,GAClC,IAAIjgB,EAAS,GAwBb,OAvBgC,MAA5BigB,EAAQ/tB,KAAK8G,YACdgH,EAASigB,EAAQ/tB,KAAK8G,YACdinB,IACJ5gB,MAAMC,QAAQ2gB,GACfjgB,EAASigB,EAETjgB,EAAOxJ,KAAKypB,IAGdjgB,EAAO3H,SACa,iBAAV2H,IAAoBA,EAAS+F,KAAK0D,MAAMzJ,IAG/C9N,KAAKoG,WACN0H,GAAU9N,KAAKoG,SAASjE,SAAW,IAAI2G,QAAQm2C,IAExCnxC,GAAU,IAAIhF,QAAQsK,IAAO6rC,EAAIr+C,IAAMq+C,KAAS7rC,EAAExS,IAAMwS,KACrDjN,OAAS,MAMlB2H,CACV,CAEAjJ,SAASuJ,EAAM2f,GACP3f,IAEDpO,KAAKoG,SAASy4C,YAGf/+C,MAAM+E,SAASuJ,EAAM2f,GAE3B,oBCvaH,MAAMs5D,EAAsB,EAAQ,OAEpC5nF,EAAOC,QAAU,cAA8B2nF,EAC5C1nF,YAAYgG,EAAQV,GACjBnF,MAAM6F,EAAQV,EAUjB,CAMAM,UAKG,OAJkBzF,MAAMyF,SAK3B,CAOAwqE,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAQlC,OANAF,EAAOqD,OAAS,OAEhBrD,EAAOsgE,SAAW,CAACzqD,EAAKiyB,EAAQpnC,EAAO44E,EAAK+L,KACjC3kF,GAAS,IAAI+R,WAAW1B,QAAQ,OAAQ,QAG5C/Q,CACV,CAWAw8D,gBAGG,MAAMmjB,EAAuB9hF,MAAM2+D,gBAYnC,OATAmjB,EAAqB73C,OAAS,KACpB,CACJ1lC,IAAK,UACL+B,SAAU,CACPxE,KAAM,cAKRggF,CACV,CAEApmB,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,CAYA15E,SAASuJ,EAAM2f,GACZjuB,MAAM+E,SAASuJ,EAAM2f,EAAS,GACjC,oBChGH,MAAMw5D,EAAoB,EAAQ,OAElC,IAAIC,GAAc,EAKlB/nF,EAAOC,QAAU,cAA4B6nF,EAC1C5nF,YAAYgG,EAAQV,GACZuiF,IAEF/jF,MAAMgkF,QAAQ3mE,OAASrd,MAAMC,OAC1B,CAEA,EACAD,MAAMgkF,QAAQp5E,MAEjBm5E,GAAc,GAEjB1nF,MAAM6F,EAAQV,EACjB,CAgBA8qE,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAWlC,OATAF,EAAOqD,OAAS,SAEhBrD,EAAOqe,OAAU+P,IACd,MAAMtC,EAAU,CAAC,EAGjB,OAFAA,EAAQ/tB,KAAK8G,YAAcupB,EAEpBrwB,KAAKsgB,OAAOyN,EAAQ,EAGvB9rB,CACV,CAWAw8D,gBACG,OAAO3+D,MAAM2+D,cAAc,YAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,oBCnEH,MAAMjqC,EAAU,EAAQ,OAElBozC,EAAkB,CACrBC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,cAAc,EACdpQ,YAAa,GACbsL,UAAU,GAGP+E,EAA6B,CAChC1jF,IAAK,eAGR5E,EAAOC,QAAU,cAAiC40C,EAC/C30C,YAAYgG,EAAQV,EAAQ+yC,EAAgB+vC,GACzCjoF,MAAM6F,EAAQV,EAAQ+yC,EACzB,CAGAttB,kBACG,MAAO,CACJrmB,IAAK,cACLkH,KAAM,OACNpH,SAAU,GACVqwC,YAAa,GAEnB,CAEAwzC,kBAAkBvF,EAASr8E,EAAUxG,EAAKsf,GACvC,GAAe,MAAXujE,EAAiB,OAErB,MAAMwF,EAAU7hF,EAAS8hF,QAAU,GACnCzF,EAAQf,aAAa,UAAWuG,GAGhC7hF,EAAWA,GAAY,CAAC,EACxB,IAAK,MAAMosB,KAAMk1D,EACO,OAAjBthF,EAASosB,GACVpsB,EAASosB,GAAM,KAEfpsB,EAASosB,GAAMpsB,EAASosB,IAAOk1D,EAAgBl1D,GAgCrD,GA3BGpsB,EAAS48E,UACT58E,EAAS+hF,OACT/hF,EAASyD,MACTzD,EAASyD,KAAK1D,QAEdC,EAASyD,KAAK5F,SAAQ,SAAUosB,GAC7BjqB,EAAS+hF,MAAMh6E,KAAI,SAAUkF,GACtBA,EAAEzS,IAAMyvB,EAAEzvB,KAAIyvB,EAAE8uB,IAAM9rC,EAAE8rC,IAC/B,GACH,IACA/4C,EAAe,KAAIpG,KAAKooF,YACrBhiF,EAAe,KACfA,EAAS48E,WAEgB,MAApB58E,EAAe,MAAiC,IAApBA,EAAe,KACnDA,EAAe,KAAIpG,KAAKooF,YAAY,GAAIhiF,EAAS48E,UAEjD58E,EAAe,KAAIpG,KAAKooF,YACrBhiF,EAAe,KACfA,EAAS48E,UAKf58E,EAAgB,MAAIpG,KAAKY,GAGE,MAAvB6hF,EAAQ4F,YAIT,YAFA5F,EAAQ4F,YAAYC,WAAWliF,GAQlC,IAAImiF,EAuFJ,GA1FAniF,EAASqzB,QAAUgpD,EAIfr8E,EAAS48E,UACN58E,EAASoiF,QACVpiF,EAASqiF,UAAY,CAClBC,qBAAsB,SAAUvmF,GAC7B,MAAO,mDACJA,EAAQwmF,YAAc,eAAiB,8JAGpCxmF,EAAQ0N,wBAAwBzJ,EAASR,oHAGtCQ,EAASwiF,eACJxiF,EAASwiF,eAAezmF,GACxB,uBAErBiE,EAASyiF,cAA+B,GAAf1mF,EAAQkM,yBAEjBlM,EAAQ00D,UACH,8GACA,2BAGjB,GAGHzwD,EAASqiF,UAAY,CAClBC,qBAAsB,SAAUvmF,GAC7B,MAAO,mDACJA,EAAQwmF,YAAc,eAAiB,iDAEzBxmF,EAAQg9C,mDACnBh9C,EAAQ0N,wBAAwBzJ,EAASR,oCAEtCQ,EAASotD,SACJ,qFACA,+BAGLptD,EAASwiF,eACJxiF,EAASwiF,eAAezmF,GACxB,+BAELiE,EAASyiF,cAA+B,GAAf1mF,EAAQkM,iCAEjClM,EAAQ00D,UACH,yFACA,2BAGjB,GAGN0xB,EAAmB,IAAIO,YAAYC,OAAOC,SAAS5iF,GAEnDq8E,EAAQ4F,YAAcE,EACtBvoF,KAAKipF,oBAAoBxG,EAAS7iF,EAAKsf,KAEvC9Y,EAASqiF,UAAY,CAClBS,mBAAoB,SAAU/mF,GAC3B,MAAO,gEACJA,EAAQ0N,wBACSzJ,EAASR,0BAEpBQ,EAASotD,SACJ,kFACA,4BAGLptD,EAASwiF,eACJxiF,EAASwiF,eAAezmF,GACxB,4BAELiE,EAASyiF,cAA+B,GAAf1mF,EAAQkM,8BAEjClM,EAAQ00D,UACH,sFACA,yBAGjB,GAGH0xB,EAAmB,IAAIO,YAAYC,OAAOI,OAAO/iF,GACjDq8E,EAAQ4F,YAAcE,GAGrBniF,EAASotD,SAAU,CACpB,MAAM41B,EAAsB,KACzB,MAAMvhC,EAAW7nD,KACXqpF,EAAY9+C,SAAS++C,iBACxB,oFAEH,IAAK,IAAIj2E,EAAI,EAAGA,EAAIg2E,EAAUljF,OAAQkN,IAAK,CACxC,MAAMk2E,EAAQF,EAAUh2E,GACpBk2E,IAAUA,EAAMC,kBACjBD,EAAMtwE,iBACH,SACA,SAAU5O,GACPA,EAAE88E,kBACF98E,EAAEo/E,iBAEF,MAAMC,EAAY1pF,KAAK2pF,cACvB,IAAKD,EAAW,OAEhB,MAAMp7D,EAAQo7D,EAAUvF,aAAa,gBACrC,IAAK71D,EAAO,OAEZ,MAAM5jB,EAAUg/E,EAAUvF,aAAa,iBACvC,IAAKz5E,EAAS,OAEd,MAAMk/E,EAAY/hC,EAAS5iD,OAAO8I,UAAUrD,GACvCk/E,GAELA,EAAUp6E,KAAK,WAAY8e,EAC9B,IACA,GAEHi7D,EAAMC,iBAAkB,EAE9B,GAGH70E,YAAW,KACRy0E,IAEA3G,EAAQxpE,iBAAiB,UAAU,KAChCmwE,GAAqB,GACtB,GACF,IACN,CAGA,GAAIhjF,EAASyhF,SAAU,CACpB,MAAMgC,EAAapH,EAAQqH,uBAAuB,qBAClD,IAAK,IAAIz2E,EAAI,EAAGA,EAAIw2E,EAAW1jF,OAAQkN,IAAK,CACzC,MAAM02E,EAAWF,EAAWx2E,GACxB02E,GACDA,EAASC,WAAWC,YAAYF,EAEtC,CACH,CAGA/pF,KAAKkqF,oBAAsB9jF,CAC9B,CAEA+jF,eAAe1H,GACZ,OAAIA,GAAWA,EAAQ4F,YAChBroF,KAAKkqF,qBAAuBlqF,KAAKkqF,oBAAoBlH,SAE/CP,EAAQ4F,YAAYj1D,WAAa,GAGjCqvD,EAAQ4F,YAAYj1D,WAAa,KAGvCpzB,KAAKkqF,qBAAuBlqF,KAAKkqF,oBAAoBlH,SAC/C,GACE,IAElB,CAEAoH,eAAe3H,EAAS54E,GAChB44E,GAAYA,EAAQ4F,cAEzBx+E,EAAO7J,KAAKooF,YAAYv+E,EAAM44E,EAAQ4F,YAAYlmF,QAAQ6gF,UAGtD71E,MAAMC,QAAQvD,IAASA,EAAK,IAC5BA,GAAQA,EAAKjJ,GAGd6hF,EAAQ4F,YAAYgC,QAAQxgF,GAC1B44E,EAAQ4F,YAAYnjF,QAC5B,CAEAolF,mBAAmB7H,GACZA,GAAWA,EAAQ4F,cACpB5F,EAAQ4F,YAAYzzE,iBAEb6tE,EAAQ4F,YAErB,CAEAD,YAAYv+E,EAAMm5E,GAAW,GAC1B,IAAKn5E,GAAQm5E,EACV,MAAO,GACH,GAAIA,GAAYn5E,GAAQsD,MAAMC,QAAQvD,IAAwB,GAAfA,EAAK1D,OACxD,MAAO,GACH,IAAK68E,GAAYn5E,GAAQsD,MAAMC,QAAQvD,IAAwB,GAAfA,EAAK1D,OACzD,OAAO,KACH,IAAK0D,IAASm5E,EAClB,OAAO,KAGV,GAAmB,iBAARn5E,GAAoBA,EAAK1D,OAAS,EAC1C,IACG0D,EAAOgK,KAAK0D,MAAM1N,EAIrB,CAHE,MAAOQ,GAENR,EAAO,CAAEjJ,GAAIiJ,EAAMwE,KAAMxE,EAC5B,CAyBH,OArBKm5E,GAAY71E,MAAMC,QAAQvD,GAC5BA,EAAOA,EAAK,GACJm5E,IAAa71E,MAAMC,QAAQvD,KACnCA,EAAO,CAACA,IAIPm5E,EACDn5E,EAAK5F,SAASosB,KACNA,EAAEzvB,IAAMyvB,EAAExgB,OACZwgB,EAAEzvB,GAAKyvB,EAAExgB,KACZ,KAGEhG,EAAKjJ,IAAMiJ,EAAKgG,OAAMhG,EAAKjJ,GAAKiJ,EAAKgG,MAGjC,MAARhG,GAAgBm5E,IACjBn5E,EAAO,IAGHA,CACV,CAEAo/E,oBAAoBxG,GACjB,GAAKA,EAAQ8H,cACO9H,EAAQ8H,aACR9H,EAAQkH,cAAcY,aACV,EAAG,CAChC,IAAIr5D,EAAQ,EACRvrB,EAAS,GAKb,GAJI88E,GAAWA,EAAQ4F,cACpB1iF,EAAS88E,EAAQ4F,YAAYp8E,YAAc,IAE9CilB,EAAQvrB,EAAOQ,OACX+qB,EAAQ,EAAG,CACZ,MAAMs5D,EAAQ/H,EAAQhB,cACnB,iCAEH,GAAa,MAAT+I,EACDA,EAAM//C,UAAYvZ,MACd,CACJ,MAAMu5D,EAASlgD,SAASC,cAAc,KACtCigD,EAAOlG,KAAO,sBAMd,MAAMhiF,EAAOgoC,SAASC,cAAc,QAC9BkgD,EAAWngD,SAASogD,eAAez5D,GACzC3uB,EAAK2gF,UAAUhiE,IAAI,cAAe,oBAClC3e,EAAKqoF,YAAYF,GACjBD,EAAOG,YAAYroF,GACnBkgF,EAAQmI,YAAYH,EACvB,CACH,CACH,CACH,oBCnWH,MAAMI,EAAoB,EAAQ,OAElCprF,EAAOC,QAAU,cAA4BmrF,EAkB1C9a,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAclC,OAZAF,EAAOqD,OAAS,OAChBrD,EAAOf,IAAM,WAEbe,EAAOsgE,SAAW,CAACzqD,EAAKiyB,EAAQpnC,IAExBmV,EAAIwmE,OAGC,IAFC37E,GAAS,IAAI+R,WAAW1B,QAAQ,OAAQ,QAM/C/Q,CACV,CAQAygC,aAAa/8B,GAELA,EAAO3F,KAAK8G,aAEV9G,KAAKoG,SAAS0jC,UACX9pC,KAAKoG,SAAS0jC,QAAQz8B,QAAQ,WAAa,EAC5C1H,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG8N,OAElClK,EAAO3F,KAAK8G,YAAc9G,KAAKoG,SAAS0jC,QAIpD,CAUAja,YAAYhmB,EAAMtC,GAGf,GAFAzH,MAAM+vB,YAAYhmB,EAAMtC,GAEpBsC,GAAQA,EAAK7J,KAAK8G,YAAa,CAChC,MAAMgkF,EAAa9qF,KAAKL,YAAYyE,WAAWk7C,gBAE/C,GAAIz1C,EAAK7J,KAAK8G,YAAYX,OAAS2kF,EAAY,CAC5C,MAAM/qF,EAAIC,KAAK+B,GAAG9B,QAClBsH,EAAUgW,SACPvd,KAAK8G,WACL/G,EAAE,2CAA4C,CAAC+qF,IAErD,CACH,CACH,CAOIrpD,qBACD,OAA4C,GAArCzhC,KAAKoG,SAASm5C,mBACxB,CAWAkf,gBAGG,MAAMmjB,EAAuB9hF,MAAM2+D,gBAYnC,OATAmjB,EAAqB73C,OAAS,KACpB,CACJ1lC,IAAK,UACL+B,SAAU,CACPxE,KAAM,YAKRggF,CACV,CAEApmB,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,CAYA15E,SAASuJ,EAAM2f,GACZjuB,MAAM+E,SAASuJ,EAAM2f,EAAS,GACjC,oBC9IH,MAAMg9D,EAAyB,EAAQ,OAEvCtrF,EAAOC,QAAU,cAAiCqrF,EAsB/Chb,aAAa5tE,GACV,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAOsgE,SAAYx0C,GAEXA,EAAQuwD,OAGH,GAFAt+E,KAAKsgB,OAAOyN,GAMlB9rB,CACV,CAUAwuE,gBAA8C,CAW9ChS,gBAEG,OAAO,IACV,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,oBC3EH,MAAMyM,EAAkB,EAAQ,OAE1BjrF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAElDnW,EAAOC,QAAU,cAA0BsrF,EAqBxCpG,kBAAkB9sE,GACf,MAAO,GAAG9X,KAAK8G,WAAWkM,QAAQ,KAAM,QAAQ8E,EAAIlX,SACvD,CAGAmvE,aAAa5tE,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASnC,MAAMiwE,aAAa5tE,GAC5ByD,EAAQ5F,KAEd,IAAIirF,EAAY,GACZC,EAAc,GACd/oF,EAAQgpF,SACTF,EAAY,cACZC,EACG,8CACAnrF,EAAE,gBACF,WAGN,MAAMiB,EAAQmB,EAAQnB,MA8EtB,OA5EAiB,EAAOsgE,SAAYzqD,IAChB,GAAIA,EAAIwmE,OAAQ,OAAOxmE,EAAIlS,EAAMkB,YAEjC,MAAMskF,EAAW,GACjB,IAAIC,EAAgBrrF,KAAK+B,GAAG2D,UAAUE,EAAMQ,SAASjE,SACrDkpF,EAAgB,IAAI5nF,MAAMgpE,eAAe,CACtC5iE,KAAMwhF,IAGT,IAAI1lF,EAASmS,EACgB,MAAzBA,EAAIlS,EAAMkB,cACXnB,EAASmS,EAAIlS,EAAMkB,aAGtBukF,EAAcxhF,KAAK03E,MAAK,SAAUzpE,GAC/B,QAC4B,IAAlBnS,EAAO0H,UACa,GAA3B1H,EAAO0H,QAAQyK,EAAIlX,IACpB,CACC,IAAI8kF,EAAO,GAEP4F,EAASxzE,EAAIlX,GACjB,KAAOZ,KAAKurF,YAAYD,IACrBD,EAAcxhF,KAAK03E,MAAK,SAAUiK,GAC3BH,EAAcxhF,KAAK0hF,YAAYD,IAAWE,EAAI5qF,KAC/C8kF,EAAO8F,EAAIn9E,KAAO,KAAOq3E,EAE/B,IACA4F,EAAStrF,KAAKurF,YAAYD,GAG7B5F,GAAQ5tE,EAAIzJ,KACZ+8E,EAAS9mF,KAAKohF,EACjB,CACH,IAGA,IAAI+F,EAAW,GAkBf,OAjBAA,GAAY,iCACW,GAAnBL,EAASjlF,OACVslF,GAAYP,EAEZE,EAASnnF,SAAQ,SAAUmK,GACxBq9E,GACG,0GAGAr9E,EACA,SACN,IAEHq9E,GAAY,SAIRzqF,EAEE,4BACAA,EACA,+BACAiqF,EACA,KACAQ,EACA,SAIA,+BACAR,EACA,KACAQ,EACA,QAEN,EAGIxpF,CACV,CAUAwuE,cAAcvxD,EAAKtf,EAAK2C,EAAMJ,GAE3B,IAAKI,EACF,OAKH,MAAMqD,EAAQ5F,KAEd,IAJAmC,EAAUA,GAAW,CAAC,GAIVgpF,OAAQ,CACjB,IAAKjsE,GAAqB,GAAdA,EAAI/Y,OAKb,YAJA5D,EAAKkoC,UACF,uFACA1qC,EAAE,gBACF,iBAIN,MAAMqrF,EAAW,GACjBjpF,EAAUnC,KAAK+B,GAAG2D,UAAUE,EAAMQ,SAASjE,SAC3CA,EAAU,IAAIsB,MAAMgpE,eAAe,CAChC5iE,KAAM1H,IAGT,IAAIwD,EAASuZ,EACgB,MAAzBA,EAAItZ,EAAMkB,cACXnB,EAASuZ,EAAItZ,EAAMkB,aAGtB3E,EAAQ0H,KAAK03E,MAAK,SAAUzpE,GACzB,QAC4B,IAAlBnS,EAAO0H,UACa,GAA3B1H,EAAO0H,QAAQyK,EAAIlX,IACpB,CACC,IAAI8kF,EAAO,GAEP4F,EAASxzE,EAAIlX,GACjB,KAAOZ,KAAKurF,YAAYD,IACrBnpF,EAAQ0H,KAAK03E,MAAK,SAAUiK,GACrBrpF,EAAQ0H,KAAK0hF,YAAYD,IAAWE,EAAI5qF,KACzC8kF,EAAO8F,EAAIn9E,KAAO,KAAOq3E,EAE/B,IACA4F,EAAStrF,KAAKurF,YAAYD,GAG7B5F,GAAQ5tE,EAAIzJ,KACZ+8E,EAAS9mF,KAAKohF,EACjB,CACH,IAEA,MAAMgG,EAAQ,UACd,IAAID,EAAW,GACfA,GAAY,4CACZL,EAASnnF,SAAQ,SAAUmK,GACxBq9E,GACG,qFACAC,EACA,iBACAt9E,EACA,SACN,IACAq9E,GAAY,SAEZlpF,EAAKkoC,UAAYghD,CACpB,CAEA7lF,EAAM+lF,SAASppF,EAAM3C,EAAKsf,EAC7B,CAUAi/D,WAAWj/D,EAAKtf,EAAK2C,EAAMpC,GACxB,MAAMN,EAASD,EAAIQ,OAAOJ,KAAK4kF,kBAAkB1lE,IAC3C0sE,EAAU,GAAG/rF,UACbgsF,EAAS,GAAGhsF,SACZa,EAAOiD,GAAGpB,GACVqD,EAAQ5F,KACR8rF,EAAkB3rF,EACxB,IAAIwF,EAAS,CAAC,EACVomF,GAAc,EAclB,SAASC,EAAapmF,EAAOH,GAC1BE,EAbH,SAAmBC,EAAOsZ,GACvB,IAAIvZ,EAAS,CAAC,EAQd,YANmB,IAATC,QACoB,IAApBA,EAAMkB,iBACmB,IAAzBoY,EAAItZ,EAAMkB,cAEjBnB,EAASuZ,EAAItZ,EAAMkB,aAEfnB,CACV,CAGYsmF,CAAUrmF,EAAOH,GAE1B,MAAMymF,EAAQvoF,GAAGkoF,GACjBK,EAAM1Q,aAEN,MAAMr5E,EAAUyD,EAAM7D,GAAG2D,UAAUE,EAAMQ,SAASjE,SAClD+pF,EAAMpxE,WACNoxE,EAAM30E,MAAMpV,GACZ+pF,EAAMxnF,UACNwnF,EAAMC,aACND,EAAME,UAEQ,MAAVzmF,GAAkBA,EAAOQ,QAC1BR,EAAO1B,SAAQ,SAAUrD,GAClBsrF,EAAMt/D,OAAOhsB,KACdsrF,EAAMG,UAAUzrF,GACJsrF,EAAM3b,YAAY3vE,GAC1BsiF,UAAUhiE,IAAI,YAExB,IAEHgrE,EAAMzQ,cACT,CAuGA,OArGI93E,GAAGioF,IACJjoF,GAAGioF,GAAShnF,OACZonF,EAAahsF,KAAMkf,IAEnBzb,MACIhD,GAAG,CACDG,GAAIgrF,EACJlrF,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRqB,GAAI,CACDoI,OAAQ,KACc,GAAfuhF,GAAqBC,EAAahsF,KAAMkf,GAE5C6sE,GAAc,CAAK,GAGzBtqF,KAAM,CACHb,GAAIirF,EACJnrF,KAAM,OACNQ,IAAK,eACLqhE,SAAU,SAAUzqD,EAAKiyB,GACtB,MACG,UACAA,EAAO00C,SAAS3mE,EAAKiyB,GACrB,SACAjyB,EAAIzJ,KACJ,UAEN,EACAjM,GAAI,CACDkqF,YAAannF,eAAgBvE,EAAI+B,EAAOutB,GACrC,MAAMq8D,EAAMvsF,KAAKuwE,YAAY3vE,GACvB4rF,EAAOxsF,KAQb,GAPa,GAAT2C,EACD4pF,EAAIrJ,UAAUhiE,IAAI,YAElBqrE,EAAIrJ,UAAUroE,OAAO,YAIpB7a,KAAKurF,YAAY3qF,GAAK,CACvB4rF,EAAKhR,aAEL,IAAI8P,EAAS1qF,EACb,KAAOZ,KAAKurF,YAAYD,IACrBA,EAAStrF,KAAKurF,YAAYD,GACtBA,GAAU1qF,GAAI4rF,EAAKC,YAAYnB,GAGtCtrF,KAAK6J,KAAK6iF,YAAYpB,GAAQ,SAAUl9E,GACjCA,EAAKxN,IAAMA,GAAI4rF,EAAKC,YAAYr+E,EAAKxN,GAC5C,IAEA4rF,EAAK/Q,cACR,MACG+Q,EAAKhR,aACLx7E,KAAK6J,KAAK6iF,YAAY9rF,GAAI,SAAUkX,GAC7BA,EAAIlX,IAAMA,GAAI4rF,EAAKC,YAAY30E,EAAIlX,GAC1C,IACA4rF,EAAK/Q,eAER,MAAM91E,EAAS,CAAC,EAGhB,GAFAA,EAAOC,EAAMkB,YAAcnD,GAAGkoF,GAAQc,aAElCztE,EAAIte,GAAI,CAE8B,GAAnC+E,EAAOC,EAAMkB,YAAYX,SAC1BR,EAAOC,EAAMkB,YAAc,IAE9B,UACSlB,EAAMX,OAAO+C,QAAQ+mE,OAAO7vD,EAAIte,GAAI+E,GAGtCjF,GAAQA,EAAKiwB,YACdjwB,EAAKiwB,WAAWzR,EAAIte,GAAI+E,EAW9B,CATE,MAAOwC,GACN5F,EAAK2gF,UAAUhiE,IAAI,iBACnB3e,EAAK2gF,UAAUhiE,IAAI,sBAEnBlhB,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4BACT4N,IAAKA,EACLvZ,OAAQA,GAEd,CACH,KAAO,CACJ,MAAMooB,EAAU,CAAC,EACjBA,EAAQnoB,EAAMkB,YAAcnD,GAAGkoF,GAAQc,aAEvC/mF,EAAMf,SAASlB,GAAGmoF,EAAgBrrF,GAAGG,IAAKmtB,EAC7C,CACH,MAIRnpB,KAAKrC,EAAM,CACT2K,GAAI,KAGN,CACV,CAEAy+E,SAASlJ,EAASvjE,GACf,MAAMtZ,EAAQ5F,KAId,IAHAyiF,EAAUA,EAAQhB,cAAc,sBACJmL,aACRnK,EAAQkH,cAAcY,aACV,EAAG,CAChC,IAAIr5D,EAAQ,EAKZ,GAHGA,EADChS,EAAItZ,EAAMkB,aAAeoY,EAAItZ,EAAMkB,YAAYX,OACxC+Y,EAAItZ,EAAMkB,YAAYX,OACpB,EAET+qB,EAAQ,EAAG,CACZ,MAAMs5D,EAAQ/H,EAAQhB,cACnB,iCAEH,GAAa,MAAT+I,EACDA,EAAM//C,UAAYvZ,MACd,CACJ,MAAMu5D,EAASlgD,SAASC,cAAc,KACtCigD,EAAOlG,KAAO,sBACdkG,EAAOxxE,iBAAiB,SAAS,SAAUiX,GAIxCA,EAAMi3D,iBACT,IACA,MAAM5kF,EAAOgoC,SAASC,cAAc,QAC9BkgD,EAAWngD,SAASogD,eAAez5D,GACzC3uB,EAAK2gF,UAAUhiE,IAAI,cAAe,oBAClC3e,EAAKqoF,YAAYF,GACjBD,EAAOG,YAAYroF,GACnBkgF,EAAQmI,YAAYH,EACvB,CACH,CACH,CACH,CAWAhsB,gBACG,OAAO3+D,MAAM2+D,cAAc,WAC9B,CAEAjD,kBACG,MAAM+iB,EAAyBz+E,MAAM07D,kBAQrC,OANA+iB,EAAuBx0C,OAAS,KACtB,CACJ1lC,IAAK,eAIJk6E,CACV,CAEAtyE,SAASmC,EAAM2f,GACZ,IAAIpoB,EAAS,CAAC,EAEd,OADAA,EAASyI,EAAK69E,YACPtmF,CACV,CAEAd,SAASuJ,EAAM2f,GACZ,IAAK3f,EAAM,OAAO,EAElB,MAAM4H,EAAM+X,EAAQ/tB,KAAK8G,aAAe,GAExCsH,EAAKy+E,UAAU72E,GAEf,MAAMu2E,EAAMn+E,EAAKV,MAAM+zE,cAAc,qBAErC,IAAK8K,EAAK,OAAO,EAGjBvsF,KAAKywE,cAAcz6D,EAAKhW,KAAKJ,IAAK2sF,EAAK,CACpC3mC,UAAU,EACVulC,QAAQ,IAGXx2E,YAAW,WACR,IAAI5T,EAAS,GACTwrF,EAAIK,aAAe,KACpB7rF,EAASwrF,EAAIK,cAEhBx+E,EAAKnM,OAAOlB,OAASA,EAAS,EAC9BqN,EAAKvN,QACR,GAAG,IACN,oBC1cH,MAAM89E,EAAqB,EAAQ,OAC7BmO,EAAkB,EAAQ,OAEhCrtF,EAAOC,QAAU,cAA0BotF,EACxCntF,YAAYgG,EAAQV,EAAQ+yC,GACzBl4C,MAAM6F,EAAQV,EAAQ+yC,EACzB,CAMA7yC,aAEG,GAAe,MAAXnF,KAAKY,GAAY,CAClB,MAAMmsF,EAAW/sF,KAAK+B,GAAGo3B,aACnB6zD,EAAWF,EAAgB1oF,WAEjCpE,KAAKoG,SAASO,WAAaomF,EAASnsF,GACpCZ,KAAKoG,SAASgB,WAAa,EAEvBpH,KAAKoG,SAASy4C,YACf7+C,KAAKoG,SAASkB,YAAc0lF,EAASrnC,kBACrC3lD,KAAKoG,SAASa,SAAW,OACzBjH,KAAKoG,SAASc,YAAc,OAC5BlH,KAAKoG,SAASM,SAAW,IAEzB1G,KAAKoG,SAASiB,WAAa2lF,EAASrnC,kBACpC3lD,KAAKoG,SAASa,SAAW,MACzBjH,KAAKoG,SAASc,YAAc,OAC5BlH,KAAKoG,SAASM,SAAW,GAQ5B,MAAMlB,EAAUunF,EAAS7mF,SAAS,CAC/B7B,IAAKs6E,EAAmBv6E,WAAWC,IACnCyC,WAAY,GAAG9G,KAAKiF,OAAOkC,QAAQnH,KAAKoB,QACxCA,MAAOpB,KAAKiF,OAAO7D,MACnBgF,SAAU,CACPC,SAAUrG,KAAKoG,SAASC,SACxBM,WAAY3G,KAAKiF,OAAOrE,GACxBqG,SAAUjH,KAAKoG,SAASc,YACxBA,YAAalH,KAAKoG,SAASa,SAC3BG,WAAYpH,KAAKoG,SAASgB,WAC1BC,WAAYrH,KAAKoG,SAASiB,WAC1BC,YAAatH,KAAKoG,SAASkB,YAC3BZ,SAAU,KAgBhB,IAAImZ,QAAe7f,KAAK6U,eAAejN,OACvC5H,KAAKY,GAAKif,EAAOjf,GAEjB4E,EAAQY,SAAS6B,WAAajI,KAAKY,GACnC,IAAIqsF,QAAmBznF,EAAQqP,eAAejN,OAgB9C,OAfApC,EAAQ5E,GAAKqsF,EAAWrsF,GAExBZ,KAAKoG,SAAS6B,WAAazC,EAAQ5E,SAC7BZ,KAAK6U,eAAejN,aAGpB5H,KAAKiF,OAAOs8B,SAASvhC,YAErB+sF,EAASxrD,SAAS/7B,SAGlBxF,KAAKkI,sBAEL1C,EAAQ0C,gBAEPlI,IACV,CACG,OAAOF,MAAM8H,MAEnB,CAIAmoE,aAAa5tE,GAGV,OADAA,EAAUnC,KAAKktF,kBAAkB/qF,GAC1BrC,MAAMiwE,aAAa5tE,EAC7B,CAiBA+qF,kBAAkB/qF,GAkBf,OAjBAA,EAAUA,GAAW,CAAC,GACdyjD,SACqB,MAA1B5lD,KAAKoG,SAASw/C,UAAmB5lD,KAAKoG,SAASw/C,SAElDzjD,EAAQ0mF,cAC2B,MAAhC7oF,KAAKoG,SAAS2/C,iBACR/lD,KAAKoG,SAAS2/C,eAGvB5jD,EAAQymF,eAAkB3pC,GAClBj/C,KAAKoG,SAAS0/C,mBAEf7G,EAAIluC,SACE,mBAAmBkuC,EAAIluC,4GACrB,oDAJkC,GAO1C5O,CACV,CAQAugC,aAAa/8B,GACN3F,KAAKoG,SAASy/C,gBACX7lD,KAAKoG,SAASy4C,WACfl5C,EAAO3F,KAAK8G,YAAc,CACvB,CACGlG,GAAIZ,KAAK+B,GAAG6Q,QAAQhC,WACpBvC,KAAMrO,KAAK+B,GAAG6Q,QAAQhC,aAI5BjL,EAAO3F,KAAK8G,YAAc9G,KAAK+B,GAAG6Q,QAAQhC,WAGnD,CAEA3E,SAASmC,GACN,IAAI4H,EAAMlW,MAAMmM,SAASmC,GAczB,OAZI4H,IACiB,iBAAPA,EACRA,EAAMA,EAAIhD,QAAQ,mBAAoBhT,KAAK+B,GAAG6Q,QAAQhC,YAChDzD,MAAMC,QAAQ4I,KACpBA,EAAMA,EAAI7H,KAAKiF,IACXA,EAAExC,UAAYwC,EAAEvD,MAAQuD,EAAExS,IAAMwS,IAAIJ,QAClC,mBACAhT,KAAK+B,GAAG6Q,QAAQhC,gBAKrBoF,CACV,CAEAnR,SAASuJ,EAAM2f,GACZ,IAAI/X,EAAM+X,EAAQ/tB,KAAK8G,YAEZ,mBAAPkP,IAA0BA,EAAMhW,KAAK+B,GAAG6Q,QAAQhC,YAEpDmd,EAAQ/tB,KAAK8G,YAAckP,EAE3BlW,MAAM+E,SAASuJ,EAAM2f,EACxB,CAEAmoC,WACG,OAAOl2D,KAAK+B,GAAG6Q,QAAQ/B,WAAW1C,KAAKqpE,IACpC,MAAM1pE,EAAS,CACZlN,GAAI42E,EAAE5mE,SACNylD,MAAOmhB,EAAEzmE,UASZ,OANI/Q,KAAKoG,SAASy4C,WACf/wC,EAAOO,KAAOmpE,EAAE5mE,SAEhB9C,EAAOnL,MAAQ60E,EAAE5mE,SAGb9C,CAAM,GAEnB,oBClMH,IAAIq/E,EAAoB,EAAQ,OAEhC1tF,EAAOC,QAAU,cAA4BytF,EAS1CC,6BAA6BxsF,GAC1B,IAAIysF,EAAgBrtF,KAAKinB,QAAQkhB,oBAAoBvnC,GACjDysF,IAGIrtF,KAAKqmD,SAAWgnC,EAAchnC,SACf,CACd,UACA,UACA,OACA,aACA,WAEQpiD,SAAS6d,IACjB,IAAIwrE,EAAOttF,KAAK8hB,GAChB9hB,KAAK8hB,GAAKurE,EAAcvrE,GACxBurE,EAAcvrE,GAAKwrE,CAAI,GAInC,CAOAzzD,YAAYJ,GACTz5B,KAAK8mC,UAAYrN,EAAQ74B,IAAMZ,KAAK8mC,UAIhCrN,EAAQ8zD,UAAY9zD,EAAQ8zD,SAASpnF,OAAS,EAC3CszB,EAAQ1kB,QAAiC,oBAAvB0kB,EAAQ1kB,OAAOnT,MAClC5B,KAAKotF,6BAA6B3zD,EAAQ1kB,OAAOnU,IAKjD64B,EAAQ1kB,QACR0kB,EAAQ1kB,OAAOw4E,UACf9zD,EAAQ1kB,OAAOw4E,SAASpnF,OAAS,GAEjCszB,EAAQ1kB,OAAOw4E,SAAStpF,SAASupF,IAC9B,GAAkB,aAAdA,EAAM5rF,MAGJ4rF,EAAM5lD,eAAe6lD,OACrBD,EAAM5lD,eAAe6lD,MAAMtnF,OAAS,GAGvBqnF,EAAM5lD,eAAe6lD,MAAM3gE,MAAMxY,GACpCA,EAAE1T,IAAMZ,KAAK8mC,YAEX,CACT9mC,KAAKotF,6BAA6B3zD,EAAQ1kB,OAAOnU,IAGjD,IAAI8sF,EAAW1tF,KAAKinB,QAAQkhB,oBACzBqlD,EAAM5sF,IAEL8sF,GACDA,EAASC,QAAQ3tF,KAEvB,CAEN,IAKTA,KAAKqC,SAASo3B,EACjB,CAQAp3B,SAASurF,GAuCHA,EAAWhmD,eAAezgC,MACQ,IAAlCymF,EAAWhmD,eAAezgC,OAE1BnH,KAAKoB,MAAQwsF,EAAWhmD,eAAezgC,KAI7C,oBCxIH,IAAI0mF,EAA2B,EAAQ,OAIvCpuF,EAAOC,QAAU,cAAmCmuF,EAcjDh0D,YAAYJ,GACTz5B,KAAK8mC,UAAYrN,EAAQ74B,IAAMZ,KAAK8mC,UACpC9mC,KAAKqC,SAASo3B,EACjB,CAQAp3B,SAASurF,GA6CN,GANGA,EAAWhmD,eAAezgC,MACQ,IAAlCymF,EAAWhmD,eAAezgC,OAE1BnH,KAAKoB,MAAQwsF,EAAWhmD,eAAezgC,MAGtCymF,EAAWL,SAAU,CACtB,IAAInnC,EAAU,GACdwnC,EAAWL,SAAStpF,SAASV,IACZ,aAAVA,EAAE3B,MACHwkD,EAAQ9hD,KAAKf,EAAE3C,GAClB,IAEHZ,KAAKomD,QAAUA,CAClB,CACH,CAQA0nC,oBACG,MAAO,CACJ,CACGltF,GAAIZ,KAAK8mC,UACTrlB,IAAK,CACFta,KAAMnH,KAAKmH,OAIvB,oBC3GH,MAAM4mF,EAAuB,EAAQ,OAErCtuF,EAAOC,QAAU,cAA+BquF,EAY7Cn5E,UASG,OAAO9U,MAAM8U,UAAUJ,MAAK,IAClBxU,KAAKinB,QAAQmhB,cAAcpoC,OAExC,CAEAuF,UA4BG,OAAO,CACV,CAMAyoF,SAAS71D,EAAMle,GACPke,EAMDA,EAAKs1D,OAASt1D,EAAKs1D,MAAMtnF,OAAS,EACnC8T,EAAG,KAAMke,EAAKs1D,MAAM,IACE,oBAAdt1D,EAAKsvB,MAEbxtC,EAAG,KAAMke,IAGTA,EAAOA,EAAKnL,QACZhtB,KAAKguF,SAAS71D,EAAMle,IAbpBA,EAAG,KAAM,KAef,CAEA0zE,QAAQM,GACLjuF,KAAK2nD,cAAgBsmC,EAAKnnD,SAC7B,CAOAjN,YAAYJ,GACTz5B,KAAK8mC,UAAYrN,EAAQ74B,IAAMZ,KAAK8mC,UACpC9mC,KAAKqC,SAASo3B,EACjB,CAQAp3B,SAASurF,GA8CHA,EAAWhmD,eAAezgC,MACQ,IAAlCymF,EAAWhmD,eAAezgC,OAE1BnH,KAAKoB,MAAQwsF,EAAWhmD,eAAezgC,MAI1C,IAAI+mF,EAAUN,EAAWhmD,eACzB5nC,KAAKguF,SAASE,GAAS,CAAC/lF,EAAK2P,KACtBA,EACD9X,KAAK2nD,cAAgB7vC,EAAIlX,GAItBgtF,EAAW74E,QACe,oBAA1B64E,EAAW74E,OAAOnT,KAElB5B,KAAK2nD,cAAgBimC,EAAW74E,OAAOnU,GAEvCZ,KAAK2nD,cAAgB,IAE3B,GAEN,CAQAmmC,oBACG,MAAMvkB,EAAWvpE,KAAKupE,WACtB,MAAO,CACJ,CACG3oE,GAAIZ,KAAK8mC,UACTrlB,IAAK,CACFta,KAAMnH,KAAKmH,MAEdsB,KAAM8gE,EAASpjE,OAASojE,EAAW,MAG5C,CAQA4kB,eAAevtF,GACZ,IAAIH,EAAK,CACNG,GAAIA,EACJF,KAAM,QACNU,MAAO,iDAGVqC,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAwpF,gBAAgBxtF,GAAK,CAOrBytF,SAASztF,GACN,GAAI+C,GAAG/C,GACJ,OAAO+C,GAAG/C,GAAIqL,UAEpB,CAUAqiF,SAASd,EAAOe,GAEbvuF,KAAKinB,QAAQmhB,cAAcpoC,MAG3BA,KAAKinB,QAAQghB,WAAWulD,GAGxBA,EAAMW,eAAeI,GAErBvuF,KAAKwP,KAAK,WAAYg+E,EACzB,CASAtkB,eACGppE,MAAMopE,eACNlpE,KAAKqmC,iBAIArmC,KAAKioD,aACuBjoD,KAAKinB,QAAQsgB,oBACxCvnC,KAAK8mC,WAEkB3gC,OAAS,GAChCnG,KAAKuwD,eAAe,0CAG7B,CAMAA,eAAexxC,EAAKlV,EAAO,CAAC,GACzB,IAAIyH,EAAU,GAAGtR,KAAKoE,SAASC,OAC5BrE,KAAKoB,MAAQpB,KAAKoB,MAAQpB,KAAKmH,UAC5B4X,IACN/e,KAAKmpE,UAAU7kE,KAAK,CAAEgN,UAASzH,QAClC,oBC1RH,MAAM2kF,EAAmB,EAAQ,OAEjC/uF,EAAOC,QAAU,cAA2B8uF,qBCF5C,MAAMC,EAAgC,EAAQ,OAI9ChvF,EAAOC,QAAU,cAAwC,EAatDouF,oBAEG,IAAIY,EAAa5uF,MAAMguF,oBAuBvB,OAX4B9tF,KAAKinB,QAAQsgB,oBACtCvnC,KAAK8mC,WAEc7iC,SAAS+kC,IAC5B0lD,EAAWpqF,KAAK,CACb1D,GAAIooC,EAAKpoC,GACT6gB,IAAK,CACFta,KAAMnH,KAAKgtC,WAAWhE,EAAKpoC,KAAKQ,OAAS,KAE7C,IAEEstF,CACV,CAEAxlB,eACGppE,MAAMopE,eAGN,MAAMylB,EAAwB3uF,KAAKinB,QAAQsgB,oBACxCvnC,KAAK8mC,WAEJ6nD,EAAsBxoF,OAAS,GAChCnG,KAAKuwD,eAAe,6CAKvB,IAAIq+B,EAAiB,EACrBD,EAAsB1qF,SAASV,IACmC,IAA1DvD,KAAKgtC,WAAWzpC,EAAE3C,KAAKkgF,YAAY3/D,OAAOhb,QAAU,IACtDyoF,GACH,IAGCA,EAAiB,GAClB5uF,KAAKuwD,eACF,qDAGT,oBCpEH,MAAMs+B,EAAyB,EAAQ,OAEvCpvF,EAAOC,QAAU,cAAiCmvF,EAK/C3lB,eACGppE,MAAMopE,eAIDlpE,KAAKsqD,SACPtqD,KAAKuwD,eAAe,wBAGlBvwD,KAAKsR,SACPtR,KAAKuwD,eAAe,wBAGvBvwD,KAAK8uF,cAAc,MACnB9uF,KAAK8uF,cAAc,QACnB9uF,KAAK+uF,eAAe,MACH,KAAb/uF,KAAKwnC,OACSxnC,KAAKmoD,UAEjBnoD,KAAKuwD,eACF,4DAITvwD,KAAKgvF,kBAAkB,KAAM,WAC7BhvF,KAAKgvF,kBAAkB,OAAQ,YAClC,CAQAF,cAAczqF,GACM,IAAbrE,KAAKqE,IACNrE,KAAKuwD,eAAe,oBAAoBlsD,cAE9C,CAUA0qF,eAAe1qF,GACZ,GAAkB,MAAdrE,KAAKqE,GAAc,CAIpB,IAAIgkD,EAAYroD,KAAKinB,QAAQshB,mBAAmBvoC,MAC5CivF,GAAoB,EACxB5mC,EAAUpkD,SAAS04B,IACLA,EAAEwrB,WAEV8mC,GAAoB,EACvB,IAEEA,GAAyC,GAApB5mC,EAAUliD,QACjCnG,KAAKuwD,eACF,8CAA8ClsD,YAGvD,CACH,CAWA2qF,kBAAkB3qF,EAAK6qF,GACH,KAAblvF,KAAKqE,IACFrE,KAAKkvF,KACFlvF,KAAKkvF,GAAQ3pE,SACkB,GAA5BvlB,KAAKkvF,GAAQ1pE,KAAKrf,QACnBnG,KAAKuwD,eAAe,oBAAoBlsD,oBAG1CrE,KAAKkvF,GAAQ5oC,YACqB,GAA/BtmD,KAAKkvF,GAAQ3oC,QAAQpgD,QACtBnG,KAAKuwD,eACF,oBAAoBlsD,uBAUtC,oBC5GH,MAAM8qF,EAA2B,EAAQ,OAEzC1vF,EAAOC,QAAU,cAAmCyvF,qBCFpD,MAAMC,EAAgC,EAAQ,MAE9C,IAAIrvF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAwC,EAOtD2vF,YAAYzuF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACT0uF,kBAAmB,GAAG1uF,sBACtB2uF,YAAa,GAAG3uF,gBAChB4uF,kBAAmB,GAAG5uF,sBACtB6uF,0BAA2B,GAAG7uF,8BAC9B8uF,SAAU,GAAG9uF,aACb+uF,eAAgB,GAAG/uF,mBACnBgvF,UAAW,GAAGhvF,cACdivF,cAAe,GAAGjvF,kBAClBkvF,sBAAuB,GAAGlvF,0BAC1BmvF,SAAU,GAAGnvF,aACbovF,uBAAwB,GAAGpvF,2BAC3BqvF,eAAgB,GAAGrvF,mBACnBsvF,UAAW,GAAGtvF,cACduvF,eAAgB,GAAGvvF,mBAEzB,CAQAutF,eAAevtF,GACZ,IAAIV,EAAMF,KAAKqvF,YAAYzuF,GAEvBwvF,EAAgB,CAAC,CAAExvF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAKinB,QAAQ6hB,kBAAkB9oC,OACjC,IAAIiE,SAASib,IAChCkxE,EAAc9rF,KAAK,CAAE1D,GAAIse,EAAI7a,IAAK1B,MAAOuc,EAAI9d,OAAQ,IAGxD,IAAIivF,EAAarwF,KAAK+B,GAAGokB,UAAUhY,KAAK2X,IAC9B,CAAEllB,GAAIklB,EAAEllB,GAAI+B,MAAOmjB,EAAE1kB,OAAS0kB,EAAE3e,KAAMlC,OAAQ6gB,MAExDuqE,EAAWxjD,QAAQ,CAChBjsC,GAAI,EACJ+B,MAAO5C,EAAE,sBAOZ,IAAIuwF,EAAa,CACd1vF,GAAI,EACJ+B,MAAO5C,EAAE,mBAIZ,SAASwwF,EAAczrD,GAGpB,IAAI/9B,EAAS,CAACupF,GACd,GAAIxrD,EAAO,CACR,IAAI5qB,EAAQm2E,EAAWvjE,MAAMhH,GAAMA,EAAEllB,IAAMkkC,IACvC5qB,GAASA,EAAMjV,QAChBiV,EAAMjV,OAAO8B,SAAS9C,SAAS+C,IAC5BD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG5D,CACA,OAAOD,CACV,CAEA,SAASypF,EAAaC,EAAcC,EAAahuD,GAG9C+tD,EAAaxsF,SAAS0sF,IACnB,IAAIC,EAASjtF,GAAGgtF,GACZC,IACDA,EAAOnsF,OAAO,UAAWisF,GAMzBE,EAAOlsF,UACPksF,EAAOhsF,OACV,GAEN,CAEA,IAAIisF,EAAcN,EAAcvwF,KAAKuvF,aAGjCuB,EAAoB,CACrB5wF,EAAIsvF,kBACJtvF,EAAIuvF,2BAKHsB,EAAWR,EAAcvwF,KAAK0vF,UAG9BsB,EAAiB,CAClB9wF,EAAIyvF,eACJzvF,EAAI0vF,UACJ1vF,EAAI2vF,eAKP,SAASoB,EAAoBC,GAC1B,IAAIvrF,EAAS,CAAC,CAAE/E,GAAI,EAAG+B,MAAO5C,EAAE,+BAMhC,OALImxF,GAAeA,EAAY/uF,SAC5B+uF,EAAY/uF,UAAU8B,SAAS6hB,IAC5BngB,EAAOrB,KAAK,CAAE1D,GAAIklB,EAAEllB,GAAI+B,MAAOmjB,EAAEzX,MAAO,IAGvC1I,CACV,CAaA,SAASwrF,EAAiBlY,GAEvB,IAbiCtzE,EAC7ByrF,EAYAC,EAAY1tF,GAAGzD,EAAIwvF,UAAUzjF,WAC7BqlF,EAAUjB,EAAWvjE,MAAMhH,GAAMA,EAAEllB,IAAMywF,IAC7C,GAAIC,GAAWA,EAAQrsF,OAAQ,CAC5B,IAAIisF,EAAcI,EAAQrsF,OAAO8I,UAAUkrE,GACvCiY,GAAeA,EAAY/uF,UAjBDwD,EAmB3B4rF,EAAsBN,EAAoBC,IAlB5CE,EAAcztF,GAAGzD,EAAI4vF,0BAGtBsB,EAAY3sF,OAAO,UAAWkB,GAC9ByrF,EAAY1sF,UAEZ0sF,EAAYxsF,QAgBf,CACH,CAEA,IAAI2sF,EAAsBN,IAItBO,EAAWjB,EAAcvwF,KAAK+vF,UAG9B0B,EAAiB,CAClBvxF,EAAI8vF,uBACJ9vF,EAAI+vF,eACJ/vF,EAAIgwF,UACJhwF,EAAIiwF,gBAKH1vF,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNwI,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAIovF,kBACR5uF,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAKsvF,kBACZnoF,KAAM,oBACNhF,QAASiuF,GAEZ,CACGxvF,GAAIV,EAAIqvF,YACR7uF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKuvF,YACZpoF,KAAM,cACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAS42E,EAAQC,GACVD,GAAUC,IAEX2X,EAAcN,EAActX,GAE5BuX,EAAaM,EAAmBD,GAEtC,IAGN,CACGjwF,GAAIV,EAAIsvF,kBACR9uF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKwvF,kBACZroF,KAAM,oBACNhF,QAAS0uF,EACThc,QAAQ,GAEX,CACGj0E,GAAIV,EAAIuvF,0BACR/uF,KAAM,SACNU,MAAOrB,EAAE,0BACT4C,MAAO3C,KAAKyvF,0BACZtoF,KAAM,4BACNhF,QAAS0uF,EACThc,QAAQ,GAEX,CACGj0E,GAAIV,EAAIwvF,SACRhvF,KAAM,SACNU,MAAOrB,EAAE,wBACT4C,MAAO3C,KAAK0vF,SACZvoF,KAAM,WACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAS42E,EAAQC,GACVD,GAAUC,IAEX6X,EAAWR,EAActX,GAEzBuX,EAAaQ,EAAgBD,GAEnC,IAGN,CACGnwF,GAAIV,EAAIyvF,eACRjvF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAK2vF,eACZxoF,KAAM,iBACNhF,QAAS4uF,EACTlc,QAAQ,GAEX,CACGj0E,GAAIV,EAAI0vF,UACRlvF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAK4vF,UACZzoF,KAAM,YACNhF,QAAS4uF,EACTlc,QAAQ,GAEX,CACGj0E,GAAIV,EAAI2vF,cACRnvF,KAAM,SACNU,MAAOrB,EAAE,cACT4C,MAAO3C,KAAK6vF,cACZ1oF,KAAM,gBACNhF,QAAS4uF,EACTlc,QAAQ,EACRzyE,GAAI,CACDC,SAAS42E,EAAQC,GACVD,GAAUC,GACXiY,EAAiBlY,EAEvB,IAGN,CACGr4E,GAAIV,EAAI4vF,sBACRpvF,KAAM,SACNU,MAAOrB,EAAE,wBACT4C,MAAO3C,KAAK8vF,sBACZ3oF,KAAM,wBACNhF,QAASovF,EACT1c,QAAQ,GAEX,CACGj0E,GAAIV,EAAI6vF,SACRrvF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK+vF,SACZ5oF,KAAM,WACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAS42E,EAAQC,GACVD,GAAUC,IAEXsY,EAAWjB,EAActX,GAEzBuX,EAAaiB,EAAgBD,GAEnC,IAGN,CACG5wF,GAAIV,EAAI8vF,uBACRtvF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAKgwF,uBACZ7oF,KAAM,yBACNhF,QAASqvF,EACT3c,QAAQ,GAEX,CACGj0E,GAAIV,EAAI+vF,eACRvvF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKiwF,eACZ9oF,KAAM,iBACNhF,QAASqvF,EACT3c,QAAQ,GAEX,CACGj0E,GAAIV,EAAIgwF,UACRxvF,KAAM,SACNU,MAAOrB,EAAE,UACT4C,MAAO3C,KAAKkwF,UACZ/oF,KAAM,YACNhF,QAASqvF,EACT3c,QAAQ,GAEX,CACGj0E,GAAIV,EAAIiwF,eACRzvF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKmwF,eACZhpF,KAAM,iBACNhF,QAASqvF,EACT3c,QAAQ,KAKjBpxE,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAIZZ,KAAKuvF,aAAmC,GAApBvvF,KAAKuvF,aAC1BiB,EAAaM,EAAmBD,GAG/B7wF,KAAK0vF,UAA6B,GAAjB1vF,KAAK0vF,UACvBc,EAAaQ,EAAgBD,GAG5B/wF,KAAK6vF,eACNsB,EAAiBnxF,KAAK6vF,eAGrB7vF,KAAK+vF,UAA6B,GAAjB/vF,KAAK+vF,UACvBS,EAAaiB,EAAgBD,GAGhC7tF,GAAG/C,GAAIgE,MACV,CAQAwpF,gBAAgBxtF,GACb,IAAIV,EAAMF,KAAKqvF,YAAYzuF,GAC3BZ,KAAKmH,KAAOnH,KAAKquF,SAASnuF,EAAIiH,MAE9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKquF,SAASnuF,EAAI0M,GAAG,GAErC,oBC3XH,MAAM8kF,EAAwB,EAAQ,OAEtC,IAAI3xF,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAgCgyF,EAK9CrC,YAAYzuF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACT+wF,eAAgB,GAAG/wF,mBACnBgxF,SAAU,GAAGhxF,aACbixF,SAAU,GAAGjxF,aACbkxF,UAAW,GAAGlxF,cACdmxF,aAAc,GAAGnxF,iBACjBoxF,YAAa,GAAGpxF,gBAChBqxF,cAAe,GAAGrxF,kBAClBsxF,cAAe,GAAGtxF,kBAClBuxF,gBAAiB,GAAGvxF,oBACpBwxF,eAAgB,GAAGxxF,mBACnByxF,eAAgB,GAAGzxF,mBACnB0xF,UAAW,GAAG1xF,cACd2xF,aAAc,GAAG3xF,gBACjB4xF,cAAe,GAAG5xF,kBAClB6xF,aAAc,GAAG7xF,iBACjB8xF,cAAe,GAAG9xF,kBAClB+xF,gBAAiB,GAAG/xF,oBACpBgyF,oBAAqB,GAAGhyF,wBACxBiyF,eAAgB,GAAGjyF,mBACnBkyF,eAAgB,GAAGlyF,mBAEzB,CAQAutF,eAAevtF,GACZ,IAAIV,EAAMF,KAAKqvF,YAAYzuF,GAEvBwvF,EAAgB,CAAC,CAAExvF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAKinB,QAAQ6hB,kBAAkB9oC,OACjC,IAAIiE,SAASib,IAChCkxE,EAAc9rF,KAAK,CAAE1D,GAAIse,EAAI7a,IAAK1B,MAAOuc,EAAI9d,OAAQ,IAGxD,IAAIivF,EAAarwF,KAAK+B,GAAGokB,UAAUhY,KAAK2X,IAC9B,CAAEllB,GAAIklB,EAAEllB,GAAI+B,MAAOmjB,EAAE1kB,OAAS0kB,EAAE3e,KAAMlC,OAAQ6gB,MAExDuqE,EAAWxjD,QAAQ,CAChBjsC,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAIgzF,EAAmBjuD,IACpB,IAAI/9B,EAAS,CACV,CACGnG,GAAI,EACJ+B,MAAO5C,EAAE,oBAIf,GAAI+kC,EAAO,CACR,IAAI5qB,EAAQm2E,EAAWvjE,MAAMhH,GAAMA,EAAEllB,IAAMkkC,IACvC5qB,GAASA,EAAMjV,QAChBiV,EAAMjV,OAAO8B,SAAS9C,SAAS+C,IAC5BD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG5D,CACA,OAAOD,CAAM,EAGZisF,EAAyBC,IAC1B,IAAInlF,EAAS,GACTolF,EAAWlzF,KAAK+B,GAAGgW,WAAW/X,KAAK4xF,UACvC,IAAKsB,EAAU,OAAOplF,EAEtB,IAAIqlF,EAAgBD,EAASnlF,UAAUklF,GACvC,OACIE,GACAA,EAAc/sF,UACd+sF,EAAc/sF,SAASjE,SAI3B2L,GAAUqlF,EAAc/sF,SAASjE,SAAW,IAAIgM,KAAK8wC,IAC3C,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,SAIVP,GATGA,CASG,EAgDZslF,EAAiB,CAACp7E,EAAUtN,KAC7B,IAAIoD,EAAS,GACT7I,EAASjF,KAAK+B,GAAGgW,WAAWC,GAChC,IAAK/S,EAAQ,OAAO6I,EAEpB,IAAIqlF,EAAgBluF,EAAO8I,UAAUrD,GACrC,OACIyoF,GACAA,EAAc/sF,UACd+sF,EAAc/sF,SAASjE,SAI3B2L,GAAUqlF,EAAc/sF,SAASjE,SAAW,IAAIgM,KAAK8wC,IAC3C,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,SAIVP,GATGA,CASG,EAGZulF,EAAWN,EAAgB/yF,KAAK4xF,UAChC0B,EAAWP,EAAgB/yF,KAAK6xF,UAChC0B,EAAYR,EAAgB/yF,KAAK8xF,WACjC0B,EAAiBR,EAAsBhzF,KAAKiyF,eAC5CwB,EAAiBL,EAAepzF,KAAK8xF,UAAW9xF,KAAKyyF,cAEzD,IAAIhyF,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNgzF,eAAgB,CACb5xF,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAIyxF,eACRjxF,KAAM,SACNU,MAAOrB,EAAE,+BACT4C,MAAO3C,KAAK2xF,eACZxqF,KAAM,iBACNhF,QAASiuF,GAEZ,CACGxvF,GAAIV,EAAI0xF,SACRlxF,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAK4xF,SACZzqF,KAAM,WACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAS42E,EAAQC,GACVD,GAAUC,IAEXma,EAAWN,EAAgB9Z,GA3GxB,CAACoa,IACnB,CAACnzF,EAAI6xF,aAAc7xF,EAAI8xF,YAAa9xF,EAAI+xF,eAAehuF,SACnD0vF,IACEhwF,GAAGgwF,GAAalvF,OAAO,UAAW4uF,GAClC1vF,GAAGgwF,GAAajvF,SAAS,GAE9B,EAuGckvF,CAAeP,GAErB,IAGN,CACGzyF,GAAIV,EAAI2xF,SACRnxF,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAK6xF,SACZ1qF,KAAM,WACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAS42E,EAAQC,GACVD,GAAUC,IAEXoa,EAAWP,EAAgB9Z,GA/GxB,CAACqa,IACnB,CACGpzF,EAAIkyF,eACJlyF,EAAImyF,eACJnyF,EAAIoyF,UACJpyF,EAAIqyF,aACJryF,EAAIsyF,eACLvuF,SAAS0vF,IACRhwF,GAAGgwF,GAAalvF,OAAO,UAAW6uF,GAClC3vF,GAAGgwF,GAAajvF,SAAS,GAC1B,EAuGamvF,CAAeP,GAErB,IAGN,CACG1yF,GAAIV,EAAI4xF,UACRpxF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK8xF,UACZ3qF,KAAM,YACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAS42E,EAAQC,GACVD,GAAUC,IACXqa,EAAYR,EAAgB9Z,GAnHxB,CAACsa,IACpB5vF,GAAGzD,EAAIuyF,cAAchuF,OAAO,UAAW8uF,GACvC5vF,GAAGzD,EAAIuyF,cAAc/tF,SAAS,EAkHfovF,CAAgBP,GAEtB,IAGN,CACG3yF,GAAIV,EAAI6xF,aACRrxF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAK+xF,aACZ5qF,KAAM,eACNhF,QAASkxF,GAEZ,CACGzyF,GAAIV,EAAI8xF,YACRtxF,KAAM,SACNU,MAAOrB,EAAE,cACT4C,MAAO3C,KAAKgyF,YACZ7qF,KAAM,cACNhF,QAASkxF,GAEZ,CACGzyF,GAAIV,EAAI+xF,cACRvxF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKiyF,cACZ9qF,KAAM,gBACNhF,QAASkxF,EACTjxF,GAAI,CACDC,SAAS42E,EAAQC,GAnKF,IAAC6a,EAoKT9a,GAAUC,IACXsa,EAAiBR,EAAsB/Z,GArK7B8a,EAsKWP,EArKpC7vF,GAAGzD,EAAIgyF,eAAeztF,OAAO,UAAWsvF,GACxCpwF,GAAGzD,EAAIgyF,eAAextF,UAsKb,IAGN,CACG9D,GAAIV,EAAIgyF,cACRxxF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKkyF,cACZ/qF,KAAM,gBACNhF,QAASqxF,GAEZ,CACG5yF,GAAIV,EAAIiyF,gBACRzxF,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAKmyF,gBACZhrF,KAAM,kBACNhF,QAASmxF,GAEZ,CACG1yF,GAAIV,EAAIkyF,eACR1xF,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAKoyF,eACZjrF,KAAM,iBACNhF,QAASmxF,GAEZ,CACG1yF,GAAIV,EAAImyF,eACR3xF,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKqyF,eACZlrF,KAAM,iBACNhF,QAASmxF,GAEZ,CACG1yF,GAAIV,EAAIoyF,UACR5xF,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAKsyF,UACZnrF,KAAM,YACNhF,QAASmxF,GAEZ,CACG1yF,GAAIV,EAAIqyF,aACR7xF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKuyF,aACZprF,KAAM,eACNhF,QAASmxF,GAEZ,CACG1yF,GAAIV,EAAIsyF,cACR9xF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKwyF,cACZrrF,KAAM,gBACNhF,QAASmxF,GAEZ,CACG1yF,GAAIV,EAAIuyF,aACR/xF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKyyF,aACZtrF,KAAM,eACNhF,QAASoxF,EACTnxF,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KACZD,GAAUC,IACXua,EAAiBL,EACdpzF,KAAK8xF,WAAanuF,GAAGzD,EAAI4xF,WAAW7lF,WACpCgtE,GAxNM,CAACwa,IACzB,CACGvzF,EAAIwyF,cACJxyF,EAAIyyF,gBACJzyF,EAAI0yF,oBACJ1yF,EAAI2yF,eACJ3yF,EAAI4yF,gBACL7uF,SAAS0vF,IACRhwF,GAAGgwF,GAAalvF,OAAO,UAAWgvF,GAClC9vF,GAAGgwF,GAAajvF,SAAS,GAC1B,EAgNasvF,CAAqBP,GACxB,IAIT,CACG7yF,GAAIV,EAAIwyF,cACRhyF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAK0yF,cACZvrF,KAAM,gBACNhF,QAASsxF,GAEZ,CACG7yF,GAAIV,EAAIyyF,gBACRjyF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK2yF,gBACZxrF,KAAM,kBACNhF,QAASsxF,GAEZ,CACG7yF,GAAIV,EAAI0yF,oBACRlyF,KAAM,SACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAK4yF,oBACZzrF,KAAM,sBACNhF,QAASsxF,GAEZ,CACG7yF,GAAIV,EAAI2yF,eACRnyF,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAK6yF,eACZ1rF,KAAM,iBACNhF,QAASsxF,GAEZ,CACG7yF,GAAIV,EAAI4yF,eACRpyF,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAK8yF,eACZ3rF,KAAM,iBACNhF,QAASsxF,KAKlBhwF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAwpF,gBAAgBxtF,GACb,IAAIV,EAAMF,KAAKqvF,YAAYzuF,GAC3BZ,KAAKmH,KAAOnH,KAAKquF,SAASnuF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKquF,SAASnuF,EAAI0M,GAAG,GAErC,oBClaH,MAAMqnF,EAA4B,EAAQ,OAE1C,IAAIl0F,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAoCu0F,EAIlD5E,YAAYzuF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACTszF,mBAAoB,GAAGtzF,uBACvBuzF,aAAc,GAAGvzF,iBACjBwzF,cAAe,GAAGxzF,kBAClBixF,SAAU,GAAGjxF,aACbyzF,cAAe,GAAGzzF,kBAClB0zF,kBAAmB,GAAG1zF,sBACtB2zF,eAAgB,GAAG3zF,mBACnB4zF,iBAAkB,GAAG5zF,qBACrB6zF,eAAgB,GAAG7zF,mBACnB8zF,kBAAmB,GAAG9zF,sBACtB+zF,kBAAmB,GAAG/zF,sBACtBg0F,kBAAmB,GAAGh0F,sBACtBi0F,gBAAiB,GAAGj0F,oBACpBk0F,oBAAqB,GAAGl0F,wBACxBm0F,sBAAuB,GAAGn0F,0BAC1Bo0F,UAAW,GAAGp0F,cACdq0F,eAAgB,GAAGr0F,mBACnB6xF,aAAc,GAAG7xF,iBACjBs0F,mBAAoB,GAAGt0F,uBACvBu0F,oBAAqB,GAAGv0F,wBACxBw0F,mBAAoB,GAAGx0F,uBAE7B,CAQAutF,eAAevtF,GACZ,IAAIV,EAAMF,KAAKqvF,YAAYzuF,GAEvBwvF,EAAgB,CAAC,CAAExvF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAKinB,QAAQ6hB,kBAAkB9oC,OACjC,IAAIiE,SAASib,IAChCkxE,EAAc9rF,KAAK,CAAE1D,GAAIse,EAAI7a,IAAK1B,MAAOuc,EAAI9d,OAAQ,IAGxD,IAAIivF,EAAarwF,KAAK+B,GAAGokB,UAAUhY,KAAK2X,IAC9B,CAAEllB,GAAIklB,EAAEllB,GAAI+B,MAAOmjB,EAAE1kB,OAAS0kB,EAAE3e,KAAMlC,OAAQ6gB,MAExDuqE,EAAWxjD,QAAQ,CAChBjsC,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAIgzF,EAAkB,CAACjuD,EAAOp7B,KAC3B,IAAI3C,EAAS,CACV,CACGnG,GAAI,EACJ+B,MAAO5C,EAAE,oBAIf,GAAI+kC,EAAO,CACR,IAAI5qB,EAAQm2E,EAAWvjE,MAAMhH,GAAMA,EAAEllB,IAAMkkC,IACvC5qB,GAASA,EAAMjV,QAChBiV,EAAMjV,OACF8B,QAAQC,GAAMA,EAAE3C,KAAOqF,IACvBzF,SAAS+C,IACPD,EAAOzC,KAAK,CAAE1D,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG/D,CACA,OAAOD,CAAM,EAGZqsF,EAAiB,CAACp7E,EAAUtN,KAC7B,IAAIoD,EAAS,GACT7I,EAASjF,KAAK+B,GAAGgW,WAAWC,GAChC,IAAK/S,EAAQ,OAAO6I,EAEpB,IAAIqlF,EAAgBluF,EAAO8I,UAAUrD,GACrC,OACIyoF,GACAA,EAAc/sF,UACd+sF,EAAc/sF,SAASjE,SAI3B2L,GAAUqlF,EAAc/sF,SAASjE,SAAW,IAAIgM,KAAK8wC,IAC3C,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,SAIVP,GATGA,CASG,EA8DZunF,EAAmBtC,EAAgB/yF,KAAKm0F,aAAc,QACtDmB,EAAqBvC,EAAgB/yF,KAAKm0F,aAAc,QACxDoB,EAAsBnC,EACvBpzF,KAAKm0F,aACLn0F,KAAK00F,mBAEJc,EAAoBzC,EAAgB/yF,KAAKo0F,cAAe,QACxDqB,EAAiB1C,EAAgB/yF,KAAK6xF,SAAU,UAChD6D,EAAa3C,EAAgB/yF,KAAK6xF,SAAU,iBAC5C8D,EAAkB5C,EAAgB/yF,KAAKq0F,cAAe,UACtDuB,EAAgB7C,EAAgB/yF,KAAKq0F,cAAe,QACpDZ,EAAiBL,EAClBpzF,KAAKq0F,cACLr0F,KAAKyyF,cAGR,IAAIhyF,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNgzF,eAAgB,CACb5xF,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAIg0F,mBACRxzF,KAAM,SACNU,MAAOrB,EAAE,oCACT4C,MAAO3C,KAAKk0F,mBACZ/sF,KAAM,qBACNhF,QAASiuF,GAEZ,CACGxvF,GAAIV,EAAIi0F,aACRzzF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKm0F,aACZhtF,KAAM,eACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KApFD,IAAC2c,EAqFZ5c,GAAUC,IACXmc,EAAmBtC,EAAgB9Z,EAAQ,QAtF9B4c,EAuFWR,EAtFvC,CAACn1F,EAAIs0F,iBAAkBt0F,EAAIu0F,gBAAgBxwF,SAAS0vF,IACjDhwF,GAAGgwF,GAAalvF,OAAO,UAAWoxF,GAClClyF,GAAGgwF,GAAajvF,SAAS,IAsFbkxF,EAAgB7C,EAAgB9Z,EAAQ,QAlF1B,CAACqc,IAC9B3xF,GAAGzD,EAAIw0F,mBAAmBjwF,OAAO,UAAW6wF,GAC5C3xF,GAAGzD,EAAIw0F,mBAAmBhwF,SAAS,EAiFpBoxF,CAA0BF,GAC7B,IAIT,CACGh1F,GAAIV,EAAIk0F,cACR1zF,KAAM,SACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAKo0F,cACZjtF,KAAM,gBACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KAtFD,IAAC6c,EAuFZ9c,GAAUC,IACXsc,EAAoBzC,EAAgB9Z,EAAQ,QAxF/B8c,EAyFWP,EAxFvC,CAACt1F,EAAI00F,kBAAmB10F,EAAI20F,iBAAiB5wF,SAAS0vF,IACnDhwF,GAAGgwF,GAAalvF,OAAO,UAAWsxF,GAClCpyF,GAAGgwF,GAAajvF,SAAS,IAuFhB,IAIT,CACG9D,GAAIV,EAAI2xF,SACRnxF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAK6xF,SACZ1qF,KAAM,WACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KAtFH,IAAC8c,EATDC,EAgGThd,GAAUC,IACXuc,EAAiB1C,EAAgB9Z,EAAQ,UAjG/Bgd,EAkGWR,EAjGpC,CAACv1F,EAAI40F,oBAAqB50F,EAAI60F,uBAAuB9wF,SACjD0vF,IACEhwF,GAAGgwF,GAAalvF,OAAO,UAAWwxF,GAClCtyF,GAAGgwF,GAAajvF,SAAS,IAgGhBgxF,EAAa3C,EAAgB9Z,EAAQ,iBA3F1B+c,EA4FWN,EA3FrC/xF,GAAGzD,EAAI80F,WAAWvwF,OAAO,UAAWuxF,GACpCryF,GAAGzD,EAAI80F,WAAWtwF,UA2FN,IAIT,CACG9D,GAAIV,EAAIm0F,cACR3zF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKq0F,cACZltF,KAAM,gBACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KA1JT,IAACqa,EA2JJta,GAAUC,IACX0c,EAAgB7C,EAAgB9Z,EAAQ,QA5JnCsa,EA6JWqC,EA5J/BjyF,GAAGzD,EAAIuyF,cAAchuF,OAAO,UAAW8uF,GACvC5vF,GAAGzD,EAAIuyF,cAAc/tF,UA6JNixF,EAAkB5C,EAAgB9Z,EAAQ,UApKhC,CAAC0c,IAC1BhyF,GAAGzD,EAAI+0F,gBAAgBxwF,OAAO,UAAWkxF,GACzChyF,GAAGzD,EAAI+0F,gBAAgBvwF,SAAS,EAmKjBwxF,CAAsBP,GACzB,IAIT,CACG/0F,GAAIV,EAAIo0F,kBACR5zF,KAAM,OACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAKs0F,kBACZntF,KAAM,qBAET,CACGvG,GAAIV,EAAIq0F,eACR7zF,KAAM,OACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAKu0F,eACZptF,KAAM,kBAET,CACGvG,GAAIV,EAAIs0F,iBACR9zF,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAKw0F,iBACZrtF,KAAM,mBACNhF,QAASkzF,GAEZ,CACGz0F,GAAIV,EAAIu0F,eACR/zF,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKy0F,eACZttF,KAAM,iBACNhF,QAASkzF,GAEZ,CACGz0F,GAAIV,EAAIw0F,kBACRh0F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAK00F,kBACZvtF,KAAM,oBACNhF,QAASmzF,EACTlzF,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KACZD,GAAUC,IACXqc,EAAsBnC,EACnBpzF,KAAKm0F,cAAgBxwF,GAAGzD,EAAIi0F,cAAcloF,WAC1CgtE,GAnLW,CAACsc,IAC9B5xF,GAAGzD,EAAIy0F,mBAAmBlwF,OAAO,UAAW8wF,GAC5C5xF,GAAGzD,EAAIy0F,mBAAmBjwF,SAAS,EAmLpByxF,CAA0BZ,GAC7B,IAIT,CACG30F,GAAIV,EAAIy0F,kBACRj0F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAK20F,kBACZxtF,KAAM,oBACNhF,QAASozF,GAEZ,CACG30F,GAAIV,EAAI00F,kBACRl0F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAK40F,kBACZztF,KAAM,oBACNhF,QAASqzF,GAEZ,CACG50F,GAAIV,EAAI20F,gBACRn0F,KAAM,SACNU,MAAOrB,EAAE,mBACT4C,MAAO3C,KAAK60F,gBACZ1tF,KAAM,kBACNhF,QAASqzF,GAEZ,CACG50F,GAAIV,EAAI40F,oBACRp0F,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAK80F,oBACZ3tF,KAAM,sBACNhF,QAASszF,GAEZ,CACG70F,GAAIV,EAAI60F,sBACRr0F,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAK+0F,sBACZ5tF,KAAM,wBACNhF,QAASszF,GAEZ,CACG70F,GAAIV,EAAI80F,UACRt0F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAKg1F,UACZ7tF,KAAM,YACNhF,QAASuzF,GAEZ,CACG90F,GAAIV,EAAI+0F,eACRv0F,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAKi1F,eACZ9tF,KAAM,iBACNhF,QAASwzF,GAEZ,CACG/0F,GAAIV,EAAIuyF,aACR/xF,KAAM,SACNU,MAAOrB,EAAE,eACT4C,MAAO3C,KAAKyyF,aACZtrF,KAAM,eACNhF,QAASyzF,EACTxzF,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KACZD,GAAUC,IACXua,EAAiBL,EACdpzF,KAAKq0F,eACF1wF,GAAGzD,EAAIm0F,eAAepoF,WACzBgtE,GAtRM,CAACwa,IACzB,CACGvzF,EAAIg1F,mBACJh1F,EAAIi1F,oBACJj1F,EAAIk1F,oBACLnxF,SAAS0vF,IACRhwF,GAAGgwF,GAAalvF,OAAO,UAAWgvF,GAClC9vF,GAAGgwF,GAAajvF,SAAS,GAC1B,EAgRasvF,CAAqBP,GACxB,IAIT,CACG7yF,GAAIV,EAAIg1F,mBACRx0F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKk1F,mBACZ/tF,KAAM,qBACNhF,QAASsxF,GAEZ,CACG7yF,GAAIV,EAAIi1F,oBACRz0F,KAAM,SACNU,MAAOrB,EAAE,kBACT4C,MAAO3C,KAAKm1F,oBACZhuF,KAAM,sBACNhF,QAASsxF,GAEZ,CACG7yF,GAAIV,EAAIk1F,mBACR10F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKo1F,mBACZjuF,KAAM,qBACNhF,QAASsxF,KAKlBhwF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,MACV,CAQAwpF,gBAAgBxtF,GACb,IAAIV,EAAMF,KAAKqvF,YAAYzuF,GAC3BZ,KAAKmH,KAAOnH,KAAKquF,SAASnuF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAC7B5M,KAAK4M,GAAK5M,KAAKquF,SAASnuF,EAAI0M,GAAG,GAErC,oBC5bH,MAAMwpF,EAA0B,EAAQ,OAExC,IAAIr2F,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAkC02F,EAKhD/G,YAAYzuF,GACT,MAAO,CACJuG,KAAM,GAAGvG,SACT0uF,kBAAmB,GAAG1uF,sBACtB2uF,YAAa,GAAG3uF,gBAChBy1F,cAAe,GAAGz1F,kBAClB8uF,SAAU,GAAG9uF,aACb01F,gBAAiB,GAAG11F,oBAEpB21F,sBAAuB,GAAG31F,0BAC1B41F,eAAgB,GAAG51F,mBACnB61F,UAAW,GAAG71F,cACd81F,sBAAuB,GAAG91F,0BAC1B+1F,mBAAoB,GAAG/1F,uBACvBg2F,eAAgB,GAAGh2F,mBACnBi2F,UAAW,GAAGj2F,cAEdk2F,YAAa,GAAGl2F,gBAEtB,CAQAutF,eAAevtF,GACZ,IAAIV,EAAMF,KAAKqvF,YAAYzuF,GAEvBwvF,EAAgB,CAAC,CAAExvF,GAAI,EAAG+B,MAAO5C,EAAE,6BACfC,KAAKinB,QAAQ6hB,kBAAkB9oC,OACjC,IAAIiE,SAASib,IAChCkxE,EAAc9rF,KAAK,CAAE1D,GAAIse,EAAI7a,IAAK1B,MAAOuc,EAAI9d,OAAQ,IAGxD,IAAIivF,EAAarwF,KAAK+B,GAAGokB,UAAUhY,KAAK2X,IAC9B,CAAEllB,GAAIklB,EAAEllB,GAAI+B,MAAOmjB,EAAE1kB,OAAS0kB,EAAE3e,KAAMlC,OAAQ6gB,MAGxDuqE,EAAWxjD,QAAQ,CAChBjsC,GAAI,EACJ+B,MAAO5C,EAAE,sBAGZ,IAAIg3F,EAA0B/+E,IAC3B,IAAI/S,EAASjF,KAAK+B,GAAGgW,WAAWC,GAChC,IAAK/S,EAAQ,MAAO,GAEpB,IAAI9C,EAAU8C,EACV8B,QAAQC,GAAMA,EAAE25B,eAChBxyB,KAAKnH,IACI,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UASlB,OALAe,EAAQ0qC,QAAQ,CACbjsC,GAAI,EACJ+B,MAAO5C,EAAE,oBAGLoC,CAAO,EAGbquF,EAAe,CAACC,EAAcC,KAC/BD,EAAaxsF,SAAS0sF,IACnB,IAAIC,EAASjtF,GAAGgtF,GACZC,IACDA,EAAOnsF,OAAO,UAAWisF,GACzBE,EAAOlsF,UACPksF,EAAOhsF,OACV,GACD,EA0BDoyF,EAAqB,KACtB,IAAIC,EAAetzF,GAAGzD,EAAI42F,aAC1B,IAAKG,EAAc,OAGnBxzF,MAAMhD,GAAG,GAAIw2F,GAEb,IAAIC,EAAQl3F,KAAK+B,GAAGgW,WAAW/X,KAAK0vF,UACpC,IAAKwH,EAAO,OAEZ,IAAIC,EAAen3F,KAAK+B,GAAGgW,WAAW/X,KAAKs2F,iBACtCa,IAGLA,EAAapwF,SAAS9C,SAAS+C,IAC5B,IAAI+pF,EAAW,GAGZA,EADC/pF,EAAE25B,aACQu2D,EAAMnwF,QAAQqwF,GAEnBA,EAAIz2D,cACJy2D,EAAIhxF,UACJY,EAAEZ,UACFgxF,EAAIhxF,SAASO,YAAcK,EAAEZ,SAASO,YACtCywF,EAAIhxF,SAASa,UAAYD,EAAEZ,SAASa,UACpCmwF,EAAIhxF,SAASc,aAAeF,EAAEZ,SAASc,aACvCkwF,EAAIhxF,SAASgB,YAAcJ,EAAEZ,SAASgB,aAIjC8vF,EAAMnwF,QAAQqwF,GAAQA,EAAI/yF,KAAO2C,EAAE3C,MAGjD0sF,EAAWA,EAAS5iF,KAAKipF,IACf,CACJx2F,GAAIw2F,EAAIx2F,GACR+B,MAAOy0F,EAAIh2F,UAIjB61F,EAAahsF,QAAQ,CAClBvK,KAAM,SACNyG,KAAMH,EAAEpG,GACRQ,MAAO4F,EAAE5F,MACTe,QAAS4uF,GACV,IAGLkG,EAAapK,UAAU7sF,KAAK82F,aAAe,CAAC,GAAE,EAG7CO,EAAiBN,EAAuB/2F,KAAKuvF,aAC7C+H,EAAmBP,EAAuB/2F,KAAKq2F,eAC/CkB,EAAcR,EAAuB/2F,KAAK0vF,UAC1C8H,EAAqBT,EAAuB/2F,KAAKs2F,iBAEjD71F,EAAK,CACNG,GAAIA,EACJF,KAAM,OACNgzF,eAAgB,CACb5xF,WAAY,KAEfoH,SAAU,CACP,CACGtI,GAAIV,EAAIiH,KACRzG,KAAM,OACNU,MAAOrB,EAAE,QACToH,KAAM,OACNxE,MAAO3C,KAAKmH,MAEf,CACGvG,GAAIV,EAAIovF,kBACR5uF,KAAM,SACNU,MAAOrB,EAAE,uBACT4C,MAAO3C,KAAKsvF,kBACZnoF,KAAM,oBACNhF,QAASiuF,GAEZ,CACGxvF,GAAIV,EAAIqvF,YACR7uF,KAAM,SACNU,MAAOrB,EAAE,gBACT4C,MAAO3C,KAAKuvF,YACZpoF,KAAM,cACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAW42E,IACRj5E,KAAKuvF,YAActW,EA9GT,CAACjhE,IACvB,IAAI7V,EAAU40F,EAAuB/+E,GACrCw4E,EAAa,CAACtwF,EAAIq2F,uBAAwBp0F,EAAQ,EA6GtCs1F,CAAmBxe,EAAO,IAInC,CACGr4E,GAAIV,EAAIq2F,sBACR71F,KAAM,SACNU,MAAOrB,EAAE,yBACT4C,MAAO3C,KAAKu2F,sBACZpvF,KAAM,wBACNhF,QAASk1F,GAEZ,CACGz2F,GAAIV,EAAIm2F,cACR31F,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAKq2F,cACZlvF,KAAM,gBACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAW42E,IACRj5E,KAAKq2F,cAAgBpd,EA/Hd,CAACjhE,IACpB,IAAI7V,EAAU40F,EAAuB/+E,GACrCw4E,EACG,CAACtwF,EAAI02F,eAAgB12F,EAAIy2F,mBAAoBz2F,EAAI22F,WACjD10F,EACF,EA2HWu1F,CAAgBze,EAAO,IAIhC,CACGr4E,GAAIV,EAAIy2F,mBACRj2F,KAAM,SACNU,MAAOrB,EAAE,sBACT4C,MAAO3C,KAAK22F,mBACZxvF,KAAM,qBACNhF,QAASm1F,GAEZ,CACG12F,GAAIV,EAAI02F,eACRl2F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAK42F,eACZzvF,KAAM,iBACNhF,QAASm1F,GAEZ,CACG12F,GAAIV,EAAI22F,UACRn2F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAK62F,UACZ1vF,KAAM,YACNhF,QAASm1F,GAEZ,CACG12F,GAAIV,EAAIwvF,SACRhvF,KAAM,SACNU,MAAOrB,EAAE,aACT4C,MAAO3C,KAAK0vF,SACZvoF,KAAM,WACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAW42E,IACRj5E,KAAK0vF,SAAWzW,EA7JT,CAACjhE,IACpB,IAAI7V,EAAU40F,EAAuB/+E,GACrCw4E,EAAa,CAACtwF,EAAIs2F,eAAgBt2F,EAAIu2F,WAAYt0F,EAAQ,EA4J9Cw1F,CAAgB1e,GAChB+d,GAAoB,IAI7B,CACGp2F,GAAIV,EAAIs2F,eACR91F,KAAM,SACNU,MAAOrB,EAAE,iBACT4C,MAAO3C,KAAKw2F,eACZrvF,KAAM,iBACNhF,QAASo1F,GAEZ,CACG32F,GAAIV,EAAIu2F,UACR/1F,KAAM,SACNU,MAAOrB,EAAE,YACT4C,MAAO3C,KAAKy2F,UACZtvF,KAAM,YACNhF,QAASo1F,GAEZ,CACG32F,GAAIV,EAAIo2F,gBACR51F,KAAM,SACNU,MAAOrB,EAAE,qBACT4C,MAAO3C,KAAKs2F,gBACZnvF,KAAM,kBACNhF,QAASkuF,EACTjuF,GAAI,CACDC,SAAW42E,IACRj5E,KAAKs2F,gBAAkBrd,EAvLT,CAACjhE,IAC3B,IAAI7V,EAAU40F,EAAuB/+E,GACrCw4E,EAAa,CAACtwF,EAAIw2F,uBAAwBv0F,EAAQ,EAsLtCy1F,CAAuB3e,GACvB+d,GAAoB,IAI7B,CACGp2F,GAAIV,EAAIw2F,sBACRh2F,KAAM,SACNU,MAAOrB,EAAE,oBACT4C,MAAO3C,KAAK02F,sBACZvvF,KAAM,wBACNhF,QAASq1F,GAEZ,CACG92F,KAAM,WACNU,MAAO,kBACPK,KAAM,CACHb,GAAIV,EAAI42F,YACRp2F,KAAM,OACNiB,YAAY,EACZuH,SAAU,OAMtBzF,MAAMhD,GAAGA,EAAIkD,GAAG/C,IAEhB+C,GAAG/C,GAAIgE,OAEPoyF,GACH,CAQA5I,gBAAgBxtF,GACb,IAAIV,EAAMF,KAAKqvF,YAAYzuF,GAC3BZ,KAAKmH,KAAOnH,KAAKquF,SAASnuF,EAAIiH,MAI9BnH,KAAKoE,SAASgC,SAASnC,SAAS2I,IAE1B5M,KAAK4M,GADE,gBAANA,EACSjJ,GAAGzD,EAAI42F,aAAa7K,YAEpBjsF,KAAKquF,SAASnuF,EAAI0M,GAC/B,GAEN,oBCpVH,MAAMirF,EAAoB,EAAQ,OAIlCp4F,EAAOC,QAAU,cAA4Bm4F,EAK1C3uB,eAOG,GANAppE,MAAMopE,eAEDlpE,KAAK83F,aACP93F,KAAKuwD,eAAe,yBAGnBvwD,KAAK83F,YAAa,CACnB,MAAMthE,EAAO,CAAC,GACbx2B,KAAKinB,QAAQ6hB,kBAAkB9oC,OAAS,IAAIiE,SAASmK,IACnDooB,EAAK,IAAIpoB,EAAKhN,UAAYgN,CAAI,IAGjC,IAAI2pF,EAAM,IAAI31E,OAAO,UAAW,MAClBpiB,KAAK83F,YAAYx0D,MAAMy0D,IAAQ,IACrC9zF,SAASiW,IACTsc,EAAKtc,IACPla,KAAKuwD,eACF,oCAAoCr2C,KAE1C,GAEN,CACH,oBC9BH,MAAM89E,EAA8C,EAAQ,OAE5Dv4F,EAAOC,QAAU,cAAsD,EAGpEwpE,eACGppE,MAAMopE,eAEDlpE,KAAKiQ,OACPjQ,KAAKuwD,eAAe,iCAYG,IATLvwD,KAAKinB,QAAQ6hB,kBAAkB9oC,OAAS,IACzD8I,QAAQsF,GAA4B,SAAnBA,EAAKxI,OAAOvB,MAC7B8J,KAAKC,IACI,CACJxN,GAAIwN,EAAK/J,IACT1B,MAAOyL,EAAKhN,UAIL+E,QACbnG,KAAKuwD,eAAe,gDAE1B,oBC1BH,MAAM0nC,EAAuB,EAAQ,OAErCx4F,EAAOC,QAAU,cAA+Bu4F,EAC7C/uB,eACGppE,MAAMopE,eAEDlpE,KAAKq6B,UACPr6B,KAAKuwD,eAAe,sBAGvB,MAAM2nC,EAAK/jF,OAAOC,KAAKpU,KAAK0wF,aAAe,CAAC,IAAM,GAClD,GAAiB,GAAbwH,EAAG/xF,OACJnG,KAAKuwD,eAAe,yBAChB,CACJ,IAAI4nC,GAAQ,EACZD,EAAGj0F,SAAS+C,IAEsB,KAA5BhH,KAAK0wF,YAAY1pF,IAAI6S,KACS,MAA9B7Z,KAAK0wF,YAAY1pF,IAAIrE,QAErBw1F,GAAQ,EACX,IAEEA,GACFn4F,KAAKuwD,eAAe,oBAE1B,CACH,oBC3BH,MAAM6nC,EAAgC,EAAQ,OAExC7sC,EAAc,EAAQ,OAE5B9rD,EAAOC,QAAU,cAAwC,EAGtDC,YAAYqjB,EAAYiE,EAASllB,GAC9BjC,MAAMkjB,EAAYiE,EAASllB,GAE3B/B,KAAKgjB,WAAaA,CACrB,CAEAuoC,cACG,OAAOA,CACV,CAEAge,WAEG,IAAI8uB,EAAa,GAUjB,OATIr4F,KAAK6pD,QACNwuC,EAAaA,EAAW9wE,OAAOvnB,KAAK6pD,MAAM0f,aAI7C8uB,EAAWp0F,SAAS0sE,IACbA,GAAGr/D,SAAStR,KAAKuwD,eAAeogB,EAAEr/D,QAAQ,IAEhCxR,MAAMypE,WACLzgE,QAAQ6nE,GAAMA,GACnC,CAEAzH,eACGppE,MAAMopE,eACFlpE,KAAK6pD,MACN7pD,KAAK6pD,MAAMqf,eAEXlpE,KAAKuwD,eAAe,yBAGlBvwD,KAAKmH,MACPnH,KAAKuwD,eAAe,wBAAyB,CAC1CvtC,WAAYhjB,KAAKgjB,aAIvB,IAAIs1E,GAAU,EACVngE,EAAOn4B,KAAK6pD,MAChB,KAAO1xB,GACa,aAAbA,EAAK9zB,KAAmC,aAAb8zB,EAAK9zB,KACjCi0F,GAAU,EACVngE,EAAO,MAEPA,EAAOA,EAAKhN,KAIbmtE,GACFt4F,KAAKuwD,eAAe,wCAE1B,oBC5DH,MAAMgoC,EAAiB,EAAQ,OAI/B94F,EAAOC,QAAU,cAAyB64F,EAwFvCzK,kBAAkB0K,GACf,IAAIC,EAAQ34F,MAAMguF,oBAYlB,OAXA2K,EAAQA,GAAS,CAAC,CAAC,GACnBA,EAAM,GAAGh3E,IAAMg3E,EAAM,GAAGh3E,KAAO,CAAC,EAER,MAApBzhB,KAAKosD,cACNqsC,EAAM,GAAGh3E,IAAMg3E,EAAM,GAAGh3E,KAAO,CAAC,EAChCg3E,EAAM,GAAGh3E,IAAIi3E,oBAAsBF,EAC/B7iF,IAAI,UACJ+zD,OAAO,yCACX+uB,EAAM,GAAGh3E,IAAIi3E,oBAAoBC,cAAe,GAG5CF,CACV,CAQAp2F,SAASurF,GACN,IAAI8K,EACD9K,EAAW8K,qBACX9K,EAAWhmD,eAAe8wD,qBAC1B,CAAC,EAEJ,OAAQA,EAAoBjxC,OACzB,IAAK,wCACFznD,KAAK44F,SAAWF,EAAoBC,aAC/B,aACA,WACL,MACH,IAAK,mCACF34F,KAAK44F,SAAW,UAGzB,CAQAhkF,UAGG,OAAO5U,KAAKinB,QAAQrS,QAAQwlC,KAAKp6C,KACpC,CASA4H,OAGG,OAAO5H,KAAKinB,QAAQrf,KAAKwyC,KAAKp6C,KACjC,CAcA6xE,6BAA6Bp4C,GAC1B,IAAI2P,EAAOppC,KAAK+B,GAAGy3B,oCAAoCC,EAASz5B,MAMhE,OAHIopC,GACDppC,KAAKioC,WAAWmB,GAEZA,CACV,CAEA8/B,eACGppE,MAAMopE,gBAELlpE,KAAKisD,oBAAsB,IAAIhoD,SAASyiC,IACtC1mC,KAAKuwD,eACF,gDAAgD7pB,KAChD,CAAEzf,QAASjnB,KAAKY,GAAI8lC,OACtB,GAEP,oBC5LH,MAAMmyD,EAAwB,EAAQ,OAEtCp5F,EAAOC,QAAU,cAAgCm5F,qBCFjD,MAAMC,EAAgC,EAAQ,OAE9Cr5F,EAAOC,QAAU,cAAwC,qBCAzD,MAAMq5F,EAAgC,EAAQ,OAE9Ct5F,EAAOC,QAAU,cAAwC,qBCFzD,MAAMs5F,EAAuB,EAAQ,OAIrCv5F,EAAOC,QAAU,cAA+Bs5F,qBCNhD,MAAMC,EAAgC,EAAQ,OAE9Cx5F,EAAOC,QAAU,cAAwC,qBCFzD,MAAMw5F,EAA4B,EAAQ,OAO1Cz5F,EAAOC,QAAU,cAAoCw5F,EAMlDtxF,OACG,OACG6H,QAAQC,UACJ8E,MAAK,IAAM1U,MAAM8H,SAEjB4M,MAAM1G,GACG9N,KAAK+B,GAAGsN,QAAQ8G,IAAI,CACxB7F,KAAMtQ,KAAKouD,UAlBX,4BACD,4BAiB8Cp7C,QAC1C,OACAhT,KAAKY,OAKvB,oBClBH,MAAMu4F,EAAW,EAAQ,OACnBvd,EAAa,WAEb77E,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GA2zBlDnW,EAAOC,QAzzBP,cAAmBy5F,EAChBx5F,YAAYqjB,EAAY+rC,EAAsBC,EAAQ5lB,EAAMrnC,GACzDjC,MAAMkjB,EAAY+rC,EAAsBC,EAAQ5lB,EAAMrnC,GAEtD/B,KAAKoC,GAAG,WAAW,CAACkP,EAASzH,KAC1B7J,KAAKmpE,UAAU7kE,KAAK,CAAEgN,UAASzH,QAAO,GAE5C,CAoBAuvF,SAASl6E,EAAKte,GAGXZ,KAAK+uD,qBAAqB9qD,SAAS4rD,IAEhC,MAAMxC,EAAOrtD,KAAKq5F,KAAKz4F,GAEvBZ,KAAKE,IAAMF,KAAKs5F,MAAMjsC,GACtBrtD,KAAK4V,OAAS5V,KAAK4V,QAAU,CAAC,EAE9B,IAAI2jF,EAAe,KAEnB,OAAQ1pC,EAAKjuD,MACV,IAAK,eACF5B,KAAK4V,OAAOi6C,EAAK1oD,MAAQxD,GAAG3D,KAAKE,IAAIs5F,cAAcvtF,WAEnD,MAEH,IAAK,aACFjM,KAAK4V,OAAOi6C,EAAK1oD,MAAQxD,GAAG3D,KAAKE,IAAIu5F,YAAYxtF,WAEjD,MAEH,IAAK,mBACL,IAAK,eAGF,GAFAstF,EAAe51F,GAAG3D,KAAKE,IAAIgqC,WAEvBqvD,EAAc,CACf,MAAMrvD,EAAYqvD,EAAattF,WAE3Bi+B,GAA2B,KAAdA,IACdlqC,KAAK4V,OAAOi6C,EAAK1oD,MAAQ0M,KAAK0D,MAAM2yB,GAE1C,CAEA,MAEH,IAAK,YACFlqC,KAAK4V,OAAOi6C,EAAK1oD,MAAQxD,GAAG3D,KAAKE,IAAIw5F,WAAWztF,WAGtD,GAEN,CAQAqtF,MAAMjsC,GACH,MAAO,CACJnjB,UAAW,GAAGmjB,cACdmsC,aAAc,GAAGnsC,iBACjBosC,WAAY,GAAGpsC,YACfqnB,MAAO,GAAGrnB,UACVssC,OAAQ,GAAGtsC,WACXusC,UAAW,GAAGvsC,cACdqsC,UAAW,GAAGrsC,cACdwsC,OAAQ,GAAGxsC,WAEjB,CAaAysC,iBAAiBjqC,EAAMjvD,EAAIH,GAGxB,IAAKA,EAAGU,KAAM,CACX,IAAIV,EAAGoB,KAOA,MAAM,IAAIyG,MAAM,+CANpB,IAAK,IAAI+K,EAAI,EAAGA,EAAI5S,EAAGoB,KAAKsE,OAAQkN,IACjC,GAAI5S,EAAGoB,KAAKwR,GAAGlS,KAAM,CAClBnB,KAAK85F,iBAAiBjqC,EAAMjvD,EAAIH,EAAGoB,KAAKwR,IAExC,KACH,CAGN,MACH,CAEA,MAAM0mF,EAAU/5F,KAAKg6F,UAAUnqC,EAAMjvD,GAEjCm5F,IAEwC,IAArC/5F,KAAK+uD,qBAAqB5oD,QAC3B1F,EAAGU,KAAK+sC,MACRztC,EAAGU,KAAKmD,KAAKy1F,IAKTt5F,EAAGU,KAAKgF,OAAS,EAClB1F,EAAGU,KAAKmD,KAAK,CACVzC,KAAM,CAACk4F,KAGRt5F,EAAGU,KAAK,GAAGU,KAAKyC,KAAKy1F,GAGnC,CAUAE,UAAUr5F,EAAIH,GACX,MAAMy5F,EAAQl6F,KAAKm6F,UAAUv5F,GAIzBZ,KAAKmrB,MACNnrB,KAAKmrB,KAAKivE,YAAYx5F,EAAIs5F,GAC1Bz5F,EAAGoB,KAAKyC,KAAK41F,GACbl6F,KAAKmrB,KAAK8uE,UAAUr5F,EAAIH,IAGtBA,EAAGoB,KAAKyC,KAAK41F,EACrB,CAUAE,YAAYx5F,EAAIH,GACbT,KAAK+uD,qBAAqB9qD,SAAS4rD,IAChC7vD,KAAK85F,iBAAiBjqC,EAAMjvD,EAAIH,EAAG,GAEzC,CAQA44F,KAAKz4F,GACF,OAAIZ,KAAKgvD,OAAe,GAAGhvD,KAAKgvD,OAAOqqC,KAAKz4F,MAAOZ,KAAKL,YAAY0E,MAE7D,GAAGzD,KAAMZ,KAAKL,YAAY0E,KACpC,CAqBA81F,UAAUv5F,GACP,MAAMuB,EAAUnC,KAAKL,YAAY0vD,UAAUlhD,KAAK4b,IACtC,CAAEnpB,GAAImpB,EAAG1lB,IAAK1B,MAAOonB,EAAG3oB,UAGlCe,EAAQ0qC,QAAQ,CAAEjsC,GAAI,EAAG+B,MAAO5C,EAAE,2BAElC,MAAMstD,EAAOrtD,KAAKq5F,KAAKz4F,GACjBV,EAAMF,KAAKs5F,MAAMjsC,GAiGvB,MA/Fc,CACXlsD,KAAM,CACH,CACGP,GAAIV,EAAIy5F,OACRj5F,KAAM,SACNiC,MAAO3C,KAAKmrB,KAAOnrB,KAAKmrB,KAAKxrB,YAAY0E,IAAM,EAC/ClC,QAASA,EACTC,GAAI,CACDC,SAAU,CAACg4F,EAAU7gB,KAClB,MAAM8gB,EAAa,KAChB,MAAMX,EAASh2F,GAAGzD,EAAIy5F,QAEtBA,EAAOne,aACPme,EAAO90F,SAAS20E,GAChBmgB,EAAOle,cAAc,EAGxB,GAAI4e,IAAa7gB,EAAU,OAE3B,MAAM+gB,EAAQv6F,KAAKL,YAAY0vD,UAAUviC,MACrC/C,GAAOA,EAAG1lB,MAAQg2F,IAGtB,IAAKE,EAGF,YAFAD,IAKH,MAAME,EAAU72F,GAAGzD,EAAIy5F,QAAQluF,gBACzBgvF,EAAYD,EAAQ/uF,gBACpBivF,EAAQ,KACX,GAAIH,EAAO,CACR,MAAMnrC,EAAS,IAAImrC,EAChB,CAAC,EACDv6F,KACAA,KAAKopC,KACLppC,KAAK+B,IAGR/B,KAAKmrB,KAAOikC,EAEZA,EAAOurC,cAAc/5F,EAAI45F,GACzBprC,EAAOwrC,YAAYh6F,EAAI65F,EAC1B,GAKGI,EAAUJ,EAAU3vF,gBAEtB+vF,EAAQ10F,OAAS,EAAI00F,EAAQxtF,QAAQmtF,GACtC/2F,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,aACTsO,KAAMtO,EACH,sDAEHwR,GAAIxR,EAAE,OACN4R,OAAQ5R,EAAE,MACV8R,SAAW/D,IACR,GAAIA,EAAQ,CAET,IAAIgtF,EAAKD,EAAQ10F,OAAS,EAE1B,KACG00F,EAAQC,GAAI74F,OAAOrB,KAAO45F,EAAQv4F,OAAOrB,IAEzC65F,EAAUjvF,WAAWqvF,EAAQC,IAC7BA,IAIH,MAAMC,EAAUP,EAAQ1vF,gBAExB,IAAIkwF,EAAKD,EAAQ50F,OAEjB,KAAO60F,EAAK,GACTR,EAAQhvF,WAAWuvF,EAAQC,EAAK,IAChCA,IAGHN,GACH,MAAOJ,GAAY,IAGvBI,GAAO,IAIrB,CACG95F,GAAIV,EAAI25F,SAMpB,CAEAoB,yBAAyBr6F,GACtB,MAAMs6F,EAAUv3F,GAAG3D,KAAKE,IAAIy5F,QAE5B,IAAKuB,EAAS,OAEd,MAAMf,EAAYn6F,KAAKm6F,UAAUv5F,GAE3Bu6F,EACHhB,EAAUh5F,KAAK2H,QAAQvF,GAAMA,EAAE3C,IAAMs6F,EAAQj5F,OAAOrB,KAAI,IACxDu5F,EAAUh5F,KAAK,GAEdg6F,GAAWp5F,GAAG0Y,MAAMha,GAAG06F,EAAWD,EACzC,CAaAlB,UAAUnqC,EAAMjvD,GACb,MAAMw6F,EAAWr5F,GAAG+M,OAAOusF,aAE3B,IAAIhuC,EAAOrtD,KAAKq5F,KAAKz4F,GAErBZ,KAAKE,IAAMF,KAAKs5F,MAAMjsC,GAEtB,IAAI0sC,EAAU,KACV53F,EAAU,KACV47E,EAAS,KACTpuB,EAAe,KACf2rC,EAAc,KACdC,EAAe,KACfC,EAAe,KACfC,EAAU,KACV3jB,EAAQ,KAGZ,OAAQjoB,EAAKjuD,MACV,IAAK,eAGE5B,KAAKiF,SACN9C,EAAUnC,KAAKiF,OAAO8B,SAASoH,KAAKnH,IAC1B,CAAEpG,GAAIoG,EAAEpG,GAAI+B,MAAOqE,EAAE5F,MAAOmK,KAAM,SAASvE,EAAEuE,YAG1DpJ,EAAQ0qC,QAAQ,CACbjsC,GAAI,MACJ+B,MAAO,UAML3C,KAAKs6B,SAAWn4B,EAAQgE,OAAS,IAEnCnG,KAAK4V,OAAOi6C,EAAK1oD,MAAQhF,EAAQ,GAAGvB,GACpCZ,KAAK4vD,aAAaC,EAAMjvD,IAG3Bm5F,EAAU,CACPn5F,GAAIZ,KAAKE,IAAIs5F,aACb94F,KAAM,aACNU,MAAOrB,EAAE,SACT+B,WAAY,GACZa,MAAO3C,KAAKs6B,QACZn4B,QAASA,EACTC,GAAI,CACDC,SAAU,CAACg4F,EAAU7gB,KAEd6gB,IAAar6F,KAAK4V,OAAOi6C,EAAK1oD,QAC/BnH,KAAK4V,OAAOi6C,EAAK1oD,MAAQkzF,EACzBr6F,KAAK4vD,aAAaC,EAAMjvD,GAC3B,IAKT,MAEH,IAAK,aAGFuB,EAAUnC,KAAK+B,GAAGokB,UAAUhY,KAAK2X,IACvB,CAAEllB,GAAIklB,EAAEllB,GAAI+B,MAAOmjB,EAAE1kB,WAG1BpB,KAAKq6B,UAAYl4B,EAAQgE,OAAS,IACpCnG,KAAKq6B,SAAWl4B,EAAQ,GAAGvB,GAC3BZ,KAAK4V,OAAOi6C,EAAK1oD,MAAQnH,KAAKq6B,SAC9Br6B,KAAK4vD,aAAaC,IAGrBkqC,EAAU,CACPn5F,GAAIZ,KAAKE,IAAIu5F,WACb/4F,KAAM,SACNU,MAAOrB,EAAE,eACT+B,WAAYs5F,EAASl5F,gBACrBS,MAAO3C,KAAKq6B,SACZl4B,QAASA,EACTC,GAAI,CACDC,SAAWg4F,IACRr6F,KAAK4V,OAAS5V,KAAK4V,QAAU,CAAC,EAE1BykF,IAAar6F,KAAK4V,OAAOi6C,EAAK1oD,QAC/BnH,KAAK4V,OAAOi6C,EAAK1oD,MAAQkzF,EACzBr6F,KAAK4vD,aAAaC,GACrB,IAKT,MAEH,IAAK,mBA0BF,GAHAkuB,EAAS/9E,KAAK+B,GAAG6xB,iBAAiBhzB,GAClC+uD,EAAe3vD,KAAKyvD,iCAEhBzvD,KAAKiF,OAAQ,CACd84E,EAAOlqD,WAAW7zB,KAAKiF,OAAO8B,SAAU/G,KAAKiF,QAM7C,MAAMy2F,EAAcvnF,OAAOC,KAAKu7C,GAAcxhD,KAC1CnH,GAAM2oD,EAAa3oD,KAGvB+2E,EAAOxxC,kBAAkBmvD,EA0D5B,CAIA3d,EAAO37E,GAAG,QAAS8nC,IAIhBlqC,KAAK4V,OAAS5V,KAAK4V,QAAU,CAAC,EAC9B5V,KAAK4V,OAAOi6C,EAAK1oD,MAAQ+iC,EAEzB,MAAMyxD,EAAYh4F,GAAG3D,KAAKE,IAAI05F,WAE9B+B,EAAUl3F,OAAO,CACdrD,MAAO28E,EAAOvI,gBAEjBmmB,EAAUj3F,UAIV,MAAMk3F,EAAcj4F,GAAG3D,KAAKE,IAAIgqC,WAEhC0xD,EAAYn3F,OAAO,CAChB9B,MAAOkR,KAAKC,UAAU9T,KAAK4V,OAAOi6C,EAAK1oD,SAE1Cy0F,EAAYl3F,SAAS,IAIxB42F,EAAc,GAEVt7F,KAAK4V,QAAU5V,KAAK4V,OAAOi6C,EAAK1oD,QACjC42E,EAAOl5E,SAAS7E,KAAK4V,OAAOi6C,EAAK1oD,OACjCm0F,EAAcznF,KAAKC,UAAU9T,KAAK4V,OAAOi6C,EAAK1oD,QAKjDo0F,EAAexd,EAAOvI,cAEtBukB,EAAU,CACPl4F,KAAM,CACH,CACGjB,GAAIZ,KAAKE,IAAI05F,UACbl5F,KAAM,SACNU,MAAOm6F,EACPn5F,GAAI,CACDgI,YAAa,KACV2zE,EAAOjG,MAAMn0E,GAAG3D,KAAKE,IAAI05F,WAAY,KAAM,CACxC5pE,IAAK,UACN,IAMX,CACGpvB,GAAIZ,KAAKE,IAAIgqC,UACbxpC,KAAM,OACNiC,MAAO24F,EACPzmB,QAAQ,KAKjB,MAEH,IAAK,eAMF2mB,EAAe,GACfC,EAAU,IAAI7f,EAAWvuB,EAAMrtD,KAAK+B,IAEhC/B,KAAKiF,QAAQw2F,EAAQz2F,WAAWhF,KAAKiF,QAGzCw2F,EAAQle,oBACJv9E,KAAKopC,KAAKniB,QAAQ6hB,kBAAkB9oC,KAAKopC,OAAS,IAAIj7B,KACnDC,IACS,CACJxN,GAAIwN,EAAK/J,IACT1B,MAAOyL,EAAKhN,WAQpBpB,KAAK4V,QAAU5V,KAAK4V,OAAOi6C,EAAK1oD,QACjCs0F,EAAQ52F,SAAS7E,KAAK4V,OAAOi6C,EAAK1oD,OAClCq0F,EAAe3nF,KAAKC,UAAU9T,KAAK4V,OAAOi6C,EAAK1oD,QAGlD2wE,EAAQ,KAEL,MAAMr3E,EAAK,CACRG,GAAIZ,KAAKE,IAAIw0E,MACbh0E,KAAM,QACNC,SAAU,SACV2lE,SAAU,IACVxlE,OAAO,EACPD,QAAQ,EACRY,KAAM,CACHI,KAAM,CACH,CACGd,OAAQ,GACRY,YAAY,EACZR,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNiC,MAAO,IACP3B,MAAO,GACPO,MAAO,KACJoC,GAAG3D,KAAKE,IAAIw0E,OAAO/vE,MAAM,KAKrC82F,EAAQh7F,KACR,CACGC,KAAM,SACNiC,MAAO5C,EAAE,QACTmB,IAAK,gBACLK,MAAO,KACJvB,KAAK4V,OAAS5V,KAAK4V,QAAU,CAAC,EAC9B5V,KAAK4V,OAAOi6C,EAAK1oD,MAAQs0F,EAAQxvF,WACjC,MAAM4vF,EAAKl4F,GAAG3D,KAAKE,IAAI05F,WAEvBiC,EAAGp3F,OAAO,CACP+lF,MAAOxqF,KAAK4V,OAAOi6C,EAAK1oD,MAAMhB,SAEjC01F,EAAGn3F,UAEH,MAAM8pB,EAAO7qB,GAAG3D,KAAKE,IAAIgqC,WAEzB1b,EAAK/pB,OAAO,CACT9B,MAAOkR,KAAKC,UAAU9T,KAAK4V,OAAOi6C,EAAK1oD,SAE1CqnB,EAAK9pB,UAELf,GAAG3D,KAAKE,IAAIw0E,OAAO/vE,MAAM,MAQxC3E,KAAK87F,SAAWr4F,MAAMhD,GAAGA,GACzBT,KAAK87F,SAASl3F,OAIV5E,KAAK4V,QAAU5V,KAAK4V,OAAOi6C,EAAK1oD,OACjCs0F,EAAQ52F,SAAS7E,KAAK4V,OAAOi6C,EAAK1oD,MAAM,EAG9C4yF,EAAU,CACPl4F,KAAM,CAEH,CACGjB,GAAIZ,KAAKE,IAAI05F,UACbl5F,KAAM,SACNU,MAAOrB,EAAE,iBACTyqF,MAAOxqF,KAAK4V,OAAOi6C,EAAK1oD,OAAOhB,OAC/B/D,GAAI,CACDgI,YAAa,KACV0tE,GAAO,IAKhB,CACGl3E,GAAIZ,KAAKE,IAAIgqC,UACbxpC,KAAM,OACNiC,MAAO64F,EACP3mB,QAAQ,KAKjB,MAEH,IAAK,YACFklB,EAAU,CACPn5F,GAAIZ,KAAKE,IAAIw5F,UACbh5F,KAAM,OACNU,MAAOrB,EAAE,YACT+B,WAAY,GACZa,MAAO3C,KAAK4V,OAAOi6C,EAAK1oD,MACxBuwE,YAAa33E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAACg4F,EAAU7gB,KAEd6gB,IAAar6F,KAAK4V,OAAOi6C,EAAK1oD,QAC/BnH,KAAK4V,OAAOi6C,EAAK1oD,MAAQkzF,EACzBr6F,KAAK4vD,aAAaC,EAAMjvD,GAC3B,IAQf,OAAOm5F,CACV,CAYAa,YAAYh6F,EAAIm7F,GACb,MAAM7B,EAAQl6F,KAAKm6F,UAAUv5F,GAE7Bm7F,EAAQ9wF,QAAQivF,EACnB,CAWAS,cAAc/5F,EAAIo7F,GACf,MAAMpmF,EAAS,GAEf5V,KAAK+uD,qBAAqB9qD,SAAS4rD,IAEhCj6C,EAAOtR,KAAKtE,KAAKg6F,UAAUnqC,EAAMjvD,GAAI,IAGxC,IAAIq7F,EAAW,KAIZA,EADCrmF,EAAOzP,OAAS,EACN,CACRtE,KAAM+T,GAEIA,EAAOs4B,MAEnB+tD,IACDD,EAAQxwF,WAAWwwF,EAAQlxF,gBAAgB,IAC3CkxF,EAAQ/wF,QAAQgxF,GAEtB,CAEA1yB,WACG,IAAI2yB,EAAal8F,KAAKmpE,WAAa,GAGnC,OAFInpE,KAAKmrB,OACN+wE,EAAaA,EAAW30E,OAAOvnB,KAAKmrB,KAAKo+C,YAAYzgE,QAAQ6nE,GAAMA,KAC/D3wE,KAAK+B,GAAGygB,KAAK05E,EACvB,CAEAhzB,eACGlpE,KAAKmpE,UAAY,GACbnpE,KAAKmrB,MAAMnrB,KAAKmrB,KAAK+9C,cAC5B,CAcA3Y,eAAej/C,GAEZtR,KAAKmpE,UAAYnpE,KAAKmpE,WAAa,GACnCnpE,KAAKmpE,UAAU7kE,KAAK,CAAEgN,QAAS,GAAGtR,KAAKqE,QAAQiN,KAClD,oBCzzBH,MAAM0+C,EAAe,EAAQ,OAW7BvwD,EAAOC,QATP,cAAuBswD,qBCDvB,MAAMC,EAAkB,EAAQ,OAC1BksC,EAAiB,EAAQ,OAEzB5wC,EAAc,CAajBG,eAAgBuE,EAAgBvE,eAShCxrD,IAAMU,IACI,CACJw7F,KAAM,GAAGx7F,SACT+4F,OAAQ,GAAG/4F,gBACXuB,QAAS,GAAGvB,mBAkBlB40B,QAAS,CAAC6mE,EAAQjzD,EAAMrnC,KAId,CACJtB,GAAKG,IACFy7F,EAASA,GAAU,IAAIF,EAAe,CAAC,EAAG/yD,EAAMrnC,GAEhD,MACMtB,EAAK,CACRoB,KAAM,CACH,CACGjB,GAJG2qD,EAAYrrD,IAAIU,GAIXw7F,KACRj7F,KAAM,MAQf,OAHAk7F,EAAOjC,YAAYx5F,EAAIH,GACvB47F,EAAOpC,UAAUr5F,EAAIH,GAEdA,CAAE,EAEZ6C,KAAO1C,IAAD,IAiBZ2W,MAAO,CAAC3W,EAAIwoC,EAAMrnC,KACf,MAAM7B,EAAMqrD,EAAYrrD,IAAIU,GACtBw7F,EAAOz4F,GAAGzD,EAAIk8F,MAEpB,IAAKA,EAGF,YAFA5zF,QAAQC,KAAK,oDAMhB,MAAM5G,EAAOu6F,EAAK3wF,gBAAgBX,gBAE5BwxF,EAAe,CAACz6F,EAAMM,EAAS6sD,KAClC,GAAoB,IAAhBntD,EAAKsE,OAAc,OAAO,KAE9B,MAAM+Y,EAAMrd,EAAK0S,QAIX2S,EAAQhI,EAAIpU,gBAElB,IAAIyxF,EAAWr1E,EAAM3S,QAErB,MAAQgoF,GAAUtwF,UAAUswF,EAAWr1E,EAAM3S,QAE7C,MAAM5R,EAAQ45F,EAAStwF,WAGjBqjD,EAAKntD,EAAQ2qB,MAAMhH,GACfA,EAAEzhB,MAAQ1B,GAASmjB,EAAEzhB,MAAQ83F,EAAe93F,MAGtD,GAAIirD,EAAI,CACL,IAAIktC,EAAS,KAEDA,EAARxtC,EAAiB,IAAIM,EAAG,CAAC,EAAGN,EAAQ5lB,EAAMrnC,GAChC,IAAIutD,EAAG,CAAC,EAAGlmB,EAAMrnC,GAG/By6F,EAAOpD,SAASl6E,EAAKte,IAIhB47F,EAAOv3F,QAAU+pD,IACnBwtC,EAAOv3F,OAAS+pD,EAAO/pD,OACvBu3F,EAAOniE,SAAWmiE,EAAOv3F,QAAQrE,IAAM,MAG1C,MAAM67F,EAAUH,EACbz6F,EACA26F,EAAO78F,YAAY0vD,UACnBmtC,GAKH,OAFAA,EAAOrxE,KAAOsxE,EAEPD,CACV,CAEA,OAAO,IAAI,EAKd,OAFkBF,EAAaz6F,EAAMouD,EAAgBE,MAAO,KAE5C,GAItB1wD,EAAOC,QAAU6rD,mBC1JjB,MAAMmxC,EAAqB,EAAQ,OAoEnCj9F,EAAOC,QAlEP,cAAyBg9F,EAkBtB9sC,aAAaC,GACQ,SAAdA,EAAK1oD,OACNnH,KAAKq6B,SAAWr6B,KAAK4V,OAAOi6C,EAAK1oD,MACjCnH,KAAKiF,OAASjF,KAAKmvD,aAAanvD,KAAKq6B,UAKjCr6B,KAAKmrB,OAAMnrB,KAAKmrB,KAAKlmB,OAASjF,KAAKiF,QAE7C,CAgBAm0F,SAASl6E,EAAKte,GACXd,MAAMs5F,SAASl6E,EAAKte,GAKhBZ,KAAK4V,OAAOzO,OACbnH,KAAKq6B,SAAWr6B,KAAK4V,OAAOzO,KAC5BnH,KAAKiF,OAASjF,KAAKmvD,aAAanvD,KAAK4V,OAAOzO,MAElD,CAEA+hE,eACGppE,MAAMopE,eACDlpE,KAAKiF,QACPjF,KAAKuwD,eAAe,qBAAsB,CACvCl2B,SAAUr6B,KAAKq6B,UAGxB,oBC3EH,MAAMy2B,EAAmB,EAAQ,OAmBjCrxD,EAAOC,QAjBP,cAA2BoxD,EASxBlB,aAAaC,EAAMjvD,GAChBd,MAAM8vD,aAAaC,GAGD,YAAdA,EAAK1oD,MAAoBnH,KAAKi7F,yBAAyBr6F,EAC9D,oBCRH,MAAMswD,EAAkB,EAAQ,OAQhCzxD,EAAOC,QANP,cAA0BwxD,EACvBtB,aAAaC,EAAMjvD,GAChBd,MAAM8vD,aAAaC,EACtB,kBCLH,MAAMsB,EAAoB,EAAQ,OAelC1xD,EAAOC,QAbP,cAA4ByxD,qBCF5B,MAAME,EAAmB,EAAQ,OAWjC5xD,EAAOC,QATP,cAA2B2xD,oBCiC3B,MAAMC,EAAmB,EAAQ,OAuFjC7xD,EAAOC,QArFP,cAA2B4xD,EAgBxB1B,aAAaC,GACQ,YAAdA,EAAK1oD,OAENnH,KAAKs6B,QAAUt6B,KAAK4V,OAAOi6C,EAAK1oD,MAGhCnH,KAAK4F,MAAQ5F,KAAKiF,OAAO8I,UAAU/N,KAAKs6B,SAIpCt6B,KAAK4F,OAA4B,kBAAnB5F,KAAK4F,MAAMvB,MAC1BrE,KAAKivD,UAAYjvD,KAAK4F,MAAMgB,eAC5B5G,KAAKuxD,YAAcvxD,KAAKivD,UAAUruD,GAK9BZ,KAAKmrB,OAAMnrB,KAAKmrB,KAAKlmB,OAASjF,KAAKivD,YAGhD,CAoBAmqC,SAASl6E,EAAKte,GACXd,MAAMs5F,SAASl6E,EAAKte,GAEpBZ,KAAKs6B,QAAUt6B,KAAK4V,OAAO0kB,QAI3Bt6B,KAAK+B,GAAGokB,SAASL,IACd,IAAK9lB,KAAK4F,MAAO,CAEd,MAAMA,EAAQkgB,EAAE/X,UAAU/N,KAAKs6B,SAE3B10B,IAAO5F,KAAK4F,MAAQA,EAC3B,KAGC5F,KAAK4F,QACN5F,KAAKiF,OAASjF,KAAK4F,MAAMX,OAIrBjF,KAAK4F,OAA4B,kBAAnB5F,KAAK4F,MAAMvB,MAC1BrE,KAAKivD,UAAYjvD,KAAK4F,MAAMgB,eAC5B5G,KAAKuxD,YAAcvxD,KAAKivD,UAAUruD,IAG3C,oBCvHH,MAAM4wD,EAAkB,EAAQ,OA2ChC/xD,EAAOC,QAzCP,cAA0B8xD,EAgBvB5B,aAAaC,GACQ,eAAdA,EAAK1oD,OACNnH,KAAKyxD,UAAYzxD,KAAK4V,OAAOi6C,EAAK1oD,MAExC,CAEAiyF,SAASl6E,EAAKte,GACXd,MAAMs5F,SAASl6E,EAAKte,GAEpBZ,KAAKyxD,UAAYzxD,KAAK4V,OAAmB,WAEpC5V,KAAK0xD,aACP1xD,KAAKopC,KAAKuiB,mBAAmB3rD,MAC7BA,KAAK0xD,YAAa,EAExB,CAEAwX,eACGppE,MAAMopE,eACDlpE,KAAKyxD,WAAgC,KAAnBzxD,KAAKyxD,WACzBzxD,KAAKuwD,eAAe,uCAE1B,oBChDH,MAAMosC,EAAa,EAAQ,OACrBC,EAAkB,WAExBn9F,EAAOC,QAAU,cAAqBi9F,EA4bnCx8F,YAGG,OAFkB,IAAIy8F,EAAgB58F,KAGzC,CAQA2zD,cAAcsP,GAMX,IAAI45B,EAAgB,CACjB,OACA,OACA,YACA,gBAEA,iBACA,eACA,gBACA,cACA,oBACA,aACA,aAEA,SACA,WACA,UACA,aACA,cACA,UACA,YACA,eACA,iBACA,WACA,gBAEA,MACA,MACA,OACA,OAEA,SACA,aACA,eAQH,OALoB78F,KAAK+E,YAAYyiB,UACC1e,QAAQvF,IACM,GAA1Cs5F,EAAcxvF,QAAQ9J,EAAEwmC,SAAS1lC,MAM9C,CAEAy4F,WAAW54B,GACRlkE,KAAKwP,KAAK,aAAc00D,EAC3B,mBCjgBH,MAAM64B,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3Cv9F,EAAOC,QAAU,cAAgCq9F,EAS9C58F,UAAU88F,EAAOC,GACd,IAAI/8F,EAAY,IAAI68F,EAA2Bh9F,MAG/C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMi9F,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3C59F,EAAOC,QAAU,cAAgC09F,EAO9Cj9F,UAAU88F,GAAQ,EAAOp9F,GACtB,IAAIM,EAAY,IAAIk9F,EAA2Br9F,KAAMH,GAGrD,GAAIo9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,8EC1BY,MAAMm9F,UAAgCV,EAAA,EAClDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,kBAAkB09F,EAAS38F,KACrCuT,OAAOsnC,OACJ,CACG+hD,SAAU,IAEbt9F,IAINF,KAAKy9F,kBAAoB,KACtBz9F,KAAKwK,QAAQ,EAGhBxK,KAAK09F,kBAAoB,OAIzB19F,KAAK29F,kBAAoB,CAACC,EAAUC,KAIjC,MAAMrrE,EAAKxyB,KAAK2rB,eAEX6G,IAELA,EAAGjE,gBAAgBsvE,GACnBrrE,EAAGrC,aAAY,EAGlBnwB,KAAK89F,cAAgB,KAClB99F,KAAKi9E,MAAM,EAGdj9E,KAAK+9F,eAAiB,KACnB/9F,KAAKq9E,OAAO,CAElB,CAEA58E,KACG,MAAMP,EAAMF,KAAKE,IAEXq9F,EAAWv9F,KAAKU,KAEtBV,KAAKg+F,SAAWT,EAAS7/C,aACzB19C,KAAKi+F,SAAWV,EAASW,eAAe/9F,YAExC,MAAM05F,EAAS,CAAC,EACVzzF,EAAWpG,KAAKoG,SAEC,IAAnBA,EAASpF,OACVmT,OAAOsnC,OAAOo+C,EAAQ,CACnB74F,MAAO,IAGb,MAAMm9F,EAAMr+F,MAAMW,GAAG,CAClB,CACGkB,YAAY,EACZR,KAAM,CACH04F,EACA,CACGl4F,YAAY,EACZE,KAAM,CACH7B,KAAKg+F,SAASv9F,KACd,CACGG,GAAIV,EAAIs9F,SACR98F,KAAM,WACNS,KAAM,GACNH,MAAOoF,EAASpF,MAChBD,OAAQqF,EAASrF,OACjBq9F,WAAY,CACTjW,OAAQ/hF,EAAS8sD,SACjBmrC,SAAUj4F,EAAS+sD,WACnBvxD,KAAMwE,EAASgtD,gBAElBhxD,GAAI,CACDoI,OAAQ,KACL,MAAM8zF,EAAc36F,GACjBzD,EAAIs9F,UACLe,iBAEFv+F,KAAKw+F,YAAYF,EAAY,MAM5CzE,MAOT,cAFOsE,EAAIv8F,KAEJu8F,CACV,CAGAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMywB,EAAKxyB,KAAK2rB,eAEhB,IAAK6G,EAKF,YAJAzwB,EAAGqG,OAAOotB,QAAQ,qBAAqBhD,IAAM,CAC1ClhB,QAAS,sCAMf,MAAMrM,EAASutB,EAAG9G,WAElB,IAAKzmB,EAKF,YAJAlD,EAAGqG,OAAOC,UAAU,aAAamqB,IAAM,CACpClhB,QAAS,8BAMfkhB,EAAG+C,eAAe,WAAYv1B,KAAKy9F,mBACnCjrE,EAAGpwB,GAAG,WAAYpC,KAAKy9F,mBAEvBjrE,EAAG+C,eAAe,SAAUv1B,KAAK09F,mBACjClrE,EAAGpwB,GAAG,SAAUpC,KAAK09F,mBAErBlrE,EAAG+C,eAAe,SAAUv1B,KAAK09F,mBACjClrE,EAAGpwB,GAAG,SAAUpC,KAAK09F,mBAErBlrE,EAAG+C,eAAe,SAAUv1B,KAAK09F,mBACjClrE,EAAGpwB,GAAG,SAAUpC,KAAK09F,mBAErBlrE,EAAG+C,eAAe,mBAAoBv1B,KAAK89F,eAC3CtrE,EAAGpwB,GAAG,mBAAoBpC,KAAK89F,eAE/BtrE,EAAG+C,eAAe,kBAAmBv1B,KAAK+9F,gBAC1CvrE,EAAGpwB,GAAG,kBAAmBpC,KAAK+9F,gBAE1B/9F,KAAKoG,SAASitD,iBACf7gC,EAAG+C,eAAe,eAAgBv1B,KAAKy9F,mBACvCjrE,EAAGpwB,GAAG,eAAgBpC,KAAKy9F,oBAG9B,MAAMF,EAAWv9F,KAAKU,KAGtB68F,EAAS7/C,aAAa14C,WAAWC,GACjCs4F,EAAS7/C,aAAa+gD,SAASz+F,MAE/BA,KAAKg+F,SAAS16F,KAAKtD,KAAK+B,IACxB/B,KAAKg+F,SAASzoE,eAAe,cAAev1B,KAAK29F,mBACjD39F,KAAKg+F,SAAS57F,GAAG,cAAepC,KAAK29F,mBAGrC39F,KAAKi+F,SAAS36F,KAAK,CAChB5C,KAAM68F,EACN5xE,eAAgB6G,IAInB,MAAMksE,EAAgB/6F,GAAG3D,KAAKE,IAAIs9F,WAAW9vF,MAEzCgxF,IACDA,EAAchd,aACX,UACA,GAAG6b,EAASl5F,OAAOk5F,EAAS38F,MAE/B89F,EACIjd,cAAc,2BACbkd,mBAAmBjd,aAClB,UACA,GAAG6b,EAASl5F,uBAAuBk5F,EAAS38F,MAElD89F,EACIjd,cAAc,2BACbkd,mBAAmBjd,aAClB,UACA,GAAG6b,EAASl5F,mBAAmBk5F,EAAS38F,MAGpD,CAWAg+F,UACG,MAAMpsE,EAAKxyB,KAAK2rB,eAEX6G,IAELA,EAAG+C,eAAe,WAAYv1B,KAAKy9F,mBAE/Bz9F,KAAK09F,oBACNlrE,EAAG+C,eAAe,SAAUv1B,KAAK09F,mBACjClrE,EAAG+C,eAAe,SAAUv1B,KAAK09F,mBACjClrE,EAAG+C,eAAe,SAAUv1B,KAAK09F,oBAGpClrE,EAAG+C,eAAe,mBAAoBv1B,KAAK89F,eAE3CtrE,EAAG+C,eAAe,kBAAmBv1B,KAAK+9F,gBAEtC/9F,KAAKoG,SAASitD,gBACf7gC,EAAG+C,eAAe,eAAgBv1B,KAAKy9F,mBAE1Cz9F,KAAKg+F,SAASzoE,eAAe,cAAev1B,KAAKy9F,mBACpD,CAEAoB,WAAW3/E,GACR,GAAIA,GAAKsnE,IAAK,CACX,MAAMpgF,EAAWpG,KAAKoG,SAEtB,MAAO,CACJ,4CACA,aAAa8Y,EAAIsnE,qDACjBpgF,EAAS6sD,UACJ,wCAAwC/zC,EAAI9d,OAAS,WACrD,GACL,uCACAgF,EAASktD,aAAeltD,EAASmtD,WAC5B,oBAAoBr0C,EAAIte,8DACxB,GACLwF,EAASotD,UAAYptD,EAASqtD,QACzB,oBAAoBv0C,EAAIte,+DACxB,GACL,2EACA,kGACA,SACA,UACD0N,KAAK,GACV,CAEK,MAAO,EACf,CAEA2uE,OACG,MAAM6hB,EAAYn7F,GAAG3D,KAAKE,IAAIs9F,UAE9BsB,GAAW15F,UACX05F,GAAWz5F,eAAe,CAAEzD,KAAM,QACrC,CAEAy7E,QACG,MAAMyhB,EAAYn7F,GAAG3D,KAAKE,IAAIs9F,UAE9BsB,GAAWp3F,SACXo3F,GAAWn3F,gBACd,CAEAxC,kBAAkB45F,GACf,MAAMvsE,EAAKxyB,KAAK2rB,eAEhB,GAAK6G,GAIFusE,GAAmB/+F,KAAKg/F,YAAc,GACtCxsE,EAAGc,WAAatzB,KAAKi/F,UACtB,CAECj/F,KAAKi9E,OAEL,UACSzqD,EAAGP,SAASjyB,KAAKi/F,WAAa,EAMvC,CALE,MAAO92F,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,4EAET,CAEAtR,KAAKq9E,OACR,CACH,CAEA7yE,OAAOozF,EAAW59F,KAAKg+F,SAASkB,aAC7B,MAAMh/F,EAAMF,KAAKE,IACXsyB,EAAKxyB,KAAK2rB,eAEhB,IAAK6G,EAAI,OAET,MAAM1a,EAAM0a,EAAG9G,WAEf,IAAK5T,EAAK,OAEV,MAAMlS,EAAQ5F,KAAKU,KAAKkzD,WAExB,IAAKhuD,EAAO,OAEZ,GAAI4sB,EAAGtG,YAAcsG,EAAGjI,eAAeC,WAKpC,YAHAgI,EAAGP,WAMN,MAAM7rB,EAAWpG,KAAKoG,SAEtB,IAAIvE,EAAO2wB,EAAGY,QAAQwqE,GAGtB,GAAIx3F,EAASitD,eAAgB,CAC1B,MAAM8rC,EAAS3sE,EAAGjG,YAEd4yE,IACDt9F,EAAOA,EAAKiH,QACR8G,IACGA,EAAEkI,EAAIiX,OAASnf,EAAEhP,IAAMgP,MACvBuvF,EAAOrnF,EAAIiX,OAASowE,EAAOv+F,IAAMu+F,KAE9C,CAEA,MAAMC,EAAS,GAEfv9F,EAAKoC,SAAS2L,IACX,MAAMyvF,EAAUzvF,EAAEhK,EAAMkB,YAExB,GAAIu4F,EAAS,CACV,MAAMC,EAAU,CACb1+F,GAAIgP,EAAEhP,GACN4lF,IAAK,SAAS6Y,KAIbj5F,EAAS6sD,YAAWqsC,EAAQl+F,MAAQ0W,EAAIirB,YAAYnzB,IAExDwvF,EAAO96F,KAAK,CACTpD,IAAK,QACLS,YAAY,EACZ4gE,SAAU,IAAI3sD,IACJ5V,KAAK6+F,cAAcjpF,GAE7B/L,KAAMy1F,GAEZ,KAGH,MAAMC,EAAKv/F,KAAK+B,GAGZ6D,EAAMQ,SAASs4C,iBAChB0gD,EAAOvyD,QAAQ,CACZ3rC,IAAK,QACLqhE,SAAU,IAAI3sD,IAAW5V,KAAK6+F,cAAcjpF,GAC5C/L,KAAM,CACHjJ,GAAI2+F,EAAG1vF,OACP22E,IAAK,SAAS5gF,EAAMQ,SAASs4C,kBAC7Bt9C,MAAOpB,KAAKoB,MAAM,oBAKvBg+F,EAAOj5F,OAAS,GACjBi5F,EAAO96F,KAAK,CACTzC,KAAM,CACH,CACGnB,KAAM,QACNW,MAAO,SACPN,OAAQqF,EAASrF,OACjBK,MAAO,+PAEV,CACGV,KAAM,QACNW,MAAO,SACPD,MAAOpB,KAAKoB,MAAM,gBAM9BpB,KAAKi/F,UAAYp9F,EAAKsE,OAGtBnG,KAAKg/F,YAAcI,EAAOj5F,OAE1B,MAAM24F,EAAYn7F,GAAGzD,EAAIs9F,UACnBgC,EAAUD,EAAG9kF,MAEnB,GAAIqkF,EAAW,CAEZU,EAAQ/+F,GAAG2+F,EAAQN,GAGnBU,EAAQ97F,OAAOo7F,EAAWU,EAAQ57F,aAGlC,MAAM4vD,EAAWptD,EAASotD,SACpBF,EAAcltD,EAASktD,YAG7BwrC,EAAUpxF,MAAM+xF,QAAWp1F,IACxB,GAAIA,EAAE28C,OAAOiD,UACV,GAAI5/C,EAAE28C,OAAOiD,UAAU58C,QAAQ,qBAAuB,EAAG,CACtDmyF,EAAQ9Z,KAAK5Y,UAAUgyB,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAItxE,EAAQjkB,EAAE28C,OAAOm9B,aAAa,aAClCnkF,KAAKi+F,SAASnB,WAAWtpC,EAAUllC,EACtC,MAAO,GACJjkB,EAAE28C,OAAOiD,UAAU58C,QAAQ,uBAAyB,EACrD,CACCmyF,EAAQ9Z,KAAK5Y,UAAUgyB,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAItxE,EAAQjkB,EAAE28C,OAAOm9B,aAAa,aAClCnkF,KAAKi+F,SAASnB,WAAWxpC,EAAahlC,EACzC,MACGjkB,EAAE28C,OAAOiD,UAAU58C,QAAQ,2BAA6B,IAExDyxF,EAAUr6F,OAAO,MAAO,cACxB+6F,EAAQG,WAAW9lF,IAAI3Z,EAAIs9F,SAAU,CAClCv8F,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLgI,SAAU,CACP,CAAC,EACD,CACGxI,KAAM,OACN6K,KAAM,cACNhK,MAAO,WACJi+F,EAAQ9Z,KAAK5Y,UACVgyB,EAAUY,UACV,cAEHF,EAAQG,WAAWC,MACtB,OAMlB,CAEN,CACH,CAEAC,gBAAgBnyF,GACb1N,KAAKg+F,SAAS8B,UAAUpyF,EAC3B,4BCjcH,MAAMqyF,EAAqB,EAAQ,OAWpB,MAAMC,UAAuBD,EACzCpgG,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,EACtC,CAYAx8B,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAK09C,aAAaiV,aAAa3yD,KAAKoG,SAAS0C,OAChD,CAQA3I,UAAU88F,GAAQ,GACf,IAAIzqE,EAAKxyB,KAAK2rB,eACV6G,IACDxyB,KAAK09C,aAAa14C,WAAWwtB,EAAG9G,YAChC1rB,KAAK09C,aAAaiV,aAAa3yD,KAAKoG,SAAS0C,SAGhD,IAAI3I,EAAY,IAAIm9F,EAAwBt9F,MAG5C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEIN,aACD,MAAO,kBAAkBG,KAAKY,IACjC,CAEI88C,mBAOD,OAN2B,MAAvB19C,KAAKigG,iBACNjgG,KAAKigG,eAAiB,IAAIC,EAAA,EACvBlgG,KAAK+B,GACL/B,KAAKH,SAGJG,KAAKigG,cACf,CAEI/B,qBAID,OAH6B,MAAzBl+F,KAAKmgG,mBACNngG,KAAKmgG,iBAAmB,IAAIC,EAAA,GAExBpgG,KAAKmgG,gBACf,oBCpFH,MAAME,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErC7gG,EAAOC,QAAU,cAA0B2gG,EAiBxClgG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAImgG,EAAqBtgG,MAGzC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEAogG,aAGG,OAFKvgG,KAAKwgG,WAAUxgG,KAAKwgG,SAAW,IAAI/8F,MAAM6oE,gBAEvCtsE,KAAKwgG,QACf,CAEAvrC,cACG,MAAMtoC,EAAK3sB,KAAK2rB,eAChB,GAAU,MAANgB,EAAY,OAAO3sB,KAAKygG,QAE5B,MAAMC,EAAW1gG,KAAKm1D,aAChBwrC,EAAW3gG,KAAKo1D,aAChBwrC,EAAY5gG,KAAKq1D,cAEvB,IAAKqrC,IAAaC,EAAU,OAAO3gG,KAAKygG,QAGxC,MAAMI,EAAgBF,EAAS75F,WAE/B,IAAIg6F,EAAiB,GAEjB9gG,KAAKoG,SAAS2uD,gBAAkB6rC,IACjCE,EAAiBF,EAAU95F,YAG9B,MAAMi6F,EAAY,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGGC,EAAQr0E,EAAGyG,UAEjB,IAAIwL,EAAU,GACVqiE,EAAU,CAAC,EACXC,EAAY,EACZC,EAAa,EACbC,EAAcJ,EAAM76F,OAExB66F,EAAM/8F,SAASmK,IACZ,MAAM0jD,EAAW4uC,EAASpgF,OAAOlS,IAASA,EAAKxN,GAE/C,IAAI02C,EAAYP,WAAW3oC,EAAKyyF,IAAkB,GAC9CQ,EAAa,KAKjB,OAHIrhG,KAAKoG,SAAS2uD,iBACfssC,EAAatqD,WAAW3oC,EAAK0yF,KAAoB,GAE5CH,EAASt8F,KAEd,IAAK,UACFizC,EAAYqpD,EAASrgF,OAAOlS,GAE5B,MAGH,IAAK,YACFkpC,EAAYP,WACT4pD,EAAShhG,YAAYi4C,YAClB+oD,EAAS17F,OACT07F,EAASv6F,SAAS6wC,QAClB7oC,EACAuyF,EAASv6F,SAAS+wC,gBAU9B,GAAyB,MAArB8pD,EAAQnvC,GAAmB,CAC5B,IAAI1wD,EAAQ0wD,EAGZ,GAAI4uC,EAAS//D,aAAc,CACxB,IAAI2gE,EAAeZ,EAAStoD,mBAAmBhqC,GAC3B,MAAhBkzF,IAEElgG,EADC+L,MAAMC,QAAQk0F,GACPA,EACJnzF,KAAK6H,GAAQA,EAAI3H,MAAQ,KACzBC,KAAK,MACCgzF,EAAajzF,KAEhC,CAEIrO,KAAKoG,SAAS2uD,eACfksC,EAAQnvC,GAAY,CACjB1wD,MAAOA,GAASgN,EAAKxN,GACrB+B,MAAO,EACP4+F,OAAQ,GAGXN,EAAQnvC,GAAY,CACjB1wD,MAAOA,GAASgN,EAAKxN,GACrB+B,MAAO,EAGhB,CAEAs+F,EAAQnvC,GAAUnvD,OAAS20C,EAC3B4pD,GAAa5pD,EAETt3C,KAAKoG,SAAS2uD,iBACfksC,EAAQnvC,GAAUyvC,QAAUF,EAC5BF,GAAcE,EACjB,IAGH,IAAIt1F,EAAQ,EAEZ,IAAK,MAAM1H,KAAO48F,EAAS,CACxB,IAAIjrF,EAAMirF,EAAQ58F,GAAK1B,MAEvB,KAAIqT,GAAO,GAAX,CASA,GANIhW,KAAKoG,SAASyuD,eACf7+C,EAAOA,EAAMkrF,EAAa,IAC1BlrF,EAAMzP,KAAKuvC,MAAY,IAAN9/B,GAAa,IAC9BA,GAAY,MAGXhW,KAAKoG,SAAS2uD,eAAgB,CAC/B,IAAIysC,EAAOP,EAAQ58F,GAAKk9F,OAExB,GAAIC,GAAQ,EAAG,SAGXxhG,KAAKoG,SAASyuD,eACf2sC,EAAQA,EAAOL,EAAc,IAC7BK,EAAOj7F,KAAKuvC,MAAa,IAAP0rD,GAAc,IAChCA,GAAc,MAGjB5iE,EAAQt6B,KAAK,CACVlD,MAAO6/F,EAAQ58F,GAAKjD,MACpBuB,MAAOqT,EACPurF,OAAQC,EACRC,MAAOV,EAAUh1F,EAAQg1F,EAAU56F,QACnC+qB,MAAOkwE,GAEb,MACGxiE,EAAQt6B,KAAK,CACVlD,MAAO6/F,EAAQ58F,GAAKjD,MACpBuB,MAAOqT,EACPyrF,MAAOV,EAAUh1F,EAAQg1F,EAAU56F,QACnC+qB,MAAOkwE,IAIbr1F,GAAS,CArCa,CAsCzB,CAEA,MAAM00F,EAAUzgG,KAAKugG,aAErBE,EAAQ3lF,WACR2lF,EAAQlpF,MAAMqnB,EACjB,oBC/MH,MAAM8iE,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzCliG,EAAOC,QAAU,cAA8BgiG,EAW5CvhG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIwhG,EAAyB3hG,MAG7C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCjCH,MAAMyhG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExCpiG,EAAOC,QAAU,cAA6BkiG,EAW3CzhG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI0hG,EAAwB7hG,MAG5C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCjCH,MAAMyxD,EAAe,EAAQ,OACvBkwC,EAAgC,EAAQ,MAE9CriG,EAAOC,QAAU,cAAmCkyD,EACjDrtD,gBAAgB3E,EAAKq2E,EAAM9zE,GACxB,IAAIhC,EAAYH,KAAKG,UAAUP,GAC3Bu+F,EAAMh+F,EAAUM,GACpB09F,EAAIv9F,GAAKuB,EAAQ4/F,YAEjB,IAKIvgG,EAASrB,EAAUm7E,MACnB0mB,EAAU7hG,EAAUqK,OAExB,MAAO,CACJ/J,GAAI09F,EACJ76F,KAVS,KACTnD,EAAUmD,KAAK,CACZy+F,YAAa5D,EAAIv9F,IAClB,EAQF06E,MAAO95E,EACPgJ,OAAQw3F,EAEd,CAQA7hG,UAAU88F,GACP,IAAI98F,EAAY,IAAI2hG,EAA8B9hG,MAGlD,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEIwrB,qBACD,OAAO3rB,KAAK+U,OAAO4W,cACtB,oBCtDH,MAAMs2E,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzCziG,EAAOC,QAAU,cAA8BuiG,EAW5C9hG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI+hG,EAAyBliG,MAG7C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCjCH,MAAMgiG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExC3iG,EAAOC,QAAU,cAA6ByiG,EAW3ChiG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIiiG,EAAwBpiG,MAG5C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBCjCH,MAAMkiG,EAAoB,EAAQ,OAC5BC,EAAyB,EAAQ,OAEvC7iG,EAAOC,QAAU,cAA4B2iG,EAW1CliG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAImiG,EAAuBtiG,MAG3C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCjCH,MAAMoiG,EAAiC,EAAQ,OACzCC,EAAsC,EAAQ,OAEpD/iG,EAAOC,QAAU,cAAyC,EASvDS,UAAU88F,GACP,IAAI98F,EAAY,IAAIqiG,EAAoCxiG,MAGxD,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEAgF,aACG,MAAMs9F,EAASziG,KAAKknB,QAAQ4F,MAAM1Z,GAAiB,OAAXA,EAAEjM,OACpCu7F,EAAW1iG,KAAKknB,QAAQ4F,MAAM1Z,GAAiB,SAAXA,EAAEjM,OACtCw7F,EAAc,GAEhBF,GAAQE,EAAYr+F,KAAKm+F,EAAO76F,QAEhC86F,GAAUC,EAAYr+F,KAAKo+F,EAAS96F,cAElC6H,QAAQ4R,IAAIshF,SAEZ7iG,MAAM8H,MACf,iGC1CY,MAAMg7F,UAAyChG,EAAA,EAC3Dj9F,YAAY49F,EAAUsF,EAAQ3iG,GAC3BJ,MACGy9F,EACAsF,GAAU,2BAA2BtF,EAAS38F,KAC9CuT,OAAOsnC,OACJ,CACG3yC,OAAQ,GACRwR,MAAO,IAEVpa,IAINF,KAAK4F,MAAQ,IAChB,CAEAnF,KACG,MAAMP,EAAMF,KAAKE,IACXi+F,EAAMr+F,MAAMW,GAAG,CAClB,CACGmB,KAAM,QACND,YAAY,EACZR,KAAM,CACH,CACGT,KAAM,OACN6K,KAAM,eACNlK,MAAO,OACP8kC,UAAU,GAEb,CACGzlC,KAAM,QACNE,GAAIV,EAAI4I,OACRhH,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,iBACxCqpB,UAAU,EACV/jC,GAAI,CACDC,SAAWzB,GAAOZ,KAAK8iG,mBAAmBliG,KAGhD,CACGF,KAAM,OACNE,GAAIV,EAAIoa,MACR/O,KAAM,cACNlK,MAAO,OACP8kC,UAAU,EACV48D,QAAS/iG,KAAKoB,MAAM,uBACpBgB,GAAI,CACDgI,YAAa,IAAMpK,KAAKgjG,2BASvC,cAFO7E,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMywB,EAAKxyB,KAAK2rB,eAEhB,IAAK6G,EAAI,OAET,MAAMvtB,EAASutB,EAAG9G,WAElB,IAAKzmB,EAAQ,OAEb,MAAOW,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe9G,KAAKoG,SAASR,QAGzC,IAAKA,EASF,YARA5F,KAAK+B,GAAGqG,OAAOC,UACZ,sBAAsBrI,KAAKoG,SAASR,aAAaX,EAAOkC,OACxD,CACGmI,QAAS,0CACTzF,KAAM,CAAEzD,SAAUpG,KAAKoG,YAOhCpG,KAAK4F,MAAQA,EAEb,MAAM1F,EAAMF,KAAKE,IACXk5E,EAAU31E,MAAMhD,GAAG,CACtBC,KAAM,UACNoI,OAAQ,EAAGnG,SAASoT,IACjBpT,EAAMwV,cAAc61B,SAASj4B,EAAOoC,eACvC/V,GAAI,CACDoI,OAAQ,KACL5E,EAAM07E,sBAAsB39E,GAAGzD,EAAI4I,QAASlD,EAAO,CAAC,EAAE,KAI/DA,EAAMu5E,sBAAsB/F,EAAS,KAAMxzE,GAE3C,MAAMq9F,EAAUt/F,GAAGzD,EAAI4I,QAEvBm6F,EAAQx+F,OAAO,UAAW20E,GAC1B6pB,EAAQx+F,OAAO,QAAS,GAAGzE,KAAKoB,MAAM,gBAAgBwE,EAAMxE,SAC5D6hG,EAAQv7F,SACRu7F,EAAQv+F,SACX,CAEAs+F,qBACG,MAAM9iG,EAAMF,KAAKE,IACXysB,EAAK3sB,KAAK2rB,eAEhBgB,EAAG4B,gBAAgB,CAAEhF,KAAM,MAAOpI,MAAO,KACzCwL,EAAGwD,aAGH,MAAM8yE,EAAUt/F,GAAGzD,EAAI4I,QAEvBm6F,EAAQznB,aACRynB,EAAQp+F,WACRo+F,EAAQxnB,eACRwnB,EAAQ79F,SACX,CAEA09F,mBAAmBI,GAChB,MAAMC,EAAa,CAChB9+F,IAAKrE,KAAK4F,MAAMhF,GAChB6uB,KAAM,SACN9sB,MAAOugG,GAEJv2E,EAAK3sB,KAAK2rB,eAEhBgB,EAAG4B,gBAAgB,CAAEhF,KAAM,MAAOpI,MAAO,CAACgiF,KAC1Cx2E,EAAGwD,aACHxsB,GAAG3D,KAAKE,IAAIoa,OAAO5S,QACtB,ECvIY,MAAM07F,UAAgC,KAOlDjjG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIyiG,EAAiC5iG,MAGrD,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CACA,OAAOzV,CACV,oBC3BH,MAAMkjG,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC7jG,EAAOC,QAAU,cAA8B2jG,EAc5CljG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAImjG,EAAyBtjG,MAG7C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,4IC9BY,MAAMojG,UAAkC3G,EAAA,EACpDj9F,YAAY49F,EAAUsF,EAAQ3iG,GAC3BJ,MACGy9F,EACAsF,GAAU,oBAAoBtF,EAAS38F,KACvCuT,OAAOsnC,OACJ,CACG3yC,OAAQ,GACRwR,MAAO,GACPkpF,WAAY,GACZC,aAAc,GACdC,oBAAqB,IAExBxjG,IAINF,KAAK2jG,oBAAsB,CAAC/F,EAAUC,KACnC79F,KAAK4jG,mBAAmBhG,EAAUC,EAAY,EAGjD79F,KAAK4F,MAAQ,KACb,MAAM25F,EAAKv/F,KAAK+B,GAIhB/B,KAAK6jG,mBAAqB,IAAI,IAC3B,+BAA+B7jG,KAAKoG,SAAS4rD,cAEhDhyD,KAAK6jG,mBAAmBvgG,KAAKi8F,GAC7Bv/F,KAAK6jG,mBAAmBzhG,GAAG,WAAY0hG,IACpC9jG,KAAK+jG,iBAAiBD,EAAY,IAGrC9jG,KAAK09C,aAAe,IAAI,IACrB19C,KAAK+B,GACL,iCAAiC/B,KAAKoG,SAAS4rD,cAElDhyD,KAAK09C,aAAat3C,SAAW,CAC1B+6D,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAEpBrhE,KAAK09C,aAAap6C,KAAKi8F,GACvBv/F,KAAK4+F,UACL5+F,KAAK09C,aAAat7C,GAAG,cAAepC,KAAK2jG,oBAC5C,CAEAK,aACG,MAAMC,EAASjkG,KAAKE,IAAIC,UACxB,MAAO,CACJ,CACGe,IAAK,UACLgjG,UAAW,GACXriG,KAAM,CACH,CAAC,EACD,CACGV,KAAM,CACH,CACGH,MAAO,IAEV,CACGN,KAAM,SACNkB,KAAM,OACN2J,KAAM,eACNvK,MAAO,GACPJ,GAAIZ,KAAKE,IAAIujG,aACbviG,IAAK,+BAA+BlB,KAAKoG,SAAS4rD,aAClDzwD,MAAO,CAACX,EAAIsvB,KACTlwB,KAAKmkG,cAAcxgG,GAAG3D,KAAKE,IAAIujG,cAAc/1F,MAAM,EAEtDtL,GAAI,CACD+0E,cAAe,WACZn3E,KAAKokG,eAAe1iB,aACjB,UACA,GAAGuiB,kBAET,IAGN,CACGvjG,KAAM,SACNkB,KAAM,OACN2J,KAAM,aACNvK,MAAO,GACPJ,GAAIZ,KAAKE,IAAIsjG,WACbtiG,IAAK,6BAA6BlB,KAAKoG,SAAS4rD,aAChDzwD,MAAO,CAACX,EAAIsvB,KACTlwB,KAAKqkG,SAAS1gG,GAAG3D,KAAKE,IAAIsjG,YAAY91F,MAAM,EAE/CtL,GAAI,CACD+0E,cAAe,WACZn3E,KAAKokG,eAAe1iB,aACjB,UACA,GAAGuiB,gBAET,IAGN,CACGrjG,GAAIZ,KAAKE,IAAIwjG,oBACbhjG,KAAM,SACNg3E,YAAa13E,KAAKoB,MAAM,YACxBF,IAAK,sBAAsBlB,KAAKoG,SAAS4rD,aACzChxD,MAAO,EACPgiB,WAAY,CACT,UAAW,GAAGhjB,KAAKE,IAAIC,0BACvBwrB,eAAgB3rB,KAAKoG,SAAS4rD,YAEjC5vD,GAAI,CACDy3E,gBAAiB,KACd,MAAM70D,EAAarhB,GAChB3D,KAAKE,IAAIwjG,qBACVz3F,WAGSjM,KAAK2rB,eACbvlB,SAASijB,gBAAgBrE,WACzBA,EAEHhlB,KAAK09C,aAAa4mD,mBAAmBt/E,EAAW,IAIzD,CACGhkB,MAAO,MAIhB,CAAC,IAIb,CAEAujG,mBACG,MAAO,CACJ,CACGrjG,IAAK,UACLgjG,UAAW,GACX/iG,KAAM,CACH,CACGH,MAAO,IAEV,CACGa,KAAM,CACH,CAAC,EACD,CACGnB,KAAM,YACN+B,MAAO,CACJ,CACGvB,IAAK,UACLR,KAAM,QACNE,GAAIZ,KAAKE,IAAI4I,OACbhH,WAAY,EACZ0iG,UAAU,EACVr+D,UAAU,EACV/jC,GAAI,CACDC,SAAWzB,GAAOZ,KAAK8iG,mBAAmBliG,KAGhD,CACGF,KAAM,OACNE,GAAIZ,KAAKE,IAAIoa,MACb/O,KAAM,cACNk5F,MAAO,GACPC,IAAK,EACL1jG,MAAO,GACPD,OAAQ,GACR8zE,QAAQ,EACRkuB,QAAS/iG,KAAKoB,MAAM,sBACpBgB,GAAI,CACDgI,YAAa,IACVzG,GAAG3D,KAAKE,IAAI4I,QAAQjE,eAKnC,CAAC,IAGP,CACG7D,MAAO,MAKtB,CAEAP,KACG,GAA8B,YAA1BT,KAAKoG,SAASq0D,UACf,IAAKz6D,MAAMoG,UAAU4rD,WAAY,MAAO,CAAEjxD,OAAQ,QAElD,IAAKf,MAAMoG,UAAU4rD,aAAehyD,MAAMoG,UAAUR,MACjD,MAAO,CAAE7E,OAAQ,GAGvB,MAAMN,EACuB,YAA1BT,KAAKoG,SAASq0D,SACTz6D,KAAKgkG,aACLhkG,KAAKukG,mBACPpG,EAAMr+F,MAAMW,GAAGA,GAIrB,cAFO09F,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMywB,EAAKxyB,KAAK2rB,eAEhB,IAAK6G,EAAI,OAET,MAAMvtB,EAASutB,EAAG9G,WAElB,GAAKzmB,EAEL,GAA8B,YAA1BjF,KAAKoG,SAASq0D,SACXz6D,KAAKoG,SAASu0D,UACf36D,KAAK6jG,mBAAmB7+F,WAAWC,GAEnCjF,KAAK6jG,mBAAmBz3F,YACrBomB,GAAIpsB,UAAUijB,iBAAiB9c,aAGlC5I,GAAG3D,KAAKE,IAAIsjG,YAAY7+F,OAEvB3E,KAAKoG,SAASs0D,WACf16D,KAAK09C,aAAa14C,WAAWC,GAE7BtB,GAAG3D,KAAKE,IAAIujG,cAAc9+F,YAEzB,GAA8B,aAA1B3E,KAAKoG,SAASq0D,SAAyB,CAC/C,MAAO70D,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe9G,KAAKoG,SAASR,QAGzC,IAAKA,EASF,YARA5F,KAAK+B,GAAGqG,OAAOC,UACZ,sBAAsBrI,KAAKoG,SAASR,aAAaX,EAAOkC,OACxD,CACGmI,QAAS,mCACTzF,KAAM,CAAEzD,SAAUpG,KAAKoG,YAOhCpG,KAAK4F,MAAQA,EAEb,MAAM1F,EAAMF,KAAKE,IACXk5E,EAAU31E,MAAMhD,GAAG,CACtBC,KAAM,UACNoI,OAAQ,EAAGnG,SAASoT,IACjBpT,EAAMwV,cAAc61B,SAASj4B,EAAOoC,eACvC/V,GAAI,CACDoI,OAAQ,KACL5E,EAAM07E,sBAAsB39E,GAAGzD,EAAI4I,QAASlD,EAAO,CAAC,EAAE,GAG5Dg6E,gBAAgB,IAEnBh6E,EAAMu5E,sBAAsB/F,EAAS,KAAMxzE,GAE3C,MAAMq9F,EAAUt/F,GAAGzD,EAAI4I,QAEvBm6F,EAAQx+F,OAAO,UAAW20E,GAC1B6pB,EAAQx+F,OACL,cACA,GAAGzE,KAAKoB,MAAM,gBAAgBwE,EAAMxE,SAEvC6hG,EAAQv7F,SACRu7F,EAAQv+F,SACX,CACH,CAEA8F,SACG1K,MAAM0K,SACNxK,KAAK2kG,UACR,CAEA7B,mBAAmBI,GAChB,IAAIC,EAAa,GACbD,GACDv/F,GAAG3D,KAAKE,IAAIoa,OAAO1V,OACnBu+F,EAAa,CACV,CACG9+F,IAAKrE,KAAK4F,MAAMhF,GAChB6uB,KAAM,SACN9sB,MAAOugG,KAIbv/F,GAAG3D,KAAKE,IAAIoa,OAAO3V,OAEtB,MAAMgoB,EAAK3sB,KAAK2rB,eAEhBgB,EAAG4B,gBAAgB,CAAEhF,KAAM,MAAOpI,MAAOgiF,IACzCx2E,EAAGwD,YACN,CAEAk0E,SAAS32F,GACN1N,KAAK6jG,mBAAmBj/F,KAAK8I,EAChC,CAQAvI,uBAAuBy/F,EAAY,IAChC,MAAMj4E,EAAK3sB,KAAK2rB,eACX,YAAUgB,GAAIvmB,UAAUijB,iBAAiB9c,WAAYq4F,KACvDj4E,EAAGvmB,SAASijB,gBAAgB9c,WAAaq4F,QACnC5kG,KAAK2rB,eAAewE,cAE7BnwB,KAAK2kG,UACR,CAWAf,mBAAmBhG,EAAUC,EAAc,IACxC,MAAMlxE,EAAK3sB,KAAK2rB,eACX,YAAUgB,GAAIlC,aAAcozE,KAC9BlxE,EAAG4B,gBAAgBsvE,GACnBlxE,EAAGwD,aACHnwB,KAAK2kG,WAEX,CAEAR,cAAcz2F,GACX1N,KAAK09C,aAAaoiD,UAAUpyF,EAC/B,CAEAi3F,WACG,MAAMh4E,EAAK3sB,KAAK2rB,eAEhB,IAAKgB,EAAI,OAET,IAAIk4E,EAAgBt6D,SAASu/C,uBAC1B,iBAAiB9pF,KAAKoG,SAAS4rD,cAGlC,MAAM8yC,EAAkB9kG,KAAK09C,aAAamgD,cAC1C,IAAIkH,EACDD,GAAiB3jF,OAAOhb,OAAS,EAC5B2+F,GAAiB3jF,OAAOhb,OACxB,KACR,IAAK,IAAI0H,KAAKg3F,EACXlhG,GAAGkK,GAAGpJ,OAAO,QAASsgG,GACtBphG,GAAGkK,GAAGnJ,UAGT,IAAIsgG,EAAcz6D,SAASu/C,uBACxB,eAAe9pF,KAAKoG,SAAS4rD,cAGhC,MAAMizC,EAAgBt4E,EAAGvmB,SAASijB,gBAAgB9c,WAClD,IAAI24F,EAAYD,GAAe9+F,OAAS,EAAI8+F,GAAe9+F,OAAS,KAEpE,IAAK,IAAI0H,KAAKm3F,EACXrhG,GAAGkK,GAAGpJ,OAAO,QAASygG,GACtBvhG,GAAGkK,GAAGnJ,UAGT,IAAIygG,EAAe56D,SAASu/C,uBACzB,sBAAsB9pF,KAAKoG,SAAS4rD,cAGvC,MAAMhtC,EAAa2H,EAAGvmB,SAASijB,gBAAgBrE,WAC/C,GAAkB,MAAdA,EACD,IAAK,IAAIpY,KAAKu4F,EAAc,CACzB,IAAIC,EAAgB76D,SAAS66D,cAE1BA,GAAepiF,YAAY2I,gBAAgBhpB,OACxC3C,KAAKoG,SAAS4rD,YACjBozC,GAAiBx4F,EAAE4lE,qBAAqB,SAAS,IAIjD7uE,GAAGiJ,GAAG/H,SAASmgB,EAErB,CAEN,CAEA45E,UACG5+F,KAAK09C,aAAanoB,eAAe,cAAev1B,KAAK2jG,oBAExD,EClZY,MAAM0B,UAAyB,KAO3CllG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIojG,EAA0BvjG,MAG9C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CACA,OAAOzV,CACV,oBC3BH,MAAMmlG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAElCxqC,EAAyBuqC,EAAmB7iE,gBAIlDhjC,EAAOC,QAAU,cAA6B4lG,EAW3Cr/F,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAKoG,SAASktD,YACXtzD,KAAKoG,SAASktD,aAAeyH,EAAuBzH,YACvDtzD,KAAKoG,SAASotD,SACXxzD,KAAKoG,SAASotD,UAAYuH,EAAuBvH,SACpDxzD,KAAKoG,SAASmtD,WACXvzD,KAAKoG,SAASmtD,YAAcwH,EAAuBxH,WACtDvzD,KAAKoG,SAASqtD,QACXzzD,KAAKoG,SAASqtD,SAAWsH,EAAuBtH,OACtD,CAUAtzD,UAAU88F,EAAOC,GACd,IAAI/8F,EAAY,IAAIolG,EAAwBvlG,MAG5C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCzDH,MAAMqlG,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtChmG,EAAOC,QAAU,cAA2B8lG,EAazCrlG,UAAU88F,EAAOC,GACd,IAAI/8F,EAAY,IAAIslG,EAAsBzlG,MAG1C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBClCH,MAAMulG,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9ClmG,EAAOC,QAAU,cAAmCgmG,EAQjDvlG,UAAU88F,GACP,IAAI98F,EAAY,IAAIwlG,EAA8B3lG,MAGlD,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC7BH,MAAMylG,EAA0B,EAAQ,OAClCC,EACH,WAEGC,EAA+B,EAAQ,OAE7CrmG,EAAOC,QAAU,cAAkCkmG,EAWhD3/F,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAK+lG,YAAYpzC,aAAa3yD,KAAKoG,SACtC,CAUAjG,UAAU88F,EAAOC,GACd,IAAI/8F,EAAY,IAAI2lG,EAA6B9lG,MAGjD,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEI4lG,kBAID,OAH0B,MAAtB/lG,KAAKgmG,gBACNhmG,KAAKgmG,cAAgB,IAAIH,GAErB7lG,KAAKgmG,aACf,oBCxDH,MAAMC,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,MAE5CzmG,EAAOC,QAAU,cAAiCumG,EAS/C9lG,UAAU88F,GACP,IAAI98F,EAAY,IAAI+lG,EAA4BlmG,MAGhD,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMgmG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3C3mG,EAAOC,QAAU,cAAgCymG,EAS9ChmG,UAAU88F,EAAOC,GACd,IAAI/8F,EAAY,IAAIimG,EAA2BpmG,MAG/C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMkmG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C7mG,EAAOC,QAAU,cAA+B2mG,EAW7ClmG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAImmG,EAA0BtmG,MAG9C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBChCH,MAAMomG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C/mG,EAAOC,QAAU,cAA+B6mG,EAiB7CpmG,UAAU88F,GACP,IAAI98F,EAAY,IAAIqmG,EAA0BxmG,MAG9C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCtCH,MAAMsmG,EAAuB,EAAQ,MAC/BC,EAA4B,EAAQ,MAE1CjnG,EAAOC,QAAU,cAA+B+mG,EAkB7CtmG,UAAU88F,EAAOC,GACd,IAAI/8F,EAAY,IAAIumG,EAA0B1mG,MAG9C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBCvCH,MAAMwmG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CnnG,EAAOC,QAAU,cAAgCinG,EAO9CxmG,UAAU88F,GACP,IAAI98F,EAAY,IAAIymG,EAA2B5mG,MAG/C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEA0mG,gBAAgBC,EAAM/pD,GACnB,MAAMzsC,EAAM0I,OAAO+tF,IAAIC,gBAAgBF,GAEjCl5F,EAAI28B,SAASC,cAAc,KACjC58B,EAAE22E,KAAOj0E,EACT1C,EAAEq5F,SAAWlqD,EACbxS,SAAS9oC,KAAKmpF,YAAYh9E,GAC1BA,EAAErM,QACFqM,EAAEiN,SAEF7B,OAAO+tF,IAAIG,gBAAgB52F,EAC9B,oBCzCH,MAAM62F,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAC9BC,EAAmB,EAAQ,OAC3B9nC,EAAmB,EAAQ,OAC3B+nC,EAAoB,EAAQ,OAC5BC,EAA2B,EAAQ,OAEnCC,GADoB,EAAQ,OACX,EAAQ,QAazBzpC,EAAsCopC,EAAe1kE,gBAE3DhjC,EAAOC,QAAU,cAAyBynG,EACvCxnG,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAEnCziC,KAAKynG,WAAa,CACfC,iBAAkB,KAAM,EAE9B,CAEAC,iBAIG,OAH4B,MAAxB3nG,KAAK4nG,kBACN5nG,KAAK4nG,gBAAkB9nG,MAAMK,aAEzBH,KAAK4nG,eACf,CAQAznG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIinG,EAAoBpnG,MAGxC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEA0nG,qBAAqB3nG,GAElB,IAAI4nG,EAAgB9nG,KAAKknB,OACrB9T,GAAMA,aAAai0F,GAAoBj0F,EAAEhN,SAASi3D,YACpD,GAGmB,MAAjByqC,GACDA,EAAgBT,EAAiB5rC,YAAYz7D,KAAK+E,YAAa/E,MAC/D8nG,EAAc1hG,SAASi3D,WAAY,GAInCr9D,KAAKmnB,OAASnnB,KAAKknB,OACf9T,KAAQA,aAAai0F,GAAsBj0F,EAAEhN,SAASi3D,aAK7D,IAAI0qC,EAAQ/nG,KAAKknB,QAAQ/Y,KAAKiF,IAAOA,EAAEzS,SAAS22D,GAAK,GAAK,IAC1DywC,EAAMzjG,KAAKtE,KAAKmnB,OAAOhhB,QAAU,GACjC4hG,EAAMzjG,KAAKX,GAAGzD,EAAI6G,QAAQZ,QAAU,GACpC,IAAI6hG,EAAOzhG,KAAK03C,OAAO8pD,GAQvB,OALAD,EAAcnnG,SAAS22D,EAAI0wC,EAG3BhoG,KAAKmnB,OAAO7iB,KAAKwjG,GAEVA,CACV,CAUAG,cAAc7sC,EAAUtjD,EAAK6U,EAAIu7E,GAE9B,MAAMC,EAAgB,CAAC,MACvB/sC,EAAS6wB,WAAU,SAAUn0E,GAC1BqwF,EAAc7jG,KAAKwT,EAAI7V,OAAOkF,KACjC,IAGA,MAAMihG,EAAUhtC,EAAS6wB,YACnBoc,EAAW,CAAC,EAClBF,EAAclkG,SAAS+R,IACpBqyF,EAASryF,GAAOoyF,EAAQpyF,EAAI,IAI/BhW,KAAKq+D,iBACDlR,GACEA,aAAgBoS,GAChBpS,aAAgBm6C,GAChBn6C,aAAgBo6C,GACfp6C,aAAgBq6C,GAAwC,UAAtBr6C,EAAK/mD,SAASxE,OACrDqC,SAAS+C,IACR,MAAMshG,EAAatoG,KAAKuoG,eAAevhG,EAAEpG,IACzC,GAAkB,MAAd0nG,EAAoB,OAExB,MAAM1iG,EAAQoB,EAAEpB,QAChB,GAAIA,EAAO,CACR,MAAMqG,EAAWq8F,EAAWr8F,UAAYq8F,EAAWhtB,MAAMrvE,SACrDA,IACDo8F,EAASziG,EAAMkB,YAAcmF,EAASmuC,KAAKkuD,EAAYD,GAC7D,KAIHvwF,EAAIyO,gBAAgBtiB,SAAS+C,KAEiB,GAAxCmhG,EAAc96F,QAAQrG,EAAEF,aACxBuhG,EAASrhG,EAAEF,qBAEJuhG,EAASrhG,EAAEF,mBACXuhG,EAASrhG,EAAEwpB,gBACrB,IAIH,IAAK,MAAMsS,KAAQulE,EACM,MAAlBA,EAASvlE,IAA0C,GAAzBulE,EAASvlE,GAAM38B,SAC1CkiG,EAASvlE,GAAQ,IAIvB,IAAI0lE,EAMJ,GAJIN,IACDM,EAAaN,EAAO37E,aAGnBi8E,EAAY,CACb,MAAMtpE,EAAagpE,EAAOx8E,WAEJ5T,EAAIyO,gBACZtiB,SAAS+C,IACpB,MAAMyhG,EAAezoG,KAAKq+D,iBACtBqqC,GAAUA,GAAO9iG,WAAWhF,KAAOoG,GAAGpG,KAG1C,GACGs+B,EAAWt+B,IAAMoG,EAAEZ,SAASO,YAC5B8hG,EAAatiG,OAAS,QACKwkB,IAA3B09E,EAASrhG,EAAEF,YACZ,CACC,MAAM6hG,EAAc3hG,EAAEK,WACjBL,EAAEK,WAAWP,WACbo4B,EAAWnQ,KAEhBs5E,EAASrhG,EAAEF,YAAc,CAAC,EAC1BuhG,EAASrhG,EAAEF,YAAY6hG,GACpBH,EAAWG,IAAgBH,EAAW5nG,EAC5C,IAEN,CAIA,MAAMgoG,EAAiBz0F,OAAOsnC,OAAO9uB,EAAGJ,aAAe,CAAC,EAAG87E,GAW3D,OARAvwF,EAAI/Q,QAAQC,GAAe,aAATA,EAAE3C,KAA+B,WAAT2C,EAAE3C,MAAkBJ,SAC1D+C,IACgC,MAA1BqhG,EAASrhG,EAAEF,cACZuhG,EAASrhG,EAAEF,YAAcE,EAAEsZ,OAAOsoF,GAAgB,GACrD,IAICP,CACV,CAWAQ,aAAaC,EAAW7jG,EAAQojG,GAC7B,IAAI9iG,GAAU,EAGd,MAAMwjG,EAAiB/oG,KAAKq+D,iBACxBqqC,GACyC,GAAvCA,GAAO9iG,UAAUQ,UAAUkzC,UACE,GAA7BovD,GAAOtiG,UAAUkzC,WACrBnrC,KAAKu6F,GAAUA,EAAM9iG,UAGvB,IAAI2B,EA4CJ,GA3CIhC,IACDgC,EAAYtC,EAAO4qB,YAAYw4E,GAC/B9iG,EAAUgC,EAAUiW,QAIvBsrF,EAAUnvB,WAGVovB,EAAe9kG,SAAS+C,IACrB,IAAKA,EAAG,OAER,MAAM+jC,EAAWs9D,EAASrhG,EAAEF,YAC5B,GAAgB,IAAZikC,GAA8B,MAAZA,GAAoBA,EAAS5kC,OAAS,EAAG,CAC5D2iG,EAAU9pF,YAAYhY,EAAEF,WArO1B,KAAI8O,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAqOF7V,CAAE,8BACtCwF,GAAU,EAGV,MAAMyjG,EAAaF,EAAU5/F,SAASlC,EAAEF,YACxC,GAAIkiG,EAAY,CAEEA,EAAWC,QACb,KACVD,EAAWvkG,OAAO,SAAU,IAC5BukG,EAAWnoG,UAId,MAAMqoG,EACHF,EAAWt7F,MAAMo8E,uBACd,0BACD,GACAof,GAAmB7xB,MAAM,iBAC3B6xB,EAAkB7xB,MAAM8xB,WAAa,GAClCnpG,KAAKoG,SAAStE,YACdi8D,EAAoCj8D,eAG7C,CACH,MAIEyD,EAAS,CACX,MAAM6jG,EAAaN,EAAU1xB,UAAU,CACpC12E,KAAM,SACNkB,KAAM,SAIL2F,GAAW+V,QAAQnX,QACpBoB,EAAU+V,OAAOrZ,SAASkE,IACvB2gG,EAAU9pF,YAAY7W,EAAIhB,KAAMgB,EAAImJ,QAAQ,IAG/C83F,GAAYhkG,WAEZgkG,GAAY1hG,QAElB,CAEA,OAAOnC,CACV,CAQAJ,yBACG,OAAOnF,KAAKwyD,WAAW62C,YAC1B,CASAlkG,eAAe2jG,GAGZ,IAAK9oG,KAAKynG,YAAYC,qBAAsB,OAG5C,IAAKoB,IAAcA,EAAUnvB,WAE1B,OAGHmvB,EAAUQ,kBAGV,MAAM92E,EAAKxyB,KAAK2rB,eAChB,GAAU,MAAN6G,EAAY,OAGhB,MAAM1a,EAAM0a,EAAG9G,WACf,GAAW,MAAP5T,EAAa,OAGjB,MAAM9P,EAAQwqB,EAAGxqB,MACjB,GAAa,MAATA,EAAe,OAGnB,MAAMqgG,EAAWroG,KAAKioG,cACnBa,EACAhxF,EACA0a,EACAA,EAAG3G,oBAIA09E,EAAaC,IAEZh3E,IACGxyB,KAAKoG,SAAS63D,aACfzrC,EAAGrG,UAAU,MACb28E,EAAU5jG,SAENskG,GAAeA,EAAY5oG,IAAI4xB,EAAGrG,UAAUq9E,EAAY5oG,KAIlEkoG,EAAUnhG,iBAIN6hG,GAAaxpG,KAAKwP,KAAK,QAASg6F,EAAY,EAG7CC,EAAathG,IAChB,MAAMuhG,EAAcZ,EAAU1xB,UAAU,CACrC12E,KAAM,SACNkB,KAAM,SAIT,GAAIuG,EACD,GAAIA,EAAIuV,kBACL,IAAK,MAAMC,KAAQxV,EAAIuV,kBAAmB,CACvC,IAAIisF,EAAexhG,EAAIuV,kBAAkBC,GACrCgsF,GAAgBA,EAAa,KAC9BA,EAAeA,EAAa,IAE/Bb,EAAU9pF,YAAYrB,EAAMgsF,EAAar4F,QAC5C,MACQnJ,EAAIyhG,WACZnmG,MAAM6N,QAAQ,CACXjD,KAAMlG,EAAIyhG,WACVhoG,KAAM,WAGT6B,MAAM6N,QAAQ,CACXjD,KAAM,kCACNzM,KAAM,UAET5B,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,2BACT5Q,KAAMV,KAAK8F,WAKpB4jG,GAAahiG,SAEbohG,GAAWnhG,gBAAgB,EAU9B,SANM3H,KAAK6pG,mBAGX7pG,KAAK4yD,iBAAiBy1C,IAGjBroG,KAAK6oG,aAAaC,EAAWhxF,EAAKuwF,GAEpC,YADA7/F,QAAQC,KAAK,oBAOhB,IAAI+gG,EAFJV,EAAUzjG,eAAe,CAAEzD,KAAM,SAOjC,IAGM4nG,EADCnB,EAASznG,SACUoH,EAAM+mE,OAAOs5B,EAASznG,GAAIynG,SAE1BrgG,EAAM0hE,OAAO2+B,EAKvC,CAHE,MAAOlgG,GAEN,MADAshG,EAAUthG,EAAI0B,MACR1B,CACT,CAEA,IAKG,aAJMnI,KAAK+yD,cAAcy2C,GAEzBxpG,KAAK0+D,cAAc8qC,GACnBD,EAAUC,GACHA,CAYV,CAXE,MAAOrhG,GAUN,OATAnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,iCACT5Q,KAAMV,KAAK8F,QACX0jG,YAAaA,IAIhBxpG,KAAK0+D,cAAc8qC,QACnBD,EAAUC,EAEb,CACH,CAEAM,eACG,IAAIC,EAAc,EACdC,EAAgB,GACpBhqG,KAAKknB,QAAQjjB,SAASmK,IACH,WAAZA,EAAK/J,KAAgC,aAAZ+J,EAAK/J,KAC3B+J,EAAKzN,SAAS22D,GAAKyyC,IACpBA,EAAc37F,EAAKzN,SAAS22D,EAC5B0yC,EAAgB57F,EAAKxN,GAE3B,IAEH,IAAIqpG,EAAiBjqG,KAAKuoG,eAAeyB,GACrCC,GAAkBtmG,GAAGsmG,EAAexpG,GAAGG,KACxC+C,GAAGsmG,EAAexpG,GAAGG,IAAIqe,OAE/B,CAEIspF,qBAED,OADuBvoG,KAAK2nG,iBACNY,cACzB,oBCndH,MAAM2B,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C1qG,EAAOC,QAAU,cAA+BwqG,EAO7C/pG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIgqG,EAA0BnqG,MAG9C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMiqG,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5C5qG,EAAOC,QAAU,cAAiC0qG,EAO/CjqG,UAAU88F,GACP,IAAI98F,EAAY,IAAIkqG,EAA4BrqG,MAGhD,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,IAGtCzV,EAAUg+F,IAAMhB,EAAagB,GAChC,CAEA,OAAOh+F,CACV,oBC7BH,MAAMmqG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OACrC1E,EACH,WACG2E,EACH,WAEG/sC,EACH6sC,EAAsB7nE,gBAEL,EAAQ,OAK5BhjC,EAAOC,QAAU,cAAgC4qG,EAM9C3qG,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,GAGnCziC,KAAKyqG,kBAAoBzqG,KAAK+B,GAAG6xB,iBAC9B,GAAG5zB,KAAKY,uBAGXZ,KAAKyqG,kBAAkB52E,WACpB7zB,KAAK0rB,WAAa1rB,KAAK0rB,WAAW3kB,SAAW,GAC7C/G,KAAK0rB,WAAa1rB,KAAK0rB,WAAa,MAInC1rB,KAAKoG,SAASijB,iBACdrpB,KAAKoG,SAASijB,gBAAgBC,mBAE/BtpB,KAAK+B,GAAGwN,MAAM,wCAAyC,CACpDA,MAAO,gCACPm7F,aAAc,CACX3lG,YAAa/E,KAAK+E,YAAYoC,KAC9BvG,GAAIZ,KAAKY,GACTuG,KAAMnH,KAAKoB,OAEdV,KAAMV,OAGTA,KAAKoG,SAA0B,gBAAI,CAAC,EACpCpG,KAAKoG,SAA0B,gBAAoB,iBAAI,CAAEmjB,KAAM,QAGlEvpB,KAAKyqG,kBAAkB5lG,SACpB7E,KAAKoG,SAASijB,gBAAgBC,kBAC3Bm0C,EAA2Cn0C,iBAEpD,CAYArjB,WAAWN,GACR7F,MAAMmG,WAAWN,GAEjB3F,KAAK+lG,YAAYpzC,aAAa3yD,KAAKoG,UACnCpG,KAAK2qG,aAAah4C,aAAa3yD,KAAKoG,SACvC,CAEWwkG,6BACR,OAAO/E,EAAsBgF,kBAAkB7qG,KAAKJ,IAAKI,KAAKH,OACjE,CAEWirG,8BACR,OAAON,EAAuBK,kBAAkB7qG,KAAKJ,IAAKI,KAAKH,OAClE,CAQAM,UAAU88F,GACP,IAAI98F,EAAY,IAAIoqG,EAA2BvqG,MAG/C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEI4lG,kBAID,OAH0B,MAAtB/lG,KAAKgmG,gBACNhmG,KAAKgmG,cAAgB,IAAIH,GAErB7lG,KAAKgmG,aACf,CAEI2E,mBAID,OAH2B,MAAvB3qG,KAAK+qG,iBACN/qG,KAAK+qG,eAAiB,IAAIP,GAEtBxqG,KAAK+qG,cACf,oBCzHH,MAAMC,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CxrG,EAAOC,QAAU,cAA+BsrG,EAO7C7qG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI8qG,EAA0BjrG,MAG9C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAM+qG,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9C1rG,EAAOC,QAAU,cAAmCwrG,EAOjD/qG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIgrG,EAA8BnrG,MAGlD,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMirG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAGrCD,EAAmB3oE,gBAEtBhjC,EAAOC,QAAU,cAA6B0rG,EAKhCE,yBACR,OAAOD,CACV,CAQAlrG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIkrG,EAAwBrrG,MAG5C,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CA2FAorG,mBAAmBlnG,GAChB,IAAI6F,EAAOlK,KAAKy4D,sBAQhB,OAAOp0D,GANH6F,EACkBA,EAAKshG,iBAEL/nG,MAAMyH,MAI/B,oBC5IH,MAAMugG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExCjsG,EAAOC,QAAU,cAA6B+rG,EAO3CtrG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIurG,EAAwB1rG,MAG5C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMwrG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CnsG,EAAOC,QAAU,cAA+BisG,EAO7CxrG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIyrG,EAA0B5rG,MAG9C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAM0rG,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5CrsG,EAAOC,QAAU,cAAiCmsG,EAO/C1rG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI2rG,EAA4B9rG,MAGhD,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAM4rG,EAA+B,EAAQ,OACvCC,EAAoC,EAAQ,OAElDvsG,EAAOC,QAAU,cAAuC,EASrDS,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI6rG,EAAkChsG,MAGtD,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAM8rG,EAA6B,EAAQ,OACrCC,EAAkC,EAAQ,OAEhDzsG,EAAOC,QAAU,cAAqC,EASnDS,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI+rG,EAAgClsG,MAGpD,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMgsG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3C3sG,EAAOC,QAAU,cAAgCysG,EAO9ChsG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIisG,EAA2BpsG,MAG/C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMksG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,MAExC7sG,EAAOC,QAAU,cAA6B2sG,EAO3ClsG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAImsG,EAAwBtsG,MAG5C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,8EC1BY,MAAMosG,UAA6B3P,EAAA,EAC/Cj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,eAAe09F,EAAS38F,KAClCuT,OAAOsnC,OACJ,CACG+wD,KAAM,GACNC,MAAO,IAEVvsG,IAINF,KAAK0sG,QAAU,KAOf1sG,KAAK2sG,WAAa,KAClB3sG,KAAK4sG,eAAiB,KACtB5sG,KAAK6sG,aAAe,KACpB7sG,KAAK8sG,cAAgB,KACrB9sG,KAAK+sG,cAAgB,KACrB/sG,KAAKgtG,WAAa,KAElBhtG,KAAKitG,kBAAoB,KACzBjtG,KAAKktG,gBAAkB,KAEvBltG,KAAKmtG,YAAc,CAAC,EAMpB,MAAMC,EAAUptG,KAAKE,IAAIusG,MAEzBzsG,KAAKqtG,aAAe,CACjBC,aAAeC,IACZ,MAAMC,EAAe7pG,GAAGypG,GAASK,WAAW,SAC5C,IAAKD,EAAc,OAAO,EAE1B,MAAME,EAAYF,EAAarmD,QAE/B,SAAKumD,IAAcA,EAAU9gF,SAEtB8gF,EAAU9gF,OAAO2gF,EAAO,EAElCI,WAAaJ,IACV,IAAKvtG,KAAKqtG,aAAaC,aAAaC,GAAS,OAE7C,MAAMK,EAAajqG,GAAGypG,GAASK,WAAW,cAE1C,OAAKG,EAEEA,EAAWD,WAAWJ,QAF7B,CAEoC,EAG7C,CAEA9sG,KACG,MAAMP,EAAMF,KAAKE,IACX87E,EAAOh8E,MACP,WAAE6tG,EAAU,YAAEC,EAAW,UAAEC,GAAc/tG,KAAKguG,kBAC9C7P,EAAMr+F,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,OACNE,GAAIV,EAAIssG,KACRpvB,OAAQ,IACRp8E,MAAO,IACP6I,KAAM,CACH,CACGjJ,GAAI,MACJ+B,MAAO3C,KAAKoB,MAAM,QAErB,CACGR,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,SAErB,CACGR,GAAI,QACJ+B,MAAO3C,KAAKoB,MAAM,UAErB,CACGR,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,UAGxBgB,GAAI,CACDgI,YAAcxJ,IACXZ,KAAKiuG,SAASrtG,EAAG,MAMhC,CACGA,GAAIV,EAAIusG,MACR/rG,KAAM,QACNokD,OAAQ,CAAC+oD,EAAYC,EAAaC,GAClCG,SAAU,IAAIC,IAAI,CACf,CACG1B,MAAM2B,SAASC,QAEf,cAAwB5B,MAAM2B,SAASC,QACpClpG,cACG,MAAM8qB,EAAK+rD,EAAKsyB,sBAChB,OAAKr+E,GAOGA,EAAGmD,WAAa,IAAIjlB,KAAI,CAACkiB,EAAGk+E,IACjCvyB,EAAKwyB,cAAcn+E,EAAGk+E,KART,EAUnB,CACAlpE,QACG,OAAO51B,QAAQC,QAAQ,GAC1B,CACAvK,cAAc2S,EAAK/L,EAAOgJ,GAClBinE,EAAKmxB,YAAYr1F,EAAIlX,MACvBo7E,EAAKmxB,YAAYr1F,EAAIlX,IAAMo7E,EAAKyyB,QAAQ32F,IAE3C,MAAMyhB,QAAgByiD,EAAKmxB,YAAYr1F,EAAIlX,IAE3C,cADOo7E,EAAKmxB,YAAYr1F,EAAIlX,IACrB,CACJA,IAAK24B,GAAW,CAAC,GAAG34B,GAE1B,CACAuE,iBAAiBvE,EAAIkX,GAClB,aAAakkE,EAAK0yB,WAAW52F,EAAIlX,GAAIkX,EACxC,CACA3S,iBAAiBvE,GACd,aAAao7E,EAAK2yB,WAAW/tG,EAChC,SASf,cAFOu9F,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAOjB,MAAM6sG,EAAQjrG,GAAG3D,KAAKE,IAAIssG,MAEtBoC,GAAOA,EAAMC,SAAS,MAC7B,CAOIP,4BACD,OAAOxuG,MAAMwuG,uBAAyBtuG,KAAK0sG,OAC9C,CAaA8B,cAActvF,EAAM,CAAC,EAAGnT,EAAQ,MAC7B,MAAMlC,EAAO,CAAC,EACR+iG,EAAiB5sG,KAAK4sG,eACtBC,EAAe7sG,KAAK6sG,aACpBC,EAAgB9sG,KAAK8sG,cAE3B,IAAKF,IAAoBC,IAAiBC,EAAgB,OAAOjjG,EAEjE,MAAM6xC,EAAW,IAAIn7B,KAErB1W,EAAS,GAAIqV,EAAIte,IAAMse,EAAIrP,KAC3BhG,EAAW,KAAI,OACfA,EAAa,OAAI,EACjBA,EAAW,MAAI,EAGf,MAAM8iG,EAAa3sG,KAAK2sG,WAClBI,EAAgB/sG,KAAK+sG,cACrBC,EAAahtG,KAAKgtG,WAyBxB,OAvBAnjG,EAAW,KAAI8iG,EACVztF,EAAIytF,EAAW7lG,aAAe,GAC9B9G,KAAKyK,cAAcs4B,YAAY7jB,GACpCrV,EAAiB,WAAIqV,EAAI0tF,EAAe9lG,aAAe40C,EACvD7xC,EAAe,SAAIkjG,EACdh2D,WAAW73B,EAAI6tF,EAAcjmG,aAAe,GAC5C,EAEDkmG,IAAYnjG,EAAc,QAAIqV,EAAI8tF,EAAWlmG,aAAe,IAE5D+lG,IACDhjG,EAAe,SAAIqV,EAAI2tF,EAAa/lG,aAAe40C,GAElDoxD,IAAejjG,EAAe,SAAIqV,EAAI4tF,EAAchmG,aAAe,GAGlE+C,EAAe,UAAMA,EAAe,WACtCA,EAAe,SAAI6xC,EACnB7xC,EAAe,SAAI,GAGlBkC,IAAOlC,EAAY,MAAIkC,GAEpBlC,CACV,CAWAilG,cAAc1lE,GACX,MAAM2lE,EAAQ,CAAC,EACTpC,EAAa3sG,KAAK2sG,WAClBC,EAAiB5sG,KAAK4sG,eACtBG,EAAgB/sG,KAAK+sG,cACrBC,EAAahtG,KAAKgtG,WAClBH,EAAe7sG,KAAK6sG,aACpBC,EAAgB9sG,KAAK8sG,cAe3B,OAbIH,IAAYoC,EAAMpC,EAAW7lG,YAAcsiC,EAAW,MAAK,IAE3DwjE,IAAgBmC,EAAMnC,EAAe9lG,YAAcsiC,EAAiB,YAEpE2jE,IACDgC,EAAMhC,EAAcjmG,YAAciwC,WAAW3N,EAAe,UAAK,IAEhE4jE,IAAY+B,EAAM/B,EAAWlmG,YAAcsiC,EAAc,SAEzDyjE,IAAckC,EAAMlC,EAAa/lG,YAAcsiC,EAAe,UAE9D0jE,IAAeiC,EAAMjC,EAAchmG,YAAcsiC,EAAe,UAE7D2lE,CACV,CAMA/pG,WAAWC,GACRnF,MAAMkF,WAAWC,GAEAjF,KAAKU,KAAtB,MACM0F,EAAWpG,KAAKoG,SAElBnB,IACDjF,KAAK2sG,WAAa1nG,EAAO8I,UAAU3H,EAAS+5D,cAC5CngE,KAAK4sG,eAAiB3nG,EAAO8I,UAAU3H,EAASg6D,kBAChDpgE,KAAK6sG,aAAe5nG,EAAO8I,UAAU3H,EAASi6D,gBAC9CrgE,KAAK8sG,cAAgB7nG,EAAO8I,UAAU3H,EAASk6D,iBAC/CtgE,KAAK+sG,cAAgB9nG,EAAO8I,UAAU3H,EAASm6D,iBAC/CvgE,KAAKgtG,WAAa/nG,EAAO8I,UAAU3H,EAASo6D,cAElD,CAMAwuC,mBAAmBrjF,GAChB7rB,MAAMkvG,mBAAmBrjF,GAEzB,MAAMgB,EAAK3sB,KAAKsuG,uBAAyB3iF,EAEpCgB,IAIL3sB,KAAK0sG,QAAU/gF,EAGf3rB,KAAKgF,WAAW2nB,EAAGjB,YAEA,CAAC,SAAU,SAAU,SAAU,mBAEvCznB,SAASoG,IAEdA,KAAKsiB,EAAGsiF,UACiD,IAAzDjvG,KAAKq1B,SAAS+gC,WAAW84C,GAAOA,EAAGp9E,YAAcznB,MAK5C,WADAA,EAEFrK,KAAK4xB,SAAS,CACXC,QAASlF,EACTmF,UAAW,SACXC,SAAWw7E,IAEJvtG,KAAKqtG,aAAaC,aAAaC,IAChCvtG,KAAKqtG,aAAaM,WAAWJ,EAAO,IAO7CvtG,KAAK4xB,SAAS,CACXC,QAASlF,EACTmF,UAAWznB,EACX0nB,SAAU,KACP/xB,KAAKmvG,UAAU,IAK3B,IAEN,CAMAxqG,OACGhB,GAAG3D,KAAKE,IAAIC,YAAYwE,MAC3B,CAEAwqG,WACG,MAAMC,EAAYzrG,GAAG3D,KAAKE,IAAIusG,OAE9B,IAAK2C,EAAW,OAEhB,MAAMC,EAAcD,EAAU3B,WAAW,SAEzC,IAAK4B,EAAa,OAElB,MAAMC,EAAUD,EAAYloD,QAEvBmoD,GAWL36F,YAAW,KACR26F,EAAQx0F,WAER,MAAMmV,EAAKjwB,KAAKsuG,sBACViB,EAAa,CAChB1lG,KAAMomB,GACAA,EAAGmD,WAAa,IAAIjlB,KAAI,CAACkiB,EAAGtkB,IAC1B/L,KAAKwuG,cAAcn+E,EAAGtkB,KAEzB,IAIJ/L,KAAK4sG,iBAAmB5sG,KAAK6sG,cAAgB7sG,KAAK8sG,gBACnDwC,EAAQ/3F,MAAMg4F,GAIjB,MAAMC,EAAYH,EAAYI,YAE9BzvG,KAAKitG,kBAAoBuC,EAAUt9E,MACnClyB,KAAKktG,gBAAkBsC,EAAUzqD,IAEjC/kD,KAAK2N,MAAM,GACX,GACN,CAEIqgG,wBAoBD,MAAO,CACJD,UApBe,CAAEhtF,KAAM,MAAOT,OAAQ,MAqBtCovF,WApBa,CACV3uF,KAAM,OACNT,OAAS4R,IACN,MAAMgkD,EAASzyE,MAAM8c,KAAK87B,UAAU,SAC9BszD,EAASlsG,MAAM8c,KAAKqvF,UAAU19E,GAC9B29E,EAAOpsG,MAAM8c,KAAKW,IACrBzd,MAAM8c,KAAKW,IAAIyuF,EAAQ,EAAG,QAAQ,IACjC,EACD,OACA,GAGH,OAAOz5B,EAAOy5B,GAAU,MAAQz5B,EAAO25B,EAAK,GASlD/B,YANc,CAAE/sF,KAAM,QAAST,OAAQ,MAOvCutF,WANa,CAAE9sF,KAAM,OAAQT,OAAQ,MAQ3C,CAEA2tF,SAAS6B,GACN,MAAMV,EAAYzrG,GAAG3D,KAAKE,IAAIusG,OAE9B,IAAK2C,EAAW,OAEhB,MAAMW,EAAYX,EAAU3B,WAAW,SAEvC,IAAKsC,EAAW,OAEhB,MAAMC,EAAY,IACZ,WAAEnC,EAAU,YAAEC,EAAW,WAAE4B,EAAU,UAAE3B,GAC1C/tG,KAAKguG,kBAER,OAAQ8B,GACL,IAAK,MACFE,EAAU1rG,KAAKupG,EAAYC,EAAaC,GAExC,MACH,IAAK,OACFiC,EAAU1rG,KAAKupG,EAAYC,EAAa4B,GAExC,MACH,IAAK,QACFM,EAAU1rG,KAAKupG,EAAYC,GAE3B,MACH,IAAK,OACFkC,EAAU1rG,KAAKupG,GAKrB,MAAMrO,EAAUx/F,KAAK+B,GAAG0Y,MAClB+0F,EAAYJ,EAAU3B,WAAW,SAASgC,YAC7Cv9E,EAAQstE,EAAQj/E,KAAKW,IAAIlhB,KAAKitG,mBAAoB,EAAG6C,GAAO,GAC5D/qD,EAAMy6C,EAAQj/E,KAAKW,IAAIlhB,KAAKktG,gBAAiB,EAAG4C,GAAO,GAE1DC,EAAUE,UACP/9E,EACA6yB,EACAyqD,EAAUU,QACVV,EAAUW,UACVX,EAAUY,WACVJ,GAEHZ,EAAUz5B,KAAKjxE,UACf0qG,EAAUn6B,WAAWo7B,OAAO,CAAE3L,IAAK,EAAG4L,KAAM,GAC/C,CAMA9lG,SACG1K,MAAM0K,SACNxK,KAAKgvG,mBAAmBhvG,KAAK2rB,gBAE7BhoB,GAAG3D,KAAKE,IAAIC,YAAYyE,MAC3B,CAEA+I,OAiCA,CAEAxI,cAAcorG,GACX,MAAMxB,EAAQ/uG,KAAK8uG,cAAcyB,GAC3BhR,EAAKv/F,KAAK+B,GAEhB,IAGG,aAAa/B,KAAKyK,eAAezC,QAAQ0hE,OAAOqlC,GAanD,CAZE,MAAO1kG,GAWN,MAVAk1F,EAAG9kF,MAAMtJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,qBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,+BAEpBm+F,EAAGn3F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,2CACTy/F,UAGG1kG,CACT,CACH,CAEAlF,iBAAiBmpB,GACd,MAAMixE,EAAKv/F,KAAK+B,GAEhB,IAKG,aAFM/B,KAAKyK,cAAczC,QAAQoO,OAAOkY,GAEjC,CAAC,CAaX,CAZE,MAAOjkB,GAWN,MAVAk1F,EAAG9kF,MAAMtJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,uBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,iCAEpBm+F,EAAGn3F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,gDACTgf,UAGGjkB,CACT,CACH,CAEAlF,iBAAiBmpB,EAAOkiF,GACrB,MAAMzB,EAAQ/uG,KAAK8uG,cAAc0B,GAC3BjR,EAAKv/F,KAAK+B,GAEhB,IAKG,aAFM/B,KAAKyK,cAAczC,QAAQ+mE,OAAOzgD,EAAOygF,GAExC,CAAC,CAaX,CAZE,MAAO1kG,GAWN,MAVAk1F,EAAG9kF,MAAMtJ,MAAM,CACZC,MAAOpR,KAAKoB,MAAM,uBAClBmQ,GAAIvR,KAAKoB,MAAM,QACfiN,KAAMrO,KAAKoB,MAAM,iCAEpBm+F,EAAGn3F,OAAOC,UAAUgC,EAAG,CACpBiF,QAAS,gDACTy/F,UAGG1kG,CACT,CACH,EC/kBH,MAAMomG,EAAkB,EAAQ,OAEjB,MAAMC,UAAoBD,EACtC9wG,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,EACtC,CAQAtiC,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIosG,EAAqBvsG,MAGzC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,IACI65F,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,yFCzBY,MAAMwwG,UAAgCryF,EAAA,EAClD3e,YAAYE,GAGTC,MAAM,CACH8wG,YAAa,GAHhB/wG,EAASA,GAAU,sCAIhBoK,KAAM,GAAGpK,uBAGZG,KAAKkD,eAAiB,KAKtBlD,KAAK6wG,gBAAkB,KAIvB7wG,KAAK8wG,MAAQ,KAIb9wG,KAAK+wG,UAAY,KAIjB/wG,KAAKgxG,cAAgB,EAGxB,CAEAvwG,KACG,IAAIu7E,EAAOh8E,KAGX,MAAO,CACJU,KAAM,QACNE,GAAIZ,KAAKE,IAAI0wG,YACb5vG,MAAO,IACPD,OAAQ,EACR44F,QAAQ,EACR9kB,QAAQ,EACRpzE,KAAM,CACHb,GAAIZ,KAAKE,IAAI+J,KACbvJ,KAAM,OACNuwG,YAAY,EACZpnG,KAAM,CACH,CAAE1C,KAAM,MAAOoE,KAAM,gBACrB,CAAEpE,KAAM,QAASoE,KAAM,gBACvB,CAAEpE,KAAM,MAAOoE,KAAM,cACrB,CAAEpE,KAAM,MAAOoE,KAAM,iBAExBg3D,SACG,mFACHngE,GAAI,CACDgI,YAAa,SAAUxJ,GACpB,IAAIT,EAAYH,KAAKysB,QAAQ7rB,GAC7Bo7E,EAAKpS,OAAOzpE,EAAUgH,KACzB,IAIZ,CAEAhC,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAEb0B,MAAMhD,GAAGT,KAAKS,MACdkD,GAAG3D,KAAKE,IAAI0wG,aAAa/vG,QAC5B,CASAqwG,mBAAmBvkF,GAChB3sB,KAAK6wG,gBAAkBlkF,CAC1B,CAOA3nB,WAAWC,GACRjF,KAAKkD,eAAiB+B,CACzB,CAQAksG,gBAAgBpqG,EAAS,IACtB/G,KAAKgxG,cAAgBjqG,GAAU,EAClC,CAOAqqG,YAAYr0D,GACT/8C,KAAK+wG,UAAYh0D,CACpB,CAQAs0D,iBAAiBC,GACdtxG,KAAK8wG,MAAQQ,CAChB,CAQA1sG,KAAK8I,GACF/J,GAAG3D,KAAKE,IAAI0wG,aAAahsG,KAAK8I,EACjC,CAEAvI,aAAagC,GACV,IAAIoqG,EAEAr6C,EAAU,CAAC,EAEXvqC,EAAK3sB,KAAK6wG,gBACV3tG,EAAiBlD,KAAKkD,eACtB4tG,EAAQ9wG,KAAK8wG,MACbC,EAAY/wG,KAAK+wG,WAGlBpkF,GACEA,EAAGvmB,SAASojB,SAAWmD,EAAGT,YAAcS,EAAGpC,eAAeC,mBAGtDmC,EAAGwD,WAAW,EAAG,MACvBxD,EAAGvmB,SAASojB,SAAU,GAKrBtmB,GACDA,EAAe6D,SAAS9C,SAAS+C,IAE1BhH,KAAKgxG,cAAc3jG,QAAQrG,EAAEF,aAAe,IAEhDowD,EAAQlwD,EAAEF,YAAc,CACrBy7D,SAAWx0C,GACD/mB,EAAEsZ,OAAOyN,IAErB,IAMP,MAAMyjF,EAAeV,EAAMjnG,KAAKijB,KAAK,CAAC2kF,uBAAwB,IAAItrG,OAAS,EACrEurG,EAAaxyF,GAAQsyF,GAA+C,GAA/BtyF,GAAKuyF,uBAEhD,OAAQtqG,GACL,IAAK,MACF1D,MAAMkuG,IAAI38D,UAAU7zC,KAAO,IAE3BowG,EAAW9tG,MAAMmuG,MAAMd,EAAO,CAC3B/zD,SACGg0D,IAAc7tG,EAAiBA,EAAe9B,MAAQ,MACzD81D,QAASA,EACTpuD,OAAQ4oG,IAEX,MACH,IAAK,QACFH,EAAW9tG,MAAMouG,QAAQf,EAAO,CAC7B/zD,SACGg0D,IAAc7tG,EAAiBA,EAAe9B,MAAQ,MACzD+F,KACG4pG,IAAc7tG,EAAiBA,EAAe9B,MAAQ,MACzD81D,QAASA,EACT46C,YAAY,EACZhpG,OAAQ4oG,IAEX,MACH,IAAK,MACFH,EAAW9tG,MAAMsuG,MAAMjB,EAAO,CAC3B/zD,SACGg0D,IAAc7tG,EAAiBA,EAAe9B,MAAQ,MACzD0wG,YAAY,EACZhpG,OAAQ4oG,IAEX,MACH,IAAK,MACFH,EAAW9tG,MAAMuuG,MAAMlB,EAAO,CAC3B/zD,SACGg0D,IAAc7tG,EAAiBA,EAAe9B,MAAQ,QAMlE,UACSmwG,EACN5tG,GAAG3D,KAAKE,IAAI0wG,aAAajsG,MAQ5B,CAPE,MAAOwD,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QAAS,4DAA4DnK,IACrE8qG,WAAY9qG,EACZ+vD,UACAg7C,SAAUnB,GAEhB,CACH,iBCzNChxG,EAAI,KAEO,MAAMoyG,UAAkC7zF,EAAA,EAGpD3e,YAAYyyG,EAAqBvyG,GAG9BC,MAAM,CACHK,UAAW,GAHdN,EAASA,GAAU,8CAIhBwyG,OAAQ,GAAGxyG,uBAGdG,KAAKyK,cAAgB,KAIrBzK,KAAKsyG,cAAgBF,EAIrBpyG,KAAK+B,GAAKqwG,EAAoBrwG,GAG9B/B,KAAKuyG,WAAa,IAAI32B,EAAA,EAAW/7E,EAAQG,KAAK+B,IAIzChC,IACFA,EAAI,IAAI6V,IACE5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,GAG9C,CAEAnV,KACG,IAAIP,EAAMF,KAAKE,IAGf,MAAO,CACJQ,KAAM,QACNE,GAAIV,EAAIC,UAERsB,KAAM,CACHT,MAAO,IACPa,KAAM,CAEH7B,KAAKuyG,WAAW9xG,KAChB,CAAEM,OAAQ,IACV,CACGI,KAAM,CACH,CAAC,EACD,CACGT,KAAM,SACNiC,MAAO5C,EAAE,UACTiB,MAAO,IACPO,MAAO,KACJvB,KAAK2E,MAAM,GAGjB,CACG/D,GAAIV,EAAImyG,OACRnxG,IAAK,gBACLR,KAAM,SACNU,MAAOrB,EAAE,UACT6B,KAAM,OACNZ,MAAO,IACPO,MAAO,KACJvB,KAAKqyG,QAAQ,OAO/BjwG,GAAI,CACDoI,OAAQ,KACLxK,KAAKwK,QAAQ,GAIzB,CAEArF,WAAWpD,GAIR,OAHA0B,MAAMhD,GAAGT,KAAKS,MACdT,KAAKuyG,WAAWjvG,KAAKvB,GAEd0N,QAAQC,SAClB,CAMA/K,OACGhB,GAAG3D,KAAKE,IAAIC,WAAWwE,MAC1B,CAWAK,WAAWC,EAAQogF,GAChBrlF,KAAKyK,cAAgBxF,EACrBjF,KAAKuyG,WAAWvtG,WAAWC,GAC3BjF,KAAKqwE,UAAYgV,CACpB,CAEA76E,SAAU,CAUV5F,KAAK8I,EAAOvL,EAAU,MACJ,MAAXA,EACDwB,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAAOvL,GAEnCwB,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAElC,CAOA2kG,SAEG,IAAIG,EAAgB7uG,GAAG3D,KAAKE,IAAImyG,QAC7BI,EAAezyG,KAAKuyG,WAAWtmG,YAAc,GAIhD,GAFAumG,EAAcptG,WAETpF,KAAKsyG,cAIP,YADAE,EAAc9qG,SAEV,GAAI+qG,EAAatsG,OAAS,EAG9B,YADAqsG,EAAc9qG,SAIjB,IAAIgrG,EAAa1yG,KAAKsyG,cAAcK,eAChCC,EAAgB,GACpBF,EAAW7oG,KAAK03E,MAAK,SAAUriE,GAEzBA,GACAA,EAAImwD,eAAe,2BACW,GAA9BnwD,EAAIuyF,wBAEJmB,EAActuG,KAAK4a,EAAIte,GAE7B,IAEA,IAAI6E,EAAO,CAAC,EACZgtG,EAAaxuG,SAASmK,IACnB,IAAIu2B,EAAY3kC,KAAKyK,cAAcsD,UAAUK,EAAK1D,SAC7Ci6B,IAELl/B,EAAKk/B,EAAU79B,YAAcsH,EAAKzL,MAAK,IAGtCiwG,EAAczsG,OAAS,EACxB1C,MAAMmO,QAAQ,CACXR,MAAOrR,EAAE,6BACTsO,KAAMtO,EAAE,yDACR8R,SAAW/D,IACJA,GACG4kG,GAAcA,EAAWrtG,cAC1BqtG,EAAWrtG,aAAa,CAAEzD,KAAM,SAEpB5B,KAAKyK,cAAczC,QAE9BgnE,YAAY,CACVC,OAAQ2jC,EACRjtG,OAAQF,IAEV+O,MAAK,KAEHg+F,EAAc9qG,SACd1H,KAAK2E,OAED+tG,GAAcA,EAAW/qG,cAC1B+qG,EAAW/qG,cAAc,IAE9B8M,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,+DACH2/D,OAAQ2jC,EACRjtG,OAAQF,GACT,KAGR+sG,EAAc9qG,QACjB,KAINjE,MAAM0N,MAAM,CACTC,MAAOrR,EAAE,uBACTsO,KAAMtO,EACH,+EAGNyyG,EAAc9qG,SACd1H,KAAK2E,OAEX,iBClOY,MAAMytG,UAA4BxV,EAAA,EAC9Cj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,cAAc09F,EAAS38F,KACjCuT,OAAOsnC,OACJ,CACGo3D,MAAO,GAGPC,QAAS,GACTC,qBAAsB,GAEtBC,aAAc,GACdC,iBAAkB,GAClBC,WAAY,GACZC,aAAc,GAEdzP,oBAAqB,GAErB0P,UAAW,IAEdlzG,IAINF,KAAK2jG,oBAAsB,CAAC/F,EAAUC,KACnC79F,KAAK4jG,mBAAmBhG,EAAUC,EAAY,EAGjD79F,KAAKqzG,eAAiB,IAAIz9F,KACvB5V,KAAKszG,aAAa19F,EAAO,EAO5B5V,KAAK4+F,UACLrB,EAAS7/C,aAAat7C,GAAG,cAAepC,KAAK2jG,qBAG7C3jG,KAAKY,GAAK28F,EAAS38F,GAqBnBZ,KAAKuzG,gBAAkB,EAIvBvzG,KAAKwzG,iBAAmB,EAQxBxzG,KAAKyzG,iBAAkB,EAIvBzzG,KAAKi+F,SAAWV,EAASW,eAAe/9F,YAIxC,MAAMuzG,EAAU1zG,KAAKE,IAAI2yG,MACnBtT,EAAKv/F,KAAK+B,GAEhB/B,KAAK2zG,YAAc,IAAI,EAAcD,GACrC1zG,KAAK2zG,YAAYrwG,KAAKi8F,GAItBv/F,KAAK4zG,yBAA2B,IAAI,EAAuB5zG,KAAM0zG,GACjE1zG,KAAK4zG,yBAAyBtwG,KAAKi8F,GAKnCv/F,KAAK6zG,4BAA8B,IAAI,IAAiBH,GACxD1zG,KAAK6zG,4BAA4BvwG,KAAKi8F,GACtCv/F,KAAK6zG,4BAA4BzxG,GAAG,WAAY0hG,IAC7C9jG,KAAK+jG,iBAAiBD,EAAY,IAKrC9jG,KAAK8zG,iBAAmB,CACrB,yBACA,yBACA,wBACA,uBACA,oBAeH9zG,KAAK+zG,qBAAsB,EAM3B/zG,KAAKg0G,cAAgB,KAKrBh0G,KAAKi0G,yBAA0B,CAClC,CAIIC,yBACD,MAAO,qBACV,CAEAtV,UACG5+F,KAAKU,KAAKg9C,aAAanoB,eACpB,cACAv1B,KAAK2jG,qBAER3jG,KAAK2rB,gBAAgB4J,eAAe,eAAgBv1B,KAAKqzG,eAC5D,CASAc,eAAevzG,GACZ,IAAI2tG,EAAOvuG,KAAK2yG,eAAewB,eAAevzG,GAQ9C,OAPKZ,KAAKoG,SAASw6D,YAKhB2tC,IAEIA,CACV,CAEA6F,cACG,MAAMl0G,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAChB41E,EAAOh8E,KAEb,IAAIU,EAAO,aAEP0F,EAASiuG,eAAiBjuG,EAASq7D,WAEpC/gE,EAAO,aAEV,IAAI4zG,EAAa,OAKjB,OAHKluG,EAASu6D,aAAev6D,EAASktD,cAAeltD,EAASotD,WAC3D8gD,EAAa,OAET,CACJ5zG,OACAE,GAAIV,EAAIkzG,UACRmB,aAAc,CAAElxB,KAAM,IACtBmxB,UAAW,CAAEnxB,KAAM,IACnBoxB,WAAW,EACX7uD,SAAUx/C,EAASu6D,WACnB+zC,gBAAgB,EAChB3zG,OAAQqF,EAASrF,QAAU,EAC3B4zG,WAAY,SACZhb,OAAQ2a,EACRpkC,OAEG9pE,EAAS46D,eAAe76D,OAAS,GACjCC,EAAS66D,aAAa96D,OAAS,EAClC48F,SAAS,EAgBT6R,YAAY,EACZxyG,GAAI,CACDyyG,eAAgB,SAAUhrG,EAAMirG,GAC7B,IAAmD,GAA/C94B,EAAK83B,iBAAiBzmG,QAAQxD,EAAK2mE,QACpC,OAAO,EACH,GAAIpqE,EAASu6D,WAAY,CAC7B,MACM4Y,EADayC,EAAKrwD,eAAeD,WACR3kB,QAC3BC,GAAMA,EAAEF,aAAe+C,EAAK2mE,SAC9B,GAEF,GAAmB,MAAf+I,EAAqB,OAAO,EAEhC,MAAMw7B,EAAW/0G,KAAKuwE,YAAY,CAC5BrxD,IAAKrV,EAAKqV,IACVsxD,OAAQ3mE,EAAK2mE,SAEhBziD,EAAU/tB,KAAKysB,QAAQ5iB,EAAKqV,KAE/B,OAAOq6D,EAAY4E,WAAWpwD,EAAS,KAAMgnF,EAChD,CAAO,SAAK3uG,EAASktD,cAAgBltD,EAASotD,gBAAvC,CAEV,EACAwhD,cAAe,CAACnrG,EAAMirG,KAMf90G,KAAKoG,SAASu6D,YACf3gE,KAAKg1G,cAAcnrG,EAAMirG,EAC5B,EAEHG,kBAAmB,SAAUr0G,GAC1B,GAAyB,2BAApBZ,KAAKysB,QAAQ7rB,GAAiC,OAAO,CAC7D,EACAs0G,QAAS,SAAUh2F,EAAKq8D,EAAKvlE,GAE1B,GAAW,0BAAPulE,EAGDS,EAAKm5B,0BAEL,GAAI/uG,EAASu6D,WAAY,CAGtB,MAAMjZ,EAAQ,CACX/kD,MAAOqT,GAEJ1Q,EAAS,CACZ4Z,IAAKA,EACLsxD,OAAQ+K,EACRt5E,OAAQ,MAGX+5E,EAAKo5B,gBAAgB1tD,EAAOpiD,EAC/B,KAAO,CACStF,KAAKuwE,YAAY,CAC3BrxD,IAAKA,EACLsxD,OAAQ+K,IAEWkG,cACnB,0BAIS4zB,QADD,GAAPr/F,CAKP,CAEN,EACAs/F,iBAAkB,SAAU5tD,EAAOpiD,GAEnC,EACA8vG,gBAAiB,CAAC1tD,EAAOpiD,EAAQiwG,KACF,GAAxBv1G,KAAKyzG,iBACNzzG,KAAKo1G,gBAAgB1tD,EAAOpiD,EAAQiwG,EAAa,EAEvDC,kBAAmB,WAChBx1G,KAAKyzG,iBAAkB,CAC1B,EACAgC,oBAAqB,WAClBz1G,KAAKyzG,iBAAkB,CAC1B,EAMAiC,eAAgB,SACb5uG,EACA4oE,EACAsB,EACA2kC,GAWA,IAA4C,GAPpB,CACrB,yBACA,wBACA,uBACA,oBAGiBtoG,QAAQvG,GAAmB,CAE5C9G,KAAKw7E,aAELx7E,KAAK41G,eAAe9uG,EAAYkqE,GAChChxE,KAAKy7E,eAIL,MAAMjL,EAASwL,EAAK65B,gBAEpB/uG,EAAa0pE,EAAO5vE,IAIjB8uE,EADCA,EAAWsB,EACDR,EAAOxvE,MAAQ,GAIfwvE,EAAOxvE,OAAS0uE,EAAW,KAO1B,KACZA,EAAW,IAGdc,EAAOlK,SAAWoJ,EAElB1vE,KAAK41G,eAAe9uG,EAAY4oE,EACnC,CAEIimC,GACD35B,EAAK05B,eACF5uG,EACA4oE,EACAsB,EACA2kC,EAGT,EACAG,YAAcxnF,IAAD,EAKbynF,mBAAoB,CAAC90E,EAAU/Q,OACmB,IAA7ClwB,KAAK8zG,iBAAiBzmG,QAAQ4zB,IACnC+0E,mBAAoB,CAAC/0E,EAAUC,EAAUhR,OAGS,IAA7ClwB,KAAK8zG,iBAAiBzmG,QAAQ6zB,IACnC+0E,kBAAmB,CAACh1E,EAAUC,EAAUhR,IACrClwB,KAAKi2G,kBAAkBh1E,EAAUC,EAAUhR,GAU9CgmF,cAAe,CAACt1G,EAAIyJ,EAAG9H,KAEpBvC,KAAKk2G,cAAct1G,EAAIyJ,EAAG9H,EAAK,GAI3C,CAEA4zG,WACG,OAAOn2G,KAAKU,KAAKg9C,aAAaj9C,IAGjC,CAOA21G,YACG,MAAMl2G,EAAMF,KAAKE,IACX87E,EAAOh8E,KAEb,MAAO,CACJU,KAAM,UACNE,GAAIV,EAAI4yG,QACRj+B,QAAQ,EACR3zE,IAAK,kBACLC,KAAM,CACH,CACGT,KAAM,SACNE,GAAIV,EAAI+yG,iBACR/xG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,QAClBmK,KAAM,wBACN3J,KAAM,OACNukC,UAAU,EACV7kC,WAAW,EACXC,MAAO,WACJy6E,EAAKq6B,kBAAkBr2G,KAAK0N,MAC/B,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAI6yG,qBACR7xG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,UAClBmK,KAAM,cACN3J,KAAM,OACNukC,UAAU,EACV7kC,WAAW,EACXC,MAAO,WACJy6E,EAAKs6B,sBAAsBt2G,KAAK0N,MACnC,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAI8yG,aACR9xG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,WAClBmK,KAAM,eACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJy6E,EAAKmoB,cAAcnkG,KAAK0N,MAC3B,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAIgzG,WACRhyG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,QAClBmK,KAAM,aACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJy6E,EAAKu6B,YAAYv2G,KAAK0N,MACzB,GAEH,CACGhN,KAAM,SACNE,GAAIV,EAAIizG,aACRjyG,IAAK,oBACLE,MAAOpB,KAAKoB,MAAM,UAClBmK,KAAM,cACN3J,KAAM,OACNN,WAAW,EACXC,MAAO,WACJy6E,EAAKw6B,cAAcx2G,KAAK0N,MAC3B,GAEH,CAAC,EACD,CACG9M,GAAIV,EAAIwjG,oBACRhjG,KAAM,SACNg3E,YAAa13E,KAAKoB,MAAM,aACxBgB,GAAI,CACDy3E,gBAAiB,KACd,MAAM70D,EAAarhB,GAAGzD,EAAIwjG,qBAAqBz3F,WAE/CjM,KAAKU,KAAKg9C,aAAa4mD,mBAAmBt/E,EAAW,KAMvE,CAEAvkB,KACG,MAAMg2G,EAAU,CACb71G,GAAIZ,KAAKE,IAAI2yG,MACbjxG,KAAM,QACND,YAAY,EACZE,KAAM,CACH,CAAC,EACD,CACGnB,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,6BAClBs1G,WAAY,IACZr1G,MAAO,UAEV,CAAC,IAID+E,EAAWpG,KAAKoG,UAElBpG,KAAK2rB,gBAA0C,KAAxBvlB,EAAS4rD,cACjCykD,EAAQj0G,QAAU4D,EAAS5D,QAC3Bi0G,EAAQ50G,KAAO,GACXuE,EAASs6D,aACV+1C,EAAQ50G,KAAKyC,KAAKtE,KAAKo2G,aAEtBp2G,KAAKoG,SAAS86D,WAAWC,cAC1Bs1C,EAAQ50G,KAAKyC,KAAKtE,KAAKm2G,YAG1BM,EAAQ50G,KAAKyC,KAAKtE,KAAKo0G,gBAG1B,MAAMjW,EAAMr+F,MAAMW,GAAG,CAACg2G,IAItB,cAFOtY,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,EAAIu2D,EAAc,GACtBv2D,SAAUjC,MAAMwD,KAAKvB,GAEzB,MAAMi6E,EAAOh8E,KACPE,EAAMF,KAAKE,IAIXs/F,EAAUz9F,EAAG0Y,MAEnB+kF,EAAQmX,SAAW,GACnBnX,EAAQoX,IAAM,YAUd,MAAMC,EAAa72G,KAAK2yG,eAExB,IAAImE,EAAwB,KACxBC,EAAgB,KAEpB,IAAKF,EAAY,OAEjBrX,EAAQ97F,OAAOmzG,EAAYrX,EAAQ57F,aAEnCizG,EAAW50G,OAAOq2D,YAAcA,EAE5BA,EAAc,GAAGu+C,EAAWpyG,OAAO,YAAY,GAEnD,MAAM2B,EAAWpG,KAAKoG,SAEhBgqE,EAAkBvmE,IACrB,MAAMY,EAAgBzK,KAAK2rB,gBAAgBD,WAE3C,IAAKjhB,IAAkBosG,EAAWhtG,KAAM,OAExC,MAAMmtG,EAAiB,GAEjBC,EAAsBJ,EAAWK,iBAAiB5/C,EACrD6/C,EAAYN,EAAW50G,OAAOk1G,UAG9BC,GADGP,EAAWnpG,MAAM+zE,cAAc,kBAAkB8I,aACpChkF,KAAKC,MAAMywG,EAAsBE,IACjDE,EAAcD,EAAgBP,EAAWS,kBAE5C,IAAIvrG,EAAQ,EAEZ8qG,EAAWhtG,KAAKi6D,MAAMyd,MAAM3gF,IACf,MAANA,GAAcw2G,GAAiBrrG,GAASA,GAASsrG,GAClDL,EAAe1yG,KAAK1D,GAEvBmL,GAAO,IAGV,IAAI65C,EAAWx/C,EAASu6D,WAEpBk2C,EAAW50G,OAAOq2D,YAAc,IAAG1S,GAAW,GAElDn7C,EAAc2lE,eACXvmE,EACA7J,KAAK+B,GAAGi4B,KACR68E,EACAG,EACApxD,EACF,EAGJixD,EAAWloF,YAAY,iBAAiB,SAAU9kB,GAC/CgtG,EAAWh2G,SAEPi2G,GAAuB/iG,aAAa+iG,GAExCA,EAAwBniG,YAAW,KAC5BoiG,GAAehjG,aAAagjG,GAChC3mC,EAAepwE,KAAK6J,KAAK,GACzB,KAEH9H,EAAGuc,QAAQi5F,YAAYV,GACvB1iG,OAAOC,KAAKlU,GAAK+D,SAASI,IACvB,MAAMqxE,EAAM/xE,GAAGzD,EAAImE,IACfqxE,GACD3zE,EAAGuc,QAAQi5F,YAAY7hC,EAC1B,GAEN,IAKAmhC,EAAWloF,YAAY,YAAY,WAC5BooF,GAAehjG,aAAagjG,GAE5BD,GAAuB/iG,aAAa+iG,GAExCC,EAAgBpiG,YAAW,KACxBy7D,EAAepwE,KAAK6J,KAAK,GACzB,KACN,IACAgtG,EAAWloF,YAAY,iBAAiB,WACjCmoF,GAAuB/iG,aAAa+iG,GAExCA,EAAwBniG,YAAW,KAC5BoiG,GAAehjG,aAAagjG,GAChC3mC,EAAepwE,KAAK6J,KAAK,GACzB,IACN,IAIAgtG,EAAWloF,YAAY,eAAe,SAAU/tB,EAAIyJ,EAAG9H,GAEpD,MAAMoqB,EAAKqvD,EAAKrwD,eACVlhB,EAAgBkiB,GAAIjB,WAE1B,GAAKjhB,EAOL,GAL4B,IAAxBrE,EAASu6D,YACIk2C,EAAWpqF,QAAQ7rB,GAI1B,SAANyJ,GAAgBA,EAAE28C,OAAOiD,UAAU58C,QAAQ,QAAU,EAEtD2uE,EAAK8gB,WAAWnwE,EAAI/rB,EAAIwF,EAASktD,aACjC0oB,EAAKw7B,UAAUpxG,EAASmtD,WAAYvzD,WAChC,GAAIqK,EAAE28C,OAAOiD,UAAU58C,QAAQ,WAAa,EAChD2uE,EAAK8gB,WAAWnwE,EAAI/rB,EAAIwF,EAASotD,UACjCwoB,EAAKw7B,UAAUpxG,EAASqtD,QAASzzD,WAC7B,GAAIqK,EAAE28C,OAAOiD,UAAU58C,QAAQ,UAAY,EAC/C2uE,EAAKxsE,KAAK,eAAgB/E,EAAe7J,EAAGse,UAE1C,GAAI7U,EAAE28C,OAAOiD,UAAU58C,QAAQ,sBAAwB,EAAG,CAC5D,MAAMoqG,EAAa,CAAC,EAEpBA,EAAW72G,EAAG4vE,QAAU,GAENrrE,WACf,UAC0BsF,EAAczC,QAAQ+mE,OAC1CnuE,EAAGse,IACHu4F,EAWN,CAPE,MAAOtvG,GACN6zE,EAAKj6E,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kCACTgC,QAAS,sBACTwG,IAAKrN,EAAc3E,QACnBlF,GAAIA,EAAGse,KAEb,GAGHw4F,EACH,MAESrtG,EAAE28C,OAAOiD,UAAU58C,QAAQ,UAAY,EAC7CmyF,EAAQ5tF,QAAQ,CACbR,MAAO4qE,EAAK56E,MAAM,eAClBiN,KAAM2tE,EAAK56E,MAAM,mCACjByQ,SAAU,SAAU/D,GAkCjB,OAjCIA,GACiB3I,WACf,WAC0BsF,EAAczC,QAAQoO,OAC1CxV,EAAGse,MAGOy4F,QAAU,GACpBd,EAAWh8F,OAAOja,GAClBi2G,EAAWv3F,kBAEXkgF,EAAQruF,MAAM,CACX9C,KAAM2tE,EAAK56E,MACR,sDAYZ,CATE,MAAO+G,GACN6zE,EAAKj6E,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kCACTgC,QAAS,sBACTwG,IAAKrN,EAAc3E,QACnBlF,GAAIA,EAAGse,KAIb,GAGH04F,GAGHf,EAAWv3F,kBAEJ,CACV,IAEGlZ,EAASktD,YAAYntD,QAG3B61E,EAAK8gB,WAAWnwE,EAAI/rB,EAAIwF,EAASktD,aACjC0oB,EAAKw7B,UAAUpxG,EAASmtD,WAAYvzD,OAC5BoG,EAASotD,SAASrtD,SAG1B61E,EAAK8gB,WAAWnwE,EAAI/rB,EAAIwF,EAASotD,UACjCwoB,EAAKw7B,UAAUpxG,EAASqtD,QAASzzD,MAEvC,IAGIoG,EAASs6D,eAEPt6D,EAASw6D,YACTx6D,EAASsuC,YACTtuC,EAAS06D,cACR16D,EAAS86D,YACP96D,EAAS86D,WAAWC,cACuB,YAA3C/6D,EAAS86D,WAAWE,qBAEvBz9D,GAAGzD,EAAI4yG,SAASluG,OAEdwB,EAASw6D,aACXj9D,GAAGzD,EAAI+yG,kBAAkBtuG,OACzBhB,GAAGzD,EAAI6yG,sBAAsBpuG,QAG3ByB,EAASy6D,aAAal9D,GAAGzD,EAAI6yG,sBAAsBpuG,OAEpDyB,EAAS86D,aAE8B,IAArC96D,EAAS86D,WAAWC,cACuB,YAA3C/6D,EAAS86D,WAAWE,oBAEpBz9D,GAAGzD,EAAI8yG,cAAcruG,OAGgB,IAArCyB,EAAS86D,WAAWC,cACyB,WAA7C/6D,EAAS86D,WAAW22C,sBAEpBhB,EAAWlyG,OAEVyB,EAAS86D,WAAWG,gBACrB19D,GAAGzD,EAAIwjG,qBAAqB9+F,OAC1BjB,GAAGzD,EAAIwjG,qBAAqB/+F,OAE7ByB,EAAS86D,WAAWC,cACrBnhE,KAAKU,KAAKg9C,aAAap6C,KAAKtD,KAAK+B,KAGlCqE,EAASsuC,YAAY/wC,GAAGzD,EAAIgzG,YAAYvuG,OAExCyB,EAAS06D,cAAcn9D,GAAGzD,EAAIizG,cAAcxuG,QAGhDyB,EAASk7D,YAAYthE,KAAKshE,aAE9B,MAAM30C,EACH3sB,KAAK2rB,gBAAkB3rB,KAAK+B,GAAG+pB,mBAAmB1lB,EAAS4rD,YAEzDhyD,KAAKi0G,yBAAyBj0G,KAAKgvG,mBAAmBriF,GAG3D3sB,KAAKg0G,cACFh0G,KAAKg0G,qBACEh0G,KAAK+B,GAAG6X,QAAQjE,IAAI3V,KAAKk0G,qBAChC,CAAC,EAEAvnF,GAAIjB,aAGL1rB,KAAKi+F,SAAS36F,KAAK,CAChB5C,KAAMV,KAAKU,KACXirB,eAAgBgB,IAGnB3sB,KAAK83G,gBAEX,CAOA76B,OACGj9E,KAAK2yG,gBAAgBttG,eAAe,CAAEzD,KAAM,QAC/C,CAWAgiG,mBAAmBhG,EAAUC,EAAc,IACxC,MAAM39F,EAAMF,KAAKE,IACX63G,EAAgBp0G,GAAGzD,EAAI8yG,cAE7B,GAAI+E,EAAe,CAChB,MAAMjT,EAAkB9kG,KAAKU,KAAKg9C,aAAamgD,cAE/Cka,EAActzG,OAAO,QAASqgG,GAAiB3jF,OAAOhb,QAAU,GAChE4xG,EAAcrzG,SACjB,CAEA,MAAMioB,EAAK3sB,KAAK2rB,eAEhBgB,EAAG4B,gBAAgBsvE,GACnBlxE,EAAGwD,YACN,CAEAhrB,uBAAuBy/F,EAAY,IAChC,MAAMoT,EAAcr0G,GAAG3D,KAAKE,IAAIgzG,YAEhC8E,EAAYvzG,OAAO,QAASmgG,EAAUz+F,QAAU,MAChD6xG,EAAYtzG,UAEZ,MAAMuzG,EAAWj4G,KAAK2yG,eAEtB,GAAIsF,EAASpuG,KAAKijB,KAAK,CAAC,GAAG3mB,OAAS8xG,EAASpuG,KAAKqnB,QAC/C,UAGSlxB,KAAK2rB,eAAewE,WAAW,EAAG,EAM3C,CALE,MAAOhoB,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,4EAET,CAIHqF,YAAW,KACRsjG,EAAStqG,MAAK,CAACC,EAAGC,IAAM7N,KAAK6zG,4BAA4BlmG,KAAKC,EAAGC,IAAG,GACpE,IACN,CAaAivF,WAAWtqE,EAAI0lF,EAASl0C,GACrB,MAAM11C,EAAQ4pF,GAASh5F,KAAO,KAG1BsT,GAAIA,EAAGrG,UAAUmC,GAGjBtuB,KAAKi+F,UAAUj+F,KAAKi+F,SAASnB,WAAW94B,EAAM11C,GAElDxuB,MAAMg9F,WAAW94B,EACpB,CAEAv3D,aAAamK,EAAU,IACpB5W,KAAKoG,SAASqG,aAAemK,CAChC,CAQAo4F,mBAAmBriF,GAChB,MAAMwrF,EAAQn4G,KAAK2rB,eACnB3rB,KAAK2rB,eAAiBgB,EAEtB,MAAMliB,EAAgBkiB,GAAIjB,WACpBmrF,EAAa72G,KAAK2yG,eAEpBkE,IAEI72G,KAAKo4G,oBACPp4G,KAAKo4G,kBAAoB,KACtBp4G,KAAKi9E,MAAM,EAGdj9E,KAAKq4G,mBAAqB,KACvBr4G,KAAKq9E,OAAO,EAGfr9E,KAAKs4G,sBAAwB,KAEI,cAA3BzB,EAAW50G,OAAOvB,MAClB+J,IACCA,EAAcya,UAEf2xF,EAAW/7F,WACX+7F,EAAWt/F,MAAMoV,EAAGyG,WAAa,IAEjCpzB,KAAKqkC,WACLrkC,KAAKq9E,QACR,GAIF86B,IAEDA,EAAM5iF,eAAe,mBAAoBv1B,KAAKo4G,mBAC9CD,EAAM5iF,eAAe,kBAAmBv1B,KAAKq4G,oBAC7CF,EAAM5iF,eAAe,WAAYv1B,KAAKs4G,wBAGrC3rF,GACGA,EAAGd,oBAAsBc,EAAGZ,UAC7BY,EAAG4G,KAAKsjF,EAAYlqF,EAAGd,mBAAoBc,EAAGZ,WAC5CY,EAAG4G,KAAKsjF,GAGblqF,EAAG4I,eAAe,mBAAoBv1B,KAAKo4G,mBAC3CzrF,EAAGvqB,GAAG,mBAAoBpC,KAAKo4G,mBAC/BzrF,EAAG4I,eAAe,kBAAmBv1B,KAAKq4G,oBAC1C1rF,EAAGvqB,GAAG,kBAAmBpC,KAAKq4G,oBAC9B1rF,EAAG4I,eAAe,WAAYv1B,KAAKs4G,uBACnC3rF,EAAGvqB,GAAG,WAAYpC,KAAKs4G,uBACvBt4G,KAAKqkC,WAELrkC,KAAKu4G,uBAAwB,GACzB1B,EAAWrjF,SAGd/oB,IACDzK,KAAKU,KAAKg9C,aAAa14C,WAAWyF,GAClCzK,KAAK4zG,yBAAyB5uG,WAC3ByF,EACAzK,KAAK2yG,gBAER3yG,KAAK6zG,4BAA4B7uG,WAAWyF,GAE5CzK,KAAK2zG,YAAY3uG,WAAWyF,GAC5BzK,KAAK2zG,YAAYzC,mBAAmBvkF,GACpC3sB,KAAK2zG,YAAYtC,iBAAiBrxG,KAAK2yG,gBACvC3yG,KAAK2zG,YAAYxC,gBAAgBnxG,KAAKoG,SAAS85B,cAC/ClgC,KAAK2zG,YAAYvC,YAAYpxG,KAAKU,KAAKU,QAGhD,CAQAo3G,sBACG70G,GAAG3D,KAAKE,IAAI+yG,mBAAmB7tG,UAC/BzB,GAAG3D,KAAKE,IAAI6yG,uBAAuB3tG,UAEnCpF,KAAKwP,KAAK,oBACb,CAQAipG,qBACG90G,GAAG3D,KAAKE,IAAI+yG,mBAAmBvrG,SAC/B/D,GAAG3D,KAAKE,IAAI6yG,uBAAuBrrG,SAEnC1H,KAAKwP,KAAK,YACb,CAEAkpG,qBAGG,OAAO14G,KAAK2yG,eAAeluG,OAAO,aAAczE,KAAKwzG,iBACxD,CAOAb,eACG,OAAOhvG,GAAG3D,KAAKE,IAAIkzG,UACtB,CAMAyC,gBACG,MAAMgB,EAAa72G,KAAK2yG,eAExB,IAAIgG,EAAa,CAAC,EASlB,OANA9B,EAAWvmC,YAAYnlE,IACpB,MAAMsB,EAAeoqG,EAAW+B,gBAAgBztG,GAErB,IAAvBsB,EAAawb,QAAa0wF,EAAalsG,EAAY,IAGnDksG,CACV,CAMAt0E,WACG,IAAKrkC,KAAKoG,SAASq7D,QAAS,OAE5B,MAAMo3C,EAAa74G,KAAK2yG,eAMlBmG,EAAe,CAAC,EACA94G,KAAK2rB,eAAeD,WAE5B3kB,SAAS9C,SAAS+C,IAC7B,OAAQA,EAAE3C,KACP,IAAK,SACFy0G,EAAa9xG,EAAEF,YAAc,CAACE,EAAEF,WAAY,OAE5C,MAEH,IAAK,YACL,IAAK,UACFgyG,EAAa9xG,EAAEF,YAAc,CAC1BE,EAAEF,WACF,CAACg8B,EAAMi2E,KACJ,IAAKA,EAAU,OAAO,EAEtB,IAAI/6D,EAAM,EASV,GAPA+6D,EAAS90G,SAAS2L,IAGfouC,GAAkC,EAA3Bh3C,EAAEsZ,OAAO1Q,GAAG,GAAO,EAAS,IAIjC5I,EAAE+kB,WAAiC,cAApB/kB,EAAE+kB,UAAU1nB,IAE3B,CACF,MAAMm5C,EAAgB,CAAC,EAIvB,OAFAA,EAAcx2C,EAAE+kB,UAAUjlB,YAAck3C,EAEjCh3C,EAAE+kB,UAAUzL,OAAOk9B,EAC7B,CAPG,OAAOQ,CAOV,GAIN,MAEH,IAAK,gBACF86D,EAAa9xG,EAAEF,YAAc,CAC1BE,EAAEF,WACF,CAACg8B,EAAMi2E,KACJ,IAAKA,IAAaA,EAAS5yG,OAAQ,OAAO,EAE1C,IAAI+qB,EAAQ,EAWZ,OATA6nF,EAAS90G,SAAS2L,IACf,MAAMopG,EAAcppG,EAAE5I,EAAEwpB,gBAGpBwoF,GAAa7yG,OAAQ+qB,GAAS8nF,EAAY7yG,OAErC6yG,IAAa9nF,GAAS,EAAC,IAG5BA,CAAK,GAIlB,MAEH,QACG4nF,EAAa9xG,EAAEF,YAAc,CAC1BE,EAAEF,WACF,SAAUg8B,EAAMi2E,GACb,IAAKA,IAAaA,EAAS5yG,OAAQ,OAAO,EAE1C,IAAI+qB,EAAQ,EASZ,OAPA6nF,EAAS90G,SAAS2L,IACHkzB,EAAKlzB,KAGRshB,GAAS,EAAC,IAGfA,CACV,GAIT,IAYH,IAAI+nF,GAAYj5G,KAAKoG,SAASq7D,SAAW,IACrCx5C,MAAM,KACN9Z,KAAK+qG,GAAMA,EAAE/1E,SAEjB81E,EAAWA,EAAS/0D,UAEpB+0D,EAASh1G,SAAQ,CAACgzB,EAASkiF,KACxB,MAAMC,EAAWp5G,KAAK+B,GAAG2D,UAAUozG,GAEnC,IAAI9qG,EAGAmrG,IAAWF,EAAS9yG,OAAS,EAAG6H,EAAKipB,GAGtCjpB,EAAMkR,IACH,IAAIm6F,EAAUn6F,EAAI+X,GAElB,IAAK,IAAI5jB,EAAI8lG,EAAS,EAAG9lG,EAAI4lG,EAAS9yG,OAAQkN,IAC3CgmG,EAAU,GAAGn6F,EAAI+5F,EAAS5lG,SAASgmG,IAGtC,OAAOA,CAAO,EAIjBJ,EAASh1G,SAASq1G,IACXA,IAAariF,IAASmiF,EAASE,GAAY,CAACA,GAAS,KAI/DT,EAAWhvG,KAAK0vG,MAAM,CACnBvrG,GAAIA,EACJG,IAAKirG,GACN,GAER,CAEA93C,aACG,MAAMu1C,EAAa72G,KAAK2yG,eAExBkE,EAAWpyG,OAAO,UAAU,GAC5BoyG,EAAWnyG,SACd,CAWAS,wBAAwB87B,EAAUC,EAAUhR,GACtBlwB,KAAK2yG,eACF3yG,KAAK2rB,eAAeD,WAD1C,MAEMtlB,EAAWpG,KAAKoG,SAChBqG,EAAezM,KAAKkiB,gBAM1B,IAAIif,EAAY,KACZC,EAAO,EAEX,IAAK,IAAI/tB,EAAI,EAAGA,EAAI5G,EAAatG,OAAQkN,IACtC,GAAI5G,EAAa4G,GAAGzS,IAAMqgC,EAAU,CACjCE,EAAY10B,EAAa4G,GACzB5G,EAAaN,OAAOkH,EAAG,GACvB+tB,EAAO/tB,EAEP,KACH,CAIH,IAAK,IAAIguB,EAAI,EAAGA,EAAI50B,EAAatG,OAAQk7B,IACtC,GAAI50B,EAAa40B,GAAGzgC,IAAMsgC,EAAU,CAI7BE,GAAQC,GAAGA,IAEf50B,EAAaN,OAAOk1B,EAAG,EAAGF,GAE1B,KACH,CAWHnhC,KAAKkiB,cAAczV,GAEfrG,EAASs7D,WAAW1hE,KAAKw5G,oBAM7Bx5G,KAAKwP,KACF,eACA/C,EAAa0B,KAAK5K,GAAMA,EAAE+2B,WAG7Bt6B,KAAK83G,eAuCR,CAUA3yG,sBAAsBuiD,EAAOpiD,EAAQiwG,GAIlC,MAAMsB,EAAa72G,KAAK2yG,eAGxB,IACKjrD,EAAM+xD,KAAuB,KAAhB/xD,EAAM/kD,OACN,KAAd+kD,EAAM+xD,KAA8B,KAAhB/xD,EAAM/kD,MAI3B,OAFAk0G,EAAWv3F,kBAEJ,EAGV,GAAIha,EAAOrD,OACR,OAAQqD,EAAOrD,OAAOqD,QACnB,IAAK,SACFoiD,EAAM/kD,MAAQo0C,WAAW2Q,EAAM/kD,OAE/B,MAEH,IAAK,WACF+kD,EAAM/kD,MAAQ+kD,EAAM/kD,MAAM2zC,UAEtBoR,GAASA,EAAM+xD,KAAO/xD,EAAM+xD,IAAInjE,UACjCoR,EAAM+xD,IAAM/xD,EAAM+xD,IAAInjE,WAQlC,GAAIoR,EAAM/kD,QAAU+kD,EAAM+xD,IAAK,CAC5B,MAAMrrG,EAAOyoG,EAAWpqF,QAAQnnB,EAAO4Z,KAEvC9Q,EAAK9I,EAAOkrE,QAAU9oB,EAAM/kD,MAE5Bk0G,EAAW6C,cAActrG,EAAKxN,GAAI0E,EAAOkrE,OAAQ,iBACjDqmC,EAAW6C,cAActrG,EAAKxN,GAAI0E,EAAOkrE,OAAQ,sBAEjD,MAAM/lE,EAAgBzK,KAAK2rB,eAAeD,WACpCnkB,EAAYkD,EAAcolB,YAAYzhB,GAE5C,GAAI7G,EAAUiW,OAAQ,CAQnB,MAAM+hF,EAAKv/F,KAAK+B,GAEhB,UACS0I,EAAczC,QAAQ+mE,OAAO3gE,EAAKxN,GAAIwN,GAExCyoG,EAAWjqF,OAAOtnB,EAAO4Z,OAC1B23F,EAAWlmF,WAAWrrB,EAAO4Z,IAAK9Q,GAClCyoG,EAAWv3F,iBACXu3F,EAAWnyG,QAAQY,EAAO4Z,KA0BhC,CAxBE,MAAO/W,GACNo3F,EAAGn3F,OAAOC,UAAUF,EAAK,CACtBmH,QAAS,kDACTlB,OACA9I,SACAoiD,QACAziD,OAAQwF,EAAc3E,UAGzB+wG,EAAWv3F,iBAGRigF,EAAG1hF,WAAWK,sBACX/V,EACA7C,EAAO4Z,IACP23F,EAST,CA8BH,MAAOtvG,EAAUwW,WAAWzY,EAAO4Z,IAAK23F,EAC3C,MAAOA,EAAWv3F,iBAElB,OAAO,CA4BV,CASA01F,cAAcnrG,GAMX7J,KAAK2yG,gBAAgBgH,SAAS9vG,EAAKqV,IAAKrV,EAAK2mE,OAChD,CAWArrE,qBAAqB2B,EAAY4oE,EAAUsB,EAAU2kC,GAGlD,IAAIiE,GAAiB,EAErB,MAAMra,EAAKv/F,KAAK+B,GAEZ2tE,EAAW,KACZA,EAAW,GACXkqC,GAAiB,EAEjBra,EAAG9kF,MAAMnJ,QAAQ,CACd1P,KAAM,OACNyM,KAAMrO,KAAKoB,MAAM,8BAA+B,CAAC,KACjD+Q,OAAQ,OAId,MAAM+P,EAAgBliB,KAAKkiB,gBAE3B,GAAIA,EAAe,CAChB,MAAM4tD,EAAS5tD,EAAc4K,MAAMmkD,GAAMA,EAAErwE,IAAMkG,IAE7CgpE,IACDA,EAAO9uE,MAAQ0uE,SAERI,EAAOG,OAEpB,CAEAjwE,KAAKkiB,cAAcA,GAEfliB,KAAKoG,SAASs7D,iBACT1hE,KAAKw5G,oBAaVI,GAAgB55G,KAAK83G,gBAEzB93G,KAAK04G,qBAML14G,KAAKwP,KAAK,gBAAiB1I,EAAY4oE,EAAUsB,EACpD,CAMAklC,cAAct1G,EAAIyJ,EAAG9H,GAClB,IAAkD,IAA9CvC,KAAK8zG,iBAAiBzmG,QAAQzM,EAAG4vE,QAAgB,OAAO,EAK5D,MAAMqpC,EAAY75G,KAAK2rB,eAAeD,WAAW3kB,QAC7CC,GAAMA,EAAEF,aAAelG,EAAG4vE,SAC5B,GAQF,OAFAxwE,KAAKwP,KAAK,wBAAyBjN,EAAMs3G,IAElC,CACV,CAMArvG,SACG1K,MAAM0K,SAGNxK,KAAK2yG,gBAAgB1iC,SAErB,MAAMz9C,EAAKxyB,KAAK2rB,eAEZ6G,GACDxyB,KAAK4xB,SAAS,CACXC,QAASW,EACTV,UAAW,eACXC,SAAU/xB,KAAKqzG,eAAe9/E,KAAKvzB,OAE5C,CAMAq9E,QACGr9E,KAAK2yG,gBAAgBhrG,gBACxB,CAUAmwG,cAAcgC,EAAc95G,KAAK85G,aAG9B,MAAMrvG,EAAgBzK,KAAK2rB,eAAeD,WAE1C,IAAKjhB,EAAe,OAEpB,MAAMvK,EAAMF,KAAKE,IACX22G,EAAalzG,GAAGzD,EAAIkzG,WAE1B,IAAKyD,EAAY,OAEjB,MAAMv+C,EAAcu+C,EAAW50G,OAAOq2D,YAEtCu+C,EAAWpyG,OAAO,YAAa,GAC/BoyG,EAAWpyG,OAAO,aAAc,GAEhC,IAAI0yG,EAAY,EAEhB1sG,EAAc+2B,cAAcv9B,SAASoyD,IAClC,MAAMjwD,EAAWiwD,EAAM/pD,cAEnBlG,EAASm4C,WAAan4C,EAASo4C,YAAc24D,IAC9CA,EAAY/wG,EAASo4C,YAAW,IAGlC24D,GAAWN,EAAWpyG,OAAO,YAAa0yG,GAI9C,MAAM/wG,EAAWpG,KAAKoG,SAEtB,IAAIw/C,EAAWx/C,EAASu6D,WAEpBk2C,EAAW50G,OAAOq2D,YAAc,IAAG1S,GAAW,GAIlD,MAAMm0D,EAAmBtvG,EAAcklE,eACpC,EACA/pB,EAEA,GACA,GACA,IAGH,IAAI+pB,EAAgB3vE,KAAKkiB,gBAEzB,MAAMq9E,EAAKv/F,KAAK+B,GAGX4tE,IAAiBmqC,IACnBnqC,EAAgB4vB,EAAG75F,UAAU1F,KAAKoG,SAASqG,eAGjB,IAAzBkjE,EAAcxpE,SAAcwpE,EAAgBoqC,GAKhD,MAAMC,EAAqBD,EAAiB5rG,KAAK8iE,GAAMA,EAAE32C,UAEzDq1C,EAAgBA,EAAc7mE,QAC1BvF,GAAMy2G,EAAmB3sG,QAAQ9J,EAAE+2B,UAAY,IAInDq1C,EAAc1rE,SAASV,IAGpB,MAAM02G,EAAUF,EAAiBjtF,MAAMmkD,GAAMA,EAAE32C,UAAY/2B,EAAE+2B,UAO7DnmB,OAAOC,KAAK6lG,GAASh2G,SAASoQ,IACD,mBAAf4lG,EAAQ5lG,IAA2B,YAANA,IACrC9Q,EAAE8Q,GAAK4lG,EAAQ5lG,GAClB,IAGH,MAAMrN,EAAIyD,EAAcsD,UAAUxK,EAAE+2B,SAE/BtzB,IAGDZ,EAAS85B,aAAa7yB,QAAQrG,EAAEF,aAAe,IAChDvD,EAAEsxE,QAAS,GAIVzuE,EAAS46D,eAAe3zD,QAAQrG,EAAEpG,KAAO,EAC7B,aAAToG,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAC3Bd,EAAE2sE,OAAS,CAAEC,QAAS,cAAevqE,MAAOoB,GAC1CzD,EAAE2sE,OAAS,CAAEC,QAAS,cAGrB/pE,EAAS66D,aAAa5zD,QAAQrG,EAAEpG,KAAO,IAC7C2C,EAAE2sE,OAAS,CAAEC,QAAS,gBAAe,IAG3C,IAAIjuD,EAAgBliB,KAAKkiB,gBAEpBA,IAAiB43F,IACnB95G,KAAKkiB,cAAcytD,GAEnBztD,EAAgBytD,GAGnBA,EAAgB4vB,EAAG75F,UAAUwc,GAE7B,MAAMg4F,EAAmB,GACnBC,EAAW,GA0EjB,GAxEAxqC,EAAc1rE,SAASs3E,IAKpB,GAJAA,EAAI74E,WAAY,EAIZ64E,EAAIvL,kBAC8B,iBAAxBuL,EAAIvL,kBACZuL,EAAIvL,gBAAkBn8D,KAAK0D,MAAMgkE,EAAIvL,kBAGpCuL,EAAIvL,gBAAgB7pE,QAAQ,CAC7B,MAAMi0G,EAAe,GAGrB7+B,EAAIvL,gBAAgB/rE,SAASwrB,IAC1B,MAAMsuD,EAASwhB,EAAG3rE,iBACf2nD,EAAI36E,IAGPw5G,EAAa91G,KAAKy5E,EAAOt9E,IAEzBy5G,EAAiB51G,KAAK,CACnBwE,OAAQi1E,EACRr9E,KAAMq9E,EAAO79E,IAAIy0E,aACjB7tE,WAAYy0E,EAAI36E,GAChBovE,gBAAiBvgD,EAAKtO,MACtBkpD,eAAgB56C,EAAK46C,gBACtB,IAIL,MAAMgwC,EACHn6G,EAAIihB,MAAQ,IAAMo6D,EAAI36E,GAGzBu5G,EAAS71G,KAAK+1G,GAEd9a,EAAG9kF,MAAMha,GAAG,CACTC,KAAM,QACNQ,IAAK,iBACLN,GAAIy5G,EACJ54G,KAAM,CACHI,KAAMu4G,IAGf,CAIH,GACGh0G,EAASq7D,UACRr7D,EAASq7D,SAAW,IAAIp0D,QAAQkuE,EAAI36E,KAAO,EAC7C,CACC,MAAM05G,EAAa7vG,EAAcsD,UAAUwtE,EAAIjhD,SAE3CggF,IACD/+B,EAAIhZ,SAAW,CAACzqD,EAAKiyB,KAElB,GAAIjyB,EAAIwmE,OAAQ,CACb,MAAMvwD,EAAUwxE,EAAG75F,UAAUoS,GAI7B,OAFAiW,EAAQusF,EAAWxzG,YAAcinB,EAAQprB,MAGtConC,EAAOwwE,UAAUziG,EAAKiyB,GACtBuwE,EAAWh6F,OAAOyN,EAExB,CAAO,OAAOusF,EAAWh6F,OAAOxI,EAAI,EAE7C,KAGCoiG,EAAiB/zG,OAAQ,CAE1B,MAAMq0G,EAAqB,GAE3BN,EAAiBj2G,SAAS+C,IAGvBA,EAAE8B,OAAO+qB,WAAWppB,EAAc1D,UAElCC,EAAE8B,OAAOjE,SAASmC,EAAEgpE,iBAGf7iE,MAAMC,QAAQotG,EAAmBxzG,EAAEF,eACrC0zG,EAAmBxzG,EAAEF,YAAc,IAGtC0zG,EAAmBxzG,EAAEF,YAAYxC,KAAK,CACnC6wB,QAASxxB,GAAGqD,EAAEtG,MAAM+5G,kBACpB90G,OAAQkxG,EAAW6D,kBACnBrwC,eAAgBrjE,EAAEqjE,gBACnB,IAGL,MAAMlpD,EAAQ,CAAC,EAGf01F,EAAWnpG,MAAM8sG,mBAAqBA,EAEtCrmG,OAAOC,KAAKomG,GAAoBv2G,SAASI,IACtC8c,EAAM9c,GAAO,CAAC1B,EAAOkH,KAElB,IAAItE,GAAU,EACV8kE,EAAiB,GA8BrB,OA5BAwsC,EAAWnpG,MAAM8sG,mBAAmBn2G,GAAKJ,SAAS6E,IAE/C,MAAM6xG,EAAU,CAAC,GAEhBlwG,EAAc1D,UAAY,IAAI9C,SAAS2B,IACrC+0G,EAAQ/0G,EAAMhF,IAAMiJ,EAAKjE,EAAMkB,WAAW,IAIzC+C,EAAKgG,OAAM8qG,EAAqB,YAAI9wG,EAAKgG,MAG3B/G,EAAOqsB,QAAQwlF,KAI9Bp1G,GAAU,EACV8kE,EAAiBvhE,EAAOuhE,eAC3B,IAIE9kE,GACFg6F,EAAG9kF,MAAMnJ,QAAQ,CACd1P,KAAM,QACNyM,KAAMg8D,IAGL9kE,CAAO,CAChB,IAGJsxG,EAAWpyG,OAAO,QAAS0c,GAE3B01F,EAAW50G,OAAOk4G,SAAWA,EAC7BtD,EAAWnyG,SACd,MAEOmyG,EAAW50G,OAAOk4G,UACnBtD,EAAW50G,OAAOk4G,SAASl2G,SAASywE,IAC7B/wE,GAAG+wE,IAAQ/wE,GAAG+wE,GAAOkmC,YAAY,IAG3C/D,EAAWpyG,OAAO,QAAS,CAAC,GAC5BoyG,EAAWnyG,UAGd,MAAMm2G,EAAe,GAKjBz0G,EAASm7D,eAEVoO,EAAc9iC,QAAQ,CACnBjsC,GAAI,yBACJkvE,OAAQ,QACRptE,WAAW,EACX6/D,SAAWzqD,GAAQrN,EAAcs4B,YAAYjrB,KAGhD+iG,EAAav2G,KAAK,2BAGjB8B,EAASw6D,YAA8B,IAAhBtI,GACxBqX,EAAc9iC,QAAQ,CACnBjsC,GAAI,yBACJkvE,OAAQ,CAAEK,QAAS,iBAAkB2qC,UAAW,OAChD95G,MAAO,GACPuhE,SAAU,sDACVrhE,IAAK,CAAE,aAAc,YAExBlB,KAAKuzG,gBAAkB,EACvBsH,EAAav2G,KAAK,2BACdtE,KAAKuzG,gBAAkB,EAED,KAAzBntG,EAASktD,aAAuBltD,EAASo7D,cAC1CmO,EAAcrrE,KAAK,CAChB1D,GAAI,yBACJkvE,OAAQ,GACR9uE,MAAO,GACPuhE,SAAU,CAACzqD,EAAKiyB,IACb,4EACH7oC,IAAK,CAAE,aAAc,YAGxB25G,EAAav2G,KAAK,2BAGM,IAAvB8B,EAAS26D,WAAmC,IAAhBzI,IAC7BqX,EAAcrrE,KAAK,CAChB1D,GAAI,wBACJkvE,OAAQ,GACR9uE,MAAO,GACPuhE,SACG,qEACHrhE,IAAK,CAAE,aAAc,SAAUi+F,OAAQ,aAG1C0b,EAAav2G,KAAK,0BAII,KAAtB8B,EAASotD,UACRptD,EAASo7D,aACM,IAAhBlJ,IAEAqX,EAAcrrE,KAAK,CAChB1D,GAAI,uBACJkvE,OAAQ,GACR9uE,MAAO,GACPuhE,SAAU,8CACVrhE,IAAK,CAAE,aAAc,YAGxB25G,EAAav2G,KAAK,yBAGjB8B,EAASy6D,aAA+B,IAAhBvI,IACzBqX,EAAcrrE,KAAK,CAChB1D,GAAI,mBACJkvE,OAAQ,GACR9uE,MAAO,GACPuhE,SAAU,gDACVrhE,IAAK,CAAE,aAAc,YAGxB25G,EAAav2G,KAAK,qBAIrB,IAAIy2G,EAAU,KAEd,IAAK,IAAI1nG,EAAIs8D,EAAcxpE,OAAS,EAAGkN,GAAK,EAAGA,IAC5C,IAAK0nG,EAAS,CACX,MAAMx/B,EAAM5L,EAAct8D,GAE1B,IAAKkoE,EAAI1G,SAA4C,IAAlCgmC,EAAaxtG,QAAQkuE,EAAI36E,IAAY,CACrDm6G,EAAUx/B,EAEV,KACH,CACH,CAECw/B,IACDA,EAAQr4G,WAAY,EACpBq4G,EAAQz0C,SAAWy0C,EAAQ/5G,MAC3B+5G,EAAQ/5G,MAAQ,KAGnB61G,EAAWmE,eAAerrC,GAG1B3vE,KAAKwzG,iBAAmBqH,EAAa10G,OAGjC00G,EAAaxtG,QAAQ,2BAA6B,IACnDrN,KAAKwzG,kBAAoB,GAExBxzG,KAAKwzG,iBAAmB,IAAGxzG,KAAKwzG,iBAAmB,GAGvD,MAAMvzE,EAAiB75B,EAAS65B,eAEV,IAAlBA,EACD42E,EAAWpyG,OACR,YACAoyG,EAAW1C,eAAel0E,GAAkB,GAE7C42E,EAAWpyG,OAAO,YAAazE,KAAKuzG,iBAEzCvzG,KAAK04G,qBACL7B,EAAWmE,gBAEd,CAOA71G,0BACG,MAAMo6F,EAAKv/F,KAAK+B,GACVk5G,QACI1b,EAAG3lF,QAAQjE,IAAI3V,KAAKk0G,qBAAwB,CAAC,EACjDF,EAAgBh0G,KAAKg0G,cAE3BiH,EAAmBj7G,KAAKk7G,cAAgBlH,EAAch0G,KAAKk7G,cACtDlH,EAAch0G,KAAKk7G,cACnB,GAEL,IAAK,MAAM9sG,KAAQ6sG,EAChBA,EAAmB7sG,GAAMnK,SAASmK,IAE3BA,GAAM8hE,QAAQtqE,cAAcwI,EAAK8hE,OAAOtqE,KAAK,UAIjD25F,EAAG3lF,QAAQC,IAAI7Z,KAAKk0G,mBAAoB+G,EACjD,CAYA/4F,cAAcvf,EAAQ,MACnB,MAAMqxG,EAAgBh0G,KAAKg0G,cAE3B,IAAIrxG,EACC,OAAOqxG,EAAch0G,KAAKk7G,cADpBlH,EAAch0G,KAAKk7G,cAAgBv4G,CAEjD,CASA2wG,UAAUvlF,GACP,MAAM8oF,EAAa72G,KAAK2yG,eAEnBkE,IAEA9oF,EACIA,GAASntB,IAAMi2G,EAAWjqF,OAAOmB,EAAQntB,IAC/Ci2G,EAAWld,OAAO5rE,EAAQntB,IAAI,GAC5Bi2G,EAAWld,OAAO,MAAM,GAHfkd,EAAWsE,WAI5B,CAQAD,aACG,MAAMzwG,EAAgBzK,KAAK2rB,eAAeD,WAE1C,MAAO,GAAG1rB,KAAKY,MAAM6J,EAAgBA,EAAc7J,GAAK,KAC3D,CASA42G,UAAU4D,EAAWC,GAElB,MAAMC,EACHD,EAAGE,mBAAmBnkC,UAAU,CAAEx2E,GAAIw6G,KAAgBz3G,GAAGy3G,GAE5D,IAAKE,EAAK,OAGV,MAAME,EAASF,EAAI7vG,gBAAgBA,gBAEnC,IAAK+vG,EAAQ,OAGTA,EAAO32G,UAAU22G,EAAO32G,SAASu2G,GAGrC,MAAMK,EAAUD,EAAOpkC,UAAU,CAAE12E,KAAM,cAAgB,UAGrD+6G,GAASz7G,KAAKw3G,UAAUiE,EAASJ,EACxC,CAEAlG,qBACG,MAAM0B,EAAa72G,KAAK2yG,eAExB,IAAI+I,EAAe,EAEnB7E,EAAWhtG,KAAK03E,MAAMzpE,SAED,IAARA,GACP3D,OAAOgmC,UAAUk1B,eAAej1B,KAC7BtiC,EACA,2BAE4B,IAA/BA,EAAI25F,wBAEJiK,GAAc,IAGhBA,EAAe,EAAG17G,KAAKy4G,qBACtBz4G,KAAKw4G,qBACb,CAEAlC,sBAAsB5oG,GACnB,MAAMmpG,EAAa72G,KAAK2yG,eAClBloG,EAAgBzK,KAAK2rB,eAAeD,WACpCiwF,EAAc,GAEpB9E,EAAWhtG,KAAK03E,MAAMriE,SAED,IAARA,GAEP/K,OAAOgmC,UAAUk1B,eAAej1B,KAC7Bl7B,EACA,2BAE4B,IAA/BA,EAAIuyF,wBAGJkK,EAAYr3G,MAAK,IAAMmG,EAAczC,QAAQoO,OAAO8I,EAAIte,KAC3D,IAGH,MAAM4+F,EAAUx/F,KAAK+B,GAAG0Y,MAEpBkhG,EAAYx1G,OAAS,EACtBq5F,EAAQ5tF,QAAQ,CACbR,MAAOpR,KAAKoB,MAAM,2BAClBiN,KAAMrO,KAAKoB,MACR,yDAEHyQ,SAAU1M,MAAO2I,IACVA,UAEK2B,QAAQ4R,IAAIs6F,EAAYxtG,KAAKwuB,GAAMA,OAGzC38B,KAAKw4G,sBACR,IAINhZ,EAAQruF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,uBAClBiN,KAAMrO,KAAKoB,MACR,8EAGZ,CAEA+iG,cAAcz2F,GACX1N,KAAKU,KAAKg9C,aAAaoiD,UAAUpyF,EACpC,CAEA6oG,YAAY7oG,GACT1N,KAAK6zG,4BAA4BjvG,KAAK8I,EACzC,CAEA8oG,cAAc9oG,GACX1N,KAAK2zG,YAAY/uG,KAAK8I,EACzB,CAEA2oG,kBAAkB3oG,GACf1N,KAAK4zG,yBAAyBhvG,KAAK8I,EACtC,CAOAkuG,QAAQ9jG,EAAKiyB,GACV,MAAMt/B,EAAgBzK,KAAK2rB,eAAeD,WACpCmwF,EAAqBpxG,EAAc+2B,cAAcrzB,KACnDnH,GAAMA,EAAEF,aAGZ,IAAIg1G,EAAM,GAEV,MAAMh1G,EAAaijC,EAAOymC,OAAO5vE,GAAGoS,QAAQ,IAAK,IAEjD,GAAI7F,MAAMC,QAAQ0K,EAAIhR,IACnBgR,EAAIhR,GAAY7C,SAAQ,SAAU6hB,GAC3BA,EAAEzX,OAAMytG,GAAOh2F,EAAEzX,KAAO,QAC/B,SACI,QACsC,IAAnCyJ,EAAIhR,EAAa,eACG,iBAApBgR,EAAIhR,GAEXg1G,EAAMhkG,EAAIhR,EAAa,cAAcuH,UACnC,QAA8C,IAAnCyJ,EAAIhR,EAAa,cAA+B,CAC7D,IAAIi1G,EAAejkG,EAAIhR,EAAa,cAE/BqG,MAAMC,QAAQ2uG,KAAeA,EAAe,CAACA,KAEjDA,GAAgB,IAAI93G,SAAQ,SAAU6hB,GAChCA,IAAGg2F,GAAOh2F,EAAEzX,KAAO,QAC1B,GACH,MAAO,IAAgD,IAA5CwtG,EAAmBxuG,QAAQvG,GAAoB,CACvD,IAAKgR,EAAIhR,GACN,MAAO,GAGPg1G,EAAM,gEAAgEhkG,EAAIhR,QAEhF,KAAoC,SAAzBijC,EAAOymC,OAAOlrE,OACtBw2G,EAAM/xE,EAAOymC,OAAOlwD,OAAOxI,EAAIhR,IACA,eAAzBijC,EAAOymC,OAAOlrE,OACpBmF,EAAc1D,SAAS9C,SAAS+C,IACzBA,EAAEF,aAAeA,GACdE,EAAEZ,SAASjE,SACZ6E,EAAEZ,SAASjE,QAAQ8B,SAAS6hB,IACrBA,EAAEllB,KAAOkX,EAAIhR,KACdg1G,EAAMh2F,EAAEzX,KACX,GAGT,IAEDytG,EAAMhkG,EAAIhR,GAEf,OAAKg1G,GAAY,EAEpB,CAOAE,sBAAsBz5G,GAEnBA,EAAK80E,MAAM4kC,WAAa,QAC3B,CAOAC,qBAAqB35G,GAEgB,QAA9BA,EAAK45G,YAAYC,SAClBznG,YAAW,KACR,MAAM0nG,EAAY/2F,SAAS/iB,EAAK80E,MAAMqtB,IAAI1xF,QAAQ,KAAM,KAAO,IACzDspG,EAAWh3F,SAAS/iB,EAAK80E,MAAMi5B,KAAKt9F,QAAQ,KAAM,KAAO,IAE/D,GAAIqpG,EAAYrjG,OAAOujG,YAAa,CACjC,MAAMC,EAAaH,EAAYrjG,OAAOujG,YAChCE,EACHn3F,SAAS/iB,EAAK80E,MAAMqtB,IAAI1xF,QAAQ,KAAM,KAAOwpG,EAChDj6G,EAAK80E,MAAMqtB,IAAM+X,EAAS,IAC7B,CAEA,GAAIH,EAAWtjG,OAAOmE,WAAY,CAC/B,MAAMu/F,EAAaJ,EAAWtjG,OAAOmE,WAC/Bw/F,EACHr3F,SAAS/iB,EAAK80E,MAAMi5B,KAAKt9F,QAAQ,KAAM,KAAO0pG,EACjDn6G,EAAK80E,MAAMi5B,KAAOqM,EAAU,IAC/B,CAEAp6G,EAAK80E,MAAM4kC,WAAa,SAAS,GACjC,KACC15G,EAAK80E,MAAM4kC,WAAa,SAClC,iBC9vEH,MAAMW,EAAiB,EAAQ,OAGzBxc,EACH,WAEY,MAAMyc,UAAmBD,EAoBrC32G,WAAWN,GACR7F,MAAMmG,WAAWN,GAGjB3F,KAAK09C,aAAaiV,aAAa3yD,KAAKoG,SAAS86D,WAChD,CAEA47C,oBAAoB58G,EAAKuhE,GACtB,IAAIs7C,EAAWt7C,GAAW,GACH,iBAAZs7C,IACRA,EAAWA,EAAS90F,MAAM,MAG7B,IAAI9lB,EAAUwB,GAAGzD,EAAIuhE,SAASiZ,UAAU7wE,KAAKijB,KAAK,CAAC,GAEnDnpB,GAAGzD,EAAI88G,aAAaliG,WACpBiiG,EAAS94G,SAASgzB,IACf,IAAIgoB,EAAM98C,EAAQ2G,QAAQgd,GAAMA,EAAEllB,IAAMq2B,IAAS,GAC7CgoB,GACDt7C,GAAGzD,EAAI88G,aAAa97F,IAAI+9B,EAC3B,GAEN,CASA9+C,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIiyG,EAAoBpyG,MAGxC,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEIu9C,mBAQD,OAP2B,MAAvB19C,KAAKigG,iBACNjgG,KAAKigG,eAAiB,IAAI,IACvBjgG,KAAK+B,GACL,GAAG/B,KAAKY,oBAIPZ,KAAKigG,cACf,CAEI/B,qBAID,OAH6B,MAAzBl+F,KAAKmgG,mBACNngG,KAAKmgG,iBAAmB,IAAIC,GAExBpgG,KAAKmgG,gBACf,iECpFCpgG,EAAI,KAEO,MAAMk9G,UAAiD,IACnEt9G,YAAYE,GAGTC,MAAM,CACHK,UAAW,GAHdN,EAASA,GAAU,wCAIhBoK,KAAM,GAAGpK,mBACTqK,KAAM,GAAGrK,qBAGZG,KAAKyK,cAAgB,KAIrBzK,KAAKuN,gBAAiB,EAItBvN,KAAKqM,UAAY,KAIZtM,IACFA,EAAI,IAAI6V,IACE5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,GAG9C,CAEAsnG,SACG,MAAMjZ,EAASjkG,KAAKE,IAAIC,UACxB,MAAO,CACJO,KAAM,OACNE,GAAIZ,KAAKE,IAAIgK,KAEbvI,YAAY,EACZuH,SAAU,CACP,CACGxI,KAAM,SACNkB,KAAM,OACNV,IAAK,gBACLyB,MAAO5C,EAAE,gBACTqC,GAAI,CACDgI,YAAa,KACVpK,KAAKsK,kBACLtK,KAAKuK,iBAAiB,EAEzB4sE,cAAe,WACZn3E,KAAKokG,eAAe1iB,aACjB,UACA,GAAGuiB,oBAET,KAKf,CAEAxjG,KACG,MAAO,CACJC,KAAM,QACNE,GAAIZ,KAAKE,IAAIC,UAEba,MAAO,IACPS,KAAMzB,KAAKk9G,SACX96G,GAAI,CACDoI,OAAQ,KACLxK,KAAKwK,QAAQ,GAIzB,CAGArF,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAIR4B,GAAG3D,KAAKE,IAAIC,YAAYsD,MAAMhD,GAAGT,KAAKS,KAC9C,CAYA6J,gBAAgBI,EAASC,GACtB,IAAIqxE,EAAOh8E,KACP4K,EAAYjH,GAAG3D,KAAKE,IAAIgK,MAExBW,EAAYD,EAAUE,gBAAgB3E,OAAS,EAC/C4E,EAAa/K,KAAKgL,cAAa,GACnCJ,EAAUK,QACP,CACGrK,GAAI,OAAS6C,MAAMyH,MACnB/J,KAAM,CACH,CACGT,KAAM,QACNM,MAAO,IACPmB,QAAS4I,EACT3I,GAAI,CACDC,SAAU,SAAU8I,GAEjB6wE,EAAK5wE,cAAcD,EADVnL,KAEZ,IAGN,CACGU,KAAM,YACNM,MAAO,IACPmB,QAAS,CACN,CACGvB,GAAI,GACJ+B,MAAO5C,EAAE,yBAGfqC,GAAI,CACDC,SAAU,KAEPrC,KAAKuK,iBAAiB,IAI/B,CACG7J,KAAM,SACNQ,IAAK,eACLqK,KAAM,cACN3J,KAAM,OACNZ,MAAO,GACPoB,GAAI,CACDgI,YAAa,WACVQ,EAAUY,WAAWxL,KAAKyL,iBAC1BuwE,EAAKtwE,kBAAiB,GACtBswE,EAAKzxE,iBACR,MAKZM,GAICH,GACiBE,EACdE,gBACAD,GAAWC,gBAAgB,GACnBjG,SAAS6F,GAGpBC,GACmBC,EAChBE,gBACAD,GAAWC,gBAAgB,GACjBjG,SAAS8F,EAE7B,CAWAK,aAAaW,GACV,IAAIf,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBa,EAAa,GAEZjH,EAAY9D,KAAKyK,cAAc1D,SACnC,GAAwB,GAApBjD,EAAUqC,OAAa,OAAO4E,EAalC,GAVAjH,EAAUG,SAAS+C,IACZA,EAAE4E,mBACHb,EAAWzG,KAAK,CACb1D,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,OAEf,IAICuK,EAAiB,CAClB,IAAIE,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIC,EAAgBF,EAAMhB,gBAAgB,GAAGmB,WACzCD,IACDjB,EAAaA,EAAWjC,QAAQ9B,GAAMA,EAAEpG,IAAMoL,IAEpD,GAEN,CACA,OAAOjB,CACV,CAOA/F,WAAWC,GACRjF,KAAKyK,cAAgBxF,CACxB,CAcAmH,YAAYhG,GACTpG,KAAKqM,UAAYrM,KAAK+B,GAAG2D,UAAUU,EACtC,CAaAkG,cACG,IAAI1B,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBqC,EAAa,GAEZV,EAAajB,EAAUE,gBAc3B,OAbIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WACnCM,EAAWjI,KAAK,CACbD,IAAKqG,EACLC,IAAKA,GAEX,IAEI4B,CACV,CAYAnB,cAAckvB,EAAS9tB,GACpB,IACI2wG,EADAr5G,EAAY9D,KAAKyK,cAAc1D,SAEhC2F,EAAUF,EAAGf,gBAAgBX,gBAAgB,GAG7C3I,EAAU,KAGb,GADAg7G,EAAcr5G,EAAUgpB,MAAM9lB,GAAMA,EAAEpG,IAAM05B,IAC5C,CAEA,OAAQ6iF,EAAY94G,KACjB,IAAK,OACFlC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,oBACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,qBAE1B,MACH,IAAK,SACFoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAE1B,MAEH,QACGoC,EAAU,CACP,CAAEvB,GAAI,MAAO+B,MAAO5C,EAAE,WACtB,CAAEa,GAAI,OAAQ+B,MAAO5C,EAAE,YAKhC2M,EAAQjI,OAAO,UAAWtC,GAC1BuK,EAAQhI,UAOR1E,KAAK0L,mBACL1L,KAAKuK,iBAjCmB,CAkC3B,CAMAC,SACG,IAAII,EAAYjH,GAAG3D,KAAKE,IAAIgK,MAG5BzG,MAAMhD,GAAGT,KAAKk9G,SAAUtyG,GAExB,IAAI+B,EAAQ3M,KAAKqM,UACbM,GAASA,EAAM1I,SAChB0I,EAAM1I,SAAS2I,IACZ5M,KAAKsK,gBAAgBsC,EAAEvI,IAAKuI,EAAEjC,IAAI,IAI3B,MAATgC,GAAiC,GAAhBA,EAAMxG,QACxBnG,KAAKsK,iBAEX,CAQAoB,iBAAiBmB,GACd,IAAIjC,EAAYjH,GAAG3D,KAAKE,IAAIgK,MACzBa,EAAa/K,KAAKgL,cAAa,GAC/B8B,EAAiB,GACjBC,EAAmB,GAElBlB,EAAajB,EAAUE,gBACvBe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAW+hB,MAAM9lB,GAAMA,EAAEpG,IAAM8J,IAEzCsC,EAEDF,EAAexI,KAAK0I,GAGpBD,EAAiBzI,KAAKwH,EAE5B,IAIEe,GACFE,EAAiB9I,SAAQ,SAAU6H,GAChClB,EAAUY,WAAWM,EACxB,KAIHD,EAAajB,EAAUE,iBACR3E,OAAS,GAErB0F,EAAW5H,SAAQ,SAAU6H,EAAOC,GACjC,GAAIF,EAAW1F,OAAS,GAAK4F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWjC,QAAO,SAAU9B,GACpC,OAAOA,EAAEpG,IAAM8J,CAClB,IAGCuC,EAAgCH,EAAehE,QAAO,SACvDoE,GAEA,OAAIC,MAAMC,QAAQJ,KAAsC,IAAzBA,EAASK,QAAQH,EAInD,IAGII,EAAevC,EAAWjC,QAAO,SAAUoE,GAC5C,OACGC,MAAMC,QAAQH,KACgC,IAA9CA,EAA8BI,QAAQH,EAK5C,IAGApB,EAAMhB,gBAAgB,GAAGrG,OAAO,UAAW6I,GAC3CxB,EAAMhB,gBAAgB,GAAGpG,SAC5B,GAEN,CAMA6F,kBAEOvK,KAAKuN,iBAETvN,KAAKqM,UAAYrM,KAAKsM,cAEtBtM,KAAKwP,KAAK,UAAWxP,KAAKqM,WAC7B,CAEAmB,gBACGxN,KAAKuN,gBAAiB,CACzB,CAEAE,kBACGzN,KAAKuN,gBAAiB,CACzB,CAYA3I,KAAK8I,EAAOhD,EAASvI,GAClBnC,KAAKwN,gBAEL7J,GAAG3D,KAAKE,IAAIC,WAAWyE,KAAK8I,EAAOvL,GAAW,MAE1CuI,GACD1K,KAAKsK,gBAAgBI,GAGxB1K,KAAKyN,iBACR,CASAE,KAAKC,EAAGC,GACL,IAAIC,EAAS,EAEb,MAAMjC,EAAalI,GAAG3D,KAAKE,IAAIgK,MAAMY,gBAyCrC,OAxCIe,EAAW1F,OAAS,GAErB0F,EAAW5H,SAAQ,CAAC6H,EAAOC,KACxB,GAAIF,EAAW1F,OAAS,GAAK4F,GAAmB,GAAV+B,EAAa,OAEnD,MAAMpD,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WAE/BrG,EAAQ5F,KAAKyK,cAAcsD,UAAUrD,GAC3C,IAAK9E,EAAO,OAEZ,MAAMoI,EAAKpI,EAAMkB,WAEjB,IAAImH,EAASL,EAAEI,GACZE,EAASL,EAAEG,GAEVb,MAAMC,QAAQa,KACfA,GAAUA,GAAU,IAChBE,KAAI,SAAUC,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRnB,MAAMC,QAAQc,KACfA,GAAUA,GAAU,IAChBC,KAAKC,GAASA,EAAKC,MAAQD,IAC3BE,KAAK,MAGRL,GAAUC,IAERJ,EADQ,OAAPnD,EACQsD,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,EAEtC,IAICJ,CACV,oBClhBH,MAAMsvG,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErC,IAAIt9G,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA0B09G,EAiBxC74G,gBAAgB3E,EAAKq2E,GAKlB,OAFqBj2E,KAAKG,UAAUP,EAFvB,6BAKhB,CAMA8qB,qCAAqC9qB,EAAKM,EAAKsB,EAAQ87G,GACpD,IAAIC,EAAWz9G,MAAM09G,8BAClB59G,EACAM,EACAsB,EACA87G,GAoDH,OAjDA97G,EAAOi8G,aAAgBrvG,IAEpB,IAAI+0E,EAAkB,CAAC,MAAO,OAAQ,MAAO,MAAO,OAChDvhF,EAAOwM,EAAKxM,KAAKuW,cACrB,IAAsC,GAAlCgrE,EAAgB91E,QAAQzL,GAMzB,OALA6B,MAAM6N,QACHvR,EAAE,kCAAmC,CAClCojF,EAAgB70E,KAAK,UAGpB,EACH,CAEJ,IAAI6zB,EAAW3gC,EAAOk8G,oBACtB,IAAIC,EAAY,cAAcx7E,EAASp9B,YAAYoC,KAAK6L,QACrD,IACA,WAEC1C,EAAM,gBAAgB6xB,EAASp9B,YAAYoC,QAAQw2G,MAKvD,OAHAh6G,GAAGzD,EAAI2yE,MAAMpuE,OAAO,SAAU6L,GAC9B3M,GAAGzD,EAAI2yE,MAAMnuE,WAEN,CACV,GAGHlD,EAAOo8G,aAAgBhrC,IACpB,GAAKA,GAAaA,EAAS/oE,KAA3B,CAEA,IAAIs4B,EAAW3gC,EAAOk8G,oBAItB,GAHAv7E,EAAS/7B,SAAS22C,SAAW61B,EAAS/oE,KAAKgG,KAGvC+iE,EAASC,KAAM,CAChB,IAAIkT,EAAM,IAAIC,MACdD,EAAI5S,OAAS,WACVxvE,GAAGzD,EAAIc,OAAO6D,SAASkhF,EAAI/kF,OAC3B2C,GAAGzD,EAAIa,QAAQ8D,SAASkhF,EAAIhlF,OAC/B,EACAglF,EAAIS,IAAMugB,IAAIC,gBAAgBp0B,EAASC,KAC1C,CAGA7yE,KAAK69G,mBAAmB39G,EAAKiiC,EAhBU,CAgBD,EAKlCo7E,EAASh2F,OAAO,CACpB,CACGpmB,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,UACTmB,IAAK,eACLF,MAAOhB,KAAK+B,GAAGC,WAAWC,SAAS6a,kBAEtC,CACGpc,KAAM,WACNiC,MAAO5C,EAAE,gBACToH,KAAM,OACN07E,SAAS,EACTE,UAAW,QACXC,UAAU,EACV5gF,GAAI,CACD6gF,gBAAkB70E,GACR5M,EAAOi8G,aAAarvG,GAG9Bm1E,aAAc,CAAC1Q,EAAMr7D,KAClBhW,EAAOo8G,aAAa/qC,EAAK,EAG5B2Q,kBAAmB,CAAC3Q,EAAMr7D,KAAP,MAK/B,CACG9W,KAAM,UACNyG,KAAM,QACN/F,MAAOrB,EAAE,UACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,kBAE3C,CACGpc,KAAM,UACNyG,KAAM,SACN/F,MAAOrB,EAAE,WACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,mBAGjD,CAEA4N,8BAA8B9qB,EAAKM,EAAKQ,GACrCZ,MAAMg+G,uBAAuBl+G,EAAKM,EAAKQ,GAEvCiD,GAAGzD,EAAIc,OAAO6D,SAASnE,EAAK0F,SAASpF,OACrC2C,GAAGzD,EAAIa,QAAQ8D,SAASnE,EAAK0F,SAASrF,OACzC,CAEA2pB,4BAA4BxqB,EAAKQ,GAC9BZ,MAAMi+G,qBAAqB79G,EAAKQ,GAEhCA,EAAK0F,SAASpF,MAAQ2C,GAAGzD,EAAIc,OAAOiL,WACpCvL,EAAK0F,SAASrF,OAAS4C,GAAGzD,EAAIa,QAAQkL,UACzC,CAQA9L,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIk9G,EAAqBr9G,MAGzC,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EAEnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,+DC/KH,MAAM69G,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEhC7d,EACH,WAEY,MAAM8d,UAAqBF,EAavCz5G,gBAAgB3E,EAAKq2E,GAClB,IAEIkoC,EAASn+G,KAAKG,UAAUP,EAFf,+BAIb,MAAO,CACJa,GAAI09G,EAAO19G,GACX66E,MAAO6iC,EAAO7iC,MACd9wE,OAAQ2zG,EAAO3zG,OAEflH,KAAM,KAEH,IAAIkvB,EAAKxyB,KAAK2rB,eACV6G,GAAIA,EAAGiB,gBAAgB0qF,EAAO19G,GAAGG,IAErCu9G,EAAO76G,MAAM,EAGtB,CASAnD,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI89G,EAAsBj+G,MAG1C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,CAEI+9F,qBACD,OAAQl+F,KAAKmgG,iBACVngG,KAAKmgG,kBAAoB,IAAIC,CACnC,oBC/DH,MAAMxD,EAAkB,WAClBjhB,EAAa,EAAQ,OACrB0rB,EAAmB,EAAQ,OAEjC,IAAItnG,EAAI,KAGRN,EAAOC,QAAU,cAAiCk9F,EAC/Cj9F,YAAYy+G,EAAWv+G,EAAQsiE,GAE5BriE,MADAD,EAASA,GAAU,GAAGu+G,EAAUx9G,mBAClB,CACXsJ,KAAM,KAGJnK,IACFA,EAAI,IAAI6V,IACE5V,KAAK+B,GAAGsP,aAAajQ,SAASwU,IAI3C5V,KAAK+B,GAAKq8G,EAAUr8G,GAEpB/B,KAAKq+G,gBAAkB,KAIvBr+G,KAAKmiE,WAAaA,EAKlBniE,KAAKk6B,SAAWl6B,KAAK+B,GAAGu2B,eAAe,CAAC,EAK3C,CAOI7tB,oBACD,OAAOzK,KAAK+B,GAAGgW,WAAW/X,KAAKq+G,gBAClC,CAEA59G,KACG,IAAIP,EAAMF,KAAKE,IAGf,MAAO,CACJU,GAAIV,EAAIC,UACRa,MAAO,IACP6zE,QAAQ,EACRhzE,KAAM,CACH,CACGnB,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,gBAEZ,CACGW,KAAM,OACN6K,KAAM,YACNlK,MAAO,QACPE,MAAO,KACJvB,KAAK2E,MAAM,KAKvB,CACGjE,KAAM,aACNe,KAAM,CACHI,KAAM,CACH,CACGjB,GAAIV,EAAIgK,KACRxJ,KAAM,OACNiB,YAAY,EACZE,KAAM,QAO3B,CAEAsD,WAAWpD,GACR/B,KAAK+B,GAAKA,CACb,CAOI0I,oBACD,OAAOzK,KAAK+B,GAAGgW,WAAW/X,KAAKq+G,gBAClC,CAEAr5G,WAAWC,GACRjF,KAAKq+G,gBAAkBp5G,EAAOrE,EACjC,CAEA+D,OACGhB,GAAG3D,KAAKE,IAAIC,YAAYwE,OAExB3E,KAAKwP,KAAK,QACb,CAEA5K,KAAKiF,GACFlG,GAAG3D,KAAKE,IAAIC,YAAYyE,OAExB5E,KAAKs+G,YAAYz0G,EACpB,CAEAgzE,YACG,OAAOl5E,GAAG3D,KAAKE,IAAIC,YAAY08E,cAAe,CACjD,CAEAyhC,YAAYz0G,GACT,IAAI3J,EAAMF,KAAKE,IACf,IAAI4oG,EAAYnlG,GAAGzD,EAAIgK,MACnBO,EAAgBzK,KAAKyK,cAEzB,IAAKA,IAAkBq+F,EAAW,OAElCj/F,EAAOA,GAAQ,CAAC,EAEhB,IAAI00G,EAAY,CACb39G,GAAI,GAAGZ,KAAKE,IAAIC,qBAChBkE,IAAKs3E,EAAW5xC,SAAS1lC,IACzB+B,SAAU,CACP8wD,QAAS,EACTpC,cAAe,MACf7B,UAAW,EACX+K,YAAa,EACbC,YAAa,EACbn8D,WAAY,IACZf,OAAQ,IAKVmJ,EAAOlK,KAAK+B,GAAGk4B,iBAAiBskF,GAEpCr0G,EAAKlF,WAAWyF,GAGhBA,EAAc1D,SAAS9C,SAAQ,CAAC+C,EAAG+E,OAE3B/L,KAAKmiE,YAAcniE,KAAKmiE,WAAW90D,QAAQrG,EAAEpG,KAAO,IACtDsJ,EAAKq0D,eAAev3D,EAAG+E,EAC1B,IAIH7B,EAAKid,OAAO7iB,KACT,IAAI+iG,EACD,CACGjhG,SAAU,CACPy2D,aAAa,EACbE,eAAe,EACfE,cAAc,GAEjBt8D,SAAU,CACP22D,EAAG7sD,EAAc1D,SAASZ,SAGhCnG,KAAKk6B,SACLhwB,IAKNA,EAAKid,OAAOljB,SACT,CAACmP,EAAGrH,IAAWqH,EAAExS,GAAK,GAAGsJ,EAAKtJ,MAAMwS,EAAE/O,OAAO0H,MAGhD,IAAIyyG,EAAUt0G,EAAK/J,UAAUH,KAAK+B,GAAGi4B,MAGrCv2B,MAAMhD,GAAG+9G,EAAQ/9G,GAAGoB,KAAK0lB,OAAO,CAAC,GAAIuhF,GACrCrlG,MAAMC,OAAOolG,EAAWrlG,MAAMG,aAE9B46G,EAAQl7G,KACL,CACGokG,iBAAkB,KAEf,IAAIW,EAAWn+F,EAAK+9F,cAAca,EAAWr+F,GAG7C,QAAKP,EAAK2+F,aAAaC,EAAWr+F,EAAe49F,KAIjDS,GAAWzjG,aAAa,CAAEzD,KAAM,SAE5BymG,EAASznG,GACV6J,EAAczC,QACV+mE,OAAOs5B,EAASznG,GAAIynG,GACpB7zF,MAAMiqG,IACJz+G,KAAKwP,KAAK,SAAUivG,GAGpB3V,GAAWnhG,aAAa,CAAE/F,KAAM,QAAS,IAE3C6S,OAAOtM,IAELnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,8EACH+4F,aAEHS,GAAWnhG,aAAa,CAAE/F,KAAM,QAAS,IAK/C6I,EAAczC,QACV0hE,OAAO2+B,GACP7zF,MAAMkqG,IAEJ1+G,KAAKwP,KAAK,MAAOkvG,GAEjB5V,GAAWnhG,aAAa,CAAE/F,KAAM,QAAS,IAE3C6S,OAAOtM,IAELnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QACG,+EACH+4F,aAGHS,GAAWnhG,aAAa,CAAE/F,KAAM,QAAS,KAI3C,EAAK,GAGlB,GAIHknG,EAAU5jG,QACV4jG,EAAUvxF,MAAM1N,GAEhB20G,EAAQh0G,OAAOX,EAClB,oBCrQH,MAAM80G,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErCn/G,EAAOC,QAAU,cAA0Bi/G,EACxCh/G,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,EACtC,CAQAtiC,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIy+G,EAAqB5+G,MAGzC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBCjCH,MAAM0+G,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtCr/G,EAAOC,QAAU,cAA2Bm/G,EAOzC1+G,UAAU88F,GACP,IAAI98F,EAAY,IAAI2+G,EAAsB9+G,MAG1C,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAM4+G,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAEpC,IAAIj/G,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,MAAMu/G,UAAmBF,EAiBvCx6G,gBAAgB3E,EAAKq2E,GAClB,IAEIipC,EAAWl/G,KAAKG,UAAUP,EAFjB,6BAIb,MAAO,CACJa,GAAIy+G,EAASz+G,GACb66E,MAAO4jC,EAAS5jC,MAChB9wE,OAAQ00G,EAAS10G,OAEjBlH,KAAM,KAEH,IAAIkvB,EAAKxyB,KAAK2rB,eACV6G,GAAIA,EAAGiB,gBAAgByrF,EAASz+G,GAAGG,IAEvCs+G,EAAS57G,MAAM,EAGxB,CAMAonB,qCAAqC9qB,EAAKM,EAAKsB,EAAQ87G,GACpD,IAAIC,EAAWz9G,MAAM09G,8BAClB59G,EACAM,EACAsB,EACA87G,GAYH,OAPA97G,EAAO29G,aAAe,CAACC,EAAMC,KAC1B,IAAIl9E,EAAW3gC,EAAOk8G,oBAGtB19G,KAAKs/G,2BAA2Bp/G,EAAKiiC,EAAUi9E,EAAK,EAGhD7B,EAASh2F,OAAO,CACpB,CACGpgB,KAAM,iBACNzG,KAAM,aACNU,MAAOrB,EAAE,eACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCE,GAAI,CACDC,SAAUb,EAAO29G,eAGvB,CACGh4G,KAAM,QACNzG,KAAM,aACNU,MAAOrB,EAAE,SACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,iBAE3C,CACGxB,KAAM,UACNyG,KAAM,SACN/F,MAAOrB,EAAE,WACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,kBAGjD,CAUAwoB,kCAAkCxqB,EAAKQ,EAAM6+G,GAC1C,IAAI5zF,EAAiBjrB,EAAKqB,GAAG+pB,mBAAmByzF,GAC5Ct6G,EAAS0mB,EAAiBA,EAAeD,WAAa,KAGtD2vD,EAAe,GACL,MAAVp2E,IACDo2E,EAAep2E,EAAO8B,SAASoH,KAAKnH,IAC1B,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,WAKlBuC,GAAGzD,EAAI0F,OAAOnB,OAAO,UAAW42E,GAChC13E,GAAGzD,EAAI0F,OAAOlB,SACjB,CAEAgmB,8BAA8B9qB,EAAKM,EAAKQ,GACrCZ,MAAMg+G,uBAAuBl+G,EAAKM,EAAKQ,GAEvC,IAAI+qE,EAAmB/qE,EAAK0F,SAAS4rD,WAChCtxD,EAAK0F,SAAS4rD,WACd,KACDwtD,EAAiB77G,GAAGzD,EAAIyrB,gBAGxBivD,EAAYl6E,EAAK++G,0BACrBD,EAAe/6G,OAAO,UAAWm2E,GACjC4kC,EAAe/6G,OAAO,QAASgnE,GAC/B+zC,EAAe96G,UAEf1E,KAAKs/G,2BAA2Bp/G,EAAKQ,EAAM+qE,GAE3C9nE,GAAGzD,EAAI0F,OAAOf,SAASnE,EAAK0F,SAASR,OACrCjC,GAAGzD,EAAIa,QAAQ8D,SAASnE,EAAK0F,SAASrF,OACzC,CAEA2pB,4BAA4BxqB,EAAKQ,GAC9BZ,MAAMi+G,qBAAqB79G,EAAKQ,GAEhCA,EAAK0F,SAAS4rD,WAAaruD,GAAGzD,EAAIyrB,gBAAgB1f,WAClDvL,EAAK0F,SAASR,MAAQjC,GAAGzD,EAAI0F,OAAOqG,WACpCvL,EAAK0F,SAASrF,OAAS4C,GAAGzD,EAAIa,QAAQkL,WACtCvL,EAAK0F,SAASrF,OACXukB,SAAS5kB,EAAK0F,SAASrF,SAAWk+G,EAAWx8E,gBAAgB1hC,MACnE,CAQAZ,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI6+G,EAAoBh/G,MAGxC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC1KH,MAAMu/G,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAEpClgH,EAAOC,QAAU,cAAyBggH,EAOvCv/G,UAAU88F,GACP,IAAI98F,EAAY,IAAIw/G,EAAoB3/G,MAGxC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EACrBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC5BH,MAAMy/G,EAAiB,EAAQ,OAEzB3oD,EAA8B2oD,EAAen9E,gBAEnDhjC,EAAOC,QAAU,cAAyBkgH,EAWvCz/G,UAAU88F,GAAQ,GACf,IAAI98F,EAAYL,MAAMK,YAiBtB,GAfAA,EAAUg+F,IAAMh+F,EAAUM,KAG1BN,EAAUM,GAAK,KACL,CACJC,KAAM,aACNiB,YAAY,EACZT,IACGlB,KAAKoG,SAASi/D,gBACdpO,EAA4BoO,eAC/B5jE,KAAMtB,EAAUg+F,MAKlBlB,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd6C,KAAM,CAACnB,EAASm2D,KACbA,EAAcA,GAAet4D,KAAKq4D,gBAC3B8kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,EAAan2D,IAElDqI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBChDH,MAAM0/G,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,MAErC,IAAI//G,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA0BmgH,EACxClgH,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,EACtC,CAcAl+B,gBAAgB3E,EAAKq2E,GAClB,IACI/1E,EAAM,CACPC,UAAWP,EAAIQ,OAAO,yCAGrB2/G,EAAgB//G,KAAKG,UAAUP,GAC/BO,EAAYP,EAAImC,GAAG2D,UAAUq6G,GAiBjC,OAfA5/G,EAAUM,GAAGG,GAAKV,EAAIC,UACtBA,EAAUM,GAAGu/G,UAAW,EACxB7/G,EAAUM,GAAG2B,GAAK,CACf69G,cAAgBh6C,IACbjmE,KAAKoG,SAAS6/D,UAAYA,EAC1BjmE,KAAK4H,MAAM,GAIjBzH,EAAUmD,KAAQnB,IACf49G,EAAcz8G,KAAK,CAChBy+F,YAAa7hG,EAAIC,WAClB,EAGEA,CACV,CAUAuqB,qCAAqC9qB,EAAKM,EAAKsB,EAAQ87G,GAQpD,OAPex9G,MAAM09G,8BAClB59G,EACAM,EACAsB,EACA87G,GAGa/1F,OAAO,CACpB,CACGpgB,KAAM,iBACNzG,KAAM,aACNU,MAAOrB,EAAE,eACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,iBAE3C,CACGxB,KAAM,UACNyG,KAAM,SACN/F,MAAOrB,EAAE,WACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,iBAE3C,CACGxB,KAAM,WACNyG,KAAM,eACNg2E,WAAYp9E,EAAE,sBACd+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGvc,KAAM,WACNyG,KAAM,cACNg2E,WAAYp9E,EAAE,wBACd+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGvc,KAAM,WACNyG,KAAM,gBACNg2E,WAAYp9E,EAAE,0BACd+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGvc,KAAM,WACNyG,KAAM,MACNg2E,WAAYp9E,EACT,4DAEH+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACGvc,KAAM,WACNyG,KAAM,MACNg2E,WAAYp9E,EACT,8DAEH+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASgb,oBAE3C,CACG9V,KAAM,gBACNzG,KAAM,UACNw9C,IAAK,EACL98C,MAAOrB,EAAE,kBACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,mBAGjD,CAEA4N,8BAA8B9qB,EAAKM,EAAKQ,GACrCZ,MAAMg+G,uBAAuBl+G,EAAKM,EAAKQ,GAEvC,IAAI+qE,EAAmB/qE,EAAK0F,SAAS4rD,WAChCtxD,EAAK0F,SAAS4rD,WACd,KACDwtD,EAAiB77G,GAAGzD,EAAIyrB,gBAGxBivD,EAAYl6E,EAAK++G,0BACrBD,EAAe/6G,OAAO,UAAWm2E,GACjC4kC,EAAe/6G,OAAO,QAASgnE,GAC/B+zC,EAAe96G,UAEff,GAAGzD,EAAI4lE,cAAcjhE,SAASnE,EAAK0F,SAAS0/D,cAC5CniE,GAAGzD,EAAI6lE,aAAalhE,SAASnE,EAAK0F,SAAS2/D,aAC3CpiE,GAAGzD,EAAI8lE,eAAenhE,SAASnE,EAAK0F,SAAS4/D,eAC7CriE,GAAGzD,EAAIg+C,KAAKr5C,SAASnE,EAAK0F,SAAS83C,KACnCv6C,GAAGzD,EAAI+9C,KAAKp5C,SAASnE,EAAK0F,SAAS63C,KACnCt6C,GAAGzD,EAAIa,QAAQ8D,SAASnE,EAAK0F,SAASrF,QACtC4C,GAAGzD,EAAIi3C,eAAetyC,SACY,MAA/BnE,EAAK0F,SAAS+wC,cAAwB,EAAIz2C,EAAK0F,SAAS+wC,cAE9D,CAEAzsB,4BAA4BxqB,EAAKQ,GAC9BZ,MAAMi+G,qBAAqB79G,EAAKQ,GAEhCA,EAAK0F,SAAS4rD,WAAaruD,GAAGzD,EAAIyrB,gBAAgB1f,WAElDvL,EAAK0F,SAAS0/D,aAAeniE,GAAGzD,EAAI4lE,cAAc75D,WAClDvL,EAAK0F,SAAS2/D,YAAcpiE,GAAGzD,EAAI6lE,aAAa95D,WAChDvL,EAAK0F,SAAS4/D,cAAgBriE,GAAGzD,EAAI8lE,eAAe/5D,WACpDvL,EAAK0F,SAAS83C,IAAMv6C,GAAGzD,EAAIg+C,KAAKjyC,WAChCvL,EAAK0F,SAAS63C,IAAMt6C,GAAGzD,EAAI+9C,KAAKhyC,WAChCvL,EAAK0F,SAASrF,OAAS4C,GAAGzD,EAAIa,QAAQkL,UACzC,CAQA9L,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAI2/G,EAAqB9/G,MAGzC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCzLH,MAAM+/G,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9C1gH,EAAOC,QAAU,cAAmCwgH,EACjDvgH,YAAYgG,EAAQZ,EAAagQ,EAAQ0tB,GACtC3iC,MAAM6F,EAAQZ,EAAagQ,EAAQ0tB,EACtC,CAcAl+B,gBAAgB3E,EAAKq2E,GAClB,IACI/1E,EAAM,CACPC,UAAWP,EAAIQ,OAAO,kDAGrBD,EAAYH,KAAKG,UAAUP,GAM/B,OAJAO,EAAUM,GAAGG,GAAKV,EAAIC,UAEtBA,EAAUmD,KAAQnB,IAAD,EAEVhC,CACV,CAMAuqB,qCAAqC9qB,EAAKM,EAAKsB,EAAQ87G,GAQpD,OAPex9G,MAAM09G,8BAClB59G,EACAM,EACAsB,EACA87G,GAGa/1F,OAAO,GAC1B,CAEAmD,8BAA8B9qB,EAAKM,EAAKQ,GACrCZ,MAAMg+G,uBAAuBl+G,EAAKM,EAAKQ,EAC1C,CAEAgqB,4BAA4BxqB,EAAKQ,GAC9BZ,MAAMi+G,qBAAqB79G,EAAKQ,GAEhCA,EAAK0F,SAAS4rD,WAAaruD,GAAGzD,EAAIyrB,gBAAgB1f,UACrD,CAQA9L,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIggH,EAA8BngH,MAGlD,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,GAAIu2D,GAErC9tD,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBCrFH,MAAMigH,EAAgB,EAAQ,OAExBC,EAAqB,EAAQ,OAEnC5gH,EAAOC,QAAU,cAAwB0gH,EAOtCjgH,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIkgH,EAAmBrgH,MAGvC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,mBC9BH,MAAMmgH,EAAiB,EAAQ,OAEzBC,EAAsB,EAAQ,OAEpC9gH,EAAOC,QAAU,cAAyB4gH,EAOvCngH,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIogH,EAAoBvgH,MAGxC,GAAIi9F,EAAO,CACR,MAAME,EAAeh9F,EAErBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,CAACnB,EAASm2D,IACN6kC,EAAa75F,KAAKtD,KAAK+B,IAEjCyI,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAGzC,CAEA,OAAOzV,CACV,oBC9BH,MAAMqgH,EAAmB,EAAQ,OAE3BvpD,EAA8BupD,EAAiB/9E,gBAErD,IAAI1iC,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA2B8gH,EASzC91F,qCAAqC9qB,EAAKM,EAAKsB,EAAQ87G,GAUpD,OATex9G,MAAM09G,8BAClB59G,EACAM,EACAsB,EACA87G,GAKa/1F,OAAO,CACpB,CACGpgB,KAAM,aACNzG,KAAM,UACNw9C,IAAK,EACL98C,MAAOrB,EAAE,eAET80E,QAAQ,GAEX,CACG1tE,KAAM,UACNzG,KAAM,UACNw9C,IAAK,EACL98C,MAAOrB,EAAE,YAET80E,QAAQ,IAGjB,CAEAnqD,8BAA8B9qB,EAAKM,EAAKQ,GACrCZ,MAAMg+G,uBAAuBl+G,EAAKM,EAAKQ,GAEvCiD,GAAGzD,EAAIonE,YAAYziE,SAChBnE,EAAKC,SAASo3D,IAAMd,EAA4BqQ,YAEnD3jE,GAAGzD,EAAIqnE,SAAS1iE,SACbnE,EAAKC,SAASq3D,IAAMf,EAA4BsQ,QAEtD,CAEA78C,4BAA4BxqB,EAAKQ,GAC9BZ,MAAMi+G,qBAAqB79G,EAAKQ,GAEhCA,EAAKC,SAASo3D,GAAKp0D,GAAGzD,EAAIonE,YAAYr7D,WACtCvL,EAAKC,SAASq3D,GAAKr0D,GAAGzD,EAAIqnE,SAASt7D,UACtC,CAQA9L,UAAUP,GACP,IAAIgiE,EAAO9hE,MAAMK,UAAUP,GAU3B,OARAgiE,EAAKp3D,OAAUkvD,IACZ,IAAIlnC,EAAKxyB,KAAK2rB,eACV6G,GAAMA,EAAGtG,YAAcsG,EAAGjI,eAAeC,YAE1CgI,EAAGP,UACN,EAGI2vC,CACV,oBCjFH,MAAMg7B,EAAkB,WAExBn9F,EAAOC,QAAU,cAAyCk9F,EACvDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,iBAAiB09F,EAAS38F,KACpCuT,OAAOsnC,OACJ,CACGujC,OAAQ,GACRg0B,aAAc,GACdh1B,cAAe,IAElB99E,IAINF,KAAKygH,aAAe,IACvB,CAEAhgH,KACG,MAAMP,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAChBshF,EAAkB1nF,KAAKU,KAAKf,YAAY8iC,gBACxC07D,EAAMr+F,MAAMW,GAAG,CAClB,CACGC,KAAM,SACNkB,KAAM,QACND,YAAY,EACZR,KAAM,CACH,CACGP,GAAIV,EAAI8yG,aACRtyG,KAAM,SACNQ,IAAK,oBACLU,KAAM,OACN2J,KAAM,eACN5J,YAAY,EACZX,MAAO,GACPI,MAAO,GACPG,MAAO,KACJvB,KAAK6/F,iBAAiB,GAG5B,CACGj/F,GAAIV,EAAI8+E,OACRt+E,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,iBACN5J,YAAY,EACZX,MAAOoF,EAASpF,OAAS0mF,EAAgB1mF,MACzCI,MAAOgF,EAAS6rD,aAAey1B,EAAgBz1B,YAC/C1wD,MAAO,KACJvB,KAAK0gH,iBAAiB,GAG5B,CAAEh+G,WAAW,OAOtB,cAFOy7F,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,GAGR,SAFMjC,MAAMwD,KAAKvB,IAEZ/B,KAAKygH,aAAc,CACrB,MAAMA,EAAe1+G,EAAG6xB,iBAAiB5zB,KAAKE,IAAI89E,eAE5CrxD,EAAK3sB,KAAK2rB,eAEhB,GAAIgB,EAAI,CACL,MAAM7U,EAAM6U,EAAGjB,WAEf+0F,EAAa5sF,WAAW/b,GAAK/Q,YAAc,GAC9C,CAEA05G,EAAan9G,OACbm9G,EAAar+G,GAAG,UAAW4T,IACxBhW,KAAK2gH,eAAe3qG,EAAI,IAG3BhW,KAAKygH,aAAeA,CACvB,CACH,CAEAC,kBACG,IAAIpwG,EAAM,0BAA0BtQ,KAAKU,KAAKE,KAE9C,MAAMyuB,EAAQrvB,KAAKygH,aAAax0G,WAEhC,IAAKojB,GAAOlO,OAAS,IAAIhb,OAAQ,CAC9B,IAAIy6G,EAAU/sG,KAAKC,UAAUub,GAE7BuxF,EAAU3qG,mBAAmB2qG,GAC7BtwG,EAAM,GAAGA,WAAaswG,GACzB,CAEA5nG,OAAO6nG,KAAKvwG,EACf,CAEAuvF,kBACG,MAAMihB,EAAgBn9G,GAAG3D,KAAKE,IAAI8yG,cAElChzG,KAAKygH,aAAa3oC,MAAMgpC,EAAgBA,EAAcpzG,MAAQ,KACjE,CAEAizG,iBACG,MAAMG,EAAgBn9G,GAAG3D,KAAKE,IAAI8yG,cAElC,IAAK8N,EAAe,OAEpB,MAAMzxF,EAAQrvB,KAAKygH,aAAax0G,WAEhC60G,EAAcr8G,OAAO,SAAU4qB,EAAMlO,OAAS,IAAIhb,QAAU,MAC5D26G,EAAcp8G,SACjB,oBCvHH,MAAMk4F,EAAkB,WAClBmkB,EAAc,EAAQ,OAE5BthH,EAAOC,QAAU,cAAyCk9F,EACvDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,iBAAiB09F,EAAS38F,KACpCuT,OAAOsnC,OACJ,CACGujC,OAAQ,GACRtK,MAAO,GAEPxqE,KAAM,GACN04E,SAAU,GACVo+B,eAAgB,GAChBhuC,YAAa,GACbiuC,kBAAmB,GACnBC,WAAY,GAEZnrG,OAAQ,GACRq9F,UAAW,GAEX+N,cAAe,GACfC,YAAa,GAEbC,aAAc,GACdlgG,MAAO,IAEVjhB,IAINF,KAAKshH,YAAc,IAAIP,GAAY,IAAIQ,IAASvhH,KAAKoB,SAASmgH,KAI9DvhH,KAAKyzG,iBAAkB,EAEvBzzG,KAAKwhH,UAAY,KACjBxhH,KAAKyhH,aAAe,IACvB,CAEAhhH,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBshF,EAAkB1nF,KAAKU,KAAKf,YAAY8iC,gBACxC07D,EAAMr+F,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CACGT,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,eACNnK,MAAOpB,KAAKoB,MACTgF,EAAS6rD,aAAey1B,EAAgBz1B,aAE3CjxD,MAAOoF,EAASpF,OAAS0mF,EAAgB1mF,MACzCO,MAAO,KACJvB,KAAK8/F,WAAW,GAGtB,CACGp9F,WAAW,OAQvB,cAFOy7F,EAAIv8F,KAEJu8F,CACV,CAEA/C,WACG,MAAMl7F,EAAMF,KAAKE,IAEjB,MAAO,CACJU,GAAIV,EAAIgK,KACRxJ,KAAM,OACNkB,KAAM,QACND,YAAY,EACZ2kE,SAAU,IACVnP,QAAS,EACTjuD,SAAU,CACP,CACGrH,KAAM,CACH,CACGjB,GAAIV,EAAI0iF,SACRliF,KAAM,WACNyG,KAAM,UACNjG,IAAK,gBACLyB,MAAO3C,KAAKoB,MAAM,qBAClBsgH,OAAQ,WACR1+B,UAAU,EACV2+B,UAAU,EACVh8E,KAAMzlC,EAAI8gH,eACV5+G,GAAI,CACD6gF,gBAAkBrQ,IACf5yE,KAAKyhH,aAAe7uC,EAEb5yE,KAAK4hH,iBAIrB,CACGhhH,GAAIV,EAAI8gH,eACR75G,KAAM,eACNzG,KAAM,OACNkB,KAAM,WACNqvG,YAAY,EACZtvG,YAAY,EACZkgH,QAAS,CACNC,oBAAqB,CAACz3G,EAAGzJ,KACtBZ,KAAK+hH,cAAcnhH,EAAG,IAI/B,CACG4B,QAAS,GACTX,KAAM,CACH,CACGjB,GAAIV,EAAI8yE,YACRtyE,KAAM,aACNyG,KAAM,cACN/F,MAAOpB,KAAKoB,MAAM,gBAClBU,WAAY,IACZK,QAASnC,KAAKshH,YAAY5uC,mBAC1B/vE,MAAO,IACPP,GAAI,CACDC,SAAU,KACPrC,KAAK4hH,aAAa,IAI3B,CACGhhH,GAAIV,EAAI+gH,kBACRvgH,KAAM,WACNyG,KAAM,oBACN/F,MAAOpB,KAAKoB,MAAM,wBAClBU,WAAY,IACZqkC,UAAU,EACVxjC,OAAO,EACPP,GAAI,CACDC,SAAU,KACPrC,KAAKgiH,oBAAoB,MAMxC,CACGpgH,KAAM,QACNC,KAAM,CACH,CACGnB,KAAM,aACNuhH,UAAW,IACXxgH,KAAM,CACHe,QAAS,GACT5B,GAAIV,EAAIghH,WACRr/G,KAAM,UASjC,CAEAqgH,gBACG,MAAMhiH,EAAMF,KAAKE,IAEjB,MAAO,CACJi3D,QAAS,EACTt1D,KAAM,CACH,CACGnB,KAAM,UACNQ,IAAK,UACLC,KAAM,CACH,CAAEH,MAAO,GACT,CACGJ,GAAIV,EAAI6V,OACRrV,KAAM,SACNiC,MAAO,GACPvB,MAAO,GACPs2E,YAAa13E,KAAKoB,MAAM,qBACxB+gH,gBAAiB,IACjB//G,GAAI,CACDy3E,gBAAiB,KACd75E,KAAK+V,OAAOpS,GAAGzD,EAAI6V,QAAQ9J,WAAW,IAI/C,CAAEjL,MAAO,KAGf,CACGJ,GAAIV,EAAIkzG,UACR1yG,KAAM,YACN6zG,cAAc,EACd3uD,UAAU,EACV+uD,WAAY,WACZzzG,IAAK,kBACLS,YAAY,EACZohG,QAAUjrF,GACSA,EAAIsqG,UACftqG,EAAIsqG,UACJ,uBAGR97C,SAAU,IACVpP,QAAS,GACT90D,GAAI,CACDozG,kBAAmB,CAAC50G,EAAIkX,EAAKuqG,KAE1B,IAAI/kG,EAAS,GAEbnJ,OAAOC,KAAKiuG,GAASp+G,SAASI,IAC3BrE,KAAK0N,MAAM8sG,mBAAmBn2G,GAAKJ,SAASkE,IACzCmV,GAAUnV,EAAIkiE,eAAiB,OAAO,GACvC,IAGL,MAAMi4C,EAAM3+G,GAAGzD,EAAIkzG,WAEnBkP,EAAI9mC,aACJ8mC,EAAI3xF,WAAW/vB,EAAI,CAChB2hH,QAAS,UACTH,UAAW9kG,IAEdglG,EAAI7mC,eAEJz7E,KAAKyzG,iBAAkB,CAAI,EAE9BgC,oBAAqB,CAAC70G,EAAIkX,EAAKuqG,KAE5B,MAAMC,EAAM3+G,GAAGzD,EAAIkzG,WAEnBkP,EAAI9mC,aACJ8mC,EAAI3xF,WAAW/vB,EAAI,CAChB2hH,QAAS,QACTH,UAAW,KAEdE,EAAI7mC,eACJz7E,KAAKyzG,iBAAkB,CAAK,EAE/ByB,QAAS,KACN,MAAMl1B,EAAWr8E,GAAGzD,EAAIkzG,WAAWtmF,KAAK,CACrC01F,WAAW,IAERC,EAAgB9+G,GAAGzD,EAAImhH,cAE7BoB,EAAc59G,SAAS7E,KAAK0iH,YAAY1iC,IAEpChgF,KAAK2iH,eAAe3iC,GAAWyiC,EAAcr9G,UAC5Cq9G,EAAc/6G,QAAQ,IAIpC,CACG9G,GAAIV,EAAIkhH,YACRrgH,OAAQ,GAEX,CACGL,KAAM,SACNyG,KAAM,SACNvG,GAAIV,EAAImhH,aACR1+G,MAAO3C,KAAKoB,MAAM,UAClBF,IAAK,gBACLilC,UAAU,EACV5kC,MAAO,KACJvB,KAAK8pE,QAAQ,IAK5B,CAEA84C,UACG,MAAM1iH,EAAMF,KAAKE,IAEjB,MAAO,CACJU,GAAIV,EAAIw0E,MACRh0E,KAAM,SACNm0E,QAAQ,EACRl0E,SAAU,SACVG,OAAO,EACPD,QAAQ,EACRI,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CAAC,EACD,CACGT,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,gBAClBE,WAAW,GAEd,CAAC,EACD,CACGZ,KAAM,SACNM,MAAO,GACPE,IAAK,oBACLU,KAAM,OACN2J,KAAM,uBACNhK,MAAO,KACJvB,KAAK2E,MAAM,KAKvBlD,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGD,KAAM,OACNT,KAAM,CACHnB,KAAKo7F,WACL,CAAEp6F,MAAO,IACThB,KAAKkiH,gBACL,CAAElhH,MAAO,KAGf,CACGJ,GAAIV,EAAIihH,cACRzgH,KAAM,QACNW,MAAO,QACPwzE,QAAQ,GAEX,CACGA,QAAQ,EACRwB,OAAQ,EACRl1E,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNyG,KAAM,SACNxE,MAAO3C,KAAKoB,MAAM,UAClBF,IAAK,mBACLI,WAAW,EACXC,MAAO,KACJvB,KAAK2E,MAAM,OAsBnC,CAEAQ,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IAIXysB,EAAK3sB,KAAK2rB,eAEZgB,GAAI3sB,KAAKgF,WAAW2nB,EAAGjB,YAE3B,MAAM8zE,EAAUz9F,EAAG0Y,MAEnB+kF,EAAQ/+F,GAAGT,KAAK4iH,WAEhB,MAAMrmC,EAAQ54E,GAAGzD,EAAIgK,MAEjBqyE,GAAOijB,EAAQ97F,OAAO64E,EAAOijB,EAAQ57F,aAEzC,MAAMi/G,EAAel/G,GAAGzD,EAAIkhH,aAExByB,GAAcrjB,EAAQ97F,OAAOm/G,EAAcrjB,EAAQ57F,YAC1D,CAEAk8F,YACG,MAAM5/F,EAAMF,KAAKE,IAEjByD,GAAGzD,EAAIw0E,QAAQ9vE,OAEf5E,KAAK8iH,YAGLn/G,GAAGzD,EAAI0iF,UAAUiB,YACpB,CAEAl/E,OACGhB,GAAG3D,KAAKE,IAAIw0E,QAAQ/vE,MACvB,CAEAm+G,YACG,MAAM5iH,EAAMF,KAAKE,IAEjBF,KAAKwhH,UAAY,KACjBxhH,KAAKyhH,aAAe,KAEpB,MAAMllC,EAAQ54E,GAAGzD,EAAIgK,MAErBqyE,EAAM+sB,kBACN/sB,EAAMr3E,QAENvB,GAAGzD,EAAI8yE,aAAanuE,SAAS,KAE7B7E,KAAK+B,GAAG0Y,MAAMha,GAAG,GAAIkD,GAAGzD,EAAIghH,aAE5Bv9G,GAAGzD,EAAI+gH,mBAAmB77G,UAC1BzB,GAAGzD,EAAImhH,cAAcj8G,UAErBzB,GAAGzD,EAAI6V,QAAQlR,SAAS,IACxBlB,GAAGzD,EAAI8gH,gBAAgBlmG,WACvBnX,GAAGzD,EAAIkzG,WAAWt4F,WAElB,MAAMioG,EAAiBp/G,GAAGzD,EAAIihH,eAE9B4B,EAAel+G,SAAS,IACxBk+G,EAAep+G,MAClB,CAEAoR,OAAOiP,GACJ,MAAM0tF,EAAa/uG,GAAG3D,KAAKE,IAAIkzG,WAE/B,IAAKV,EAAY,OAEjB1tF,GAAcA,GAAc,IAAI7M,cAEhC,MAAM6qG,EAAchjH,KAAKijH,iBAEzBvQ,EAAW5pG,QAAQoW,IAChB,IAAI0N,GAAS,EAYb,OAVCo2F,GAAe,IAAI/+G,SAAS+C,IACtB4lB,IAEJA,GACI1N,EAAI,GAAGlY,EAAEk8G,gBAAkB,IACxBxuG,WACAyD,cACA9K,QAAQ2X,IAAe,EAAC,IAG3B4H,CAAM,GAEnB,CAEAu2F,eAAe/0G,GACZ,IAAIm0D,EAAW,GAEf,IAAKn0D,EAAM,OAAOm0D,EAElB,OAAQn0D,EAAKm0G,SACV,IAAK,cACFhgD,EAAW,sCACX,MACH,IAAK,UACFA,EAAW,mDACX,MACH,IAAK,QAGL,IAAK,OACFA,EAAW,oCACX,MACH,IAAK,OACFA,EAAW,qCAIjB,OAAOA,CACV,CAEAp9D,oBACG,MAAMs8G,EAAezhH,KAAKyhH,aAE1B,IAAKA,EAAc,OAAO,EAE1B,MAAMH,EAActhH,KAAKshH,YAEzB,IAAKA,EAAY3uC,aAAa8uC,GAO3B,OANAzhH,KAAK+B,GAAG0Y,MAAMtJ,MAAM,CACjBC,MAAOpR,KAAKoB,MAAM,sCAClBiN,KAAMrO,KAAKoB,MAAM,gCACjBmQ,GAAIvR,KAAKoB,MAAM,SAGX,EAGV,MAAMlB,EAAMF,KAAKE,IAGXq8E,EAAQ54E,GAAGzD,EAAIgK,MAErBqyE,GAAOl3E,eAAe,CAAEzD,KAAM,SAG9B,MAAMwhH,EAAqBz/G,GAAGzD,EAAI+gH,mBAC5BwB,EAAgB9+G,GAAGzD,EAAImhH,cAE7B+B,EAAmB17G,SACnB+6G,EAAc/6G,SAEd1H,KAAKwhH,gBAAkBF,EAAYvuC,YAChC0uC,EACA99G,GAAGzD,EAAI8yE,aAAa/mE,YAGvB,MAAMu1G,EAAYxhH,KAAKwhH,UAEvB,IAAIr7G,EAASq7G,EAAUr7G,OAQvB,OANIi9G,EAAmBn3G,aAAY9F,EAASq7G,EAAUr7G,OAAS,GAE/Ds8G,EAAc59G,SAAS7E,KAAK0iH,YAAYv8G,IACxCnG,KAAKgiH,qBACLzlC,GAAO50E,kBAEA,CACV,CAEAo6G,cAAcsB,GAIX,OAHA1/G,GAAG3D,KAAKE,IAAI8gH,gBAAgBnmG,OAAOwoG,GACnCrjH,KAAK8iH,aAEE,CACV,CAEAd,qBACG,MAAMhmC,EAAOh8E,KACPE,EAAMF,KAAKE,IACXs/F,EAAUx/F,KAAK+B,GAAG0Y,MAGlB6oG,EAAc3/G,GAAGzD,EAAIghH,YAE3B1hB,EAAQ/+F,GAAG,GAAI6iH,GAEf,MAAM9B,EAAYxhH,KAAKwhH,UAEvB,IAAKA,EAAW,OAGhB,MAAM+B,EAAY/B,EAAU,GAE5B,IAAK+B,EAAW,OAEhB,MAAMC,EAAgB,GAChBtnF,EAAY,GACZunF,EAAgBzjH,KAAKyK,cAEvBg5G,GACDvnF,EAAU53B,QACJm/G,EAAc18G,QAAQC,IAEtB,GACGhH,KAAKoG,SAASksD,mBAAmBnsD,QACjCnG,KAAKoG,SAASksD,kBAAkBjlD,QAAQrG,EAAEpG,IAAM,EAEhD,OAAO,EAIV,MAAM8iH,EAAW18G,EAAEy3D,gBAEnB,IAAKilD,EAAU,OAAO,EAEtB,MAAMC,EAAaD,EAAS35E,SAE5B,OAAK45E,GAEoB,iBAAlBA,EAAWt/G,GAAsB,KAIjD,MAAMi9G,EAActhH,KAAKshH,YAGrB39G,GAAGzD,EAAI+gH,mBAAmBh1G,WAC3Bu3G,EAAcl/G,QACRi/G,EAAUp1G,KAAI,CAAC8oB,EAASlrB,KACjB,CACJnL,GAAImL,EAAQ,EACZpJ,MAAOs0B,EACP5yB,IAAKi9G,EAAY/tC,iBAAiBiuC,EAAWz1G,QAKtDw3G,EAAUt/G,SAAQ,CAACoG,EAAGgJ,KACnBmwG,EAAcl/G,KAAK,CAChB1D,GAAIyS,EAAI,EACR1Q,MAAO3C,KAAKoB,MAAM,aAAc,CAACiS,EAAI,IACrChP,IAAKi9G,EAAY/tC,iBAAiBiuC,EAAWnuG,IAC9C,IAIRmwG,EAAc32E,QAAQ,CACnBjsC,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,UAIrB,MAAMwiH,EAAY,GACZC,EAAkB,GAExB3nF,EAAUj4B,SAAS+C,IAEhB,MAAM88G,EAAWN,EAAc16G,QAC3BvF,GAAMA,EAAEc,KAAO2C,EAAE3C,KAAOw/G,EAAgBx2G,QAAQ9J,EAAE3C,IAAM,IAC1D,GAEF,IAAImjH,EAAY,OAEZD,IACDC,EAAYD,EAASljH,GAGrBijH,EAAgBv/G,KAAKy/G,IAGxB,IAAIC,EAAc,CACftjH,KAAM,aACNy2D,QAAS,EACTh1D,QAASqhH,EACT94G,QAAS1D,EAAEpG,GACXqjH,OAAQ,cACRthH,MAAOohH,EACP3hH,GAAI,CACDC,SAAU,WACP25E,EAAKkoC,iBAAiBlkH,MACtBg8E,EAAKmoC,gBACR,IAKN,GAAc,SAAVn9G,EAAE3C,IAAgB,CACnB,MAAM+/G,EAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAmB,CACtB,CAAE1hH,MAAO3C,KAAKoB,MAAM,WAAYR,GAAI,KACpC,CAAE+B,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,OAElC0jH,EAAqB,CACxB,CAAE3hH,MAAO3C,KAAKoB,MAAM,WAAYR,GAAI,KACpC,CAAE+B,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,OAElC2jH,EAAoB,CACvB,CAAE5hH,MAAO3C,KAAKoB,MAAM,YAAaR,GAAI,MACrC,CAAE+B,MAAO3C,KAAKoB,MAAM,gBAAiBR,GAAI,SAEtC4jH,EAAmB,CACtB,CACG7hH,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,GAEP,CACG+B,MAAO3C,KAAKoB,MAAM,SAClBR,GAAI,IAIVojH,EAAc,CACX7sD,QAAS,EACTt1D,KAAM,CACHmiH,EACA,CACGtjH,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,aAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKmkH,gBAAgB,GAG3Bh9G,KAAM,YACN88G,OAAQ,mBACR9hH,QAASiiH,EACTzhH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,OAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKmkH,gBAAgB,GAG3Bh9G,KAAM,MACN88G,OAAQ,mBACR9hH,QAASkiH,EACT1hH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,SAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKmkH,gBAAgB,GAG3Bh9G,KAAM,QACN88G,OAAQ,mBACR9hH,QAASmiH,EACT3hH,MAAO,KAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,QAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKmkH,gBAAgB,GAG3Bh9G,KAAM,OACN88G,OAAQ,mBACR9hH,QAASoiH,EACT5hH,MAAO,MAEV,CACGjC,KAAM,aACNU,MAAOpB,KAAKoB,MAAM,SAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPrC,KAAKmkH,gBAAgB,GAG3Bh9G,KAAM,QACN88G,OAAQ,mBACR9hH,QAASqiH,EACT7hH,MAAO,IAInB,CAGA,GAAIqE,EAAE25B,aAAc,CACjB,IAAI8jF,EAAmB,GAEnBz9G,EAAEJ,iBACH69G,EAAmBz9G,EAAEJ,eACjBG,QAAQ29G,IAASA,EAAI/jF,eACrBxyB,KAAKu2G,IACI,CACJ9jH,GAAI8jH,EAAI9jH,GACR+B,MAAO+hH,EAAItjH,WAKvB4iH,EAAc,CACX7sD,QAAS,EACTt1D,KAAM,CACHmiH,EACA,CACGtjH,KAAM,aACNU,MAAO,IACPU,WAAY,GACZmiH,OAAQ,iBACRpvC,QAAQ,EACR1yE,QAASsiH,EACT9hH,MAAO8hH,EAAiB,GAAKA,EAAiB,GAAG7jH,GAAK,OAIlE,CAEAgjH,EAAUt/G,KAAK,CACZ5D,KAAM,SACNiB,YAAY,EACZR,KAAM,CACH,CACGT,KAAM,WACNy2D,QAAS,EACTx1D,YAAY,EACZT,IAAK,CAAE,cAAe,IACtBqhE,SAAU,sBAAsBv7D,EAAEuE,iBAAiBvE,EAAE5F,SAExD4iH,IAEJ,IAELxkB,EAAQ/+F,GAAGmjH,EAAWN,GAEtBtjH,KAAKmkH,gBACR,CAEAD,iBAAiBS,GACd,IAAKA,EAAe,OAEpB,MACMC,EADeD,EAAcl5G,gBACG2rE,UACnC,CAAE6sC,OAAQ,kBACV,OACD,GAEGW,IAE4B,SAA7BD,EAAc14G,WAAuB24G,EAAiBjgH,OACrDigH,EAAiBhgH,OACzB,CAEA+9G,eAAe94G,GAGZ,OAAIA,EAAK1D,OAFK,MAIXnG,KAAK+B,GAAG0Y,MAAMtJ,MAAM,CACjBC,MAAOpR,KAAKoB,MAAM,oBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,0HACA,CATK,SAaJ,EAIb,CAEA+iH,iBACG,MAAMjkH,EAAMF,KAAKE,IACXwyG,EAAa/uG,GAAGzD,EAAIkzG,WACpB7T,EAAKv/F,KAAK+B,GAEhB,IAAK2wG,EAAY,OAEjBA,EAAW53F,WAGX43F,EAAWrtG,eAAe,CAAEzD,KAAM,SAGlC,MAAMohH,EAAchjH,KAAKijH,iBACnB/rD,EAAU,GAGhBA,EAAQ5yD,KAAK,CACV1D,GAAI,UACJkvE,OAAQ,GACRvN,SAAUviE,KAAKmjH,eACfniH,MAAO,KAIVk2D,EAAQ5yD,KAAK,CACV1D,GAAI,YACJkvE,OAAQ,CAAEK,QAAS,kBACnB5N,SAAU,sBACVvhE,MAAO,KAGV,MAAMk5G,EAAmB,GACnBC,EAAW,GA4DjB,IAzDC6I,GAAe,IAAI/+G,SAAS+C,IAC1B,IAAIgpE,EAAkBhpE,EAAEpB,MAAMQ,SAAS4pE,gBAMvC,GAHIA,GAA8C,iBAApBA,IAC3BA,EAAkBn8D,KAAK0D,MAAMy4D,IAE5BA,GAAiB7pE,OAAQ,CAC1B,MAAMi0G,EAAe,GAGrBpqC,EAAgB/rE,SAASwrB,IACtB,MAAMsuD,EAASwhB,EAAG3rE,iBACf,GAAG5sB,EAAEpB,MAAMhF,MAAM2+F,EAAG9kF,MAAMvP,SAG7BkvG,EAAa91G,KAAKy5E,EAAOt9E,IAEzBy5G,EAAiB51G,KAAK,CACnBwE,OAAQi1E,EACRr9E,KAAMq9E,EAAO79E,IAAIy0E,aACjB7tE,WAAYE,EAAEpB,MAAMhF,GACpBovE,gBAAiBvgD,EAAKtO,MACtBkpD,eAAgB56C,EAAK46C,eACrB64C,YAAal8G,EAAEk8G,aAChB,IAIL,MAAM7I,EAAU,GAAGn6G,EAAIihB,SAASna,EAAEpB,MAAMhF,MAAM2+F,EAAG9kF,MAAMvP,QAGvDivG,EAAS71G,KAAK+1G,GAEd9a,EAAG9kF,MAAMha,GAAG,CACTC,KAAM,QACNQ,IAAK,iBACLN,GAAIy5G,EACJ54G,KAAM,CACHI,KAAMu4G,IAGf,CAEA,MAAM90G,EAAyB,UAAhB0B,EAAEpB,OAAOvB,IAAkB,SAAW,OAErD6yD,EAAQ5yD,KAAK,CACV1D,GAAIoG,EAAEk8G,YACNpzC,OAAQ9oE,EAAEpB,MAAMxE,MAChBkE,OAAQA,EACRi9D,SAAU,CAACzqD,EAAKiyB,EAAQpnC,IACrBA,EAAMqQ,QAAQ,OAAQ,QACzBszD,SAAU,IACV5jE,WAAW,GACZ,IAGDw3G,EAAiB/zG,OAAQ,CAE1B,MAAMq0G,EAAqB,GAE3BN,EAAiBj2G,SAAS+C,IAGvBA,EAAE8B,OAAO+qB,WAAW7zB,KAAKyK,cAAc1D,UAEvCC,EAAE8B,OAAOjE,SAASmC,EAAEgpE,iBAGf7iE,MAAMC,QAAQotG,EAAmBxzG,EAAEF,eACrC0zG,EAAmBxzG,EAAEF,YAAc,IAGtC0zG,EAAmBxzG,EAAEF,YAAYxC,KAAK,CACnC6wB,QAASxxB,GAAGqD,EAAEtG,MAAM+5G,kBACpB90G,OAAQ+sG,EAAWgI,kBACnBrwC,eAAgBrjE,EAAEqjE,eAClB64C,YAAal8G,EAAEk8G,aAChB,IAGL,MAAM/hG,EAAQ,CAAC,EAGfuxF,EAAWhlG,MAAM8sG,mBAAqBA,EAGtCrmG,OAAOC,KAAKomG,GAAoBv2G,SAASI,IACtC8c,EAAM9c,GAAO,CAAC1B,EAAOkH,KAElB,IAAItE,GAAU,EAgCd,OA9BAmtG,EAAWhlG,MAAM8sG,mBAAmBn2G,GAAKJ,SAAS6E,IAC/C,MAAM+7G,EAAW,CAAC,GAKjB7B,GAAe,IAAI/+G,SAAS+C,IAC1B,MAAM0mB,EAAS7jB,EAAK7C,EAAEk8G,aAGH,SAAhBl8G,EAAEpB,MAAMvB,KACRqpB,EAAOsgB,SAAS,kBAEhBzoC,GAAU,GAEbs/G,EAAS79G,EAAEpB,MAAMhF,IAAM8sB,CAAM,IAGd5kB,EAAOqsB,QAAQ0vF,KAI9Bt/G,GAAU,EAKb,IAGIA,CAAO,CAChB,IAGJmtG,EAAWjuG,OAAO,QAAS0c,GAE3BuxF,EAAWzwG,OAAOk4G,SAAWA,EAC7BzH,EAAWhuG,SACd,MAEOguG,EAAWzwG,OAAOk4G,UACnBzH,EAAWzwG,OAAOk4G,SAASl2G,SAASywE,IACjC,MAAMowC,EAASnhH,GAAG+wE,GAEbowC,GAELA,EAAOlK,YAAY,IAKzBlI,EAAWjuG,OAAO,QAAS,CAAC,GAC5BiuG,EAAWhuG,UAId,MAAMqgH,EAAa,IAElB/kH,KAAKwhH,WAAa,IAAIv9G,SAAQ,CAACib,EAAKnT,KAClC,MAAM84G,EAAW,CACdjkH,GAAImL,EAAQ,IAIdi3G,GAAe,IAAI/+G,SAAS+C,IAC1B,MAAM6C,EAAOqV,EAAIlY,EAAEk8G,YAAc,GAEjC,GAAoB,SAAhBl8G,EAAEpB,MAAMvB,IAAgB,CAKzB,IAAIo1C,EAAa8lD,EAAGp+E,MAAMhB,OAAOtW,EAAM,CACpCyW,OAAQtZ,EAAEsZ,SAEbm5B,EAAa8lD,EAAGp+E,MAAMX,aAAai5B,EAAY,CAC5Cn5B,OAAQ,eAGQ,iBAAfm5B,IACDA,EAAaA,EAAa,MAAQ5vC,GAErCg7G,EAAS79G,EAAEk8G,aAAezpE,CAC7B,MAAOorE,EAAS79G,EAAEk8G,aAAer5G,CAAI,IAIxCg7G,EAAoB,WAAI,EAExBE,EAAWzgH,KAAKugH,EAAS,IAIJlhH,GAAGzD,EAAI+gH,mBAAmBh1G,YAE3B84G,EAAW5+G,OAAS,GAAG4+G,EAAWxwG,QAEzD,MAAMkuG,EAAgB9+G,GAAGzD,EAAImhH,cAE7BoB,EAAc59G,SAAS7E,KAAK0iH,YAAYqC,IACxCrS,EAAWsI,eAAe9jD,GAC1Bw7C,EAAWn7F,MAAMwtG,GAEb/kH,KAAK2iH,eAAeoC,GAAatC,EAAcr9G,UAC9Cq9G,EAAc/6G,SAGnBgrG,EAAW/qG,gBACd,CAEAq9G,yBAAyBC,EAAiBC,EAAOn5G,GAC9C,MAAM7L,EAAMF,KAAKE,IAOXilH,GAJY,IAAI5kG,KAAS0kG,GAEOl5G,GAEEm5G,EAAQn5G,GAEhD,IAAI+B,EAAS,GAGb,MAAMs3G,GAAQD,EAAa,OAAUxtE,QAAQ,GACvChB,GAASwuE,EAAa,MAASxtE,QAAQ,GACvCd,GAAWsuE,EAAa,KAAOxtE,QAAQ,GACvC0tE,GAAWF,EAAa,KAAMxtE,QAAQ,GAqB5C,GAnBiB7pC,EAAbu3G,EAAU,EAAY,GACjBA,EAAU,GACPrlH,KAAKoB,MAAM,wCAAyC,CAC1DikH,IAKc,GAAXxuE,EACG72C,KAAKoB,MAAM,+CAAgD,CACjEikH,EAAU,KAGPxuE,EAAU,GACP72C,KAAKoB,MAAM,sCAAuC,CAACy1C,IACtDF,EAAQ,GACL32C,KAAKoB,MAAM,sCAAuC,CAACu1C,IACjD32C,KAAKoB,MAAM,qCAAsC,CAACgkH,IAE5Dt3G,EACDnK,GAAGzD,EAAImhH,eAAex8G,SAASiJ,OAC3B,CACJ,MAAMkyE,EAAWr8E,GAAGzD,EAAIkzG,YAAYtmF,KAAK,CAAE01F,WAAW,IACtD7+G,GAAGzD,EAAImhH,eAAex8G,SAAS7E,KAAK0iH,YAAY1iC,GACnD,CACH,CAcAijC,iBACG,MAAMn1G,EAAS,GACT5N,EAAMF,KAAKE,IAiGjB,OA9FuByD,GAAGzD,EAAIghH,YAC1B9pC,UAAU,CAAE6sC,OAAQ,eAAiB,OACrCn7G,QAAQyzF,GAAoC,QAAvBA,EAAStwF,cAEf,IAAIhI,SAASqhH,IAC7B,MAAM7B,EAAgBzjH,KAAKyK,cAE3B,IAAKg5G,EAAe,OAGpB,MAAM79G,EAAQ69G,EAAc11G,UAAUu3G,EAAUrjH,OAAOyI,SAEvD,IAAK9E,EAAO,OAEZ,MACM2/G,EAAY,CACfrC,YAFcoC,EAAUr5G,WAGxBrG,MAAOA,GAGV,GAAkB,SAAdA,EAAMvB,IAAgB,CACvB,MACMmhH,EADeF,EAAU75G,gBACW2rE,UACvC,CAAE6sC,OAAQ,oBACV,OAIH,GAAIuB,EAAsB,CAMvB,IAAIllG,EAEJ,OAPAklG,EAAqBvhH,SAASs4F,IAC3BgpB,EAAUhpB,EAASt6F,OAAOkF,MAAQo1F,EAAStwF,UAAU,IAMhDs5G,EAAUzhD,OACf,IAAK,IACFxjD,EACGilG,EAAU72D,IACV62D,EAAUE,UACVF,EAAU52D,MACV42D,EAAUE,UACVF,EAAUG,KACb,MACH,IAAK,IACFplG,EACGilG,EAAU52D,MACV42D,EAAUE,UACVF,EAAU72D,IACV62D,EAAUE,UACVF,EAAUG,KACb,MACH,IAAK,IACFplG,EACGilG,EAAUG,KACVH,EAAUE,UACVF,EAAU52D,MACV42D,EAAUE,UACVF,EAAU72D,IACb,MACH,IAAK,IACFpuC,EACGilG,EAAUG,KACVH,EAAUE,UACVF,EAAU72D,IACV62D,EAAUE,UACVF,EAAU52D,MAGnB42D,EAAUjlG,OAASA,CACtB,CACH,CAEA,GAAI1a,EAAM+6B,aAAc,CACrB,MACMglF,EADeL,EAAU75G,gBACQ2rE,UACpC,CAAE6sC,OAAQ,kBACV,OACD,GAGF,GAAI0B,EAAmB,CACpB,MAAMC,EAAchgH,EAAMgB,eAAemH,UACtC43G,EAAkB15G,YAGrBs5G,EAAUK,YAAcA,CAC3B,CACH,CAEA93G,EAAOxJ,KAAKihH,EAAU,IAGlBz3G,CACV,CAEA40G,YAAY1iC,GACT,IAAI75E,EAAS65E,EAIb,OAFI7yE,MAAMC,QAAQ4yE,KAAW75E,EAAS65E,EAAS75E,QAExCnG,KAAKoB,MAAM,qBAAsB,CAAC+E,GAC5C,CAOAhB,eAEG,MAAMwnB,EAAK3sB,KAAK2rB,eAOV83F,EAAgBzjH,KAAKyK,cAE3B,IAAKg5G,EAAe,OAMpB,MAAMvjH,EAAMF,KAAKE,IACXuiH,EAAgB9+G,GAAGzD,EAAImhH,cAE7BoB,EAAcr9G,UAGd,MAAMm3E,EAAQ54E,GAAGzD,EAAIgK,MACf24G,EAAel/G,GAAGzD,EAAIkhH,aAE5B7kC,EAAMl3E,aAAa,CAAEzD,KAAM,SAC3BihH,EAAax9G,aAAa,CACvBzD,KAAM,MACNjB,SAAU,OAIb,MAAMqiH,EAAchjH,KAAKijH,iBAGnB4C,EAAWpC,EAAcz7G,QACzB0qG,EAAa/uG,GAAGzD,EAAIkzG,WACpB0S,EAAepT,EAAW5lF,KAAK,CAAE01F,WAAW,IAElD,IAAIuD,EAAgB,EAEpB,MAAMC,EAAsB,KACzBD,GAAiB,EACjBlD,EAAax9G,aAAa,CACvBzD,KAAM,SACNjB,SAAUolH,EAAgBD,EAAa3/G,QACxC,EAEC8/G,EAAa,CAAC75F,EAAQi0B,KACrBqyD,IAEDA,EAAWwT,UAAU95F,EAAQ,YAC7BsmF,EAAWl3B,aACXk3B,EAAW/hF,WAAWvE,EAAQ,CAC3Bm2F,QAAS,OACTH,UAAW/hE,IAEdqyD,EAAWj3B,gBAGduqC,IAEAx9G,QAAQ+G,MAAM8wC,EAAW,EAEtBm/C,EAAUx/F,KAAK+B,GAAG0Y,MAClB0rG,EAAc,CAAC/5F,EAAQ9O,EAAS,MACnC,GAAIo1F,EAAY,CAEb,MAAM0T,EAAW,GAEjB9oG,EAAOrZ,SAASkE,IACRA,GAAKhB,OAEQ67G,EAAYl6G,QAC1B9B,GAAMA,EAAEpB,OAASoB,EAAEpB,MAAMkB,YAAcqB,EAAIhB,OAC7C,GAEFi/G,EAAS9hH,KAAK6D,EAAIhB,KAAO,KAAOgB,EAAImJ,SAAQ,IAS/CohG,EAAWl3B,aACXk3B,EAAW/hF,WAAWvE,EAAQ,CAC3Bm2F,QAAS,UACTH,UAAWgE,EAAS93G,KAAK,WAE5BokG,EAAWj3B,eACXi3B,EAAWwT,UAAU95F,EAAQ,gBAChC,GAuCG22F,EAAiBp/G,GAAGzD,EAAIihH,eACxBkF,EAAY,KAGf5D,EAAc/6G,SAGd60E,EAAM50E,eACNk7G,EAAal7G,eAEbo7G,EAAel+G,SAAS,IACxBk+G,EAAep+G,OAEf,MAAMq7E,EAAW0yB,EAAW5lF,KAAK,CAAE01F,WAAW,IAE9CC,EAAc59G,SAAS7E,KAAK0iH,YAAY1iC,IACxChgF,KAAKwP,KAAK,OAAO,EAId04F,EAASv7E,GAAId,mBACby6F,EAAoB,GAE1B,IAAIpnF,EACAspE,EAEAN,GAAQ37E,cACT2S,EAAagpE,EAAOx8E,WAEpB46F,EAAkBhiH,QACZm/G,EAAc18G,QACbC,GAAMA,EAAE25B,cAAgB35B,EAAEZ,SAASO,aAAeu4B,EAAWt+B,MAIpE4nG,EAAaN,EAAO37E,aAGvB,MAAMg6F,EAAY,GAElB,IAAIC,GAAW,EA0Ef,IArECV,GAAgB,IAAI7hH,SAAQ,CAAC4F,EAAMkC,KACjC,MAAMsgC,EAAa,CAAC,EAGhBnN,GAAconF,EAAkBngH,QAAUqiG,GAC3C8d,EAAkBriH,SAAS+C,IACxB,MAAM2hG,EAAc3hG,EAAEK,WACjBL,EAAEK,WAAWP,WACbo4B,EAAWnQ,KAEhBsd,EAAWrlC,EAAEF,YAAc,CAAC,EAC5BulC,EAAWrlC,EAAEF,YAAY6hG,GACtBH,EAAWG,IAAgBH,EAAW5nG,EAAE,IAIjDoiH,EAAY/+G,SAAS+C,IAClB,GAAKA,EAAEpB,OAAOvB,IAEd,OAAQ2C,EAAEpB,MAAMvB,KAIb,IAAK,SACF,GAAmC,iBAAxBwF,EAAK7C,EAAEk8G,aAA2B,CAC1C72E,EAAWrlC,EAAEpB,MAAMkB,aAChB+C,EAAK7C,EAAEk8G,cAAgB,IACxBlwG,QAAQ,aAAc,IAExB,KACH,CAEAq5B,EAAWrlC,EAAEpB,MAAMkB,YAAc+C,EAAK7C,EAAEk8G,aAExC,MAEH,QACG72E,EAAWrlC,EAAEpB,MAAMkB,YAAc+C,EAAK7C,EAAEk8G,aAG9C,IAGH,IAAI39G,GAAU,EACV6gH,EAAW,GAGf,MAAM7+G,EAAYk8G,EAAc5zF,YAAYwc,GAjH7B,IAACjgB,EAmHhB7mB,EAAUgC,EAAUiW,OACpB4oG,EAAW7+G,EAAU+V,OAEjB/X,EAEDA,EAAUmtG,EAAW/4B,SAAS9vE,EAAKjJ,KAEnC4lH,GAAW,EAEXL,EAAYt8G,EAAKjJ,GAAIwlH,IAGpB7gH,GA/HY6mB,EAgIHviB,EAAKjJ,GA/Hd8xG,IAUDA,EAAW+T,aAAar6F,EAAQ,iBAChCsmF,EAAWl3B,aACXk3B,EAAW/hF,WAAWvE,EAAQ,CAC3Bm2F,QAAS,GACTH,UAAW,KAEd1P,EAAWj3B,gBAgHX8qC,EAAUjiH,KAAK,CAAE1D,GAAIiJ,EAAKjJ,GAAIiJ,KAAMwiC,KAChCm6E,GAAW,CAAK,KAKrBA,EAwBF,OAVAH,SAEA7mB,EAAQruF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,gBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,sGAUT,MAAMslH,EAAc,CAAC,EAKfpgG,EAAkB08F,EAAYl6G,QAChC9B,GAAMA,GAAKA,EAAEpB,OAAO+6B,cAAgB35B,EAAE4+G,cAG1C,IAAIX,EACAt+B,EAAU,EAEd,IAEG,MAAMggC,EAAa,GAgFnB,IA9ECrgG,GAAmB,IAAIriB,SAAS+C,IAC9B,MAAM6B,EAAe7B,EAAEpB,MAEjBghH,EAAgB/9G,EAAajC,eAEnC,IAAKggH,EAAe,OAEpB,MAAMC,EAAeD,EAAc5+G,QAEnC,IAAK6+G,EAAc,OAEnB,MAAMC,EAAYj+G,EAAaxB,WAC1BwB,EAAaxB,WAAWP,WACxB+B,EAAa5D,OAAO8pB,KAGzB23F,EAAY79G,EAAajI,IAAM,CAAC,EAuBhC+lH,EAAWriH,KApBWa,WACnB,IACG,MAAM8E,QAAa48G,EAAan3F,QAAQ,CACrCL,MAAO,CAAC,EACRpmB,UAAU,KAEAgB,EAAKJ,MAAQI,GAEjB,IAAIhG,SAASib,IAGnBwnG,EAAY79G,EAAajI,IACtBse,EAAIlY,EAAE4+G,YAAY9+G,aACjBoY,EAAI4nG,EAAU,GAIxB,CAFE,MAAO3+G,GACNK,QAAQ+G,MAAMpH,EACjB,GAGa4+G,GAAgB,UAG7Bt3G,QAAQ4R,IAAIslG,GAGlBJ,EAAUtiH,SAAS4F,IAChB,MAAMwiC,EAAaxiC,EAAKA,KAGxB6oG,EAAWl3B,aACXk3B,EAAW/hF,WAAW9mB,EAAKjJ,GAAI,CAC5B2hH,QAAS,cACTH,UAAW,KAEd1P,EAAWj3B,gBAGVn1D,GAAmB,IAAIriB,SAAS+C,IAE9B,MAAM6B,EAAe7B,EAAEpB,MACjBkhH,EAAYj+G,EAAaxB,WAC1BwB,EAAaxB,WAAWP,WACxB+B,EAAa5D,OAAO8pB,KACnBlf,EACH62G,EAAY79G,EAAajI,IACtByrC,EAAWxjC,EAAa/B,aAGzB+I,IACFs2G,EAAYt8G,EAAKjJ,GAAI,CAAC,CAAEuG,KAAM0B,EAAa/B,cAC3C0/G,GAAW,GAGdn6E,EAAWxjC,EAAa/B,YAAc,CAAC,EACvCulC,EAAWxjC,EAAa/B,YAAYggH,GAAaj3G,CAAI,GACtD,KAGA22G,EAUF,OATAhnB,EAAQruF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,gBAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MACR,2GAGNilH,IAMH,MAAMhsD,EAAW,GACX2sD,EAAe,CAACnB,EAAUoB,EAAaxtF,EAASyrF,IACnD,IAAIz1G,SAAQ,CAACC,EAASiH,KACnB8iB,EAAQm5B,iBAAiBq0D,GAEH9hH,WACnB,IACG,MAAM2I,QAAe+3G,EAASn3C,YAAY,CACvCh/B,MAAOu3E,IAEJC,EAAep5G,EAAOwP,OAG5BnJ,OAAOC,KAAK8yG,GAAcjjH,SAASkjH,IAChC,MAAM53G,EAAQ23G,EAAaC,GAEvB53G,GACD02G,EACGkB,EACA53G,EAAM+B,SAAW/B,EAAMq6F,YAAcr6F,EAE3C,IAGH,MAAM63G,EAAat5G,EAAOjE,KACpBw9G,EAAsB,GAE5BlzG,OAAOC,KAAKgzG,GAAYnjH,SAASkjH,IAC9BE,EAAoB/iH,KACjB,IAAImL,SAAQ,CAACC,EAASiH,KAEIxR,WACpB,UACSs0B,EAAQs5B,cACXq0D,EAAWD,IAlU1B/6F,EAqUqB+6F,EApUhCzU,IAEDA,EAAW+T,aAAar6F,EAAQ,YAChCsmF,EAAWwT,UAAU95F,EAAQ,YAC7BsmF,EAAWl3B,aACXk3B,EAAW/hF,WAAWvE,EAAQ,CAC3Bm2F,QAAS,OACTH,UAAW,KAEd1P,EAAWj3B,gBAGduqC,IAyT2Bt2G,GAIH,CAHE,MAAOvH,GACN89G,EAAWkB,EAAUh/G,GACrBwO,EAAO,mBACV,CA1UV,IAACyV,CA0US,EAGHk7F,EAAgB,IAErB,IAGJ,MAAMC,EAA0BpiH,UAC7B,UACSsK,QAAQ4R,IAAIgmG,GAElBJ,EAAYhjH,SAASib,IAElBynE,IACIA,EAAU,IAAM,GACjB3mF,KAAKglH,yBACFC,EACAsB,EAAUpgH,OACVwgF,EAEN,IAGCA,IAAYu+B,IACbmB,IACA5D,EAAcr9G,WAGjBsK,GAOH,CANE,MAAOvH,GAKNwO,EAAOxO,EACV,SAGGo/G,GAIT,CAHE,MAAOp/G,GACNK,QAAQ+G,MAAMpH,GACdwO,EAAOxO,EACV,GAGHq/G,EAAe,IAGrBjB,EAAUtiH,SAAS4F,IAChBwwD,EAAS/1D,KAAK,CAAE1D,GAAIiJ,EAAKjJ,GAAIiJ,KAAMA,EAAKA,MAAO,IAKlD,MAAM49G,EAAiB,GACjBvC,EAAQ7qD,EAASl0D,OAEvB,IAAI4F,EAAQ,EAEZ,KAAOsuD,EAASl0D,QACbshH,EAAe17G,GAASsuD,EAASluD,OAAO,EAAG,IAE3CJ,IAIH,MAAM27G,EAAwB,CAC3BC,EACAC,EACAC,EACA3C,IAEA,IAAIz1G,SAAQ,CAACC,EAASiH,KAWIxR,WACpB,UACS6hH,EACHnB,EACA8B,EACAE,EACA3C,GAIH,MAAM4C,EAAcF,EAAiBrzG,QAGjCuzG,GAAa3hH,aACRuhH,EACHI,EACAF,EACAC,EACA3C,GAIHx1G,GAKN,CAHE,MAAOvH,GAENwO,EAAOxO,EACV,GAGH6R,EAAgB,IAMtBirG,EAAkB,IAAI1kG,KAEtB,MAAM4K,EAAOs8F,EAAelzG,cAGtBmzG,EAAsBv8F,EAAMs8F,EAAgBznH,KAAKU,KAAMwkH,EAWhE,CAVE,MAAO/8G,GAENq3F,EAAQruF,MAAM,CACXC,MAAOpR,KAAKoB,MAAM,0BAClBmQ,GAAIvR,KAAKoB,MAAM,MACfiN,KAAMrO,KAAKoB,MAAM,+CAGpBilH,IACA79G,QAAQ+G,MAAMpH,EACjB,CACH,oBChyDH,MAAM25F,EAAgC,EAAQ,MAE9CriG,EAAOC,QAAU,cAAuC,EAGrDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,mBAAmB09F,EAAS38F,KAAMV,EAC/D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAAS2tD,SACfg0D,MAAO,CACJ71F,MAAO,EACPmvB,KAAMj7C,EAAS+tD,UACfpP,IAAK3+C,EAASguD,UAEjB4zD,MAAO,CACJzlD,SAAUn8D,EAAS4tD,SACd,yBAAyB5tD,EAAS8tD,kCAClC,IAER+zD,OAAQ7hH,EAAS4tD,SACZ,CACGuO,SAAU,yBAAyBn8D,EAAS8tD,kCAC5CvuD,OAAQ,IAEX,KACLuiH,OAAQ,CACL,CACGC,MAAO,GACPxlH,MAAO,UACP8+F,MAAO,WAEV,CACG0mB,MAAO,GACPxlH,MAAO,WACP8+F,MAAO,YAGb1gG,OAAQqF,EAAS6tD,aAGvB,CAEA9uD,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBCtDH,MAAMs3F,EAAgC,EAAQ,MAE9CriG,EAAOC,QAAU,cAAsC,EAGpDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,kBAAkB09F,EAAS38F,KAAMV,EAC9D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAASkuD,QACf8zD,OAAQhiH,EAASmuD,UACjB5xD,MAAO,UACP8+F,MAAO,UACPsmB,MAAO,CACJ71F,MAAO,EACPmvB,KAAMj7C,EAAS+tD,UACfpP,IAAK3+C,EAASguD,UAEjB4zD,MAAO,CACJzlD,SAAUn8D,EAAS4tD,SACd,yBAAyB5tD,EAAS8tD,kCAClC,IAER+zD,OACwB,QAArB7hH,EAASkuD,SAAsBluD,EAASkuD,QAInCluD,EAAS4tD,SACT,CACGuO,SAAU,yBAAyBn8D,EAAS8tD,kCAC5CvuD,OAAQ,IAEX,KARAS,EAAS4tD,SACN,yBAAyB5tD,EAAS8tD,kCAClC,GAOXnzD,OAAQqF,EAASrF,QAGvB,CAEAoE,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBClDH,MAAM84F,EAA2B,EAAQ,OAEzC7jG,EAAOC,QAAU,cAAmC4jG,EACjD3jG,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,eAAe09F,EAAS38F,KAAMV,EAC3D,CAEAO,KACG,OAAOX,MAAMW,IAChB,CAEA0E,WAAWpD,EAAIu2D,SACNx4D,MAAMwD,KAAKvB,EAAIu2D,GAErB,MAAM+vD,EAAa1kH,GAAG3D,KAAKE,IAAIC,WACzBq/F,EAAUx/F,KAAK+B,GAAG0Y,MAEpB4tG,GAAY7oB,EAAQ97F,OAAO2kH,EAAY7oB,EAAQ57F,aAEnD,MAAM25F,EAAWv9F,KAAKU,KAChBisB,EAAK3sB,KAAK2rB,eAEhB,GAAIgB,EAAI,CACL,MAAM27F,EAAa,CAChB,eACA,SACA,SACA,SACA,mBAIA37F,EAAGd,sBACD,iBAAmBc,EAAGd,mBAAmBojF,SAAW,MAEtD1R,EAAS3rE,SAAS,CACfC,QAASlF,EAAGd,mBACZiG,UAAW,eACXC,SAAU,KACPwrE,EAAStoC,aAAa,IAI/BqzD,EAAWrkH,SAASskH,IACjBhrB,EAAS3rE,SAAS,CACfC,QAASlF,EACTmF,UAAWy2F,EACXx2F,SAAU,KACPwrE,EAAStoC,aAAa,GAE1B,GAER,CAEAsoC,EAAStoC,aACZ,CAEAzqD,SACG1K,MAAM0K,QACT,mBC3DH,MAAMoyF,EAAkB,WAExBn9F,EAAOC,QAAU,cAA4Ck9F,EAC1Dj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,wBAAwB09F,EAAS38F,KAC3CuT,OAAOsnC,OACJ,CACG+sE,eAAgB,IAEnBtoH,GAGT,CAEAO,GAAGgoH,GACA,MAAMtqB,EAAMr+F,MAAMW,GAAG,CAClB0T,OAAOsnC,OAAO,CAAE76C,GAAIZ,KAAKE,IAAIsoH,gBAAkBC,GAAoB,CAAC,KAKvE,cAFOtqB,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,SAIN,MAAM+yF,EAAWv9F,KAAKU,KAEtB68F,EAASmrB,SAAU,EAEnB1oH,KAAKi1D,YAAYsoC,EAASxoF,OAAOwrF,aAEpC,CAEAtrC,YAAYwrC,GACT,MAAMkoB,EAAkBhlH,GAAG3D,KAAKE,IAAIsoH,gBAEhCG,GAAiB9+G,MAAM8+G,EAAgB9+G,KAAKkiE,KAAK00B,EACxD,oBC/CH,MAAMqB,EAAgC,EAAQ,MAE9CriG,EAAOC,QAAU,cAAuC,EAGrDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,mBAAmB09F,EAAS38F,KAAMV,EAC/D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAASmvD,SACf6yD,OAAQhiH,EAASovD,WACjB7yD,MAAO,UACP8+F,MAAO,UACPsmB,MAAO,CACJ71F,MAAO,EACPmvB,KAAMj7C,EAAS+tD,UACfpP,IAAK3+C,EAASguD,UAEjB4zD,MAAO,CACJzlD,SAAUn8D,EAAS4tD,SACd,yBAAyB5tD,EAAS8tD,kCAClC,IAER+zD,OAAQ7hH,EAAS4tD,SACZ,CACGuO,SAAU,yBAAyBn8D,EAAS8tD,kCAC5CvuD,OAAQ,IAEX,KACL5E,OAAQqF,EAAS6tD,aAGvB,CAEA9uD,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBC7CH,MAAMs3F,EAAgC,EAAQ,MAE9CriG,EAAOC,QAAU,cAAsC,EAGpDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,kBAAkB09F,EAAS38F,KAAMV,EAC9D,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACbC,KAAM,QACNkB,KAAMwE,EAASsvD,QACf/yD,MAAO,UACP8+F,MAAO,UACPwmB,OAAQ7hH,EAAS4tD,SACZ,CACGhzD,MAAOhB,KAAKU,KAAKqU,OAAO3O,SAAStE,WACjCygE,SAAU,0BAA0Bn8D,EAAS8tD,mCAEhD,KACL00D,aAAc,0BAA0BxiH,EAASuvD,kCACjDkzD,OAAQ,EACR9nH,OAAQqF,EAASrF,QAGvB,CAEAoE,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,CAEAyI,SACG1K,MAAM0K,QACT,oBCpCH,MAAMoyF,EAAkB,WAExBn9F,EAAOC,QAAU,cAAqCk9F,EACnDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,iBAAiB09F,EAAS38F,KACpCuT,OAAOsnC,OACJ,CACGqtE,QAAS,IAEZ5oH,GAGT,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBy9F,EAAMr+F,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAI4oH,QACbpoH,KAAM,WACN0O,MAAOmuF,EAAS9mC,cAChBN,YAAaonC,EAASvnC,mBACtBj1D,OAAQf,KAAKoG,SAASrF,OACtB8I,KAAM7J,KAAK+oH,iBACX3mH,GAAI,CACD4mH,YAAa,CAACpoH,EAAIkX,EAAK/L,KACpB/L,KAAKipH,WAAWnxG,EAAIzJ,KAAM,IAAIkS,KAAO,EAWxC2oG,cAAgB56F,IACbtuB,KAAKmpH,cAAc76F,EAAM,MAQrC,cAFO6vE,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMw7F,EAAWv9F,KAAKU,KAEtB68F,EAAS6rB,WAAa7rB,EAAS6rB,YAAc,CAAC,EAE9C,MAAMlpH,EAAMF,KAAKE,IACXmpH,EAAW1lH,GAAGzD,EAAI4oH,SAExB,GAAIO,EAAU,CACX,MAAMC,EAAeD,EAASjyC,UAAU,CAAE12E,KAAM,SAE5C4oH,IAEI/rB,EAAS6rB,WAAWG,iBACtBhsB,EAAS6rB,WAAWG,eACjBD,EAAaz/G,KAAK8kB,YACf,kBACA,CAACL,EAAOzkB,EAAM2/G,KACK,WAAZA,GACDxpH,KAAKypH,cAAcn7F,GAAQzkB,GAAQ,CAAC,GAAGwE,KAC1C,KAKZ5K,MAAMC,OAAO4lH,EAAc7lH,MAAMG,aAEvC,CAEA,MAAM4uB,EAAKxyB,KAAK2rB,eAEX6G,IAKA+qE,EAAS6rB,WAAW1/C,SACtB6zB,EAAS6rB,WAAW1/C,OAASl3C,EAAGpwB,GAAG,UAAU,IAC1CpC,KAAK0pH,oBAGNnsB,EAAS6rB,WAAWr6C,SACtBwuB,EAAS6rB,WAAWr6C,OAASv8C,EAAGpwB,GAAG,UAAU,IAC1CpC,KAAK0pH,oBAGNnsB,EAAS6rB,WAAWhzG,SACtBmnF,EAAS6rB,WAAWhzG,OAASoc,EAAGpwB,GAAG,UAAU,IAC1CpC,KAAK0pH,oBAGNnsB,EAAS6rB,WAAWn3F,WACtBsrE,EAAS6rB,WAAWn3F,SAAWO,EAAGpwB,GAAG,YAAY,IAC9CpC,KAAK0pH,oBAEd,CAEAX,iBACG,MAAMxrB,EAAWv9F,KAAKU,KAChB8xB,EAAKxyB,KAAK2rB,eAEhB,IAAK6G,EAAI,OAAO,KAEhB,MAAMm3F,EAAUpsB,EAASjnC,eACnBszD,EAAarsB,EAAShnC,kBACtBszD,EAAUtsB,EAAS/mC,eAEzB,IAAKmzD,IAAYC,EAAY,OAAO,KAEpC,MAAME,EAAcH,EAAQ7iH,WACtBijH,EAAiBH,EAAW9iH,WAC5BkjH,EAAcH,EAAUA,EAAQ/iH,WAAa,KAC7CmjH,EAAaz3F,EAAGY,UAChB82F,EAAW,GA6BjB,OA3BAD,EAAWhmH,SAAQ,CAACmK,EAAMrC,KACvB,GAAIqC,EAAK27G,GAAiB,CACvB,MAAM/uF,EAAOuiE,EAAS9mC,cAAc3pC,MAAMkO,GAChCA,EAAKr4B,QAAUyL,EAAK07G,KAExBjgH,EAAO,CACVjJ,GAAIwN,EAAKxN,GACTupH,QAASnvF,EAAOA,EAAKp6B,GAAK,EAC1B6f,KAAMrS,EAAK47G,GAAe,IAAIzpG,KAAKnS,EAAK47G,IAAgB,KACxDI,aAAc,IAAI7pG,KAAKnS,EAAiB,YACxCC,KAAMD,EAAK27G,IAGdG,EAAS5lH,KAAKuF,EACjB,KAGHqgH,EAASv8G,MAAK,SAAUC,EAAGC,GACxB,OAAIm8G,EACM,IAAIzpG,KAAK3S,EAAE6S,MAAM61B,UAAY,IAAI/1B,KAAK1S,EAAE4S,MAAM61B,UAGlD,IAAI/1B,KAAK3S,EAAEw8G,cAAc9zE,UACzB,IAAI/1B,KAAK1S,EAAEu8G,cAAc9zE,SAElC,IAEO4zE,CACV,CAEAR,iBACG,MAAMnsB,EAAWv9F,KAAKU,KAElB68F,EAAS8sB,kBAAkBt2G,aAAawpF,EAAS8sB,kBAErDrqH,KAAKi9E,OAEL,MAAM/8E,EAAMF,KAAKE,IAEjBq9F,EAAS8sB,iBAAmB11G,YAAW,KACpC,MAAM00G,EAAW1lH,GAAGzD,EAAI4oH,SAExB,IAAKO,EAAU,OAGf,MAAMC,EAAeD,EAASjyC,UAAU,CAAE12E,KAAM,SAE5C4oH,GAAcA,EAAaxuG,WAG/B,MAAMwvG,EAActqH,KAAK+oH,iBAErBuB,GACDjB,EAAS9xG,MAAM+yG,GAIdhB,GAAcA,EAAaiB,SAAS,EAAG3+E,OAAO4+E,yBAE3CjtB,EAAS8sB,iBAEhBrqH,KAAKq9E,OAAO,GACZ,GACN,CAEA4rC,WAAWwB,EAAaC,GACrB1qH,KAAK2qH,SAASF,EAAaC,EAC9B,CAEAvlH,oBAAoBmpB,EAAOm8F,GACxB,MAAMltB,EAAWv9F,KAAKU,KAChBsH,EAAQu1F,EAASv1F,QAEvB,IAAKA,EAAO,OAEZ,MAAM4iH,EAAertB,EAAShnC,kBAE9B,IAAKq0D,EAAc,OAEnB,MAAMjlH,EAAS,CAAC,EAIhB,OAFAA,EAAOilH,EAAa9jH,YAAc2jH,GAAe,SAEpCziH,EAAM+mE,OAAOzgD,EAAO3oB,EACpC,CAEAR,oBAAoBmpB,GACjB,MACMtmB,EADWhI,KAAKU,KACCsH,QAEvB,GAAKA,EAEL,aAAaA,EAAMoO,OAAOkY,EAC7B,CAEA2uD,OACG,MAAM/8E,EAAMF,KAAKE,IACXmpH,EAAW1lH,GAAGzD,EAAI4oH,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAASjyC,UAAU,CAAE12E,KAAM,SAE3C4oH,IAELA,EAAalkH,UAETkkH,EAAajkH,cACdikH,EAAajkH,aAAa,CAAEzD,KAAM,SACxC,CAEAy7E,QACG,MAAMn9E,EAAMF,KAAKE,IACXmpH,EAAW1lH,GAAGzD,EAAI4oH,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAASjyC,UAAU,CAAE12E,KAAM,SAE3C4oH,IAELA,EAAa5hH,SAET4hH,EAAa3hH,cAAc2hH,EAAa3hH,eAC/C,CAEAxC,eAAeslH,EAAaC,GACzB,IAAKD,EAAa,OAElB,MAAMj4F,EAAKxyB,KAAK2rB,eAEhB,IAAK6G,EAAI,OAET,MAAM+qE,EAAWv9F,KAAKU,KAChBsH,EAAQu1F,EAASv1F,QACjBu3F,EAAKv/F,KAAK+B,GAEhB,IAAKiG,EAUF,YATAu3F,EAAGn3F,OAAOotB,QACP,CAAC,EACD,CACGlkB,QACG,iEACHiqB,SAAUgiE,EAASn8F,QAO5B,MAAM0nH,EAAU,CAAC,EACXriE,EAAY82C,EAASjnC,eAEvB7P,IAAWqiE,EAAQriE,EAAU3/C,YAAcy4F,EAAG3sF,QAAQhC,YAE1D,MAAMg6G,EAAertB,EAAShnC,kBAE1Bq0D,IAAc9B,EAAQ8B,EAAa9jH,YAAc2jH,GAErD,MAAMrvC,EAAYmiB,EAAS/mC,eAEvB4kB,IAAW0tC,EAAQ1tC,EAAUt0E,YAAc4jH,GAG/C,MAAM78F,EAAS2E,EAAG3G,mBAElB,GAAIgC,GAAQtB,YAAa,CACtB,MAAM2S,EAAarR,EAAOnC,WACpBK,EAAYyG,EAAGzG,UAEjBmT,GAAcnT,IACf+8F,EAAQ/8F,EAAUjlB,YAAc,CAAC,EACjCgiH,EAAQ/8F,EAAUjlB,YAAYo4B,EAAWnQ,MACtClB,EAAOtB,YAAY3rB,GAE5B,CAEA,aAAaoH,EAAM0hE,OAAOo/C,EAC7B,CAEAt+G,OAAOkvD,GACJ55D,MAAM0K,OAAOkvD,EAChB,iEChTY,MAAMkjC,UAAwB,IAC1Cj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMD,GAAU,UAAU09F,EAAS38F,KAAMV,GAEzCF,KAAKU,KAAO68F,EACZv9F,KAAKoG,SAAWm3F,EAASn3F,SACzBpG,KAAK+B,GAAKw7F,EAASx7F,GACnB/B,KAAK2rB,eAAiB4xE,EAAS5xE,eAE/B3rB,KAAKq1B,SAAW,GAShBr1B,KAAKq+G,gBAAkB,KAIvBr+G,KAAK6qH,wBAA0B,IAGlC,CAOIpgH,oBACD,OAAOzK,KAAK+B,GAAGgW,WAAW/X,KAAKq+G,gBAClC,CAMI/P,4BACD,OAAOtuG,KAAK+B,GAAG+pB,mBAAmB9rB,KAAK6qH,wBAC1C,CAEApqH,GAAGqqH,EAAe,IAEf,MAAM3sB,EAAM,CACTv9F,GAAIZ,KAAKE,IAAIC,UACbO,KAAM,SACNkB,KAAM,QACNC,KAAMipH,GAST,OAFK3sB,EAAIt8F,KAAKsE,SAAQg4F,EAAIp9F,OAAS,IAE5Bo9F,CACV,CAEAh5F,WAAWpD,GACR/B,KAAK+B,GAAKA,CACb,CAOAitG,mBAAmBrjF,GAChB3rB,KAAK6qH,wBAA0Bl/F,GAAgB/qB,EAClD,CAEAoE,WAAWC,GACRjF,KAAKq+G,gBAAkBp5G,GAAQrE,EAClC,CAcAgxB,SAASwD,GACN,IAAKA,IAAQA,EAAIvD,UAAYuD,EAAIrD,SAAU,OAG3C,MAAMsD,EAAWr1B,KAAKq1B,SACPA,EAASvsB,QACpBuB,GAAMA,EAAEwnB,UAAYuD,EAAIvD,SAAWxnB,EAAEynB,YAAcsD,EAAItD,YAI/C3rB,SAETkvB,EAAS/wB,KAAK,CACXutB,QAASuD,EAAIvD,QACbC,UAAWsD,EAAItD,UACfC,SAAUqD,EAAIrD,WAIjBqD,EAAIvD,QAAQzvB,GAAGgzB,EAAItD,UAAWsD,EAAIrD,UAExC,CAMAg5F,cACG/qH,KAAKq1B,SAASpxB,SAASmxB,IACpBA,EAAIvD,QAAQ0D,eAAeH,EAAItD,UAAWsD,EAAIrD,SAAS,IAG1D/xB,KAAKq1B,SAAW,EACnB,CAMA7qB,SAGG,MAAMmiB,EAAK3sB,KAAK2rB,eAEXgB,GAEDA,EAAGT,aAAeS,EAAGpC,eAAeC,YAErCmC,EAAGsF,UACT,oBClJH,MAAMqxE,EAA2B,EAAQ,OAEzC7jG,EAAOC,QAAU,cAAkD,EAGhEC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,8BAA8B09F,EAAS38F,KACjDuT,OAAOsnC,OACJ,CACG/L,MAAO,IAEVxvC,IAINF,KAAKgrH,aAAe,KACpBhrH,KAAKirH,eAAiB,KAGtBjrH,KAAKyqG,kBAAoBlN,EAASx7F,GAAG6xB,iBAClC,GAAG2pE,EAAS38F,sBAGfZ,KAAKkrH,yBACR,CAEAzqH,KACG,MAAM0qH,EAA0B,CAC7BvqH,GAAIZ,KAAKE,IAAIwvC,MACbhvC,KAAM,YACN+B,MAAO,CACJ,CACGitC,MAAO,OACPhvC,KAAM,SACNmB,KAAM,CACH,CACGnB,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,uBAM3B+8F,EAAMr+F,MAAMW,GAAG,CAAC0qH,IAStB,OAPAA,EAAwB1oH,MAAM6B,KAC3B6P,OAAOsnC,OAAO,CAAE/L,MAAO,MAAQ1vC,KAAKorH,YAAY3qH,MAChD0T,OAAOsnC,OAAO,CAAE/L,MAAO,QAAU1vC,KAAKqrH,cAAc5qH,cAGhD09F,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,EAAIu2D,SACNx4D,MAAMwD,KAAKvB,EAAIu2D,SAEf7oD,QAAQ4R,IAAI,CACfrhB,KAAKorH,YAAY9nH,KAAKvB,EAAIu2D,GAC1Bt4D,KAAKqrH,cAAc/nH,KAAKvB,EAAIu2D,KAG/Bt4D,KAAKkrH,0BAEL,MAAMv+F,EAAK3sB,KAAK2rB,eAEhB,GAAIgB,EAAI,CACL,MAAM4wE,EAAWv9F,KAAKU,KAGtB68F,EAAS3rE,SAAS,CACfC,QAASlF,EACTmF,UAAW,WACXC,SAAU,IAAM/xB,KAAKsrH,gBAGxB/tB,EAAS3rE,SAAS,CACfC,QAASlF,EACTmF,UAAW,kBACXC,SAAU,IAAM/xB,KAAKsrH,gBAGxB/tB,EAAS3rE,SAAS,CACfC,QAASlF,EACTmF,UAAW,eACXC,SAAU,IAAIjQ,IAAM9hB,KAAKsrH,eAAexpG,IAE9C,CAEA9hB,KAAKsrH,aACR,CAEA9gH,SACG1K,MAAM0K,SAENxK,KAAKkrH,0BACLlrH,KAAKsrH,aACR,CAEIF,kBACD,OAAQprH,KAAKgrH,aACVhrH,KAAKgrH,cACLhrH,KAAKU,KACDwmB,QACA4F,MAAM1Z,GAAkB,OAAZA,GAAGjM,OACfhH,WACV,CAEIkrH,oBACD,OAAQrrH,KAAKirH,eACVjrH,KAAKirH,gBACLjrH,KAAKU,KACDwmB,QACA4F,MAAM1Z,GAAkB,SAAZA,GAAGjM,OACfhH,WACV,CAEAmrH,YAAY18F,GACT,MAAMjC,EAAK3sB,KAAK2rB,eACVzrB,EAAMF,KAAKE,IACXmwG,EAAS1sG,GAAGzD,EAAIwvC,QAElB/iB,IACIiC,IAAUA,EAAWjC,EAAGJ,aAIzBqC,GACAjC,EAAGT,aAAeS,EAAGpC,eAAeC,YAClCmC,EAAGT,aAAeS,EAAGpC,eAAeyB,cAQ7BhsB,KAAKyqG,kBAAkBllG,QAAQqpB,IAI5CyhF,EAAOh2B,UAAU,MACjBr6E,KAAKorH,aAAa5gH,aAElB6lG,EAAOh2B,UAAU,QACjBr6E,KAAKqrH,eAAe7gH,YAdjB6lG,EAAOh2B,UAAU,OAgB1B,CAEA6wC,0BACG,MAAMv+F,EAAK3sB,KAAK2rB,eACV8+E,EAAoBzqG,KAAKyqG,kBAE3B99E,GAAIjB,WAAY++E,EAAkB52E,WAAWlH,EAAGjB,WAAW3kB,UAC1D0jG,EAAkB52E,WAAW,IAElC42E,EAAkB5lG,SACf7E,KAAKoG,SAASkjB,kBACXtpB,KAAKU,KAAKf,YAAY8iC,gBAAgBnZ,iBAE/C,oBCnKH,MAAMszE,EAAkB,WAExBn9F,EAAOC,QAAU,cAAuCk9F,EACrDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,mBAAmB09F,EAAS38F,KAAMV,GAE5DF,KAAKmC,QAAU,KAEfnC,KAAKuoG,eAAiB,CAEtB,EAIAvoG,KAAKurH,iBAAmB,CAExB,EAIAvrH,KAAKwrH,mBAAsBtnD,IACxBq5B,EAAST,WAAW54B,EAAO,CAEjC,CAEAzjE,GAAGqqH,GAEA,MAAM5jG,EAAQlnB,KAAKU,KAAK22D,sBAClBo0D,EAAWzrH,KAAK0rH,YAAYxkG,GAC5Bi3E,EAAMr+F,MAAMW,GAAGqqH,GAAgBW,GAIrC,cAFOttB,EAAIv8F,KAEJu8F,CACV,CAGAh5F,WAAWpD,EAAIu2D,EAAc,EAAGn2D,EAAU,CAAC,SAClCrC,MAAMwD,KAAKvB,GAEjB/B,KAAKmC,QAAUA,EAEf,MAAMif,EAAW,GAUjBzd,GAAG3D,KAAKE,IAAIC,YAAYsE,OAAO,MAAO,eAAe6zD,KAErD,MAAMiwC,EAAiBvoG,KAAKuoG,eAG5B,IAAK,MAAMlkG,KAAOkkG,IAGXA,EAAelkG,KACfrE,KAAKU,KAAKwmB,OAAO9T,GAAMA,EAAExS,KAAOyD,IAAK8B,UAKrCmyD,EACDl3C,EAAS9c,KAAKikG,EAAelkG,GAAKf,KAAKvB,EAAIu2D,EAAan2D,IAK3DwB,GAAG3D,KAAKurH,iBAAiBlnH,IAAMM,cAG5B8K,QAAQ4R,IAAID,EACrB,CAEAsqG,YAAYxkG,GACT,MAAMrlB,EAAO,GACP8pH,EAAe,CAAC,EAEtB,IAAIC,EACAC,EAEJ,MAAMzlH,EAAWpG,KAAKoG,SAChBshF,EAAkB1nF,KAAKU,KAAKf,YAAY8iC,gBAsF9C,OApFAvb,EAAMjjB,SAASmP,IAGZ,IAAIjT,EAEJ,IACGA,EAAYiT,EAAEjT,WAOjB,CANE,MAAOgI,GACNhI,EAAYiT,EAAEjT,UAAUH,KAAK+B,GAAGi4B,MAEhC,MAAMv5B,EAAKN,EAAUM,GAErBN,EAAUM,IAAK,IAAOA,GAAI8yB,KAAKpzB,EAClC,CAcA,GAZAH,KAAKuoG,eAAen1F,EAAExS,IAAMT,EAYR,MAAhBiT,EAAEzS,SAAS22D,GAAalkD,EAAEzS,SAAS22D,IAAMs0D,EAAa,CACvDA,EAAcx4G,EAAEzS,SAAS22D,GAAKz1D,EAAKsE,OACnC0lH,EAAc,EAEd,MAAMC,EAAS,CACZ3qH,KAAM,IAIH4qH,EAAY3lH,EAAS8wD,SAAWwwB,EAAgBxwB,QAEtD,IAAK,IAAI7jD,EAAI,EAAGA,EAAI04G,EAAW14G,IAC5By4G,EAAO3qH,KAAKmD,KAAK,CACd6yD,QAAS/wD,EAAS+wD,UAAU9jD,GACvBiS,SAASlf,EAAS+wD,QAAQ9jD,IAC1Bq0E,EAAgBvwB,UAG3Bt1D,EAAKyC,KAAKwnH,EACb,CAGA,MAAME,EAAUnqH,EAAKsE,OAAS,EACxB8lH,EAASpqH,EAAKmqH,GACdE,EAAS94G,EAAEzS,SAASuM,GAAK,EACzBi/G,EAAS,GAAGH,KAAWE,IAE7B,IAAIE,EAAU,EAEVT,EAAaQ,IACd3jH,QAAQ+G,MACL,aAAapP,GAAWD,KAAKC,uCAAuCwrH,EAAaQ,GAAQjsH,KAAKC,wCAGpGwrH,EAAaQ,GAAUhsH,EAEnB8rH,EAAO9qH,KAAK+qH,IAAS/0D,UACtBi1D,EAAUH,EAAO9qH,KAAK+qH,GAAQ/0D,SAEjC,MAAMgnC,EAAMh+F,EAAUM,KAEtBT,KAAKurH,iBAAiBn4G,EAAExS,IAAMu9F,EAAIv9F,GAClCu9F,EAAIhnC,QAAUi1D,EAGdH,EAAO9qH,KAAK+qH,GAAU/tB,EAGtBn+F,KAAK4xB,SAAS,CACXC,QAASze,EACT0e,UAAW,aACXC,SAAU/xB,KAAKwrH,mBAAmBj4F,KAAKvzB,QAG1C6rH,GAAa,IAGThqH,CACV,CAEA2I,SACG1K,MAAM0K,SAGN2J,OAAOxO,OAAO3F,KAAKuoG,gBAAgBtkG,SAAS+R,IACzCA,EAAIxL,UAAU,GAEpB,oBCtLH,MAAMoyF,EAAkB,WAClB6I,EAAwB,EAAQ,OAChCrF,EACH,WAEH3gG,EAAOC,QAAU,cAAsCk9F,EACpDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,kBAAkB09F,EAAS38F,KACrCuT,OAAOsnC,OACJ,CACG4wE,WAAY,GACZC,aAAc,IAEjBpsH,IAINF,KAAKi+F,SAAW,IACnB,CAEAx9F,KACG,MAAMP,EAAMF,KAAKE,IACXi+F,EAAMr+F,MAAMW,GAAG,CAClB,CACGG,GAAIV,EAAImsH,WACR3rH,KAAM,aACNgB,OAAQ,IACRD,KAAM,CACHb,GAAIV,EAAIosH,aACR5rH,KAAM,aACN6rH,SAAU,GACVC,SAAU,GACV5qH,KAAM,QACNT,KAAM,IAETiB,GAAI,CACDqqH,cAAetnH,UACZ,MAAM6qB,EAAMrsB,GAAGzD,EAAImsH,YAAYnV,uBAEzBl3G,KAAK0B,OAAOsuB,EAAI,MAQlC,cAFOmuE,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACXysB,EAAK3sB,KAAK2rB,eAEhB,IAAKgB,EAAI,OAET,MAAM+/F,EAAW/oH,GAAGzD,EAAIosH,cAGxBtsH,KAAKi+F,SAAWj+F,KAAKk+F,eAAe/9F,YACpCH,KAAKi+F,SAAS36F,KAAK,CAChB5C,KAAMV,KAAKU,KACXirB,eAAgBgB,IASnBA,EAAGm/C,iBAAiB4gD,GACpB//F,EAAGvqB,GAAG,oBAAoB,KACvBpC,KAAKi9E,MAAM,IAEdtwD,EAAGvqB,GAAG,mBAAmB,KACtBpC,KAAKq9E,OAAO,IAEf1wD,EAAGvqB,GAAG,YAAY,KACfpC,KAAK2sH,YACL3sH,KAAK4sH,YAAY,IAEpBjgG,EAAGvqB,GAAG,UAAU,KACbpC,KAAK2sH,YACL3sH,KAAK4sH,YAAY,IAEpBjgG,EAAGvqB,GAAG,UAAU,KACbpC,KAAK2sH,YACL3sH,KAAK4sH,YAAY,IAEpBjgG,EAAGvqB,GAAG,UAAU,KACbpC,KAAK2sH,YACL3sH,KAAK4sH,YAAY,GAYvB,CAEApiH,SACG1K,MAAM0K,SAEN,MAAMmiB,EAAK3sB,KAAK2rB,eAEXgB,GAEDA,EAAGT,aAAeS,EAAGpC,eAAe0B,aAAajsB,KAAK4sH,YAC7D,CAEIrxD,gBACD,OAAOv7D,KAAK6sH,YAAc,CAC7B,CAEItxD,cAAUvrC,GACXhwB,KAAK6sH,WAAa78F,CACrB,CAEAitD,OACG,MAAM/8E,EAAMF,KAAKE,IACX4sH,EAASnpH,GAAGzD,EAAIosH,cAChBS,EAASppH,GAAGzD,EAAImsH,YAGtB,IAAKU,IAAWD,EAAQ,OAExBA,EAAO1nH,UAEP,MAAMo6F,EAAUx/F,KAAK+B,GAAG0Y,MAEnBsyG,EAAO1nH,cAAcm6F,EAAQ97F,OAAOqpH,EAAQvtB,EAAQ57F,aAEzDmpH,EAAO1nH,aAAa,CAAEzD,KAAM,QAC/B,CAEAy7E,QACG,MAAMn9E,EAAMF,KAAKE,IACX4sH,EAASnpH,GAAGzD,EAAIosH,cAChBS,EAASppH,GAAGzD,EAAImsH,YAGtB,IAAKU,IAAWD,EAAQ,OAExBA,EAAOplH,SAEP,MAAM3F,EAAK/B,KAAK+B,GAEZgrH,IAAWA,EAAOplH,cACnB5F,EAAG0Y,MAAM/W,OAAOqpH,EAAQhrH,EAAG0Y,MAAM7W,aAEpCmpH,EAAOplH,cACV,CAEAilH,aACG,MAAM1sH,EAAMF,KAAKE,IACXszD,EAAWxzD,KAAKoG,SAASotD,SACzBF,EAActzD,KAAKoG,SAASktD,YAC5B05D,EAAU,GACVrgG,EAAK3sB,KAAK2rB,eAEhB,IAAKgB,EAGF,YAFA3sB,KAAKq9E,QAKR,MAAMyvC,EAASnpH,GAAGzD,EAAIosH,eAAiB3oH,GAAGzD,EAAIC,WAE9C,IAAK2sH,GAAU1sE,MAAM0sE,EAAOG,QAGzB,YAFAjtH,KAAKq9E,QAKR,MAAMkgB,EAAWv9F,KAAKU,KAChBo6D,EAASx1C,SAAStlB,KAAKoG,SAAS00D,QAChCoyD,EAAc3mH,KAAKC,OACrBsmH,EAAOG,OAAS,GAAc,GAATnyD,GAAeA,GAGlCj5D,EAAO8qB,EAAGyG,UAGhB,GAAI05F,EAAOK,gBAAkBtrH,EAAKsE,OAG/B,YAFAnG,KAAKq9E,QAKRyvC,EAAOK,cAAgBtrH,EAAKsE,OAG5BnG,KAAKotH,UAAYN,EAAOhiH,cAAgBgiH,EAAOhiH,gBAAgB3E,OAAS,EAExE,IAAIknH,EAAUxrH,EAAKsE,OAEfwmB,EAAGvmB,SAASojB,SAA8B,IAAnBxpB,KAAKotH,UAAiBC,EAAUxrH,EAAKsE,OACvDtE,EAAKsE,OAASnG,KAAKotH,UAAY,KAAIC,EAAUrtH,KAAKotH,UAAY,IAEvE,IAAK,IAAI/5G,EAAIrT,KAAKotH,UAAW/5G,EAAIg6G,EAASh6G,IAAK,CAE5C,MAAM2oD,EAAY,IAAIypC,EAAsBlI,EAAU17F,EAAKwR,GAAGzS,IACxDu9F,EAAMniC,EAAUv7D,KAGtB09F,EAAIv8F,KAAO,QACXu8F,EAAIj9F,IAAM,kBAENoyD,GAAeE,KAChB2qC,EAAIj9F,KAAO,8BAA8BW,EAAKwR,GAAGzS,KAE7C0yD,IAAa6qC,EAAIj9F,KAAO,mBAExBsyD,IAAU2qC,EAAIj9F,KAAO,kBAG5Bi9F,EAAIouB,SAAW,GACfpuB,EAAIquB,SAAW,EACfruB,EAAI73B,SAAW4mD,EAAc,GAC7B/uB,EAAIjiB,SAAWgxC,EAEXJ,EAAO7hH,SACR6hH,EAAO7hH,QAAQkzF,GAAM,GACrBniC,EAAU14D,KAAK,KAAM,GACrBqR,WAAWqnD,EAAUj5B,YAAYlhC,EAAKwR,IAAK,IACvC25G,EAAQ1oH,KAAK65F,EACvB,CAEA,GAAI6uB,EAAQ7mH,OAAQ,CACjB,MAAMmnH,EAAa,CAChB1sH,GAAIV,EAAIosH,aACR5rH,KAAM,aACN6rH,SAAU,GACVC,SAAU,GACV5qH,KAAM,QACNT,KAAM6rH,GAGThtH,KAAK+B,GAAG0Y,MAAMha,GAAG6sH,EAAY3pH,GAAGzD,EAAImsH,YAAa1oH,GAAGzD,EAAIosH,eAExD,IAAK,IAAIjrF,EAAIrhC,KAAKotH,UAAW/rF,EAAIgsF,EAAShsF,IAAK,CAC5C,MAAM26B,EAAY,IAAIypC,EAAsBlI,EAAU17F,EAAKw/B,GAAGzgC,IAE9Do7D,EAAU14D,KAAK,KAAM,GACrBqR,WAAWqnD,EAAUj5B,YAAYlhC,EAAKw/B,IAAK,EAC9C,CACH,CAEI19B,GAAGzD,EAAImsH,cACR1oH,GAAGzD,EAAImsH,YAAY9B,SAAS,EAAGvqH,KAAKu7D,YAEhCjI,GAAeE,KAChBs5D,EAAOp/G,MAAM+xF,QAAWp1F,IACrB,IAAIkjH,GAAU,EACVC,EAAOnjH,EAAE4iD,MAAQ,GAQrB,GALKugE,EAAKrnH,SACPqnH,EAAKlpH,KAAK+F,EAAE28C,QACZwmE,EAAKlpH,KAAK+F,EAAE28C,OAAOgjC,aAGlBx2B,EACD,IAAK,IAAI1xC,KAAK0rG,EACX,GACG1rG,EAAEmoC,WACFnoC,EAAEmoC,UAAU58C,QAAQ,+BAAiC,EACtD,CACCkgH,GAAU,EACVzrG,EAAEkoE,WAAWA,WAAW9G,UAAUj/E,SAASV,IACxC,GAAIA,EAAE8J,QAAQ,eAAiB,EAAG,CAE/B,MAAMqgB,EAASnqB,EAAEyP,QAAQ,aAAc,IACvChT,KAAKi+F,SAASnB,WAAWtpC,EAAU9lC,EAEtC,KAEH,KACH,CAIN,GAAI4lC,IAAgBi6D,EACjB,IAAK,IAAIzrG,KAAK0rG,EACX,GACG1rG,EAAEmoC,WACFnoC,EAAEmoC,UAAU58C,QAAQ,wBAA0B,EAC/C,CACCyU,EAAEkoE,WAAWA,WAAW9G,UAAUj/E,SAASV,IACxC,GAAIA,EAAE8J,QAAQ,eAAiB,EAAG,CAE/B,MAAMqgB,EAASnqB,EAAEyP,QAAQ,aAAc,IACvChT,KAAKi+F,SAASnB,WAAWxpC,EAAa5lC,EAEzC,KAGH,KACH,CAEN,IAMT,MAAMvmB,EAAOo2F,EAASp2F,KAAK6L,QAAQ,YAAa,IAEhD85G,EAAOp/G,MAAMg0E,aACV,UACA,sBAAsBv6E,KAAQo2F,EAAS38F,MAG1CksH,EAAOhiH,gBAAgB7G,SAAQ,CAACupF,EAAOn6E,KACpC,MAAMxD,EAAOhO,EAAKwR,EAAIrT,KAAKotH,WAAiB,KACtC1sH,EAAO8sF,EAAM9/E,MAEnBhN,EACI+gF,cAAc,8BACbC,aACC,UACA,iBAAiBv6E,KAAQ0I,KAAQ0tF,EAAS38F,MAEhDF,EACI+gF,cAAc,gCACbC,aACC,UACA,wBAAwBv6E,KAAQ0I,KAAQ0tF,EAAS38F,KACnD,IAGPZ,KAAKq9E,OACR,CAEAsvC,YACG,MAAMzsH,EAAMF,KAAKE,IACXotH,EAAa,CAChB1sH,GAAIV,EAAIosH,aACR5rH,KAAM,aACNkB,KAAM,QACNY,QAAS,GACTtB,IAAK,CAAEusH,WAAY,sBACnBtsH,KAAM,IAGTnB,KAAK+B,GAAG0Y,MAAMha,GAAG6sH,EAAY3pH,GAAGzD,EAAImsH,YAAa1oH,GAAGzD,EAAIosH,cAC3D,CASAnnH,aAAa6qB,GACV,MAAM9vB,EAAMF,KAAKE,IACX4sH,EAASnpH,GAAGzD,EAAIosH,cAChBS,EAASppH,GAAGzD,EAAImsH,YAEhB/0D,EAAItnC,EAAIsnC,EAGd,GAFgBw1D,EAAO7jB,QAAU8jB,EAAO9jB,QAE1B3xC,GAJG,GAIY,CAC1B,GAAIt3D,KAAK0tH,cAAe,OAExB1tH,KAAKu7D,UAAYjE,EAEjB,MAAM3qC,EAAK3sB,KAAK2rB,eAEhB,IAAKgB,EAAI,OAET,GAAImgG,EAAOhiH,gBAAgB3E,QAAUwmB,EAAG2G,WAAY,OAGpDtzB,KAAKi9E,aAECtwD,EAAGsF,SAAS66F,EAAOhiH,gBAAgB3E,QAAU,GAEnDnG,KAAK0tH,cAAgB/4G,YAAW,KAC7B3U,KAAK0tH,cAAgB,IAAI,GACzB,KACN,CACH,CAEIxvB,qBACD,OAAQl+F,KAAKmgG,iBACVngG,KAAKmgG,kBAAoB,IAAIC,CACnC,oBC9YH,MAAMkG,EAA4B,EAAQ,OAE1C7mG,EAAOC,QAAU,cAA4C,EAG1DC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,wBAAwB09F,EAAS38F,KAAMV,EACpE,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QAEvB,OAAO9F,MAAMW,GAAG,CACb2B,GAAI,CAED+0E,cAAe,KACZ,MAAM+Q,EAAS,mBAAmBtiF,GAAOkB,cACtClB,GAAOhF,MACN28F,EAAS7kC,yBAAyB93D,IAAM28F,EAASxoF,OAAOnU,KAE5D+C,GAAG3D,KAAKE,IAAIytH,aAAajgH,MAAMg0E,aAAa,UAAWwG,EAAO,IAI1E,CAEArjF,SAASmR,GACN,IAAIyoE,EAAW,GAIZA,EADCzoE,GAAOnC,KAAK0D,MAAMvB,GAEhB,8DAEU,wDAEhBlW,MAAM+E,SAAS45E,EAClB,oBCtCH,MAAMtvD,EAAgB,EAAQ,OACxBm0E,EAA2B,EAAQ,OAEzC7jG,EAAOC,QAAU,cAAoC4jG,EAClD3jG,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,gBAAgB09F,EAAS38F,KAAMV,EAC5D,CAEAO,KAMG,MAAO,CACJmB,KAAM,OACND,YAAY,EACZE,KAAM,CACH,CACGJ,KAVC3B,MAAMW,OAcnB,CAEA+J,SACG,MAAM+yF,EAAWv9F,KAAKU,KAEtB,IACG,MAAMwnF,EAAS,UAAUqV,EAASp2F,MAAM8gB,MAAM,KAAK,MAAMs1E,EAAS38F,KAElE+C,GAAG3D,KAAKE,IAAIC,WAAWuN,MAAMg0E,aAAa,UAAWwG,EAGxD,CAFE,MAAO79E,GACN7B,QAAQC,KAAK,0BAA2B4B,EAC3C,CAGA,MAAMmoB,EAAKxyB,KAAK2rB,eAEhB,GAAI6G,EAAI,CACL,MAAM5D,EAAW4D,EAAGjG,YAEhBqC,GAAU5uB,KAAK+iC,YAAYnU,GAE/B5uB,KAAK4xB,SAAS,CACXC,QAASW,EACTV,UAAW,eACXC,SAAU,IAAIjQ,IAAM9hB,KAAK+iC,eAAejhB,KAG3C9hB,KAAK4xB,SAAS,CACXC,QAASW,EACTV,UAAW,SACXC,SAAW67F,IACWp7F,EAAGjG,aAEN3rB,KAAOgtH,EAAWhtH,IAC/BZ,KAAK+iC,YAAY6qF,EAAW,IAIrC5tH,KAAK4xB,SAAS,CACXC,QAASW,EACTV,UAAW,SACXC,SAAW87F,IACWr7F,EAAGjG,aAEN3rB,KAAOitH,EAAWjtH,IAC/BZ,KAAK+iC,YAAY8qF,EAAW,GAGxC,CAEA/tH,MAAM0K,QACT,CAEAu4B,YAAYhV,EAAU,CAAC,IACL/tB,KAAKU,KAAKwmB,SAAW,IAAIvZ,MAAK,CAACC,EAAGC,IACzCD,GAAGhI,OAAUiI,GAAGjI,MAID,YAAhBgI,EAAEhI,MAAMvB,KAAqC,cAAhBwJ,EAAEjI,MAAMvB,KAC9B,EACc,cAAhBuJ,EAAEhI,MAAMvB,KAAuC,YAAhBwJ,EAAEjI,MAAMvB,IACtC,EAEH,EAT4B,IAYhCJ,SAAS+C,IACZ,IAAIgP,EAEJ,GAAIhP,EAAEpB,MAAO,CACV,MAAMA,EAAQoB,EAAEpB,QAEhB,IAAKA,EAAO,OAGZ,OAAQA,EAAMvB,KACX,IAAK,gBA+DL,IAAK,OACF2R,EAAMpQ,EAAMwyC,mBAAmBrqB,GAE/B,MA7DH,IAAK,OAGF,GAFA/X,EAAM+X,EAAQnoB,EAAMkB,aAEfkP,EAAK,CACPA,EAAM,GAEN,KACH,CAEA,GAAkC,IAA9BpQ,EAAMQ,SAASy4C,WAAkB,CAClC,IAAIivE,EAAQ,GAMZ,GAJAloH,EAAMQ,SAASjE,QAAQ8B,SAAS9B,IACzBA,EAAQvB,KAAOoV,IAAK83G,EAAQ3rH,EAAQkM,KAAI,IAG3CzI,EAAMQ,SAAS04C,UAAW,CAC3B,IAAI4sC,EAAQ,SACR3E,EAAiB,GAErBnhF,EAAMQ,SAASjE,QAAQ8B,SAASgtE,IACzBA,EAAE5iE,OAASy/G,IACZpiC,EAAQza,EAAE9xB,IACV4nC,EAAiB,iBACpB,IAGH+mC,EAAQ,uCAAuC/mC,+BAA4C2E,wBAA4BoiC,iBAC1H,CAEA93G,EAAM83G,CACT,KAAO,CACJ,MAAM3lC,EAAQ,GAEd,IAAI2lC,EAAQ,GAEZ93G,EAAI/R,SAAStB,IACV,IAAIokF,EAAiB,GACjBC,EAAY,GAEZphF,EAAMQ,SAAS04C,WAAan8C,EAAMw8C,MACnC4nC,EAAiB,iBACjBC,EAAY,eAAerkF,EAAMw8C,QAGpCv5C,EAAMQ,SAASjE,QAAQ8B,SAAS9B,IACzBA,EAAQvB,KAAO+B,EAAM/B,KAAIktH,EAAQ3rH,EAAQkM,KAAI,IAEpD85E,EAAM7jF,KACH,uCAAuCyiF,aAA0BC,gBAAwBrkF,EAAM/B,aAAaktH,kBAC9G,IAGJ93G,EAAMmyE,EAAM75E,KAAK,GACpB,CAEA,MAOH,IAAK,OACF0H,EAAM+X,EAAQnoB,EAAMkB,YAEpB,MAEH,IAAK,UACF,GAAIinB,EAAS,CACV,MAAMyE,EAAKxyB,KAAK2rB,eACV+O,EAAKlI,EAAKA,EAAG9G,WAAa,KAC1BqiG,KACFrzF,GAAMA,aAAcvL,GAExBnZ,EAAMpQ,EAAM0a,OAAOyN,EAASggG,EAC/B,CAEA,MAEH,QACG/3G,EAAMpQ,EAAM0a,OAAOyN,GAG5B,CAGA,MAAMu6E,EAAathG,EAAE7G,UAAU,KAAMH,KAAKE,IAAIytH,YAI9CrlB,GAAYzjG,WAAWmR,GACvBsyF,GAAYrhC,cAAcl5C,EAAQ,GAExC,oBCvMH,MAAMu4E,EAA4B,EAAQ,OAE1C7mG,EAAOC,QAAU,cAA2C,EAGzDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,uBAAuB09F,EAAS38F,KAAMV,EACnE,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAEtB,OAAOtG,MAAMW,GAAG,CACb2B,GAAI,CAED+0E,cAAe,KACZ,MAGM+Q,EAAS,oBAFZqV,EAAS33F,OAAO8+G,GAAQA,EAAI9jH,KAAOwF,EAASsE,WACvC5D,YAAc,MAEnBV,EAASsE,WACR6yF,EAAS7kC,yBAAyB93D,IAAM28F,EAASxoF,OAAOnU,KAE5D+C,GAAG3D,KAAKE,IAAIytH,aAAajgH,MAAMg0E,aAAa,UAAWwG,EAAO,IAI1E,CAEArjF,SAASmR,GACN,MAAMvQ,EAAO,GAET0H,MAAMC,QAAQ4I,GACfA,EAAI/R,SAASypB,IACVjoB,EAAKnB,KACF,wCAAwCopB,EAAOrf,cACjD,IAEF5I,EAAKnB,KAAK,wCAAwC0R,EAAI3H,eAE3DvO,MAAM+E,SAASY,EAAK6I,KAAK,IAC5B,mBC1CH,MAAMg4F,EAA4B,EAAQ,OAE1C7mG,EAAOC,QAAU,cAA0C,EAGxDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,sBAAsB09F,EAAS38F,KAAMV,EAClE,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QACjBk2D,EAAayhC,EAAS/hC,kBAE5B,IAAIwyD,EAAgB,GAEhBlyD,GAAY11D,UAAU6sD,YAEpB+6D,EADuC,QAAtClyD,EAAW11D,SAAS0uD,cAElB,8FAGA,2GAGT,MAAMyN,GAAYyrD,EAAgB,YAE9Bh7G,QAAQ,WAAY8oD,EAAW11D,SAAStE,YACxCkR,QAAQ,WAAYpN,EAAQA,EAAMxE,MAAQ,IAC1C4R,QAAQ,YAAapN,EAAQA,EAAMmqE,eAAexN,SAAS,CAAC,GAAK,IAErE,OAAOziE,MAAMW,GAAG,CACbwhH,UAAW,GACXlhH,OAAQ,GACRwhE,WACAngE,GAAI,CAED+0E,cAAe,KACZ,MAAM+Q,EAAS,iBAAiBtiF,GAAOkB,cACpClB,GAAOhF,MACN28F,EAAS7kC,yBAAyB93D,IAAM28F,EAASxoF,OAAOnU,KAE5D+C,GAAG3D,KAAKE,IAAIytH,aAAajgH,MAAMg0E,aAAa,UAAWwG,EAAO,IAI1E,CAEA19E,SACG1K,MAAM0K,OAEN,MAAM+yF,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QAEvB,IAAKA,EAAO,OAEZ,MAAMqoH,EAActqH,GAAG3D,KAAKE,IAAIytH,YAEhC,IAAKM,EAAa,OAElB,MACGlgG,EADewvE,EAAS/hC,kBACJ7vC,eAAeY,aAAe,CAAC,EACnDhqB,EAAO0rH,EAAYvgH,MAEtB9H,EAAM6qE,cAAc1iD,EAAS,KAAMxrB,EAAM,CACtCqjD,UAAU,GAEhB,CAEA/gD,SAASmR,GACN,MAAMpQ,EAAQ5F,KAAKU,KAAKkF,QAExB,IAAKA,EAAO,OAEZ,MAAMqoH,EAActqH,GAAG3D,KAAKE,IAAIytH,YAEhC,IAAKM,EAAa,OAElB,MAAMlgG,EAAU,CAAC,EAEjBA,EAAQnoB,EAAMkB,YAAckP,EAE5BpQ,EAAMf,SAASopH,EAAalgG,EAC/B,oBCnFH,MAAMu4E,EAA4B,EAAQ,OAE1C7mG,EAAOC,QAAU,cAAyC,EAGvDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,qBAAqB09F,EAAS38F,KAAMV,EACjE,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QACjBu4F,EAAM,CACT/7F,GAAI,CAED+0E,cAAe,KACZ,MAAM+Q,EAAS,gBAAgBtiF,GAAOkB,cAAclB,GAAOhF,MACxD28F,EAAS7kC,yBAAyB93D,IAAM28F,EAASxoF,OAAOnU,KAG3D+C,GAAG3D,KAAKE,IAAIytH,aAAajgH,MAAMg0E,aAAa,UAAWwG,EAAO,IAIjE9hF,EAAWpG,KAAKoG,SAItB,OAFIA,EAASrF,SAAQo9F,EAAIp9F,OAASqF,EAASrF,QAEpCjB,MAAMW,GAAG09F,EACnB,CAEAt5F,SAASmR,GACN,MAAMpQ,EAAQ5F,KAAKU,KAAKkF,QAExB,IAAKA,EAGF,YAFA9F,MAAM+E,SAAS,IAKlB,MAAMqpH,EAAiBl4G,GAAOpQ,EAAMQ,SAASs4C,gBAE7C,IAAKwvE,EAGF,YAFApuH,MAAM+E,SAAS,IAKlB,MAAMspH,EAAWvoH,EAAMyhE,SAAS6mD,GAC1B9nH,EAAWpG,KAAKoG,SAOhB6+E,EAAgB,CACnB,oCACA,8GAA8GkpC,gBARnG/nH,EAASpF,OAAS4E,EAAMQ,SAASk4C,YAAc,kBAC9Cl4C,EAASrF,OACnB,GAAGqF,EAASrF,WACZ6E,EAAMQ,SAASo4C,YACf,GAAG54C,EAAMQ,SAASo4C,gBAClB,+BAIF,YAAY2vE,uFACZ,gBACD7/G,KAAK,IAEPxO,MAAM+E,SAASogF,EAClB,oBChEH,MAAM2X,EAAkB,WAExBn9F,EAAOC,QAAU,cAAwCk9F,EACtDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,oBAAoB09F,EAAS38F,KACvCuT,OAAOsnC,OACJ,CACGkyE,WAAY,IAEfztH,GAGT,CAEAO,GAAG2tH,EAAwB,CAAC,GACzB,MAAM7wB,EAAWv9F,KAAKU,KAGhB0F,EAAWm3F,EAAS/hC,mBAAmBp1D,UAAY,CAAC,EAE1D,IAAI4nH,EAAgB,GAIdA,EAFF5nH,EAAS6sD,UACqB,QAA3B7sD,EAAS0uD,cAEP,uGAGA,iMAGY,YAErB,MAAMlvD,EAAQ23F,EAAS33F,QACjB28D,EAAWyrD,EACbh7G,QAAQ,WAAY5M,EAAStE,YAC7BkR,QAAQ,WAAYpN,GAAOxE,OAAS,IAExC,IAAIL,EAAS,GAEkB,QAA3BqF,EAAS0uD,gBAAyB/zD,GAAkB,GAErB,IAA/B6E,GAAOQ,UAAUm4C,YAClBx9C,EAASukB,SAAS1f,EAAMQ,SAASo4C,cAAgBz9C,GAEpD,MAAMo9F,EAAMr+F,MAAMW,GAAG,CAClB0T,OAAOsnC,OACJ,CACG76C,GAAIZ,KAAKE,IAAIytH,WACbjtH,KAAM,WACNiB,YAAY,EACZZ,OAAQA,EACRynF,QAAwB,SAAf5iF,GAAOvB,IAChBk+D,SAAUA,EACV14D,KAAM,CAAE64E,QAAS,KAEpB0rC,KAMN,cAFOjwB,EAAIv8F,KAEJu8F,CACV,CAMAt5F,SAASmR,EAAKq4G,GACX,MAAMJ,EAActqH,GAAG0qH,GAAYruH,KAAKE,IAAIytH,YAE5C,IAAKM,EAAa,OAElB,MAAMroH,EAAQ5F,KAAKU,KAAKkF,QAEL,WAAfA,GAAOvB,KAAmC,aAAfuB,GAAOvB,IAMtC4pH,EAAYphC,UAAU,CAAEnK,QAAS1sE,IAL9Bi4G,EAAYphC,UAAU,CAAEnK,QAAS1sE,EAAIhD,QAAQ,OAAQ,SAM3D,oBCrFH,MAAMszF,EAA4B,EAAQ,OAE1C7mG,EAAOC,QAAU,cAAwC,EAGtDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,oBAAoB09F,EAAS38F,KAAMV,EAChE,CAEAO,KACG,MAAMmF,EAAQ5F,KAAKU,KAAKkF,QAClBu4F,EAAM,CACTj9F,IAAK,UACLkB,GAAI,CAED+0E,cAAe,KACZ,MAAM+Q,EAAS,eAAetiF,GAAOkB,cAAclB,GAAOhF,MACvDZ,KAAKU,KAAKg4D,yBAAyB93D,IAAMZ,KAAKU,KAAKqU,OAAOnU,KAG7D+C,GAAG3D,KAAKE,IAAIytH,aAAajgH,MAAMg0E,aAAa,UAAWwG,EAAO,IAIjE9hF,EAAWpG,KAAKoG,SAItB,OAFIA,EAASrF,SAAQo9F,EAAIp9F,OAASqF,EAASrF,QAEpCjB,MAAMW,GAAG09F,EACnB,mBC7BH,MAAMmI,EAA4B,EAAQ,OAE1C7mG,EAAOC,QAAU,cAAwC,EAGtDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,oBAAoB09F,EAAS38F,KAAMV,EAChE,CAEI+pD,gBACD,MAAO,gBACV,CAEA9kD,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAGjB/B,KAAK6E,SAAS,eAAe7E,KAAKiqD,oBACrC,CAEAqkE,aACG,MAAML,EAActqH,GAAG3D,KAAKE,IAAIytH,YAEhC,GAAKM,EAEL,OAAOA,EAAYvgH,MAAMo8E,uBAAuB9pF,KAAKiqD,WAAW,EACnE,CAEAplD,SAASmR,GAEN,MAAMvQ,EAAO,GAETuQ,IAAQ7I,MAAMC,QAAQ4I,IAAMvQ,EAAKnB,KAAK0R,GAE1CrB,YAAW,KAER,MAAM45G,EAAUvuH,KAAKsuH,aAErB,IAAKC,EAAS,OAAO,EAErB,MAAM3oH,EAAQ5F,KAAKU,KAAKkF,QAClBwlF,EAAW,QAE0B,IAAhCxlF,EAAMQ,SAASjE,QAAQ0H,OAC/BjE,EAAMQ,SAASjE,QAAU,IAAInC,KAAK+B,GAAG0Y,MAAMgyD,eAAe,CACvD5iE,KAAMjE,EAAMQ,SAASjE,WAG3ByD,EAAMQ,SAASjE,QAAQ0H,KAAK03E,MAAK,SAAUzpE,GACxC,IAA8B,IAA1BrS,EAAK4H,QAAQyK,EAAIlX,IAAY,CAC9B,IAAI8kF,EAAO,GACP4F,EAASxzE,EAAIlX,GAEjB,KAAOZ,KAAKurF,YAAYD,IACrB1lF,EAAMQ,SAASjE,QAAQ0H,KAAK03E,MAAK,SAAUiK,GAErC5lF,EAAMQ,SAASjE,QAAQ0H,KAAK0hF,YAAYD,KACxCE,EAAI5qF,KAEJ8kF,EAAO,GAAG8F,EAAIn9E,SAASq3E,IAE7B,IAEA4F,EAAStrF,KAAKurF,YAAYD,GAG7B5F,GAAQ5tE,EAAIzJ,KACZ+8E,EAAS9mF,KAAKohF,EACjB,CACH,IAIA,IAAI+F,EAAW,iCAEfL,EAASnnF,SAAQ,SAAUmK,GACxBq9E,GAAY,2GAA4Gr9E,UAC3H,IAEAq9E,GAAY,SACZ8iC,EAAQ9jF,UAAYghD,EAEpB,IAAI1qF,EAAS,GAETwtH,EAAQ3hC,aAAe,KAAI7rF,EAASwtH,EAAQ3hC,cAEhD,MAAMqhC,EAActqH,GAAG3D,KAAKE,IAAIytH,YAEhCM,EAAYhsH,OAAOlB,OAASA,EAC5BktH,EAAYptH,QAAQ,GACpB,GACN,kEC3FH,MAAM2tH,cAAgB,oBAAQ,OACxBC,YAAc,oBAAQ,OACtBC,WAAa,oBAAQ,OACrBC,MAAQ,oBAAQ,OAEhBlpE,eAAiB,oBAAQ,OACzBmpE,aAAe,oBAAQ,OACvBz/F,cAAgB,oBAAQ,OAExBytE,gBAAkB,6BAExBn9F,OAAOC,QAAU,MAAMknG,mCAAmChK,gBACvDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,qBAAqB09F,EAAS38F,KACxCuT,OAAOsnC,OACJ,CACGozE,eAAgB,GAChBC,YAAa,IAEhB5uH,GAGT,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChBshF,EAAkB6V,EAAS59F,YAAY8iC,gBAG7C,IAAInhC,GAAY,EAEI,KAJA8E,EAASpF,OAAS0mF,EAAgB1mF,SAI/BM,GAAY,GAEnC,IAAIytH,EAAa,CACdntH,KAAM,SACNZ,MAAO,GAENguH,EAAc,CACfptH,KAAM,SACNZ,MAAO,GAGV,OAAQoF,EAASo2D,gBAAkBkrB,EAAgBlrB,gBAChD,IAAK,OACF,MACH,IAAK,SACFuyD,EAAa,CACVntH,KAAM,UAETotH,EAAc,CACXptH,KAAM,UAET,MACH,IAAK,QACFmtH,EAAa,CACVntH,KAAM,UAKf,MAAMqtH,EACH1xB,EAASlhC,aACTj2D,EAASi2D,aACTqrB,EAAgBrrB,YACbn8D,EAAMF,KAAKE,IACXi+F,EAAMr+F,MAAMW,GAAG,CAClB,CACGC,KAAM,UACNQ,IACGkF,EAASm2D,mBAAqBmrB,EAAgBnrB,kBACjDp7D,KAAM,CACH4tH,EACA,CACGnuH,GAAIV,EAAI2uH,eACRnuH,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,oBACNnK,MAAO6tH,EACPjuH,MAAOoF,EAASpF,OAAS0mF,EAAgB1mF,MACzCM,UAAWA,EACXC,MAAO,KACJvB,KAAKkvH,YAAY,EAEpB9sH,GAAI,CAED+0E,cAAe,KACZ,MACM+Q,EAAS,iBADFqV,EAASp2F,KAAK6L,QAAQ,eAAgB,OACXuqF,EAAS38F,KACjD+C,GAAGzD,EAAI2uH,iBACFnhH,MAAM+zE,cAAc,UACrBC,aAAa,UAAWwG,EAAO,IAI5C,CACGtnF,GAAIV,EAAI4uH,YACRpuH,KAAM,QACNU,MAAOpB,KAAKoB,MAAM,qBAErB,CACGQ,KAAM,UAETotH,MAOT,cAFO7wB,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACXivH,EAAkBxrH,GAAGzD,EAAI2uH,gBACzBO,EAAezrH,GAAGzD,EAAI4uH,aAExB9uH,KAAKU,KAAK0F,SAAS22C,UACpBoyE,EAAgBvqH,OAChBwqH,EAAazqH,SAEbwqH,EAAgBxqH,OAChByqH,EAAaxqH,OAEnB,CAEAO,eACGrF,MAAM0K,OAEN,MAAM28C,EAAQ,GAEdnnD,KAAKU,KAAKmlB,gBAAgB5hB,SAAS0oB,IAC5BA,EAAGT,aAAeS,EAAGpC,eAAeC,YAErC28B,EAAM7iD,KAAKqoB,EAAGsF,WAAW,IAI3Bk1B,EAAMhhD,OAAS,GAAGnG,KAAKi9E,aAErBxtE,QAAQ4R,IAAI8lC,GAGlBnnD,KAAKq9E,OACR,CAEAJ,OACG,MAAMkyC,EAAkBxrH,GAAG3D,KAAKE,IAAI2uH,gBAE/BM,IAELA,EAAgB/pH,UAChB+pH,EAAgB1qH,OAAO,OAAQ,yBAC/B0qH,EAAgBzqH,UACnB,CAEA24E,QACG,MAAM8xC,EAAkBxrH,GAAG3D,KAAKE,IAAI2uH,gBAE/BM,IAELA,EAAgBznH,SAChBynH,EAAgB1qH,OAAO,OAAQ,qBAC/B0qH,EAAgBzqH,UACnB,CAEAS,mBACGnF,KAAKi9E,OAEL,MAAMoyC,EAAervH,KAAKsvH,gBAE1B9mH,QAAQ2O,IAAI,cAAek4G,GAG3B,MAAMjwB,QAAep/F,KAAKuvH,iBAGpBC,QAA4BxvH,KAAKyvH,uBAGjCC,EAAW1vH,KAAK2vH,iBACnBH,EACAH,EACAjwB,GAGG7B,EAAWv9F,KAAKU,KAGtB68F,EAASsJ,gBAAgB6oB,EAAUnyB,EAASjhC,WAG5Ct8D,KAAKq9E,OACR,CAEAiyC,gBACG,MAAMxhH,EAAS,CAAC,EAGV+X,EAAkB7lB,KAAKU,KAAKmlB,gBAC5B+pG,EAAiB/pG,EAAgB1f,OAAS,EAyFhD,OAvFA0f,EACI/c,QAAQ6jB,GAAOA,GAAIjB,aACnBznB,SAAS0oB,IACP,MAAM7U,EAAM6U,EAAGjB,WACTmkG,EAAWljG,EAAGJ,YACdujG,EAAW,GACX5F,EAAW,GAGjB,GAAI2F,EAAU,CACX,MAAM5iG,EAAaN,EAAGJ,WAAU,GAEhC29F,EAAS5lH,KAAKtE,KAAK+B,GAAGugB,MAAM,CAAC,EAAGutG,EAAU5iG,GAC7C,MAAOi9F,EAAS5lH,QAAQtE,KAAK+B,GAAG2D,UAAUinB,EAAGyG,YAG7C,MAAM+I,EAAWrkB,EAAI4lB,qBAErBwsF,EAASjmH,SAAS4F,IACf,IAAIu9G,EAGJtvG,EAAI/Q,SAAS9C,SAAS+C,IACnB,MAAM+oH,EAAc,GAGhBj4G,aAAeqX,eACqB,iBAA1BnoB,EAAE/B,OAAOkgB,eACjBne,EAAE/B,OAAOkgB,aAAetR,KAAK0D,MAC1BvQ,EAAE/B,OAAOkgB,eAGe,iBAAnBne,EAAEme,eACVne,EAAEme,aAAetR,KAAK0D,MAAMvQ,EAAEme,gBAEhCne,EAAE/B,OAAOkgB,cAAgB,IAAIlhB,SAAS+rH,IACpC,MAAMC,GAAajpH,EAAEme,cAAgB,IAAIrc,QACrCmnH,GACEA,EAAU3zF,gBAAkB0zF,EAAQ1zF,gBACxC,GAEF,IAAK2zF,EAAW,OAEhB,MAAMC,EAAcF,EAAQ5uH,MACtB+uH,EAAaF,EAAU7uH,MAG7B2uH,EAAYzrH,KAAK,GAAG4rH,KAAeC,IAAa,KAInB,iBAAnBnpH,EAAEme,eACfne,EAAEme,aAAetR,KAAK0D,MAAMvQ,EAAEme,eAEjCne,EAAEme,aAAalhB,SAAS0wB,IACrBo7F,EAAYzrH,KAAKqwB,EAAKvzB,MAAM,IAG/BgmH,EAAapnH,KAAKowH,gBACfvmH,EACA7C,EACA+oH,EACA5zF,GAIHirF,EAAWpgD,QAAUlvD,CAAG,IAG3Bg4G,EAASxrH,KAAK8iH,EAAW,IAI5B,MAAMiJ,EACHP,EAAS3pH,OAAS,EAAI2pH,EAAWA,EAAS,GAG1CF,GACCziH,MAAMC,QAAQijH,IACZA,EAAmBlqH,OAAS,GAE9BwmB,EAAGxH,cAAgB,IAAIlhB,SAAS0wB,IAC9B7mB,EAAO6mB,EAAKvzB,OAASivH,CAAkB,IAExCl8G,OAAOsnC,OAAO3tC,EAAQuiH,EAAmB,IAG7CviH,CACV,CAEAsiH,gBAAgBvmH,EAAMjE,EAAOmqH,EAAc,GAAIO,GAC5C,MAAMxiH,EAAS,CAAC,EAEhB,IAAIkI,EAAM,KAEVlI,EAAOlN,GAAKiJ,EAAKjJ,GACjBkN,EAAO,GAAGlI,EAAMkB,qBAAuB+C,EAAKjE,EAAMkB,YAElD,MAAMy2F,EAAWv9F,KAAKU,KAGtB,GAAI4vH,EAAoBnqH,OAAQ,CAC7B,MAAMoqH,GAAeD,GAAuB,IAAIxnH,QAC5CyxB,GAAiC,MAAnB1wB,EAAK0wB,KAGvBgjE,EAASnhE,UAAUvyB,EAAMA,EAAM0mH,EAAahzB,EAASptF,aACxD,CA2DA,OAxDIvK,aAAiB6/C,gBAKlBzvC,EAAMnM,EAAKjE,EAAMkB,YAEbkP,GAAK/R,SACN+R,EAAI/R,SAASmP,IACLA,IAGDxN,EAAMgB,gBACPhB,EAAMgB,eACFG,QAAQC,IAAOA,EAAE25B,eACjB18B,SAAS+C,IACPoM,EAAE,GAAGpM,EAAEF,qBAAuBsM,EAAEpM,EAAEF,YAElCsM,EAAEpM,EAAEF,YAAcE,EAAEsZ,OAAOlN,EAAG,CAC3BjD,aAAcotF,EAASptF,cACxB,IAKPiD,GAAkB,iBAANA,IAAgBA,EAAE4zD,QAAUphE,EAAMgB,gBAAc,KAMtEoP,EAAMpQ,EAAM0a,OAAOzW,EAAM,CACtBsG,aAAcotF,EAASptF,eAI7B4/G,EAAY9rH,SAAS7C,IACd4U,EAAKlI,EAAO1M,GAAS4U,EACflI,EAAO1M,KAAQ0M,EAAO1M,GAAS,GAAE,IAI1CyI,EAAKA,MAAM1D,SACZ2H,EAAOjE,KAAOiE,EAAOjE,MAAQ,IAE5BA,EAAKA,MAAQ,IAAI5F,SAAQ,CAACusH,EAAWzkH,KAEnC+B,EAAOjE,KAAKkC,GAAS/L,KAAKowH,gBACvBI,EACA5qH,EACAmqH,EACAO,EACF,KAIAxiH,CACV,CAEA3I,uBACG,MAAMi6F,EAAS,CAAC,EACVj4C,EAAQ,GACRspE,EAAkB,CAACC,EAAY7mH,EAAO,MACzCA,EAAK5F,SAASosB,IACX,MAAMsgG,EAAWD,EAAWpwG,OAAO+P,GAE/BsgG,IAAavxB,EAAOuxB,IACrBxpE,EAAM7iD,KACH,IAAImL,SAAQ,CAACC,EAASiH,KACnB,MAAMi6G,EAASF,EAAWrpD,SAASspD,GAEnCjC,WAAWmC,iBAAiBD,GAAQ,CAACrhH,EAAO4gE,KACzC,GAAI5gE,EAAO,OAAOoH,EAAOpH,GAGzB6vF,EAAOuxB,GAAYxgD,EAEnBzgE,GAAS,GACV,KAMX+gH,EAAgBC,EAAYrgG,EAAExmB,MAAQ,GAAG,GAC1C,EAyBL,OAtBA7J,KAAKU,KAAKmlB,gBACN/c,QAAQ6jB,GAAOA,GAAIjB,aACnBznB,SAAS0oB,IACP,MAAM7U,EAAM6U,EAAGjB,WAEf,IAAIolG,EAAankG,EAAGJ,YAEpB,GAAIukG,EAAY,CAEb,MAAM7jG,EAAaN,EAAGJ,WAAU,GAEhCukG,EAAa,CAAC9wH,KAAK+B,GAAGugB,MAAM,CAAC,EAAGwuG,EAAY7jG,GAC/C,MACK6jG,EAAankG,EAAGyG,UAErBtb,EAAI/Q,QAAQC,GAAMA,aAAa4nH,eAAc3qH,SAAS+C,IACnDypH,EAAgBzpH,EAAG8pH,EAAW,GAC/B,UAGFrhH,QAAQ4R,IAAI8lC,GAEXi4C,CACV,CAEAqwB,uBACG,MAAMn/G,EAAMtQ,KAAKU,KAAKg8D,cAEtB,OAAO,IAAIjtD,SAAQ,CAACC,EAASiH,KAC1B+3G,WAAWmC,iBAAiBvgH,GAAK,CAACf,EAAO4gE,KACtC,GAAI5gE,EAAO,OAAOoH,EAAOpH,GAEzBG,EAAQygE,EAAQ,GACjB,GAER,CAEAw/C,iBAAiBoB,YAAalnH,KAAMu1F,QACjC,MAAM4xB,UAAY,CAAC,EACbC,IAAM,IAAItC,MAAMoC,aAChBG,IAAM,IAAI1C,cACV2C,YAAc,IAAI1C,YAAY,CACjC2C,UAAU,EACVC,SAAU,CAACC,EAAUC,IAKXnyB,OAAOkyB,IAAa,GAE9BE,QAAS,CAACC,EAAWH,EAAUC,KAC5B,MAAMn4E,EAAa,CAAC,IAAK,KACnBmkD,EAAWv9F,KAAKU,KAChBisB,EAAK4wE,EAAS5xE,eAEpB,GAAKgB,EA6CE,CACJ,IAAI7U,EAAM6U,EAAGjB,WAEb,IAAK5T,EAAK,OAAOshC,EAGjB,GAAIm4E,EAAQlkH,QAAQ,MAAQ,EAAG,CAC5B,MAAMqkH,EAAWH,EAAQtpG,MAAM,KAI/B,GAFAnQ,EAAMA,EAAIqO,SAASL,GAAMA,EAAE1kB,QAAUswH,EAAS,KAAI,IAE7C55G,EAAK,OAAOshC,EAEjBm4E,EAAUG,EAAS,EACtB,CAEA,MAAM99D,EAAa97C,EAAI/Q,QACnBC,GAAMA,EAAEF,aAAeyqH,IACzB,GAEF,OAAK39D,GAAYxtD,UAGdwtD,EAAWxtD,SAASi4C,UACpBuV,EAAWxtD,SAASk4C,aAEpBlF,EAAW,GAAKwa,EAAWxtD,SAASk4C,YAGpCsV,EAAWxtD,SAASm4C,WACpBqV,EAAWxtD,SAASo4C,cAEpBpF,EAAW,GAAKwa,EAAWxtD,SAASo4C,aAEhCpF,GAd2BA,CAerC,CAhFS,CACN,MAAMu4E,EAAMp0B,EAAS13E,gBAErB,OAAI8rG,GACDA,EAAI1tH,SAAS0oB,IACV,IAAI7U,EAAM6U,EAAGjB,WAEb,IAAK5T,EAAK,OAAO,EAGjB,GAAIy5G,EAAQlkH,QAAQ,MAAQ,EAAG,CAC5B,IAAIqkH,EAAWH,EAAQtpG,MAAM,KAE7B,IAAKnQ,EAAIqO,QAAS,OAAO,EAIzB,GAFArO,EAAMA,EAAIqO,SAASL,GAAMA,EAAE1kB,QAAUswH,EAAS,KAAI,IAE7C55G,EAAK,OAAO,EAEjBy5G,EAAUG,EAAS,EACtB,CAEA,MAAM99D,EAAa97C,EAAI/Q,QACnBC,GAAMA,EAAEF,aAAeyqH,IACzB,GAEF,QAAK39D,GAAYxtD,WAGdwtD,EAAWxtD,SAASi4C,UACpBuV,EAAWxtD,SAASk4C,aAEpBlF,EAAW,GAAKwa,EAAWxtD,SAASk4C,YAGpCsV,EAAWxtD,SAASm4C,WACpBqV,EAAWxtD,SAASo4C,cAEpBpF,EAAW,GAAKwa,EAAWxtD,SAASo4C,cAEhC,EAAK,IAGRpF,GACIA,CACjB,CAmCA,IA0BN,IACG83E,IAAIU,aAAaT,aACbU,QAAQZ,KACR5mC,QAAQxgF,MACRy+E,WAAW,CACTpS,OAAQ,SAAU47C,KACf,MAAO,CACJn8G,IAAK,SAAUo8G,MAAOziH,SAEnB,GAA6B,IAAzBwiH,IAAIzkH,QAAQ,SAAgB,CAC7B,MAAMy1B,GAAQgvF,IAAI7pG,MAAM,KAAK,IAAM,IAAIkb,OAEvC,OAAQ4uF,MAAY,MAAK,IAAIjpH,QAAO,SAAUsF,GAC3C,QAAOA,EAAK00B,EACf,GACH,CAEK,GAAIgvF,IAAIzkH,QAAQ,WAAa,EAAG,CAClC,MAAMy1B,EAAOgvF,IAAI7pG,MAAM,UAAU,GAC3B+pG,EAAUF,IAAI7pG,MAAM,UAAU,GAEpC,IAAInH,EAASixG,MAAMjvF,GAYnB,MAVsB,iBAAXhiB,IACRA,EAASA,EAAO9N,QACb,UACA,KAGDg+G,UAAUgB,KAAUhB,UAAUgB,GAAW,GAE9ChB,UAAUgB,IAAYj7E,WAAWj2B,GAE1BixG,MAAMjvF,EAChB,CAEK,GAA6B,IAAzBgvF,IAAIzkH,QAAQ,SAAgB,CAClC,MAAM2kH,EAAUF,IAAI9+G,QAAQ,QAAS,IAErC,OAAOg+G,UAAUgB,IAAY,CAChC,CAyCK,GAAyB,IAArBF,IAAIzkH,QAAQ,KAAY,CAC9B,MAAMorF,EAAQq5B,IAAI9+G,QAAQ,IAAK,IAAIiV,MAAM,KACnCgqG,EAAax5B,EAAM,GAAGt1D,OACtB+uF,EAAaz5B,EAAM,GAAGt1D,OAE5B,IAAK8uF,IAAeC,EAAY,MAAO,GAGvC,IAAIC,EAEJ,MAAMr6G,EAAMi6G,MAAM/qD,QAElB,GAAIlvD,EAAK,CACN,MAAMs6G,EAAiBt6G,EAAI/Q,QACvBC,GAAMA,EAAEF,aAAeorH,IACzB,GAEF,GAAIE,EAAgB,CACjB,MAAM/qH,EAAa+qH,EAAe/qH,WAElC8qH,EAAe9qH,EACVA,EAAWP,WACX,IACR,CACH,CAEA,IAAIurH,EAAaxoH,KAAKooH,GAElBI,IAAellH,MAAMC,QAAQilH,KAC9BA,EAAa,CAACA,IAEjB,MAAMC,EAAUzoH,GACbA,EAAK,GAAGsoH,aACRtoH,EAAKsoH,IACLtoH,EAAKjJ,IACLiJ,EAEH,OAAQwoH,GAAc,IAAIvpH,QAAO,SAAUsF,GAExC,IAAImkH,EAAWR,MAAMG,GAErB,OAAI/kH,MAAMC,QAAQmlH,GAEZA,EAASzpH,QACLvF,GAAM+uH,EAAO/uH,KAAO+uH,EAAOlkH,KAC7BjI,OAAS,EAELmsH,EAAOlkH,KAAUkkH,EAAOC,EACvC,GACH,CAEK,GAAIT,IAAIzkH,QAAQ,MAAQ,EAAG,CAC7B,MAAMS,OAASikH,MACTjvF,KAAOgvF,IAAI7pG,MAAM,KAAK,GACtBiiB,UAAY4nF,IAAI7pG,MAAM,KAAK,GAEjC,GAAI6a,MAAQoH,UAAW,CACpB,IAAIrgC,KAAOkoH,MAAMjvF,MAEjB,GAAIj5B,KAGD,OAFKsD,MAAMC,QAAQvD,QAAOA,KAAO,CAACA,OAE3BA,KAAKf,QAAQunB,GACjBqnB,KAAKxN,UAAUl3B,QAAQ,MAAO,QAGvC,CACA,OAAOlF,MACV,CAAO,MAAY,MAARgkH,IAAoBC,MACnBA,MAAMD,IACrB,EAEN,IAEF/kD,QAGP,CAFE,MAAOx9D,GACN,OAAOA,CACV,CAGA,MAAMijH,SAAWtB,IAAIuB,SAASC,SAAS,CACpC9wH,KAAM,OACN+wH,SACG,4EAGN,OAAOH,QACV,oBC/tBH,MAAMnnB,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAA+B2rG,EAC7C1rG,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,oBAAoB09F,EAAS38F,KAAMV,EAChE,CAEAO,KACG,MAAMu7E,EAAOh8E,KACPu9F,EAAWv9F,KAAKU,KAChBwJ,EAAOqzF,EAAS9kC,sBAChBryD,EAAWm3F,EAASn3F,UAAY,CAAC,EAEjCg3D,EACHh3D,EAASg3D,WAAamgC,EAAS59F,YAAY8iC,gBAAgB26B,UAExD+gC,EAAM,CACTh9F,KAAM,IAmFT,MA/EkB,WAAdi8D,GAAwC,UAAdA,GAC3B+gC,EAAIh9F,KAAKmD,KAAK,CAAC,GAId8B,EAAS22D,eACVohC,EAAIh9F,KAAKmD,KACN,CACG5D,KAAM,SACNY,WAAW,EACXqB,MAAOyD,EAAS42D,aAAeh9D,KAAKoB,MAAM,UAC1CG,MAAO,WACJy6E,EAAKzzE,SAASvI,KACjB,EACAoC,GAAI,CACD+0E,cAAe,WACZn3E,KAAKokG,eAAe1iB,aACjB,UACA,iBAAiBx3E,EAAKtJ,KAE5B,IAGN,CACGI,MAAO,KAMZoF,EAAS62D,cACVkhC,EAAIh9F,KAAKmD,KACN,CACG5D,KAAM,SACNY,WAAW,EACXqB,MAAOyD,EAAS82D,YAAcl9D,KAAKoB,MAAM,SACzCG,MAAO,WACJy6E,EAAK42C,QAAQ5yH,KAChB,EACAoC,GAAI,CACD+0E,cAAe,WACZn3E,KAAKokG,eAAe1iB,aACjB,UACA,gBAAgBx3E,EAAKtJ,KAE3B,IAGN,CACGI,MAAO,KAMZoF,EAASy2D,aACVshC,EAAIh9F,KAAKmD,KAAK,CACX5D,KAAM,SACNkB,KAAM,OACNV,IAAK,gBACLI,WAAW,EACXqB,MAAOyD,EAAS02D,WAAa98D,KAAKoB,MAAM,QACxCG,MAAO,WACJy6E,EAAKl0E,OAAO9H,KACf,EACAoC,GAAI,CACD+0E,cAAe,WACZn3E,KAAKokG,eAAe1iB,aACjB,UACA,eAAex3E,EAAKtJ,KAE1B,KAMS,WAAdw8D,GAAwC,SAAdA,GAAsB+gC,EAAIh9F,KAAKmD,KAAK,CAAC,GAE5DxE,MAAMW,GAAG09F,EACnB,CAEA51F,SAASsqH,GACN,MAAMt1B,EAAWv9F,KAAKU,KAChB0F,EAAWm3F,EAASn3F,UAAY,CAAC,EAGjC8D,EAAOqzF,EAAS9kC,sBAUtB,GAPWvuD,EAAKyhB,gBAGZQ,UAAU,MAEd0mG,GAAc94C,gBAAgB70E,QAE1BkB,EAAS+2D,YAAajzD,EAAK4yF,WAAW12F,EAAS+2D,iBAE9C,CACF,MAAM21D,EAAiBhxG,GAAMA,EAAE1b,UAA+B,SAAnB0b,EAAE1b,SAASxE,KAEhDmxH,EAAW/yH,KAAK44D,aACtB,GAAIm6D,EAAU,CACX,MAAMn6D,EAAam6D,EAASn6D,WAAWk6D,IAAkBC,EAErDn6D,GAAY1uD,EAAK4yF,WAAWlkC,EAAWh4D,GAC9C,CACH,CACH,CAEAgyH,QAAQI,GAEL,MAGMrmG,EAHO3sB,KAAKU,KAAK+3D,sBAGP9sC,eAGZgB,GACDA,EAAGR,UAAU,MAGhB6mG,GAAaj5C,gBAAgB70E,OAChC,CAEA4C,OAAOshG,GACJ,IAAKA,EAEF,YADA5gG,QAAQ+G,MAAM,8BAIjB,MAAMrF,EAAOlK,KAAKU,KAAK+3D,sBACjB2C,EAAWguC,EAAWrvB,cAG5BqvB,EAAWhkG,YAGX8E,EACIygH,SAASvvD,GACT5mD,MAAK,KACH40F,EAAW1hG,WAGXwC,EAAK4/F,cAAc,IAErBr1F,OAAOtM,IACLK,QAAQ+G,MAAMpH,GACdihG,EAAW1hG,UAAU,GAE9B,oBC5KH,MAAM2jG,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAA0C,EAGxDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,sBAAsB09F,EAAS38F,KAAMV,EAClE,CAEAO,KACG,OAAOX,MAAMW,GAAG,CACbC,KAAM,YAEZ,oBCbH,MAAMk8F,EAAkB,WAClBtmE,EAAiB,EAAQ,OACzBgxE,EAAoB,EAAQ,OAC5B/nC,EAAmB,EAAQ,OAC3B0zD,EAAoB,EAAQ,OAC5BzrB,EAAiB,EAAQ,OAMzB0S,EAAmB,GAEzBz6G,EAAOC,QAAU,cAAkCk9F,EAChDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,cAAc09F,EAAS38F,KACjCuT,OAAOsnC,OACJ,CACGvxC,KAAM,GAENkzE,OAAQ,GACRY,cAAe,GACfk1C,WAAY,GACTrzH,GAAU,cAAc09F,EAAS38F,wBAGvCV,IAINF,KAAKmzH,QAAU,KAEfnzH,KAAKozH,SAAU,CAClB,CAEA3yH,KACG,MAAM88F,EAAWv9F,KAAKU,KAEhBmB,EADiB07F,EAASoK,iBACJlnG,KAAKoB,MAAQ,GACnCwxH,EAAyBrzH,KAAKszH,qBAC9Bn1B,EAAMr+F,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAIgK,KACbxJ,KAAM,OACN6yH,KAAMh2B,EAAS38F,GACfiB,KAAMA,EAAK0lB,OAAO8rG,MAMxB,cAFOl1B,EAAIv8F,KAEJu8F,CACV,CAEAm1B,qBACG,MAAMxlH,EAAS,CACZ,CACG+mE,QAAQ,EACRhzE,KAAM,KAKN07F,EAAWv9F,KAAKU,KAChBuE,EAASjF,KAAK2rB,gBAAgBD,YAAc6xE,EAASr6F,eAE3D,IAAK+B,EAAQ,OAAO6I,EAEpB,MAAMssG,EAAe,GACfoZ,EAAej2B,EAASl/B,kBA6C9B,OA3CAp5D,EAEI8B,QAAQC,GAAMA,GAAGZ,UAAU4pE,kBAC3B/rE,SAAS+C,IACMwsH,EAAa1mG,MACtB2mG,GAAQzsH,EAAEpG,KAAO6yH,EAAIrtH,SAASsE,YAMQ,iBAA/B1D,EAAEZ,SAAS4pE,kBACnBhpE,EAAEZ,SAAS4pE,gBAAkBn8D,KAAK0D,MAC/BvQ,EAAEZ,SAAS4pE,kBAKjBhpE,EAAEZ,SAAS4pE,gBAAgB/rE,SAAQ,CAACwrB,EAAM8+E,KACvC,MAAMxwB,EAAS/9E,KAAK+B,GAAG6xB,iBACpB,GAAG5sB,EAAEF,cAAcynG,KAGG,mBAAdxwB,EAAOt9E,GACf25G,EAAa91G,KAAKy5E,EAAOt9E,MAGzB25G,EAAa91G,KAAKy5E,EAAOt9E,IAI5By5G,EAAiB51G,KAAK,CACnBwE,OAAQi1E,EACRr9E,KAAMq9E,EAAO79E,IAAIy0E,aACjB7tE,WAAYE,EAAEF,WACdkpE,gBAAiBvgD,EAAKtO,MACtBkpD,eAAgB56C,EAAK46C,gBACtB,IACH,IAGRv8D,EAAOjM,KAAOu4G,EAEPtsG,CACV,CAEA3I,WAAWpD,EAAIu2D,EAAan2D,EAAU,CAAC,SAC9BrC,MAAMwD,KAAKvB,GAEjB/B,KAAKU,KAAKinG,iBAAiBrkG,KAAKvB,EAAIu2D,EAAan2D,GAEjDnC,KAAK0zH,cAAcvxH,GACnBnC,KAAK2zH,aACL3zH,KAAK4zH,sBACL5zH,KAAK6zH,0BAEL,MAAMr0B,EAAUx/F,KAAK+B,GAAG0Y,MAClB8hE,EAAQ54E,GAAG3D,KAAKE,IAAIgK,MAEtBqyE,GACDijB,EAAQ97F,OAAO64E,EAAOijB,EAAQ57F,aAG7B00D,EAAc,GAAGikB,EAAMn3E,SAC9B,CAEAsuH,cAAcvxH,EAAU,CAAC,GAElBA,GAAS67D,cAEVh+D,KAAKU,KAAK0F,SAAS43D,YAAc77D,EAAQ67D,eAG5C,MAAMu/B,EAAWv9F,KAAKU,KAElByB,EAAQulG,iBACTnK,EAASkK,WAAWC,iBAAmBvlG,EAAQulG,iBAC7CnK,EAASkK,WAAWC,iBAAmB,KAAM,CACrD,CAEAisB,aAEG,MAAMhnG,EAAK3sB,KAAK2rB,eAEhB,IAAKgB,EAAI,OAGT3sB,KAAK4xB,SAAS,CACXC,QAASlF,EACTmF,UAAW,eACXC,SAAWhE,IACS/tB,KAAKU,KACgB29D,iBAClClR,GAASA,aAAgBm6C,IAIRrjG,SAAS+C,IAC3B,MAAMpB,EAAQoB,EAAEpB,QAChB,GACmC,OAAhCA,GAAOQ,UAAUc,aACjBtB,GAAOq6E,0BAEAr6E,EAAMq6E,iBACTlyD,EAAQnoB,EAAMkB,aACf,GAAIqG,MAAMC,QAAQ2gB,EAAQnoB,EAAMkB,aAAc,CAC3C,IAAIgtH,EAAW,GACf/lG,EAAQnoB,EAAMkB,YAAY7C,SAASmP,IAChC0gH,EAASxvH,KAAK8O,EAAExN,EAAMX,OAAO8pB,MAAM,IAEtCnpB,EAAMq6E,iBAAmB6zC,EAASxlH,MACrC,MACG1I,EAAMq6E,iBAAmBlyD,EAAQnoB,EAAMkB,WAGhD,IAGH9G,KAAK+iC,YAAYhV,EAAQ,IAI/B,MAAM7tB,EAAMF,KAAKE,IAEjBF,KAAK4xB,SAAS,CACXC,QAASlF,EACTmF,UAAW,mBACXC,SAAU,KACP,MAAMwqD,EAAQ54E,GAAGzD,EAAIgK,MAEjBqyE,IACDA,EAAMn3E,UAENm3E,EAAMl3E,eAAe,CAAEzD,KAAM,SAChC,IAIN5B,KAAK4xB,SAAS,CACXC,QAASlF,EACTmF,UAAW,kBACXC,SAAU,KACP,MAAMwqD,EAAQ54E,GAAGzD,EAAIgK,MAEjBqyE,IACDA,EAAM70E,SAEN60E,EAAM50E,iBACT,IAIN3H,KAAK4xB,SAAS,CACXC,QAASlF,EACTmF,UAAW,2BACXC,SAAU,CAAChT,EAAKlV,KACb,IAAKA,GAAMmO,SAAU,OAErB,MAAM/S,EAAS0nB,EAAGjB,WAElB,GAAKzmB,IAGFA,EAAOrE,KAAOiJ,EAAKmO,UACnB/S,EAAO8B,QAAQC,GAAMA,EAAEZ,SAASO,aAAekD,EAAKmO,WAChD7R,OAAS,GACd,CACC,MAAMyoB,EAAWjC,EAAGJ,YAEhBqC,GAAU5uB,KAAK+iC,YAAYnU,EAClC,KAKN,MAAM+C,EAAShF,EAAGd,mBAEd8F,GAED3xB,KAAK4xB,SAAS,CACXC,QAASF,EACTG,UAAW,eACXC,SAAWhE,IACR/tB,KAAK+zH,kBAAkBhmG,EAAQ,GAG3C,CAEA6lG,sBACG,MAAMjnG,EAAK3sB,KAAK2rB,eAEhB,IAAKgB,EAAI,OAET,IAAKutF,EAAiB/zG,OAAQ,OAG9B,MAAMq0G,EAAqB,GAE3BN,EAAiBj2G,SAAS+C,IAEvBA,EAAE8B,OAAOhE,gBAAgB6nB,EAAGjB,WAAW3mB,aACvCiC,EAAE8B,OAAO+qB,WAAWlH,EAAGjB,WAAW3kB,UAElCC,EAAE8B,OAAOjE,SAASmC,EAAEgpE,iBAIf7iE,MAAMC,QAAQotG,EAAmBxzG,EAAEF,eACrC0zG,EAAmBxzG,EAAEF,YAAc,IAGtC0zG,EAAmBxzG,EAAEF,YAAYxC,KAAK,CACnC6wB,QAASxxB,GAAGqD,EAAEtG,MAAM+5G,kBAEpBpwC,eAAgBrjE,EAAEqjE,gBACnB,IAGL,MAAMnqE,EAAMF,KAAKE,IAGjBiU,OAAOC,KAAKomG,GAAoBv2G,SAASI,IAEtC,MAAM2vH,EAAYrwH,GAAGzD,EAAIgK,MAAMktE,UAAU,CACtCjwE,KAAM9C,IAIT2vH,EAAUtmH,MAAM8sG,mBAAqBA,EAAmBn2G,GAExD2vH,EAAUvvH,OAAO,YAAY,SAAUwvH,EAAMC,EAAMtuH,GAEhD,MAAMuuH,EAAkBxwH,GAAGzD,EAAIgK,MAAMktE,UAAU,CAC5CjwE,KAAMvB,IAIT,IAAIL,GAAU,EA+Bd,OA5BA4uH,EAAgBzmH,MAAM8sG,mBAAmBv2G,SAAS6E,IAC/C,MAAM7D,EAAS0nB,EAAGjB,WACZ7hB,EAAO7J,KAAKisF,YAGZ0uB,EAAU,CAAC,GAEhB11G,EAAO8B,UAAY,IAAI9C,SAAS2B,IAC9B+0G,EAAQ/0G,EAAMhF,IAAMiJ,EAAKjE,EAAMkB,WAAW,IAIzC+C,EAAKgG,OAAM8qG,EAAqB,YAAI9wG,EAAKgG,MAG3B/G,EAAOqsB,QAAQwlF,KAI9Bp1G,GAAU,EAEV4uH,EAAgB1vH,OACb,iBACAqE,EAAOuhE,gBAEb,IAGI9kE,CACV,IAEAyuH,EAAUtvH,SAAS,GAEzB,CAEAmvH,2BACI7zH,KAAKoG,UAAUmsD,aAAe,IAAItuD,SAASwrB,KACxCA,GAAM2kG,gBAAgBC,YAAYC,iBAAmB,IAAIrwH,SACtD8lB,IACE,GAAqB,UAAjBA,EAAGwqG,UAAuB,OAE9B,MAAMC,EAAax0H,KAAK+B,GAAG8jB,iBACvB8G,GAAOA,EAAG/rB,KAAOmpB,EAAGpnB,QACtB,GAGC6xH,GACAA,EAAWtoG,aAAesoG,EAAWjqG,eAAeC,YAEpDgqG,EAAWviG,UAAU,GAE7B,GAEP,CAEA9sB,aAAa0E,GACV7J,KAAKozH,SAAU,EAEf,MAGMzrB,EAHW3nG,KAAKU,KAGUinG,uBAE1BA,EAAen9F,SAErB,MAAMtK,EAAMF,KAAKE,IACXq8E,EAAQ54E,GAAG3D,KAAKE,IAAIgK,MACpByiB,EAAK3sB,KAAK2rB,eAEhB,GAAIgB,EAAI,CAGL,MAAMvmB,EAAWpG,KAAKoG,SAElBA,EAAS43D,aACVrxC,EAAGR,UAAU,OAKZ/lB,EAAS43D,aAAe53D,EAAS63D,cAClCt6D,GAAGzD,EAAIgzH,aAAaznH,iBAAiBD,WAAWtL,EAAIgzH,YAGvD,MAAMnlG,EAAUpB,EAAGJ,kBAGbvsB,KAAK+iC,YAAYhV,GAEnBwuD,GAAO5vD,EAAG4G,KAAKgpD,EACtB,YAEWv8E,KAAK+iC,YAAYl5B,GAAQ,CAAC,GAGrC7J,KAAK8pG,eAEDvtB,GAAOA,EAAMtM,QACpB,CAEA9qE,kBAAkB4oB,GAEf,GAAI/tB,KAAKmzH,QAAS,OACbnzH,KAAKmzH,cAzZhBhuH,eAAuBsvH,GACpB,OAAO,IAAIhlH,SAASC,GAAYiF,WAAWjF,EAwZN,KAvZxC,CAuZgCwC,GAE1B,MAAMqrF,EAAWv9F,KAAKU,KAChBg0H,EAAen3B,EAASl/B,iBAC1BlR,GACEA,aAAgBoS,GAEfpS,aAAgB8lE,GACS,SAAvB9lE,EAAK/mD,SAASxE,MAChBurD,aAAgBq6C,GAAyC,WAAvBr6C,EAAK/mD,SAASxE,OAIvD,GAAKmsB,EA6DF2mG,EAAazwH,SAAS+C,IACnB,MAAMmmD,EAAOowC,EAASgL,eAAevhG,EAAEpG,IAElCusD,IAEDntD,KAAKozH,SAASjmE,GAAM3iD,WAGxBxD,GAAGpB,SAASf,SAASlB,GAAGwpD,EAAKjtD,IAAIy0H,UAAW5mG,GAE5Co/B,GAAMzoD,UAAUqpB,GAAQ,QAvEhB,CACX2mG,EAAazwH,SAAS+C,IACnB,MAAMpB,EAAQoB,EAAEpB,QAEhB,IAAKA,EAAO,OAEZ,MAAMunD,EAAOowC,EAASgL,eAAevhG,EAAEpG,IAEvC,IAAKusD,EAAM,OAGPntD,KAAKozH,SAASjmE,GAAM3iD,WAGxB,MAAMoqH,EAAiB,CAAC,EAExBhvH,EAAM88B,aAAakyF,GACnBhvH,EAAMf,SAASlB,GAAGwpD,EAAKjtD,IAAIy0H,UAAWC,GAEtCznE,GAAMzoD,UAAUkwH,EAAe,IAGbr3B,EAASl/B,iBAC1BlR,GACEA,aAAgB72B,KACd62B,aAAgBoS,KAGXt7D,SAAS+C,IACnB,MAAMpB,EAAQoB,EAAEpB,QAEhB,IAAKA,EAAO,OAEZ,MAAMunD,EAAOowC,EAASgL,eAAevhG,EAAEpG,IAEvC,IAAKusD,EAAM,OAEX,GAAc,WAAVnmD,EAAE3C,IAAkB,OAExB,MAAM4yB,EAAUrxB,EAAMkB,WAGhBnB,EAAS,CAAC,EAEhBC,EAAM88B,aAAa/8B,GACnBhC,GAAGwpD,EAAKjtD,IAAIy0H,WAAW9vH,SAASc,EAAOsxB,IAAY,GAAG,IAIzD,MACMtF,EADK3xB,KAAK2rB,eACEE,mBAElB,GAAI8F,EAAQ,CACT,MAAMkjG,EAAaljG,EAAOpF,YAE1BvsB,KAAK+zH,kBAAkBc,EAC1B,CACH,CAiBA70H,KAAKmzH,QAAU,IAClB,CAEAY,kBAAkBhmG,GACf,MAAMpB,EAAK3sB,KAAK2rB,eAKhB,GAFmBgB,EAAGJ,YAEN,OAEhB,MAAMuoG,EAAgBnoG,EAAGZ,UAEzB,IAAK+oG,EAAe,OAEpB,MAAMv3B,EAAWv9F,KAAKU,KAEhBq0H,EAAmBx3B,EAASl/B,iBAAiBlR,GAC1CA,aAAgB72B,GAEf62B,EAAKvnD,SAAWunD,EAAKvnD,QAAQhF,KAAOk0H,EAAcl0H,KACzD,GAEH,IAAKm0H,EAAkB,OAEvB,MAAMC,EAAoBz3B,EAASgL,eAAewsB,EAAiBn0H,IAEnE,IAAKo0H,EAAmB,OAExB,MAAMC,EAAqBtxH,GAAGqxH,EAAkB90H,IAAIy0H,UAI9CO,EAAW,CAAC,EAElBA,EALkBJ,EAActkG,gBAKPzC,EAGzB+mG,EAAcjwH,SAASowH,EAAoBC,EAC9C,CAEAt2B,UAEA,CAEAkL,eACG,MAAMvM,EAAWv9F,KAAKU,KAEtB,IAAIqpG,EAAc,EACdC,EAAgB,GAEpBzM,EAASr2E,QAAQjjB,SAASmK,IACN,YAAbA,EAAK/J,KAAkC,cAAb+J,EAAK/J,KAC5B+J,EAAKzN,SAAS22D,IAAMyyC,IACrBA,EAAc37F,EAAKzN,SAAS22D,EAC5B0yC,EAAgB57F,EAAKxN,GACxB,IAGN,MAAMqpG,EAAiB1M,EAASgL,eAAeyB,GAE3CC,GAAkBtmG,GAAGsmG,EAAe/pG,IAAIy0H,WACzChxH,GAAGsmG,EAAe/pG,IAAIy0H,UAAU11G,OACtC,oBCtjBH,MAAMosF,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAAyC,EAGvDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,qBAAqB09F,EAAS38F,KACxCuT,OAAOsnC,OACJ,CACGi5B,MAAO,GACPygD,UAAW,IAEdj1H,IAINF,KAAKo1H,iBAAmB,KACxBp1H,KAAKq1H,kBAAoB,IAC5B,CAEIzvH,YACD,OAAO5F,KAAKU,KAAKkF,OACpB,CAEAnF,KACG,MAAMmF,EAAQ5F,KAAK4F,MACb23F,EAAWv9F,KAAKU,KAChBwJ,EAAOqzF,EAAS9kC,sBAChBryD,EAAWpG,KAAKoG,SAEtB,IAAKR,EAGF,OAFA4C,QAAQ+G,MAAM,gCAAgCnJ,EAASsE,WAEhD5K,MAAMW,GAAG,CACbC,KAAM,QACNU,MAAO,KAIb,MAAMw9E,EAAyC,QAA3Bh5E,EAAMQ,SAASa,SAC7BquH,EAAeprH,GAAM9D,UAAY,CAAC,EAClClG,EAAMF,KAAKE,IAEjB,IAAIi+F,EAAM,CACPv9F,GAAIV,EAAIy0H,SACRj0H,KAAMk+E,EAAc,aAAe,QACnCz3E,KAAMvB,EAAMkB,WACZwyC,SAAU1zC,GAAOQ,UAAUkzC,UAAYlzC,GAAUkzC,WAAY,EAG7D2nC,YAAar7E,EAAMhF,GACnBwB,GAAI,CACDgI,YAAa,CAACxJ,EAAIyJ,KACf,GACGA,EAAE28C,OAAOk8B,UAAUrzC,SAAS,sBAC5BxlC,EAAE28C,OAAO08B,QAAQt3D,OAClB,CACC,MAAMkC,EAAQjkB,EAAE28C,OAAO08B,QAAQt3D,OAC/B,IAAKkC,EAAO,OACZtuB,KAAKu1H,aAAajnG,EACrB,GAEHjsB,SAAWwH,IACR7J,KAAKw1H,UAAU3rH,EAAK,IAKzByrH,EAAariE,YACdkrC,EAAI/8F,MAAQwE,EAAMxE,MAClB+8F,EAAIr8F,WAAawzH,EAAaxzH,WAC9Bq8F,EAAIrpC,cAAgBwgE,EAAaxgE,eAGpC90D,KAAKy1H,kBAELt3B,EAAI/kB,QAAU,CACX4F,QAAQ,EACR02C,YAAW92C,EACXn9E,KAAM,CACHoI,KAAM,GACN04D,UACGg7B,GAAUn3F,UAAU+3D,SACf,kEACA,IAHE,WAMb/7D,GAAI,CACDoI,OAAQ,KACL5E,EAAM07E,sBAAsB39E,GAAGzD,EAAIy0H,UAAW/uH,EAAOsE,EAAK,GAIhEpB,OAAQ,EAAGnG,SAASoT,IACjBpT,EAAMwV,cAAc61B,SAASj4B,EAAOoC,gBAG1CgmF,EAAI0jB,QAAU,CACX8T,YAAa,CAAC/0H,EAAIyJ,EAAGurH,KAClB,GAAyB,IAArBxvH,EAAShB,QAAe,OAE5B,MAAM2oB,EAAU,CAAC,EACX8nG,EAAYlyH,GAAGzD,EAAIy0H,UAEzB,GAAIkB,EAAW,CACZ,MAAMtzH,EAAOszH,EAAUnoH,MAEvB9H,EAAMu4E,WAAWpwD,EAAmBxrB,EACvC,IAIN,IAAIuzH,EAAQ91H,KAAKo1H,kBAAkB30H,GA8CnC,OA7CIq1H,GAED33B,EAAI/8F,MAAQ,GACZ+8F,EAAIr8F,WAAa,EAGjBg0H,EAAM1zH,GAAK,CACRgI,YAAa,KAEVpK,KAAKo1H,kBAAkBvT,QAAQ33G,EAAKyhB,iBAE7B,IAIbwyE,EAAM,CACH43B,QAAS71H,EAAIy0H,SACb9yH,KAAM,CACH,CACGV,KAAM,CACH,CACGT,KAAM,QACNU,MAAOwE,EAAMxE,MACbJ,MAAOs0H,EAAaxzH,WACpBT,MAAO,QAEVy0H,EACA33B,MAMZA,EAAMr+F,MAAMW,GAAG09F,KAEfA,EAAM,CACH43B,QAAS71H,EAAIy0H,SACb9yH,KAAM,CAACs8F,IAGVA,EAAMr+F,MAAMW,GAAG09F,UAERA,EAAIt8F,KAAK,GAAGjB,IAGfu9F,CACV,CAEAh5F,gBAAgB0E,GACb,MAAM3J,EAAMF,KAAKE,IACX0F,EAAQ5F,KAAK4F,MACb23F,EAAWv9F,KAAKU,KAEtB,IAAIs1H,EACA7oH,MAAMC,QAAQvD,IACfmsH,EAAiB,GACjBnsH,EAAK5F,SAASypB,IACXsoG,EAAe1xH,KAAKopB,EAAO9sB,IAAM8sB,EAAO,MAS3CsoG,EAAiBnsH,EACE,iBAARA,IAERmsH,EAAiBpwH,EAAMy6E,eAAex2E,IAItCmsH,EADCA,GAAgBp1H,GACAo1H,EAAep1H,GAEfiJ,GAMvB,MAAMgsH,EAAYlyH,GAAGzD,EAAIy0H,UAgBzB,GAX0C,OAAtC30H,MAAM4F,OAAOQ,UAAUc,cACxBlH,KAAKi9E,aACCr3E,EAAMu5E,sBACT02C,EACAt4B,EAASp7F,QACTyD,EACA23F,EAAS9kC,uBAEZz4D,KAAKq9E,SAGJw4C,EAAW,CACZA,EAAUr6C,aAEV,MAAMy6C,EAAaD,EAAe1nH,KAC7B0nH,EAAe1nH,OACf0nH,EAELH,EAAUhxH,SAASoxH,GACnBJ,EAAUp6C,cACb,CACH,CAEAt2E,WAAWpD,EAAII,SACNrC,MAAMwD,KAAKvB,GAEjB,MAAM8zH,EAAYlyH,GAAG3D,KAAKE,IAAIy0H,UAC1BkB,GAAWpyH,MAAMC,OAAOmyH,EAAWpyH,MAAMG,aAE7C5D,KAAKy1H,iBACR,CAEAA,kBACG,MAAMl4B,EAAWv9F,KAAKU,KAGhBw1H,EAAY34B,GAAUn3F,UAAUg1D,SAClC86D,GAAa34B,IAAav9F,KAAKo1H,mBAChCp1H,KAAKo1H,iBAAmB73B,EAASwI,YAAY5lG,UAC1CH,KAAK+B,GACL,GAAGw7F,EAAS38F,MAAMs1H,KAErBl2H,KAAKo1H,iBAAiBtwH,gBAAgBy4F,EAASx4F,aAC/C/E,KAAKo1H,iBAAiB9xH,KAAK,CACxB6yH,WAAYn2H,KAAKo2H,iBAAiB7iG,KAAKvzB,MACvCq2H,cAAer2H,KAAKs2H,eAAe/iG,KAAKvzB,MACxCg+D,YAAah+D,KAAKu2H,oBAAoBhjG,KAAKvzB,SAIjD,MAAMw2H,EAAaj5B,GAAUn3F,UAAU+3D,SACnCq4D,GAAcj5B,IAAav9F,KAAKq1H,oBACjCr1H,KAAKq1H,kBAAoB93B,EAASoN,aAAaxqG,UAC5CH,KAAK+B,GACL,GAAGw7F,EAAS38F,MAAM41H,KAErBx2H,KAAKq1H,kBAAkBvwH,gBAAgBy4F,EAASx4F,aAChD/E,KAAKq1H,kBAAkB/xH,KAAK,CACzB6yH,WAAYn2H,KAAKo2H,iBAAiB7iG,KAAKvzB,MACvCq2H,cAAer2H,KAAKs2H,eAAe/iG,KAAKvzB,MACxCg+D,YAAah+D,KAAKu2H,oBAAoBhjG,KAAKvzB,QAGpD,CAEAmF,uBAAuBwlH,GACpB,MAAMzqH,EAAMF,KAAKE,IACX0F,EAAQ5F,KAAK4F,MAGbiwH,EAAYlyH,GAAGzD,EAAIy0H,UACzB,IAAKkB,EAAW,OAGhB71H,KAAKi9E,OACLr3E,EAAM6wH,aAAaz2H,KAAKU,KAAK0F,SAASkjB,kBACtC,MAAMzf,QAAajE,EAAMu5E,sBACtB02C,EACA71H,KAAKU,KAAKyB,QACVyD,EACA5F,KAAKU,KAAK+3D,uBAYb,GAVAz4D,KAAKq9E,QAGLxzE,EAAK5F,SAASmK,IACXA,EAAKzL,MAAQyL,EAAKC,IAAI,IAGzBwnH,EAAUn7C,UAAU5/D,WACpB+6G,EAAUn7C,UAAUj2E,OAAO,OAAQoF,GAEH,SAA5BjE,EAAMQ,SAASa,SAAqB,CACrC,MAAMyvH,EAAcb,EAAU5pH,WAE9B,IAAI0qH,GACsC,IAAtCD,EAAYrpH,QAAQs9G,EAAS/pH,MAC9B+1H,EAAgBD,EACX,GAAGA,KAAe/L,EAAS/pH,KAC3B+pH,EAAS/pH,IAEjBi1H,EAAUhxH,SAAS8xH,EACtB,MACGd,EAAUhxH,SAAS8lH,EAAS/pH,GAYlC,CAEA01H,iBAGG,OAFA3yH,GAAG3D,KAAKE,KAAKw0E,QAAQvK,WAEd,CACV,CAEAosD,sBACG,OAAO,CACV,CAEAtqH,SAAS8hB,GACN,OAAO/tB,KAAK4F,MAAMqG,SAAStI,GAAG3D,KAAKE,IAAIy0H,UAAW5mG,EACrD,CAEA6oG,SAASr6C,GACDA,IAELA,EAAMn3E,YACNm3E,EAAMl3E,eAAe,CAAEzD,KAAM,SAChC,CAEA2nG,UAAUhtB,GACFA,IAELA,EAAM70E,WACN60E,EAAM50E,iBACT,CAEA4tH,aAAajnG,GACV,MAAMloB,EAAWpG,KAAKoG,SAEtB,IAAKA,EAAS+3D,SAAU,OAExB,MAAMA,EAAWn+D,KAAKU,KAAKqE,YAAY+iB,WAAW1hB,EAAS+3D,UAEtDA,IAESx6D,GAAG3D,KAAKE,IAAIy0H,UAAU56C,cAGpC/5E,KAAKq1H,kBAAkBxT,UAAUrtG,MAAK,KACnC,MAAMmY,EAAKwxC,EAASxyC,eAEhBgB,IACDA,EAAGR,UAAUmC,GAEbtuB,KAAK62H,kBACF72H,KAAK62H,mBACLlqG,EAAGvqB,GAAG,mBAAmB,KACtBuqB,EAAGR,UAAUmC,EAAM,IAE5B,IAEN,CAEAnpB,eACG,MAAMjF,EAAMF,KAAKE,IACX21H,EAAYlyH,GAAGzD,EAAIy0H,UAEzB,IAAKkB,EAAW,OAEhB,MAAMjwH,EAAQ5F,KAAK4F,MAEnB,IAAKA,EAAO,OAEZ,MAAMrD,EAAOszH,EAAUnoH,MAEvB,IAAKnL,EAAM,OAEX,MAAMu0H,EAAQnzH,GAAGpB,GAEjB,IAAKu0H,EAAO,OAEZ,MAAM1wH,EAAWpG,KAAKoG,SACtB,IAAIkjB,EAAmB,CACpBC,KAAM,MACNpI,MAAO,IAeV,GAZI/a,GAAUkjB,kBAAkBnI,OAAOhb,SACpCmjB,EAAmBtpB,KAAK+B,GAAG2D,UACxB1F,KAAKU,KAAK0F,SAASkjB,oBAUpBljB,GAAU2wH,sBAAwB,IAAI1pH,QAAQ,MAAQ,EAAG,CAC3D,MAAM1H,EAASS,EAAS2wH,qBAAqB9uG,MAAM,KAChD+uG,EAAerxH,EAAO,GACtBsxH,EAAiBtxH,EAAO,GAE3B2jB,EAAiBnI,MAAM7c,KAAK,CACzBD,IAAK4yH,EACLxnG,KAAM,uBACN9sB,MAAOq0H,GAEb,CAEA,MAAME,EAA2B,CAAClqF,EAAY0zC,EAAQ,IAC5C,IACD1zC,EAAW7rB,MACVrY,QAAQuB,GAAiB,yBAAXA,EAAEolB,OAChBthB,KAAK9D,IACH,MAAM8sH,EAAuBhjH,OAAOsnC,OAAO,CAAC,EAAGpxC,GAI/C,OAFA8sH,EAAqBz2C,MAAQA,EAEtBy2C,CAAoB,KAElC5vG,UACIylB,EAAW7rB,MACVrY,QAAQuB,GAAMA,EAAEkf,OAChBpb,KAAK9D,GAAM6sH,EAAyB7sH,EAAGq2E,EAAQ,MAInD6c,EAAWv9F,KAAKU,KAChB8/E,EAAwB02C,EAC3B5tG,GACDnb,KAAK9D,IACJ,IAAK,MAAMhG,KAAOk5F,EAASxoF,OAAOwzF,eAAgB,CAC/C,KAEMhL,EAASxoF,OAAOwzF,eAAelkG,aAC/BrE,KAAKL,aAGR,SAEH,MAAMy3H,EAAMzzH,GACT45F,EAASxoF,OAAOwzF,eAAelkG,GAC3B5D,KACAoB,KAAKirB,MAAMuqG,GAAOA,EAAGtB,WAAUA,SAGtC,GAAIqB,GAAKn1H,QAAQkF,OAASkD,EAAE1H,MAAO,CAGhC0H,EAAEy2E,YAAcs2C,EAEhB,KACH,CACH,CAEA,MAAM73B,EAAKv/F,KAAK+B,GACV6D,EAAQ25F,EACVxnF,WAAW3R,EAAS4R,UACpBjK,UAAU3H,EAASsE,SAEjB4sH,EADe/3B,EAAGxnF,WAAWnS,EAAMQ,SAASO,YACjBoH,UAAU1D,EAAEhG,KAc7C,OATGgG,EAAE22E,aAHDs2C,GAAalxH,UAAUgB,WAGPm4F,EACbxnF,WAAWu/G,EAAYlxH,SAASO,YAChCI,QACG+B,GACEA,EAAOlI,KAAO02H,EAAYlxH,SAASiB,YACnCiwH,EAAYlxH,SAASkB,cACzB,GAAGR,WACa,KAEjBuD,CAAC,IAgBX,GAbAkzF,EAASp7F,QAAU,CAChBi5D,SAAUh1D,EAASg1D,SACnBjmC,QAAS7L,EACT3b,KAAMvH,EAASijB,gBAAgB9c,WAC/Bq5C,SAA+B,IAArBx/C,EAAShB,QACnBouD,YACIptD,EAAS+3D,UAAkC,SAAtB/3D,EAAS+3D,UAClCqiB,yBAMC+c,EAASp7F,QAAQyjD,SAAU,CAC5B,MAAM2xE,EAAe,GAErB/2C,EAAsBv8E,SAASi0F,IAC5B,GAAIA,EAAGpX,aAAeoX,EAAG7zF,IAAK,CAC3B,MAAMmzH,EAAqB7zH,GAAGu0F,EAAGpX,YAAY7+E,OAAOrB,IAEpD,IAAI62H,EAAc,KAEbD,GAOY5xH,EAAMqG,SAASurH,KAI1BC,EAAc,CACX72H,GAAIs3F,EAAGpX,YAAY7+E,OAAOrB,GAC1BQ,MAAOo2H,EAAmBv1H,OAAOb,QAIvCo2H,EAAmB7oG,YAChB,YACAxpB,MAAOkF,IACcmtH,EAAmBvrH,YAGlC6qH,EAAMryH,OAAO,YAAY,GACzBqyH,EAAMryH,OACH,cACAzE,KAAKoB,MAAM,iBAEdpB,KAAKi9E,aACCr3E,EAAMu5E,sBACT23C,EACAv5B,EAASp7F,QACTyD,EACA23F,EAAS9kC,uBAEZz4D,KAAKq9E,UAELy5C,EAAMryH,OAAO,YAAY,GACzBqyH,EAAMryH,OACH,cACAzE,KAAKoB,MAAM,qCAAsC,CAC9Co2H,EAAmBv1H,OAAOb,UAOnC01H,EAAMpyH,SAAS,IAElB,IAhDH+yH,EAAc,CACX72H,GAAI,gBACJQ,MAAOpB,KAAKoB,MAAM,mBAmDrBq2H,GACAF,EAAanhE,WAAW/rD,GAAMA,EAAEzJ,KAAO62H,EAAY72H,KAAM,GAEzD22H,EAAajzH,KAAKmzH,EACxB,KAGCF,EAAapxH,SAAW2wH,EAAM7qH,YAC/B6qH,EAAMryH,OAAO,YAAY,GACzBqyH,EAAMryH,OACH,cACAzE,KAAKoB,MAAM,qCAAsC,CAC9Cm2H,EAAappH,KAAK9D,GAAMA,EAAEjJ,QAAOkN,KAAK,WAI5CwoH,EAAMryH,OAAO,YAAY,GACzBqyH,EAAMryH,OAAO,cAAezE,KAAKoB,MAAM,iBAE7C,MACG01H,EAAMryH,OAAO,cAAe,IAC5BqyH,EAAMryH,OAAO,YAAY,GAG5BqyH,EAAMpyH,UAEN1E,KAAKi9E,aACCr3E,EAAMu5E,sBAET02C,EACAt4B,EAASp7F,QACTyD,EACA23F,EAAS9kC,uBAEZz4D,KAAKq9E,QAGL,MAAM6K,EAAS,GAAGtiF,EAAMvB,OAAOuB,EAAMkB,cAAclB,EAAMhF,MAAM28F,EAASxoF,OAAOnU,KAC/E2B,EAAKm/E,aAAa,UAAWwG,GAG7BloF,KAAKw1H,UAAUK,EAAU5pH,WAC5B,CAEAgxE,OACG,MAAM44C,EAAYlyH,GAAG3D,KAAKE,IAAIy0H,UAE9BkB,GAAWzwH,UACXywH,GAAWxwH,eAAe,CAAEzD,KAAM,QACrC,CAEAy7E,QACG,MAAMw4C,EAAYlyH,GAAG3D,KAAKE,IAAIy0H,UAE9BkB,GAAWnuH,SACXmuH,GAAWluH,gBACd,oBC9mBH,MAAM0jG,EAA0B,EAAQ,OAClCujB,EAAe,EAAQ,OACvB8I,EAAoB,EAAQ,OAIlCj4H,EAAOC,QAAU,cAAwC,EAGtDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,oBAAoB09F,EAAS38F,KAAMV,EAChE,CAEIy3H,gBACD,MAAMp6B,EAAWv9F,KAAKU,KAEhB40H,EADO/3B,EAAS9kC,uBACKryD,UAAY,CAAC,EAClCA,EAAWm3F,EAASn3F,UAAY,CAAC,EAEvC,IAAIspE,EAAW4lD,EAAaxzH,WAM5B,OAJIsE,EAASg1D,SAAUsU,GAAY,GAC1B4lD,EAAariE,WAA4C,QAA/BqiE,EAAaxgE,gBAC7C4a,EAAW,GAEPA,CACV,CAEAjvE,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QAEjB0vH,EADO/3B,EAAS9kC,uBACKryD,UAAY,CAAC,EAClCA,EAAWR,GAAOQ,UAAYm3F,EAASn3F,UAAY,CAAC,EAEpDwxH,EACHhyH,GAAOQ,UAAUkzC,UAAYt5C,KAAKoG,SAASkzC,SACtC,iBACA,GAER,IAAI00E,EAAgB,GAEhBsH,EAAariE,YAEX+6D,EADgC,QAA/BsH,EAAaxgE,cACE,+KAA+K8iE,qBAE/K,mMAAmMA,sBAGzN,IAAI72H,EAAS,GAET6E,aAAiBgpH,EACdxoH,EAASm4C,UACyB,QAA/B+2E,EAAaxgE,eACd/zD,EAASukB,SAASlf,EAASo4C,cAlDnB,GAmDRz9C,GAAU,IAEVA,EAASukB,SAASlf,EAASo4C,cArDnB,GAwDXz9C,EADuC,QAA/Bu0H,EAAaxgE,cACZ+iE,IAxDE,GA8DNvC,EAAariE,WAA4C,QAA/BqiE,EAAaxgE,gBAC/C/zD,EA/Dc,IAiEjB,MAAMwhE,EAAW,2BACd+yD,EAAaxgE,kBAEiB,OAA9BwgE,EAAaxgE,cAAyB,GAAKk5D,oBAE1Ch7G,QAAQ,WAAYsiH,EAAaxzH,YACjCkR,QAAQ,WAAYpN,EAAMxE,OAC1B4R,QACE,cACApN,GACKmqE,aAAa,CACZ/uE,MAAOhB,KAAK23H,UACZ52H,OAAQA,EACR6kD,UAAU,IAEZ2c,SAAS,CAAC,IAAM,IAG1B,OAAOziE,MAAMW,GAAG,CACbC,KAAM,YACNoB,WAAY,EACZ0qH,SAAU,EACVD,SAAU,EACVrrH,IAAK,kBAILO,KAAM,CACHf,KAAM,IAAIg3H,EAAkB13H,KAAK+B,GAAGi4B,MAAM31B,IAC1CnD,IAAK,iBACLS,YAAY,EACZ4gE,SAAUA,EACVxhE,OAAQA,EACR8gH,QAAS,CACN8T,YAAa,CAACvgG,EAAK/qB,EAAGurH,KACnB,GAAyB,IAArBxvH,EAAShB,QAAe,OAE5B,IAAI2oB,EAAU,CAAC,EAEf,MAAMqtC,EACHp7D,MAAMy4D,yBACNz4D,KAAKU,MAAM+3D,wBAEd,GAAI2C,EAAU,CACX,MAAM5oC,EAAK4oC,EAASzvC,eAChB6G,IAAIzE,EAAUyE,EAAGjG,aAAe,CAAC,EACxC,CAGA,IAAIhqB,EAAOoB,GAAGiyH,GAAKnqH,gBAAgBiC,MACnC9H,GAAOu4E,WACJpwD,EACA/tB,KAAK83H,OACLv1H,EACAvC,KAAKE,IAAIy0H,SACTv/F,EACF,KAKhB,CAEA5qB,SACG,MAAMtK,EAAMF,KAAKE,IACX21H,EAAYlyH,GAAGzD,EAAIy0H,UAEzB,IAAKkB,EAAW,OAEhB,MAAMt4B,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QAEpBrD,EAAOszH,EAAUnoH,MAGdw6E,EAAS,GAAGqV,EAASl5F,OAAOuB,EAAMvB,OAAOuB,EAAMkB,cAAcy2F,EAAS38F,MAAM28F,EAASxoF,OAAOnU,KAClG2B,EAAKm/E,aAAa,UAAWwG,GAE7B,MAAM/lF,EAAU,CACb0iF,OAAQ3kF,EAAIy0H,SACZ/uE,SAAwC,IAA9B23C,EAASn3F,SAAShB,SAG3BQ,aAAiBgpH,IAClBzsH,EAAQpB,OAAS6E,EAAMQ,SAASm4C,WAC3Bj5B,SAAS1f,EAAMQ,SAASo4C,cAtJf,GAwJdr8C,EAAQnB,MAAQ4E,EAAMQ,SAASi4C,UAC1B/4B,SAAS1f,EAAMQ,SAASk4C,aACxBt+C,KAAK23H,WAGb/xH,EAAM6qE,cArBO,CAAC,EAqBezwE,KAAK+B,GAAGi4B,KAAMz3B,EAAMJ,EACpD,CAEA8J,SAAS8hB,GACN,MAAMnoB,EAAQ5F,KAAKU,KAAKkF,QAClBiwH,EAAYlyH,GAAG3D,KAAKE,IAAIy0H,UAE9B,OAAO/uH,EAAMqG,SAAS4pH,EAAW9nG,EACpC,oBCzKH,MAAMs9E,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAA4C,EAG1DC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,wBAAwB09F,EAAS38F,KAAMV,EACpE,CAEAO,KACG,MAAMmF,EAAQ5F,KAAKU,KAAKkF,QAElBu4F,EAAM,CACTz9F,KAAM,cAGT,OAAKkF,GAG8B,IAA/BA,EAAMQ,UAAUqzC,aAAkB0kD,EAAIv8F,KAAO,QAG/B,aAAdgE,EAAMvB,KAAqD,IAA/BuB,EAAMQ,UAAUi1C,aAC7C8iD,EAAIp/B,YAAa,GAGpBo/B,EAAIv4C,UAAW,GAGXu4C,EAAIx7F,OAAWw7F,EAAIx7F,iBAAiB4d,OACrC49E,EAAIx7F,MAAQ,IAAI4d,KAAK49E,EAAIx7F,QAGd,OAAViD,GAAmBoT,OAAO6oE,cAAasc,EAAI79E,OAAS1a,EAAMm1C,aAEvDj7C,MAAMW,GAAG09F,IAnBGA,CAoBtB,oBCpCH,MAAMvB,EAAkB,WAExBn9F,EAAOC,QAAU,cAAsCk9F,EACpDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,kBAAkB09F,EAAS38F,KACrCuT,OAAOsnC,OAAO,CAAEk5E,SAAU,IAAMz0H,GAEtC,CAEAO,GAAGs3H,EAAsB,CAAC,GAEvB,MAAMx6B,EAAWv9F,KAAKU,KAChBwJ,EAAOqzF,EAAS9kC,sBACnB7yD,EAAQ23F,EAAS33F,WAAa,KAE3BQ,EAAW8D,GAAM9D,UAAY,CAAC,EAC9B4xH,EAAc,CACjBp3H,GAAIZ,KAAKE,IAAIy0H,SACb7/D,cAAe1uD,EAAS0uD,cACxBhzD,WAAYsE,EAAStE,WACrBV,MANQ,IASX,GAAIwE,EAAO,CACRoyH,EAAY7wH,KAAOvB,EAAMkB,WAGzB,MAAM+C,EAAO,CAAC,EAEdjE,EAAM88B,aAAa74B,GAEfA,EAAKjE,EAAMkB,cAAakxH,EAAYr1H,MAAQkH,EAAKjE,EAAMkB,aAEvDV,EAAS6sD,YAAW+kE,EAAY52H,MAAQwE,EAAMxE,QAE9CwE,EAAMQ,SAASkzC,UAAYikD,EAASn3F,UAAUkzC,YAC/C0+E,EAAY1+E,SAAW,GAES,IAA/BikD,EAASn3F,UAAUhB,UAAe4yH,EAAY7xF,UAAW,GAG7D6xF,EAAY51H,GAAK,CACd+0E,gBACG,GAAIn3E,KAAK06E,QAAS,CACf,MAAMhG,EAAQ10E,KAAKi7E,WAEnB,IAAKvG,EAAO,OAEZ10E,KAAK06E,UAAU7wE,KAAK03E,MAAMC,IACvB,IAAKA,EAAQ,OAGb,MAAMj/E,EAAOmyE,EAAMhnE,MAAM+zE,cACtB,iBAAiBD,GAAQ5gF,IAAM,IAC3B8T,WACAnB,WAAW,IAAK,YAGlBhR,GAELA,EAAKm/E,aACF,UACA,GAAG97E,EAAMvB,eAAem9E,EAAO5gF,MAAMgF,EAAMhF,MACxCsJ,GAAMtJ,IAAM,OAEjB,GAEP,CAEAZ,KAAKokG,iBAAiB1iB,eACnB,UACA,GAAG97E,EAAMvB,OAAOuB,EAAMkB,cAAclB,EAAMhF,MACvCsJ,GAAMtJ,IAAM,OAGrB,GAMHo3H,EAAYr+C,SAAW,CAAC3jE,EAAKnM,EAAMotB,KAChC,MAAM1vB,EAAYvH,KAAK+B,GAAG8b,WAAWtW,YAIrC,OAFA3B,EAAMiqB,YAAYhmB,EAAMtC,GAEjBA,EAAUiW,MAAM,CAE7B,CAEA,MAAM2gF,EAAMr+F,MAAMW,GAAG,CAClB0T,OAAOsnC,OAAO,CAAC,EAAGu8E,EAAaD,KAKlC,cAFO55B,EAAIv8F,KAEJu8F,CACV,oBCnGH,MAAMkN,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAAsC2rG,EACpD1rG,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,kBAAkB09F,EAAS38F,KAAMV,GACjC,UAAtBF,KAAKoG,SAASxE,OACf5B,KAAKi4H,UAAYj4H,KAAK+B,GAAG6xB,iBACtB,GAAG2pE,EAAS38F,mBACZ,CACGk0E,cAAc,EACd/zE,OAAQ,IACRY,YAAY,EACZorC,gBAAgB,IAI5B,CAEAmrF,eAAerwE,GACZ,GACGA,GAAUzhD,UAAU+xH,aACpBtwE,GAAUnnD,MAAMqU,QAAQwzF,eACzB,CACC,IAAI4vB,EAAc,GAClB,IAAK,MAAO9zH,EAAK1B,KAAUwR,OAAOikH,QAC/BvwE,EAASnnD,KAAKqU,OAAOwzF,gBAEjB5lG,EAAMyD,SAASsE,SAAWm9C,EAASzhD,SAAS+xH,cAC7CA,EAAcx1H,GAIpB,OAAIw1H,GAAaj4H,KAAKy0H,SACZwD,EAAYj4H,IAAIy0H,SAEhB,EAEb,CACG,MAAO,EAEb,CAEI0D,uBAED,IAAIlyG,EAAUnmB,KAAK+B,GAAGokB,UAGlBmyG,EAAe,GAKnB,OAJAnyG,EAAQliB,SAAS6T,IACdwgH,EAAah0H,KAAK,CAAE1D,GAAIkX,EAAIlX,GAAIQ,MAAO0W,EAAI1W,OAAQ,IAG/Ck3H,CACV,CAEAC,cAAc5yH,GACX,GAAIA,EAAQ,CACT,IAAI6yH,EAAY,GAChB7yH,EAAO1B,SAAS6T,IACb,IACI/Q,EADS/G,KAAK+B,GAAGgW,WAAWD,GACZ/Q,SAChBA,EAAOZ,QACRY,EAAO9C,SAAS+C,IACbwxH,EAAUl0H,KAAK0C,EAAE,GAEvB,IAEHhH,KAAKi4H,UAAUpkG,WAAW2kG,GACtB70H,GAAG3D,KAAKE,IAAIy0H,UAAU1yH,OAAOU,OAC9B3C,KAAKi4H,UAAUpzH,SAASlB,GAAG3D,KAAKE,IAAIy0H,UAAU1yH,OAAOU,MAC3D,MACG3C,KAAKi4H,UAAUpkG,WAAW,IACtBlwB,GAAG3D,KAAKE,IAAIy0H,UAAU1yH,OAAOU,OAC9B3C,KAAKi4H,UAAUpzH,SAASlB,GAAG3D,KAAKE,IAAIy0H,UAAU1yH,OAAOU,MAE9D,CAEAsJ,WACG,OAAOjM,KAAKi4H,UAAUhsH,UACzB,CAEApH,SAASwjG,GACN1kG,GAAG3D,KAAKE,IAAIy0H,UAAU1yH,OAAOU,MAAQ0lG,CACxC,CAEA5nG,KACG,MAAM09F,EAAM,CAAC,EAEb,OACGn+F,KAAKoG,SAASxE,MACd5B,KAAKU,KAAK0F,SAASxE,MACnB5B,KAAKU,KAAKf,YAAY8iC,gBAAgB7gC,MAEtC,IAAK,SACFu8F,EAAIz9F,KAAO,WACXy9F,EAAIh4D,UAAW,EACfg4D,EAAIp9F,OAAS,IACbo9F,EAAI79E,OAAS,CACV/I,MAAO,SAAUkhH,GACd,IACGA,EAAS5kH,KAAK0D,MAAMkhH,EAGvB,CAFE,MAAOtwH,GAET,CACA,OAAOswH,CACV,EACA9uD,KAAM,SAAU71D,GACb,IACGA,EAAYD,KAAKC,UAAUA,EAG9B,CAFE,MAAO3L,GAET,CACA,OAAO2L,CACV,GAEH,MACH,IAAK,eACFqqF,EAAIz9F,KAAO,aACXy9F,EAAIzmB,YAAc13E,KAAKoB,MAAM,qCAC7B+8F,EAAInf,QAAS,EACbmf,EAAIu6B,cAAe,EACnBv6B,EAAI/kB,QAAU,CACXs8C,WAAW,EACXj0H,KAAM,CACHoI,KAAM7J,KAAKq4H,iBACX91D,SAAU9+D,MAAM8+D,SAAS,aAG/B,MACH,IAAK,SACF47B,EAAIz9F,KAAO,YACXy9F,EAAIj9F,IAAM,kBACVi9F,EAAI18F,KAAOzB,KAAKi4H,UAAUx3H,GAIhC,OAAOX,MAAMW,GAAG09F,EACnB,CAEA76F,OAIA,CAEAkH,SAEG,GADYxK,KAAKS,KACW,UAAxBT,MAAMoG,UAAUxE,KAAkB,CACnC,IAAIu2H,EAAcn4H,KAAKk4H,eAAel4H,MACtC,IAAK2D,GAAGw0H,GAAc,OACtBx0H,GAAGw0H,GAAahsD,YAAY,YAC5BxoE,GAAGw0H,GAAaxpG,YAAY,YAAahpB,IACtC3F,KAAKu4H,cAAc5yH,EAAO,IAE7B3F,KAAKi4H,UAAU30H,KAAK,CAAEypC,gBAAgB,IACtC/sC,KAAKi4H,UAAU71H,GAAG,WAAY4T,IAC3BhW,KAAK6E,SAASmR,EAAI,IAEjBrS,GAAG3D,KAAKE,IAAIy0H,UAAU1yH,OAAOU,MAC9B3C,KAAKi4H,UAAUpzH,SAASlB,GAAG3D,KAAKE,IAAIy0H,UAAU1yH,OAAOU,OAErD3C,KAAKi4H,UAAUpzH,SAAS,GAE9B,CACH,oBCpKH,MAAMwmG,EAA0B,EAAQ,OAClCstB,EAAkB,EAAQ,OAEhCl5H,EAAOC,QAAU,cAAwC,EAGtDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,oBAAoB09F,EAAS38F,KAAMV,GAE7DF,KAAK44H,oBAAsB,IAC9B,CAEIC,yBACD,OAAQ74H,KAAK44H,oBACV54H,KAAK44H,qBAAuB,IAAID,EAAgB34H,KAAK+B,GAAGi4B,MAAM31B,GACpE,CAEA5D,KACG,OAAOX,MAAMW,GAAG,CACbC,KAAMV,KAAKoG,SAASi5D,UAAY,UAAYr/D,KAAK64H,mBACjDj3H,KAAM,SACN+3E,SAAW3jE,IAASoqC,MAAY,EAANpqC,IAEhC,oBCvBH,MAAMq1F,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAA0C,EAGxDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,sBAAsB09F,EAAS38F,KACzCuT,OAAOsnC,OACJ,CACG8mB,SAAU,IAEbriE,GAGT,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QAEjBu4F,EAAM,CACTz9F,KAAM,YACNoB,WAAY,EACZ0qH,SAAU,EACVD,SAAU,EACVvM,UAAU,EACV9+G,IAAK,oBAKLO,KAAM,CACHb,GAAIZ,KAAKE,IAAIqiE,SACb7hE,KAAM,QACNiB,YAAY,EACZT,IAAK,CAAE,mBAAoB,QAC3BE,MAAO,KAIPgF,EAAWm3F,EAAS9kC,sBAAsBryD,UAAY,CAAC,EAQ7D,OAN0B,GAAtBA,EAAS6sD,WAA+C,OAA1B7sD,EAAS0uD,cACxCqpC,EAAI18F,KAAKV,OAAS,GACV6E,EAAMQ,SAASm4C,UACvB4/C,EAAI18F,KAAKV,OAASukB,SAAS1f,EAAMQ,SAASo4C,cAAgB,GACtD2/C,EAAI18F,KAAKV,OAAS,GAElBjB,MAAMW,GAAG09F,EACnB,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM8zH,EAAYlyH,GAAG3D,KAAKE,IAAIy0H,UAE9B,IAAKkB,EAAW,OAEhB,MAAMt5C,EAAQs5C,EAAU97C,cAClBhsD,EAAUwuD,GAAO0P,aAAe,CAAC,EAEvCjsF,KAAK0E,QAAQqpB,GACbwuD,GAAO5tD,YAAY,YAAY,CAACtjB,EAAMC,KACnC,MAAMyiB,EAAUwuD,GAAO0P,aAAe,CAAC,EAEvCjsF,KAAK0E,QAAQqpB,EAAQ,GAE3B,CAEAvjB,SACG,MAAMqrH,EAAYlyH,GAAG3D,KAAKE,IAAIy0H,UAE9B,IAAKkB,EAAW,OAEhB,MACM9nG,EADQ8nG,EAAU97C,eACDkS,aAAe,CAAC,EAEvCjsF,KAAK0E,QAAQqpB,EAChB,CAEA9hB,SAAS8hB,GACN,MAAMnoB,EAAQ5F,KAAKU,KAAKkF,QAExB,OAAKA,EAEEmoB,EAAQnoB,EAAMkB,YAFF,IAGtB,CAEApC,QAAQqpB,GACL,MAAMwvE,EAAWv9F,KAAKU,KAChBwJ,EAAOqzF,EAAS9kC,sBACnB7yD,EAAQ23F,EAAS33F,QAEd0vH,EAAeprH,EAAK9D,UAAY,CAAC,EAEvC,IAAI4nH,EAAgB,GAEhBsH,EAAariE,YAEX+6D,EADgC,QAA/BsH,EAAaxgE,cACE,gLAAgLlvD,EAAMxE,gBAEtL,wBAAwBk0H,EAAaxzH,0KAA0K8D,EAAMxE,iBAG3O,IAAIsuE,EAAW4lD,EAAaxzH,WAExB9B,KAAKoG,SAASg1D,SAAUsU,GAAY,GAC/B4lD,EAAariE,WAA4C,QAA/BqiE,EAAaxgE,gBAC7C4a,EAAW,GAEd,MAAMnN,EACH,8BAA8ByrD,oBAAgCh7G,QAC3D,cACApN,EACImqE,aAAa,CACX/uE,MAAO0uE,EACP9pB,UAAU,IAEZ2c,SAASx0C,IAInBpqB,GAAG3D,KAAKE,IAAIqiE,WAAWu2D,QAAQv2D,EAClC,oBC7HH,MAAM8oC,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAAyD,EAGvEC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,4BAA4B09F,EAAS38F,KAAMV,EACxE,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QACpBQ,EAAWpG,KAAKoG,SACbjE,EAAU,GAEG,SAAfyD,GAAOvB,IAAgBlC,EAAQmC,QAAQsB,EAAMswD,YACxCtwD,GACNzD,EAAQmC,QAASsB,EAAMQ,SAASjE,SAAWiE,EAASjE,SAAW,IAElE,MAAMjC,EAAMF,KAAKE,IACXi+F,EAAM,CACTv9F,GAAIV,EAAIy0H,SACRj0H,KAAM0F,EAASxE,MAAQ27F,EAAS59F,YAAY8iC,gBAAgB7gC,KAC5DO,QAASA,EAAQgM,KAAK8wC,IACZ,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,KACX8wC,IAAKF,EAAIE,SAKlB,OAAQg/C,EAAIz9F,MACT,IAAK,aACFy9F,EAAI46B,SAAU,EACd56B,EAAIj9F,IAAM,yBACVi9F,EAAI66B,YAAerzH,IAChB,MAAMszH,EAAkB,GAClBpD,EAAYlyH,GAAGzD,EAAIy0H,WAAahxH,GAAGw6F,EAAIv9F,IAE7C+E,EAAO1B,SAAS+R,IACbijH,EAAgB30H,KAAKuxH,EAAUn7C,UAAUjuD,QAAQzW,GAAK,IAGzD,IAAIvQ,EAAOwzH,EAEPrzH,EAAMwhF,qBACP3hF,EAAOG,EAAMwhF,mBAAmBxhF,EAAOqzH,IAE1C,MAAM9wC,EAAQ,GAkBd,OAhBA1iF,EAAKxB,SAAS+R,IACX,IAAI+wE,EAAiB,GACjBC,EAAY,GAEZphF,EAAMQ,SAAS04C,WAAa9oC,EAAImpC,MACjC4nC,EAAiB,iBACjBC,EAAY,eAAehxE,EAAImpC,QAGlC,MAAM9wC,EAAO2H,EAAI3H,KAAO2H,EAAI3H,KAAO2H,EAAIrT,MAEvCwlF,EAAM7jF,KACH,uCAAuCyiF,aAA0BC,gBAAwBhxE,EAAIpV,aAAayN,sGAC5G,IAGG85E,EAAM75E,KAAK,GAAG,EAGxB,MAEH,IAAK,WAEF6vF,EAAIh8F,QAAQmC,KAAK,CACd1D,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,YAM3B,OAAOtB,MAAMW,GAAG09F,EACnB,CAEAlyF,SAAS8hB,GACN,MAAMnoB,EAAQ5F,KAAKU,KAAKkF,QACrBiwH,EAAYlyH,GAAG3D,KAAKE,IAAIy0H,UAE3B,OAAO/uH,EAAMqG,SAAS4pH,EAAW9nG,EACpC,oBC1FH,MAAMs9E,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAAuD,EAGrEC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,0BAA0B09F,EAAS38F,KAAMV,EACtE,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QACpBQ,EAAWm3F,EAASn3F,SACjBjE,EAAU,GAEG,SAAfyD,GAAOvB,IAAgBlC,EAAQmC,QAAQsB,EAAMswD,YACxCtwD,EACNzD,EAAQmC,QAASsB,EAAMQ,SAASjE,SAAWiE,EAASjE,SAAW,IAC7DA,EAAQmC,QAAS8B,EAASjE,SAAW,IAE1C,MAAMg8F,EAAM,CACTz9F,KAAM0F,EAASxE,MAAQ27F,EAAS59F,YAAY8iC,gBAAgB7gC,MAkD/D,OA/CIgE,GAAOQ,SAAS04C,WACjBq/C,EAAIj9F,IAAM,kBACVi9F,EAAIh8F,QAAU,CACXzB,KAAM,UACNe,KAAM,CACHf,KAAM,OACNmJ,KAAM1H,EAAQgM,KAAK8wC,IACT,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,MAAQ4wC,EAAIt8C,MACvBw8C,IAAKv5C,EAAMQ,SAAS04C,UAAYG,EAAIE,IAAM,OAGhDojB,SAAU,SAAU5/D,GACjB,MAAMwlF,EAAQ,GAEd,IAAIpB,EAAiB,GACjBC,EAAY,GAWhB,OATIrkF,EAAMw8C,MACP4nC,EAAiB,iBACjBC,EAAY,eAAerkF,EAAMw8C,QAGpCgpC,EAAM7jF,KACH,uCAAuCyiF,aAA0BC,gBAAwBrkF,EAAM/B,aAAa+B,EAAMA,uBAG9GwlF,EAAM75E,KAAK,GACrB,KAIN6vF,EAAIh8F,QAAUA,EAAQgM,KAAK8wC,IACjB,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,MAAQ4wC,EAAIt8C,UAKf,UAAbw7F,EAAIz9F,MAAoBy9F,EAAIh8F,QAAQgE,OAAS,GAC9Cg4F,EAAIh8F,QAAQmC,KAAK,CACd1D,GAAI,OACJ+B,MAAO3C,KAAKoB,MAAM,YAGjBtB,MAAMW,GAAG09F,EACnB,oBCxEH,MAAMkN,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAAyC,EAGvDC,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,qBAAqB09F,EAAS38F,KAAMV,EACjE,CAEAO,KACG,MAAM09F,EAAM,CAAC,EAEb,OACGn+F,KAAKoG,SAASxE,MACd5B,KAAKU,KAAK0F,SAASxE,MACnB5B,KAAKU,KAAKf,YAAY8iC,gBAAgB7gC,MAEtC,IAAK,SACFu8F,EAAIz9F,KAAO,OACX,MACH,IAAK,WACFy9F,EAAIz9F,KAAO,WACXy9F,EAAIp9F,OAAS,IACb,MACH,IAAK,OACFo9F,EAAIz9F,KAAO,YACXy9F,EAAIp9F,OAAS,IACbo9F,EAAIj9F,IAAM,eACVi9F,EAAI18F,KAAO,CACRf,KAAM,iBACNiC,MAAO,GACPi0G,IAAK,2BACL30G,OAAQ,CACL2f,QAAS,OACTs3G,QAAS,cACTpmB,QACG,mJAMf,OAAOhzG,MAAMW,GAAG09F,EACnB,CAEA3zF,SACG,MAAMpE,EAAWpG,KAAKU,KAAK0F,UAAY,CAAC,EAElC4xH,EADMh4H,KAAKS,KACOoB,KAAK,GAC7B,IAAIg0H,EAAYlyH,GAAGq0H,EAAYp3H,IAI/B,GAAsB,SAAlBwF,EAASxE,MAAmBi0H,EAAW,CAExCA,EAAY71H,KAAK+B,GAAG0Y,MAAMha,GAAGu3H,EAAanC,GAG1C,MAAMt4B,EAAWv9F,KAAKU,KAEtBm1H,EACI/qH,gBAAgB,GAChBquH,WAAU,GACV3kH,MAAMlP,IACJ,MAAM4iF,EAAS,GAAGqV,EAASl5F,YAAY2zH,EAAY7wH,QAChDo2F,EAAS38F,IAAM,MACd28F,EAASxoF,QAAQnU,IAAM,KAE3B0E,EAAO8zH,qBAAqB13C,aAAa,UAAWwG,EAAO,GAEpE,CACH,mBCvEH,MAAMmjB,EAA0B,EAAQ,OAExC5rG,EAAOC,QAAU,cAAsC2rG,EACpD1rG,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,kBAAkB09F,EAAS38F,KAAMV,EAC9D,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAChBkF,EAAQ23F,EAAS33F,QAEjBu4F,EAAM,CAAC,EAGb,IAAKv4F,EAAO,OAAO9F,MAAMW,GAAG09F,GAE5B,MAAMm3B,EAAe/3B,EAAS9kC,sBAAsBryD,UAAY,CAAC,EAE3DwxH,EACyB,IAA5BhyH,EAAMQ,SAASkzC,SAAiB,iBAAmB,GAEtD,IAAI00E,EAAgB,GAEhBsH,EAAariE,YAEX+6D,EADgC,QAA/BsH,EAAaxgE,cACE,+KAA+K8iE,qBAE/K,mMAAmMA,sBAGzN,IAAIloD,EAAW4lD,EAAaxzH,WAExB9B,KAAKoG,SAASg1D,WAAUsU,GAAY,IAExC,MAAMnN,EAAW,GAAGyrD,cAChBh7G,QAAQ,WAAYsiH,EAAaxzH,YACjCkR,QAAQ,WAAYpN,EAAMxE,OAC1B4R,QACE,cACApN,EAAMmqE,aAAa,CAChB/uE,MAAO0uE,IACPnN,UAuBT,OApBA47B,EAAIz9F,KAAO,WACXy9F,EAAIj9F,IAAM,eACVi9F,EAAIp9F,OAC4B,IAA7B6E,EAAMQ,SAASm4C,UACVj5B,SAAS1f,EAAMQ,SAASo4C,aACxB,GACR2/C,EAAIx8F,YAAa,EAEjBw8F,EAAI57B,SAAW,4BAA4BA,UAE3C47B,EAAI0jB,QAAU,CACX8T,YAAa,CAAC/0H,EAAIyJ,EAAGurH,KAClB,MAAM7nG,EAAU,CAAC,EACdxrB,EAAOoB,GAAG3D,KAAKE,IAAIy0H,UAAUjnH,MAEhCqgB,EAAQnoB,EAAMkB,YAAc9G,KAAKiM,WACjCrG,EAAMu4E,WAAWpwD,EAAS/tB,KAAK+B,GAAGi4B,KAAMz3B,EAAMvC,KAAK,GAIlDF,MAAMW,GAAG09F,EACnB,CAEAlyF,SAAS8hB,GACN,IAAItoB,EAAO9B,GAAG3D,KAAKE,IAAIy0H,UAAU1oC,YAKjC,OAFI9+E,MAAMC,QAAQ3H,IAAyB,IAAhBA,EAAKU,SAAcV,EAAO,IAE9CA,CACV,oBC1EH,MAAMm3F,EAAkB,WAExBn9F,EAAOC,QAAU,cAAmCk9F,EACjDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,eAAe09F,EAAS38F,KAClCuT,OAAOsnC,OAAO,CAAE4a,MAAO,IAAMn2D,GAEnC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChB+3F,EAAMr+F,MAAMW,GAAG,CAClB,CACGU,KAAM,CACH,CACGP,GAAIZ,KAAKE,IAAIm2D,MACb31D,KAAM,WACN6hE,SAAU,GACVxhE,OAAQqF,EAASrF,OACjBC,MAAOoF,EAASpF,OAEnB,CAAC,MAOV,cAFOm9F,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMs3H,EAAS11H,GAAG3D,KAAKE,IAAIm2D,OAE3B,IAAKgjE,EAAQ,OAEb,MAAMjzH,EAAWpG,KAAKoG,SAElBA,EAAS22C,SACVs8E,EAAO50H,OACJ,WACA,mBAAmB2B,EAAS22C,qBAAqB32C,EAASrF,kBAAkBqF,EAASpF,WAEtFq4H,EAAO50H,OAAO,WAAY,IAE/B40H,EAAO30H,SACV,oBClDH,MAAMk4F,EAAkB,WAClB08B,EAAkB,EAAQ,OAEhC75H,EAAOC,QAAU,cAAoCk9F,EAClDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,gBAAgB09F,EAAS38F,KACnCuT,OAAOsnC,OACJ,CACG89E,WAAY,GAEZC,OAAQ,GACRC,QAAS,GACTC,cAAe,IAElBx5H,IAINF,KAAK25H,SAAW,IAAIL,EACjBt5H,KACAA,KAAKE,IAAIw5H,cACT15H,KAAKoG,SAAS+7D,YAGjBniE,KAAK45H,qBAAuB,KAC5B55H,KAAK65H,uBAAyB,KAC9B75H,KAAK85H,kBAAoB,KAEzB95H,KAAKyiE,aAAe86B,EAAS96B,aAE7BziE,KAAK+5H,oBAAsB,KAC3B/5H,KAAKg6H,gBAAkB,KACvBh6H,KAAKi6H,aAAe,KACpBj6H,KAAKk6H,aAAe,IACvB,CAEIz0E,qBACD,OAAQzlD,KAAKg6H,gBACVh6H,KAAKg6H,iBACLh6H,KAAK+B,GAAGwc,MAAM/e,eAAe26H,WAAW,gBAC9C,CAEIC,kBACD,OAAQp6H,KAAKi6H,aACVj6H,KAAKi6H,cAAgBj6H,KAAK+B,GAAGwc,MAAM/e,eAAe26H,WAAW,OACnE,CAEIztE,kBACD,OAAQ1sD,KAAKk6H,aACVl6H,KAAKk6H,cAAgBl6H,KAAK+B,GAAGwc,MAAM/e,eAAe26H,WAAW,OACnE,CAEA15H,KACG,MAAMP,EAAMF,KAAKE,IACX87E,EAAOh8E,KACPm+F,EAAMr+F,MAAMW,GAAG,CAClB,CACGG,GAAIV,EAAIq5H,WACRp4H,KAAM,CACH,CACGP,GAAIV,EAAIs5H,OACR94H,KAAM,SACNS,KAAM,GACN0P,SAAU,CACPnQ,KAAM,OAGN6hE,SAAU,qCACVvhE,MAAO,IACPoB,GAAI,CACDi4H,eAAgB,KAEb,IAAKr+C,EAAK+9C,oBAAqB,OAE/B,MAAMO,EAASt6H,KAAKu6H,eAAc,GAE7BD,GAELt+C,EAAKw+C,YAAYx+C,EAAK+9C,oBAAqBO,EAAO,IAI3Dh1H,QAAQ,EACR8J,MAAO,GACPqrH,KAAM,GACN5wH,KAAM,GACNzH,GAAI,CACDs4H,kBAAmB,CAACtuG,EAAQniB,KACzBjK,KAAKsuG,uBAAuBniF,UAAUC,GACtCpsB,KAAKwP,KAAK,SAAU4c,GAEpB,MAAMuuG,EAAWh3H,GAAGzD,EAAIu5H,SAExB,GAAIrtG,EAAQ,CACT,MAAMviB,EAAOlG,GAAGzD,EAAIs5H,QAAQ/sG,QAAQL,GAEpCpsB,KAAK25H,SAAS/0H,KAAKiF,GAEnB8wH,GAAU/1H,MACb,MACG5E,KAAK25H,SAASh1H,OAEdg2H,GAAUh2H,MACb,EAEHi2H,oBAAqB,CAACtsG,EAAOjX,KAC1BrX,KAAK66H,aAAavsG,EAAOjX,EAAO,EAEnCyjH,cAAgBxsG,IAEbtuB,KAAK+5H,oBAAsBzrG,CAAK,IAIzC,CACG1tB,GAAIV,EAAIu5H,QACR/4H,KAAM,UACNQ,IAAK,UACLF,MAAO,GACP6zE,QAAQ,GAEX70E,KAAK25H,SAASl5H,SAOvB,cAFO09F,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAMy9F,EAAUx/F,KAAK+B,GAAG0Y,MAEpBza,KAAK+6H,KAAKv7B,EAAQ97F,OAAO1D,KAAK+6H,IAAKv7B,EAAQ57F,aAE/C5D,KAAK25H,SAASr2H,KAAKvB,GACnB/B,KAAK25H,SAASv3H,GAAG,OAAQs8G,IACtB1+G,KAAK2qH,SAASjM,EAAQ,IAEzB1+G,KAAK25H,SAASv3H,GAAG,UAAWq8G,IACzBz+G,KAAK2qH,SAASlM,EAAW,GAE/B,CAEIsc,UACD,OAAQ/6H,KAAKg7H,IAAMh7H,KAAKg7H,KAAOr3H,GAAG3D,KAAKE,IAAIs5H,OAC9C,CAEAyB,qBACG,MAAO,CACJ79G,MAAO,CAEJ,CACG7R,KAAM,gBACNhK,MAAQ+sB,IACLtuB,KAAKk7H,WAAW5sG,EAAM,IAK/B6sG,eAAiBrjH,GAEX9X,KAAK85H,mBACLhiH,EAAI9X,KAAK85H,kBAAkBhzH,YAEpB9G,KAAK85H,kBAAkBx5G,OAAOxI,GAC5B,8CAIfsjH,aAAevxH,GACP7J,KAAKoG,SAASm8D,SAIZviE,KAAKyiE,aAAawE,YAAYp9D,GAH3B7J,KAAKyK,eAAes4B,YAAYl5B,GAMnD,CAOAlF,OACGhB,GAAG3D,KAAKE,IAAIq5H,aAAa50H,MAC5B,CAMAQ,aACG,MAAMjF,EAAMF,KAAKE,IAEjByD,GAAGzD,EAAIq5H,aAAa30H,OAEpB5E,KAAK25H,SAASh1H,OAEdhB,GAAGzD,EAAIu5H,UAAU90H,OAEjB,MAAM8F,EAAgBzK,KAAKyK,cAE3B,IAAKA,EAAe,OAIpB,MAAMmvH,EAAuBnvH,EAAcsD,UACxC/N,KAAKoG,SAASg8D,uBAGjB,IAAKw3D,EAAsB,OAE3B55H,KAAK45H,qBAAuBA,EAE5B,IAAIyB,EAAoB,GAExB,MAAMxB,EAAyBpvH,EAAcsD,UAC1C/N,KAAKoG,SAASi8D,yBAGjBriE,KAAK65H,uBAAyBA,EAG3BA,GACAA,aAAkC75H,KAAKg6H,kBAGvCqB,QAA0BxB,EAAuB38C,cAGpD,MAAMo+C,GAAmB1B,EAAqBxzH,SAASjE,SAAW,IAAIgM,KAClE8wC,IAEE,GAAI26E,GAAwBC,EAAwB,CACjD,IAAIh4H,EAAO,GAKR05H,EAAiB,GAmDpB,OAhDI1B,aAAkC75H,KAAKk6H,aAExCqB,GACG1B,EAAuBzzH,SAASjE,SAAW,IAC5CgM,KAAK2X,GAAMA,IACL+zG,aAAkC75H,KAAKi6H,aAC/CsB,EAAiB1B,EAAuB3jE,WAAW/nD,KAC/CqpE,IACS,CACJ52E,GAAI42E,EAAE52E,GACNyN,KAAMmpE,EAAEnpE,MAAQmpE,EAAE70E,UAK3Bk3H,aAAkC75H,KAAKg6H,kBAEvCuB,EAAiBF,EAAkBltH,KAAI,EAAGvN,KAAIyN,WAAW,CACtDzN,KACAyN,YAGNktH,EAAej3H,KAAK,CACjB1D,GAAI,KACJyN,KAAMrO,KAAKoB,MAAM,WAGpBm6H,EAAet3H,SAAS+R,IACrB,MAAMwlH,EAAY,CAAC,EAEnBA,EAAU5B,EAAqB9yH,YAAcm4C,EAAIr+C,GACjD46H,EAAU3B,EAAuB/yH,YAAckP,EAAIpV,GAGnDiB,EAAKyC,KAAK,CACPi+D,SAAUvsD,EAAI3H,KACdtN,OAAQ,GACRG,IAAK,oBAIRW,EAAKyC,KAAK,CACP5D,KAAM,aACN2W,OAAQmkH,EACR55H,KAAM5B,KAAKi7H,sBACZ,IAGE,CACJnrD,OAAQ7wB,EAAI5wC,KACZ5M,KAAM,CACH40E,OAAQ,EACRx0E,KAAMA,GAGf,CAEK,GAAI+3H,EAAsB,CAC5B,MAAM4B,EAAY,CAAC,EAInB,OAFAA,EAAU5B,EAAqB9yH,YAAcm4C,EAAIr+C,GAE1C,CACJkvE,OAAQ7wB,EAAI5wC,KACZ5M,KAAM,CACHf,KAAM,aACN2W,OAAQmkH,EACR55H,KAAM5B,KAAKi7H,sBAGpB,KAIA17B,EAAKv/F,KAAK+B,GACAw9F,EAAG9kF,MAIXha,GAAG66H,EAAiB33H,GAAGzD,EAAIs5H,SACnC71H,GAAGzD,EAAIs5H,QAAQiC,cAGf,MAAM3B,EAAoBrvH,EAAcsD,UACrC/N,KAAKoG,SAASk8D,YAKjB,GAFAtiE,KAAK85H,kBAAoBA,EAErBA,EAAmB,CACpB,MAAM4B,EAAY/3H,GAAGzD,EAAIs5H,QAAQmC,cAIjC,GAFAD,EAAU5gH,WAENg/G,aAA6B95H,KAAKi6H,aAAc,CACjD,MAAM7qH,EAAQmwF,EAAG3sF,QAAQ/B,WAAW1C,KAAKqpE,IAC/B,CACJ52E,GAAI42E,EAAE5mE,SACNjO,MAAO60E,EAAE5mE,aAIf8qH,EAAUnkH,MAAMnI,EACnB,MAAO,GAAI0qH,aAA6B95H,KAAKg6H,gBAAiB,CAC3D,MAAM73H,QAAgB23H,EAAkB58C,aAExCw+C,EAAUnkH,MACPpV,EAAQgM,KAAK8wC,IACH,CACJr+C,GAAIq+C,EAAIr+C,GACR+B,MAAOs8C,EAAI5wC,SAIvB,CACH,CACH,CAEA4uE,OACGj9E,KAAK+6H,KAAK11H,eAAe,CAAEzD,KAAM,QACpC,CAEAy7E,QACGr9E,KAAK+6H,KAAKpzH,gBACb,CAEA3C,WAAWC,GACRnF,MAAMkF,WAAWC,GAEjBjF,KAAKyiE,aAAaz9D,WAAWC,GAC7BjF,KAAK25H,SAAS30H,WAAWC,EAC5B,CAOA+pG,mBAAmBrjF,GAChB7rB,MAAMkvG,mBAAmBrjF,GAEzB,MAAMsE,EAAKjwB,KAAKsuG,uBAAyB3iF,EAEzC,GAAIsE,EAAJ,CACGA,EAAGsD,KAAKvzB,KAAK+6H,KAEb,MAAMjjH,EAAMmY,EAAGvE,WAEX5T,GAAK9X,KAAKgF,WAAW8S,EAG5B,MAEA9X,KAAK+6H,IAAIvnG,QACZ,CAEAruB,mBAAmBmpB,EAAOjX,GACvB,IAAKrX,KAAK45H,qBAAsB,OAGhC55H,KAAKi9E,OAEL,IAAI8xB,EAAQ,CAAC,EAGT13F,aAAkBlD,OAAQ46F,EAAQ13F,EAEjC03F,EAAM/uG,KAAK45H,qBAAqB9yH,YAAcuQ,EAGnD,IAAIukH,GAAc,EAElB,IAAK,MAAMv3H,KAAO0qG,EACVA,EAAM1qG,KACR0qG,EAAM1qG,GAAO,GAIbu3H,GAAc,GAGpB,IAQG,SAPM57H,KAAKyK,eAAezC,QAAQ+mE,OAAOzgD,EAAOygF,IAEhD/uG,KAAKq9E,QAEDu+C,GAAa57H,KAAK4E,OAGlB5E,KAAK25H,SAAS98C,YAAa,CAC5B,MAAMhzE,EAAOlG,GAAG3D,KAAKE,IAAIs5H,QAAQ/sG,QAAQ6B,GAEzCtuB,KAAK25H,SAASj1H,QAAQmF,EACzB,CAOH,CANE,MAAO1B,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,kDACTgf,QACAygF,SAEN,CACH,CAEA5pG,kBAAkBmpB,EAAOtY,GACtB,IAAKhW,KAAK85H,kBAAmB,OAG7B95H,KAAKi9E,OAEL,MAAM8xB,EAAQ,CAAC,EAEfA,EAAM/uG,KAAK85H,kBAAkBhzH,YAAckP,EAE3C,IACG,MAAM63G,QAAmB7tH,KAAKyK,eAAezC,QAAQ+mE,OAClDzgD,EACAygF,IAOH,GAHA/uG,KAAK+6H,KAAKpqG,WAAWrC,EAAOu/F,GAGxB7tH,KAAK25H,SAAS98C,YAAa,CAC5B,MAAMhzE,EAAO7J,KAAK+6H,IAAItuG,QAAQ6B,GAE9BtuB,KAAK25H,SAASj1H,QAAQmF,EACzB,CAEA7J,KAAKq9E,OASR,CARE,MAAOl1E,GACNnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmH,QAAS,iDACTgf,QACAtY,QAGHhW,KAAKq9E,OACR,CACH,CAEAstC,SAAS9gH,GAEFA,EAAKjJ,IAAMZ,KAAK+6H,IAAInuG,OAAO/iB,EAAKjJ,IACjCZ,KAAK+6H,IAAIpqG,WAAW9mB,EAAKjJ,GAAIiJ,GAE3B7J,KAAK+6H,IAAI75G,IAAIrX,EACrB,CAEAsxG,WACOn7G,KAAK+6H,KACN/6H,KAAK+6H,IAAIc,UAAU5xH,IAChBA,GAAMkxG,YAAY,GAE3B,CAEA2gB,UACG97H,KAAKm7G,WAGLn7G,KAAK25H,SAAS/0H,OACdjB,GAAG3D,KAAKE,IAAIu5H,SAAS70H,MACxB,CAEAO,iBAAiBmpB,GACd,MAAMixE,EAAKv/F,KAAK+B,GACVy9F,EAAUD,EAAG9kF,MAEnB+kF,EAAQ5tF,QAAQ,CACbR,MAAOpR,KAAKoB,MAAM,eAClBiN,KAAMrO,KAAKoB,MAAM,oCACjByQ,SAAU1M,MAAO2I,IACd,GAAKA,EAAL,CAEA9N,KAAKi9E,OAEL,WAC0Bj9E,KAAKyK,eAAezC,QAAQoO,OAAOkY,KAE7CqpF,QAAU,EACpB33G,KAAK+6H,IAAIlgH,OAAOyT,GAEhBkxE,EAAQruF,MAAM,CACX9C,KAAMrO,KAAKoB,MACR,qDASZ,CALE,MAAO+G,GACNo3F,EAAGn3F,OAAOC,UAAUF,EAAK,CACtBmJ,QAAS,kDACTgd,SAEN,CAEAtuB,KAAKq9E,OAvBc,CAuBP,GAGrB,CAWA0+C,UAAU55H,GACPnC,KAAK45H,qBAAuBz3H,EAAQ65H,iBACpCh8H,KAAK65H,uBAAyB13H,EAAQ85H,mBACtCj8H,KAAK85H,kBAAoB33H,EAAQmgE,UACpC,oBCljBH,MAAMs6B,EAAkB,WAExBn9F,EAAOC,QAAU,cAAmCk9F,EACjDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,eAAe09F,EAAS38F,KAAMV,EAC3D,CAEAO,KACG,MAAM88F,EAAWv9F,KAAKU,KAEhBy9F,EAAMr+F,MAAMW,GAAG,CAClBT,KAAKk8H,aAAa,CACfx7H,KAAM,QAENU,MAAOm8F,EAASlvF,MAAQ,IACxBhN,MAAOrB,KAAKoG,SAASg3D,UACrBx7D,KAAM,CACHb,OAAQ,YAOjB,cAFOo9F,EAAIv8F,KAEJu8F,CACV,CASA+9B,aAAaz7H,GAGV,OAAQ6kB,SAAStlB,KAAKoG,SAASka,SAE5B,KAAK,EACF7f,EAAGS,IAAM,sCACT,MAGH,KAAK,EACFT,EAAGS,IAAM,uCACT,MAGH,KAAK,EACFT,EAAGS,IAAM,4CAIf,OAAOT,CACV,CAEA0E,WAAWpD,SACFjC,MAAMwD,KAAKvB,EACpB,oBC3DH,MAAM66F,EAAkB,WAExBn9F,EAAOC,QAAU,cAAoCk9F,EAClDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MAAMy9F,EAAU19F,GAAU,gBAAgB09F,EAAS38F,KAAMV,GAEzD,MAAMqoG,EAAiBvoG,KAAKuoG,gBAAkB,CAAC,EAE/ChL,EAASr2E,QAAQjjB,SAASmP,IACvB,IACGm1F,EAAen1F,EAAExS,IAAMwS,EAAEjT,WAO5B,CANE,MAAOgI,GAENK,QAAQ+G,MACL,UAAU6D,EAAE/O,+CACZ8D,EAEN,KAGHnI,KAAKuoG,eAAiBA,CACzB,CAEA9nG,KACG,MAAM8nG,EAAiBvoG,KAAKuoG,eACtBuiB,EAAe32G,OAAOC,KAAKm0F,GAC7Bp6F,KAAKguH,GAAQ5zB,EAAe4zB,GAAK17H,OACjCqI,QAAQrI,GAAOA,IACb09F,EAAMr+F,MAAMW,GAAG,CAClB,CACGC,KAAM,SACNS,KAAM2pH,KAMZ,cAFO3sB,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,EAAIu2D,SACNx4D,MAAMwD,KAAKvB,GAEjB,MAAMw7F,EAAWv9F,KAAKU,KAGtB68F,EAASr2E,QAAQjjB,SAASmP,IACLpT,KAAKuoG,eAAen1F,EAAExS,KAG7B0C,KAAKvB,EAAIu2D,GAGpBilC,EAAS3rE,SAAS,CACfC,QAASze,EACT0e,UAAW,aACXC,SAAWmyC,IACRq5B,EAAST,WAAW54B,EAAO,GAE/B,GAER,CAEA15D,SAEGxK,KAAKU,KAAKwmB,QAAQjjB,SAASmP,IACNpT,KAAKuoG,eAAen1F,EAAExS,KAC7B4J,QAAQ,GAEzB,oBCrEH,MAAMoyF,EAAkB,WAExBn9F,EAAOC,QAAU,cAAkCk9F,EAChDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,cAAc09F,EAAS38F,KACjCuT,OAAOsnC,OAAO,CAAExxC,KAAM,IAAM/J,GAElC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChBg2H,EAAU,CACbx7H,GAAIZ,KAAKE,IAAI+J,KACbvJ,KAAM,WACNkB,KAAM,CACHZ,MAAO,IACPD,OAAQ,IAEXwhE,SAAWn0D,IACR,MAAMxI,EAAQ5F,KAAKU,KAAKkF,QAExB,OAAKA,EAEEA,EAAM0a,OAAOlS,GAFD,EAEM,GAKP,IAApBhI,EAASrF,OAAcq7H,EAAQr7H,OAASqF,EAASrF,OAChDq7H,EAAQC,YAAa,EAE1B,MAAMl+B,EAAMr+F,MAAMW,GAAG,CAAC27H,IAItB,cAFOj+B,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM4qB,EAAK3sB,KAAK2rB,eAEXgB,GAGLA,EAAG4G,KAAK5vB,GAAG3D,KAAKE,IAAI+J,MAEvB,oBClDH,MAAM2yF,EAAkB,WAExBn9F,EAAOC,QAAU,cAAkCk9F,EAChDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,cAAc09F,EAAS38F,KACjCuT,OAAOsnC,OACJ,CACG+wD,KAAM,IAETtsG,GAGT,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChB+3F,EAAMr+F,MAAMW,GAAG,CAClB6kB,SAASlf,EAASm9D,eAAiBvjE,KAAKo2G,YAAcp2G,KAAKs8H,WAK9D,cAFOn+B,EAAIv8F,KAEJu8F,CACV,CAEAm+B,SACG,MAAM/+B,EAAWv9F,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChBshF,EAAkB6V,EAAS59F,YAAY8iC,gBACvCvhC,EAAM,GAAGkF,EAASi9D,aAAeqkB,EAAgBrkB,eACpDj9D,EAASk9D,eAAiBokB,EAAgBpkB,iBAG7C,MAAO,CACJ1iE,GAAIZ,KAAKE,IAAIssG,KACb9rG,KAAM,OACNuwG,YAAY,EACZ3vG,WAAW,EACXi7H,SAAU,OACVr7H,IAAKA,EACLk8E,OAAQh3E,EAASg9D,aAAeskB,EAAgBtkB,YAChDhhE,GAAI,CACDo6H,gBAAiB,CAAC57H,EAAIyJ,EAAG9H,KACtBvC,KAAK6hH,QAAQjhH,EAAG,EAEnBu2E,cAAe,KACZn3E,KAAKy8H,eAAe,GAG1B76H,KAAM,CACH86H,SAAS,GAGlB,CAEAtmB,YACG,MAAMhwG,EAAWpG,KAAKoG,SAChBm3F,EAAWv9F,KAAKU,KAChBgnF,EAAkB6V,EAAS59F,YAAY8iC,gBACvCk6F,EAAU38H,KAAKs8H,SAErB,IAAIM,EAAQ,GACRC,GAAe,EAGnB,MAAMl5D,EAAe45B,EAAS55B,cAAgBv9D,EAASu9D,aACjDE,EAAiB05B,EAAS15B,gBAAkBz9D,EAASy9D,eACrDD,EAAgB25B,EAAS35B,eAAiBx9D,EAASw9D,cAEzD,GAA8B,SAA1Bx9D,EAASs9D,aACVm5D,GAAe,EACfD,EAAMt4H,KAAKq4H,QACP,GAAIh5D,GAAcx9D,OAAQ,CAC9B,MAAMnF,EAA8B,GAAtB2iE,EAAax9D,OAE3By2H,EAAMt4H,KAAK,CACR5D,KAAM,QACNU,MAAOuiE,EACPtiE,MAAO,OACPL,MAAOA,GAEb,MACG47H,EAAMt4H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAGjB,GAA+B,WAA3B8E,GAAUs9D,aACXm5D,GAAe,EAEfD,EAAMt4H,KAAKq4H,QACP,GAAI94D,GAAgB19D,OAAQ,CAChC,MAAMnF,EAA8B,GAAtB2iE,EAAax9D,OAE3By2H,EAAMt4H,KACH,CAAC,EACD,CACG5D,KAAM,QACNU,MAAOyiE,EACPxiE,MAAO,SACPL,MAAOA,GAEV,CAAC,EAEP,MACG47H,EAAMt4H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAGjB,GAA+B,UAA3B8E,GAAUs9D,aACXm5D,GAAe,EAEfD,EAAMt4H,KAAKq4H,QACP,GAAI/4D,GAAez9D,OAAQ,CAC/B,MAAMnF,EAA8B,GAAtB2iE,EAAax9D,OAE3By2H,EAAMt4H,KAAK,CACR5D,KAAM,QACNU,MAAOwiE,EACPviE,MAAO,QACPL,MAAOA,GAEb,MACG47H,EAAMt4H,KAAK,CACR5D,KAAM,QACNU,MAAO,GACPE,WAAW,IAKjB,OAFqB,IAAjBu7H,IAAwBD,EAAQ,CAACD,IAE9B,CACJj8H,KAAM,UACNQ,IAAKkF,EAASq9D,WAAaikB,EAAgBjkB,UAC3CjhE,QAAS4D,EAASo9D,YACbl+C,SAASlf,EAASo9D,aAClBkkB,EAAgBlkB,YACrBt6D,SAAU0zH,EAEhB,CAEAz3H,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM6sG,EAAQjrG,GAAG3D,KAAKE,IAAIssG,MACpBjP,EAAWv9F,KAAKU,KAEtB,GAAIkuG,EAAO,CACR,MAAMxoG,EAAWpG,KAAKoG,SAEtBm3F,EAASp5B,iBAAiByqC,GAEtBxoG,EAAS09D,OAAO39D,SACjBo3F,EAASn5B,eAAewqC,EAAOxoG,EAAS09D,OAExC8qC,EAAMlqG,UAEZ,CACH,CAEAm9G,QAAQz1F,GACL,MACM0wG,EADQn5H,GAAG3D,KAAKE,IAAIssG,MACN7nC,YAAYv4C,GAC1BmxE,EAAWv9F,KAAKU,KAGtB,GAAmB,QAAfo8H,EAAMl7H,KAAgB,CACvB27F,EAAST,WAAWggC,EAAM54D,QAE1B,MAAM64D,EAAex/B,EAASx4F,YAAY0gB,OACtC3D,GAAMA,EAAElhB,KAAOk8H,EAAM54D,SACtB,GACD,GAEF,IAAK64D,EAAc,OAEnB,MAAM93D,EAAU83D,EAAa71G,OAAO9T,GAAMA,EAAExS,KAAOk8H,EAAMl8H,KAAI,GAAM,GAEnE,IAAKqkE,EAAS,OAEd,MAAMq2C,EAAMr2C,EAAQlwD,OAEpB,IAAKumG,EAAK,OAEVt7G,KAAKg9H,aAAa1hB,GAGlB,MAAM2hB,EAASC,aAAY,KACpBv5H,GAAGshE,EAAQrkE,KAAO+C,GAAGshE,EAAQrkE,IAAIi8E,YAClCsgD,cAAcF,GAKjB3hB,EAAI9rG,KAAK,YAAay1D,EAAQrkE,GAAG,GACjC,IAEN,MAEK28F,EAAST,WAAW1wE,EAC5B,CAEA4wG,aAAavjG,GACV,IAAKA,EAAQ1kB,OAAQ,OAAO,EAE5B,MAAMqoH,EAAa3jG,EAAQ1kB,OAE3B,IAAKqoH,GAAYroH,OAAQ,OAAO,EAEhCqoH,EAAWroH,OAAOvF,KAAK,YAAa4tH,EAAWx8H,IAC/CZ,KAAKg9H,aAAaI,EAAWroH,OAChC,CAEA0nH,gBACG,MAAM7tB,EAAQjrG,GAAG3D,KAAKE,IAAIssG,MAErBoC,GAELA,EAAM/kG,KAAK03E,MAAMnzE,IACd,MAAM7L,EAAOqsG,EAAMr+B,YAAYniE,EAAKxN,IAEpC,IAAK2B,EAAM,OAGX,MAAM86H,EAAWr9H,KAAK+B,GAAGsiB,eAAejW,EAAKxN,IAE7C2B,EAAKm/E,aACF,UACA,aAAa27C,GAAUl2H,QAAQiH,EAAKxN,MAAMZ,KAAKU,KAAKE,KACtD,GAEP,mBC5OH,MAAMg8F,EAAkB,WAClB0gC,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAgB,EAAQ,OACxBruG,EAAgB,EAAQ,OAE9B1vB,EAAOC,QAAU,cAAmCk9F,EACjDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,eAAe09F,EAAS38F,KAClCuT,OAAOsnC,OAAO,CAAEgiF,MAAO,IAAMv9H,GAEnC,CAEAO,KACG,MAAM2F,EAAWpG,KAAKoG,SAChB+3F,EAAMr+F,MAAMW,GAAG,CAClB,CACGG,GAAIZ,KAAKE,IAAIu9H,MACb/8H,KAAM,QACNs/G,UAAU,EACVl6C,aAAc1/D,EAAS0/D,aACvBC,YAAa3/D,EAAS2/D,YACtBC,cAAe5/D,EAAS4/D,cACxB9nB,IAAK93C,EAAS83C,IACdD,IAAK73C,EAAS63C,IACd39B,OAAS3d,IACN,MAAMw0C,EAAgB/wC,EAAS+wC,eAAiB,EAEhD,MAAiB,MAAVx0C,EACFo0C,WAAWp0C,GAAOg1C,QAAQR,GAAiB,GAC3Cx0C,CAAK,KAOnB,cAFOw7F,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IAEXysB,EAAK3sB,KAAK2rB,eAEhB,IAAKgB,EAAI,OAET,MAAM1nB,EAAS0nB,EAAGjB,WAElB,IAAKzmB,EAAQ,OAEb,MAAMy4H,EAAS/5H,GAAGzD,EAAIu9H,OAEtB,GAAIC,GAAUz4H,aAAkBkqB,EAAe,CAC5C,MAAMwuG,EAAe,CAAC,EAEtB14H,EAAO8B,SAAS9C,SAAS+C,IACtB22H,EAAa32H,EAAEF,YAAcE,EAAE5F,KAAK,IAGvCs8H,EAAOj5H,OAAO,WAAYk5H,EAC7B,CAEA,MAAMC,EAAe,KAClB,MACMC,EADOlxG,EAAGyG,UACQjlB,KAAKkiB,IAC1B,MAAMviB,EAAS,CAAC,EAYhB,OAVA7I,EAAO8B,SAAS9C,SAAS+C,IAMnB8G,EAAO9G,EAAEF,YAJTE,aAAas2H,GACbt2H,aAAau2H,GACbv2H,aAAaw2H,EAEUntG,EAAErpB,EAAEF,YACFE,EAAEsZ,OAAO+P,EAAE,IAGnCviB,CAAM,IAGhB4vH,EAAOnmH,MAAMsmH,GAEb,MAAMz3H,EAAWpG,KAAKoG,SAGlBA,EAAS6/D,WAAWy3D,EAAOI,aAAa13H,EAAS6/D,UAAU,EAWlE,OARAjmE,KAAKU,KAAKkxB,SAAS,CAChBC,QAASlF,EACTmF,UAAW,kBACXC,SAAU,KACP6rG,GAAc,IAIZjxG,EAAGT,YACR,KAAKS,EAAGpC,eAAeC,WACpBmC,EAAGsF,WAEH,MAEH,KAAKtF,EAAGpC,eAAe0B,YACpB2xG,IAIT,oBChHH,MAAMhhC,EAAkB,WAExBn9F,EAAOC,QAAU,cAA4Ck9F,EAC1Dj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,uBAAuB09F,EAAS38F,KAC1CuT,OAAOsnC,OAAO,CAAEsiF,cAAe,IAAM79H,GAE3C,CAEAO,KACG,MAAMu7E,EAAOh8E,KACPu9F,EAAWv9F,KAAKU,KAChB0F,EAAWpG,KAAKoG,SAChBm5F,EAAKv/F,KAAK+B,GACVy9F,EAAUD,EAAG9kF,MAEbujH,EAAmB,CACtBp9H,GAAIZ,KAAKE,IAAI69H,cACbr9H,KAAM,UACNoyG,SAAS,EACT5E,SAAU,IAAIC,IAAI,CACf,CACG8vB,QAAQ7vB,SAASC,QACjB,cAAwB4vB,QAAQ7vB,SAASC,QACtClpG,mBACG,OAAOiB,EAAS+/D,YAAc,EACjC,CAEA+3D,WAAWt9H,EAAK4+F,EAAQt0F,MAAOrB,GAC5BzD,EAAS+/D,WAAa//D,EAAS+/D,YAAc,GAE7C,IAAIg4D,EAAgB,KAepB,OAbe/3H,EAAS+/D,WAAWr9D,QAAO,CAACs1H,EAAGryH,KAC3C,MAAM8kB,EAAWutG,EAAEx9H,KAAOA,EAI1B,OAFIiwB,IAAUstG,EAAgBpyH,GAEvB8kB,CAAQ,IACf,GAGSzqB,EAAS+/D,WAAWg4D,GAAiBt0H,EAE5CzD,EAAS+/D,WAAW7hE,KAAKuF,GAEvB,IAAI4F,SAAQ,CAACC,EAASiH,KACTxR,WACd,UACSo4F,EAAS31F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACNwO,EAAOxO,EACV,GAGHk2H,EAAU,GAEhB,CAEAC,aAAa19H,GAOV,OANAwF,EAAS+/D,WAAa//D,EAAS+/D,YAAc,GAE7C//D,EAAS+/D,WAAa//D,EAAS+/D,WAAWr9D,QACtCs1H,GAAMA,EAAEx9H,KAAOA,IAGZ,IAAI6O,SAAQ,CAACC,EAASiH,KACTxR,WACd,UACSo4F,EAAS31F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACNwO,EAAOxO,EACV,GAGHk2H,EAAU,GAEhB,CAEAl5H,kBACG,MAAMo5H,EAAe,CAAC,EA8CtB,OA5CCh/B,EAAG15E,mBAAqB,IAAI5hB,SAAS0oB,IAGnC,IAFYA,EAAGjB,WAEL,OAEV,MAAM8yG,EAAexiD,EAAKyiD,gBAAgB9xG,GA+B1C4xG,EAAa5xG,EAAG/rB,IAAM,CACnBA,GAAI+rB,EAAG/rB,GACPuG,KAAMwlB,EAAGvrB,MACTyI,KAAM20H,EACNE,KAAM,GACR,IAGGH,CACV,CAEAp5H,mBACG,OAAOiB,EAASggE,WAAa,EAChC,CAEAu4D,UAAU/9H,EAAK4+F,EAAQt0F,MAAOrB,GAC3BzD,EAASggE,UAAYhgE,EAASggE,WAAa,GAE3C,IAAIw4D,EAAe,KAenB,OAbcx4H,EAASggE,UAAUt9D,QAAO,CAACs1H,EAAGryH,KACzC,MAAM8kB,EAAWutG,EAAEx9H,KAAOA,EAI1B,OAFIiwB,IAAU+tG,EAAe7yH,GAEtB8kB,CAAQ,IACf,GAGQzqB,EAASggE,UAAUw4D,GAAgB/0H,EAEzCzD,EAASggE,UAAU9hE,KAAKuF,GAEtB,IAAI4F,SAAQ,CAACC,EAASiH,KACTxR,WACd,UACSo4F,EAAS31F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACNwO,EAAOxO,EACV,GAGHk2H,EAAU,GAEhB,CAEAQ,YAAYj+H,GAMT,OALAwF,EAASggE,UAAYhgE,EAASggE,WAAa,GAC3ChgE,EAASggE,UAAYhgE,EAASggE,UAAUt9D,QACpCs1H,GAAMA,EAAEx9H,KAAOA,IAGZ,IAAI6O,SAAQ,CAACC,EAASiH,KACTxR,WACd,UACSo4F,EAAS31F,OAEf8H,EAAQ,CAAE9O,GAAIA,GAGjB,CAFE,MAAOuH,GACNwO,EAAOxO,EACV,GAGHk2H,EAAU,GAEhB,CAEAl5H,cAAclD,GACX,IAAI6L,EAAS,GACTgxH,EAAgB,GAChBC,EAAQ,GACRC,EAAS,CAAC,EACVR,EAAe,GAGnBO,EAAMz6H,KAAKrC,EAAO4H,OACjB5H,EAAOgiC,OAAS,IAAIhgC,SAASo9B,IAC3B09F,EAAMz6H,KAAK+8B,EAAE49F,KACbF,EAAMz6H,KAAK+8B,EAAEynB,IAAI,IAEpBi2E,EAAQx/B,EAAG/8E,KAAKu8G,GAChBA,EAAM96H,SAASm7G,IACZ0f,EAAcx6H,KACX,IAAImL,SAAQ,CAACC,EAASiH,KACHxR,WACb,IACG65H,EAAO5f,SACGpjC,EAAK5oD,QAAQgsF,IAAU,GAEjC1vG,GAGH,CAFE,MAAOvH,GACNwO,EAAOxO,EACV,GAGHirB,EAAS,IAEd,IAGJ2rG,EAAM96H,SAASm7G,IACZ,MAAM8f,EAAU3/B,EAAGzzE,mBAAmBszF,GAEjC8f,IAELV,EAAeA,EAAaj3G,OACzBy0D,EAAKyiD,gBAAgBS,GAAS/wH,KAAKnH,IAEhCA,EAAEpG,GAAK,GAAGw+G,KAAQp4G,EAAEpG,KACboG,MAEZ,UAGEyI,QAAQ4R,IAAIy9G,GAGlBhxH,EAASkxH,EAAO/8H,EAAO4H,OAAS,GAE5B5H,EAAOgiC,OAAO99B,SACdlE,EAAOgiC,OAAS,IAAIhgC,SAASo9B,IAC3B,MAAM89F,EAAW5/B,EAAGzzE,mBAAmBuV,EAAE49F,KAEzC,IAAKE,EAAU,OAEf,MAAMC,EAAYD,EAASzzG,WAE3B,IAAK0zG,EAAW,OAEhB,MAAMC,EAAW9/B,EAAGzzE,mBAAmBuV,EAAEynB,KAEzC,IAAKu2E,EAAU,OAEf,MAAMC,EAAYD,EAAS3zG,WAE3B,IAAK4zG,EAAW,OAEhB,MAAMC,EAAkBH,EAAUrxH,UAAUszB,EAAEm+F,IACxCC,EAAkBH,EAAUvxH,UAAUszB,EAAEq+F,IAE9C,IAAKH,IAAoBE,EAAiB,OAE1C,MAAME,EAAaX,EAAO39F,EAAE49F,MAAQ,GAC9BW,EAAaZ,EAAO39F,EAAEynB,MAAQ,GAEpC62E,EAAW17H,SAAS47H,IACjBD,EAAW37H,SAAS67H,IACjB,IAAIC,EACDF,EACGN,EACK,GAAGl+F,EAAE49F,OAAOM,EAAgBz4H,gBAC5B,GAAGu6B,EAAE49F,WACR,GAEJe,EACDF,EACGL,EACK,GAAGp+F,EAAEynB,OAAO22E,EAAgB34H,gBAC5B,GAAGu6B,EAAEynB,WACR,GAWR,GATK37C,MAAMC,QAAQ2yH,KAAOA,EAAO,CAACA,IAE7B5yH,MAAMC,QAAQ4yH,KAAOA,EAAO,CAACA,IAGfD,EAAKj3H,QACpBkN,GAAQgqH,EAAK3yH,QAAQ2I,IAAQ,KAGjB7P,OAAQ,CACrB,MAAM85H,EACHnyH,EAAOhF,QACH8G,GACEA,EAAE,GAAGyxB,EAAE49F,YACJY,EAAM,GAAGx+F,EAAE49F,YACbrvH,EAAE,GAAGyxB,EAAEynB,aACT,GAEJm3E,GAAY95H,QACZ85H,GAAc,IAAIh8H,SAAS2L,IACzB,IAAK,MAAMvL,KAAOy7H,EACH,OAARz7H,IACDuL,EAAEvL,GAAOy7H,EAAMz7H,GAAI,IAG5ByJ,EAAOxJ,KACJ6P,OAAOsnC,OACJ8jD,EAAG75F,UAAUm6H,GACbtgC,EAAG75F,UAAUo6H,IAGzB,IACD,GACH,IAIR,MAAMI,EAAWrsH,KAAK0D,MAAMtV,EAAOgnB,OAAS,MAExCi3G,GAAU/+G,OAAOhb,QAClB+5H,EAAS/+G,MAAMld,SAAS2L,IACrB,GAAKA,GAAMA,EAAEhO,MAASgO,EAAEs6B,UAExB,OAAQt6B,EAAEhO,MACP,IAAK,OACL,IAAK,WAEEgO,EAAEs6B,UAAUphC,SACTy2F,EAAGz8E,SAASlT,EAAEs6B,UAAUphC,UACzB8G,EAAEs6B,UAAUphC,OAASy2F,EAAGp+E,MAAMhB,OAC3BvQ,EAAEs6B,UAAUphC,SAIf8G,EAAEs6B,UAAUphC,OAAOopB,OACnBqtE,EAAGz8E,SAASlT,EAAEs6B,UAAUphC,OAAOopB,SAE/BtiB,EAAEs6B,UAAUphC,OAAOopB,MAChBqtE,EAAGp+E,MAAMhB,OACNvQ,EAAEs6B,UAAUphC,OAAOopB,QAIzBtiB,EAAEs6B,UAAUphC,OAAOi8C,KACnBw6C,EAAGz8E,SAASlT,EAAEs6B,UAAUphC,OAAOi8C,OAE/Bn1C,EAAEs6B,UAAUphC,OAAOi8C,IAAMw6C,EAAGp+E,MAAMhB,OAC/BvQ,EAAEs6B,UAAUphC,OAAOi8C,OAKlC,IAIN,MAAMo7E,EAAa3gC,EAAQ/+F,GAAG,CAC3BC,KAAM,QACNqG,OAAQy3H,EACR77H,MAAOu9H,IAIJE,EAAS,IAAI5gC,EAAQlzB,eAK3B,IAAIzT,EAHJunE,EAAO7oH,MAAMzJ,GAKb,IACG+qD,EAAWsnE,EAAW7qD,mBAGzB,CAFE,MAAO/lE,GAET,CA8EA,OA5EIspD,GAAUunE,EAAOt3H,OAAO+vD,IAG3B52D,EAAO0L,MAAQ,IAAI1J,SAAS0J,IACtBA,EAAK/M,IACNw/H,EAAOzyH,KAAK,CACT0yH,GAAI,SACJ11H,IAAKgD,EAAK2yH,KAAO,MACjBtyH,GAAI,IAAIL,EAAK/M,OACd,IAGRkN,EAASsyH,EAAO/yG,YAGhB8yG,EAAWvlB,aACXwlB,EAAOxlB,aAGH34G,GAAQs3G,OAAOpzG,UACflE,EAAOs3G,OAAS,IAAIt1G,SAASs8H,IAC3BzyH,EAAS0yH,EAAE1yH,GAAQ2zD,QAAQ8+D,EAAU,IAGxCzyH,EAASA,EACLK,KAAI,CAACsyH,EAAa7/H,KAChB,MAAM8/H,EAAgB,CAAC,EA6CvB,OA3CCz+H,EAAOi1D,SAAW,IAAIjzD,SAASs3E,IAC7B,MAAMolD,EAAMplD,EAAItzD,MAAM,KAAK,GACrB24G,EAASrlD,EAAIvoE,QAChB,8BACA,IAGH,OAAQ2tH,GACL,IAAK,MACFD,EAAcnlD,GAAOgkB,EAAG78E,MACrB+9G,EACAG,GAEH,MACH,IAAK,MACFF,EAAcnlD,GAAOgkB,EAAG58E,OACrB89G,EACAG,GAEH,MACH,IAAK,QACFF,EAAcnlD,IACXklD,GAAe,IAChBt6H,OACF,MACH,IAAK,MACFu6H,EAAcnlD,IACVgkB,EAAG38E,MAAM69G,EAAaG,IAAW,CAAC,GAChCA,IACE,GACR,MACH,IAAK,MACFF,EAAcnlD,IACVgkB,EAAG18E,MAAM49G,EAAaG,IAAW,CAAC,GAChCA,IACE,GACR,MACH,QACGF,EAAcnlD,GAAOklD,EAAY,GAAGllD,GAE1C,IAGImlD,CAAa,IAEtB/9H,SAGAmL,CACV,CACAovE,WAAWn2E,GACR,OAAO0I,QAAQC,QAAQ,GAC1B,CACAmxH,aAAan2H,GACV,OAAO+E,QAAQC,QAAQ,GAC1B,IAGN,CACGuuH,QAAQ/2G,MAAM2rF,MACd,cAAsBorB,QAAQ/2G,MAAM2rF,MAEjCiuB,gBAAgBlzH,GACb,MAAe,SAAXA,EAAEhM,KACI,CACJhB,GAAIgN,EAAEhN,GACNkvE,OACIliE,EAAEmzH,KAAKjxD,QAA4B,SAAlBliE,EAAEmzH,KAAKjxD,OAEpB,CACGliE,EAAEmzH,KAAK55H,MAAQyG,EAAEzG,KACjB,CACGgpE,QACgB,SAAbviE,EAAEkiE,OACG,aACA,qBAPdliE,EAAEmzH,KAAK55H,MAAQyG,EAAEzG,KAUzBvF,KAAMgM,EAAEhM,KACR+L,KAAM,OACN3M,MAAO4M,EAAE5M,OAAS,IAClBsf,OAAStK,GAEFA,GAAKsgC,UAAY8J,MAAMpqC,EAAIsgC,WACrBkpD,EAAQrpB,KAAKC,cAAcpgE,GACzB,IAGPlW,MAAMghI,gBAAgBlzH,EACvC,OAMNuwF,EAAMr+F,MAAMW,GAAG,CAACu9H,IAKtB,cAHO7/B,EAAIv8F,YACJu8F,EAAIp9F,OAEJo9F,CACV,CAEAsgC,gBAAgB9xG,GACb,IAAKA,EAAI,MAAO,GAEhB,MAAM1nB,EAAS0nB,EAAGjB,WAElB,IAAKzmB,EAAQ,MAAO,GAEpB,MAAM8B,EAAS,GAqCf,OAnCA9B,EAAO8B,SAAS9C,SAAS+C,IACtB,MAAMg6H,EAAeh6H,EAAE+oE,eAEvBhpE,EAAOzC,KAAK,CACT1D,GAAIoG,EAAEF,WACNK,KAAMH,EAAE5F,MACR0H,OAAQ9B,EAAE2lC,oBACVg9B,MAAM,EACN/nE,KAAMo/H,EAAa17H,QAAU,OAC7Bgb,OAAQ0gH,EAAa1gH,OACrBne,QAAS6+H,EAAa7+H,QACtB8+H,IAAK,GACL58H,KAAK,EACLO,MAAM,EACNs8H,QAASl6H,IAGRA,EAAE25B,cAAgB35B,EAAEZ,SAASM,WACZ1G,KAAK+B,GAAG+pB,mBAAmB9kB,EAAEZ,SAASO,aAE1C,IAAI1C,SAASquB,IACxBvrB,EAAOzC,KAAK,CACT1D,GAAIoG,EAAEpG,GACNuG,KAAMH,EAAE5F,MACR0H,QAAQ,EACR6gE,MAAM,EACN/nE,KAAM,YACNq/H,IAAK3uG,EAAO1xB,GACZyD,KAAK,EACLO,MAAM,GACP,GAER,IAGImC,CACV,CAEA5B,cAAcsmE,GACX,MAAM9/C,EAAiB3rB,KAAK+B,GAAG+pB,mBAAmB2/C,GAElD,IAAK9/C,EAAgB,MAAO,GAE5B,MAAM1mB,EAAS0mB,EAAeD,WAE9B,IAAKzmB,EAAQ,MAAO,GAGjB0mB,EAAeO,aAAeP,EAAepB,eAAeC,kBAEtDmB,EAAesG,WAExB,MAAMusG,EAAex+H,KAAKy+H,gBAAgB9yG,GACpCw1G,EAAa,GA6DnB,OA5DgBx1G,EAAeyH,WAEnB,IAAInvB,SAASib,IACtB,MAAMkiH,EAAY,CAAExgI,GAAIse,EAAIte,IAE5BwgI,EAAU,GAAGz1G,EAAe/qB,SAAWse,EAAIte,GAE3CqE,EAAO8B,SAAS9C,SAAS2B,IACtB,MAAMkB,EAAalB,EAAMkB,WACnBy0E,EAAM,GAAG5vD,EAAe/qB,MAAMkG,IAEpCs6H,EAAU7lD,GAAO31E,EAAQA,EAAM0a,OAAOpB,GAAOA,EAAIpY,GAG7ClB,GAASA,EAAM+6B,eACZxzB,MAAMC,QAAQ8R,EAAIpY,IACnBs6H,EAAU,GAAG7lD,QAAYr8D,EAAIpY,GAAYqH,KACrCw3B,GACEA,EAAK//B,EAAMgB,eAAemoB,OAAS4W,EAAK/kC,IAAM+kC,IAE9CzmB,EAAIpY,KACVs6H,EAAU,GAAG7lD,QACVr8D,EAAIpY,GAAYlB,EAAMgB,eAAemoB,OACrC7P,EAAIpY,GAAYlG,IAChBse,EAAIpY,KAGb,MAAMu6H,EAAS7C,EAAa11H,QAAQ9B,GAAMA,EAAEpG,KAAOkG,IAAY,GAE/D,GAAKu6H,EAEL,OAAQA,EAAOz/H,MACZ,IAAK,OACL,IAAK,YACFw/H,EAAU7lD,IAAQ6lD,EAAU7lD,IAAQ,IAAI7mE,WAExC,MAEH,IAAK,SACF0sH,EAAU7lD,GAAOxkC,YACbqqF,EAAU7lD,IAAQ,GAAG7mE,WAAW1B,QAAQ,WAAY,KAGxD,MAEH,IAAK,OACL,IAAK,WACFouH,EAAU7lD,GAAOr8D,EAAIpY,GACjBs6H,EAAU7lD,GACL6lD,EAAU7lD,aAAgBh7D,OAC7B6gH,EAAU7lD,GAAOv7E,KAAK+B,GAAGof,MAAMhB,OAAOjB,EAAIpY,KACzCs6H,EAAU7lD,GAAO,GAG9B,IAGH4lD,EAAW78H,KAAK88H,EAAU,IAGtBD,CACV,oBC9nBH,MAAMvkC,EAAkB,WAExBn9F,EAAOC,QAAU,cAAiCk9F,EAC/Cj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,aAAa09F,EAAS38F,KAChCuT,OAAOsnC,OACJ,CACG6/D,IAAK,GAELgmB,QAAS,GACTC,WAAY,GACZC,aAAc,GAEdC,gBAAiB,GACjBC,oBAAqB,GACrBC,0BAA2B,IAE9BzhI,IAINF,KAAKuoG,eACFvoG,KAAKuoG,gBACLhL,EACIr2E,OAAO9T,GAAMA,EAAEilD,kBACflqD,KAAKiF,IACI,CACJ1S,KAAM0S,KAIrB,CAEA3S,KACG,MAAMP,EAAMF,KAAKE,IACXq9F,EAAWv9F,KAAKU,KAChB6+F,EAAKv/F,KAAK+B,GACVy9F,EAAUD,EAAG9kF,MAEnB,IAAI0jF,EAAM,KAIVqB,EAAQ59F,KAAK49F,EAAQ/+F,GAAG+rF,KAAM,CAC3Bo1C,SAAU,UACVz6H,KAAM,cACNoE,KAAM,CAACuM,EAAKiyB,IACLjyB,EAAIvM,KAAKpF,OACH,CACJ,0DACA2R,EAAIvM,KACJ,aACD+C,KAAK,IAEH,CACJ,iEACAwJ,EAAInV,MAAMgiD,OAAO,GAAGD,cACpB,WACDp2C,KAAK,MAIb,MAAMi6F,EAAiBvoG,KAAKuoG,eACtBniG,EAAWpG,KAAKoG,SAEtB,GAAImiG,EAAepiG,OAAS,EACzB,GAAIC,EAASmgE,UAAW,CAErB,MAAMs7D,EAAYt5B,EAAep6F,KAAKkpH,IACnC,MAAM32H,EAAO22H,EAAG32H,KAEhB,MAAO,CACJE,GAAI,GAAGF,EAAKE,UACZ+B,MAAOjC,EAAKU,MACZmK,KAAM7K,EAAK62D,QAAU72D,EAAK62D,QAAU,GACtC,IAGJ,GAAIsqE,EAAU17H,OAAQ,CAEnB,MAAMq7H,EAAe,CAClB5gI,GAAIV,EAAIshI,aACR7+H,MAAO3C,KAAKoB,MAAM,iBAClBmK,KAAM,uBAIHg2H,EAAa,CAChB3gI,GAAIV,EAAIqhI,WACR5+H,MAAO3C,KAAKoB,MAAM,eAClBmK,KAAM,uBACNspE,QAAQ,GAIX,IAAIitD,EAAe,GAAGv5B,EAAe,GAAG7nG,KAAKE,UAE7C,MAAMmhI,EAAYxiC,EAAG3lF,QACf0nH,EAAU,CACb5gI,KAAM,UACNkB,KAAM,cACNhB,GAAIV,EAAIohI,QACRtgI,MAAOoF,EAASqgE,aAAergE,EAASqgE,aAAe,EACvD/kE,QAAQ,EACRf,SAAUyF,EAASsgE,WAAatgE,EAASsgE,WAAa,OACtDxlE,IAAKkF,EAASogE,UAAY,aAAe,GACzC38D,KAAMg4H,EAAUt6G,OAAOi6G,GACvBp/H,GAAI,CACDgI,YAAcxJ,IAEX,GAAIA,IAAOV,EAAIshI,aAEZ7sH,YAAW,KACR,MAAMqtH,EAAWr+H,GAAGzD,EAAIohI,SAGxBU,EAASnnH,OAAO3a,EAAIshI,cAEpBQ,EAAS9gH,IAAIqgH,GAEbS,EAASC,SAGTD,EAASroC,OAAOmoC,GAGhBC,EAAUloH,IACP,GAAG3Z,EAAIo7G,YACP0mB,EAAS/sD,WACX,GACD,QACC,GAAIr0E,IAAOV,EAAIqhI,WACnB5sH,YAAW,KACR,MAAMqtH,EAAWr+H,GAAGzD,EAAIohI,SAGxBU,EAASnnH,OAAO3a,EAAIqhI,YAEpBS,EAAS9gH,IAAIsgH,GAEbQ,EAASC,SAGTD,EAASroC,OAAOmoC,GAGhBC,EAAUloH,IACP,GAAG3Z,EAAIo7G,YACP0mB,EAAS/sD,WACX,GACD,OACC,CAEJ6sD,EAAelhI,EAIfA,EAAKA,EAAGoS,QAAQ,QAAS,IACzB,IAAIzQ,EAAOoB,GAAG/C,GACd,GAAI2B,EACDA,EAAKqC,MAAK,GAAO,OACb,CAEJ,IAAIma,EAAM,sBAAsB/e,KAAKmH,SAASnH,KAAKY,qDAAqDkhI,MACxG9hI,KAAK+B,GAAGqG,OAAO,YAAa2W,EAAK,CAAC,EACrC,CAIH,GAEHo4D,cAAe,KACZ,MAAM6qD,EAAWr+H,GAAGzD,EAAIohI,SAGlBY,EAAeF,EAASt0H,MAAM+zE,cACjC,iBAAiBvhF,EAAIshI,kBAGpBU,GACDA,EAAaxgD,aACV,UACA,oBAAoBxhF,EAAIshI,gBAG9B,MAAMW,EAAaH,EAASt0H,MAAM+zE,cAC/B,iBAAiBvhF,EAAIqhI,gBAGpBY,GACDA,EAAWzgD,aACR,UACA,kBAAkBxhF,EAAIqhI,cAG5BhkC,EAASr2E,OAAOxmB,IACb,MAAM6B,EAAOy/H,EAASt0H,MAAM+zE,cACzB,iBAAiB/gF,EAAKE,aAGpB2B,GAELA,EAAKm/E,aACF,UACA,OAAOhhF,EAAKU,MAAM4R,QAAQ,IAAK,OAAOtS,EAAKE,MACxC28F,EAAS38F,KAEd,GACF,IAKLwhI,EAAY,CACf1hI,KAAM,YACNE,GAAIV,EAAIo7G,IACR+mB,WAAW,EACX/7D,SAAUlgE,EAASkgE,SACnB7jE,MAAO8lG,EAAep6F,KAAKzN,IACV,CACXE,GAAIF,EAAKA,KAAKE,GAEdF,KAAM,SACNmB,KAAM,OAKZO,GAAI,CACDkgI,aAAc,CAACC,EAAQC,KACpBxiI,KAAKwK,OAAOg4H,EAAO,IAK5B,IAAItrE,EAAU,CAACoqE,EAASc,GAEI,UAAxBh8H,EAASsgE,aACVxP,EAAU,CAACkrE,EAAWd,IAGzBnjC,EAAM,CACHh9F,KAAM+1D,EAEZ,MACGinC,EAAM,CACHz9F,KAAM,SAEf,KAAO,CACJ,MAAM+B,EAAQ86F,EACVr2E,OAAOxmB,IAGL,GAFoBA,EAAK23D,gBAEP,EACf,OAAO33D,CACV,IAEFyN,KAAKzN,IACH,MAAM+hI,EAAQ,CACX7hI,GAAIF,EAAKE,GAETF,KAAM,SACNmB,KAAM,IAGT,IAAI6gI,EAAc,GAwBlB,OAnBMA,EAFFhiI,EAAK62D,QACFnxD,EAASugE,UACI,CACX,mEACAjmE,EAAK62D,QACL,iBACA72D,EAAKU,MACL,UACDkN,KAAK,IAEO,CACX,kCACA5N,EAAK62D,QACL,aACA72D,EAAKU,OACNkN,KAAK,IAIM5N,EAAKU,MAEjB,CACJ0uE,OAAQ4yD,EACRjhI,KAAMghI,EACR,IAKJtkC,EADC17F,EAAM0D,OACD,CACHtE,KAAM,CACH,CACGnB,KAAM,UACNE,GAAIV,EAAIo7G,IACRh1C,SAAUlgE,EAASkgE,SACnBk1C,OAAQ,CACLz6G,OAAQ,GACRa,KAAM,SACNV,IAAKkF,EAASogE,UAAY,aAAe,GACzCpkE,GAAI,CACD+0E,cAAe,KACZomB,EAASr2E,OAAOxmB,IACb,MAAM6B,EAAOoB,GACVzD,EAAIo7G,KACL5tG,MAAM+zE,cACL,eAAe/gF,EAAKE,QAGlB2B,GAELA,EAAKm/E,aACF,UACA,OAAOhhF,EAAKyG,QAAQzG,EAAKE,MAAM28F,EAAS38F,KAC1C,GACF,IAIXwhI,UAAW,CACRhgI,GAAI,CACDkgI,aAAc,CAACC,EAAQC,KACpBxiI,KAAKwK,OAAOg4H,EAAO,IAI5B//H,MAAOA,KAOV,CACH/B,KAAM,SAEf,MAEAy9F,EAAM,CACHz9F,KAAM,UAOZ,OAJAy9F,EAAMr+F,MAAMW,GAAG,CAAC09F,WAETA,EAAIv8F,KAEJu8F,CACV,CAEAh5F,WAAWpD,SACFjC,MAAMwD,KAAKvB,GAEjB,MAAM7B,EAAMF,KAAKE,IACXyiI,EAAOh/H,GAAGzD,EAAIo7G,KACd/b,EAAKv/F,KAAK+B,GACVy9F,EAAUD,EAAG9kF,MAEfkoH,GAAMnjC,EAAQ97F,OAAOi/H,EAAMnjC,EAAQ57F,aAEvC,MAAM25F,EAAWv9F,KAAKU,KACCV,KAAKuoG,eAEbtkG,SAASozH,IAIrBr3H,KAAK4xB,SAAS,CACXC,QAASwlG,EAAG32H,KACZoxB,UAAW,aACXC,SAAU,IAAIjQ,IAAM9hB,KAAK88F,cAAch7E,IACxC,IAIL9hB,KAAK4xB,SAAS,CACXC,QAAS0rE,EACTzrE,UAAW,YACXC,SAAU,IAAIjQ,IAAM9hB,KAAK4iI,aAAa9gH,KAIzC,MAAMkgH,EAAWr+H,GAAGzD,EAAIohI,SAExB,IAAKU,EAAU,OAEf,MAAMt6E,QAAc63C,EAAG3lF,QAAQjE,IAAI,GAAGzV,EAAIo7G,aAE1C,IAAK5zD,EAAO,OAGZ,MAAM85E,EAAe,CAClB5gI,GAAIV,EAAIshI,aACR7+H,MAAO3C,KAAKoB,MAAM,iBAClBmK,KAAM,uBAIHg2H,EAAa,CAChB3gI,GAAIV,EAAIqhI,WACR5+H,MAAO3C,KAAKoB,MAAM,eAClBmK,KAAM,uBACNspE,QAAQ,GAIXmtD,EAASa,SAASn7E,GAElB,MAAMo7E,EAAoBd,EAASv1G,QAAQvsB,EAAIshI,eAAiB,KAC1DuB,EAAkBf,EAASv1G,QAAQvsB,EAAIqhI,aAAe,KAGxD75E,EAAMs7E,UACHF,GAAqBC,GAEtBf,EAAS9gH,IAAIqgH,GACRuB,GAAqBC,GAE7Bf,EAAS9gH,IAAIsgH,EACnB,CAEA1kC,WAAW54B,GACR,MAAMhkE,EAAMF,KAAKE,IACXyiI,EAAOh/H,GAAGzD,EAAIo7G,KAEpBqnB,EAAKnnD,aACLx7E,KAAKU,KAAKo8F,WAAW54B,GACrBy+D,EAAKlnD,cACR,CAEAmnD,UAAUK,GACP,MAAM/iI,EAAMF,KAAKE,IACXq9F,EAAWv9F,KAAKU,KAChBwiI,EAAav/H,GAAGs/H,GAKtB,GAFAjjI,KAAKg9H,aAAaz/B,EAASxoF,QAEvB/U,KAAKoG,SAASmgE,UACf,GAAK28D,EAAWrmD,YAMTl5E,GAAGzD,EAAIo7G,KAAKz2G,SAASo+H,OANC,CAC1B,MAAMhG,EAASC,aAAY,KACpBgG,EAAWrmD,aAAasgD,cAAcF,GAE1CiG,EAAWt+H,MAAK,GAAO,EAAM,GAC7B,IACN,CACN,CAEAo4H,aAAat8H,GACV,MAAMyiI,EAAUx/H,GAAGjD,EAAKE,IAGP,QAAbF,EAAK2D,KAA8B,kBAAb3D,EAAK2D,MAC5B8+H,GAASv+H,MAETu+H,EAAQv+H,MAAK,GAAO,GAEnBlE,EAAKqU,QACN/U,KAAKg9H,aAAat8H,EAAKqU,OAE7B,CAEAvK,OAAOkvD,GACJ,MAAMx5D,EAAMF,KAAKE,IAEjB,IAAIkjI,GAAmB,EAEvB,MAAMpB,EAAWr+H,GAAGzD,EAAIohI,UAGnB5nE,GAAUsoE,IACZtoE,EAASsoE,EAASzH,gBAAgBvnH,QAAQ,QAAS,KAEtD,MAAMuqF,EAAWv9F,KAAKU,KACCV,KAAKuoG,eAEbtkG,SAASozH,IAErB,MAAMl1F,EAAWo7D,EAASr2E,OAAOxmB,GACvBA,EAAKE,KAAOy2H,EAAG32H,KAAKE,KAG9B,IAAI03D,EAAc,EAEdn2B,EAASh8B,SAAQmyD,EAAcn2B,EAAS,GAAGk2B,kBAG1CqB,IAAW0pE,GAAoB9qE,EAAc,IAC/CoB,EAAS29D,EAAG32H,KAAKE,GAEjBwiI,GAAmB,GAItB,MAAMT,EAAOh/H,GAAGzD,EAAIo7G,KACdl1G,EAAWpG,KAAKoG,SAEtB,IAAKixH,GAAIl3H,WAAak3H,GAAI32H,MAAME,KAAO84D,EAAQ,CAExCipE,GAAMt9H,cAAcs9H,EAAKt9H,aAAa,CAAEzD,KAAM,SAElDy1H,EAAGl3H,UAAYk3H,EAAG32H,KAAKP,YAEvB,MAAMgjI,EAAUx/H,GAAG0zH,EAAG32H,KAAKE,IACrB2+F,EAAKv/F,KAAK+B,GACVy9F,EAAUD,EAAG9kF,MAEfrU,EAASmgE,UAEVi5B,EAAQ/+F,GACL,CAEGG,GAAIy2H,EAAG32H,KAAKE,GACZF,KAAM,aACNQ,IAAK,0BACLO,KAAM41H,EAAGl3H,UAAUM,MAEtB0iI,GAIH3jC,EAAQ/+F,GACL,CAEGG,GAAIy2H,EAAG32H,KAAKE,GACZF,KAAM,aACNQ,IAAK,wBACLO,KAAM41H,EAAGl3H,UAAUM,MAEtB0iI,GAKN7qE,EAAc++D,EAAG32H,KAAK23D,gBAEtBg/D,EAAGl3H,UAAUmD,KAAKi8F,EAAIjnC,GAGtB3jD,YAAW,KAGRguH,GAAMh7H,gBAAgB,GACtB,GACN,CAGI0vH,GAAI32H,MAAME,KAAO84D,GAAU29D,GAAIl3H,WAAWqK,QAC3C6sH,EAAGl3H,UAAUqK,SAEZpE,EAASmgE,WAAa8wD,GAAI32H,MAAME,KAAO84D,IACxC/1D,GAAG+1D,GAAQ90D,MAAK,GAAO,GACvBo9H,EAASroC,OAAO,GAAGjgC,UACtB,GAEN,oBCnjBH,MAAMkjC,EAAkB,WAExBn9F,EAAOC,QAAU,cAAkCk9F,EAChDj9F,YAAY49F,EAAU19F,EAAQK,GAC3BJ,MACGy9F,EACA19F,GAAU,cAAc09F,EAAS38F,KACjCuT,OAAOsnC,OACJ,CACGptC,KAAM,IAETnO,GAGT,CAEAO,KACG,MAAMP,EAAMF,KAAKE,IACXkG,EAAWpG,KAAKoG,SAEhBi9H,EAAU,CACbziI,GAAIV,EAAImO,KACR3N,KAAM,WACNuhH,UAAW,GACX/gH,IAAK,qBACLS,YAAY,GAGXyE,EAASrF,OAAQsiI,EAAQtiI,OAASqF,EAASrF,OAC1CsiI,EAAQpyB,YAAa,EAE1B,MAAM9S,EAAMr+F,MAAMW,GAAG,CAAC4iI,IAItB,cAFOllC,EAAIv8F,KAEJu8F,CACV,CAEAl3B,YAAYtkE,GACT,MAAMzC,EAAMF,KAAKE,IACX4N,EAAS9N,KAAKU,KAAKumE,YAAYtkE,EAAOzC,EAAImO,MAE1Ci1H,EAAQ3/H,GAAGzD,EAAImO,MAEhBi1H,IAELA,EAAM7+H,OAAO,WAAYqJ,GACzBw1H,EAAM5+H,UACT,CAEA8F,SACG1K,MAAM0K,SAGN,MAAMwwD,EAAWh7D,KAAK2rB,eAChB4xE,EAAWv9F,KAAKU,KAElBs6D,GAAoC,aAAxBuiC,EAASxoF,OAAO1Q,KAC7Bk5F,EAAS3rE,SAAS,CACfC,QAASmpC,EACTlpC,UAAW,eACXC,SAAU,IAAIjQ,IAAM9hB,KAAKinE,eAAenlD,KAG9C9hB,KAAKinE,aACR,iEC/DY,MAAMs8D,UAAuB,IAS9Bz5F,qBACR,MAAO,CAAC,CACX,CAaApf,2BACG,IAYI4wD,EAAQ,CACT93E,UAAW,CAAC,GAGf,MAAO,CACJ/C,GAjBM,CACNC,KAAM,WACN6hE,SAAU,SAgBVj/D,KAbSnB,IAET,IAAK,IAAIoB,KAAK+3E,EAAM93E,UACjB83E,EAAM93E,UAAUD,GAAKpB,EAAQoB,IAAM+3E,EAAM93E,UAAUD,EACtD,EAUA+3E,MAAOA,EAEb,CAEA3oB,aAAavsD,GACVpG,KAAKoG,SAAWA,CACnB,CAEAo9H,aACG,OAAOxjI,KAAKoG,UAAY,CAAC,CAC5B,CAiBAjG,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEd,IAYIy7E,EAAQ,CACT93E,UAAW,CAAC,GAGf,MAAO,CACJ/C,GAjBM,CACNC,KAAM,WACN6hE,SAAU,SAgBVj/D,KAbSnB,IAET,IAAK,IAAIoB,KAAK+3E,EAAM93E,UACjB83E,EAAM93E,UAAUD,GAAKpB,EAAQoB,IAAM+3E,EAAM93E,UAAUD,EACtD,EAUA+3E,MAAOA,EAEb,qFC/FH,IAAIv7E,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEjC,MAAMiwF,UAA8B,IAOrC/7D,qBACR,MAAO,CACJsxB,SAAU,OAEhB,CAEA1wC,yBAAyB9qB,EAAKC,GAC3B,IAAIK,EAAM,CACPk7D,SAAU,GAAGv7D,cAGZY,EAAK,CACNG,GAAIV,EAAIk7D,SACRj0D,KAAM,WACNzG,KAAM,aACNU,MAAOrB,EAAE,gBACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,iBACxC1a,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KACZD,GAAUl5E,EAAE,sBACb4D,GAAGzD,EAAIk7D,UAAUv2D,SAAS,IAG7BrD,EAAOgC,UAAUsE,QAAQ,IAW9BtG,EAAS,CACVgC,UAAW,CACRsE,OAAQ,WACLU,QAAQC,KAAK,eAChB,GAGH2D,YAAa,CAAC1L,EAAM0F,EAAW,CAAC,KAC7B,GAAY,MAAR1F,EAAc,OAGlB,IAAI+iI,EAAY,CACb,CACG7iI,GAAI,OACJ+B,MAAO5C,EAAE,uBAIX2jI,EAAehjI,EACfq4D,WACAtzC,OAAO3D,GACEA,EAAEoF,OAAO9T,GAEVA,GACS,QAATA,EAAE/O,KACF+O,EAAEuY,gBACFvY,EAAEuY,eAAeD,YACjBtY,EAAEuY,eAAeD,WAAW9qB,IACzBF,EAAKkF,QAAQQ,SAASO,aAE5B,GAAMR,SACT,GACFgI,KAAK2T,IACI,CACJlhB,GAAIkhB,EAAElhB,GACN+B,MAAOmf,EAAE1gB,UAIlBqiI,EAAYA,EAAUl8G,OAAOm8G,GAE7B,IAAIpe,EAAY3hH,GAAGzD,EAAIk7D,UACnBkqD,IACDA,EAAU7gH,OAAO,UAAWg/H,GAC5Bne,EAAU7gH,OACP,QACA2B,EAASg1D,UAAYp7D,KAAK8pC,QAAQsxB,UAErCkqD,EAAU5gH,UACb,EAGH4H,YAAc5L,IACX,IAAI0F,EAAW1F,EAAK0F,UAAY,CAAC,EAIjC,OAFAA,EAASg1D,SAAWz3D,GAAGzD,EAAIk7D,UAAUnvD,WAE9B7F,CAAQ,GAIrB,MAAO,CACJ3F,GAAIA,EACJ6C,KArEUnB,IACV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAmEA6I,YAAa5K,EAAO4K,YACpBE,YAAa9K,EAAO8K,YAE1B,CAEAqmD,aAAavsD,EAAW,CAAC,GACtBpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAClCpG,KAAKoG,SAASg1D,SACXh1D,EAASg1D,UAAYp7D,KAAKL,YAAYmqC,QAAQsxB,QACpD,CAEAuoE,OAAO9jI,EAAQD,GACZ,MAAO,CACJ80E,MAAO90E,EAAIo6B,KAAK55B,OAAO,GAAGP,mBAC1B+F,MAAO/F,EAAOooB,MAAM,KAAK,GACzB+2D,OAAQp/E,EAAIo6B,KAAK55B,OAAO,GAAGP,0BAEjC,CAEAM,UAAUP,EAAKC,GAEZ,IAAIK,EAAMF,KAAK2jI,OAAO9jI,EAAQD,GAE1Ba,EAAK,GAET,GACGT,KAAKoG,SAASg1D,UACdp7D,KAAKoG,SAASg1D,UAAYp7D,KAAKL,YAAYmqC,QAAQsxB,SACpD,CAGC,MAAM8sB,EAAS,qBAAqBloF,KAAKoG,SAASg1D,YAAYl7D,EAAI0F,QAIlEnF,EAAK,CACFG,GAAIV,EAAI8+E,OACRt+E,KAAM,SACNkB,KAAM,OACN2J,KAAM,aACNvK,MAAO,GACPD,OAAQ,GACRG,IAAK,wCACLkB,GAAI,CACD+0E,cAAe,KACZxzE,GAAGzD,EAAI8+E,SACFtxE,MAAM+zE,cAAc,UACrBC,aAAa,UAAWwG,EAAO,GAI/C,CAEA,IAAI1mF,EAAS,CACVgC,UAAW,CACR2yH,WAAaxL,IACNhnH,GAAGzD,EAAIw0E,QAAQ/wE,GAAGzD,EAAIw0E,OAAOvK,OAAO,EAE3C5hE,SAAU,KACH5E,GAAGzD,EAAIw0E,QAAQ/wE,GAAGzD,EAAIw0E,OAAOvK,SAE1B,GAEVy5D,cAAe,KACL,EAEV5lE,YAAa,KACH,GAIbl5D,gBAAkBC,IACf/E,KAAK6jI,aAAe9+H,CAAW,EAGlC88G,QAAUl1F,IACP,IAAIu3C,EAASlkE,KAAKoG,SAASg1D,SACvB4I,EAAOhkE,KAAK6jI,aAAap+G,OAAO3D,GAAMA,EAAElhB,IAAMsjE,IAAQ,GAAM,GAEhE,OAAO1iE,EAAOsiI,cAAc9/D,EAAMr3C,EAAG,EASxCm3G,cAAe,CAAC9/D,EAAMr3C,IACZ,IAAIld,SAAQ,CAACC,EAASiH,KAC1B,GAAyB,MAArB3W,KAAK6jI,aAAsB,OAAOn0H,IAEtC,GAAI/L,GAAGzD,EAAIw0E,OAER,OADA/wE,GAAGzD,EAAIw0E,OAAO9vE,OACP8K,IAIV,IAAIq0H,EAAY//D,EAAKlvC,MAAM,KAAM,KAAM,CAAEilC,gBAAgB,IACzDgqE,EAAUnjI,GAAKZ,KAAK6jI,aAAa9hI,GAAG8N,OAEpC,IAAIm0H,EAAYD,EAAU5jI,YACtBM,EAAKujI,EAAUvjI,KAGnB,MAAMu+E,EAAS+kD,EAAU78G,OACrB9T,GAAMA,aAAa,MACpB,GACD,GACE4rE,GACDA,EAAOjqE,OAAO3S,GAAG,SAAU6hI,IACxBziI,GAAQgC,WAAW2yH,WAAW8N,GAI1BtgI,GAAGzD,EAAIw0E,OACR/wE,GAAGzD,EAAIw0E,OAAOvK,QAEFnqE,KAAKu7G,mBACXpxC,OACT,IAIN,IAAI+5D,EAAgB,CACjBxjI,KAAM,SACNE,GAAIV,EAAIw0E,MACR5zE,OAAO,EACPH,SAAU,SAKVE,QAAQ,EACRG,MAAOskB,SAAStlB,KAAKoG,SAASs3D,aAAe,IAC7C38D,OAAQukB,SAAStlB,KAAKoG,SAASu3D,aAAe,IAAM,IACpDz8D,IAAK,oBACLD,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAO4iE,EAAK5iE,MACZF,IAAK,cACLG,MAAO,UAEV,CACGX,KAAM,SACNU,MAAOrB,EAAE,SACTuB,WAAW,EACXD,MAAO,SACPE,MAAO,WACQvB,KAAKu7G,mBACXpxC,OACT,KAIT1oE,KAAM,CACHf,KAAM,aACNgB,QAAQ,EACRD,KAAMhB,IAKZgD,MAAMhD,GAAGyjI,GAAet/H,OAIxBo/H,EAAU1gI,KAAKtD,KAAK6jI,aAAa9hI,GADb,EAC8B,CAC/Co0H,WAAY30H,EAAOgC,UAAU2yH,WAC7BE,cAAe70H,EAAOgC,UAAU+E,SAChCy1D,YAAax8D,EAAOgC,UAAUw6D,YAC9B4lE,cAAepiI,EAAOgC,UAAUogI,gBAGnCI,EAAUx5H,SAEVmK,YAAWxP,UACR3D,EAAO2iI,gBAAgBx3G,EAAIo3G,GAE3Br0H,GAAS,GACT,IAAI,IAIby0H,gBAAiB,CAACx3G,EAAIq3C,KACnB,IAAKr3C,EAAI,OAET,IAAI7U,EAAM6U,EAAGjB,WACb,IAAK5T,EAAK,OAEV,IAAIssH,EAAaz3G,EAAGJ,YACf63G,GAELpgE,EAAK98C,QAAQjjB,SAASmP,IACdA,GAAc,QAATA,EAAE/O,KAEZ+O,EAAE8T,QAAQjjB,SAASogI,IAChB,GAAiB,WAAbA,EAAMhgI,KAAsC,MAAlBggI,EAAMj+H,SAAkB,OAEtD,IAAIR,EAAQy+H,EAAMz+H,QAClB,GAAa,MAATA,EAAe,OAEnB,IAAI0+H,EAAU1+H,EAAMgB,eACpB,GAAe,MAAX09H,GAAmBA,EAAQ1jI,IAAMkX,EAAIlX,GAAI,OAE7C,IAAIiJ,EAAO,CAAC,EACR2mB,EAAe5qB,EAAM4qB,eAezB,GAdA3mB,EAAK2mB,GAAgB,CAClB5vB,GAAIwjI,EAAWxjI,KAIJkX,EAAI0oB,WAAa,IACvBv8B,SAAS29B,KACbA,EAAI76B,QAAU,IAAI9C,SAAS+C,IACzB6C,EAAK2mB,GAAcxpB,EAAEF,YAClBs9H,EAAWp9H,EAAEF,WAAW,GAC5B,IAIDs9H,EAAW/1H,KACZxE,EAAK2mB,GAAcniB,KAAO+1H,EAAW/1H,KACrCxE,EAAK2mB,GAAc7tB,MAAQkH,EAAK2mB,GAAcniB,SAC1C,CACJ,IAAIk2H,EAAU,CAAC,EACfA,EAAQ/zG,GAAgB4zG,EACxBv6H,EAAK2mB,GAAcniB,KAAOzI,EAAM0a,OAAOikH,GACvC16H,EAAK2mB,GAAc7tB,MAAQkH,EAAK2mB,GAAcniB,IACjD,CAEA,IAAI8+C,EAAO/5C,EAAEm1F,eAAe87B,EAAMzjI,IAClC,IAAKusD,EAAM,OAEX,MAAM1sD,EAAuB,mBAAX0sD,EAAK1sD,GAAmB0sD,EAAK1sD,KAAO0sD,EAAK1sD,GACrDs1H,EAAUt1H,GAAIs1H,SAAWt1H,GAAIoB,OAAO,IAAIk0H,QAE1CA,GAASnwH,EAAMf,SAASlB,GAAGoyH,GAAUlsH,EAAK,GAC/C,GACH,GAeR,MAAO,CACJpJ,GAAIA,EACJ6C,KAbSnB,IACT,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAExD,GAAI9C,EACD,IAAK,IAAI8C,KAAKpB,EACX1B,EAAG2B,GAAGmB,GAAKpB,EAAQoB,EAEzB,EAOAuB,gBAAiBtD,EAAOsD,gBACxB+8G,QAASrgH,EAAOqgH,QAChBiiB,cAAetiI,EAAOsiI,cAE5B,iECtXH,IAAI/jI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEjC,MAAM40F,UAA+B,IAOtC1gE,qBACR,MAAO,CACJq0B,SAAU,OAEhB,CAEAzzC,yBAAyB9qB,EAAKC,GAC3B,IAAIK,EAAM,CACPskI,SAAU,GAAG3kI,cAGZY,EAAK,CACNG,GAAIV,EAAIskI,SACRr9H,KAAM,WACNzG,KAAM,aACNU,MAAOrB,EAAE,aACT+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAAS6a,iBACxC1a,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KACZD,GAAUl5E,EAAE,sBACb4D,GAAGzD,EAAIskI,UAAU3/H,SAAS,IAG7BrD,EAAOgC,UAAUsE,QAAQ,IAW9BtG,EAAS,CACVgC,UAAW,CACRsE,OAAQ,WACLU,QAAQC,KAAK,eAChB,EACAu1D,YAAa,KACH,GAIb5xD,YAAa,CAAC1L,EAAM0F,EAAW,CAAC,KAC7B,GAAY,MAAR1F,EAAc,OAClB0F,EAAS43D,aAAc,EAGvB,IAAIylE,EAAY,CACb,CACG7iI,GAAI,OAEJ+B,MAAO5C,EAAE,wBAIdW,EAAKq4D,WAAWtzC,OAAM,KAAM,IAAM,IAAS,IAAIxhB,SAAS6d,IACjDA,GAELA,EAAEoF,OAAM,KAAM,IAAM,GAAMjjB,SAASmP,IAE7BA,GACS,QAATA,EAAE/O,KACF+O,EAAEuY,gBACFvY,EAAEuY,eAAeD,YACjBtY,EAAEuY,eAAeD,WAAW9qB,IACzBF,EAAKkF,QAAQQ,SAASO,YAEzB88H,EAAUn/H,KAAK,CACZ1D,GAAIwS,EAAEgV,aACNzlB,MAAO,GAAGmf,EAAE1gB,WAAWgS,EAAEhS,SAE/B,GACD,IAGL,IAAIkkH,EAAY3hH,GAAGzD,EAAIskI,UACnBlf,IACDA,EAAU7gH,OAAO,UAAWg/H,GAC5Bne,EAAU7gH,OACP,QACA2B,EAAS+3D,UAAYn+D,KAAK8pC,QAAQq0B,UAErCmnD,EAAU5gH,UACb,EAGH4H,YAAc5L,IACX,IAAI0F,EAAW1F,EAAK0F,UAAY,CAAC,EAE7Bk/G,EAAY3hH,GAAGzD,EAAIskI,UAEnB1C,GADexc,EAAUrqC,WACIh5E,OAAOR,KAAKoI,MAAQ,IAAIf,QACrDm2C,GAAQA,EAAIr+C,IAAM0kH,EAAUr5G,aAC9B,GAKF,OAJI61H,IACD17H,EAAS+3D,SAAW2jE,EAAalhI,IAG7BwF,CAAQ,GAIrB,MAAO,CACJ3F,GAAIA,EACJ6C,KA9EUnB,IACV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EA4EA6I,YAAa5K,EAAO4K,YACpBE,YAAa9K,EAAO8K,YAE1B,CAEAqmD,aAAavsD,EAAW,CAAC,GACtBpG,KAAKoG,SAAWpG,KAAKoG,UAAY,CAAC,EAClCpG,KAAKoG,SAAS+3D,SACX/3D,EAAS+3D,UAAYn+D,KAAKL,YAAYmqC,QAAQq0B,QACpD,CAEAh+D,UAAUP,EAAKC,GAQZG,KAAK2jI,OANL,SAAgB9jI,EAAQD,GACrB,MAAO,CACJ80E,MAAO90E,EAAIo6B,KAAK55B,OAAO,GAAGP,qBAC1B+F,MAAO/F,EAAOooB,MAAM,KAAK,GAE/B,EAIA,IAAIklC,EAAOrtD,MAAMK,UAAUP,EAAKC,GAmBhC,OAjBAstD,EAAK00D,QAAU,KACZ,IACI7hH,KAAK6jI,eACL7jI,KAAKoG,SAAS+3D,UACfn+D,KAAKoG,SAAS+3D,UAAYn+D,KAAKL,YAAYmqC,QAAQq0B,SAEnD,OAAO1uD,QAAQC,UAElB,IAAIxF,EAAOlK,KAAK6jI,aAAa/7G,WAAW9nB,KAAKoG,SAAS+3D,UACtD,IAAKj0D,EAAM,OAAOuF,QAAQC,UAE1B,IAAIs0D,EAAO95D,EAAK0uD,aAChB,OAAKoL,EAEE7W,EAAK22E,cAAc9/D,GAFRv0D,QAAQC,SAEK,EAG3By9C,CACV,iEChJH,MAAMpqC,EAAY,EAAQ,OAM1B,IAAIhjB,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhD,MAAM6uH,UAA2B1hH,EAC9BpjB,cACGG,MAAM,CAAC,SAAUiC,GACpB,CAEA4wD,aAAavsD,GACVtG,MAAMmG,WAAWG,GACjBpG,KAAKm1B,QAAU/uB,EAAS+uB,OAC3B,CAEAquG,aACG,IAAI1rH,EAAMhY,MAAMgG,QAEhB,OADAgS,EAAIqd,QAAUn1B,KAAKm1B,QACZrd,CACV,EAUY,MAAMooF,UAAiC,IACnDvgG,YAAYoC,EAAIlC,GACbC,MAAMD,EAAQ,CACX6kI,gBAAiB,GACjBC,YAAa,GACbC,0BAA2B,GAC3BC,iBAAkB,GAClBC,kBAAmB,GACnBC,kBAAmB,KAGtB/kI,KAAK+B,GAAKA,EACV/B,KAAKH,OAASA,EACdG,KAAKiF,OAAS,KAGdjF,KAAKglI,qBAAuB,KAI5BhlI,KAAKi4H,UAAYj4H,KAAK+B,GAAG6xB,iBAAiB,GAAG5zB,KAAKE,IAAIC,oBAKtDH,KAAKilI,cAAgBjlI,KAAK+B,GAAG6xB,iBAC1B,GAAG5zB,KAAKE,IAAIC,yBAMfH,KAAKklI,0BAA6BviI,IAC/B,IAAIk7F,EAAcl7F,EAAMwe,OAAS,GAQjCnhB,KAAKmlI,iBAAiBp3G,GACZ/tB,KAAKi4H,UAAU1yH,QAAQwoB,IAC9B8vE,EAAY,EAGlB79F,KAAKolI,8BAAgC,KAClCplI,KAAKmlI,iBAAiB,EAGzBnlI,KAAKisB,aAAc,CAGtB,CAQW6d,qBACR,MAAO,CACJq3B,aAAc,EAQdC,mBAAoB,UAOpBC,gBAAiB,EAmBvB,CAOA1O,aAAavsD,IACVA,EAAWA,GAAY,CAAC,GAEf+6D,kBAC0B,IAAzB/6D,EAAS+6D,aACX/6D,EAAS+6D,aACT++B,EAAyBp2D,QAAQq3B,aAEzC/6D,EAASi7D,qBAC6B,IAA5Bj7D,EAASi7D,gBACXj7D,EAASi7D,gBACT6+B,EAAyBp2D,QAAQu3B,gBAEzCrhE,KAAKoG,SAAWA,CACnB,CASApB,WAAWC,GACRjF,KAAKiF,OAASA,EAEVjF,KAAKi4H,WAENj4H,KAAKi4H,UAAUpkG,WAAW5uB,EAAO8B,UAGhC/G,KAAKilI,eAENjlI,KAAKilI,cAAcpxG,WAAW5uB,EAAO8B,SAE3C,CAEA03F,SAAS/9F,GACNV,KAAKU,KAAOA,CACf,CAGAD,KACG,IAAIu7E,EAAOh8E,KACPE,EAAMF,KAAKE,IAEf,MAAO,CACJU,GAAIV,EAAIykI,YACR/iI,KAAM,QACND,YAAY,EACZa,QAAS,EACTqyE,QAAQ,EACRhzE,KAAM,CACH,CACGjB,GAAIV,EAAI0kI,0BACR/vD,QAAQ,EACR1zE,KAAM,CACH,CACGP,GAAIV,EAAI2kI,iBACRnkI,KAAM,OACNg3E,YAAa33E,EAAE,2CACfqC,GAAI,CACDy3E,gBAAiB,KACd75E,KAAKmlI,iBAAiB,IAI/B,CACGzkI,KAAM,SACNQ,IAAK,gBACLF,MAAO,GACPY,KAAM,OACN2J,KAAM,cACNhK,MAAO,WACJ,IAAIg7E,EAAQ54E,GAAGzD,EAAI2kI,kBACnBtoD,EAAM13E,SAAS,IACf03E,EAAMt9D,QACNs9D,EAAM8oD,UAAU,kBACnB,KAIT,CACGzkI,GAAIV,EAAIwkI,gBACRhkI,KAAM,SACNQ,IAAK,gBACLyB,MAAO5C,EAAE,cACTwB,MAAO,KACJvB,KAAKilI,cAAcntD,MAAMn0E,GAAGzD,EAAIwkI,iBAAiBhlC,UAAW,CACzD1vE,IAAK,UACN,GAGR,CACGtvB,KAAM,UACNE,GAAIV,EAAI4kI,kBACR5jI,IAAK,kBACL2zE,QAAQ,EACR1zE,KAAM,CACH,CACGT,KAAM,SACNQ,IAAK,gBACLN,GAAIV,EAAI6kI,kBACR3jI,MAAOrB,EAAE,gBACTwL,KAAM,YACN3J,KAAM,OAENN,WAAW,EACXC,MAAO,WACJy6E,EAAKspD,aACR,MAMlB,CAEAngI,WAAWpD,GACJA,IACD/B,KAAK+B,GAAKA,GAGb,IAAI7B,EAAMF,KAAKE,IA+Bf,OArBAF,KAAKi4H,UAAU30H,OACftD,KAAKi4H,UAAU1iG,eAAe,UAAWv1B,KAAKklI,2BAC9CllI,KAAKi4H,UAAU71H,GAAG,UAAWpC,KAAKklI,2BAElCllI,KAAKilI,cAAc3hI,OACnBtD,KAAKilI,cAAc1vG,eAChB,UACAv1B,KAAKolI,+BAERplI,KAAKilI,cAAc7iI,GAAG,UAAWpC,KAAKolI,+BACtCplI,KAAKilI,cAAc1vG,eAChB,OACAv1B,KAAKolI,+BAERplI,KAAKilI,cAAc7iI,GAAG,OAAQpC,KAAKolI,+BAEnCzhI,GAAGzD,EAAIykI,cAAchgI,OACrBhB,GAAGzD,EAAIwkI,kBAAkB//H,OACzBhB,GAAGzD,EAAI4kI,oBAAoBngI,OAC3BhB,GAAGzD,EAAI0kI,4BAA4BjgI,OAE3B3E,KAAKoG,SAAS+6D,cACnB,KAAK,EACF,MACH,KAAK,EACF,OAAQnhE,KAAKoG,SAASg7D,oBACnB,IAAK,OACFz9D,GAAGzD,EAAIwkI,kBAAkB9/H,OACzBjB,GAAGzD,EAAIykI,cAAc//H,OACrB,MACH,IAAK,UACFjB,GAAGzD,EAAIykI,cAAchgI,OAG3B,MACH,KAAK,EACFhB,GAAGzD,EAAIykI,cAAc//H,OACrB,IAAI2gI,EAAqB5hI,GAAGzD,EAAI4kI,mBAC5BS,IACDA,EAAmB3gI,OAGf5E,KAAKoG,UAAUo/H,aACfxlI,KAAKoG,SAASo/H,YAAc,IAAIvhI,SAASwhI,IACvC,IAAIC,EAAO,IAAIjB,EACfiB,EAAK/yE,aAAa8yE,GAClB,IAAIE,EAAmB,CACpBjlI,KAAM,SACNQ,IAAK,gBACLE,MAAOskI,EAAKtkI,MACZmK,KAAM,eACN3J,KAAM,OAENN,WAAW,EACXC,MAAO,KACJvB,KAAKwP,KAAK,cAAe,KAAMk2H,EAAKvwG,QAAQ,GAIlDowG,EAAmBt6H,QAAQ06H,EAAiB,KAIrD,MACH,KAAK,EACFhiI,GAAGzD,EAAI0kI,4BAA4BhgI,OACnCjB,GAAGzD,EAAIykI,cAAc//H,OAG9B,CAEAi5F,cACG,IAAI+nC,EAAiB,KAErB,OAAQ5lI,KAAKoG,SAASg7D,oBACnB,IAAK,OACFwkE,EAAiB5lI,KAAKilI,cAAch5H,WACpC,MACH,IAAK,UACF25H,EAAiB5lI,KAAKi4H,UAAUhsH,WAItC,OAAO25H,CACV,CAOA1mC,YAkBG,OAhB4B,MAAxBl/F,KAAK6lI,kBAG2B,GAA9B7lI,KAAKoG,SAAS+6D,cACwB,UAAtCnhE,KAAKoG,SAASyxG,qBAEd73G,KAAK6lI,gBAAkB,KACb,EAIV7lI,KAAK6lI,gBAAkB,KACb,GAIT7lI,KAAK6lI,eACf,CAOAV,kBACG,IAAIW,EAAc9lI,KAAKglB,WAAWhlB,KAAKglI,sBACnCY,EAAiB5lI,KAAK69F,cAEtBkoC,EAAa,EACbH,GAAgBzkH,OAAOhb,QACxB4/H,EAAaH,GAAgBzkH,OAAOhb,OAChC2/H,IACDC,IACAH,EAAiB,CACdr8G,KAAM,MACNpI,MAAO,CAACykH,EAAgBE,MAI9BF,EAAiBE,EAGpB9lI,KAAKwP,KAAK,cAAe,KAAMo2H,GAEb,GAAdG,IAAiBA,GAAa,GAClC,MAAMC,EAAUriI,GAAG3D,KAAKE,IAAIwkI,iBACxBsB,IACDA,EAAQ/jI,OAAOuoF,MAAQu7C,EACvBC,EAAQthI,UAEd,CAEA4gI,cACGtlI,KAAKmlI,iBAAgB,KAAM,GAAM,GACpC,CAUA7gC,mBAAmBvuF,EAAS,MACzB/V,KAAKglI,qBAAuBjvH,EAC5B/V,KAAKmlI,iBACR,CAUAngH,WAAWihH,GACR,IAAIlwH,EAMJ,KAJGA,EADCkwH,IAGStiI,GAAG3D,KAAKE,IAAI2kI,mBAAmB54H,YAAc,IAAIk3B,QAEjD,OAAO,KAGpB,IAAI+iG,EAAQnwH,EAAOotB,OAAOhrB,cAAc8P,MAAM,KAG9C,IAAIk+G,EAAW,GAEXriI,EAAY9D,KAAKiF,QAAQ8B,UAAY,GA6CzC,OA3CAm/H,EAAMjiI,SAAS04B,IACZ,IAAIypG,EAAa,GAIjBtiI,EAAUG,SAAS+C,IAChB,GAAIA,EAAE2lC,oBACH,OAAQ3lC,EAAE3C,KACP,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,QACF+hI,EAAW9hI,KAAK,CACbD,IAAK2C,EAAEpG,GACP6uB,KAAM,WACN9sB,MAAOg6B,IAEV,MAEH,IAAK,OACY31B,EAAE7E,UACR8B,SAAS6hB,IACVA,EAAEzX,KAAKhB,QAAQsvB,IAAM,GACtBypG,EAAW9hI,KAAK,CACbD,IAAK2C,EAAEpG,GACP6uB,KAAM,SACN9sB,MAAOmjB,EAAEllB,IAEf,IAIZ,IAGCwlI,EAAWjgI,OAAS,GACrBggI,EAAS7hI,KAAK,CACXilB,KAAM,KACNpI,MAAOilH,GAEb,IAGCD,EAAShgI,OAAS,EACD,CACfojB,KAAM,MACNpI,MAAOglH,GAIH,IAEb,CAEArmC,UAAUpyF,GAEP1N,KAAKi4H,UAAUngD,MAAMpqE,EAAO,KAAM,CAAEsiB,IAAK,UAC5C,4EC5gBH,MAAMq2G,UAAwC,IAC3C1mI,YAAYu+F,EAAgBr+F,GAEzBC,MADWD,GAAU,6BACT,CAAC,GAEbG,KAAKk+F,eAAiBA,EACtBl+F,KAAK+B,GAAKm8F,EAAen8F,GAEzB/B,KAAKU,KAAO,KAIZV,KAAK2rB,eAAiB,IAKzB,CAEAlrB,KACG,MAAO,CAAC,CACX,CAEA6C,KAAKnB,GACEA,EAAQzB,OAAMV,KAAKU,KAAOyB,EAAQzB,MAElCyB,EAAQwpB,iBAAgB3rB,KAAK2rB,eAAiBxpB,EAAQwpB,eAC7D,CAEAmxE,WAAW54B,EAAQ51C,GACZtuB,KAAK2rB,gBAAgB3rB,KAAK2rB,eAAeQ,UAAUmC,GAEnDtuB,KAAKU,MAAMV,KAAKU,KAAKo8F,WAAW54B,EACvC,EAGY,MAAMk8B,UAA+B,IAYjDjgG,UAAU88F,GAAQ,GACf,IAAI98F,EAAY,IAAIkmI,EAAgCrmI,MAGpD,GAAIi9F,EAAO,CACR,IAAIE,EAAeh9F,EACnBA,EAAY,CACTM,GAAI08F,EAAa18F,KACjB6C,KAAM,IAAIsS,IACAunF,EAAa75F,QAAQsS,GAE/BpL,OAAQ,IAAIoL,IACFunF,EAAa3yF,YAAYoL,GAEnCknF,WAAY,IAAIlnF,IACNunF,EAAaL,cAAclnF,GAG3C,CAEA,OAAOzV,CACV,cCtEHV,EAAOC,QAAU,MACdC,YAAYqjB,EAAY/d,EAAQqhI,GAC7BtmI,KAAKsmI,aAAeA,GAAgB,eASpCtmI,KAAKiF,OAASA,EAEdjF,KAAKovE,QAAQpsD,GAAc,CAAC,GAG5BhjB,KAAKiF,OAAOm3B,UAAUp8B,KAAMA,KAAM,CAAC,SAItC,CAMA0qB,cACG,MAAO,MACV,CAQA0kD,QAAQvlE,GACL7J,KAAKY,GAAKiJ,EAAKjJ,IAAMZ,KAAKiF,OAAOlD,GAAG8N,OACpC7P,KAAKumI,cAAgB1yH,KAAK0D,MAAM1N,EAAK08H,gBAAiB,GACtDvmI,KAAKmlB,aACFtb,EAAKsb,cACLnlB,KAAKiF,OAAOo3B,oBAAoB,CAAC,SAAU,CACxCj7B,MAAOpB,KAAKsmI,cAErB,CAOAxgI,QAEG,OADA9F,KAAKiF,OAAOu3B,YAAYx8B,KAAMA,KAAM,CAAC,UAC9B,CACJY,GAAIZ,KAAKY,GACTukB,aAAcnlB,KAAKmlB,aACnBohH,cAAevmI,KAAKumI,cAE1B,CAEAx3D,OAAOruE,GACJ,IAAK,IAAI2D,KAAO3D,EACbV,KAAKqE,GAAO3D,EAAK2D,EAEvB,oBChEH,MAAMmiI,EAA4B,EAAQ,OACpCC,EAA8B,EAAQ,OACtCC,EAA6B,EAAQ,OAE3C,IAAIC,EAAY,CAAC,EACjBA,EAAUH,EAA0B5kI,QAAU4kI,EAC9CG,EAAUF,EAA4B7kI,QAAU6kI,EAChDE,EAAUD,EAA2B9kI,QAAU8kI,EAE/C,MAAME,EAAoB,CACvBC,mBAAel8G,EACf1gB,KAAM,IAGTxK,EAAOC,QAAU,MACdC,YAAYqjB,EAAY/d,EAAQlD,GAE7B/B,KAAKiF,OAASA,EACdjF,KAAK+B,GAAKA,EAEV/B,KAAKovE,QAAQpsD,EAChB,CAQAosD,QAAQvlE,GAUL,GARAA,EAAKu6B,qBACFv6B,EAAKu6B,sBAAwBv6B,EAAKu6B,qBAAqBn6B,KAClDJ,EAAKu6B,qBACLwiG,EAOU,IADf/8H,EAAKu6B,qBAAqBn6B,KAAKnB,QAAQsK,GAAMA,EAAEmzH,gBAC3CpgI,OACL,MAKoC,IAAxB0D,EAAKwf,uBACiC,IAAnCxf,EAAKwf,gBAAgB9c,aAC7B1C,EAAKwf,gBAAgB9c,WAAa,SACe,IAAzC1C,EAAKwf,gBAAgBC,mBAC7Bzf,EAAKwf,gBAAgBC,iBAAmB,SACO,IAAvCzf,EAAKwf,gBAAgB4W,iBAC7Bp2B,EAAKwf,gBAAgB4W,eAAiB,SACO,IAArCp2B,EAAKwf,gBAAgB6W,eAC7Br2B,EAAKwf,gBAAgB6W,aAAe,KAI1C,IAAI4mG,EAAiBj9H,EAAKwf,iBAAmB,CAC1C9c,WAAY,GACZ+c,iBAAkB,GAClB2W,eAAgB,GAChBC,aAAc,IAEjB4mG,EAAeP,eAAgB,EAE/B,IAAIQ,EAAc,IAAIP,EACnBM,EACA9mI,KAAKiF,QAER4E,EAAKu6B,qBAAqBn6B,KAAK4iC,QAAQk6F,EAC1C,CAEA/mI,KAAKgnI,YAAYn9H,EAAKu6B,sBAEtBpkC,KAAK6mI,cAAgBh9H,EAAKu6B,qBAAqByiG,cAC1C7mI,KAAK6mI,gBACP7mI,KAAK6mI,cAAgB7mI,KAAKiK,OAAO,GAAGrJ,GAE1C,CAaAkF,QACG,MAAO,CACJ+gI,cAAe7mI,KAAK6mI,cACpB58H,KAAMjK,KAAKinI,cAEjB,CAEAh9H,KAAKyG,EAAK,MAAM,IACb,OAAO1Q,KAAKmnB,OAAOre,OAAO4H,EAC7B,CAEAs2H,YAAYE,GACTlnI,KAAKmnB,OAAS,GACd+/G,EAAaj9H,KAAKhG,SAASvD,IACxBV,KAAKiL,QAAQvK,GAAM,EAAM,GAE/B,CAEAumI,cACG,IAAI//G,EAAQ,GAKZ,OAJAlnB,KAAKmnB,OAAOljB,SAASvD,IAClBwmB,EAAM5iB,KAAK5D,EAAKoF,QAAQ,IAGpBohB,CACV,CAEAigH,eAAe7rG,GACZt7B,KAAK6mI,cAAgBvrG,CACxB,CAEA8G,iBACG,OAAOpiC,KAAKiK,MAAMmJ,GACRA,EAAExS,IAAMZ,KAAK6mI,gBACpB,EACN,CAEA57H,QAAQvK,EAAMkH,GAAO,GAClB,IAAIihB,EAAU,IAAI89G,EAAUjmI,EAAKkB,MAAMlB,EAAMV,KAAKiF,QAKlD,OAJAjF,KAAKmnB,OAAO7iB,KAAKukB,GACbjhB,GACD5H,KAAKiF,OAAO2C,OAERihB,CACV,CAEArd,WAAW9K,GACR,IAAI0mI,EAAgBpnI,KAAKmnB,OAAO9Z,QAAQ3M,GACxCV,KAAKmnB,OAAOhb,OAAOi7H,EAAe,GAC9B1mI,EAAKE,KAAOZ,KAAK6mI,gBAClB7mI,KAAK6mI,cAAgB7mI,KAAKmnB,OAAO,GAAGvmB,IAEvCZ,KAAKiF,OAAO2C,MACf,CAEAy/H,WAAWC,EAAc5mI,GACtB,IAAImoB,EACJ,GAAInoB,EAAKkB,OAAS0lI,EAAa1lI,KAC5B0lI,EAAav4D,OAAOruE,GACpBmoB,EAAUy+G,MACN,CACJz+G,EAAU,IAAI89G,EAAUjmI,EAAKkB,MAAMlB,EAAMV,KAAKiF,QAC9C,IAAImiI,EAAgBpnI,KAAKmnB,OAAO9Z,QAAQi6H,GACxCtnI,KAAKmnB,OAAOhb,OAAOi7H,EAAe,EAAGv+G,GACjC7oB,KAAK6mI,gBAAkBS,EAAa1mI,KACrCZ,KAAK6mI,cAAgBh+G,EAAQjoB,GAEnC,CAEA,OADAZ,KAAKiF,OAAO2C,OACLihB,CACV,cCpKHppB,EAAOC,QAAU,MACdC,YAAYwC,GACTnC,KAAKkJ,SACF/G,EAAQ+G,UACR,WACG,MAAO,EACV,EACHlJ,KAAKsD,KAAOnB,EAAQmB,MAAQ,WAAa,EACzCtD,KAAK25E,SACFx3E,EAAQw3E,UACR,WACG,OAAO,CACV,EACH35E,KAAK2F,OACFxD,EAAQwD,QACR,WACG,MAAO,CAAC,CACX,EACH3F,KAAKs7E,MAAQn5E,EAAQm5E,OAAS,CAAC,CAClC,oBClBH,MAAMisD,EAAwB,EAAQ,OAChCC,EAAiC,EAAQ,OAEzCC,EAAsB,EAAQ,OAE9BC,EAAc,EAAQ,OACtBlK,EAAgB,EAAQ,OACxBmK,EAAgB,EAAQ,OACxBC,EAAkB,EAAQ,OAEhC,IAAI7nI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhD,IAAI6sB,EAAgB,CACjBt7B,KAAM,gBACNmiB,iBAAkB,GAClB/c,WAAY,GACZ6E,MAAO,OACPkpC,UAAW,KACXC,QAAS,OACTstF,SAAU,OACVC,SAAU,OACVC,MAAO,QAGVtoI,EAAOC,QAAU,MAAMgnI,UAAmC,EAGvD/mI,YAAYqjB,EAAY/d,GACrBnF,MAAMkjB,EAAY/d,EAAQ,QAU7B,CAMAylB,cACG,MAAO,OACV,CAKAA,cACG,MAAO,aACV,CAEAA,iBAAiB9qB,EAAKC,GACnB,IAAIK,EAAM,CACPkR,MAAOxR,EAAIQ,OAAO,GAAGP,qBACrBy6C,UAAW16C,EAAIQ,OAAO,GAAGP,yBACzB06C,QAAS36C,EAAIQ,OAAO,GAAGP,uBACvBgoI,SAAUjoI,EAAIQ,OAAO,GAAGP,wBACxBioI,SAAUloI,EAAIQ,OAAO,GAAGP,wBACxBkoI,MAAOnoI,EAAIQ,OAAO,GAAGP,sBAGpBmoI,EAAiB,CAAC/iI,EAAQvE,KAC3B,IAAIs+B,EAAa/5B,EACb8B,QAAQC,GAAMA,aAAa0gI,IAC3Bv5H,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzCuC,GAAGzD,EAAIo6C,WAAW71C,OAAO,UAAWu6B,GAGpCA,EAAW6N,QAAQ,CAChBjsC,GAAI,OACJ+B,MAAO5C,EAAE,yBAIZ4D,GAAGzD,EAAIq6C,SAAS91C,OAAO,UAAWu6B,GAGlC,IAAIipG,EAAehjI,EACf8B,QAAQC,GAAMA,aAAaw2H,IAC3BrvH,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzC6mI,EAAap7F,QAAQ,CAClBjsC,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAI2nI,UAAUpjI,OAAO,UAAWwjI,GAGnC,IAAIC,EAAgBjjI,EAChB8B,QAAQC,GAAMA,aAAaw2H,IAC3BrvH,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzC8mI,EAAcr7F,QAAQ,CACnBjsC,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAI4nI,UAAUrjI,OAAO,UAAWyjI,GAGnC,IAAIC,EAAeljI,EACf8B,QACGC,GAAMA,aAAa2gI,GAAiB3gI,aAAa4gI,IAEpDz5H,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,MAGzC+mI,EAAat7F,QAAQ,CAClBjsC,GAAI,OACJ+B,MAAO5C,EAAE,2BAEZ4D,GAAGzD,EAAIkR,OAAO3M,OAAO,UAAW0jI,GAChCxkI,GAAGzD,EAAI6nI,OAAOtjI,OAAO,UAAW0jI,GAG5BznI,GAAQA,EAAK0Q,QACdzN,GAAGzD,EAAIkR,OAAO3M,OAAO,QAAS/D,EAAK0Q,OACnCzN,GAAGzD,EAAIkR,OAAO1M,WAGbhE,GAAQA,EAAK45C,YACd32C,GAAGzD,EAAIo6C,WAAW71C,OAAO,QAAS/D,EAAK45C,WACvC32C,GAAGzD,EAAIo6C,WAAW51C,WAGjBhE,GAAQA,EAAK65C,UACd52C,GAAGzD,EAAIq6C,SAAS91C,OACb,QACA/D,EAAK65C,SAAW9X,EAAc8X,SAEjC52C,GAAGzD,EAAIq6C,SAAS71C,WAGfhE,GAAQA,EAAKmnI,WACdlkI,GAAGzD,EAAI2nI,UAAUpjI,OACd,QACA/D,EAAKmnI,UAAYplG,EAAcolG,UAElClkI,GAAGzD,EAAI2nI,UAAUnjI,WAGhBhE,GAAQA,EAAKonI,WACdnkI,GAAGzD,EAAI4nI,UAAUrjI,OAAO,QAAS/D,EAAKonI,UACtCnkI,GAAGzD,EAAI4nI,UAAUpjI,WAGhBhE,GAAQA,EAAKqnI,QACdpkI,GAAGzD,EAAI6nI,OAAOtjI,OAAO,QAAS/D,EAAKqnI,OACnCpkI,GAAGzD,EAAI6nI,OAAOrjI,UACjB,EAGH,IAAI0jI,EAA6B,IAAIX,EAClC7nI,EACA,GAAGC,WAkPN,OA/OoB,IAAI2nI,EAA+B,CACpDt+H,SAAU,KACA,CACJwmC,MAAO,QACP7tC,KAAM,CACH,CACGV,KAAM,CACH,CACGP,GAAIV,EAAIkR,MACR1Q,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,WAEH23E,YAAa33E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,QACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACA+iI,EAAcvjI,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAIo6C,UACR55C,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,gBAEH23E,YAAa33E,EAAE,uBACf+B,WAAY,IACZqF,KAAM,YACNmyC,UAAU,EACVn3C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACA8iI,EAAYtjI,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAIq6C,QACR75C,KAAM,aACNU,MAAO,mDAAmDrB,EACvD,cAEH23E,YAAa33E,EAAE,uBACf+B,WAAY,IACZqF,KAAM,UACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACA8iI,EAAYtjI,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAI2nI,SACRnnI,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,cAEH23E,YAAa33E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,WACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACA44H,EAAcp5H,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAI4nI,SACRpnI,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,cAEH23E,YAAa33E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,WACNmyC,UAAU,EACVn3C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACA44H,EAAcp5H,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGP,GAAIV,EAAI6nI,MACRrnI,KAAM,aACNU,MAAO,sDAAsDrB,EAC1D,WAEH23E,YAAa33E,EAAE,yBACf+B,WAAY,IACZqF,KAAM,QACNmyC,UAAU,EACVn3C,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACAgjI,EAAgBxjI,WAAWC,IAC7B,QAStBf,KAAM,CAAC2B,EAAQvE,KACPuE,IAEL+iI,EAAe/iI,EAAQvE,GAEvB0nI,EAA2BtjI,gBAAgBG,EAAOF,aAClDqjI,EAA2BpjI,WAAWC,GACtCmjI,EAA2B9kI,KAAK,CAC7BwE,OAAQ,KAGLkgI,EAAe/iI,EAAQvE,EAAK,IAEhC,EAGLi5E,SAAU,SAAU4C,GACjB,IAAIhiC,EAAU52C,GAAGzD,EAAIq6C,SAAStuC,YAAcw2B,EAAc8X,QACvDstF,EAAWlkI,GAAGzD,EAAI2nI,UAAU57H,YAAcw2B,EAAcolG,SAE3D,OACGttF,GAAW9X,EAAc8X,SACzBstF,GAAYplG,EAAcolG,WAE1BtrD,EAAMv9D,YAAY,UAAW,YAC7Bu9D,EAAMv9D,YAAY,WAAY,aAEvB,EAIb,EAEArZ,OAAQ,WACL,IAAImI,EAAS,CAAC,EAad,OAXAA,EAAOsD,MAAQzN,GAAGzD,EAAIkR,OAAOnF,YAAcw2B,EAAcrxB,MACzDtD,EAAOwsC,UACJ32C,GAAGzD,EAAIo6C,WAAWruC,YAAcw2B,EAAc6X,UACjDxsC,EAAOysC,QACJ52C,GAAGzD,EAAIq6C,SAAStuC,YAAcw2B,EAAc8X,QAC/CzsC,EAAO+5H,SACJlkI,GAAGzD,EAAI2nI,UAAU57H,YAAcw2B,EAAcolG,SAChD/5H,EAAOg6H,SACJnkI,GAAGzD,EAAI4nI,UAAU77H,YAAcw2B,EAAcqlG,SAChDh6H,EAAOi6H,MAAQpkI,GAAGzD,EAAI6nI,OAAO97H,YAAcw2B,EAAcslG,MAElDj6H,CACV,EAEAwtE,MAAO,CAAC,GAId,CAQAlM,QAAQvlE,GAGL,IAAK,IAAIuJ,KAFTtT,MAAMsvE,QAAQvlE,GAEA44B,EACXziC,KAAKoT,GAAKvJ,EAAKuJ,IAAMqvB,EAAcrvB,GAGtCpT,KAAK4B,KAAO8kI,EAA2B9kI,MAC1C,CAOAkE,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,IAAK,IAAIsN,KAAKqvB,EACX3qB,EAAI1E,GAAKpT,KAAKoT,GAIjB,OADA0E,EAAIlW,KAAO8kI,EAA2B9kI,OAC/BkW,CACV,CAEIuwH,iBAID,OAHqBroI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKoR,MAChC,CAEIk3H,qBAID,OAHqBtoI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKs6C,UAChC,CAEIiuF,mBAID,OAHqBvoI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKu6C,QAChC,CAEIiuF,oBAID,OAHqBxoI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAK6nI,SAChC,CAEIY,oBAID,OAHqBzoI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAK8nI,SAChC,CAEIY,iBAID,OAHqB1oI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAK+nI,MAChC,oBC9dH,MAAMR,EAAwB,EAAQ,OAEtC,IAAI9kG,EAAgB,CACjBt7B,KAAM,eACNoF,WAAY,GACZ+c,iBAAkB,GAClB2W,eAAgB,GAChBC,aAAc,IAGjBzgC,EAAOC,QAAU,MAAM8mI,UAAkCe,EACtD5nI,YAAYqjB,EAAY/d,GACrBnF,MAAMkjB,EAAY/d,EAAQ,OAa7B,CAMAylB,cACG,MAAO,MACV,CAKAA,cACG,MAAO,aACV,CAQA0kD,QAAQvlE,GAGL,IAAK,IAAIuJ,KAFTtT,MAAMsvE,QAAQvlE,GAEA44B,EACXziC,KAAKoT,GAAKvJ,EAAKuJ,IAAMqvB,EAAcrvB,GAGtCpT,KAAK4B,KAAO4kI,EAA0B5kI,MACzC,CAOAkE,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,IAAK,IAAIsN,KAAKqvB,EACX3qB,EAAI1E,GAAKpT,KAAKoT,GAIjB,OADA0E,EAAIlW,KAAO,OACJkW,CACV,oBCxEH,MAAMyvH,EAAwB,EAAQ,OAChCC,EAAiC,EAAQ,OAEzCC,EAAsB,EAAQ,OAE9BhiF,EAAiB,EAAQ,OACzBiH,EAAc,EAAQ,OACtB0tE,EAAc,EAAQ,OAE5B,IAAI33F,EAAgB,CACjBt7B,KAAM,iBACNmiB,iBAAkB,GAClB/c,WAAY,GACZ61D,sBAAuB,KACvBC,wBAAyB,KACzBC,WAAY,MAGf,IAAIviE,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,MAAM+mI,UAAoC,EAGxD9mI,YAAYqjB,EAAY/d,GACrBnF,MAAMkjB,EAAY/d,EAAQ,SAU7B,CAMAylB,cACG,MAAO,QACV,CAKAA,cACG,MAAO,eACV,CAEAA,iBAAiB3oB,EAAIlC,GAClB,IAAIK,EAAM,CACPyoI,YAAa,GAAG9oI,uBAChB+oI,YAAa,GAAG/oI,uBAChBgpI,WAAY,GAAGhpI,uBAqBdmoI,EAAiB,CAAC/iI,EAAQvE,EAAMyB,EAAU,CAAC,KAE5C,MAAM2mI,EAAa,CAChBC,EACA5iF,EACAr9C,EAAS,CAAC9B,GAAMA,EAAE3C,MAAQqoD,EAAYtoD,WAAWC,KACjD2kI,KAEA,GAAe,MAAXD,GAA6B,MAAV9jI,EAAvB,CAGA,IAAI9C,EAAU8C,EACV8B,SACA+B,OAAOA,GACPqF,KAAI,EAAGvN,KAAIQ,YAAY,CAAGR,KAAI+B,MAAOvB,OACpC4nI,GAAc7mI,EAAQgE,QACxBhE,EAAQ0qC,QAAQ,CACbjsC,GAAI,EACJ+B,MAAO5C,EAAE,UAGfgpI,EAAQtkI,OAAO,UAAWtC,GAGtBzB,EACGA,EAAKylD,GACN4iF,EAAQtkI,OAAO,QAAS/D,EAAKylD,KACpB6iF,GAAc7mI,EAAQ,IAC/B4mI,EAAQtkI,OAAO,QAAStC,EAAQ,GAAGvB,IAES,IAAvCuB,EAAQ2G,QAAQgd,GAAMA,EAAEllB,KAAIuF,QAEpC4iI,EAAQtkI,OAAO,QAAStC,EAAQ,GAAGvB,IAGtCmoI,EAAQrkI,SA3BqC,CA2B5B,EAepBokI,EACG3mI,EAAQwmI,aAAehlI,GAAGzD,EAAIyoI,aAC9B,yBAdkC/iI,GAClC,CAAC8mD,EAAYtoD,WAAWC,IAAK+1H,EAAYh2H,WAAWC,KAAK2pC,SACtDpoC,EAAMvB,OAcT,GAEHykI,EACG3mI,EAAQymI,aAAejlI,GAAGzD,EAAI0oI,aAC9B,2BAfoChjI,GACpC,CACG6/C,EAAerhD,WAAWC,IAC1BqoD,EAAYtoD,WAAWC,IACvB+1H,EAAYh2H,WAAWC,KACxB2pC,SAASpoC,EAAMvB,OAYjB,GAEHykI,EACG3mI,EAAQ0mI,YAAcllI,GAAGzD,EAAI2oI,YAC7B,cACC7hI,GAGKA,EAAE3C,MAAQ+1H,EAAYh2H,WAAWC,KAEhC2C,EAAE3C,MAAQohD,EAAerhD,WAAWC,KACX,OAAvB2C,EAAEZ,SAASa,UACe,QAA1BD,EAAEZ,SAASc,cAGpB,EACF,EAGJ,IAAIkhI,EAA6B,IAAIX,EAClC1lI,EACA,GAAGlC,YAGN,OAAO,IAAI2nI,EAA+B,CACvCt+H,SAAU,KACA,CACJwmC,MAAO,SACP7tC,KAAM,CACH,CACGV,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,kDAAkDrB,EACtD,uBAEHa,GAAIV,EAAIyoI,YACRjxD,YAAa33E,EAAE,kBACf+B,WAAY,IACZqF,KAAM,SACNmyC,UAAU,EACVn3C,QAAS,GACTC,GAAI,CACDC,SAAU,SAAUzB,GACjB+C,GAAGzD,EAAIyoI,aAAahvD,WACpBh2E,GAAGzD,EAAI0oI,aAAajvD,UACvB,GAEHtP,eAAgBtqE,EAAE,aAErB,CACGW,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACA8nD,EAAYtoD,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,+CAA+CrB,EACnD,yBAEHa,GAAIV,EAAI0oI,YACRlxD,YAAa33E,EAAE,kBACf+B,WAAY,IACZqF,KAAM,SACNmyC,UAAU,EACVn3C,QAAS,GACTkoE,eAAgBtqE,EACb,iDAEH45E,SAAWh3E,IACR,IAAIsmI,EAActlI,GAAGzD,EAAIyoI,aAAa18H,WACtC,OACIg9H,IAAgBtmI,GAASsmI,IAAgBtmI,CAC5C,EAEJP,GAAI,CACDC,SAAU,SAAUzB,GACjB+C,GAAGzD,EAAI0oI,aAAajvD,UACvB,IAGN,CACGj5E,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACA8nD,EAAYtoD,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGT,KAAM,aACNU,MAAO,sDAAsDrB,EAC1D,gBAEH23E,YAAa33E,EAAE,uBACfa,GAAIV,EAAI2oI,WACR/mI,WAAY,IACZqF,KAAM,QACNhF,QAAS,IAEZ,CACGzB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ6mI,EAA2BxjI,KACxB,KACA6gD,EAAerhD,WAAWC,IAC5B,QAStBf,KAAM,CAAC2B,EAAQvE,KACZsnI,EAAe/iI,EAAQvE,GAEvB0nI,EAA2BtjI,gBAAgBG,EAAOF,aAClDqjI,EAA2BpjI,WAAWC,GACtCmjI,EAA2B9kI,KAAK,CAC7BwE,OAAQ,KAGLkgI,EAAe/iI,EAAQvE,EAAK,GAEhC,EAGLiF,OAAQ,WACL,IAAImI,EAAS,CAAC,EAQd,OANAA,EAAOs0D,sBACJz+D,GAAGzD,EAAIyoI,aAAa18H,YAAc,KACrC6B,EAAOu0D,wBACJ1+D,GAAGzD,EAAI0oI,aAAa38H,YAAc,KACrC6B,EAAOw0D,WAAa3+D,GAAGzD,EAAI2oI,YAAY58H,YAAc,KAE9C6B,CACV,EAEAwtE,MAAO,CACJ0sD,eAAgBA,IAGzB,CAQA54D,QAAQvlE,GAGL,IAAK,IAAIuJ,KAFTtT,MAAMsvE,QAAQvlE,GAEA44B,EACXziC,KAAKoT,GAAKvJ,EAAKuJ,IAAMqvB,EAAcrvB,GAGtCpT,KAAK4B,KAAO6kI,EAA4B7kI,MAC3C,CAOAkE,QACG,IAAIgS,EAAMhY,MAAMgG,QAEhB,IAAK,IAAIsN,KAAKqvB,EACX3qB,EAAI1E,GAAKpT,KAAKoT,GAIjB,OADA0E,EAAIlW,KAAO6kI,EAA4B7kI,OAChCkW,CACV,CAEAoxH,6BAIG,OAHqBlpI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKqiE,wBAChC,CAEA8mE,2BAIG,OAHqBnpI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKoiE,sBAChC,CAEAgnE,gBAIG,OAHqBppI,KAAKiF,OACCA,OAEb8I,UAAU/N,KAAKsiE,WAChC,cCrWH7iE,EAAOC,QAAU,MAOdC,YAAYyB,GACTpB,KAAKoB,MAAQA,EACbpB,KAAKS,GAAK,IACb,CAUA4oI,WAAWloH,EAAOpa,EAAQm0C,QACI,IAAhBA,IAA6BA,GAAe,GAIvD,SAASouF,EAAiB75G,GAEvB,GAAIA,EACD,GAAIA,EAAKlG,MAAQkG,EAAKtO,MACnBsO,EAAKtO,MAAMld,SAAS2L,IACjB05H,EAAiB15H,EAAE,QAElB,CAGJ,IAAIhK,EAAQmB,EAAO+B,QAAQ9B,GACjBA,EAAEpG,IAAM6uB,EAAKprB,MACpB,GACH,GAAIuB,EACD,OAAQA,EAAMhE,MACX,IAAK,SACL,IAAK,UAIuB,iBAAd6tB,EAAK9sB,SACmB,GAA5B8sB,EAAK9sB,MAAM0K,QAAQ,KACpBoiB,EAAK9sB,MAAQ2iB,SAASmK,EAAK9sB,OAE3B8sB,EAAK9sB,MAAQo0C,WAAWtnB,EAAK9sB,QAGnC,MACH,IAAK,OAGEu4C,EAGGzrB,EAAK9sB,iBAAiB4d,OACvBkP,EAAK9sB,MAAQc,MAAM0yE,KAAKC,cAAc3mD,EAAK9sB,QAKrB,iBAAd8sB,EAAK9sB,QACb8sB,EAAK9sB,MAAQ,IAAI4d,KAAKkP,EAAK9sB,QAO7C,CAEN,CACA2mI,CAAiBnoH,EACpB,CAIAhhB,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEd,IAAIE,EAAIH,EAAIK,MAERurG,EAAmB/nG,MAAMyH,MACzBq+H,EAAYllI,GAEN,GAAGxE,KAAUwE,KAAOmnG,IAI1BtrG,EAAOF,KAAKE,IAAM,CACnBC,UAAWopI,EAAS,2BACpBC,aAAcD,EAAS,YACvBE,sBAAuBF,EAAS,qBAChCG,mBAAoBH,EAAS,kBAC7BI,aAAcJ,EAAS,iBAI1BvpI,KAAKS,GAAK,CACPC,KAAM,SACNE,GAAIV,EAAIwpI,mBACR70D,QAAQ,EACRjzE,KAAM,OACNC,KAAM,CACH,CACGjB,GAAIV,EAAIypI,aACRxoI,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNQ,IAAK,gBACLiG,KAAM,QACNxE,MAAO5C,EAAE,yBACTuB,WAAW,EACXC,MAAO,WACJoC,GAAGzD,EAAIupI,uBAAuB7kI,OAC9BjB,GAAGzD,EAAIypI,cAAchlI,MAExB,GAEH,CAAEjC,WAAW,KAGnB,CACGmyE,QAAQ,EACRj0E,GAAIV,EAAIupI,sBACRtoI,KAAM,CACH,CACGT,KAAM,eACNE,GAAIV,EAAIspI,aACRziI,OAAQ/G,KAAK4pI,uBAQxB5pI,KAAKoB,OACNpB,KAAKS,GAAGoB,KAAK,GAAGV,KAAK0rC,QAAQ,CAC1BnsC,KAAM,QACNQ,IAAK,eACLE,MAAOpB,KAAKoB,MACZJ,MAAOhB,KAAK+B,GAAGC,WAAWC,SAASC,kBAKzClC,KAAKsD,KAAQnB,IAIV,IAAK,IAAIoB,KAHTpB,EAAUA,GAAW,CAAC,EAGRX,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAIH,IAAI/B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACR+E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAWH4gI,WAAY,CAACloH,EAAOpa,EAAQm0C,KACzBl7C,KAAKqpI,WAAWloH,EAAOpa,EAAQm0C,EAAa,EAG/CjvC,SAAU,KACP,IAAItG,EAAS,KACTkkI,EAAKlmI,GAAGzD,EAAIspI,cAahB,OAZIK,IACDlkI,EAASkkI,EAAG59H,YAOXtG,GACDnE,EAAO6nI,WAAW1jI,EAAO,GAAIA,EAAO,IAAI,GAGpCA,CAAM,EAGhBd,SAAWc,IACRA,EAASA,GAAU,GACdwH,MAAMC,QAAQzH,KAASA,EAAS,CAACA,IACjB,GAAjBA,EAAOQ,QACRR,EAAOrB,KAAK,CAAC,GAEZqB,EAAOQ,OAAS,GACjBR,EAAOrB,KAAKtE,KAAK4pI,mBAKpBpoI,EAAO6nI,WAAW1jI,EAAO,GAAIA,EAAO,IAAI,GAExC,IAAIkkI,EAAKlmI,GAAGzD,EAAIspI,cACZK,GACGlkI,EAAO,IAAMA,EAAO,GAAGwb,OAASxb,EAAO,GAAGwb,MAAMhb,SACjD0jI,EAAGhlI,SAASc,EAAO,IACnBhC,GAAGzD,EAAIupI,uBAAuB7kI,OAC9BjB,GAAGzD,EAAIypI,cAAchlI,OAE3B,GAIN3E,KAAKiM,SAAWzK,EAAOyK,SACvBjM,KAAK4E,KAAOpD,EAAOoD,KACnB5E,KAAK6E,SAAWrD,EAAOqD,QAC1B,CAEAG,WAAWC,GACRjF,KAAKyjH,cAAgBx+G,CACxB,CAWA2kI,kBACG,IAAIE,EAAa,CACd,SACA,WACA,SACA,OACA,QACA,UACA,aAGC5kG,EAAa,GA2BjB,OAzBIllC,KAAKyjH,eACNzjH,KAAKyjH,cAAc18G,SAAS9C,SAAS+C,IAClC,IAAkC,GAA9B8iI,EAAWz8H,QAAQrG,EAAE3C,KAAY,CAUlC,IAAIzC,EAAOoF,EAAE3C,IACA,WAAT2C,EAAE3C,KAA6B,aAAT2C,EAAE3C,IAAoBzC,EAAO,SACrC,YAAToF,EAAE3C,MAAmBzC,EAAO,UAErCsjC,EAAW5gC,KAAK,CACb1D,GAAIoG,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMA,GAEZ,KAICsjC,CACV,CAMAje,QAAQ9kB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIgwE,EAAU,EACVojD,EAAS,OACVpjD,GACe3mF,KAAKgqI,UAAU7jI,QAC3BuJ,GACH,EAGH1P,KAAKgqI,UAAU/lI,SAASwrB,IACrBA,EACIxI,QAAQ9kB,GACRqS,MAAK,WACHu1H,GACH,IACCt1H,OAAOtM,IACLwO,EAAOxO,EAAI,GACZ,IAGqB,GAAzBnI,KAAKgqI,UAAU7jI,QAChBuJ,GACH,GAEN,CAEAu6H,4BACGtmI,GAAG3D,KAAKE,IAAIwpI,oBAAoB9kI,OAChCjB,GAAG3D,KAAKE,IAAIupI,uBAAuB7kI,OACnCjB,GAAG3D,KAAKE,IAAIypI,cAAchlI,MAC7B,oBCrTH,MAAMulI,EAAqB,EAAQ,OAEnC,IAAInqI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,MAOdC,YAAYwqI,GACTnqI,KAAKmqI,YAAcA,GAAe,GAElCnqI,KAAKoqI,eAAiB,GACtBpqI,KAAKmqI,YAAYlmI,SAAS2J,IACvB5N,KAAKoqI,eAAe9lI,KAAK,CAAE1D,GAAIgN,EAAEvJ,IAAK1B,MAAOiL,EAAExM,OAAQ,IAG1DpB,KAAKqqI,eAAiB,KAClBrqI,KAAKoqI,eAAejkI,OAAS,IAC9BnG,KAAKqqI,eAAiBrqI,KAAKoqI,eAAe,GAAGxpI,IAGhDZ,KAAK62D,WAAY,EAEjB72D,KAAKyjH,cAAgB,KAGrBzjH,KAAKsqI,SAAW,KAEhBtqI,KAAKuqI,YAAc,IACtB,CAEApqI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAId,IAAI2rG,EAAmB/nG,MAAMyH,MACzBq+H,EAAYllI,GAEN,GAAGxE,KAAUwE,KAAOmnG,IAI1BtrG,EAAOF,KAAKE,IAAM,CAEnBC,UAAWopI,EAAS,aAEpBiB,aAAcjB,EAAS,gBAEvBC,aAAcD,EAAS,gBAEvBkB,aAAclB,EAAS,cAG1BvpI,KAAKsqI,SAASlpI,MAAQrB,EAAE,QACxBC,KAAKsqI,SAASnqI,UAAUH,KAAKJ,IAAKI,KAAKH,QACvCG,KAAKS,GAAKT,KAAK0qI,cAGf1qI,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDvD,KAAKsqI,SAAShnI,OAGd,IAAIqnI,EAAS3qI,KAAK4qI,gBAClB,GAAID,EAAQ,CACTA,EAAOxqI,UAAUH,KAAKJ,IAAKI,KAAKH,QAChC,IAAIstD,EAAOw9E,EAAOF,aAAavqI,EAAIuqI,cAEnCjpI,EAAOqpI,oBAAoB19E,GAG3BA,EAAK7pD,MACR,GAIH,IAAI9B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRsnI,SAAU,WACPtiI,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGHoiI,oBAAsB1qI,IAEnB,IAAI4qI,EAAgBpnI,GAAG3D,KAAKE,IAAIuqI,cAChC,GAAKM,EAAL,CAEA,IAAIx9C,EAAWw9C,EAAcjgI,gBACzBkgI,EAAgB,GACpBz9C,EAAStpF,SAASV,IACfynI,EAAc1mI,KAAKf,EAAE,IAExBynI,EAAc/mI,SAASV,IACpBwnI,EAAcv/H,WAAWjI,EAAE,IAG9BwnI,EAAc9/H,QAAQ9K,EAAUM,GAXN,CAWS,EAGtC+pI,aAAc,CAACnwC,EAAUnhB,KAClBmhB,GACD12F,GAAG3D,KAAKE,IAAIC,WACR2K,gBACA7G,SAASijB,IACPA,EAAMtiB,MAAM,IAIrB,IAAIqmI,EAAajrI,KAAKkrI,UAAUhyD,GAC5B+xD,GACDA,EAAWE,eAAenrI,KAAKsqI,SAASr+H,YAI3CjM,KAAKqqI,eAAiBhwC,EACtB,IAAI+wC,EAAaprI,KAAK4qI,gBACtB,GAAIQ,EAAY,CAEbprI,KAAKsqI,SAASzlI,SAASumI,EAAWlhG,aAGlCkhG,EAAWjrI,UAAUH,KAAKJ,IAAKI,KAAKH,QACpC,IAAIM,EAAYirI,EAAWX,aAAavqI,EAAIuqI,cAC5CjpI,EAAOqpI,oBAAoB1qI,GAC3BA,EAAUmD,MAEb,GAGT,CAGAonI,cACG,MAAO,CACJ9pI,GAAIZ,KAAKE,IAAIC,UACbO,KAAM,SACNQ,IAAK,0BACLsB,QAAS,GAKTZ,KAAM,OACNC,KAAM,CACH,CACGnB,KAAM,WACNQ,IAAK,iCACLqhE,SAAU,kDACVxhE,OAAQ,GACRY,YAAY,EACZ0pI,iBAAoC,GAAlBrrI,KAAK62D,UACvBgrD,QAAS,CACN,sBAAuB,CAACx3G,EAAGzJ,EAAIg1H,KAC5B51H,KAAKwB,OAAOgC,UAAUsnI,SAAS9qI,KAAK,IAK7C,CACGY,GAAIZ,KAAKE,IAAIsqI,aACb9pI,KAAM,aACNU,MAAOrB,EAAE,UACT23E,YAAa33E,EAAE,oBACf+B,WAAY9B,KAAK+B,GAAGC,WAAWC,SAASC,gBACxCC,QAASnC,KAAKoqI,eACdhoI,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KAChBl5E,KAAKwB,OAAOgpI,aAAavxD,EAAQC,EAAO,IAMjD,CACGoyD,IAAK,SACLz2D,QAAQ,EACRpyE,MAAO,CACJ,CACG/B,KAAM,SACNS,KAAM,CACH,CACGT,KAAM,QACNU,MAAOrB,EAAE,UACTmB,IAAK,eACLF,MAAOhB,KAAK+B,GAAGC,WAAWC,SAASC,iBAEtC,CACGtB,GAAIZ,KAAKE,IAAIuqI,aACb/pI,KAAM,SACNmB,KAAM,CACH,CACGT,MAAOrB,EACJ,4CAEHmB,IAAK,eACLH,OAAQ,UAU7Bf,KAAKsqI,SAAS7pI,IAGvB,CAGAmpI,kBACG,IAAI7iI,EAAS,GAETsjI,EAAiBrqI,KAAK4qI,gBAK1B,OAJIP,IACDtjI,EAASsjI,EAAeT,mBAGpB7iI,CACV,CAEA6jI,gBACG,OAAO5qI,KAAKkrI,UAAUlrI,KAAKqqI,eAC9B,CAEAa,UAAU7mI,GACP,OAAOrE,KAAKmqI,YAAYrhI,QAAQ8E,GACtBA,EAAEvJ,KAAOA,IAChB,EACN,CAEAW,WAAWC,GACRjF,KAAKyjH,cAAgBx+G,EACrBjF,KAAKmqI,YAAYlmI,SAAS2J,IACvBA,EAAE5I,WAAWC,EAAO,IAGvB,IAAI7D,EAAQrB,EAAE,QAEdC,KAAKsqI,SAAW,IAAIJ,EAAmB9oI,GACvCpB,KAAKsqI,SAAStlI,WAAWC,GAGrBjF,KAAKE,MACNF,KAAKS,GAAKT,KAAK0qI,cAErB,CAEAh4E,SAASxoD,GACNlK,KAAKuqI,YAAcrgI,EACnBlK,KAAKmqI,YAAYlmI,SAAS2J,IACvBA,EAAE8kD,SAASxoD,EAAK,GAEtB,CAEA4oD,WAAW3wD,EAAU,CAAC,GAEnB,IADcnC,KAAKuF,QAAQpD,EAAQ0H,MACrB,OAEd,IAAI+gI,EAAgB5qI,KAAK4qI,gBACpBA,GAELA,EAAcW,oBAAoB,CAAC,EAAGppI,EAAQ0H,KACjD,CAMAod,QAAQ9kB,GACL,IAAIyoI,EAAgB5qI,KAAK4qI,gBACzB,OAAKA,EAES5qI,KAAKuF,QAAQpD,EAAQ0H,MAEzB+gI,EAAc3jH,QAAQ9kB,GAGtB,IAAIsN,SAAQ,CAACC,EAASiH,KAC1BjH,GAAS,IARYD,QAAQC,SAWtC,CAEAijD,aAAavsD,GAGV,IAFAA,EAAWA,GAAY,CAAC,GAEXikI,eAAgB,CAE1BrqI,KAAKqqI,eAAiBjkI,EAASikI,eAC/B,IAAIA,EAAiBrqI,KAAK4qI,gBAC1B,IAAKP,EAAgB,OACrBA,EAAec,eAAe/kI,EAASo/H,YAAc,CAAC,GAGlDxlI,KAAKE,KAGNyD,GAAG3D,KAAKE,IAAIsqI,cAAc3lI,SAAS7E,KAAKqqI,gBAK3CA,EAAe13E,aAAavsD,EAASguH,eACxC,CACH,CAEAoP,aACG,IAAIp9H,EAAW,CAAC,EAEhB,GAAIpG,KAAKqqI,eAAgB,CACtBjkI,EAASikI,eAAiBrqI,KAAKqqI,eAC/BjkI,EAASo/H,WAAaxlI,KAAKsqI,SAASr+H,WACpC,IAAI2+H,EAAgB5qI,KAAK4qI,gBACrBA,IACDxkI,EAASguH,eAAiBwW,EAAcpH,aAE9C,CAEA,OAAOp9H,CACV,CAOAolI,iBACG,IAAIJ,EAAaprI,KAAK4qI,gBAClBQ,GAAcprI,KAAKsqI,WACpBtqI,KAAKsqI,SAASzlI,SAASumI,EAAWlhG,aAClCkhG,EAAWI,iBAEjB,CAOArmI,gBACG,IAAIylI,EAAgB5qI,KAAK4qI,gBACzB,OAAIA,EACMA,EAAca,UAEjBh8H,QAAQC,SAClB,CAEAnK,QAAQsE,EAAO,CAAC,GACb,IAGIpJ,EAAK,CACNG,GAJM,YAAc6C,MAAMyH,MAK1B2pE,QAAQ,EACRn0E,KAAM,gBAELgrI,EAAWjoI,MAAMhD,GAAGA,GAGpBkrI,EADgB3rI,KAAK4qI,gBACO1gG,YAE5BlqC,KAAKsqI,UACNtqI,KAAKsqI,SAASjB,WAAWsC,EAAY,GAAIA,EAAY,IAAI,GAG5D,IAAI1iH,EAAQ0iH,EAAY,IAAM,CAAC,EAC5B5kI,EAAS4kI,EAAY,IAAM,GAE1BC,EAAkB,CAACv9H,EAAO,KAER,iBAARA,EAAyBA,EAE7B0oC,WAAW1oC,EAAK2E,QAAQ,YAAa,KAK/CjM,EACI+B,QACG9B,GACY,UAAVA,EAAEpF,MACQ,aAAVoF,EAAEpF,MACQ,WAAVoF,EAAEpF,OAEPqC,SAAS+C,IACP,IAEOiiB,GAASA,EAAM9H,OAAShU,MAAMC,QAAQ6b,EAAM9H,QAC7C8H,EAAM9H,MAAMld,SAAS2L,IACdA,EAAEvL,KAAO2C,EAAEpG,KAEfgP,EAAEjN,MAAQipI,EAAgBh8H,EAAEjN,OAAM,IAKpCkH,EAAK7C,EAAEpG,KAA6B,iBAAfiJ,EAAK7C,EAAEpG,MAC7BiJ,EAAK7C,EAAEpG,IAAMgrI,EAAgB/hI,EAAK7C,EAAEpG,KAI1C,CAFE,MAAOyJ,GAET,KAINqhI,EAAS7mI,SAAS,CACfokB,MAAOA,EACPliB,OAAQA,IAGX,IACIxB,EADWmmI,EAASjxB,iBACVoxB,CAAShiI,GAIvB,OAFA6hI,EAAS9wB,aAEFr1G,CACV,CAEIumI,mBAED,OADoB9rI,KAAK4qI,gBACJkB,eAAgB,CACxC,cCnbHrsI,EAAOC,QAAU,MAQdC,YAAYC,EAAKC,EAAQ0qI,GACtBvqI,KAAKqE,IAAM,mBAEXrE,KAAK+rI,YAAc,KAEnB/rI,KAAKuqI,YAAc,KAEnBvqI,KAAKwlI,WAAa,CAAC,EAEnBxlI,KAAKq0H,WAAa,CAAC,EAGnBr0H,KAAKuqI,YAAcA,CACtB,CAEApqI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEdG,KAAKoB,MA7BH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GA6B7B7V,CAAE,4BAOJC,KAAKE,IAAM,CAEnBC,UAAW,GAAY,YANhBP,EAAIQ,OAAO,GAAGP,kBAMkB4D,MAAMyH,SAGhDlL,KAAKm+F,IAAM,KAGXn+F,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAIH,IAAI/B,EAAUxB,KAAKwB,OAAS,CACzBgC,UAAW,CACRsnI,SAAU,WACPtiI,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGT,CASAyhC,YACG,MAAO,CAAClqC,KAAKgsI,iBAAkBhsI,KAAK4pI,kBACvC,CAWAuB,eAAehqH,GAGRhU,MAAMC,QAAQ+T,KACfA,EAAQA,EAAM,IAIbA,IAEiB,MAAdA,EAAMoI,OAAcpI,EAAMoI,KAAO,OAErCvpB,KAAKwlI,WAAarkH,EAExB,CAWAyoH,kBACG,IAAIE,EAAa,CAAC,SAAU,SAAU,OAAQ,UAAW,aAErD5kG,EAAa,GAsBjB,OApBIllC,KAAK+rI,aACN/rI,KAAK+rI,YAAYhlI,SAAS9C,SAAS+C,KACE,GAA9B8iI,EAAWz8H,QAAQrG,EAAE3C,MAStB6gC,EAAW5gC,KAAK,CACb1D,GAAIoG,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMoF,EAAE3C,KAEd,IAIC6gC,CACV,CAKA8mG,iBACG,OAAOhsI,KAAKwlI,UACf,CAIAxgI,WAAWC,GAERjF,KAAKisI,gBAAgBhnI,EACxB,CAIAgnI,gBAAgBhnI,GACbjF,KAAK+rI,YAAc9mI,CACtB,CAEAytD,SAASxoD,GACNlK,KAAKuqI,YAAcrgI,CACtB,CAMA+c,QAAQ9kB,GAIL,OAHAqG,QAAQ+G,MACL,2EAEI,IAAIE,SAAQ,CAACC,EAASiH,KAC1BA,EACG,IAAIrO,MACD,uEAEL,GAEP,CAKAmiI,aAAayB,GACV,OAAOlsI,KAAKmsI,sBAAsBD,EACrC,CAKAC,sBAAsBtsI,GACnB,OAAQG,KAAKm+F,IAAM,CAChB19F,GAAI,CACD8hE,SAAU,0CAEbj/D,KAAOuG,IACJrB,QAAQ+G,MACL,sEAEH/G,QAAQC,KAAK,0BAAwBoB,EAAK,EAGnD,CAKA8oD,aAAavsD,GAIVA,EAAWA,GAAY,CAAC,EACxBpG,KAAKq0H,WAAajuH,EAASiuH,YAAc,CAAC,CAC7C,CAKAmP,aAIG,MAHe,CAAC,CAInB,CAOAiI,UACG,OAAOh8H,QAAQC,SAClB,CAOA87H,iBAGA,cCpOH,IAAIzrI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,MAOdC,YAAYysI,GACTpsI,KAAKgqI,UAAY,GACjBhqI,KAAKyjH,cAAgB,MAGrB2oB,EAAgBA,GAAiB,CAAC,GACpB55H,OAAS45H,EAAc55H,QAAU,CAAC,EAChD45H,EAAc55H,OAAOs9D,OAClBs8D,EAAc55H,OAAOs9D,QAAU,8BAClCs8D,EAAc55H,OAAO65H,cAClBD,EAAc55H,OAAO65H,eAAiB,aACzCrsI,KAAKosI,cAAgBA,CACxB,CAQAjsI,UAAUP,EAAKC,GACZG,KAAKJ,IAAMI,KAAKJ,KAAOA,EACvBI,KAAKH,OAASA,EAEdD,EAAMA,GAAOI,KAAKJ,IAElBI,KAAKuqI,YAAc,KAGnB,IAAIrqI,EAAOF,KAAKE,IAAM,CACnBC,UAAW,GAAGN,cACdshB,MAAO,GAAGthB,UACVysI,gBAAiB,GAAGzsI,oBAEpButD,OAAQ,GAAGvtD,WACX0sI,KAAM,GAAG1sI,SAET8F,OAAQ,GAAG9F,WACXga,IAAK,GAAGha,SAIXG,KAAKS,GAAK,CACPC,KAAM,SACNE,GAAIV,EAAIC,UACRW,OAAO,EACPH,SAAU,SACVE,QAAQ,EACRG,MAAO,IACPD,OAAQ,IACRG,IAAK,oBACLD,KAAM,CACHP,KAAM,UACNQ,IAAK,aACLC,KAAM,CACH,CACGT,KAAM,QACNU,MAAOpB,KAAKosI,cAAc55H,OAAO65H,eAEpC,CACG3rI,KAAM,SACNQ,IAAK,gBACLqK,KAAM,aACN3J,KAAM,aACNR,MAAOrB,EAAE,gBACTiB,MAAO,IACPO,MAAO,KACJvB,KAAKwsI,UACLhkI,QAAQ2O,IAAIxT,GAAGzD,EAAIihB,OAAO8nF,SAC1BtlG,GAAGzD,EAAIosI,iBAAiB/hB,SAAS,EAAG5mH,GAAGzD,EAAIihB,OAAO8nF,QAAQ,KAKtExnG,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGnB,KAAM,aACNE,GAAIV,EAAIosI,gBACR5qI,OAAQ,KACRD,KAAM,CACHf,KAAM,SACNE,GAAIV,EAAIihB,MACRk1D,OAAQ,GACR7zE,QAAS,GACTX,KAAM,KAmBZ,CACGX,IAAK,CAAE,mBAAoB,QAC3BC,KAAM,CACH,CAAEuB,WAAW,GACb,CACGhC,KAAM,SACNyG,KAAM,SACNxE,MAAO5C,EAAE,UACTmB,IAAK,mBACLI,WAAW,EACXC,MAAO,WACJC,EAAOhB,cACV,GAEH,CACGE,KAAM,SACNQ,IAAK,gBACLiG,KAAM,OACN/F,MAAOrB,EAAE,QACT6B,KAAM,OACNN,WAAW,EACXC,MAAO,WACJC,EAAOjB,YACV,GAEH,CAAEmC,WAAW,QAW5B1C,KAAKsD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDE,MAAMhD,GAAGT,KAAKS,GAAG,EAIpB,IAAIe,EAAUxB,KAAKwB,OAAS,CACzBhB,aAAc,WACXmD,GAAGzD,EAAIC,WAAWwE,MACrB,EAEApE,WAAY,KACT,IAAIq+B,EAAU5+B,KAAKwjI,aAEnBhiI,EAAOgC,UAAUsE,OAAO82B,GACxBp9B,EAAOmD,MAAM,EAGhBnB,UAAW,CACR+E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAX,OAAQ,SAAUlC,GACf4C,QAAQC,KAAK,eAChB,GAGH9D,KAAM,WACHhB,GAAGzD,EAAIC,WAAWwE,MACrB,EAEAC,KAAM,WACHjB,GAAGzD,EAAIC,WAAWyE,MACrB,GAGH5E,KAAK4E,KAAOpD,EAAOoD,KACnB5E,KAAK6E,SAAWrD,EAAOqD,QAC1B,CAOA2nI,QAAQpmI,GACL,IAAIs/H,EAAO1lI,KAAKysI,UAChB,GAAK/G,EAAL,CAKA,GAHA1lI,KAAKgqI,UAAU1lI,KAAKohI,GAGhB1lI,KAAKE,IAAK,CAEX,IAAIwsI,EAAU/oI,GAAG3D,KAAKE,IAAIihB,OACtBurH,IAEDhH,EAAKvlI,UAAUH,KAAKJ,IAAKI,KAAKH,QACjB6sI,EAAQzhI,QAAQy6H,EAAKjlI,IAElCilI,EAAKpiI,KAAK,CACPwnI,SAAW6B,IACRhpI,GAAG3D,KAAKE,IAAIihB,OAAO3V,WAAWk6H,EAAKxlI,IAAIC,WAEvC,IAAI4L,EAAQ/L,KAAKgqI,UAAU38H,QAAQs/H,IACpB,IAAX5gI,GACD/L,KAAKgqI,UAAU79H,OAAOJ,EAAO,EAChC,IAIZ,CAEI3F,GACDs/H,EAAK/yE,aAAavsD,EA3BJ,CA6BpB,CAOAusD,aAAavsD,GAOVpG,KAAKgqI,UAAU/lI,SAASwrB,IAElBzvB,KAAKE,KACLF,KAAKE,IAAIihB,OACTsO,GACAA,EAAKvvB,KACLuvB,EAAKvvB,IAAIC,WAETwD,GAAG3D,KAAKE,IAAIihB,OAAO3V,WAAWikB,EAAKvvB,IAAIC,UAC1C,IAEHH,KAAKgqI,UAAY,GAEb5jI,GACDA,EAASnC,SAAS2oI,IACf5sI,KAAKwsI,QAAQI,EAAa,GAGnC,CASA5nI,WAAWC,GACRjF,KAAKyjH,cAAgBx+G,EAGrBjF,KAAKgqI,UAAU/lI,SAAS2L,IACrBA,EAAE5K,WAAWC,EAAO,GAE1B,CAEA6tD,WAAW3wD,IACPnC,KAAKgqI,WAAa,IACflhI,QAAQ2mB,GAA8B,GAArBA,EAAKq8G,eACtB7nI,SAASwrB,IACPA,EAAKqjC,WAAW3wD,EAASA,EAAQ0H,KAAK,GAE/C,CAQAod,QAAQ9kB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIqzH,GAAahqI,KAAKgqI,WAAa,IAAIlhI,QACnC2mB,IAAUA,EAAKq8G,eAGnB,IAAInlD,EAAU,EAQdqjD,EAAU/lI,SAASwrB,IAChBA,EACIxI,QAAQ9kB,GACRqS,MAAK,aATTmyE,GACeqjD,EAAU7jI,QACtBuJ,GASA,IACC+E,OAAOtM,IACLwO,EAAOxO,EAAI,GACZ,IAGgB,GAApB6hI,EAAU7jI,QACXuJ,GACH,GAEN,CAOA8zH,aACG,IAAIp9H,EAAW,GAIf,OAHApG,KAAKgqI,UAAU/lI,SAAS2L,IACrBxJ,EAAS9B,KAAKsL,EAAE4zH,aAAa,IAEzBp9H,CACV,CAEAqmI,UAIG,OAHAjkI,QAAQ+G,MACL,wEAEI,IACV,CAEAmjD,SAASxoD,GACNlK,KAAKuqI,YAAcrgI,EACnBlK,KAAKJ,IAAMI,KAAKJ,KAAOsK,EAAKtK,GAC/B,CAOAypG,aAGG,OAAO55F,QAAQC,SAClB,CAOA87H,iBACGxrI,KAAKgqI,UAAU/lI,SAAS2L,IACrBA,EAAE47H,gBAAgB,GAExB,oBC7YH,MAAMqB,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,OAErBC,EAAqB,EAAQ,MAC7BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,MAEpCztI,EAAOC,QAAU,cAA4CmtI,EAO1DltI,cAOGG,MANe,CACZ0S,OAAQ,CACLs9D,OAAQ,iCACRu8D,cAAe,kBAIxB,CAGAI,UACG,IAAItC,EAAc,CACf,IAAI4C,EACD/sI,KAAKJ,IACL,GAAGI,KAAKH,0BACRG,KAAKuqI,aAER,IAAIyC,EACDhtI,KAAKJ,IACL,GAAGI,KAAKH,0BACRG,KAAKuqI,aAER,IAAI0C,EACDjtI,KAAKJ,IACL,GAAGI,KAAKH,mCACRG,KAAKuqI,aAER,IAAI2C,EACDltI,KAAKJ,IACL,GAAGI,KAAKH,mCACRG,KAAKuqI,cAIP7E,EAAO,IAAIoH,EAAW3C,GAI1B,OAHInqI,KAAKyjH,eACNiiB,EAAK1gI,WAAWhF,KAAKyjH,eAEjBiiB,CACV,CAQAvgI,mBACG,IAAIgoI,GAAYntI,KAAKgqI,WAAa,IAAI77H,KAAKyB,GAAMA,EAAE67H,kBAC7Ch8H,QAAQ4R,IAAI8rH,EACrB,oBClEH,MAAMN,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,OAErBM,EAAqB,EAAQ,OAC7BC,EAAgB,EAAQ,OACxBC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,OACtBC,EAAY,EAAQ,MAE1BhuI,EAAOC,QAAU,cAA4CmtI,EAO1DltI,cAOGG,MANe,CACZ0S,OAAQ,CACLs9D,OAAQ,+BACRu8D,cAAe,kBAIxB,CAGAI,UACG,IAAItC,EAAc,CACf,IAAIiD,EACDptI,KAAKJ,IACL,GAAGI,KAAKH,mCAEX,IAAIwtI,EAAcrtI,KAAKJ,IAAK,GAAGI,KAAKH,8BACpC,IAAIytI,EAAettI,KAAKJ,IAAK,GAAGI,KAAKH,+BACrC,IAAI0tI,EAAevtI,KAAKJ,IAAK,GAAGI,KAAKH,+BACrC,IAAI2tI,EAAYxtI,KAAKJ,IAAK,GAAGI,KAAKH,4BAClC,IAAI4tI,EAAUztI,KAAKJ,IAAK,GAAGI,KAAKH,2BAG/B6lI,EAAO,IAAIoH,EAAW3C,GAG1B,OAFAzE,EAAK1gI,WAAWhF,KAAKyjH,eACrBiiB,EAAKhzE,SAAS1yD,KAAKuqI,aACZ7E,CACV,oBC1CH,MAAMgI,EAAkB,EAAQ,OAIhCjuI,EAAOC,QAAU,cAA4D,EAS1EC,YAAYC,EAAKC,EAAQ0qI,GACtBzqI,MAAMF,EAAKC,EAAQ0qI,GAEnBvqI,KAAKqE,IAAM,gDACXrE,KAAKoB,MAfH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAe7B7V,CAAE,0BAClB,CAQA4tI,oBAAoB9tI,GACjB,IAAI+tI,EAAY9tI,MAAM6tI,oBAAoB9tI,GAM1C,OAFA+tI,EAAUpsI,OAAOqsI,eAAiB,WAAa,EAExCD,CACV,CAOAE,sBACG,OAAO,IACV,CAUA7mH,QAAQ9kB,GAEL,IAAI4rI,EAAU/tI,KAAKguI,kBACfhmI,EAAQ+lI,EAAQ/lI,QAEhBimI,EAAkBjuI,KAAKkuI,gBASvBC,EAAkB,CAAC,EAKvB,GAFAnuI,KAAKurI,oBAAoB,CAAC,EAAG4C,IAEzBA,EAAgBC,WAcb,CAEJ,IAAIC,EAAuBN,EAAQhgI,UAChCkgI,EAAgB7nI,SAAS6B,YAG5B,OAAKomI,GAGLF,EAAgBE,EAAqBvnI,YAAc3E,EAAQ0H,KAAKjJ,GAGzDoH,EAAM0hE,OAAOykE,IALV1+H,QAAQkH,OAAO,4BAM5B,CA3BgC,CAE7B,IAAI03H,EAAuBN,EAAQhgI,UAChCkgI,EAAgB7nI,SAAS6B,YAG5B,IAAKomI,EACF,OAAO5+H,QAAQkH,OAAO,6BAEzBw3H,EAAgBC,WAAWnqI,SAAS2L,IACjCA,EAAEy+H,EAAqBvnI,YAAc3E,EAAQ0H,KAAKjJ,GAE3CoH,EAAM0hE,OAAO95D,KAE1B,CAcH,CAOA4zH,aAOG,IAAIp9H,EAAWtG,MAAM0jI,aAKrB,cAFOp9H,EAASkoI,YAETloI,CACV,mBC1HH,MAAMmoI,EAAgD,EAAQ,OAI9D9uI,EAAOC,QAAU,cAA4D,EAG1EC,YAAYC,EAAKC,EAAQ0qI,GACtBzqI,MAAMF,EAAKC,EAAQ0qI,GAEnBvqI,KAAKqE,IAAM,gDACXrE,KAAKoB,MATH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAS7B7V,CAAE,2BAEfC,KAAKwuI,uBAAwB,CAChC,CAUAvnH,QAAQ9kB,GACL,IAAI+rI,EAAgBluI,KAAKkuI,gBAGzB,OAFAluI,KAAKyuI,UAAYtsI,EAAQ0H,KAElB,IAAI4F,SAAQ,CAACC,EAASiH,KAE1B,IAAIgW,EAAKxqB,EAAQ+H,KAAKyhB,eACtB,IAAKgB,EAAI,OAAOjd,IAEhB,IAAI1H,EAAQ2kB,EAAG3kB,MACf,IAAKA,EAAO,OAAO0H,IAEnB,IAAIuf,EAAc,CAAC,EACnBA,EAAYi/G,EAAcpnI,YAAc,GAExCkB,EACI+mE,OAAO5sE,EAAQ0H,KAAKjJ,GAAIquB,GACxBza,KAAK9E,GACL+E,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,oEACHzH,KAAM1H,EAAQ0H,OAEjB8M,EAAOxO,EAAI,GACZ,GAEX,mBCnDH,MAAMumI,EAAgC,EAAQ,OAI9CjvI,EAAOC,QAAU,cAAmD,EASjEC,YAAYC,EAAKC,EAAQ0qI,GACtBzqI,MAAMF,EAAKC,EAAQ0qI,GAEnBvqI,KAAKqE,IAAM,uCACXrE,KAAKoB,MAfH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAe7B7V,CAAE,gBAClB,CAEI+rI,mBACD,OAAO,CACV,oBCtBH,MAAM4C,EAAgC,EAAQ,OACxCjpF,EAAiB,EAAQ,OACzBykF,EAAqB,EAAQ,OAEnC,IAAInqI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAA4D,EAG1EC,YAAYC,EAAKC,EAAQ0qI,GACtBzqI,MAAMF,EAAKC,EAAQ0qI,GAEnBvqI,KAAKqE,IAAM,gDACXrE,KAAKoB,MAAQrB,EAAE,2BAEfC,KAAK6lC,WAAa,KAGlB7lC,KAAK2uI,gBAAkB,KAGvB3uI,KAAK4uI,cAAgB,GAErB5uI,KAAKsqI,SAAW,KAChBtqI,KAAKsuI,YAAc,IACtB,CAgBAtpI,WAAWC,GACRjF,KAAKisI,gBAAgBhnI,GACrBjF,KAAK6lC,WAAa5gC,EAGKjF,KAAK6uI,qBACX5qI,SAAS6qI,IACvB9uI,KAAK4uI,cAActqI,KAAK,CACrB1D,GAAIkuI,EAAGluI,GACP+B,MAAOmsI,EAAG1tI,OACX,GAER,CAOAytI,qBACG,IAAIE,EAAatpF,EAAerhD,WAAWC,IAC3C,OAAIrE,KAAK6lC,YAAc7lC,KAAK6lC,WAAW9+B,OAC7B/G,KAAK6lC,WAAW9+B,QAAQC,GACrBA,EAAE3C,KAAO0qI,IAGZ,EAEb,CAOAf,kBACG,GAAIhuI,KAAK2uI,gBAAiB,CACvB,IAAIT,EAAgBluI,KAAKkuI,gBACzB,GAAIA,EACD,OAAOA,EAActnI,cAE3B,CAEA,OAAO,IACV,CAOAsnI,gBACG,OAAOluI,KAAK6uI,qBAAqB/lI,QAAQ9B,GAC/BA,EAAEpG,IAAMZ,KAAK2uI,kBACpB,EACN,CAOAxC,sBAAsBtsI,GAKnB,OAJuB,MAAnBG,KAAKgvI,aACNhvI,KAAKgvI,WAAahvI,KAAK2tI,oBAAoB9tI,IAGvCG,KAAKgvI,UACf,CAQArB,oBAAoB9tI,GACjB,IAAI2rG,EAAmB/nG,MAAMyH,MACzBq+H,EAAYllI,GAENA,EAAM,IAAMmnG,EAGlBtrG,EAAM,CACPC,UAAWopI,EAAS,yBACpB9hI,WAAY8hI,EAAS,iBACrB0F,qBAAsB1F,EAAS,gBAC/B2F,iBAAkB3F,EAAS,eAG1BprC,EAAM,CACPv9F,GAAIV,EAAIC,UACRO,KAAM,SACNQ,IAAK,yBACLW,KAAM,CACH,CACGjB,GAAIV,EAAI+uI,qBACRvuI,KAAM,aACNU,MAAOrB,EAAE,4CACT+B,WAAY,IACZa,MAAO3C,KAAKkuI,cACZ/rI,QAASnC,KAAK4uI,cACdxsI,GAAI,CACDC,SAAU,CAAC42E,EAAQC,KAChB13E,EAAOgpI,aAAavxD,EAAQC,EAAO,MAmB9C13E,EAAUxB,KAAKwB,OAAS,CACzB2tI,WAAazuI,IACViD,GAAGzD,EAAIC,WAAW8K,QAAQvK,EAAK,EAMlC0uI,uBAAwB,KACrB,IAAI3nH,EAAW9jB,GAAGzD,EAAIC,WAAW2K,gBAC7BukI,EAAgB,GACpB5nH,EAASxjB,SAASmP,IACfi8H,EAAc/qI,KAAK8O,EAAE,IAExBi8H,EAAcprI,SAASmP,IAEhBA,EAAEnR,OAAOrB,IAAMV,EAAI+uI,sBACpBtrI,GAAGzD,EAAIC,WAAWqL,WAAW4H,EAChC,GACD,EAGLo3H,aAAc,CAACvxD,EAAQC,KACpB13E,EAAO4tI,yBAEPpvI,KAAK2uI,gBAAkB11D,EACvB,IAAI+0D,EAAkBhuI,KAAKguI,kBAE3B,GAAIA,GAcD,GAZAhuI,KAAKsvI,iBAAiBtB,GAEtBhuI,KAAKuvI,gBAAkBzvI,MAAMqsI,sBAC1BjsI,EAAIgvI,kBAGP1tI,EAAOqsI,iBAGPrsI,EAAO2tI,WAAWnvI,KAAKuvI,gBAAgB9uI,IACvCT,KAAKuvI,gBAAgBjsI,OAEjBtD,KAAKwuI,sBAAuB,CAC7B,IAAIgB,EAAc7rI,GAAG3D,KAAKuvI,gBAAgB9uI,GAAGG,IACzC4uI,IACDA,EAAYpqI,UACZoqI,EAAY7qI,OAElB,OAEA3E,KAAK+B,GAAGqG,OAAOotB,QAAQ,IAAIltB,MAAM,6BAA8B,CAC5DgyB,QAASt6B,KAAK2uI,iBAEpB,EAGHd,eAAgB,KAab,IAAI4B,EAAczvI,KAAK8tI,sBAEvB2B,EAAYtvI,UAAUH,KAAKJ,IAAKI,KAAKH,QACrC2B,EAAO2tI,WAAWM,EAAYhvI,IAC9BgvI,EAAYnsI,KAAK,CAAC,EAAE,EAKvBqvD,aAAevsD,IAMZzC,GAAGzD,EAAI+uI,sBAAsBpqI,SAASuB,EAASuoI,iBAE3C3uI,KAAKsqI,UACNtqI,KAAKsqI,SAASzlI,SAAS7E,KAAKsuI,aAG3BtuI,KAAKuvI,iBACNvvI,KAAKuvI,gBAAgB58E,aAAavsD,EACrC,EAGHo9H,WAAY,KAMT,IAAIp9H,EAAW,CAAEkuH,gBAAiB,IAUlC,OAPAt0H,KAAK0vI,SAASzrI,SAAS0rI,IACpB,IAAIC,EAAcD,EAAGnM,aACjBoM,GACDxpI,EAASkuH,gBAAgBhwH,KAAKsrI,EACjC,IAGIxpI,CAAQ,GAIrB,MAAO,CACJ3F,GAAI09F,EACJ76F,KAjIS+wH,IAIT,GAHAA,EAAaA,GAAcr0H,KAAKq0H,WAG5Br0H,KAAK2uI,gBAAiB,CACvB,IAAIh1C,EAASh2F,GAAGzD,EAAI+uI,sBAChBt1C,GACDA,EAAO90F,SAAS7E,KAAK2uI,gBAE3B,GAyHAh8E,aAAevsD,IACZ5E,EAAOmxD,aAAavsD,EAAS,EAEhCo9H,WAAY,IACFhiI,EAAOgiI,aAEjBhiI,OAAQA,EAEd,CAQAssI,sBACG,IAAK9tI,KAAKsqI,SAAU,CACjBtqI,KAAKsqI,SAAW,IAAIJ,EACjBnqI,EAAE,gCAGL,IAAIguI,EAAU/tI,KAAKguI,kBACfD,GAAS/tI,KAAKsqI,SAAStlI,WAAW+oI,EACzC,CACA,OAAO/tI,KAAKsqI,QACf,CAUArjH,QAAQ9kB,GACLnC,KAAKyuI,UAAYtsI,EAAQ0H,KAGzB,IAAIkkI,EAAU/tI,KAAKguI,kBACfhmI,EAAQ+lI,EAAQ/lI,QAEhBimI,EAAkBjuI,KAAKkuI,gBAEvBhkG,EAAY,KAOZ2lG,EAAmB51H,IAGJja,KAAK6lC,WAAW79B,QAE5B02B,cAAcuvG,EAAgBnnI,WAAY3E,EAAQ0H,MAClD2K,MAAM2zE,IAGJ,GAAKA,GAAyB,GAAhBA,EAAMhiF,OAApB,CAQA,IAAIjG,EAAMioF,EAAMh6E,KAAKkF,GACXA,EAAEzS,KAIZspC,EAAY,CACT3gB,KAAM,MACNpI,MAAO,CACJ,CACG9c,IAAK0pI,EAAQh/G,KACbU,KAAM,KACN9sB,MAAOzC,KAOZiU,OAAOC,KAAKpU,KAAKsuI,aAAanoI,OAAS,GACxC+jC,EAAU/oB,MAAM7c,KAAKtE,KAAKsuI,aAG7Br0H,GA3BA,MAFGA,GA6BC,IAENxF,MAAMwF,EAAG,EAIhB,OAAO,IAAIxK,SAAQ,CAACC,EAASiH,KAK1B,IAAIm5H,EAAW,CAAC1hI,EAAM6L,KACHja,KAAKurI,oBAAoB,CAAC,EAAGn9H,GAI1CpG,EACI+mE,OAAO3gE,EAAKxN,GAAIwN,GAChBoG,MAAK,KACHyF,GAAI,IAENxF,OAAOtM,IACLnI,KAAK+B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BmJ,QACG,6EACHzH,KAAM1H,EAAQ0H,OAEjBoQ,EAAG9R,EAAI,IAbb8R,GAeH,EAKH41H,GAAiB1nI,IACVA,EACDwO,EAAOxO,GAIQ,OAAd+hC,EAKDx6B,IAGA1H,EACI0nB,QAAQ,CAAEL,MAAO6a,IACjB11B,MAAMvK,IACJ,IAAI8lI,EAAO,EAGP9lI,GAAQA,EAAKJ,OACdI,EAAOA,EAAKJ,MAIfI,EAAKhG,SAASmK,IACX0hI,EAAS1hI,GAAOjG,IACb,GAAIA,EACD,OAAOwO,EAAOxO,KAEjB4nI,GACY9lI,EAAK9D,QAEduJ,GACH,GACD,IAIc,GAAfzF,EAAK9D,QACNuJ,GACH,IAEF+E,MAAMkC,EACb,GACD,GAER,CAOAg8C,aAAavsD,GACVA,EAAWA,GAAY,CAAC,EAExBpG,KAAK2uI,gBAAkBvoI,EAASuoI,iBAAmB,KACnD3uI,KAAKsuI,YAAcloI,EAASkoI,aAAe,CAAC,EAE5CxuI,MAAM6yD,aAAavsD,GAGfpG,KAAKgvI,YACNhvI,KAAKwB,OAAOmxD,aAAavsD,EAE/B,CAOAo9H,aAQG,IAAIp9H,EAAWtG,MAAM0jI,aAErBp9H,EAASuoI,gBAAkB3uI,KAAK2uI,gBAEhC,IAAIqB,EAAS,KAmBb,OAlBIhwI,KAAKsqI,WACN0F,EAAShwI,KAAKsqI,SAASr+H,WACnBkB,MAAMC,QAAQ4iI,KACfA,EAASA,EAAO,IAIfA,IACDA,EAAOzmH,KAAOymH,EAAOzmH,MAAQ,QAGnCnjB,EAASkoI,YAAc0B,EAGnBhwI,KAAKgvI,aACN5oI,EAASiuH,WAAar0H,KAAKwB,OAAOgiI,cAG9Bp9H,CACV,CAOAolI,iBACOxrI,KAAKsqI,UACNtqI,KAAKsqI,SAASzlI,SAAS7E,KAAKsuI,YAElC,oBC7gBH,MAAM2B,EAAmB,EAAQ,OAIjCxwI,EAAOC,QAAU,cAAuD,EASrEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,2CACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,2BAEfC,KAAKyjH,cAAgB,KAErBzjH,KAAK0vI,SAAW,EAInB,CAiCAvD,sBAAsBtsI,GAUnB,OATAG,KAAKm+F,IAAM,CACR19F,GAAI,CACDC,KAAM,SACNmB,KAAM,IAGTyB,KAAM,QAGFtD,KAAKm+F,GACf,CAKAl3E,QAAQ9kB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIzM,EAAO/H,EAAQ+H,KACnB,IAAKA,EAAM,OAEX,IAAIwqE,EAAQxqE,EAAK0uD,YAAY92C,GAAyB,SAAnBA,EAAE1b,SAASxE,OAC9C,IAAK8yE,EAAO,OAQZ,IAAIowC,EAASnhH,GAAG+wE,EAAM9zE,IAClBkkH,GAAQA,EAAOngH,OAGnBxC,EAAQ+H,KAAK4yF,WAAW,MAExBptF,GAAS,GAEf,oBCjGH,MAAMugI,EAAmB,EAAQ,OAIjCxwI,EAAOC,QAAU,cAA2D,EASzEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,+CACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,+BAEfC,KAAKyjH,cAAgB,KAErBzjH,KAAK0vI,SAAW,EAInB,CAiCAvD,sBAAsBtsI,GACnB,IAAIK,EAAM,CACPoR,QAAS,GAAGzR,aAGfG,KAAKm+F,IAAM,CACR19F,GAAI,CACDG,GAAIV,EAAIoR,QACR5Q,KAAM,WAGNK,OAAQ,KAGXuC,KAAM,OAEN9B,OAAQA,EAERmxD,aAAe0hE,IACZ7yH,EAAOmxD,aAAa0hE,EAAW,EAElCmP,WAAY,IACFhiI,EAAOgiI,cAIpB,IAAIhiI,EAAS,CACVmxD,aAAe0hE,IACZA,EAAaA,GAAc,CAAC,EAE5B1wH,GAAGzD,EAAIoR,SAASzM,SAASwvH,EAAW/iH,SAAW,GAAG,EAGrDkyH,WAAY,KAEF,CACJlyH,QAAS3N,GAAGzD,EAAIoR,SAASrF,YAAc,MAKhD,OAAOjM,KAAKm+F,GACf,CAKAl3E,QAAQ9kB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IAAIu5H,EAAiBlwI,KAAKq0H,WAAW/iH,SAAW,GAEhD7N,MAAM6N,QAAQ,CACXjD,KAAM6hI,EACNtuI,KAAM,SAGT8N,GAAS,GAEf,CAKAijD,aAAavsD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAM6yD,aAAavsD,GAGfpG,KAAKm+F,KAGNn+F,KAAKm+F,IAAIxrC,aAAavsD,EAASiuH,WAErC,CAKAmP,aAMG,IAAIp9H,EAAWtG,MAAM0jI,aAIrB,OAFAp9H,EAASiuH,WAAar0H,KAAKm+F,IAAIqlC,aAExBp9H,CACV,mBCpJH,MAAM6pI,EAAmB,EAAQ,OAC3BxqF,EAAiB,EAAQ,OACzB0qF,EAAe,EAAQ,OAE7B,IAAIpwI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhDnW,EAAOC,QAAU,cAAkD,EAShEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,sCACXrE,KAAKoB,MAAQrB,EAAE,uBAEfC,KAAK+rI,YAAc,KAEnB/rI,KAAK0vI,SAAW,EAInB,CAiCAvD,sBAAsBtsI,GACnB,IAAIK,EAAM,CACPgK,KAAM,GAAGrK,SACT60E,MAAO,GAAG70E,UACVoK,KAAM,GAAGpK,cACTuwI,kBAAmB,GAAGvwI,sBACtBwwI,SAAU,GAAGxwI,aACbyR,QAAS,GAAGzR,aAGfG,KAAKm+F,IAAM,CACR19F,GAAI,CACDG,GAAIV,EAAIgK,KACRxJ,KAAM,OACNM,MAAO,IACP0yF,eAAgB,CACb5+B,cAAe,MACfhzD,WAAY,KAEfX,KAAM,CAEH,CACGH,MAAO,IACPa,KAAM,CACH,CACGnB,KAAM,OACNyG,KAAM,WACN/F,MAAOrB,EAAE,cAEZ,CACGW,KAAM,OACNyG,KAAM,YACN/F,MAAOrB,EAAE,cACT45E,SAAUl2E,MAAM0d,MAAMmvH,QACtBluI,GAAI,CACDC,SAAU,SAAU42E,EAAQC,GACrBl5E,KAAKiM,aAAejM,KAAK25E,WAC1Bh2E,GAAGzD,EAAIgK,MAAM8U,YACV,YACA,oBAGHrb,GAAGzD,EAAIgK,MAAM8U,YAAY,aAAa,EAE5C,IAGN,CACGpe,GAAIV,EAAIkwI,kBACR1vI,KAAM,YACNyG,KAAM,WACN/F,MAAOrB,EAAE,QACTmB,IAAK,eACLF,MAAO,IACPS,KAAM,CACHT,MAAO,IACPa,KAAM,CACH,CACGd,OAAQ,IAEX,CACGH,GAAIV,EAAImwI,SACRrvI,MAAO,IACPN,KAAM,SACNmB,KAAM,IAET,CACGnB,KAAM,SACNQ,IAAK,gBACLU,KAAM,OACN2J,KAAM,aACNnK,MAAOrB,EAAE,mBACTiB,MAAO,IACPO,MAAO,KACJC,EAAO+uI,YAAY,MAMlC,CACG7vI,KAAM,OACNyG,KAAM,UACN/F,MAAOrB,EAAE,YAEZ,CACGW,KAAM,WACNE,GAAIV,EAAIoR,QACRnK,KAAM,UACN/F,MAAOrB,EAAE,WACTiB,MAAO,IACPD,OAAQ,OAsBjB,CACGc,KAAM,CACH,CACGnB,KAAM,WACNkB,KAAM,SACN2gE,SAAU,UAEb,CACG3hE,GAAIV,EAAI+J,KACRvJ,KAAM,OACNM,MAAO,IACPE,IAAK,CAAE,mBAAoB,oBAC3BqhE,SAAU,SAAUzqD,EAAKiyB,GACtB,OAAOvoC,EAAOgvI,cAAc14H,EAAKiyB,EACpC,EACA3nC,GAAI,CACDgI,YAAa,SAAUxJ,EAAIyJ,EAAG9H,GAC3B,IAAIpC,EAAYH,KAAKysB,QAAQ7rB,GAE7BY,EAAOivI,WAAWtwI,EACrB,QAQlBmD,KAAM,KACCtD,KAAK+rI,cACNpoI,GAAGzD,EAAI+J,MAAMsN,MACVvX,KAAK+rI,YAAYhlI,QAAQC,GAAMA,EAAEk8B,qBAEpCv/B,GAAGzD,EAAI+J,MAAMvF,WAGhBlD,EAAOkvI,WAAW,EAGrBlvI,OAAQA,EAERmxD,aAAe0hE,IACZ7yH,EAAOmxD,aAAa0hE,EAAW,EAElCmP,WAAY,IACFhiI,EAAOgiI,cAIpB,IAAIhiI,EAAS,CACVmxD,aAAe0hE,IACZA,EAAaA,GAAc,CAAC,EAE5B1wH,GAAGzD,EAAIgK,MAAM2iF,UAAUwnC,IAGNA,EAAWgc,UAAY,IAC7BpsI,SAAS2L,IACjBpO,EAAO+uI,WAAW,CACf3uI,KAAMgO,EAAEhO,KACR+uI,UAAW/gI,EAAE+gI,UACbhuI,MAAOiN,EAAEjN,OACV,IAGLnB,EAAOkvI,WAAW,EAGrBlN,WAAY,KACT,IAAIn7B,EAAW1kG,GAAGzD,EAAIgK,MAAM+hF,aAAe,CAAC,EAGxC2kD,EAAa,GAiBjB,OAhBAjtI,GAAGzD,EAAImwI,UACHvlI,gBACA7G,SAASoG,IAEP,IACIsmI,EAAYtmI,EAAE+sE,UAAU,CAAEjwE,KAAM,cAAe8E,WAC/CtJ,EAAQ0H,EAAE+sE,UAAU,CAAEjwE,KAAMwpI,IAAa1kI,WAE7C2kI,EAAWtsI,KAAK,CACb1C,KALQ,KAMR+uI,UAAWA,EACXhuI,MAAOA,GACR,IAID,CACJkuI,SAAUxoC,EAAmB,SAC7ByoC,UAAWzoC,EAAoB,UAC/BgoC,SAAUO,EACVtmF,QAAS+9C,EAAkB,QAC3B/2F,QAAS+2F,EAAkB,QAC7B,EAYJ0oC,gBAAkB3qI,IAGR,CACJpF,MAAO,IACPG,KAAM,CAcH,CACGT,KAAM,aACNyG,KAAM,YACNxE,OArBTyD,EAAWA,GAAY,CAAC,GAqBCuqI,WAAa,QAC7B3vI,MAAO,IACPmB,QAAS,CACN,CACGvB,GAAI,QACJ+B,MAAO5C,EAAE,2BAEZ,CAAEa,GAAI,QAAS+B,MAAO5C,EAAE,mBACxB,CAAEa,GAAI,QAAS+B,MAAO5C,EAAE,gBAE3BqC,GAAI,CACDC,SAAU,SAAU42E,EAAQC,GACzB13E,EAAOwvI,gBAAgB/3D,EAAQj5E,KAClC,IAGN,CACGgB,MAAO,IACPmG,KAAM,aACN8pI,aAAc7qI,EAASuqI,WAAa,QACpCxvI,KAAM,CACH,CACGT,KAAM,OACNyG,KAAM,QACNuoC,MAAO,QACP/sC,MACyB,SAAtByD,EAASuqI,UACJvqI,EAASzD,MACT,GACRg3E,SAAUl2E,MAAM0d,MAAMmvH,QACtBtvI,MAAO,IACPoB,GAAI,CACDC,SAAU,SAAU42E,EAAQC,GACzB13E,EAAO0vI,iBACV,IAGN,CACGxwI,KAAM,aACNyG,KAAM,QACNuoC,MAAO,QACP/sC,MACyB,SAAtByD,EAASuqI,UACJvqI,EAASzD,MACT,GACR3B,MAAO,IACPo4E,QAAS,CACNh3E,GAAI,CACDi3E,aAAc,WACXr5E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAO2vI,sBAGnB,CACGzwI,KAAM,aACNyG,KAAM,QACNuoC,MAAO,QACP/sC,MACyB,SAAtByD,EAASuqI,UACJvqI,EAASzD,MACT,GACR3B,MAAO,IACPo4E,QAAS,CACNh3E,GAAI,CACDi3E,aAAc,WACXr5E,KAAKyE,OAAO,QAAS,KACrBzE,KAAKa,QACR,GAEHgJ,KAAMrI,EAAO4vI,mBAKzB,CACG1wI,KAAM,SACNQ,IAAK,eACLU,KAAM,OACN2J,KAAM,gBACNvK,MAAO,GACPO,MAAO,WACJ,IAAI8vI,EAAUrxI,KAAKyL,gBAEnBjK,EAAO8vI,cAAcD,EACxB,MAMZd,WAAanqI,IACV,IAAI8qB,EAAQvtB,GAAGzD,EAAImwI,UAAUvlI,gBAAgB3E,OAE7CxC,GAAGzD,EAAImwI,UAAUplI,QAAQzJ,EAAOuvI,gBAAgB3qI,GAAW8qB,GAE3D1vB,EAAOkvI,WAAW,EAGrBM,gBAAiB,CAACpvI,EAAMs5F,KACrB,IACIq2C,EADar2C,EAAQzvF,gBACI2rE,UAAU,CAAEjwE,KAAM,eAE/C,OAAQvF,GACL,IAAK,QACF2vI,EAAYl3D,UAAU,SACtB,MACH,IAAK,QACFk3D,EAAYl3D,UAAU,SACtB,MACH,QACGk3D,EAAYl3D,UAAU,SAI5B12E,GAAGzD,EAAIkwI,mBAAmBngE,QAAQ,EAGrCqhE,cAAgBD,IACb1tI,GAAGzD,EAAImwI,UAAU7kI,WAAW6lI,GAE5B7vI,EAAOkvI,WAAW,EAGrBQ,gBAAiB,KACd,IAAIM,GAAa,EAEjB7tI,GAAGzD,EAAImwI,UACHvlI,gBACA7G,SAASmP,IACP,IAAIq+H,EAAYr+H,EAAEgkE,UAAU,CAAEjwE,KAAM,UAChCsqI,EAAUxlI,aAAewlI,EAAU93D,aACpC63D,GAAa,EAChB,IAGFA,EAAY7tI,GAAGzD,EAAIgK,MAAM8U,YAAY,YAAY,GAChDrb,GAAGzD,EAAIgK,MAAM8U,YAAY,WAAY,mBAAmB,EAGhEwxH,cAAe,CAAC5qI,EAAOmkC,IACb,mBAAmBnkC,EAAM2F,gDAAgD3F,EAAMxE,QAGzF+vI,kBAAmB,KAChB,IAAIO,EAAiB,GACjBvvI,EAAU,GAEVwvI,EAAe,CAACzjD,EAAS0jD,KAC1B,IAAIC,EAAc3jD,EACdnnF,QAAQC,GAAMA,aAAampI,IAC3BhiI,KAAKnH,IACH,IAAI8qI,EAAQ,GACTC,EAAW,GAUd,OARIH,GACDE,EAAQ,GAAGF,EAAMhxI,MAAMoG,EAAEohB,eACzB2pH,EAAW,GAAG7jD,EAAQ9sF,SAAS4F,EAAE5F,UAAUwwI,EAAMxwI,WAEjD0wI,EAAQ,IAAI9qI,EAAEohB,eACd2pH,EAAW,GAAG7jD,EAAQ9sF,SAAS4F,EAAE5F,SAG7B,CACJR,GAAIkxI,EACJnvI,MAAOovI,EACT,IAKP5vI,EAAUA,EAAQolB,OAAOsqH,EAAY,EAsBxC,OAnBAF,EAAa3xI,KAAK+rI,aAElB/rI,KAAK+rI,YAAYxlH,gBAAgBtiB,SAAS+C,IAMpC0qI,EAAerkI,QAAQrG,EAAEpG,KAAO,IAKnC8wI,EAAeptI,KAAK0C,EAAEpG,IAGtB+wI,EAAa3qI,EAAEJ,eAAgBI,GAAE,IAG7B7E,CAAO,EAGjBivI,aAAc,KACX,IAAIjvI,EAAU,GAyBd,OAtBgBnC,KAAKuqI,YAAYxoI,GAAG8jB,iBAAiB8G,IAClD,IAAI7U,EAAM6U,EAAGjB,WACb,OACGiB,EAAGvmB,SAASqjB,SACZ3R,GACAA,EAAI/Q,QAAQC,GAAe,SAATA,EAAE3C,MAAgB8B,OAAS,CAC/C,IAGMlC,SAASuuB,IACZA,EAAG9G,YACJ8G,EAAG9G,WACC3kB,QAAQC,GAAe,SAATA,EAAE3C,MAChBJ,SAAS+C,IACP7E,EAAQmC,KAAK,CACV1D,GAAI,GAAG4xB,EAAG5xB,MAAMoG,EAAEpG,KAClB+B,MAAO,GAAG6vB,EAAGpxB,SAAS4F,EAAE5F,SACzB,GAEX,IAGIe,CAAO,EAGjBsuI,WAAa7qI,IACV,IAAIosI,EAAYvuI,MAAMwuI,UAAUC,WAC5Bl8H,EAAM,GAGkB,QAAzBg8H,EAAU/vI,OAAOvB,MACQ,YAAzBsxI,EAAU/vI,OAAOvB,OAEbsxI,EAAU/lI,WAAU+J,EAAMg8H,EAAU/lI,YAEpC+lI,EAAUntI,UACXmtI,EAAUntI,SAAS,GAAGmR,IAAMpQ,EAAMxE,SAErCqC,MAAMwuI,UAAUE,SAASH,GAC5B,EAGHtB,UAAW,KACR/sI,GAAGzD,EAAIkwI,mBAAmBngE,SAC1BtsE,GAAGzD,EAAIoR,SAAS2+D,QAAQ,GAI9B,OAAOjwE,KAAKm+F,GACf,CAQAl3E,QAAQ9kB,GAEL,IAAKsB,MAAM0d,MAAMmvH,QAAQtwI,KAAKq0H,WAAWyc,WACtC,OAAOrhI,QAAQC,UAGlB,IAAIkhI,EAAa,GAEjB,OAAOnhI,QAAQC,UACX8E,MAAK,IAEI,IAAI/E,SAAQ,CAACC,EAASiH,KAC1B,IAAIwwC,EAAQ,GAEZnnD,KAAKq0H,WAAWgc,SAASpsI,SAASmuI,IAC/BjrF,EAAM7iD,KACH,IAAImL,SAAQ,CAAC0b,EAAMhjB,KAIhB,GAAqB,SAAjBiqI,EAAIzB,UAAsB,CAC3B,IAAI0B,EAAgBD,EAAIzvI,MAAMslB,MAAM,KAAK,GACrCqqH,EAAatyI,KAAK+rI,YAAYhnI,YAAY+iB,WAC3CuqH,GAEH,GAAIC,EAAY,CAEb,GAAIA,EAAWrtI,OAAOrE,IAAMZ,KAAK+rI,YAAYnrI,GAAI,CAC9C,IAAI2xI,EACDpwI,EAAQ0H,KAAKyoI,EAAWxrI,YACvByrI,IACD3B,EAAaA,EAAWrpH,OAAOgrH,GACrC,KAEK,CACF,IAAIC,EAAcJ,EAAIzvI,MAAMslB,MAAM,KAAK,GACtBjoB,KAAK+rI,YAAYhlI,QAC9BC,GACEA,aAAay+C,GACbz+C,EAAEpG,IAAM4xI,IAEHvuI,SAAS+C,IACjB,IAAIo9H,EACDjiI,EAAQ0H,KAAK7C,EAAEwpB,iBAAmB,GAIlC4zG,IACCj3H,MAAMC,QAAQg3H,KAEfA,EAAa,CAACA,IAGjBA,EAAWngI,SAASosB,IACjB,IAAIpgB,EAAQogB,EAAEiiH,EAAWxrI,YACrBmJ,IACD2gI,EAAaA,EAAWrpH,OAAOtX,GAAM,GACzC,GAER,CAEAkb,GACH,MACGA,GAEN,MAGK,GAAqB,SAAjBinH,EAAIzB,UAAsB,CAChC,IAAI8B,EAAiBL,EAAIzvI,MACzB,IAAK8vI,EAAgB,OAAOtnH,IAE5B,IAAIi0F,EAAOqzB,EAAexqH,MAAM,KAAK,GACjCvd,EAAU+nI,EAAexqH,MAAM,KAAK,GAEpCyqH,EAAU1yI,KAAKuqI,YAAYxoI,GAAG+pB,mBAC/BszF,GAEH,IAAKszB,EAAS,OAAOvnH,IAErB,IAAIvlB,EAAQ8sI,EAAQhnH,WAAW3d,UAAUrD,GACzC,IAAK9E,EAAO,OAAOulB,IAGnBunH,EAAQt/G,UAAUnvB,SAAS4F,IACxB,IAAI8oI,EAAY9oI,EAAKjE,EAAMkB,YACvB6rI,GAAW/B,EAAWtsI,KAAKquI,EAAU,IAG5CxnH,GACH,MAIGylH,EAAWtsI,KAAK8tI,EAAIzvI,OACpBwoB,GACH,IAEL,IAGJ1b,QAAQ4R,IAAI8lC,GAAO1yC,MAAMkC,GAAQnC,KAAK9E,EAAQ,MAGnD8E,MAAK,IAEI,IAAI/E,SAAQ,CAACC,EAASiH,KAG1B,KAFAi6H,EAAa5wI,KAAK+B,GAAGygB,KAAKouH,GAAY9nI,QAAQ8G,GAAMA,MAEjCghI,EAAWzqI,OAAS,EAAG,OAAOuJ,IAGjD,IAAImhI,EAAW7wI,KAAKq0H,WAAWwc,SAC5BvmF,EAAUtqD,KAAKq0H,WAAW/pE,QAC1Bh5C,EAAUtR,KAAKq0H,WAAW/iH,QAE7BtR,KAAK+rI,YACDhlI,QAAQC,GAAMA,EAAEk8B,oBAChBj/B,SAAS+C,IACP,IAAIu7D,EAAW,IAAIngD,OAAO,IAAIpb,EAAE5F,SAAU,KACvCyI,EAAO7C,EAAEsZ,OAAOne,EAAQ0H,MAE3BgnI,EAAWA,EAAS79H,QAAQuvD,EAAU14D,GACtCygD,EAAUA,EAAQt3C,QAAQuvD,EAAU14D,GACpCyH,EAAUA,EAAQ0B,QAAQuvD,EAAU14D,EAAK,IAI/C7J,KAAK+B,GAAGsN,QAAQgB,KAAK,CAClBC,IAAK,qBACLsF,OAAQ,CACLi7H,SAAUA,EACVC,UAAW9wI,KAAKq0H,WAAWyc,UAC3BxmF,QAASA,EACTh5C,QAASA,EACTs/H,WAAY5wI,KAAK+B,GAAGygB,KAAKouH,MAG3Bp8H,MAAK,KACH9E,GAAS,IAEX+E,MAAMkC,EAAO,KAG7B,CAKAg8C,aAAavsD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAM6yD,aAAavsD,GAGfpG,KAAKm+F,KAGNn+F,KAAKm+F,IAAIxrC,aAAavsD,EAASiuH,WAErC,CAKAmP,aAMG,IAAIp9H,EAAWtG,MAAM0jI,aAIrB,OAFAp9H,EAASiuH,WAAar0H,KAAKm+F,IAAIqlC,aAExBp9H,CACV,oBCjuBH,MAAM6pI,EAAmB,EAAQ,OAIjCxwI,EAAOC,QAAU,cAAsD,EASpEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,0CACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,gCAEfC,KAAKyjH,cAAgB,KAErBzjH,KAAK0vI,SAAW,EAInB,CAiCAvD,sBAAsBtsI,GACnB,IAAIK,EAAM,CACP0yI,aAAc,GAAG/yI,kBAGpBG,KAAKm+F,IAAM,CACR19F,GAAI,CAAEG,GAAIV,EAAI0yI,aAAclyI,KAAM,aAAcyB,QAAS,IAEzDmB,KAAM,KACH9B,EAAO4/E,iBAAiB,EAG3B5/E,OAAQA,EAERmxD,aAAe0hE,IACZ7yH,EAAOmxD,aAAa0hE,EAAW,EAElCmP,WAAY,IACFhiI,EAAOgiI,cAIpB,IAAIhiI,EAAS,CACV4/E,gBAAiB,KAEd,IAAIyxD,EAAe,GAQfC,EAAU,CAACC,EAAWC,EAAQpxI,EAAMsiE,KACrC8uE,EAASA,GAAU,GAEnB,IAAIznI,EAAO,eACC,OAAR3J,IAAe2J,EAAO,yBAE1B,IAAIqtD,EAAam6E,EAAUn6E,aAE3Bi6E,EAAavuI,KAAK,CACf1D,GAAImyI,EAAUnyI,GACd+B,MAAOqwI,EAASD,EAAU3xI,MAC1BQ,KAAMA,EACNsiE,OAAQtL,EAAaA,EAAWh4D,GAAK,KAErC2K,KAAMA,IAGG,QAAR3J,GAA0B,OAARA,IACfmxI,EAAUttH,OACXstH,EAAUttH,QAAQxhB,SAAQ,SAAU6d,GACjCgxH,EAAQhxH,EAAGkxH,EAAS,IAAK,OAC5B,IAICD,EAAU7rH,OACX6rH,EACI7rH,OAAO9T,GAAe,OAATA,EAAE/O,MACfJ,SAASq3G,IAEPA,EAAIp0F,QAAQjjB,SAASghE,IAClB6tE,EACG7tE,EACA+tE,EAAS,IACT,MACAD,EAAUnyI,GACZ,GACF,IAGd,EAGHkyI,EAAQ9yI,KAAKuqI,YAAYxxE,WAAY,GAAI,QAEzCp1D,GAAGzD,EAAI0yI,cAAcnuI,OAAO,UAAWouI,GACvClvI,GAAGzD,EAAI0yI,cAAcluI,SAAS,EAGjCiuD,aAAe0hE,IACZA,EAAaA,GAAc,CAAC,EAE5B1wH,GAAGzD,EAAI0yI,cAAc/tI,SAClBwvH,EAAW9vD,OAAS8vD,EAAWnwD,QAAU,GAC3C,EAGJs/D,WAAY,KACT,IAAI11H,EAAS,CAAC,EAEVmlI,EAAatvI,GAAGzD,EAAI0yI,cAAc3mI,WAClC61H,EAAen+H,GAAGzD,EAAI0yI,cACtB33D,WACAP,UACAz4E,OAAO4H,KAAKf,QAAQm2C,GAAQA,EAAIr+C,IAAMqyI,IAAY,GAiBtD,OAhBInR,IAGEh0H,EAFsB,OAArBg0H,EAAalgI,KAEL,CACNsiE,OAAQ49D,EAAa59D,OACrBK,MAAO0uE,GAID,CACN/uE,OAAQ+uE,IAMVnlI,CAAM,GAInB,OAAO9N,KAAKm+F,GACf,CAKAl3E,QAAQ9kB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAE1B,GAAI3W,KAAKq0H,WAAWnwD,SACjB/hE,EAAQ+H,KAAK4yF,WAAW98F,KAAKq0H,WAAWnwD,QAEpClkE,KAAKq0H,WAAW9vD,OAAO,CACxB,IAAI2uE,EAAU/wI,EAAQ+H,KAAKnF,YAAY0gB,OACnC3D,GAAMA,EAAElhB,IAAMZ,KAAKq0H,WAAWnwD,SAC/B,GACD,GACF,IAAKgvE,EAAS,OAAOxjI,IAGrB,IAAIu1D,EAAUiuE,EAAQhsH,OAClB9T,GAAMA,EAAExS,IAAMZ,KAAKq0H,WAAW9vD,QAC/B,GACD,GACF,IAAKU,EAAS,OAAOv1D,IAErB,IAAI4rG,EAAMr2C,EAAQlwD,OAClB,IAAKumG,EAAK,OAAO5rG,IAEjB,IAAIstH,EAAgBvjG,IACjB,IAAKA,EAAQ1kB,OAAQ,OAAO,EAC5B,IAAIqoH,EAAa3jG,EAAQ1kB,OACzB,IAAKqoH,EAAWroH,OAAQ,OAAO,EAC/BqoH,EAAWroH,OAAOvF,KAAK,YAAa4tH,EAAWx8H,IAC/Co8H,EAAaI,EAAWroH,OAAO,EAGlCioH,EAAa1hB,GACb,IAAI2hB,EAASC,aAAY,WAClBv5H,GAAGshE,EAAQrkE,KAAO+C,GAAGshE,EAAQrkE,IAAIi8E,YAClCsgD,cAAcF,GAGjB3hB,EAAI9rG,KAAK,YAAay1D,EAAQrkE,GACjC,GAAG,IACN,CAGH8O,GAAS,GAEf,CAKAijD,aAAavsD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAM6yD,aAAavsD,GAGfpG,KAAKm+F,KAGNn+F,KAAKm+F,IAAIxrC,aAAavsD,EAASiuH,WAErC,CAKAmP,aAMG,IAAIp9H,EAAWtG,MAAM0jI,aAIrB,OAFAp9H,EAASiuH,WAAar0H,KAAKm+F,IAAIqlC,aAExBp9H,CACV,oBClQH,MAAM6pI,EAAmB,EAAQ,OAIjCxwI,EAAOC,QAAU,cAAuD,EASrEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,2CACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,+BAEfC,KAAKyjH,cAAgB,KAErBzjH,KAAK0vI,SAAW,EAInB,CAiCAvD,sBAAsBtsI,GACnBG,KAAKm+F,IAAM,CACR19F,GAAI,CACDC,KAAM,QACNU,MAAOpB,KAAKoB,OAGfkC,KAAM,OAEN9B,OAAQA,GAGX,IAAIA,EAAS,CAAC,EAEd,OAAOxB,KAAKm+F,GACf,CAKAl3E,QAAQ9kB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAC1B,IACIiiD,EADcz2D,EAAQ+H,KAAK0uD,aACFA,aAG7Bz2D,EAAQ+H,KAAK4yF,WAAWlkC,EAAWh4D,IAEnC8O,GAAS,GAEf,oBCzFH,MAAMugI,EAAmB,EAAQ,OAIjCxwI,EAAOC,QAAU,cAAoD,EASlEC,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKqE,IAAM,wCACXrE,KAAKoB,MAhBH,KAAIwU,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAgB7B7V,CAAE,mCAEfC,KAAKyjH,cAAgB,KAErBzjH,KAAK0vI,SAAW,EAInB,CAiCAvD,sBAAsBtsI,GACnB,IAAIK,EAAM,CACPizI,QAAS,GAAGtzI,aAGfG,KAAKm+F,IAAM,CACR19F,GAAI,CACDG,GAAIV,EAAIizI,QACRzyI,KAAM,QAGT4C,KAAM,OAEN9B,OAAQA,EAERmxD,aAAe0hE,IACZ7yH,EAAOmxD,aAAa0hE,EAAW,EAElCmP,WAAY,IACFhiI,EAAOgiI,cAIpB,IAAIhiI,EAAS,CACVmxD,aAAe0hE,IACZA,EAAaA,GAAc,CAAC,EAE5B1wH,GAAGzD,EAAIizI,SAAStuI,SAASwvH,EAAW8e,SAAW,GAAG,EAGrD3P,WAAY,KAEF,CACJ2P,QAASxvI,GAAGzD,EAAIizI,SAASlnI,YAAc,MAKhD,OAAOjM,KAAKm+F,GACf,CAKAl3E,QAAQ9kB,GACL,OAAO,IAAIsN,SAAQ,CAACC,EAASiH,KAEtB3W,KAAKq0H,WAAW8e,SACjBn6H,OAAO6nG,KACJ,UAAU7gH,KAAKq0H,WAAW8e,QAAQngI,QAAQ,UAAW,MACrD,UAGNtD,GAAS,GAEf,CAKAijD,aAAavsD,GACVA,EAAWA,GAAY,CAAC,EACxBtG,MAAM6yD,aAAavsD,GAGfpG,KAAKm+F,KAGNn+F,KAAKm+F,IAAIxrC,aAAavsD,EAASiuH,WAErC,CAKAmP,aAMG,IAAIp9H,EAAWtG,MAAM0jI,aAIrB,OAFAp9H,EAASiuH,WAAar0H,KAAKm+F,IAAIqlC,aAExBp9H,CACV,oBCjJH,MAAM6pI,EAAmB,EAAQ,OAEjC,IAAIlwI,EAAI,IAAI6V,IAAW7T,GAAGsP,aAAajQ,SAASwU,GAEhD,IAAIw9H,EAAwC,CACzC9pH,iBAAkB,CAEfC,KAAM,MACNpI,MAAO,KAIb1hB,EAAOC,QAAU,cAA4CuwI,EAO1DtwI,YAAYC,EAAKC,EAAQ0qI,GACtBzqI,MAAMF,EAAKC,EAAQ0qI,GAEnBvqI,KAAKqE,IAAM,uCACXrE,KAAKoB,MAAQrB,EAAE,iBAEfC,KAAKqzI,aAAe,KAEpBrzI,KAAK0vI,SAAW,GAKhB1vI,KAAKszI,WAAa,CAAC,CACtB,CAKAnH,sBAAsBtsI,GAKnB,OAJuB,MAAnBG,KAAKuzI,aACNvzI,KAAKuzI,WAAavzI,KAAKwzI,iBAAiB3zI,IAGpCG,KAAKuzI,UACf,CAKAC,iBAAiB3zI,GACd,IAAI2rG,EAAmB/nG,MAAMyH,MAKzBhL,EAAM,CACPuH,YAAqB,aAHd,GAAG5H,gBAAiB2rG,MAiB1BhqG,EAAS,CACViyI,aAAc,KAEX,IAAIC,EAAalyI,EAAOmyI,UACxB,GAAKD,EAAL,CAGA,IAEIE,EAFOF,EAAW5oI,gBAEJhC,QAAQ8G,GAChBA,EAAEwnE,WAAU,SAAU12E,GAC1B,MAA2B,SAApBA,EAAKuB,OAAOkF,OAAoBzG,EAAKuL,UAC/C,MACA,GACE2nI,GAELF,EAAWloI,WAAWooI,EAZC,CAYM,EAMhCA,OAAS/pI,IAEN,IAAI6pI,EAAalyI,EAAOmyI,UACxB,GAAKD,EAAL,CAGA,IAAI7xI,EAAO6xI,EAAW5oI,gBACtB,KACW,MAARjB,GACAhI,EAAKiH,QAAQ8G,GACHA,EAAEwnE,WAAU,SAAU12E,GAC1B,MAA2B,SAApBA,EAAKuB,OAAOkF,OAAoBzG,EAAKuL,UAC/C,MACA9F,OAAS,GANf,CAWA,IAAI+Y,EAAMlf,KAAK6zI,gBAAgBh0I,GAG/B6zI,EAAWzoI,QAAQiU,EAAIze,IAGvBye,EAAI5b,KAAK,CACNwwI,MAAO,KAEJtyI,EAAOoyI,QAAQ,EAElB9I,SAAWx8G,IAER9sB,EAAOuyI,OAAOzlH,EAAM,EAEvBzkB,KAAMA,IAIT7J,KAAK0vI,SAASprI,KAAK4a,EAtBV,CAZc,CAkCA,EAG1B60H,OAASzlH,IAENtuB,KAAK0vI,SAASzrI,SAAQ,CAAC2L,EAAG7D,KACnB6D,EAAEnP,GAAGG,IAAM0tB,GAAOtuB,KAAK0vI,SAASvjI,OAAOJ,EAAO,EAAE,IAIvD,IAAI2nI,EAAalyI,EAAOmyI,UACnBD,GAGLA,EAAWloI,WAAW7H,GAAG2qB,GAAO,EAGnCw0F,UAAW,KACR,IAAI4wB,EAAalyI,EAAOmyI,UACxB,GAAKD,EAAL,CAEA,IAAInmD,EAAWmmD,EAAW5oI,gBAQtBkgI,EAAgB,GACpBz9C,EAAStpF,SAASV,IACfynI,EAAc1mI,KAAKf,EAAE,IAExBynI,EAAc/mI,SAASV,IACpBmwI,EAAWloI,WAAWjI,EAAE,IAI3BvD,KAAK0vI,SAAW,EAnBO,CAmBL,EAGrBiE,QAAS,IACWhwI,GAAGzD,EAAIuH,cAGrBzH,KAAKuqI,YAAYxoI,GAAGqG,OAAOC,UACxB,IAAIC,MAAM,iBACV,CACGgH,QACG,mEACH1O,GAAIV,EAAIuH,aAGP,MAMbolF,UAAYwnC,KAOTA,EAAaA,GAAc,CAAC,GACjBC,gBAAkBD,EAAWC,iBAAmB,GAG1C9yH,EAAOmyI,YAIxBnyI,EAAOshH,YAGHuR,EAAWC,gBAAgBnuH,OAAS,GACrCkuH,EAAWC,gBAAgBrwH,SAAS2L,IACjCpO,EAAOoyI,OAAOhkI,EAAE,IAQtBpO,EAAOiyI,eAGPjyI,EAAOoyI,SAAQ,EAGlBjhF,aAAevsD,IAEZ,IAAI4tI,EAAa5tI,EAASiuH,YAAcjuH,EAExC5E,EAAOqrF,UAAUmnD,EAAW,EAG/BxQ,WAAY,KAMT,IAAIp9H,EAAW,CAAEkuH,gBAAiB,IAUlC,OAPAt0H,KAAK0vI,SAASzrI,SAAS0rI,IACFA,EAAGnM,cAElBp9H,EAASkuH,gBAAgBhwH,KAAKqrI,EAAGnM,aACpC,IAGIp9H,CAAQ,GAIrB,MAAO,CACJ3F,GA/LO,CACPC,KAAM,OACNE,GAAIV,EAAIuH,WACRyB,SAAU,IA6LV5F,KA1LS+wH,IACTA,EAAaA,GAAcr0H,KAAKq0H,WAChC7yH,EAAOqrF,UAAUwnC,EAAW,EAyL5B1hE,aAAevsD,IACZ5E,EAAOmxD,aAAavsD,EAAS,EAEhCo9H,WAAY,IACFhiI,EAAOgiI,aAEjBhiI,OAAQA,EAEd,CAEAqyI,gBAAgBh0I,GACb,IAmBIo0I,EAnBAzoC,EAAmB/nG,MAAMyH,MACzBq+H,EAAYllI,GAENA,EAAM,IAAMmnG,EAGlBtrG,EAAM,CACPgf,IAAKqqH,EAAS,OACd9hI,WAAY8hI,EAAS,iBACrB3jI,MAAO2jI,EAAS,SAChB5mI,MAAO4mI,EAAS,SAChB2K,SAAU3K,EAAS,YACnB4K,SAAU5K,EAAS,YACnB6K,WAAY7K,EAAS,cACrBnH,UAAWmH,EAAS,aACpB8K,UAAW9K,EAAS,OACpB+K,aAAc/K,EAAS,WAKtB/nI,EAAS,CACVgC,UAAW,CACRswI,MAAO,OACPhJ,SAAU,QAGbyJ,cAAe,KACZ5wI,GAAGzD,EAAIgf,KAAKpU,gBAAgB,GAAGA,gBAAgB,GAAGnG,OAClDhB,GAAGzD,EAAIgf,KAAKpU,gBAAgB,GAAGA,gBAAgB,GAAGlG,MAAM,EAG3DoG,aAAewpI,IACZ,IAAIryI,EAAU,GACd,GAAInC,KAAKqzI,eACNlxI,GAAWnC,KAAKqzI,aAAatsI,UAAY,IAAIoH,KAAKnH,IACxC,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,UA6BXozI,GAAc,CAEf,IAAIC,EAAW,CAAC,EAChBz0I,KAAK0vI,SAASzrI,SAASib,IACpB,IAAI88E,EAAUr4F,GAAGub,EAAIze,GAAGG,IACxB,GAAIo7F,EAAS,CACV,IAAIp2F,EAAQo2F,EACRlxF,gBAAgB,GAChBA,gBAAgB,GACpB2pI,EAAS7uI,EAAMqG,aAAc,CAChC,KAEH9J,EAAUA,EAAQ2G,QAAQgd,IACf2uH,EAAS3uH,EAAEllB,KAEzB,CAEH,OAAOuB,CAAO,EAGjBoD,QAAS,KACN,IAAIgC,EAAYvH,KAAKuqI,YAAYxoI,GAAG8b,WAAWtW,YAC3C6tD,EAAazxD,GAAGzD,EAAIgf,KAAKpU,gBAAgB,GAAGA,gBAAgB,GAC5D4pI,EAAWt/E,EAAW3pD,gBAAgBA,gBAEtC7F,EAAQ5F,KAAK20I,qBAAqBhxI,GAAGzD,EAAI0F,OAAOqG,YACpD,GAAIrG,EAAO,CACR,IAAIjD,EAAQiD,EAAMqG,SAASmpD,EAAY,CAAC,GAWpCt9C,EAAM,CAAC,EAsBX,OArBAA,EAAIlS,EAAMkB,YAAcnE,EAExBiD,EAAMiqB,YAAY/X,EAAKvQ,IAIX,IAAT5E,GACS,MAATA,GACCwK,MAAMC,QAAQzK,IAA0B,GAAhBA,EAAMwD,SAE/BoB,EAAUgW,SACP3X,EAAMkB,WACN/G,EAAE,wBAMR20I,EAASprC,kBACT/hG,EAAUE,WAAWitI,GAEdntI,EAAUiW,MACpB,CAMG,IAAIo3H,EAAajxI,GAAGzD,EAAIgf,KACpBpU,gBAAgB,GAChBA,gBAAgB,GAKpB,OAJA8pI,EAAWnwI,OAAO,iBAAkB1E,EAAE,wBACtC60I,EAAWnwI,OAAO,WAAW,GAC7BmwI,EAAWlwI,WAEJ,CACV,EAGH60E,YAAcs7D,IACX,IAAIjvI,EAAQ5F,KAAK20I,qBAAqBE,GACtC,GAAKjvI,EAAL,CAEA,IAIGkvI,EAFA/3D,EAFkBn3E,EAAM64D,gBACAhD,YAAY71D,EAAMX,OAAOF,aACrB5E,UAAUH,KAAKJ,KAC3Cm1I,EAAiBh4D,EAAmBt8E,GAGvCs0I,EAAen0I,GAAKV,EAAIyC,MAGxB,IAAIqyI,EAAch1I,KAAKuqI,YAAYxoI,GAAG8jB,iBAClC8G,GAAOA,EAAGjB,aAIVupH,EAAqB,GACzBD,EAAY/wI,SAAS0oB,IAClBsoH,EAAmB3wI,KAAK,CAAE1D,GAAI+rB,EAAG/rB,GAAI+B,MAAOgqB,EAAGvrB,OAAQ,IAI1D,IAAI8zI,EAAkB,CACnB,CAAEt0I,GAAI,aAAc+B,MAAO5C,EAAE,sBAC7B,CACGa,GAAI,oBACJ+B,MAAO5C,EAAE,qCAIXo1I,EAAsB,CACvBvzI,KAAM,QACNC,KAAM,CACH,CACGV,KAAM,CACH,CACGP,GAAIV,EAAIg0I,SACRxzI,KAAM,QACNyB,QAAS8yI,EACTv9D,YAAa33E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAACgJ,EAAMC,KACd,IAAI8pI,EACDp1I,KAAKuqI,YAAYxoI,GAAG+pB,mBACjBzgB,GAEN,IACG+pI,GAC0B,SAAzBA,EAAWxpH,YACRhmB,EAAM+6B,aAkBVh9B,GAAGzD,EAAIk0I,YAAYzvI,WAjBpB,CACC,IAAIk0E,EAAoB,GACxBu8D,EAAW1pH,WACP3kB,SACA9C,SAAS+C,IACP6xE,EAAkBv0E,KAAK,CACpB1D,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,OACV,IAERuC,GAAGzD,EAAIk0I,YAAY3vI,OAChB,UACAo0E,GAEHl1E,GAAGzD,EAAIk0I,YAAY1vI,UACnBf,GAAGzD,EAAIk0I,YAAYxvI,MACtB,CAEA,IAKT,CACGhE,GAAIV,EAAIk0I,WACR1zI,KAAM,QACNm0E,QAAQ,EACR6C,YAAa33E,EAAE,wBACfoC,QAAS,CAAC,CAAEvB,GAAI,EAAG+B,MAAO,uBAInC,CACG/B,GAAIV,EAAIi0I,SACRzzI,KAAM,QACNyB,QAAS+yI,EACTx9D,YAAa33E,EAAE,wBACfqC,GAAI,CACDC,SAAU,CAACgJ,EAAMC,KACd,IAAI+pI,EAAO1xI,GAAGzD,EAAIgf,KAElB,GADAm2H,EAAK7pI,WAAW6pI,EAAKvqI,gBAAgB,IACzB,cAARO,EACDgqI,EAAKpqI,QAAQ,CAAC,EAAG,OACb,CACJ,IAAI9I,EACDnC,KAAKuqI,YAAY5+G,eAAeD,WAC5B3kB,SACAoH,KAAI,SAAUnH,GACZ,MAAO,CACJpG,GAAIoG,EAAEpG,GACN+B,MAAOqE,EAAE5F,MAEf,KAEN6yI,EAAkBj0I,KAAK+B,GAAG6xB,iBACvB,GAAG/zB,aAKUyD,KAAK,CAClBuqC,cAAc,EACd+mC,uBAAwBzyE,IAE3B8xI,EAAgB7xI,GAAG,UAAW4T,IAC3BxU,EAAOm/G,eAAe3qG,EAAI,IAG7Bq/H,EAAKpqI,QAAQgpI,EAAgBxzI,GAAI,GAEjC,IAAI2+G,EAAOz7G,GAAGzD,EAAIg0I,UAAUjoI,WACxBwsE,EACDz4E,KAAKuqI,YAAYxoI,GAAG+pB,mBAAmBszF,GACtC3mC,GACDj3E,EAAO8zI,gBAAgB78D,EAE7B,OAsBf,GAdiB,QAAb7yE,EAAMvB,MACP0wI,EAAe5yI,QAAU4yI,EAAe5yI,SAAW,GACnD4yI,EAAe5yI,QAAQ0qC,QAAQ,CAC5BjsC,GAAI,kBACJ+B,MAAO5C,EAAE,qBAUX6F,EAAM+6B,aAAc,CAErB,IAAIqtG,EAAkBpoI,EAAMgB,eAI5BouI,EAAcA,EAAYlsI,QAAQ6jB,GACxBA,EAAGjB,WAAW9qB,IAAMotI,EAAgBptI,KAG9C,IAAI20I,EAAYv1I,KAAKuqI,YAAYxoI,GAAG8jB,iBAAiB8G,GAE9B,SAAjBA,EAAGf,YACHe,EAAGjB,YACHiB,EAAGjB,WAAWsa,gBAAgBgoG,KAKpCgH,EAAcA,EAAYztH,OAAOguH,GAGjCN,EAAqB,GACrBD,EAAY/wI,SAAS0oB,IAClBsoH,EAAmB3wI,KAAK,CAAE1D,GAAI+rB,EAAG/rB,GAAI+B,MAAOgqB,EAAGvrB,OAAQ,IAI1D8zI,EAAgB5wI,KAAK,CAClB1D,GAAI,oBACJ+B,MAAO5C,EAAE,mCAGZ+0I,EAAaK,EAIbp4D,EAAqB,CAClBz5E,KAAM,WAAa,EAKzB,MACGwxI,EAAa,CACVl0I,GAAIV,EAAIkiI,UACR1hI,KAAM,YACN+B,MAAO,CACJ,CACGitC,MAAO,SACP7tC,KAAM,CACHkzI,EACA,CACGr0I,KAAM,QACNU,MAAO,MAAMrB,EAAE,yBACfqC,GAAI,CACDgI,YAAa,WACOpK,KAAKyL,gBACKA,gBAEhB4uE,UAAU,QACxB,MAKZ,CAEG3qC,MAAO,QACP7tC,KAAM,CACHszI,EACA,CACGz0I,KAAM,QACNU,MAAO,MAAMrB,EAAE,yBACfqC,GAAI,CACDgI,YAAa,WACV,IACGorI,EADcx1I,KAAKyL,gBACKA,gBAG3B9H,GAAGzD,EAAIi0I,UAAUtvI,SAAS,cAE1B2wI,EAAWn7D,UAAU,SACxB,QAUrB,IAAIg7D,EAAO1xI,GAAGzD,EAAIgf,KAAKpU,gBAAgB,GAOvC,GANAuqI,EAAK7pI,WAAW6pI,EAAKvqI,gBAAgB,IACrCuqI,EAAKpqI,QAAQ6pI,EAAY,GAEzB/3D,EAAmBz5E,QAGdsC,EAAM+6B,cAAgB/6B,EAAM6qE,cAAe,CAG7C,IAAIglE,EAAe9xI,GAAGoxI,EAAen0I,IAAI8M,MAGzCiH,YAAW,KACR/O,EAAM6qE,cAAc7qE,EAAO5F,KAAKJ,IAAK61I,EAAc,CAChD7vF,UAAU,EAGVulC,QAAQ,GACT,GACF,GACN,CAGoBkqD,EAAKvqI,gBAAgB,GAC3BlG,OAGViwI,GAAUrzI,EAAOgC,UAAUswI,OA7Qb,CA6QoB,EAGzCjvI,SAAWgF,IACRlG,GAAGzD,EAAI0F,OAAOf,SAASgF,EAAKywB,SAE5B,IAAI10B,EAAQ5F,KAAK20I,qBAAqB9qI,EAAKywB,SAC3C,GAAI10B,EAAO,CACR,IAAI8vI,EAAa,KACd/xI,GAAGzD,EAAIg0I,UAAUrvI,SAASgF,EAAKlH,OAC3BkH,EAAKuqI,YACNzwI,GAAGzD,EAAIk0I,YAAYvvI,SAASgF,EAAKuqI,YAEpC,IAAID,EAAWtqI,EAAKsqI,UAAY,aAGhC,GAFAxwI,GAAGzD,EAAIi0I,UAAUtvI,SAASsvI,GAEV,cAAZA,EAA0B,CAC3B,IAAIwB,EAAe9rI,EAAKlH,MACpB81E,EACDz4E,KAAKuqI,YAAYxoI,GAAG+pB,mBAAmB6pH,GACtCl9D,GAAkB5uE,EAAKyf,kBACxB9nB,EAAO8zI,gBACJ78D,EACA5uE,EAAKyf,iBAGd,GAIC1jB,EAAM+6B,aACP+0G,IAEsB,SAAlB7rI,EAAK0qH,WACN5wH,GAAGzD,EAAIkiI,WAAW/nD,UAAU,SAE5Bq7D,MAEA/xI,GAAGzD,EAAIkiI,WAAW/nD,UAAU,UAG5B1lE,YAAW,WAER,IAAIoZ,EAAU,CAAC,EACfA,EAAQnoB,EAAMkB,YAAc+C,EAAKlH,MACjCiD,EAAMf,SAASlB,GAAGzD,EAAIyC,OAAQorB,EACjC,GAAG,IAGZ,GAGHunH,gBAAiB,CAAC5oB,EAAUpjG,KACzBA,EACGA,GACA8pH,EAAsC9pH,iBAIzC2qH,EAAgBpgH,WACb64F,EAAShhG,WAAaghG,EAAShhG,WAAW3kB,SAAW,IAExDktI,EAAgBpvI,SAASykB,EAAiB,EAG7Ck6G,WAAY,KAGT,IAAI8Q,EAAe3wI,GAAGzD,EAAIo0I,cAC1B,GAAIA,GAAgBA,EAAaz3D,YAAa,CAC3C,IAAIhzE,EAAO,CAAC,EACZA,EAAKywB,QAAU32B,GAAGzD,EAAI0F,OAAOqG,WAE7B,IAAI2pI,EAAcjyI,GAAGzD,EAAIyC,OACrBiD,EAAQ5F,KAAK20I,qBAAqB9qI,EAAKywB,SA4B3C,OAbI10B,EAAM+6B,cAGsC,SAAzCh9B,GAAGzD,EAAIkiI,WAAWngI,OAAOgvI,cAf7BpnI,EAAKlH,MAAQgB,GAAGzD,EAAIg0I,UAAUjoI,WAC9BpC,EAAKuqI,WAAazwI,GAAGzD,EAAIk0I,YAAYnoI,WACrCpC,EAAKkgB,GAAK,MACVlgB,EAAKjI,KAAOgE,EAAMvB,IAClBwF,EAAKsqI,SAAWxwI,GAAGzD,EAAIi0I,UAAUloI,WACjCpC,EAAK0qH,UAAY,QACb0f,IACDpqI,EAAKyf,iBAAmB2qH,EAAgBhoI,cAWxCpC,EAAKlH,MAAQiD,EAAMqG,SAAS2pI,EAAa,CAAC,GAC1C/rI,EAAKkgB,GAAK,MACVlgB,EAAKjI,KAAOgE,EAAMvB,IAClBwF,EAAK0qH,UAAY,UAIhB1qH,CACV,CACG,OAAO,IACV,GA0EN,MAAO,CACJpJ,GAvEO,CACPG,GAAIV,EAAIgf,IACRxe,KAAM,SACNmB,KAAM,CACH,CACGV,KAAM,CACH,CAEGT,KAAM,QACNM,MAAOhB,KAAKuqI,YAAYxoI,GAAG+M,OAAO8N,gBAClCxb,MAAOrB,EAAE,QAEZ,CAEGW,KAAM,QACNyG,KAAM,QACNuwE,YAAa33E,EAAE,kBACfa,GAAIV,EAAI0F,MACR7E,OAAQ,GACRoB,QAASX,EAAOwJ,cAAa,GAC7B5I,GAAI,CACDC,SAAU,SAAU8I,GACjB3J,EAAO+3E,YAAYpuE,EACtB,IAGN,CAEGzK,KAAM,QACNM,MAAOhB,KAAKuqI,YAAYxoI,GAAG+M,OAAO8N,gBAClCxb,MAAOrB,EAAE,OAMZ,CAAC,EAED,CAEGW,KAAM,SACNQ,IAAK,eACLN,GAAIV,EAAIo0I,aACR/oI,KAAM,cACN3J,KAAM,OACNZ,MAAO,GACP6zE,QAAQ,EACRtzE,MAAO,WACJC,EAAOgC,UAAUsnI,SAAS5qI,EAAIgf,IACjC,KAIT,CAAC,IAmBJ5b,KAfSnB,IACT,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGpDpB,EAAQ0H,MAETrI,EAAOqD,SAAS1C,EAAQ0H,KAG3B,EAMA25H,WAAY,IACFhiI,EAAOgiI,aAEjBhiI,OAAQA,EAEd,CAEAmzI,qBAAqBr6G,GAClB,OAAOt6B,KAAKqzI,aAAerzI,KAAKqzI,aAAatlI,UAAUusB,GAAW,IACrE,CASAixG,oBAAoBppI,EAAS0zI,GAC1B71I,KAAKyuI,UAAYoH,EAEjB,IAAIC,GAAY,EAsThB,OApTA91I,KAAKq0H,WAAar0H,KAAKq0H,YAAc,CAAC,EACtCr0H,KAAKq0H,WAAWC,gBAAkBt0H,KAAKq0H,WAAWC,iBAAmB,GAKrEt0H,KAAKq0H,WAAWC,gBAAgBrwH,SAAS8lB,IAetC,IAAInkB,EAAQ5F,KAAK20I,qBAAqB5qH,EAAGuQ,SACzC,GAAK10B,EAAL,CAEA,IAAIjD,EAAQonB,EAAGpnB,MAEf,GAAa,mBAATA,EACDA,EAAQ3C,KAAKuqI,YAAYxoI,GAAG6Q,QAAQhC,gBAIhC,GAAIhL,EAAM+6B,cAAgC,SAAhB5W,EAAGwqG,UAAsB,CAUvD,MAAM97C,EAAiBz4E,KAAKuqI,YAAYxoI,GAAG+pB,mBACxC/B,EAAGpnB,OAEN,IAAK81E,EAAgB,OASrB,IAAInvD,EAAmBtpB,KAAKuqI,YAAYxoI,GAAG2D,UACxCqkB,EAAGT,kBAEFA,GAAoBA,EAAiBnI,OACtCmI,EAAiBnI,MACbrY,QAAQ8G,GAEO,iBAAVA,EAAE6f,MACQ,qBAAV7f,EAAE6f,OAGPxrB,SAASmK,IACP,IAAIgnD,EACDp1D,KAAKuqI,YAAY5+G,eAAeD,WAAW3d,UACxCK,EAAKzL,OAEPyyD,EAAWz0B,aACZvyB,EAAKzL,MAAQyyD,EAAW90C,OAAOtgB,KAAKyuI,WAEpCrgI,EAAKzL,MAAQ3C,KAAKyuI,UAAUr5E,EAAWtuD,YAGzB,qBAAbsH,EAAKqhB,KACNrhB,EAAKqhB,KAAO,aAEZrhB,EAAKqhB,KAAO,QACf,IAIT,IAAIsmH,EACDt9D,EAAevjD,cAAc5L,GAEhC,OAAQS,EAAGoqH,UAIR,IAAK,aACL,QAqBG,QApBAxxI,EAAQozI,EAAqBxpH,eAMN,SAAhBxC,EAAGwqG,WACAyhB,EACDD,EAAqBrqH,WAAW3d,UAC7Bgc,EAAGqqH,eAINzxI,EAAQA,EAAMqzI,EAAelvI,aACxBnE,EAAM/B,KACd+B,EAAQA,EAAM/B,KAKZmpB,EAAGA,IACR,IAAK,MACF,IAAKpnB,EAAO,MAERiD,EAAM+6B,cAGPk1G,EAAejwI,EAAMkB,YAAc,CAAC,EACpC+uI,EAAejwI,EAAMkB,YAAYlG,GAC9B+B,EAAMiD,EAAMgB,eAAemoB,MAC9B8mH,EAAejwI,EAAMkB,YAClBlB,EAAMgB,eAAemoB,MACpBpsB,EAAMiD,EAAMgB,eAAemoB,MAG3BnpB,EAAMQ,SAASgB,aACZxB,EAAMyB,aACPwuI,EAAejwI,EAAMkB,YAClBlB,EAAMyB,WAAWP,YAChBnE,EAAMiD,EAAMyB,WAAWP,aAE1BlB,EAAM0B,cACPuuI,EAAejwI,EAAMkB,YAClBlB,EAAM0B,YAAYR,YACjBnE,EAAMiD,EAAM0B,YAAYR,cAIlClB,EAAMgB,eACFG,QACGC,GACW,YAATA,EAAE3C,KAA8B,aAAT2C,EAAE3C,MAE9BJ,SAAS+C,IACP6uI,EAAejwI,EAAMkB,YAClBE,EAAEF,YACDnE,EAAMqE,EAAEF,WAAW,KAG7B+uI,EAAejwI,EAAMkB,YAAcnE,EAK5C,MAGH,IAAK,oBAIF,IAHA,IAAIszI,EAAY,GAEZC,EAAUH,EAAqBxoH,iBAC5B2oH,GAAS,CAGb,OAAQH,EAAqBnqH,YAG1B,IAAK,SACFqqH,EAAU3xI,KAAK4xI,EAAQt1I,IACvB,MAKH,IAAK,QACF,IAAIo1I,EAKA37C,EAAW67C,GALXF,EACDD,EAAqBrqH,WAAW3d,UAC7Bgc,EAAGqqH,aAG6BttI,iBAEf,IAAZuzF,IACRA,EAAW67C,EAAQF,EAAexlH,gBAE9BrjB,MAAMC,QAAQitF,GACfA,EAAWA,EAASlsF,KAAKiF,GACfA,EAAExS,GAAKwS,EAAExS,GAAKwS,IAEhBinF,EAASz5F,KACjBy5F,EAAWA,EAASz5F,KAI1Bq1I,EAAYj2I,KAAKuqI,YAAYxoI,GAAGygB,KAC7ByzH,EAAU1uH,OAAO8yE,IAM1B67C,EAAUH,EAAqBtoH,cAAcyoH,EAChD,CAGA,GACQ,QADAnsH,EAAGA,GAEL,GAAwB,OAApBnkB,EAAMqB,WAAqB,CAC5B,IAAIkvI,EAAU,GACdF,EAAUhyI,SAASmP,IAChB,IAAIgjI,EACDp2I,KAAKuqI,YAAYxoI,GAAG2D,UAAUmwI,GACjCO,EAAoBxwI,EAAMkB,YAAcsM,EACxC+iI,EAAQ7xI,KAAK8xI,EAAoB,IAEpCP,EAAezH,WAAa+H,CAC/B,MACGN,EAAejwI,EAAMkB,YAAcmvI,EAI5C,MAEH,IAAK,oBAKF,GAJAA,EAAY,GAEZtzI,EAAQozI,EAAqBxoH,iBAM1B,GACsC,SAAnCwoH,EAAqBnqH,YACJ,SAAhB7B,EAAGwqG,WAAwBxqG,EAAGqqH,WAE/B4B,EACGD,EAAqBrqH,WAAW3d,UAC7Bgc,EAAGqqH,iBAKc,KAFvB/5C,EAAW13F,EAAMqzI,EAAelvI,eAG7BuzF,EAAW13F,EAAMqzI,EAAexlH,gBAC5BrjB,MAAMC,QAAQitF,KACfA,EAAWA,EAAS,IAEnBA,EAASz5F,KAAIy5F,EAAWA,EAASz5F,KAGxC+B,EAAQ03F,OAIN,GAAuC,UAAnC07C,EAAqBnqH,WAAwB,CAMnD,IAAIyqH,EACAzwI,EAAMyB,WACPgvI,EAASzwI,EAAMyB,WAAWP,WAClBlB,EAAM0B,cACd+uI,EAASzwI,EAAM0B,YAAYR,YAE1BuvI,GAAU1zI,EAAM0zI,GACjB1zI,EAAQA,EAAM0zI,GACN1zI,EAAM/B,KACd+B,EAAQA,EAAM/B,GAEpB,CAKK,QADAmpB,EAAGA,KAEL8rH,EAAejwI,EAAMkB,YAAcnE,GAM/CmzI,GAAY,CAGf,KAGW,QADA/rH,EAAGA,KAEL8rH,EAAejwI,EAAMkB,YAAcnE,GAIzCmzI,GAAY,CAnRG,CA2RlB,IAGIA,CAKV,CAMA7uH,QAAQ9kB,GAGL,OAFAnC,KAAKyuI,UAAYtsI,EAAQ0H,KAElB,IAAI4F,SAAQ,CAACC,EAASiH,KAE1B,GADgB3W,KAAKurI,oBAAoB,CAAC,EAAGppI,EAAQ0H,MAG9C,CAEJ,IAAI2oB,EAAKrwB,EAAQ+H,KAAKyhB,eACtB,IAAK6G,EAAI,OAAO9iB,IAEJ8iB,EAAGxqB,MAEX+mE,OAAO5sE,EAAQ0H,KAAKjJ,GAAIuB,EAAQ0H,MAChC2K,KAAK9E,GACL+E,OAAOtM,IACLnI,KAAKuqI,YAAYxoI,GAAGqG,OAAOC,UAAUF,EAAK,CACvCmH,QACG,sDACH1O,GAAIuB,EAAQ0H,KAAKjJ,GACjBiJ,KAAM1H,EAAQ0H,OAEjB8M,EAAOxO,EAAI,GAEpB,MAnBGuH,GAmBH,GAEN,CAIA1K,WAAWC,GACRnF,MAAMkF,WAAWC,GACjBjF,KAAKsvI,iBAAiBrqI,EACzB,CAIAqqI,iBAAiBrqI,GAEVjF,KAAKqzI,eACNrzI,KAAKszI,WAAWtzI,KAAKqzI,aAAazyI,IAAMZ,KAAKq0H,YAGhDr0H,KAAKqzI,aAAepuI,EAGpBjF,KAAKuzI,WAAa,KAGlBvzI,KAAKq0H,WAAar0H,KAAKszI,WAAWtzI,KAAKqzI,aAAazyI,KAAO,CAAC,CAC/D,CAKA+xD,aAAavsD,GAOV,GANAA,EAAWA,GAAY,CAAC,EAExBtG,MAAM6yD,aAAavsD,GAIfA,EAASkwI,gBAAiB,CAC3B,IAAIjD,EAAerzI,KAAKuqI,YAAYxlI,YAAY+iB,WAC7C1hB,EAASkwI,iBAEZt2I,KAAKqzI,aAAeA,CACvB,CAGIrzI,KAAKuzI,YAGNvzI,KAAKuzI,WAAW5gF,aAAavsD,EAEnC,CAKAo9H,aAMG,IAAIp9H,EAAWtG,MAAM0jI,aAKrB,OAHAp9H,EAASiuH,WAAar0H,KAAKuzI,WAAW/P,aACtCp9H,EAASkwI,gBAAkBt2I,KAAKqzI,aAAajrH,aAEtChiB,CACV,CASAqlI,UACG,IAAI0B,EAAW,GAoBf,OAnBentI,KAAKq0H,YAAYC,iBAAmB,IAC1CrwH,SAAS8lB,IACf,IAAInkB,EAAQ5F,KAAK20I,qBAAqB5qH,EAAGuQ,SACzC,IAAK10B,EAAO,OACZ,IAAKA,EAAM+6B,cAAiC,UAAjB5W,EAAGwqG,UAAuB,OAGrD,IAAItkG,EAAKjwB,KAAKuqI,YAAYxoI,GAAG+pB,mBAAmB/B,EAAGpnB,OAC/CstB,GAAI/D,aAAe+D,GAAI1F,eAAe0B,aAG1CkhH,EAAS7oI,KACN,IAAImL,SAASC,IACVugB,EAAG7tB,GAAG,mBAAmB,KACtBsN,GAAS,GACV,IAEP,IAEGD,QAAQ4R,IAAI8rH,EACtB,cCpzCqE1tI,EAAOC,QAAkS,SAAS2K,EAAEsyB,EAAEwjB,EAAEvwC,GAAG,SAAShD,EAAEkZ,EAAE0xD,GAAG,IAAIr3B,EAAEr6B,GAAG,CAAC,IAAI6W,EAAE7W,GAAG,CAAmE,GAAGzS,EAAE,OAAOA,EAAEyS,GAAE,GAAI,IAAI9e,EAAE,IAAIsB,MAAM,uBAAuBwd,EAAE,KAAK,MAAM9e,EAAEyP,KAAK,mBAAmBzP,CAAC,CAAC,IAAIsN,EAAE6rC,EAAEr6B,GAAG,CAACpmB,QAAQ,CAAC,GAAGi9B,EAAE7W,GAAG,GAAGs0B,KAAK9lC,EAAE5U,SAAQ,SAAS2K,GAAoB,OAAOuC,EAAlB+vB,EAAE7W,GAAG,GAAGzb,IAAgBA,EAAE,GAAEiK,EAAEA,EAAE5U,QAAQ2K,EAAEsyB,EAAEwjB,EAAEvwC,EAAE,CAAC,OAAOuwC,EAAEr6B,GAAGpmB,OAAO,CAA2C,IAA1C,IAAI2T,OAAE,EAA4CyS,EAAE,EAAEA,EAAElW,EAAEzJ,OAAO2f,IAAIlZ,EAAEgD,EAAEkW,IAAI,OAAOlZ,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAASgpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,iBAAiB2gE,SAASA,EAASC,oBAAoB,SAASC,GAAO,OAAOlwI,KAAKuvC,MAAY,KAAN2gG,EAAW,EAAEh3I,EAAOC,QAAQ62I,CAAQ,EAAE,CAACG,cAAc,IAAI,EAAE,CAAC,SAAS9gE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS3gE,EAAQ,cAAkByhE,EAAe,iBAAqBC,EAAK,CAACC,UAAU,SAAmB36F,GAAU,MAAkB,SAAXA,EAAkB,OAAO,KAAK,EAAE46F,gBAAgB,SAAyB56F,GAAU,MAAkB,SAAXA,EAAkB,WAAW,cAAc,EAAE66F,gBAAgB,SAAyBvlC,GAAU,OAAOA,EAASl/F,QAAQ,2BAA2B,MAAM,WAAW,EAAE0kI,gBAAgB,SAAyBxlC,EAASt1D,GAA2G,OAA3B,SAAXA,EAAkB,aAAa,QAAqB,UAA9F06F,EAAKG,gBAAgBvlC,EAA+F,GAAGzyG,EAAOC,QAAQ,WAAW,SAASi4I,EAAW1mB,EAAI/e,EAAS0lC,EAAah7F,IAA3xB,SAAyBiL,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAspBC,CAAgB93I,KAAK23I,GAAY33I,KAAKkyG,SAASA,EAASlyG,KAAK2a,OAAO28H,EAAKC,UAAU36F,GAAU58C,KAAKixH,IAAIA,EAAIjxH,KAAK43I,aAAaA,EAAa53I,KAAK+3I,aAAaT,EAAKE,gBAAgB56F,GAAU58C,KAAKg4I,YAAuB,SAAXp7F,EAAkB,WAAW,QAAQ,IAAIq7F,EAAaX,EAAKI,gBAAgBxlC,EAASt1D,GAAU58C,KAAKk4I,QAAQN,EAAaK,IAAej4I,KAAKm4I,mBAAmBP,EAAaK,EAAa,CAAqiF,OAApiFtB,EAAagB,EAAW,CAAC,CAACtzI,IAAI,qBAAqB1B,MAAM,SAA4Bi1I,EAAaQ,GAAc,IAAIC,EAASr4I,KAAK2a,OAAO,UAAU3a,KAAK+3I,aAAa,YAAgB7mB,EAAI0mB,EAAaS,GAAU,IAAInnB,EAAI,CAAC,IAAI/oH,EAAI,IAAIG,MAAM,qCAAoI,MAA/FH,EAAIumF,WAAW,CAAC2pD,SAASA,EAASD,aAAaA,EAAaE,MAAMnkI,OAAOC,KAAKpU,KAAKixH,IAAIqnB,QAAcnwI,CAAG,CAAkM,IAAjM,IAAI+vI,EAAQ3B,EAASgC,QAAQhC,EAASiC,QAAQtnB,IAAUunB,EAAcP,EAAQ1lE,qBAAqB,iBAAiB,GAAOkmE,EAAmBD,EAAcjmE,qBAAqB,gBAAwBn/D,EAAE,EAAEiB,EAAEokI,EAAmBvyI,OAAOkN,EAAEiB,EAAEjB,IAAKolI,EAAcxuD,YAAYyuD,EAAmBrlI,IAAuC,OAAnCukI,EAAaQ,GAAcF,EAAeA,CAAO,GAAG,CAAC7zI,IAAI,gBAAgB1B,MAAM,WAAyB,IAAIg2I,EAAS34I,KAAKk4I,QAAQ1lE,qBAAqB,gBAAgB,OAAOrlE,MAAMgtC,UAAUy+F,OAAOx+F,KAAKu+F,GAAS,SAAS16F,EAAI46F,GAAc,IAAIj4I,EAAGi4I,EAAa10D,aAAa,MAAM,MAAG,cAAc9hE,KAAKzhB,GAAY2F,KAAK03C,IAAIA,EAAI34B,SAAS1kB,EAAG0gD,OAAO,GAAG,KAAYrD,CAAG,GAAE,EAAE,GAAG,CAAC55C,IAAI,mBAAmB1B,MAAM,SAA0Bm2I,EAAYC,GAAW,IAAIC,EAAeh5I,KAAK43I,aAAa,uBAA2BqB,EAAYD,EAAexmE,qBAAqB,WAA0I,IAAvGrlE,MAAMgtC,UAAU++F,KAAK9+F,KAAK6+F,GAAY,SAASnnB,GAAK,OAAOA,EAAI3tC,aAAa,eAAe40D,CAAS,IAAG,CAA+B,IAAI14I,EAAM24I,EAAexmE,qBAAqB,SAAS,GAAO2mE,EAAOH,EAAexuG,cAAc,WAAW2uG,EAAOC,aAAa,KAAKD,EAAOz3D,aAAa,cAAco3D,GAAaK,EAAOz3D,aAAa,YAAYq3D,GAAW14I,EAAMuqF,YAAYuuD,EAAnP,CAA0P,GAAG,CAAC90I,IAAI,eAAe1B,MAAM,SAAsB02I,EAAU/yD,EAAUjzE,GAAS,MAAHA,IAASA,EAAE,GAAE,IAAIimI,EAAkB,IAAJjmI,EAAMgmI,EAAUA,EAAW,IAAIhmI,EAAE,IAASkmI,EAAUv5I,KAAK2a,OAAO,UAAU2+H,EAAc,GAA8B,MAA3Bt5I,KAAKixH,IAAIqnB,MAAMiB,GAAkB,OAAOv5I,KAAKw5I,aAAaH,EAAU/yD,EAAUjzE,EAAE,GAAG,IAAIgjD,EAAM,CAAClvD,KAAKoyI,EAAU1vI,KAAKy8E,EAAUnkF,QAAQ,CAACs3I,QAAO,IAAOz5I,KAAKixH,IAAIp+C,KAAKxc,EAAMlvD,KAAKkvD,EAAMxsD,KAAKwsD,EAAMl0D,SAAS,IAAI42I,EAAUO,EAActmI,QAAQqkI,EAAe,MAAMr3I,KAAK05I,iBAAiB,SAASX,EAAUA,GAAW,IAAIN,EAAcz4I,KAAKk4I,QAAQ1lE,qBAAqB,iBAAiB,GAAO2mE,EAAOn5I,KAAKk4I,QAAQ1tG,cAAc,gBAAgB2uG,EAAOC,aAAa,KAAK,IAAIO,EAAO35I,KAAK45I,gBAAgB,EAAoP,OAAlPT,EAAOz3D,aAAa,KAAK,MAAMi4D,GAAQR,EAAOz3D,aAAa,OAAO,6EAA6Ey3D,EAAOz3D,aAAa,SAAS1hF,KAAKg4I,YAAY,IAAIsB,GAAeb,EAAc7tD,YAAYuuD,GAAeQ,CAAM,KAAYhC,CAAU,CAA7/F,EAAggG,EAAE,CAAC,aAAa,IAAI,EAAE,CAAC,SAAS/hE,EAAQn2E,EAAOC,GAAS,aAAaD,EAAOC,QAAQ,CAACm6I,YAAY,SAAqBC,EAAIz2D,GAAM,OAAO,8FAA8FA,EAAK,GAAG,SAASA,EAAK,GAAG,m2BAAm2By2D,EAAI,6jBAA6jBz2D,EAAK,GAAG,SAASA,EAAK,GAAG,2WAA2WrwE,QAAQ,SAAS,GAAG,EAAE+mI,oBAAoB,SAA6BD,EAAIz2D,GAAM,OAAO,qNAAqNA,EAAK,GAAG,SAASA,EAAK,GAAG,yoBAAyoBy2D,EAAI,8PAA8Pz2D,EAAK,GAAG,SAASA,EAAK,GAAG,2gBAA2gBrwE,QAAQ,SAAS,GAAG,EAAEgnI,gBAAgB,SAAyBF,EAAIz2D,EAAK42D,GAAQ,OAAO,kRAAkRH,EAAI,6cAA6cG,EAAO/sI,EAAE,QAAQ+sI,EAAO3iF,EAAE,6BAA6B+rB,EAAK,GAAG,SAASA,EAAK,GAAG,86CAA86CrwE,QAAQ,SAAS,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS4iE,EAAQn2E,EAAOC,GAAS,aAAgM,IAAIw6I,EAAQtkE,EAAQ,aAAiB1D,EAAU0D,EAAQ,UAAU1D,UAAcioE,EAAcvkE,EAAQ,UAAUukE,cAAkBC,EAAOxkE,EAAQ,YAAgB2gE,EAAS,CAAC,EAA0HA,EAASnyI,SAAS,CAACi2I,WAAW,SAAoBC,GAAM,OAAIA,EAAK76I,QAA6B66I,EAAK76I,OAAyB,IAA7C,WAAwD,EAAEy2E,OAAOgkE,GAAxQ,SAAgBpoB,GAAK,OAAnVnvH,EAAmX,SAAaovH,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvbztH,EAAiX,SAArXyT,EAAkX,CAAC,GAArV3D,OAAO8iI,eAAen/H,EAAIzT,EAAI,CAAC1B,MAAMA,EAAMm0I,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAYl/H,EAAIzT,GAAK1B,EAAamV,EAA/K,IAAyBA,EAAIzT,EAAI1B,CAAqb,IAAiKi6C,SAAS,OAAO29F,WAAW,CAACroH,MAAM,IAAI6yB,IAAI,MAAMwxF,EAASiE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAM3iI,OAAI,EAAO1D,OAAK,EAAef,EAAE,EAAEA,EAAEN,UAAU5M,OAAOkN,GAAG,EAAE,CAACyE,EAAI/E,UAAUM,GAAGe,EAAKD,OAAOC,KAAK0D,GAAK,IAAI,IAAIupB,EAAE,EAAEA,EAAEjtB,EAAKjO,OAAOk7B,GAAG,EAAGo5G,EAAOrmI,EAAKitB,IAAIvpB,EAAI1D,EAAKitB,GAAI,CAAC,OAAOo5G,CAAM,EAAElE,EAASiC,QAAQ,SAASkC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAEnE,EAASqE,WAAW,SAAShuI,GAAG,IAAI,QAAO+d,IAAJ/d,EAAe,OAAiB,OAAOiuI,mBAAmBC,OAAOvE,EAASwE,cAAcnuI,IAAmI,CAA9H,MAAMvC,GAAG,IAAIlC,EAAI,IAAIG,MAAM,OAA0F,MAAnFH,EAAIumF,WAAW7kF,KAAK+C,EAAEzE,EAAIumF,WAAWssD,YAAY,kCAAwC7yI,CAAG,CAAC,EAAEouI,EAAS0E,WAAW,SAASruI,GAAG,OAAOsuI,SAASjlI,mBAAmBrJ,GAAG,EAAE2pI,EAASgC,QAAQ,SAAS5kE,EAAIwnE,GAAoE,OAA3C,IAAIjpE,EAAU,CAACipE,aAAaA,IAA6B/oE,gBAAgBuB,EAAI,WAAW,EAAE4iE,EAAS6E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC9E,EAAS+E,aAAa,SAAS3nE,GAAK,OAAOA,EAAI3gE,QAAQqoI,EAAiB,OAAO,EAAE9E,EAASgF,eAAepnI,OAAOC,KAAKmiI,EAAS6E,SAASjtI,KAAI,SAASqtI,GAAS,IAAIC,EAAUlF,EAAS6E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAIt5H,OAAOm0H,EAAS+E,aAAaG,GAAW,KAAKE,KAAK,IAAIv5H,OAAOm0H,EAAS+E,aAAaE,GAAS,KAAKtpH,MAAMupH,EAAU12F,IAAIy2F,EAAQ,IAAGjF,EAASqF,WAAW,SAAS/3F,GAAqB,IAAb,IAAIj0C,OAAE,EAAeyD,EAAE,EAAEiB,EAAEiiI,EAASgF,eAAep1I,OAAOkN,EAAEiB,EAAEjB,IAAKzD,EAAE2mI,EAASgF,eAAeloI,GAAGwwC,EAAOA,EAAO7wC,QAAQpD,EAAE8rI,OAAO9rI,EAAEm1C,KAAK,OAAOlB,CAAM,EAAE0yF,EAASsF,WAAW,SAASh4F,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOnvC,YAAwB,IAAb,IAAI9E,OAAE,EAAeyD,EAAE,EAAEiB,EAAEiiI,EAASgF,eAAep1I,OAAOkN,EAAEiB,EAAEjB,IAAKzD,EAAE2mI,EAASgF,eAAeloI,GAAGwwC,EAAOA,EAAO7wC,QAAQpD,EAAE+rI,KAAK/rI,EAAEsiB,OAAO,OAAO2xB,CAAM,EAAE0yF,EAAS7wI,UAAU,SAASoS,GAAK,OAAOjE,KAAK0D,MAAM1D,KAAKC,UAAUgE,GAAK,EAAEy+H,EAASuF,aAAa,SAASC,GAAQ,OAAOA,EAAOnD,QAAO,SAAS9qI,EAAOkuI,GAAgD,OAAzC7uI,MAAMgtC,UAAU71C,KAAKqlC,MAAM77B,EAAOkuI,GAAcluI,CAAM,GAAE,GAAG,EAAE,IAAImuI,EAAY,IAAI75H,OAAOlH,OAAOghI,aAAa,KAAK,KAA8U,SAASC,EAAoBh6I,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,WAAWj6I,EAAQs3B,QAAQ,sBAAsBt3B,EAAQxB,UAAsN,MAA5MwH,EAAIumF,WAAW,CAAC9tF,GAAG,uBAAuBuB,EAAQxB,SAASq6I,YAAY,WAAW74I,EAAQs3B,QAAQ,sBAAsBt3B,EAAQxB,SAAS83H,OAAOt2H,EAAQs2H,OAAO1sH,MAAM5J,EAAQ4J,MAAM0tB,QAAQt3B,EAAQs3B,SAAetxB,CAAG,CAA1qBouI,EAASwE,cAAc,SAASnuI,GAAG,OAAOA,EAAEoG,QAAQipI,EAAY,IAAI,EAAE1F,EAAS8F,aAAa,SAASC,EAAMnsE,GAA4C,IAAnC,IAAIosE,EAAW,GAAOj5G,OAAM,EAA0C,OAA5BA,EAAMg5G,EAAME,KAAKrsE,KAAiBosE,EAAWj4I,KAAK,CAAC03I,MAAM14G,EAAM22G,OAAO32G,EAAMv3B,QAAQ,OAAOwwI,CAAU,EAAEhG,EAASkG,aAAa,SAAS3kI,GAAK,OAAO3D,OAAOC,KAAK0D,GAAK3R,MAAM,EAAoWowI,EAAS5zF,SAAS,SAAS81E,EAAOh/F,EAAQ1tB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMuI,EAAEmkH,EAAOtyH,OAAOkN,EAAEiB,EAAEjB,IAAwB,GAAVolH,EAAOplH,GAAW1Q,QAAQ,KAAK82B,EAAQ,IAAK,OAAOpmB,EAAG8oI,EAAoB,CAACx7I,SAAS,QAAQ84B,QAAQA,EAAQg/F,OAAOA,EAAO1sH,MAAMA,GAAO,EAAEwqI,EAAS7zF,QAAQ,SAAS+1E,EAAOh/F,EAAQ1tB,GAAuC,IAAhC,IAAIic,EAAMywG,EAAOvlH,MAAM,EAAEnH,GAAesH,EAAE2U,EAAM7hB,OAAO,EAAEkN,GAAG,EAAEA,IAAI,CAAC,IAAIinI,EAAKtyH,EAAM3U,GAAG,GAAqC,IAAlCinI,EAAK33I,MAAM0K,QAAQ,IAAIosB,KAAiE,IAAnD,CAAC,IAAI,KAAKpsB,QAAQitI,EAAK33I,MAAM82B,EAAQtzB,OAAO,IAAU,OAAOkN,CAAE,CAAC8oI,EAAoB,CAACx7I,SAAS,OAAO84B,QAAQA,EAAQg/F,OAAOA,EAAO1sH,MAAMA,GAAO,EAAEtM,EAAOC,QAAQ62I,EAASA,EAASmG,OAAO9mE,EAAQ,YAAY2gE,EAASoG,cAAc/mE,EAAQ,mBAAmB,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,mBAAmB,GAAG,WAAW,GAAGgnE,OAAO,KAAK,EAAE,CAAC,SAAShnE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0e,SAASY,EAAgBjwF,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAC,IAAItB,EAAS3gE,EAAQ,eAAmBinE,EAAQtG,EAASoG,cAAkBnuB,EAAc,WAAW,SAASA,IAAoD,GAApCspB,EAAgB93I,KAAKwuH,GAAkBz7G,UAAU5M,OAAO,EAAG,MAAM,IAAImC,MAAM,2GAA2GtI,KAAK88I,SAAS,CAAC,EAAE98I,KAAK+8I,QAAQ,GAAG/8I,KAAKsoF,WAAW,CAAC,EAAE,CAAkyG,OAAjyGquD,EAAanoB,EAAc,CAAC,CAACnqH,IAAI,eAAe1B,MAAM,SAAsBlD,GAA2C,OAAnCO,KAAK+8I,QAAQz4I,KAAKu4I,EAAQp9I,IAAgBO,IAAI,GAAG,CAACqE,IAAI,aAAa1B,MAAM,SAAoBR,GAAS,IAAI66I,EAAMh9I,KAAkZ,OAA7YA,KAAKmC,QAAQA,EAAQgS,OAAOC,KAAKmiI,EAASnyI,UAAUH,SAAQ,SAASI,GAAK,IAAIq+B,EAAa6zG,EAASnyI,SAASC,GAAK24I,EAAM34I,GAAyB,MAApB24I,EAAM76I,QAAQkC,GAAW24I,EAAM76I,QAAQkC,GAAKq+B,CAAY,IAAsB,SAAhB1iC,KAAK48C,UAAmC,SAAhB58C,KAAK48C,WAAmB58C,KAAKi9I,eAAezuB,EAAc0uB,eAAel9I,KAAK48C,WAAU58C,KAAKi9I,eAAej9I,KAAKmC,QAAQ86I,gBAAgBj9I,KAAKi9I,eAAej9I,KAAKmC,QAAQg7I,aAAa,GAAUn9I,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBsuH,GAAK,GAAGA,EAAImsB,UAAW,MAAM,IAAI90I,MAAM,iEAA8E,OAAbtI,KAAKixH,IAAIA,EAAWjxH,IAAI,GAAG,CAACqE,IAAI,cAAc1B,MAAM,SAAqBuvG,GAAU,IAAImrC,EAAYr9I,KAAKs9I,oBAAoBprC,GAAUmrC,EAAY9lI,QAAQvX,KAAK88I,SAAS5qC,GAAUmrC,CAAW,GAAG,CAACh5I,IAAI,UAAU1B,MAAM,WAAmB3C,KAAKu9I,eAAev9I,KAAKi9I,eAAeO,kBAAkBx9I,KAAKixH,IAAI,GAAG,CAAC5sH,IAAI,SAAS1B,MAAM,WAAkB,IAAI86I,EAAOz9I,KAAyyC,OAApyCA,KAAK+8I,QAAQ/8I,KAAKi9I,eAAeS,YAAYvvI,KAAI,SAASwvI,GAAgB,OAAOA,GAAgB,IAAGp2H,OAAOvnB,KAAK+8I,SAAS/8I,KAAKmC,QAAQnC,KAAK+8I,QAAQnE,QAAO,SAASz2I,EAAQ1C,GAAQ,OAAOA,EAAOm+I,mBAAmBz7I,EAAQs7I,EAAO,GAAEz9I,KAAKmC,SAASnC,KAAK43I,aAAa53I,KAAKmC,QAAQg7I,aAAavE,QAAO,SAAShB,EAAa1lC,GAAU,IAAI/hC,EAAQstE,EAAOxsB,IAAIqnB,MAAMpmC,GAAU2rC,SAA0D,OAAjDjG,EAAa1lC,GAAUqkC,EAASgC,QAAQpoE,GAAgBynE,CAAY,GAAE,CAAC,GAAG53I,KAAK+8I,QAAQ94I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI,CAACo3G,IAAIwsB,EAAOxsB,IAAI2mB,aAAa6F,EAAO7F,aAAa/tI,KAAK4zI,EAAO5zI,MAAM,IAAG7J,KAAK89I,UAAU99I,KAAK+8I,QAAQ94I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI,CAACijI,SAASW,EAAOX,UAAU,IAAG98I,KAAKu9I,eAAet5I,SAAQ,SAASiuG,GAAyC,MAA5BurC,EAAOxsB,IAAIqnB,MAAMpmC,IAAiBurC,EAAOM,YAAY7rC,EAAU,IAAGlyG,KAAKg+I,OAAOh+I,KAAK+8I,QAAQnE,QAAO,SAASj2I,EAAMlD,GAAQ,OAAOA,EAAOw+I,eAAet7I,EAAM,GAAE,CAAC,GAAGwR,OAAOC,KAAKpU,KAAKg+I,QAAQ/5I,SAAQ,SAASqjC,GAAI,IAAI42G,EAAOT,EAAOO,OAAO12G,GAAQE,EAAK02G,EAAO12G,KAAS61G,EAAYI,EAAOX,SAASt1G,GAAM61G,EAAYc,QAAQD,EAAOr0I,MAAMwzI,EAAYtwE,SAAS0wE,EAAOxsB,IAAIp+C,KAAKvrC,EAAG+1G,EAAYltE,QAAQ,IAAGh8D,OAAOC,KAAKpU,KAAK43I,cAAc3zI,SAAQ,SAASiuG,GAAUurC,EAAOxsB,IAAIp2G,OAAOq3F,GAAU,IAAI/hC,EAAQomE,EAAS0E,WAAW1E,EAASiC,QAAQiF,EAAO7F,aAAa1lC,KAAY,OAAOurC,EAAOxsB,IAAIp+C,KAAKq/B,EAAS/hC,EAAQ,CAAC,EAAE,IAAUnwE,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBkH,GAAqB,OAAf7J,KAAK6J,KAAKA,EAAY7J,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,OAAO3C,KAAKixH,GAAG,GAAG,CAAC5sH,IAAI,sBAAsB1B,MAAM,SAA6BsqD,GAAM,IAAImxF,EAASp+I,KAAKixH,IAAIqnB,MAAMrrF,GAAM4wF,SAAS,OAAO79I,KAAKq+I,+BAA+BD,EAASnxF,EAAK,GAAG,CAAC5oD,IAAI,iCAAiC1B,MAAM,SAAwCwtE,EAAQmuE,GAAU,IAAIC,EAAOv+I,KAASw+I,EAAY,CAACF,SAASA,GAA8K,OAApKnqI,OAAOC,KAAKmiI,EAASnyI,UAAUH,SAAQ,SAASI,GAAKm6I,EAAYn6I,GAAKk6I,EAAOl6I,EAAI,IAAGm6I,EAAYvB,eAAej9I,KAAKi9I,eAAeuB,EAAYzB,QAAQ/8I,KAAK+8I,QAAe,IAAIvuB,EAAciwB,aAAatuE,EAAQquE,EAAY,GAAG,CAACn6I,IAAI,cAAc1B,MAAM,SAAqBsqD,GAAM,OAAOjtD,KAAKs9I,oBAAoBrwF,GAAMjtD,KAAKi9I,eAAeyB,UAAUC,aAAa,GAAG,CAACt6I,IAAI,oBAAoB1B,MAAM,WAA4C,OAAf3C,KAAK89I,UAAiB99I,KAAKu9I,cAAc,KAAY/uB,CAAa,CAApkH,GAAwkHA,EAAc+nB,SAAS3gE,EAAQ,eAAe44C,EAAc4rB,OAAOxkE,EAAQ,YAAY44C,EAAciwB,aAAa7oE,EAAQ,mBAAmB44C,EAAc0uB,eAAetnE,EAAQ,sBAAsB44C,EAAcowB,WAAWhpE,EAAQ,iBAAiBn2E,EAAOC,QAAQ8uH,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,gBAAgB,GAAG,kBAAkB,KAAK,EAAE,CAAC,SAAS54C,EAAQn2E,EAAOC,GAAS,aAAa,SAASm/I,EAAQvtI,GAAStR,KAAKmH,KAAK,eAAenH,KAAKsR,QAAQA,EAAQtR,KAAK8+I,MAAM,IAAIx2I,MAAMgJ,GAASwtI,KAAK,CAAmC,SAAS1C,EAAgB9qI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAKsR,QAAQA,EAAQtR,KAAK8+I,MAAM,IAAIx2I,MAAMgJ,GAASwtI,KAAK,CAAuC,SAASC,EAAmBztI,GAAStR,KAAKmH,KAAK,mBAAmBnH,KAAKsR,QAAQA,EAAQtR,KAAK8+I,MAAM,IAAIx2I,MAAMgJ,GAASwtI,KAAK,CAA0C,SAASE,EAAgB1tI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAK0uF,WAAW,CAACssD,YAAY,iBAAiBh7I,KAAKsR,QAAQA,EAAQtR,KAAK8+I,MAAM,IAAIx2I,MAAMgJ,GAASwtI,KAAK,CAAngBD,EAAQ1kG,UAAU7xC,MAAM6xC,UAA+HiiG,EAAgBjiG,UAAU,IAAI0kG,EAAmIE,EAAmB5kG,UAAU,IAAI0kG,EAA2KG,EAAgB7kG,UAAU,IAAI0kG,EAAQp/I,EAAOC,QAAQ,CAACm/I,QAAQA,EAAQzC,gBAAgBA,EAAgB4C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASnpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIu/I,EAAWrpE,EAAQ,kBAAsBspE,EAAoBtpE,EAAQ,4BAAgCupE,EAAavpE,EAAQ,oBAAwBwpE,EAAgBxpE,EAAQ,+BAAmC7I,EAAO6I,EAAQ,oBAAwBypE,EAAmB,CAAC7B,kBAAkB,SAA2BvsB,GAAkI,OAA1GA,EAAIp+C,KAAK,2DAA2D1kE,KAAI,SAAS0kE,GAAM,OAAOA,EAAK1rE,IAAI,IAAyBogB,OAAO,CAAC,wBAAwB,EAAEm3H,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAAC3wE,EAAOqyE,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2BvsB,GAAwG,OAAhFA,EAAIp+C,KAAK,iCAAiC1kE,KAAI,SAAS0kE,GAAM,OAAOA,EAAK1rE,IAAI,IAAyBogB,OAAO,CAAC,qBAAqB,EAAEm3H,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAAC3wE,EAAOmyE,EAAoBE,EAAgBD,EAAaF,IAAax/I,EAAOC,QAAQ,CAACigJ,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAASzpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI06I,EAAOxkE,EAAQ,YAAgB2gE,EAAS3gE,EAAQ,eAAe,SAASiqE,EAAQC,EAAMx8G,GAAO,OAAOw8G,EAAM,IAAIx8G,EAAM22G,QAAQ32G,EAAM22G,OAAO6F,EAAM,EAAE,CAAC,SAASC,EAAgBzF,EAAK0F,GAAW,GAAe,QAAZ1F,EAAK14I,MAA8B,UAAhB04I,EAAK35I,UAAoB25I,EAAKjsI,KAAK,CAAC,GAAG2xI,EAAW,MAAM,IAAI13I,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZgyI,EAAK14I,MAA8B,QAAhB04I,EAAK35I,UAAkB25I,EAAKjsI,KAAK,CAAC,IAAI2xI,EAAW,MAAM,IAAI13I,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAO03I,CAAS,CAAC,SAASC,EAAWryI,EAAEC,GAAG,OAAOD,EAAEqsI,OAAOpsI,EAAEosI,MAAM,CAAC,SAASiG,EAAOpuB,GAAK,IAAI5/F,EAAM,EAAc,MAAT4/F,EAAI,KAAU5/F,EAAM,GAAE,IAAInmB,EAAM+lH,EAAIzkH,QAAQ,KAAS03C,GAAa,IAATh5C,EAAW+lH,EAAI3rH,OAAO,EAAE4F,EAAM,MAAM,CAAC+lH,IAAIA,EAAI5+G,MAAMgf,EAAM6yB,GAAKpkD,SAAiB,IAARuxB,EAAU,QAAQ,MAAM,CAA6hC,SAASiuH,EAA0Bh+I,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,gBAAmM,MAAnLj0I,EAAIumF,WAAW,CAAC0xD,KAAKj+I,EAAQi+I,KAAKn4H,MAAM,KAAK,GAAGq5B,OAAO,GAAG1gD,GAAG,eAAe0O,QAAQnN,EAAQi+I,KAAKpF,YAAY,2BAA2B74I,EAAQi+I,KAAK9+F,OAAO,EAAE,IAAI,iBAAuBn5C,CAAG,CAAC,SAASk4I,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACxG,OAAO,GAAOmG,OAAK,EAAOE,EAAiBr8I,SAAQ,SAASy8I,GAAgBN,EAAKG,EAASj/F,OAAOm/F,EAAmBxG,OAAOyG,EAAezG,OAAOwG,EAAmBxG,SAAqC,UAA1ByG,EAAe//I,UAAoB6/I,GAAuC,QAA1BE,EAAe//I,WAAmB6/I,KAA0C,UAA1BE,EAAe//I,SAAoBw/I,EAA0B,CAACC,KAAKA,IAA3+B,SAAmCj+I,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,gBAAyL,MAAzKj0I,EAAIumF,WAAW,CAAC0xD,KAAKj+I,EAAQi+I,KAAKn4H,MAAM,KAAK,GAAGrnB,GAAG,eAAe0O,QAAQnN,EAAQi+I,KAAKpF,YAAY,2BAA2B74I,EAAQi+I,KAAK9+F,OAAO,EAAE,IAAI,iBAAuBn5C,CAAG,CAAsuBw4I,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAASp6I,OAAQi6I,EAAKG,EAASj/F,OAAOm/F,EAAmBxG,OAAOyG,EAAsBD,EAAmBxG,QAAWuG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAI7qI,EAAIrV,GAAU,IAAI6/B,EAAQ,GAAOy5G,GAAQ,EAAE,IAAiD,KAA9CA,EAAO4G,EAAIxzI,QAAQ2I,EAAIikI,EAAO,KAAmBz5G,EAAQl8B,KAAK,CAAC21I,OAAOA,EAAOt5I,SAASA,WAA4B,IAAVs5I,GAAa,OAAOz5G,CAAO,CAAC,SAASsgH,EAAOC,GAAmB,IAAI/D,EAAMh9I,KAAKA,KAAK+gJ,kBAAkBA,EAAkB/gJ,KAAKghJ,KAAK,GAAGhhJ,KAAKihJ,gBAAgB,SAAS1G,GAAYyC,EAAMgE,KAAKhE,EAAM+D,kBAAkBzyI,KAAK,IAAI,IAAI2rI,EAAO,EAAE+C,EAAMkE,OAAOlE,EAAM+D,kBAAkB5yI,KAAI,SAASmsI,GAA0B,OAApBL,GAAQK,EAAKn0I,QAAqBm0I,EAAKn0I,MAAM,IAAG,IAAIm6I,EAAiB/J,EAASuF,aAAa,CAAC8E,EAAc5D,EAAMgE,KAAKzG,EAAWroH,MAAM,SAAS0uH,EAAc5D,EAAMgE,KAAKzG,EAAWx1F,IAAI,SAASp3C,KAAKsyI,GAAYI,EAAuBC,EAAiBtD,EAAMgE,MAAM,IAAIG,EAAgB,CAACjvH,MAAMqoH,EAAWroH,MAAM/rB,OAAO4+C,IAAIw1F,EAAWx1F,IAAI5+C,QAAYi7I,EAAQ,EAAMC,EAAe,EAAErE,EAAMvkB,OAAOukB,EAAMkE,OAAO/yI,KAAI,SAAS8rI,EAAO5mI,GAAkI,IAA/H,IAAIysI,EAAM,CAAC7F,EAAOA,EAAOj6I,KAAK+gJ,kBAAkB1tI,GAAGlN,QAAYm7I,EAAYthJ,KAAK+gJ,kBAAkB1tI,GAAOkuI,EAAmB,GAASF,EAAef,EAAiBn6I,QAAQ05I,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmBj9I,KAAKg8I,EAAiBe,IAAiBA,IAAiB,IAAIr5H,EAAM,GAAOm3E,EAAO,EAAKiiD,EAAQ,IAAGjiD,EAAOiiD,EAAQA,EAAQ,GAAEG,EAAmBt9I,SAAQ,SAASu9I,GAAmB,IAAI7+I,EAAM2+I,EAAYhgG,OAAO69C,EAAOqiD,EAAkBvH,OAAOA,EAAO96C,GAAWx8F,EAAMwD,OAAO,GAAG6hB,EAAM1jB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQqlB,EAAM1jB,KAAK,CAAC1C,KAAK,YAAYjB,SAAS6gJ,EAAkB7gJ,WAAWw+F,EAAOqiD,EAAkBvH,OAAOA,EAAOkH,EAAgBK,EAAkB7gJ,SAAS,IAAGygJ,EAAQjiD,EAAOmiD,EAAYn7I,OAAO,IAAIxD,EAAM2+I,EAAYhgG,OAAO69C,GAAoE,OAAzDx8F,EAAMwD,OAAO,GAAG6hB,EAAM1jB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAeqlB,CAAK,GAAEg1H,EAAM,CAAC,CAACv9I,EAAOC,QAAQ,CAAC6X,MAAM,SAAekqI,EAAUlH,GAAY,IAAIyF,GAAU,EAAUe,EAAkB,GAAGU,EAAUx9I,SAAQ,SAASq2I,IAAM0F,EAAUD,EAAgBzF,EAAK0F,KAAqC,YAAZ1F,EAAK14I,MAAkBm/I,EAAkBz8I,KAAKg2I,EAAK33I,MAAO,IAAG,IAAIswE,EAAO,IAAI6tE,EAAOC,GAAmB9tE,EAAOguE,gBAAgB1G,GAAY,IAAImH,EAAS,GAAO31I,EAAM,EAAoW,OAAlW01I,EAAUx9I,SAAQ,SAASq2I,GAAM0F,EAAUD,EAAgBzF,EAAK0F,GAA0B,YAAZ1F,EAAK14I,OAAkB04I,EAAK35I,SAASq/I,EAAU,YAAY,cAAgBA,GAAuB,YAAZ1F,EAAK14I,MAAkBuL,MAAMgtC,UAAU71C,KAAKqlC,MAAM+3G,EAASzuE,EAAOwlD,OAAO1sH,GAAOoC,KAAI,SAAS2T,GAAiD,MAAlC,YAATA,EAAElgB,OAAkBkgB,EAAEnhB,SAAS,aAAmBmhB,CAAC,KAAI/V,KAAa21I,EAASp9I,KAAKg2I,EAAM,IAAUoH,CAAQ,EAAEC,SAAS,SAAkBxxE,EAAQyxE,GAAS,IAAIC,EAApgJ,SAAoB1xE,EAAQ2xE,EAAeC,GAAuU,IAArT,IAAI5iD,EAAO,EAAM6iD,EAAc7xE,EAAQhqE,OAAW87I,EAAW1L,EAASuF,aAAa,CAACgG,EAAe3zI,KAAI,SAAS2jH,GAAK,MAAM,CAACA,IAAIA,EAAIzjH,MAAK,EAAK,IAAG0zI,EAAiB5zI,KAAI,SAAS2jH,GAAK,MAAM,CAACA,IAAIA,EAAIzjH,MAAK,EAAM,MAAKuqI,QAAO,SAASqJ,EAAWtlH,GAA4B,OAAzBslH,EAAWtlH,EAAEm1F,KAAKn1F,EAAEtuB,KAAY4zI,CAAU,GAAE,CAAC,GAAOC,EAAa,GAAS/iD,EAAO6iD,IAA+D,KAAhD7iD,EAAOhvB,EAAQ9iE,QAAQ,IAAI8xF,KAA5B,CAA0D,IAAI86C,EAAO96C,EAAOA,EAAOhvB,EAAQ9iE,QAAQ,IAAI8xF,GAAQ,IAAIgjD,EAAQhyE,EAAQj9D,MAAM+mI,EAAO96C,EAAO,GAAOijD,EAAQlC,EAAOiC,GAASrwB,EAAIswB,EAAQtwB,IAAInxH,EAASyhJ,EAAQzhJ,SAAa0N,EAAK4zI,EAAWnwB,GAAc,MAANzjH,GAAqB6zI,EAAa59I,KAAK,CAAC1C,KAAK,MAAMjB,SAASA,EAAS0N,KAAKA,EAAK4rI,OAAOA,EAAOt3I,MAAMw/I,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAWlyE,EAAQyxE,EAAQvzI,KAAKuzI,EAAQU,OAAWnjD,EAAO,EAAMs5B,EAAOopB,EAAQjJ,QAAO,SAASngB,EAAOn1F,GAAO,IAAI3gC,EAAMwtE,EAAQ7uB,OAAO69C,EAAO77D,EAAM22G,OAAO96C,GAA4K,OAAjKx8F,EAAMwD,OAAO,GAAGsyH,EAAOn0H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQw8F,EAAO77D,EAAM22G,OAAO32G,EAAM3gC,MAAMwD,cAAcm9B,EAAM22G,OAAU32G,EAAM3gC,MAAMwD,OAAO,GAAGsyH,EAAOn0H,KAAKg/B,GAAcm1F,CAAM,GAAE,IAAQ91H,EAAMwtE,EAAQ7uB,OAAO69C,GAAqE,OAA1Dx8F,EAAMwD,OAAO,GAAGsyH,EAAOn0H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe81H,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAAS7iD,EAAQn2E,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiB6iJ,GAAM,IAAIC,EAAc3uI,KAAKC,UAAU2uI,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAIjsH,EAAKgsH,EAAczvI,WAAW,OAAOyjB,KAAQisH,EAAMA,EAAMjsH,GAAMisH,EAAMjsH,GAAM+rH,EAAK54G,MAAM3pC,KAAK+S,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS6iE,EAAQn2E,EAAOC,GAAS,aAAa,SAASgjJ,EAAiB3G,EAAOr0F,GAAuB,IAAhB,IAAIi7F,GAAU,EAAUtvI,EAAE,EAAEiB,EAAEynI,EAAO51I,OAAOkN,EAAEiB,EAAEjB,IAAQq0C,EAAMr0C,IAAI0oI,EAAO1oI,GAAGlN,UAAgC,IAAZw8I,GAAe5G,EAAO1oI,GAAGq0C,EAAMr0C,IAAI4mI,OAAO8B,EAAO4G,GAAUj7F,EAAMi7F,IAAW1I,UAAQ0I,EAAStvI,GAAG,IAAe,IAAZsvI,EAAe,MAAM,IAAIr6I,MAAM,qBAAqB,OAAOq6I,CAAQ,CAACljJ,EAAOC,QAAQ,SAASq8I,GAAQ,IAAI6G,EAAY7G,EAAOnD,QAAO,SAAS56F,EAAIg+F,GAAO,OAAOh+F,EAAIg+F,EAAM71I,MAAM,GAAE,GAAG41I,EAAOA,EAAOjzI,QAAO,SAASkzI,GAAO,OAAOA,EAAM71I,OAAO,CAAC,IAA6F,IAA1F,IAAI08I,EAAY,IAAI11I,MAAMy1I,GAAiBl7F,EAAMq0F,EAAO5tI,KAAI,WAAW,OAAO,CAAC,IAAOkF,EAAE,EAAQA,GAAGuvI,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiB3G,EAAOr0F,GAAOm7F,EAAYxvI,GAAG0oI,EAAO+G,GAAYp7F,EAAMo7F,IAAap7F,EAAMo7F,KAAczvI,GAAG,CAAC,OAAOwvI,CAAW,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASjtE,EAAQn2E,EAAOC,GAAS,aAAa,SAASqjJ,IAAW,CAAC,SAASC,EAAS3vI,GAAG,OAAOA,CAAC,CAAC5T,EAAOC,QAAQ,SAASD,GAAQ,IAAI2E,EAAS,CAACyV,IAAIkpI,EAASxrI,MAAMwrI,EAASh2E,OAAOg2E,EAASE,UAAUF,EAASnF,mBAAmBoF,EAAS/E,eAAe+E,EAASE,UAAUF,GAAU,GAAG7uI,OAAOC,KAAKhQ,GAAU++I,OAAM,SAAS9+I,GAAK,OAAO5E,EAAO4E,EAAI,IAAI,MAAM,IAAIiE,MAAM,2FAAgL,OAArF6L,OAAOC,KAAKhQ,GAAUH,SAAQ,SAASI,GAAK5E,EAAO4E,GAAK5E,EAAO4E,IAAMD,EAASC,EAAI,IAAU5E,CAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASm2E,EAAQn2E,EAAOC,GAAS,aAAa,IAA+B0jJ,EAAUxtE,EAAQ,gBAAoB2gE,EAAS3gE,EAAQ,gBAAoBinE,EAAQjnE,EAAQ,qBAAuDytE,EAArBztE,EAAQ,aAAyCytE,mBAAuBjJ,EAAOxkE,EAAQ,aAA+V,SAAS0tE,EAAkCnhJ,GAAS,IAAIs4H,EAAKt4H,EAAQs4H,KAAStyH,EAAI,IAAIiyI,EAAOgC,gBAAgB,0CAA4O,MAAlMj0I,EAAIumF,WAAW,CAAC9tF,GAAG,yCAAyCo6I,YAAY,YAAYvgB,EAAK,GAAG93H,MAAM,2BAA2B83H,EAAK,GAAG93H,MAAM,IAAI4gJ,WAAW9oB,EAAK,GAAG93H,MAAM6gJ,WAAW/oB,EAAK,GAAG93H,OAAawF,CAAG,CAAC,SAASs7I,EAAmBnJ,GAAM,OAAOA,EAAKoJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAIp7I,MAAM,uDAAuDgyI,EAAKoJ,SAAS,KAAK,CAAC,SAASC,EAASjH,GAAQ,GAAmB,IAAhBA,EAAOv2I,OAAY,MAAM,GAA4C,IAAzC,IAAIy9I,EAAU,EAAMC,EAAWnH,EAAO,GAAWrpI,EAAE,EAAEA,EAAEqpI,EAAOv2I,OAAOkN,IAAI,CAAC,IAAIywI,EAAapH,EAAOrpI,GAAoD,GAAe,KAAhEuwI,GAAWH,EAAmBK,EAAaxJ,OAAuB,CAAIwJ,EAAaxJ,KAAK33I,QAAQkhJ,EAAWvJ,KAAK33I,OAAiC,KAA1BmhJ,EAAaxJ,KAAK33I,OAAY2gJ,EAAkC,CAAC7oB,KAAK,CAACopB,EAAWvJ,KAAKwJ,EAAaxJ,QAAQ,IAAIyJ,EAAMJ,EAASjH,EAAOxpI,MAAMG,EAAE,IAC9v+B,MAAM,CAAC,CAACwwI,EAAWC,IAAev8H,OAAOw8H,EAAM,CAAC,CAAC,IAAIzJ,EAAKuJ,EAAWvJ,MAD857B,SAAqCn4I,GAAS,IAAIuhJ,EAASvhJ,EAAQuhJ,SAAa/mH,EAAa,UAAX+mH,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAev7I,EAAI,IAAIiyI,EAAOgC,gBAAgB4H,EAAE,SAAalyB,EAAI3vH,EAAQm4I,KAAK33I,MAA2F,MAArFwF,EAAIumF,WAAW,CAAC9tF,GAAG+7B,EAAE,QAAQq+G,YAAY,qBAAqBlpB,EAAI,OAAOn1F,EAAEyjH,KAAKtuB,GAAW3pH,CAAG,CAC1u8B87I,CAA4B,CAAC3J,KAAKA,EAAKoJ,SAASpJ,EAAKoJ,UAAU,CAAC,IAAItE,EAAgB,CAACj4I,KAAK,kBAAkB+7I,UAAU,SAAmBzqB,EAAOyrB,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAAcxG,EAAOuG,EAD+86B,aAC376BxqB,GAAQikB,EAAOA,EAAOvuI,KAAI,SAASi2I,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnCjH,EAAO0G,EAAU1G,IAAuC4H,EAAcD,EAAMl2I,KAAI,SAASo2I,GAAM,IAAIC,EAASD,EAAK,GAAGjK,KAAKkK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmB5qB,EAAOvlH,MAAMqxI,EAAK,GAAGtK,OAAOsK,EAAK,GAAGtK,UAAauK,EAA4K,CAAnHjO,EAAS7zF,QAAQ+1E,EAAO+rB,EAASD,EAAK,GAAGtK,QAAkB1D,EAAS5zF,SAAS81E,EAAO+rB,EAASD,EAAK,GAAGtK,SAA9I,CAACsK,EAAK,GAAGtK,OAAOsK,EAAK,GAAGtK,OAAgJ,IAAOwK,EAAiB,EAAMC,OAAW,EAAO,OAAOjsB,EAAOmgB,QAAO,SAAS+L,EAAUrK,EAAKjnI,GAAG,IAAIuxI,EAAOH,EAAiBJ,EAAMl+I,QAAQm+I,EAAcG,GAAkB,IAAIpxI,EAAMkxI,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAUrgJ,KAAKg2I,GAAaqK,EAAiH,GAApGE,EAAa,KAAKxxI,IAAGqxI,EAAW,IAAMH,EAAK,GAAGtK,SAAS5mI,GAAGkxI,EAAK,GAAGtK,SAAS5mI,GAAGqxI,EAAWpgJ,KAAKg2I,GAASuK,EAAa,KAAKxxI,EAAE,CAAC,IAAIyxI,EAASrsB,EAAO8rB,EAAK,GAAGtK,eAAe6K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAUrgJ,KAAKwgJ,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAGllJ,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQuC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,GAAG,oBAAoB,GAAG,YAAY,KAAK,GAAG,CAAC,SAASxpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,gBAAoBovE,EAAe,oBAAwBnI,EAAQjnE,EAAQ,qBAAyBqvE,EAAW,OAAWhG,EAAW,CAAC93I,KAAK,aAAaoQ,MAAM,SAAe2tI,GAAoB,IAAIzlJ,EAAOwlJ,EAAerjJ,EAAK,cAAc,MAA2B,MAAxBsjJ,EAAmB,GAAgB,CAACtjJ,KAAKA,EAAKe,MAAMuiJ,EAAmB5jG,OAAO,GAAGkjG,SAAS,OAAO/kJ,OAAOA,EAAOikJ,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAACtjJ,KAAKA,EAAKe,MAAMuiJ,EAAmB5jG,OAAO,GAAGkjG,SAAS,OAAO/kJ,OAAOA,EAAOikJ,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAACtjJ,KAAKA,EAAKe,MAAMuiJ,EAAmB5jG,OAAO,GAAG7hD,OAAOA,EAAOikJ,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAACtjJ,KAAKA,EAAKe,MAA9HuiJ,EAAmBlyI,QAAQgyI,EAAe,MAAgGR,SAA7EU,EAAmBlyI,QAAQgyI,EAAe,MAAqDvlJ,OAAOA,EAAOikJ,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAU3sB,GAAQ,GAAe,eAAZ2sB,EAAiC,OAAO3sB,EAAOmgB,QAAO,SAASne,EAAK6f,EAAKL,GAAqG,MAA9E,gBAAZK,EAAK14I,MAAsB04I,EAAK76I,SAASwlJ,GAAYxqB,EAAKn2H,KAAK,CAACg2I,KAAKA,EAAKL,OAAOA,IAAgBxf,CAAI,GAAE,GAAG,EAAE1tD,OAAO,SAAgButE,EAAKn4I,GAAS,GAAgB,iBAAZm4I,EAAK14I,MAAsB04I,EAAK76I,SAASwlJ,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjEljJ,EAAQmjJ,aAAaC,SAASjL,EAAK33I,OAAzQ,SAAkBovH,GAAO,IAAIuzB,EAAanjJ,EAAQmjJ,aAAaE,sBAAsBzzB,EAAMuoB,EAAK33I,OAAO0iJ,EAAW/gJ,KAAKnC,EAAQ4qE,OAAOwpE,EAASiE,aAAa,CAAC,EAAEr4I,EAAQ,CAAC26I,SAASxC,EAAKyK,UAAUtqB,KAAK,CAAC,EAAE6qB,aAAaA,KAAgB,GAAmDhL,EAAK6K,UAAgB,CAACxiJ,MAAM0iJ,EAAW/2I,KAAK,IAAI,GAAG7O,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQoC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAASrpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS3gE,EAAQ,gBAAoBwkE,EAAOxkE,EAAQ,aAAiBqvE,EAAW,SAAapI,EAAQjnE,EAAQ,qBAAkW,SAAS6vE,EAASvB,GAAM,IAAI5J,EAAK4J,EAAK5J,KAAKhqC,EAAK4zC,EAAK5zC,KAAK7L,EAAMy/C,EAAKz/C,MAAMihD,EAAWxB,EAAKwB,WAAW35I,EAAMm4I,EAAKn4I,MAAU45I,EAAeD,EAAWxyI,MAAMo9F,EAAK,EAAE7L,GAAsO,OAA/NkhD,EAAe1hJ,SAAQ,SAAS6d,EAAEzO,GAAMA,IAAItH,EAAMukG,EAAK,IAAsB,gBAATxuF,EAAElgB,MAA+B,YAATkgB,EAAElgB,MAA+B,cAAbkgB,EAAEnhB,WAAxmB,SAAgDwB,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,gDAAoDtqB,EAAI3vH,EAAQm4I,KAAK33I,MAAkK,MAA5JwF,EAAIumF,WAAW,CAAC9tF,GAAG,+CAA+Co6I,YAAY,WAAWlpB,EAAIsuB,KAAKj+I,EAAQm4I,KAAK33I,MAAMgjJ,eAAexjJ,EAAQwjJ,gBAAsBx9I,CAAG,CAAoTy9I,CAAuC,CAACD,eAAeA,EAAerL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIuL,EAAa,WAAW,SAASA,KAA5hC,SAAyBh+F,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgB93I,KAAK6lJ,GAAc7lJ,KAAKmH,KAAK,cAAc,CAAyvB,OAAxvBwvI,EAAakP,EAAa,CAAC,CAACxhJ,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQu0I,GAAgE,OAAjD12I,KAAKi9I,eAAevG,EAAcuG,eAAsB96I,CAAO,GAAG,CAACkC,IAAI,QAAQ1B,MAAM,SAAeuiJ,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAACtjJ,KAAjE,cAA2Ee,MAAMuiJ,EAAmB5jG,OAAO,GAAG7hD,OAAOwlJ,EAAW,GAAG,CAAC5gJ,IAAI,YAAY1B,MAAM,SAAmB81H,GAAQ,OAAO8d,EAASmG,OAAOoJ,YAAYrtB,EAAO,CAACwsB,WAAWA,EAAWQ,SAASA,EAASjB,SAASxkJ,KAAKi9I,eAAeuC,WAAW,GAAG,CAACn7I,IAAI,SAAS1B,MAAM,SAAgB23I,EAAKn4I,GAAS,GAAGm4I,EAAK76I,SAASwlJ,EAAY,OAAO,KAAK,IAAItiJ,EAAMR,EAAQmjJ,aAAar5I,SAASquI,EAAK33I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQk4I,WAAWC,IAAY,CAAC33I,MAAMA,EAAM,KAAYkjJ,CAAY,CAA12B,GAA82BpmJ,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQ,IAAIgJ,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAASjwE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI2F,EAAQjnE,EAAQ,qBAAyBmwE,EAAO,WAAW,SAASA,KAAxN,SAAyBl+F,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgB93I,KAAK+lJ,GAAQ/lJ,KAAKmH,KAAK,QAAQ,CAA4V,OAA3VwvI,EAAaoP,EAAO,CAAC,CAAC1hJ,IAAI,MAAM1B,MAAM,SAAamV,GAAQA,EAAIglI,WAAU98I,KAAK88I,SAAShlI,EAAIglI,UAAsB,MAAVhlI,EAAIjO,OAAY7J,KAAK6J,KAAKiO,EAAIjO,KAAK,GAAG,CAACxF,IAAI,iBAAiB1B,MAAM,SAAwBq7I,GAAQ,IAAIhB,EAAMh9I,KAAK,OAAOmU,OAAOC,KAAKpU,KAAK88I,UAAUlE,QAAO,SAASoF,EAAOx2G,GAA+C,OAAzCw2G,EAAOx2G,GAAM,CAACA,KAAKA,EAAK39B,KAAKmzI,EAAMnzI,MAAam0I,CAAM,GAAEA,EAAO,KAAY+H,CAAM,CAArb,GAAybtmJ,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQ,IAAIkJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAASnwE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIm9I,EAAQjnE,EAAQ,qBAAyBowE,EAAc,CAAC7+I,KAAK,sBAAsB+7I,UAAU,SAAmBzqB,GAAQ,IAAIvzE,EAAM,GAAO+gG,GAAQ,EAAUn4I,EAAO2qH,EAAOmgB,QAAO,SAASngB,EAAO6hB,GAA8X,MAAzW,QAAZA,EAAK14I,MAA8B,UAAhB04I,EAAK35I,UAAoB25I,EAAKjsI,MAAmB,UAAbisI,EAAK33I,QAAiBsjJ,GAAQ,GAAQA,GAAwB,gBAAZ3L,EAAK14I,MAAuB04I,EAAK76I,SAAQylD,EAAM,GAAGviD,MAAM,8BAA6BuiD,EAAM5gD,KAAKg2I,IAAW7hB,EAAOn0H,KAAKg2I,GAAqB,QAAZA,EAAK14I,MAA8B,QAAhB04I,EAAK35I,UAAkB25I,EAAKjsI,MAAmB,WAAbisI,EAAK33I,QAAkBwK,MAAMgtC,UAAU71C,KAAKqlC,MAAM8uF,EAAOvzE,GAAO+gG,GAAQ,EAAM/gG,EAAM,IAAUuzE,CAAM,GAAE,IAA6C,OAAzCtrH,MAAMgtC,UAAU71C,KAAKqlC,MAAM77B,EAAOo3C,GAAcp3C,CAAM,GAAGrO,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQmJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAASpwE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,eAAmBM,EAAO,CAACgtE,UAAU,SAAmBzqB,EAAOskB,GAAS,SAASkG,EAAUmC,EAAU3sB,GAAQ,OAAOskB,EAAQ5uI,KAAI,SAAS1O,GAAQ,OAAOA,EAAOwjJ,UAAUmC,EAAU3sB,EAAO,GAAE,CAA6J,OAA5J,SAASyqB,EAAUzqB,GAAQ,OAAOskB,EAAQnE,QAAO,SAASngB,EAAOh5H,GAAQ,OAAOA,EAAOyjJ,UAAUzqB,EAAO,CAACyqB,UAAUA,EAAUD,UAAUA,GAAW,GAAExqB,EAAO,CAAQyqB,CAAUzqB,EAAO,EAAElhH,MAAM,SAAe2uI,EAAMnJ,GAAyQ,IAAIoJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMtN,QAAO,SAASngB,EAAO4tB,GAAO,MAAgB,cAAbA,EAAMzkJ,MAAoBukJ,EAA+B,UAAjBE,EAAM1lJ,SAAuC,QAAjB0lJ,EAAM1lJ,UAA/b,SAAqBukJ,EAAmBzsB,GAAgC,IAAxB,IAAI6tB,OAAa,EAAejzI,EAAE,EAAEiB,EAAEyoI,EAAQ52I,OAAOkN,EAAEiB,EAAEjB,IAA2E,GAA/CizI,EAAXvJ,EAAQ1pI,GAAwBkE,MAAM2tI,GAA+D,OAA1BzsB,EAAOn0H,KAAKgiJ,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmB3O,EAASqF,WAAWsJ,GAAuDzsB,IAASA,EAAOn0H,KAAK,CAAC1C,KAAK,cAAce,MAAMuiJ,IAAqB/3I,MAAMgtC,UAAU71C,KAAKqlC,MAAM8uF,EAAO2tB,GAAWA,EAAU,GAAU3tB,IAAOysB,EAAmB,GAAUzsB,IAAU0tB,GAA+B,YAAbE,EAAMzkJ,MAAmC,cAAjBykJ,EAAM1lJ,SAAwBukJ,GAAoBmB,EAAM1jJ,MAAWyjJ,EAAU9hJ,KAAK+hJ,GAAc5tB,IAAOA,EAAOn0H,KAAK+hJ,GAAc5tB,EAAM,GAAE,GAAG,GAAGh5H,EAAOC,QAAQw2E,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASN,EAAQn2E,EAAOC,GAAS,aAAa,IAAI8mJ,EAAa5wE,EAAQ,mBAAuB2gE,EAAS3gE,EAAQ,eAAu1Bn2E,EAAOC,QAAjmB,SAASqtE,EAAO5qE,GAA2J,OAAlJA,EAAQ4qE,OAAOA,EAAO5qE,EAAQ46I,QAAQ56I,EAAQ46I,QAAY56I,EAAQmjJ,eAAcnjJ,EAAQmjJ,aAAakB,EAAaC,uBAAuBtkJ,IAAgBA,EAAQ26I,SAAS3uI,KAAI,SAASmsI,GAAM,IAAIoM,EAAxc,SAAsBpM,EAAKn4I,GAAmC,IAA1B,IAAIukJ,OAAe,EAAerzI,EAAE,EAAEiB,EAAEnS,EAAQ46I,QAAQ52I,OAAOkN,EAAEiB,EAAEjB,IAAgF,GAA5CqzI,EAAnBvkJ,EAAQ46I,QAAQ1pI,GAA0B05D,OAAOutE,EAAKn4I,GAA4B,OAAOukJ,EAAgB,OAAO,CAAK,CAA0OC,CAAarM,EAAKn4I,GAAS,GAAGukJ,EAAgB,OAAOA,EAAe/jJ,MAAM,GAAe,gBAAZ23I,EAAK14I,KAAqB,CAAC,IAAIe,EAAMR,EAAQmjJ,aAAar5I,SAASquI,EAAK33I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQk4I,WAAWC,IAAa/D,EAASsF,WAAWl5I,EAAM,CAAC,GAAe,YAAZ23I,EAAK14I,MAA8B,QAAZ04I,EAAK14I,KAAc,OAAO04I,EAAK33I,MAAM,MAAM,IAAI2F,MAAM,2BAA2BgyI,EAAK14I,KAAK,IAAI,IAAG0M,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASsnE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIkD,EAAOxkE,EAAQ,YAAgB4wE,EAAa,WAAW,SAASA,EAAarkJ,IAAjO,SAAyB0lD,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgB93I,KAAKwmJ,GAAcxmJ,KAAK4mJ,UAAUzkJ,EAAQykJ,UAAU5mJ,KAAKg0B,UAAU7xB,EAAQ6xB,UAAUh0B,KAAKk2E,OAAO/zE,EAAQ+zE,MAAM,CAAmmE,OAAlmEygE,EAAa6P,EAAa,CAAC,CAACniJ,IAAI,WAAW1B,MAAM,SAAkBmvH,EAAIjgH,EAASszI,GAAmC,OAAzBA,EAASA,IAAU,EAAanlJ,KAAK6mJ,cAAc7mJ,KAAKiM,SAAS6lH,GAAKjgH,EAASszI,EAAS,GAAG,CAAC9gJ,IAAI,oBAAoB1B,MAAM,SAA2BwiJ,EAAS2B,EAAQnkJ,GAAUwiJ,GAAU2B,EAAQnkJ,EAAO,GAAG,CAAC0B,IAAI,eAAe1B,MAAM,SAAsBA,EAAMf,GAAM,OAAc,MAAPe,IAAcA,GAAc,mBAAPf,GAAwC,IAAfe,EAAMwD,MAAU,GAAG,CAAC9B,IAAI,gBAAgB1B,MAAM,SAAuBA,EAAMmkJ,EAAQ3B,GAAU,IAAIvjJ,EAAKuS,OAAOgmC,UAAUzlC,SAAS0lC,KAAKz3C,GAAWokJ,EAAa/mJ,KAAKg0B,UAAUh0B,KAAKgnJ,KAAK,GAAGhnJ,KAAKinJ,aAAatkJ,EAAMf,GAAO,OAAO5B,KAAKknJ,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAPnlJ,EAAqI,MAAU,oBAAPA,EAAiC5B,KAAKknJ,mBAAmB/B,EAAS2B,EAAQnkJ,IAAkB,IAARA,EAAqB3C,KAAKknJ,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQh1B,EAAJ1+G,EAAE,EAAQA,EAAE1Q,EAAMwD,OAAOkN,IAAK0+G,EAAMpvH,EAAM0Q,GAAGrT,KAAKknJ,mBAAmB/B,EAAS2B,EAAQ/0B,EAAiL,GAAG,CAAC1tH,IAAI,WAAW1B,MAAM,SAAkBmvH,EAAIk1B,GAAKhnJ,KAAKgnJ,IAAS,MAALA,EAAUhnJ,KAAKg0B,UAAU7tB,OAAO,EAAE6gJ,EAAI,IAAI7+I,OAAI,EAAW+tE,OAAO,EAAWpoE,OAAO,EAAWikH,EAAM/xH,KAAKg0B,UAAUh0B,KAAKgnJ,KAAK,IAAI9wE,EAAOl2E,KAAKk2E,OAAO47C,EAAkP,CAA7O,MAAMviH,GAA8N,MAAvNpH,EAAI,IAAIiyI,EAAO2E,mBAAmB,oCAAuCrwD,WAAW,CAAC9tF,GAAG,iCAAiCkxH,IAAIA,EAAIkpB,YAAY,gCAAgClpB,EAAI,qBAAqBq1B,UAAU53I,GAAapH,CAAG,CAAC,IAAI2F,EAAOooE,EAAOvgE,IAAIo8G,EAAM,CAACi1B,IAAIhnJ,KAAKgnJ,IAAIhzH,UAAUh0B,KAAKg0B,WAAiQ,CAArP,MAAMzkB,GAAsO,MAA/NpH,EAAI,IAAIiyI,EAAO2E,mBAAmB,kCAAqCrwD,WAAW,CAAC9tF,GAAG,+BAA+Bo6I,YAAY,gCAAgClpB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAIq1B,UAAU53I,GAAapH,CAAG,CAAC,OAAW,MAAR2F,GAAc9N,KAAKgnJ,IAAI,EAAUhnJ,KAAKiM,SAAS6lH,EAAI9xH,KAAKgnJ,IAAI,GAAUl5I,CAAM,GAAG,CAACzJ,IAAI,wBAAwB1B,MAAM,SAA+BovH,EAAMD,GAAK,IAAI3vH,EAAQ,CAACykJ,UAAU5mJ,KAAK4mJ,UAAU1zI,MAAM,GAAG8gB,UAAUh0B,KAAKg0B,UAAU9gB,MAAM,IAA2H,OAAvH/Q,EAAQ+zE,OAAOl2E,KAAKk2E,OAAO/zE,EAAQ6xB,UAAUh0B,KAAKg0B,UAAUzM,OAAOwqG,GAAO5vH,EAAQykJ,UAAU5mJ,KAAK4mJ,UAAUr/H,OAAOuqG,GAAY,IAAI00B,EAAarkJ,EAAQ,KAAYqkJ,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAIhuE,EAAOguE,EAAKhuE,OAAOukD,EAAKypB,EAAKzpB,KAASt4H,EAAQ,CAAC+zE,OAAOA,EAAOukD,KAAKA,EAAMt4H,UAAkB,IAA4B,OAAzBA,EAAQ6xB,UAAU,CAACymG,GAAa,IAAI+rB,EAAarkJ,EAAQ,EAAE1C,EAAOC,QAAQ8mJ,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAAS5wE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,eAAmBwkE,EAAOxkE,EAAQ,YAAgR,SAASwxE,EAAiBpL,EAAMlqB,GAAK,GAAkB,IAAfkqB,EAAM71I,OAAY,OAAO,EAAM,IAAsCkhJ,EAA1BrL,EAAMA,EAAM71I,OAAO,GAA4B2rH,IAAIxwE,OAAO,GAAOgmG,EAAgBx1B,EAAIxwE,OAAO,EAAEwwE,EAAI3rH,OAAO,GAAG,OAA+C,IAAxCkhJ,EAAah6I,QAAQi6I,EAAoB,CAAC,SAASC,EAAOvL,EAAMlqB,GAA2B,OAAtBkqB,EAAM13I,KAAK,CAACwtH,IAAIA,IAAakqB,CAAK,CAAqkB,SAASwL,EAAUlN,EAAKoL,EAAWvjJ,GAAS,IAAIqiJ,EAASlK,EAAKkK,UAAUriJ,EAAQqiJ,SAAaz4I,EAAM25I,EAAWr4I,QAAQitI,GAAM,IAAIkK,EAAU,OAAOkB,EAAW,IAAIjhD,OAAM,EAAO6L,OAAK,EAAO,IAAI7L,EAAM8xC,EAAS5zF,SAAS+iG,EAAWlB,EAASz4I,GAAOukG,EAAKimC,EAAS7zF,QAAQgjG,EAAWlB,EAASz4I,EAAkF,CAA3E,MAAMo7I,IAA75C,SAAmChlJ,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,4BAAgCtqB,EAAI3vH,EAAQm4I,KAAK33I,MAA0H,MAApHwF,EAAIumF,WAAW,CAAC9tF,GAAG,2BAA2Bo6I,YAAY,YAAYlpB,EAAI,IAAIq1B,UAAUhlJ,EAAQglJ,UAAU/G,KAAKtuB,GAAW3pH,CAAG,CAAqqCs/I,CAA0B,CAACnN,KAAKA,EAAK6M,UAAUA,GAAW,CAAC,IAAIO,EAAUhC,EAAWxyI,MAAMo9F,EAAKvkG,GAAW47I,EAAWjC,EAAWxyI,MAAMnH,EAAM,EAAE04F,EAAM,GAAOmjD,EAAMzlJ,EAAQsjJ,SAAS,CAAC15I,MAAMA,EAAMuuI,KAAKA,EAAKoN,UAAUA,EAAUC,WAAWA,EAAWr3C,KAAKA,EAAK7L,MAAMA,EAAMihD,WAAWA,IAA2H,MAArD,mBAAhDvxI,OAAOgmC,UAAUzlC,SAAS0lC,KAAKwtG,KAAmCA,EAAMrR,EAASuF,aAAa8L,IAAcrR,EAASuF,aAAa,CAAC4J,EAAWxyI,MAAM,EAAEo9F,GAAM,CAACs3C,GAAOlC,EAAWxyI,MAAMuxF,EAAM,IAAI,CAA4ThlG,EAAOC,QAAQ,CAAComJ,YAA3U,SAAqBJ,EAAWvjJ,GAAyQ,OAA3OujJ,EAAW9M,QAAO,SAAS1vI,EAASoxI,GAA0F,MAArE,gBAAZA,EAAK14I,MAAsB04I,EAAK76I,SAAS0C,EAAQ8iJ,YAAY/7I,EAAS5E,KAAKg2I,GAAapxI,CAAQ,GAAE,IAAqBjF,SAAQ,SAASq2I,GAAMoL,EAAW8B,EAAUlN,EAAKoL,EAAWvjJ,EAAQ,IAAUujJ,CAAU,EAAyCrC,mBAAn1C,SAA4Br7H,GAAiD,IAA1C,IAAI6/H,EAAvZ,SAA4B7/H,GAA4H,IAArH,IAAiI8pG,EAA7H2I,EAAKzyG,EAAMlf,QAAO,SAASwxI,GAAM,MAAmB,QAAZA,EAAK14I,IAAY,IAAGuM,KAAI,SAASmsI,GAAM,OAAOA,EAAK33I,KAAK,IAAOmL,EAAO,GAAWuF,EAAE,EAAMA,EAAEonH,EAAKt0H,OAAOkN,IAA6B,OAAxBy+G,EAAI2I,EAAKpnH,IAAU,GAAa+zI,EAAiBt5I,EAAOgkH,GAAMhkH,EAAOogC,MAAWpgC,EAAOy5I,EAAOz5I,EAAOgkH,GAAkC,MAApBA,EAAIA,EAAI3rH,OAAO,KAAU2H,EAAOy5I,EAAOz5I,EAAOgkH,IAAM,OAAOhkH,CAAM,CAAoDg6I,CAAmB9/H,GAAe3U,EAAE,EAAEA,EAAEw0I,EAAY1hJ,OAAOkN,IAAmC,GAAqC,IAApDw0I,EAAYx0I,GAAiBy+G,IAAIzkH,QAAQ,SAAc,MAAM,OAAQ,OAAO,CAAK,EAAsqC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASuoE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,eAAo7C,IAAImyE,EAA75CnyE,EAAQ,YAA85CskE,EAAxe,SAAoB/pE,EAAQ63E,GAAc,IAAI5tI,EAAI,CAAC,EAAEA,EAAI+1D,QAAQA,EAAQ/1D,EAAI4tI,aAAaA,EAAa5tI,EAAI6tI,mBAAmB7tI,EAAI4tI,aAAa15I,KAAK,KAAK,IAAI+1C,EAAO,IAAIjiC,OAAO,QAAQhI,EAAI6tI,mBAAmB,wBAAwB7tI,EAAI6tI,mBAAmB,KAAK,KAAyL,OAApL7tI,EAAIynI,QAAQtL,EAAS8F,aAAah4F,EAAOjqC,EAAI+1D,SAAS/1D,EAAI8tI,0BAA0B9tI,EAAIynI,QAAQ1zI,KAAI,WAAW,OAAO,CAAC,IAAGiM,EAAI+tI,gBAAgB/tI,EAAIynI,QAAQ1zI,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6BiM,GAAK,SAASguI,IAAkB,IAAIC,EAAG,CAACrM,MAAM7uI,MAAMgtC,UAAUjnC,MAAMknC,KAAKrnC,YAAYs1I,EAAGrM,MAAMznI,QAAQ,IAAI+uB,EAAM+kH,EAAGrM,MAAM,GAAGqM,EAAGrM,MAAM,GAAGqM,EAAGrM,MAAMnvG,QAAQvJ,GAAO+kH,EAAGrM,MAAM9tG,MAAM,IAAI+rG,EAAOoO,EAAGrM,MAAM9tG,MAA4F,OAAtFm6G,EAAGpO,OAAOA,EAAOoO,EAAG3rH,OAAM,EAAKtiB,EAAIynI,QAAQh1G,QAAQw7G,GAAIjuI,EAAI+tI,gBAAgBt7G,QAAQ,GAAUzyB,EAAI8tI,0BAA0Br7G,QAAQ,EAAE,EAAgC,IAA5BzyB,EAAI+1D,QAAQ9iE,QAAQ,OAAuC,IAA5B+M,EAAI+1D,QAAQ9iE,QAAQ,MAAW+M,EAAI+1D,QAAQn9D,QAAQ,eAAeo1I,GAAiB,IAAIx4I,EAAE,IAAIwS,OAAO,kBAAkBhI,EAAI6tI,mBAAmB,MAAmY,OAA7X7tI,EAAI+1D,QAAQn9D,QAAQpD,EAAEw4I,GAAmQx4I,EAAE,IAAIwS,OAAO,QAAQhI,EAAI6tI,mBAAmB,oBAAoB7tI,EAAI+1D,QAAQn9D,QAAQpD,GAAtU,WAAwB,IAAIy4I,EAAG,CAACrM,MAAM7uI,MAAMgtC,UAAUjnC,MAAMknC,KAAKrnC,YAAYs1I,EAAGrM,MAAM9tG,MAAM,IAAI+rG,EAAOoO,EAAGrM,MAAM9tG,MAAqF,OAA/Em6G,EAAGpO,OAAOA,EAAOoO,EAAGC,MAAK,EAAKluI,EAAIynI,QAAQv9I,KAAK+jJ,GAAIjuI,EAAI+tI,gBAAgB7jJ,KAAK,GAAU8V,EAAI8tI,0BAA0B5jJ,KAAK,EAAE,IAA4G8V,CAAG,CAAmcmuI,CAAoBnuI,EAAI,IAAkC3a,EAAOC,QAAQ,SAASywE,EAAQ63E,GAAc,OAAOzR,EAAS7wI,UAAUqiJ,EAAS53E,EAAQ63E,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAASpyE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS3gE,EAAQ,eAAmB4wE,EAAa5wE,EAAQ,mBAAuB4yE,EAAW5yE,EAAQ,iBAAqBwkE,EAAOxkE,EAAQ,YAAgB6yE,EAAM7yE,EAAQ,WAAe8yE,EAAO9yE,EAAQ,eAAmB+yE,EAAQ/yE,EAAQ,eAAmPn2E,EAAOC,QAAQ,WAAW,SAAS++I,EAAatuE,EAAQhuE,IAArqB,SAAyB0lD,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgB93I,KAAKy+I,GAAcz+I,KAAK4oJ,SAASzmJ,GAASnC,KAAK6oJ,WAAW,CAACC,QAAQ,CAACxK,SAASt+I,KAAKs+I,YAAYt+I,KAAK8yB,KAAKq9C,EAAQ,CAAwsD,OAAvsDwmE,EAAa8H,EAAa,CAAC,CAACp6I,IAAI,OAAO1B,MAAM,SAAcwtE,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAIhoE,EAAI,IAAIiyI,EAAO4E,gBAAgB,4BAAoF,MAAxD72I,EAAIumF,WAAW9tF,GAAG,sCAA4CuH,CAAG,CAACnI,KAAKmwE,QAAQA,CAAO,GAAG,CAAC9rE,IAAI,UAAU1B,MAAM,SAAiB83H,GAA8H,OAAxHz6H,KAAKy6H,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAEz6H,KAAKslJ,aAAakB,EAAaC,uBAAuB,CAAChsB,KAAKz6H,KAAKy6H,KAAKvkD,OAAOl2E,KAAKk2E,SAAgBl2E,IAAI,GAAG,CAACqE,IAAI,WAAW1B,MAAM,SAAkBR,GAASnC,KAAKs+I,SAASn8I,EAAQm8I,SAASt+I,KAAK+8I,QAAQ56I,EAAQ46I,QAAQ/8I,KAAKi9I,eAAe96I,EAAQ86I,eAAe9oI,OAAOC,KAAKmiI,EAASnyI,UAAU+J,KAAI,SAAS9J,GAAKrE,KAAKqE,GAAmB,MAAdlC,EAAQkC,GAAWlC,EAAQkC,GAAKkyI,EAASnyI,SAASC,EAAI,GAAErE,KAAK,GAAG,CAACqE,IAAI,cAAc1B,MAAM,WAAuB,OAA/nCwtE,EAAmpCnwE,KAAKmwE,QAAhpC63E,EAAwpChoJ,KAAKi9I,eAAeqC,iBAA7mCxxI,EAArC06I,EAAWr4E,EAAQ63E,GAAiCnG,QAAQ1zI,KAAI,SAASm1B,GAAO,OAAOA,EAAM04G,MAAM,EAAE,IAAUzF,EAASqF,WAAWrF,EAASwE,cAAcjtI,EAAOQ,KAAK,MAA9N,IAAsB6hE,EAAQ63E,EAA+Dl6I,CAA8nC,GAAG,CAACzJ,IAAI,aAAa1B,MAAM,SAAoBmV,GAAK9X,KAAK+8I,QAAQ94I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI/B,EAAI,GAAE,GAAG,CAACzT,IAAI,QAAQ1B,MAAM,WAAyc,OAAxb3C,KAAK+oJ,SAASN,EAAM9G,SAAS3hJ,KAAKmwE,QAAQ,CAAC9hE,KAAKrO,KAAKi9I,eAAeqC,iBAAiBgD,MAAMtiJ,KAAKi9I,eAAesC,oBAAoBv/I,KAAK6oJ,WAAW,CAACC,QAAQ,CAACC,SAAS/oJ,KAAK+oJ,YAAY/oJ,KAAKkmJ,MAAMuC,EAAMlxI,MAAMvX,KAAK+oJ,SAAS/oJ,KAAKu6I,YAAYv6I,KAAK6oJ,WAAW,CAACC,QAAQ,CAAC5C,MAAMlmJ,KAAKkmJ,SAASlmJ,KAAKy4H,OAAOiwB,EAAOnxI,MAAMvX,KAAKkmJ,MAAMlmJ,KAAK+8I,SAAS/8I,KAAK6oJ,WAAW,CAACC,QAAQ,CAACrwB,OAAOz4H,KAAKy4H,UAAUz4H,KAAK0lJ,WAAWgD,EAAOxF,UAAUljJ,KAAKy4H,OAAOz4H,KAAK+8I,SAAgB/8I,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAsR,OAApQ3C,KAAK6oJ,WAAW,CAACC,QAAQ,CAACpD,WAAW1lJ,KAAK0lJ,cAAc1lJ,KAAKmwE,QAAQw4E,EAAQ,CAAC7L,SAAS98I,KAAK0lJ,WAAWjrB,KAAKz6H,KAAKy6H,KAAKsiB,QAAQ/8I,KAAK+8I,QAAQ7mE,OAAOl2E,KAAKk2E,OAAOmkE,WAAWr6I,KAAKq6I,WAAWiE,SAASt+I,KAAKs+I,WAAWt+I,KAAK6oJ,WAAW,CAACC,QAAQ,CAAC34E,QAAQnwE,KAAKmwE,WAAkBnwE,IAAI,KAAYy+I,CAAY,CAA74D,EAAg5D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS7oE,EAAQn2E,EAAOC,GAAS,SAASwyE,EAAU/vE,GAASnC,KAAKmC,QAAQA,GAAS,CAAC6mJ,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAajpJ,KAAKkpJ,OAAM,CAAK,CAAC,SAASvoJ,EAASqoJ,EAAQzmJ,GAAMA,EAAK4mJ,WAAWH,EAAQG,WAAW5mJ,EAAK6mJ,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAAS/0I,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAEg1I,UAAU,IAAI,UAAUh1I,EAAE60I,WAAW,QAAQ70I,EAAE80I,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMt3H,EAAM/rB,GAAQ,MAAiB,iBAAPqjJ,EAAwBA,EAAMloG,OAAOpvB,EAAM/rB,GAAgBqjJ,EAAMrjJ,QAAQ+rB,EAAM/rB,GAAQ+rB,EAAc,IAAIu3H,KAAK5kF,KAAK3pD,OAAOsuI,EAAMt3H,EAAM/rB,GAAQ,GAAUqjJ,CAAM,CAAiP,SAASE,EAAcC,EAAOpnJ,GAAUonJ,EAAOC,eAAkDD,EAAOC,eAAeh/D,YAAYroF,GAApEonJ,EAAOz4B,IAAItmC,YAAYroF,EAAmD,CAA3/I2vE,EAAU/3B,UAAUi4B,gBAAgB,SAASy3E,EAAOl3B,GAAU,IAAIxwH,EAAQnC,KAAKmC,QAAY2nJ,EAAI,IAAIC,EAAcC,EAAW7nJ,EAAQ6nJ,YAAY,IAAIf,EAAe9N,EAAah5I,EAAQg5I,aAAiB6N,EAAQ7mJ,EAAQ6mJ,QAAYiB,EAAa9nJ,EAAQ+nJ,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAI3O,aAA2a,SAA2BuP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI7O,EAAa,CAAC,EAAMwP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMxmJ,GAAK,IAAIqM,EAAGg6I,EAAUrmJ,IAASqM,GAAIi6I,IAAYj6I,EAAqB,GAAlBg6I,EAAUvkJ,OAAU,SAAS4Y,GAAK2rI,EAAUrmJ,EAAI0a,EAAI,EAAE2rI,GAAUvP,EAAa92I,GAAKqM,GAAI,SAASqO,GAAKrO,EAAG,WAAWrM,EAAI,MAAM0a,EAAIsqI,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqB1P,CAAY,CAAj7B2P,CAAkB3P,EAAa6O,EAAWhB,GAASc,EAAIE,WAAW7nJ,EAAQ6nJ,YAAYA,EAAc,aAAa3nI,KAAKswG,KAAWw3B,EAAUY,KAAK,IAAIZ,EAAUhwF,KAAK,IAAI8vF,EAAa,IAAI,gCAA+BA,EAAa/iH,IAAI+iH,EAAa/iH,KAAK,uCAA0C2iH,EAAQC,EAAIvyI,MAAMsyI,EAAOI,EAAaE,GAAgBL,EAAI3O,aAAa5rI,MAAM,sBAA6By6I,EAAW94B,GAAG,EAAuqB+3B,EAAW9uG,UAAU,CAAC6wG,cAAc,WAAWhrJ,KAAKkxH,KAAI,IAAK+5B,GAAmBC,eAAe,KAAK,KAAK,MAASlrJ,KAAKgpJ,UAAShpJ,KAAKkxH,IAAIi6B,YAAYnrJ,KAAKgpJ,QAAQM,SAAS,EAAEp+F,aAAa,SAASkuF,EAAagS,EAAUC,EAAMxsI,GAAO,IAAIqyG,EAAIlxH,KAAKkxH,IAAQ1kH,EAAG0kH,EAAIo6B,gBAAgBlS,EAAaiS,GAAOD,GAAeG,EAAI1sI,EAAM1Y,OAAOujJ,EAAc1pJ,KAAKwM,GAAIxM,KAAK4pJ,eAAep9I,EAAGxM,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQx8I,GAAI,IAAI,IAAI6G,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAAI,CAAK+lI,EAAav6H,EAAM2sI,OAAOn4I,GAA9B,IAAqC1Q,EAAMkc,EAAM5S,SAASoH,GAAmCsK,GAA5B0tI,EAAMxsI,EAAM4sI,SAASp4I,GAAY69G,EAAIw6B,kBAAkBtS,EAAaiS,IAAOrrJ,KAAKgpJ,SAASroJ,EAASke,EAAM8sI,WAAWt4I,GAAGsK,GAAMA,EAAKhb,MAAMgb,EAAKiuI,UAAUjpJ,EAAM6J,EAAGq/I,iBAAiBluI,EAAK,CAAC,EAAEmuI,WAAW,SAAS1S,EAAagS,EAAUC,GAAO,IAAIU,EAAQ/rJ,KAAK4pJ,eAA2BmC,EAAQx6B,QAAQvxH,KAAK4pJ,eAAemC,EAAQ/hE,UAAU,EAAEgiE,mBAAmB,SAASrxI,EAAOsxI,GAAK,EAAEC,iBAAiB,SAASvxI,GAAQ,EAAEwxI,sBAAsB,SAASnlG,EAAOn9C,GAAM,IAAIuiJ,EAAIpsJ,KAAKkxH,IAAIm7B,4BAA4BrlG,EAAOn9C,GAAM7J,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQoD,GAAK1C,EAAc1pJ,KAAKosJ,EAAI,EAAEE,oBAAoB,SAASC,EAAGr6H,EAAM/rB,GAAQ,EAAEqmJ,WAAW,SAAShD,EAAMt3H,EAAM/rB,GAA8C,GAAtCqjJ,EAAMD,EAAU5/G,MAAM3pC,KAAK+S,WAAoB,CAAC,GAAG/S,KAAKkpJ,MAAO,IAAIuD,EAASzsJ,KAAKkxH,IAAIw7B,mBAAmBlD,QAAgBiD,EAASzsJ,KAAKkxH,IAAIvmC,eAAe6+D,GAAUxpJ,KAAK4pJ,eAAgB5pJ,KAAK4pJ,eAAeh/D,YAAY6hE,GAAkB,QAAQpqI,KAAKmnI,IAAQxpJ,KAAKkxH,IAAItmC,YAAY6hE,GAAUzsJ,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAASxlJ,GAAM,EAAEylJ,YAAY,WAAW5sJ,KAAKkxH,IAAI27B,WAAW,EAAEpC,mBAAmB,SAASzB,IAAYhpJ,KAAKgpJ,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAErgC,QAAQ,SAAS0gC,EAAMt3H,EAAM/rB,GAAQqjJ,EAAMD,EAAU5/G,MAAM3pC,KAAK+S,WAAW,IAAI+5I,EAAK9sJ,KAAKkxH,IAAI67B,cAAcvD,GAAOxpJ,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQ8D,GAAMpD,EAAc1pJ,KAAK8sJ,EAAK,EAAEE,WAAW,WAAWhtJ,KAAKkpJ,OAAM,CAAI,EAAE+D,SAAS,WAAWjtJ,KAAKkpJ,OAAM,CAAK,EAAEgE,SAAS,SAAS/lJ,EAAKgmJ,EAAS7D,GAAU,IAAI8D,EAAKptJ,KAAKkxH,IAAIm8B,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmBnmJ,EAAKgmJ,EAAS7D,GAAUtpJ,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQuE,GAAI7D,EAAc1pJ,KAAKutJ,EAAG,CAAC,EAAEC,QAAQ,SAASj+I,GAAO/G,QAAQC,KAAK,qBAAqB8G,EAAM85I,EAASrpJ,KAAKgpJ,SAAS,EAAEz5I,MAAM,SAASA,GAAO/G,QAAQ+G,MAAM,mBAAmBA,EAAM85I,EAASrpJ,KAAKgpJ,SAAS,EAAEyE,WAAW,SAASl+I,GAA2E,MAApE/G,QAAQ+G,MAAM,wBAAwBA,EAAM85I,EAASrpJ,KAAKgpJ,UAAgBz5I,CAAK,GAA8T,+JAA+JyD,QAAQ,QAAO,SAAS3O,GAAK4kJ,EAAW9uG,UAAU91C,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAI0lJ,EAAUn0E,EAAQ,SAASm0E,UAAckB,EAAkBvrJ,EAAQurJ,kBAAkBr1E,EAAQ,SAASq1E,kBAAkBvrJ,EAAQy6I,cAAcvkE,EAAQ,SAASukE,cAAcz6I,EAAQwyE,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAAS0D,EAAQn2E,EAAOC,GAAS,SAASy6D,EAAKqsB,EAAIknE,GAAM,IAAI,IAAI5rI,KAAK0kE,EAAKknE,EAAK5rI,GAAG0kE,EAAI1kE,EAAG,CAAC,SAAS6rI,EAASpvI,EAAMqvI,GAAO,IAAIC,EAAGtvI,EAAM47B,UAAU,GAAGhmC,OAAOu1D,OAAO,CAAC,IAAIokF,EAAI35I,OAAOu1D,OAAOkkF,EAAMzzG,WAAW0zG,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAASjxH,IAAI,CAACA,EAAEwd,UAAUyzG,EAAMzzG,UAAkBggB,EAAK0zF,EAAblxH,EAAE,IAAIA,GAAape,EAAM47B,UAAU0zG,EAAGlxH,CAAC,CAAIkxH,EAAGluJ,aAAa4e,IAAwB,mBAAPA,GAAmB/V,QAAQ+G,MAAM,gBAAgBgP,GAAOsvI,EAAGluJ,YAAY4e,EAAM,CAAC,IAA8CyvI,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAah5I,EAAKnF,GAAS,GAAGA,aAAmBhJ,MAAO,IAAIiH,EAAM+B,OAAa/B,EAAMvP,KAAKsI,MAAM8xC,KAAKp6C,KAAK8uJ,EAAiBr4I,IAAOzW,KAAKsR,QAAQw9I,EAAiBr4I,GAASnO,MAAMonJ,mBAAkBpnJ,MAAMonJ,kBAAkB1vJ,KAAKyvJ,GAAgF,OAAlElgJ,EAAMkH,KAAKA,EAAQnF,IAAQtR,KAAKsR,QAAQtR,KAAKsR,QAAQ,KAAKA,GAAe/B,CAAK,CAAyE,SAASogJ,IAAW,CAA+N,SAASC,EAAartJ,EAAKmC,GAAS1E,KAAK6vJ,MAAMttJ,EAAKvC,KAAK8vJ,SAASprJ,EAAQqrJ,EAAgB/vJ,KAAK,CAAC,SAAS+vJ,EAAgB9lJ,GAAM,IAAI+lJ,EAAI/lJ,EAAK4lJ,MAAMI,MAAMhmJ,EAAK4lJ,MAAMK,cAAcD,KAAK,GAAGhmJ,EAAKgmJ,MAAMD,EAAI,CAAC,IAAIG,EAAGlmJ,EAAK6lJ,SAAS7lJ,EAAK4lJ,OAAOO,GAAQnmJ,EAAK,SAASkmJ,EAAGhqJ,QAAQg0D,EAAKg2F,EAAGlmJ,GAAMA,EAAKgmJ,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAermJ,EAAK1H,GAAwB,IAAlB,IAAI8Q,EAAEpJ,EAAK9D,OAAakN,KAAK,GAAGpJ,EAAKoJ,KAAK9Q,EAAM,OAAO8Q,CAAG,CAAC,SAASk9I,EAAc/jJ,EAAGvC,EAAKumJ,EAAQC,GAAiG,GAArFA,EAASxmJ,EAAKqmJ,EAAermJ,EAAKwmJ,IAAUD,EAAavmJ,EAAKA,EAAK9D,UAAUqqJ,EAAWhkJ,EAAG,CAACgkJ,EAAQE,aAAalkJ,EAAG,IAAI0kH,EAAI1kH,EAAG0jJ,cAAiBh/B,IAAKu/B,GAASE,EAAmBz/B,EAAI1kH,EAAGikJ,GAChi2B,SAAyBv/B,EAAI1kH,EAAGgkJ,GAASt/B,GAAKA,EAAI++B,OAA0C,iCAA5BO,EAAQpX,eAAqD5sI,EAAGokJ,OAAOJ,EAAQ71I,OAAO61I,EAAQpF,UAAU,IAAIoF,EAAQ7tJ,MAAM,CAD+21BkuJ,CAAgB3/B,EAAI1kH,EAAGgkJ,GAAS,CAAC,CAAC,SAASM,EAAiBtkJ,EAAGvC,EAAK0T,GAAM,IAAItK,EAAEi9I,EAAermJ,EAAK0T,GAAM,KAAGtK,GAAG,GAAgM,MAAMo8I,EAAaP,EAAc,IAAI5mJ,MAAMkE,EAAG+kH,QAAQ,IAAI5zG,IAA3N,IAA5B,IAAIozI,EAAU9mJ,EAAK9D,OAAO,EAAQkN,EAAE09I,GAAW9mJ,EAAKoJ,GAAGpJ,IAAOoJ,GAAyB,GAAtBpJ,EAAK9D,OAAO4qJ,EAAavkJ,EAAG,CAAC,IAAI0kH,EAAI1kH,EAAG0jJ,cAAiBh/B,IAAKy/B,EAAmBz/B,EAAI1kH,EAAGmR,GAAMA,EAAK+yI,aAAa,KAAK,CAAwE,CAAioC,SAASzF,EAAkB+F,GAA4B,GAAlBhxJ,KAAKixJ,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAUhxJ,KAAKixJ,UAAUD,EAASE,EAAU,CACnm9B,SAASC,IAAO,CAA6kD,SAASC,EAAY7tJ,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAE8tJ,aAAa,GAAG,CAAmD,SAASC,EAAW/uJ,EAAKsP,GAAU,GAAGA,EAAStP,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAK45G,WAAY,GAAG,GAAGm1C,EAAW/uJ,EAAKsP,GAAW,OAAO,QAAYtP,EAAKA,EAAKgvJ,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmBz/B,EAAI1kH,EAAGgkJ,EAAQ31I,GAAQq2G,GAAKA,EAAI++B,OAA0C,iCAA5BO,EAAQpX,qBAA4D5sI,EAAGokJ,OAAOJ,EAAQ71I,OAAO61I,EAAQpF,UAAU,GAAI,CAAC,SAASqG,EAAevgC,EAAI1kH,EAAGklJ,GAAU,GAAGxgC,GAAKA,EAAI++B,KAAK,CAAC/+B,EAAI++B,OAAO,IAAI0B,EAAGnlJ,EAAGolJ,WAAW,GAAGF,EAAUC,EAAGA,EAAGxrJ,UAAUurJ,MAAa,CAAiC,IAAhC,IAAIlkE,EAAMhhF,EAAG2vG,WAAe9oG,EAAE,EAAQm6E,GAAOmkE,EAAGt+I,KAAKm6E,EAAMA,EAAMA,EAAM+jE,YAAYI,EAAGxrJ,OAAOkN,CAAC,CAAC,CAAC,CAAC,SAASw+I,EAAa7nE,EAAWwD,GAAO,IAAIskE,EAAStkE,EAAMukE,gBAAoB5mI,EAAKqiE,EAAM+jE,YAAiN,OAAlMO,EAAUA,EAASP,YAAYpmI,EAAU6+D,EAAWmyB,WAAWhxF,EAAQA,EAAMA,EAAK4mI,gBAAgBD,EAAc9nE,EAAWgoE,UAAUF,EAASL,EAAeznE,EAAWkmE,cAAclmE,GAAmBwD,CAAK,CAAC,SAASykE,EAAcjoE,EAAW0nE,EAASQ,GAAW,IAAIC,EAAGT,EAAS1nE,WAA2C,GAA7BmoE,GAAIA,EAAGloE,YAAYynE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAASv1C,WAAW,GAAa,MAAVk2C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgB/nE,EAAWgoE,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAcroE,EAAWmyB,WAAWk2C,EAAuB,MAAXH,EAAiBloE,EAAWgoE,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAASroE,WAAWA,QAAiBqoE,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAeznE,EAAWkmE,eAAelmE,EAAWA,GAAe0nE,EAASU,UAAUzD,IAAwB+C,EAASv1C,WAAWu1C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUxyJ,KAAK4wJ,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAAShZ,IAAgB,CAAqL,SAASiZ,EAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfxzJ,KAAKoyJ,SAAYpyJ,KAAKyzJ,gBAAgBzzJ,KAAS2a,EAAO64I,EAAQ74I,OAAWsxI,EAAIuH,EAAQpa,aAAa,GAAG6S,GAAa,MAARtxI,GAA8D,OAA5CA,EAAO64I,EAAQE,aAAazH,IAAsB,IAAI0H,EAAkB,CAAC,CAACC,UAAU3H,EAAItxI,OAAO,OAAwE,OAAhEggI,GAAkB36I,KAAKuzJ,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAIjlJ,KAAK,GAAG,CAAC,SAASulJ,GAAoBtxJ,EAAKuxJ,EAAOH,GAAmB,IAAIh5I,EAAOpY,EAAKoY,QAAQ,GAAOsxI,EAAI1pJ,EAAK62I,aAAa,IAAIz+H,IAASsxI,EAAK,OAAO,EAAM,GAAY,QAATtxI,GAAsB,yCAANsxI,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAI54I,EAAEsgJ,EAAkBxtJ,OAAakN,KAAI,CAAC,IAAI0gJ,EAAGJ,EAAkBtgJ,GAAG,GAAG0gJ,EAAGp5I,QAAQA,EAAQ,OAAOo5I,EAAGH,WAAW3H,CAAI,CAAC,OAAO,CAAI,CAAC,SAAStR,GAAkBp4I,EAAKgxJ,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtB/wJ,EAAK+wJ,EAAW/wJ,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAfgxJ,EAAIjvJ,KAAK/B,EAA0B,CAAC,OAAOA,EAAK6vJ,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBxtJ,OAA7C,IAAwD0Y,EAAMtc,EAAKygB,WAAeuoI,EAAI1sI,EAAM1Y,OAAWqnF,EAAMjrF,EAAK45G,WAAeC,EAAS75G,EAAKgvH,QAAQuiC,EAD4xZ,iCAC5wZvxJ,EAAK62I,cAAc0a,EAAOP,EAAIjvJ,KAAK,IAAI83G,GAAU,IAAI,IAAI/oG,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAA4C,UAAnCsK,EAAKkB,EAAMzQ,KAAKiF,IAAWsH,OAAiBg5I,EAAkBrvJ,KAAK,CAACqW,OAAOgD,EAAKytI,UAAUwI,UAAUj2I,EAAKhb,QAA+B,SAAfgb,EAAKy+F,UAAmBu3C,EAAkBrvJ,KAAK,CAACqW,OAAO,GAAGi5I,UAAUj2I,EAAKhb,QAAS,IAAQ0Q,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAAI,CAAC,IAAIsK,EAAmB,GAAGk2I,GAAtBl2I,EAAKkB,EAAMzQ,KAAKiF,GAA+BygJ,EAAOH,GAAmB,CAAC,IAAIh5I,EAAOgD,EAAKhD,QAAQ,GAAOsxI,EAAItuI,EAAKy7H,aAAiB2a,EAAGp5I,EAAO,UAAUA,EAAO,SAAS44I,EAAIjvJ,KAAKyvJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBrvJ,KAAK,CAACqW,OAAOA,EAAOi5I,UAAU3H,GAAK,CAACtR,GAAkBh9H,EAAK41I,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoBtxJ,EAAKuxJ,EAAOH,KAAwBh5I,EAAOpY,EAAKoY,QAAQ,GAAOsxI,EAAI1pJ,EAAK62I,aAAiB2a,EAAGp5I,EAAO,UAAUA,EAAO,SAAS44I,EAAIjvJ,KAAKyvJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBrvJ,KAAK,CAACqW,OAAOA,EAAOi5I,UAAU3H,KAASz+D,GAAOsmE,IAAS,mCAAmCzxI,KAAK+5F,GAAU,CAAe,GAAdm3C,EAAIjvJ,KAAK,KAAQwvJ,GAAQ,YAAYzxI,KAAK+5F,GAAW,KAAM5uB,GAAUA,EAAM3jF,KAAM0pJ,EAAIjvJ,KAAKkpF,EAAM3jF,MAAW8wI,GAAkBntD,EAAM+lE,EAAIO,EAAOR,EAAWK,GAAmBnmE,EAAMA,EAAM+jE,iBAAkB,KAAM/jE,GAAOmtD,GAAkBntD,EAAM+lE,EAAIO,EAAOR,EAAWK,GAAmBnmE,EAAMA,EAAM+jE,YAAagC,EAAIjvJ,KAAK,KAAK83G,EAAS,IAAI,MAAMm3C,EAAIjvJ,KAAK,MAAM,OAAO,KAAKmqJ,EAAc,KAAKE,EAAiD,IAAtBnhE,EAAMjrF,EAAK45G,WAAiB3uB,GAAOmtD,GAAkBntD,EAAM+lE,EAAIO,EAAOR,EAAWK,GAAmBnmE,EAAMA,EAAM+jE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAIjvJ,KAAK,IAAI/B,EAAK4E,KAAK,KAAK5E,EAAKI,MAAMqQ,QAAQ,SAASo+I,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAIjvJ,KAAK/B,EAAKsH,KAAKmJ,QAAQ,QAAQo+I,IAAc,KAAKhD,EAAmB,OAAOmF,EAAIjvJ,KAAK,YAAY/B,EAAKsH,KAAK,OAAO,KAAK2kJ,EAAa,OAAO+E,EAAIjvJ,KAAK,UAAO/B,EAAKsH,KAAK,UAAO,KAAK6kJ,EAAmB,IAAIsF,EAAMzxJ,EAAK4qJ,SAAa8G,EAAM1xJ,EAAK+mJ,SAA0C,GAAjCiK,EAAIjvJ,KAAK,aAAa/B,EAAK4E,MAAS6sJ,EAAOT,EAAIjvJ,KAAK,YAAY0vJ,GAAUC,GAAc,KAAPA,GAAYV,EAAIjvJ,KAAK,MAAM2vJ,GAAOV,EAAIjvJ,KAAK,WAAW,GAAG2vJ,GAAc,KAAPA,EAAYV,EAAIjvJ,KAAK,YAAY2vJ,EAAM,UAAU,CAAC,IAAI3gJ,EAAI/Q,EAAK2xJ,eAAkB5gJ,GAAKigJ,EAAIjvJ,KAAK,KAAKgP,EAAI,KAAKigJ,EAAIjvJ,KAAK,IAAI,CAAC,OAAO,KAAKiqJ,EAA4B,OAAOgF,EAAIjvJ,KAAK,KAAK/B,EAAKykD,OAAO,IAAIzkD,EAAKsH,KAAK,MAAM,KAAKwkJ,EAAsB,OAAOkF,EAAIjvJ,KAAK,IAAI/B,EAAK65G,SAAS,KAAK,QAAQm3C,EAAIjvJ,KAAK,KAAK/B,EAAK65G,UAAU,CAAC,SAAS+3C,GAAWjjC,EAAI3uH,EAAKskB,GAAM,IAAIutI,EAAM,OAAO7xJ,EAAK6vJ,UAAU,KAAKnE,GAAamG,EAAM7xJ,EAAK8xJ,WAAU,IAAanE,cAAch/B,EAAI,KAAKy9B,EAAuB,MAAM,KAAKT,EAAernI,GAAK,EAAgG,GAAjFutI,IAAOA,EAAM7xJ,EAAK8xJ,WAAU,IAAOD,EAAMlE,cAAch/B,EAAIkjC,EAAMpqE,WAAW,KAAQnjE,EAAgC,IAA1B,IAAI2mE,EAAMjrF,EAAK45G,WAAiB3uB,GAAO4mE,EAAMxpE,YAAYupE,GAAWjjC,EAAI1jC,EAAM3mE,IAAO2mE,EAAMA,EAAM+jE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAUnjC,EAAI3uH,EAAKskB,GAAM,IAAIutI,EAAM,IAAI7xJ,EAAK5C,YAAY,IAAI,IAAIwgD,KAAK59C,EAAK,CAAC,IAAI6Q,EAAE7Q,EAAK49C,GAAgB,iBAAH/sC,GAAgBA,GAAGghJ,EAAMj0G,KAAIi0G,EAAMj0G,GAAG/sC,EAAG,CAA2E,OAAvE7Q,EAAKqvJ,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAch/B,EAAWkjC,EAAMhC,UAAU,KAAKnE,EAAa,IAAIpvI,EAAMtc,EAAKygB,WAAesxI,EAAOF,EAAMpxI,WAAW,IAAIqtI,EAAiB9E,EAAI1sI,EAAM1Y,OAAOmuJ,EAAOC,cAAcH,EAAM,IAAI,IAAI/gJ,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAAK+gJ,EAAMvI,iBAAiBwI,GAAUnjC,EAAIryG,EAAMzQ,KAAKiF,IAAG,IAAO,MAAM,KAAK66I,EAAernI,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAI2mE,EAAMjrF,EAAK45G,WAAiB3uB,GAAO4mE,EAAMxpE,YAAYypE,GAAUnjC,EAAI1jC,EAAM3mE,IAAO2mE,EAAMA,EAAM+jE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQnrJ,EAAOZ,EAAI1B,GAAOsC,EAAOZ,GAAK1B,CAAK,CADonWksJ,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAat1G,UAAU7xC,MAAM6xC,UAAUggB,EAAK00F,EAAcY,GAAmCE,EAASx1G,UAAU,CAACh0C,OAAO,EAAEiI,KAAK,SAASrC,GAAO,OAAO/L,KAAK+L,IAAQ,IAAI,EAAE2I,SAAS,SAASo/I,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAGlgJ,EAAE,EAAEA,EAAErT,KAAKmG,OAAOkN,IAAKsnI,GAAkB36I,KAAKqT,GAAGkgJ,EAAIO,EAAOR,GAAY,OAAOC,EAAIjlJ,KAAK,GAAG,GAA2SshJ,EAAaz1G,UAAU/rC,KAAK,SAASiF,GAAyB,OAAtB08I,EAAgB/vJ,MAAaA,KAAKqT,EAAE,EAAEs6I,EAASiC,EAAaD,GAAuuBU,EAAal2G,UAAU,CAACh0C,OAAO,EAAEiI,KAAKuhJ,EAASx1G,UAAU/rC,KAAKymJ,aAAa,SAASxwJ,GAAuB,IAAlB,IAAIgP,EAAErT,KAAKmG,OAAakN,KAAI,CAAC,IAAIsK,EAAK3d,KAAKqT,GAAG,GAAGsK,EAAKy+F,UAAU/3G,EAAK,OAAOsZ,CAAK,CAAC,EAAEm3I,aAAa,SAASn3I,GAAM,IAAInR,EAAGmR,EAAK+yI,aAAa,GAAGlkJ,GAAIA,GAAIxM,KAAKu0J,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQzwJ,KAAK60J,aAAal3I,EAAKy+F,UAA8D,OAApDm0C,EAAcvwJ,KAAKu0J,cAAcv0J,KAAK2d,EAAK8yI,GAAgBA,CAAO,EAAEsE,eAAe,SAASp3I,GAAM,IAAyB8yI,EAArBjkJ,EAAGmR,EAAK+yI,aAAqB,GAAGlkJ,GAAIA,GAAIxM,KAAKu0J,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQzwJ,KAAKg1J,eAAer3I,EAAKy7H,aAAaz7H,EAAKytI,WAAWmF,EAAcvwJ,KAAKu0J,cAAcv0J,KAAK2d,EAAK8yI,GAAgBA,CAAO,EAAEwE,gBAAgB,SAAS5wJ,GAAK,IAAIsZ,EAAK3d,KAAK60J,aAAaxwJ,GAAoD,OAA/CysJ,EAAiB9wJ,KAAKu0J,cAAcv0J,KAAK2d,GAAaA,CAAI,EAAEu3I,kBAAkB,SAAS9b,EAAagS,GAAW,IAAIztI,EAAK3d,KAAKg1J,eAAe5b,EAAagS,GAA0D,OAA/C0F,EAAiB9wJ,KAAKu0J,cAAcv0J,KAAK2d,GAAaA,CAAI,EAAEq3I,eAAe,SAAS5b,EAAagS,GAA6B,IAAlB,IAAI/3I,EAAErT,KAAKmG,OAAakN,KAAI,CAAC,IAAI9Q,EAAKvC,KAAKqT,GAAG,GAAG9Q,EAAK6oJ,WAAWA,GAAW7oJ,EAAK62I,cAAcA,EAAc,OAAO72I,CAAK,CAAC,OAAO,IAAI,GAAuI0oJ,EAAkB9wG,UAAU,CAACg7G,WAAW,SAASjE,EAAQ7tI,GAAS,IAAI+xI,EAASp1J,KAAKixJ,UAAUC,EAAQ/4I,eAAe,SAAGi9I,GAAY/xI,KAASA,KAAW+xI,GAChv+B,EAAElK,eAAe,SAAS9R,EAAaic,EAAcC,GAAS,IAAIpkC,EAAI,IAAIsgC,EAAsH,GAA7GtgC,EAAIm8B,eAAertJ,KAAKkxH,EAAI0gC,WAAW,IAAIjC,EAASz+B,EAAIokC,QAAQA,EAAWA,GAASpkC,EAAItmC,YAAY0qE,GAAYD,EAAc,CAAC,IAAIj5D,EAAK80B,EAAIo6B,gBAAgBlS,EAAaic,GAAenkC,EAAItmC,YAAYwR,EAAK,CAAC,OAAO80B,CAAG,EAAEo8B,mBAAmB,SAAS+H,EAAclI,EAAS7D,GAAU,IAAI/mJ,EAAK,IAAIuwJ,EAA+G,OAAlGvwJ,EAAK4E,KAAKkuJ,EAAc9yJ,EAAK65G,SAASi5C,EAAc9yJ,EAAK4qJ,SAASA,EAAS5qJ,EAAK+mJ,SAASA,EAAgB/mJ,CAAI,GAAoB4uJ,EAAKh3G,UAAU,CAACgiE,WAAW,KAAK61C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAKvuI,WAAW,KAAKgnE,WAAW,KAAK4nE,WAAW,KAAK1B,cAAc,KAAKtE,UAAU,KAAKxS,aAAa,KAAKz+H,OAAO,KAAKywI,UAAU,KAAKmK,aAAa,SAAS7D,EAAS8D,GAAU,OAAOvD,EAAcjyJ,KAAK0xJ,EAAS8D,EAAS,EAAEC,aAAa,SAAS/D,EAASgE,GAAU11J,KAAKu1J,aAAa7D,EAASgE,GAAaA,GAAU11J,KAAKiqF,YAAYyrE,EAAU,EAAEzrE,YAAY,SAASyrE,GAAU,OAAO7D,EAAa7xJ,KAAK01J,EAAS,EAAE9qE,YAAY,SAAS8mE,GAAU,OAAO1xJ,KAAKu1J,aAAa7D,EAAS,KAAK,EAAEiE,cAAc,WAAW,OAAwB,MAAjB31J,KAAKm8G,UAAgB,EAAEk4C,UAAU,SAASxtI,GAAM,OAAOwtI,GAAUr0J,KAAKkwJ,eAAelwJ,KAAKA,KAAK6mB,EAAK,EAAEgmI,UAAU,WAAqC,IAA1B,IAAIr/D,EAAMxtF,KAAKm8G,WAAiB3uB,GAAM,CAAC,IAAIriE,EAAKqiE,EAAM+jE,YAAepmI,GAAMA,EAAKinI,UAAUjE,GAAW3gE,EAAM4kE,UAAUjE,GAAWnuJ,KAAKiqF,YAAY9+D,GAAMqiE,EAAMooE,WAAWzqI,EAAKthB,QAAW2jF,EAAMq/D,YAAYr/D,EAAMriE,EAAK,CAAC,EAAE0qI,YAAY,SAAS3E,EAAQ7tI,GAAS,OAAOrjB,KAAKkwJ,cAAc7C,eAAe8H,WAAWjE,EAAQ7tI,EAAQ,EAAEyyI,cAAc,WAAW,OAAO91J,KAAKgjB,WAAW7c,OAAO,CAAC,EAAEutJ,aAAa,SAASta,GAA0B,IAAZ,IAAI5sI,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAGokJ,OAAO,GAAGziJ,EAAK,IAAI,IAAIgyC,KAAKhyC,EAAK,GAAGA,EAAIgyC,IAAIi5F,EAAc,OAAOj5F,EAAI3zC,EAAGA,EAAG4lJ,UAAUlE,EAAe1hJ,EAAG0jJ,cAAc1jJ,EAAGw9E,UAAU,CAAC,OAAO,IAAI,EAAE+rE,mBAAmB,SAASp7I,GAAoB,IAAZ,IAAInO,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAGokJ,OAAO,GAAGziJ,GAAQwM,KAAUxM,EAAK,OAAOA,EAAIwM,GAASnO,EAAGA,EAAG4lJ,UAAUlE,EAAe1hJ,EAAG0jJ,cAAc1jJ,EAAGw9E,UAAU,CAAC,OAAO,IAAI,EAAEgsE,mBAAmB,SAAS5c,GAAyD,OAAe,MAA/Cp5I,KAAK0zJ,aAAata,EAAiC,GAA6Hj/E,EAAK6zF,EAASmD,GAAMh3F,EAAK6zF,EAASmD,EAAKh3G,WAA02Eq3G,EAASr3G,UAAU,CAACiiE,SAAS,YAAYg2C,SAAS3D,EAAc6G,QAAQ,KAAK7B,gBAAgB,KAAKxD,KAAK,EAAEsF,aAAa,SAAS7D,EAAS8D,GAAU,GAAG9D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAInhE,EAAMkkE,EAASv1C,WAAiB3uB,GAAM,CAAC,IAAIriE,EAAKqiE,EAAM+jE,YAAYvxJ,KAAKu1J,aAAa/nE,EAAMgoE,GAAUhoE,EAAMriE,CAAI,CAAC,OAAOumI,CAAQ,CAA+F,OAArE,MAAtB1xJ,KAAKyzJ,iBAAuB/B,EAASU,UAAUnE,IAAcjuJ,KAAKyzJ,gBAAgB/B,GAAgBO,EAAcjyJ,KAAK0xJ,EAAS8D,GAAU9D,EAASxB,cAAclwJ,KAAK0xJ,CAAQ,EAAEznE,YAAY,SAASyrE,GAAuE,OAA1D11J,KAAKyzJ,iBAAiBiC,IAAU11J,KAAKyzJ,gBAAgB,MAAY5B,EAAa7xJ,KAAK01J,EAAS,EAAEvB,WAAW,SAAS8B,EAAapvI,GAAM,OAAOstI,GAAWn0J,KAAKi2J,EAAapvI,EAAK,EAAEqvI,eAAe,SAASt1J,GAAI,IAAIu1J,EAAI,KAA6I,OAAxI7E,EAAWtxJ,KAAKyzJ,iBAAgB,SAASlxJ,GAAM,GAAGA,EAAK6vJ,UAAUnE,GAAiB1rJ,EAAK4hF,aAAa,OAAOvjF,EAAa,OAATu1J,EAAI5zJ,GAAY,CAAM,IAAU4zJ,CAAG,EAAE3rH,cAAc,SAAS+mF,GAAS,IAAIhvH,EAAK,IAAIiwJ,EAA4K,OAApKjwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAK65G,SAASmV,EAAQhvH,EAAKgvH,QAAQA,EAAQhvH,EAAKqvJ,WAAW,IAAIjC,GAAmBptJ,EAAKygB,WAAW,IAAIqtI,GAAmBkE,cAAchyJ,EAAYA,CAAI,EAAE6zJ,uBAAuB,WAAW,IAAI7zJ,EAAK,IAAI2wJ,EAAsE,OAArD3wJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKqvJ,WAAW,IAAIjC,EAAgBptJ,CAAI,EAAEooF,eAAe,SAAS9gF,GAAM,IAAItH,EAAK,IAAIowJ,EAAmD,OAA9CpwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKqzJ,WAAW/rJ,GAAatH,CAAI,EAAEwqJ,cAAc,SAASljJ,GAAM,IAAItH,EAAK,IAAIqwJ,EAAsD,OAA9CrwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKqzJ,WAAW/rJ,GAAatH,CAAI,EAAEmqJ,mBAAmB,SAAS7iJ,GAAM,IAAItH,EAAK,IAAIswJ,EAA2D,OAA9CtwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKqzJ,WAAW/rJ,GAAatH,CAAI,EAAE8pJ,4BAA4B,SAASrlG,EAAOn9C,GAAM,IAAItH,EAAK,IAAI4wJ,EAA4G,OAAtF5wJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKgvH,QAAQhvH,EAAKykD,OAAOA,EAAOzkD,EAAKqpJ,UAAUrpJ,EAAKsH,KAAKA,EAAYtH,CAAI,EAAE8zJ,gBAAgB,SAASlvJ,GAAM,IAAI5E,EAAK,IAAIkwJ,EAAuG,OAAlGlwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAK4E,KAAKA,EAAK5E,EAAK65G,SAASj1G,EAAK5E,EAAK6oJ,UAAUjkJ,EAAK5E,EAAK+zJ,WAAU,EAAY/zJ,CAAI,EAAEg0J,sBAAsB,SAASpvJ,GAAM,IAAI5E,EAAK,IAAI0wJ,EAA2D,OAA3C1wJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAK65G,SAASj1G,EAAY5E,CAAI,EAAE+oJ,gBAAgB,SAASlS,EAAaic,GAAe,IAAI9yJ,EAAK,IAAIiwJ,EAAYgE,EAAGnB,EAAcptI,MAAM,KAASpJ,EAAMtc,EAAKygB,WAAW,IAAIqtI,EAA2Q,OAA9P9tJ,EAAKqvJ,WAAW,IAAIjC,EAASptJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAK65G,SAASi5C,EAAc9yJ,EAAKgvH,QAAQ8jC,EAAc9yJ,EAAK62I,aAAaA,EAA2B,GAAXod,EAAGrwJ,QAAW5D,EAAKoY,OAAO67I,EAAG,GAAGj0J,EAAK6oJ,UAAUoL,EAAG,IAAQj0J,EAAK6oJ,UAAUiK,EAAcx2I,EAAM01I,cAAchyJ,EAAYA,CAAI,EAAEmpJ,kBAAkB,SAAStS,EAAaic,GAAe,IAAI9yJ,EAAK,IAAIkwJ,EAAS+D,EAAGnB,EAAcptI,MAAM,KAA8N,OAAzN1lB,EAAK2tJ,cAAclwJ,KAAKuC,EAAK65G,SAASi5C,EAAc9yJ,EAAK4E,KAAKkuJ,EAAc9yJ,EAAK62I,aAAaA,EAAa72I,EAAK+zJ,WAAU,EAAmB,GAAXE,EAAGrwJ,QAAW5D,EAAKoY,OAAO67I,EAAG,GAAGj0J,EAAK6oJ,UAAUoL,EAAG,IAAQj0J,EAAK6oJ,UAAUiK,EAAqB9yJ,CAAI,GAAGorJ,EAAS6D,EAASL,GAAwCqB,EAAQr4G,UAAU,CAACi4G,SAASnE,EAAawI,aAAa,SAAStvJ,GAAM,OAAoC,MAA7BnH,KAAK02J,iBAAiBvvJ,EAAW,EAAEg9E,aAAa,SAASh9E,GAAM,IAAIwW,EAAK3d,KAAK02J,iBAAiBvvJ,GAAM,OAAOwW,GAAMA,EAAKhb,OAAO,EAAE,EAAE+zJ,iBAAiB,SAASvvJ,GAAM,OAAOnH,KAAKgjB,WAAW6xI,aAAa1tJ,EAAK,EAAEu6E,aAAa,SAASv6E,EAAKxE,GAAO,IAAIgb,EAAK3d,KAAKkwJ,cAAcmG,gBAAgBlvJ,GAAMwW,EAAKhb,MAAMgb,EAAKiuI,UAAU,GAAGjpJ,EAAM3C,KAAK6rJ,iBAAiBluI,EAAK,EAAE2mE,gBAAgB,SAASn9E,GAAM,IAAIwW,EAAK3d,KAAK02J,iBAAiBvvJ,GAAMwW,GAAM3d,KAAK22J,oBAAoBh5I,EAAK,EAAEitE,YAAY,SAAS8mE,GAAU,OAAGA,EAASU,WAAWzD,EAA+B3uJ,KAAKu1J,aAAa7D,EAAS,MAAr4H,SAA4B1nE,EAAW0nE,GAAU,IAAIS,EAAGT,EAAS1nE,WAAW,GAAGmoE,EAAG,CAAC,IAAII,EAAIvoE,EAAWgoE,UAAUG,EAAGloE,YAAYynE,GAAca,EAAIvoE,EAAWgoE,SAAS,CAAoR,OAA/QO,EAAIvoE,EAAWgoE,UAAUN,EAAS1nE,WAAWA,EAAW0nE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAc1nE,EAAWmyB,WAAWu1C,EAAS1nE,EAAWgoE,UAAUN,EAASD,EAAeznE,EAAWkmE,cAAclmE,EAAW0nE,GAAiBA,CAAQ,CAA+8GkF,CAAmB52J,KAAK0xJ,EAAU,EAAE7F,iBAAiB,SAAS2E,GAAS,OAAOxwJ,KAAKgjB,WAAW8xI,aAAatE,EAAQ,EAAEqG,mBAAmB,SAASrG,GAAS,OAAOxwJ,KAAKgjB,WAAW+xI,eAAevE,EAAQ,EAAEmG,oBAAoB,SAASlG,GAAS,OAAOzwJ,KAAKgjB,WAAWiyI,gBAAgBxE,EAAQr0C,SAAS,EAAE06C,kBAAkB,SAAS1d,EAAagS,GAAW,IAAI3xC,EAAIz5G,KAAK+2J,mBAAmB3d,EAAagS,GAAW3xC,GAAKz5G,KAAK22J,oBAAoBl9C,EAAI,EAAEu9C,eAAe,SAAS5d,EAAagS,GAAW,OAAwD,MAAjDprJ,KAAK+2J,mBAAmB3d,EAAagS,EAAgB,EAAE6L,eAAe,SAAS7d,EAAagS,GAAW,IAAIztI,EAAK3d,KAAK+2J,mBAAmB3d,EAAagS,GAAW,OAAOztI,GAAMA,EAAKhb,OAAO,EAAE,EAAEu0J,eAAe,SAAS9d,EAAaic,EAAc1yJ,GAAO,IAAIgb,EAAK3d,KAAKkwJ,cAAcxE,kBAAkBtS,EAAaic,GAAe13I,EAAKhb,MAAMgb,EAAKiuI,UAAU,GAAGjpJ,EAAM3C,KAAK6rJ,iBAAiBluI,EAAK,EAAEo5I,mBAAmB,SAAS3d,EAAagS,GAAW,OAAOprJ,KAAKgjB,WAAWgyI,eAAe5b,EAAagS,EAAU,EAAE54E,qBAAqB,SAAS++C,GAAS,OAAO,IAAIq+B,EAAa5vJ,MAAK,SAAS4hE,GAAM,IAAIuuF,EAAG,GAAwI,OAArImB,EAAW1vF,GAAK,SAASr/D,GAASA,IAAOq/D,GAAMr/D,EAAK6vJ,UAAUnE,GAAyB,MAAV18B,GAAehvH,EAAKgvH,SAASA,GAAU4+B,EAAG7rJ,KAAK/B,EAAM,IAAU4tJ,CAAE,GAAE,EAAEgH,uBAAuB,SAAS/d,EAAagS,GAAW,OAAO,IAAIwE,EAAa5vJ,MAAK,SAAS4hE,GAAM,IAAIuuF,EAAG,GAAuM,OAApMmB,EAAW1vF,GAAK,SAASr/D,GAASA,IAAOq/D,GAAMr/D,EAAK6vJ,WAAWnE,GAA8B,MAAf7U,GAAoB72I,EAAK62I,eAAeA,GAA4B,MAAZgS,GAAiB7oJ,EAAK6oJ,WAAWA,GAAY+E,EAAG7rJ,KAAK/B,EAAM,IAAU4tJ,CAAE,GAAE,GAAGqB,EAASr3G,UAAUq4B,qBAAqBggF,EAAQr4G,UAAUq4B,qBAAqBg/E,EAASr3G,UAAUg9G,uBAAuB3E,EAAQr4G,UAAUg9G,uBAAuBxJ,EAAS6E,EAAQrB,GAAuBsB,EAAKt4G,UAAUi4G,SAASlE,EAAeP,EAAS8E,EAAKtB,GAAgCuB,EAAcv4G,UAAU,CAACtwC,KAAK,GAAGutJ,cAAc,SAASnd,EAAO/oH,GAAO,OAAOlxB,KAAK6J,KAAKwtB,UAAU4iH,EAAOA,EAAO/oH,EAAM,EAAE0kI,WAAW,SAASvnJ,GAAMA,EAAKrO,KAAK6J,KAAKwE,EAAKrO,KAAK4rJ,UAAU5rJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,EAAEkxJ,WAAW,SAASpd,EAAO5rI,GAAMrO,KAAKs3J,YAAYrd,EAAO,EAAE5rI,EAAK,EAAEu8E,YAAY,SAAS8mE,GAAU,MAAM,IAAIppJ,MAAMwmJ,EAAiBC,GAAuB,EAAEwI,WAAW,SAAStd,EAAO/oH,GAAOlxB,KAAKs3J,YAAYrd,EAAO/oH,EAAM,GAAG,EAAEomI,YAAY,SAASrd,EAAO/oH,EAAM7iB,GAAwFA,EAAxErO,KAAK6J,KAAKwtB,UAAU,EAAE4iH,GAA6D5rI,EAA7CrO,KAAK6J,KAAKwtB,UAAU4iH,EAAO/oH,GAA2BlxB,KAAK4rJ,UAAU5rJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,GAAGwnJ,EAAS+E,EAAcvB,GAAuBwB,EAAKx4G,UAAU,CAACiiE,SAAS,QAAQg2C,SAASjE,EAAUqJ,UAAU,SAASvd,GAAQ,IAAI5rI,EAAKrO,KAAK6J,KAAS4tJ,EAAQppJ,EAAKgpB,UAAU4iH,GAAQ5rI,EAAKA,EAAKgpB,UAAU,EAAE4iH,GAAQj6I,KAAK6J,KAAK7J,KAAK4rJ,UAAUv9I,EAAKrO,KAAKmG,OAAOkI,EAAKlI,OAAO,IAAIuxJ,EAAQ13J,KAAKkwJ,cAAcvlE,eAAe8sE,GAAoF,OAAxEz3J,KAAKgqF,YAAYhqF,KAAKgqF,WAAWurE,aAAamC,EAAQ13J,KAAKuxJ,aAAoBmG,CAAO,GAAG/J,EAASgF,EAAKD,GAAmCE,EAAQz4G,UAAU,CAACiiE,SAAS,WAAWg2C,SAAS5D,GAAcb,EAASiF,EAAQF,GAAwCG,EAAa14G,UAAU,CAACiiE,SAAS,iBAAiBg2C,SAAShE,GAAoBT,EAASkF,EAAaH,GAAwCI,EAAa34G,UAAUi4G,SAAS1D,EAAmBf,EAASmF,EAAa3B,GAA2B4B,EAAS54G,UAAUi4G,SAASxD,EAAcjB,EAASoF,EAAS5B,GAAyB6B,EAAO74G,UAAUi4G,SAAS9D,EAAYX,EAASqF,EAAO7B,GAAkC8B,EAAgB94G,UAAUi4G,SAAS/D,EAAsBV,EAASsF,EAAgB9B,GAAmC+B,EAAiB/4G,UAAUiiE,SAAS,qBAAqB82C,EAAiB/4G,UAAUi4G,SAASzD,EAAuBhB,EAASuF,EAAiB/B,GAAwCgC,EAAsBh5G,UAAUi4G,SAAS7D,EAA4BZ,EAASwF,EAAsBhC,GAAgChX,EAAchgG,UAAUwgG,kBAAkB,SAASp4I,EAAK8wJ,EAAOC,GAAY,OAAOF,EAAsBh5G,KAAK73C,EAAK8wJ,EAAOC,EAAW,EAAEnC,EAAKh3G,UAAUzlC,SAAS0+I,EAAqhJ,IAAI,GAAGj/I,OAAO8iI,eAAe,CAA2f,SAAS0gB,GAAep1J,GAAM,OAAOA,EAAK6vJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArBhxJ,EAAKA,EAAK45G,WAAiB55G,GAAyB,IAAhBA,EAAK6vJ,UAA8B,IAAhB7vJ,EAAK6vJ,UAAcmB,EAAIjvJ,KAAKqzJ,GAAep1J,IAAOA,EAAKA,EAAKgvJ,YAAY,OAAOgC,EAAIjlJ,KAAK,IAAI,QAAQ,OAAO/L,EAAKqpJ,UAAU,CAAxxBz3I,OAAO8iI,eAAe2Y,EAAaz1G,UAAU,SAAS,CAACxkC,IAAI,WAAiC,OAAtBo6I,EAAgB/vJ,MAAaA,KAAK43J,QAAQ,IAAIzjJ,OAAO8iI,eAAeka,EAAKh3G,UAAU,cAAc,CAACxkC,IAAI,WAAW,OAAOgiJ,GAAe33J,KAAK,EAAE6Z,IAAI,SAAShQ,GAAM,OAAO7J,KAAKoyJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAM3uJ,KAAKm8G,YAAYn8G,KAAKiqF,YAAYjqF,KAAKm8G,aAAetyG,GAAMqR,OAAOrR,KAAO7J,KAAK4qF,YAAY5qF,KAAKkwJ,cAAcvlE,eAAe9gF,IAAO,MAAM,QAAQ7J,KAAK6J,KAAKA,EAAK7J,KAAK2C,MAAMkH,EAAK7J,KAAK4rJ,UAAU/hJ,EAAK,IAAmSumJ,GAAQ,SAASnrJ,EAAOZ,EAAI1B,GAAOsC,EAAO,KAAKZ,GAAK1B,CAAK,CAAC,CAAW,CAAT,MAAM0H,IAAG,CAAC3K,EAAQurJ,kBAAkBA,EAAkBvrJ,EAAQy6I,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvkE,EAAQn2E,EAAOC,GAAS,IAAIm4J,EAAc,mJAAuJC,EAAS,IAAI11I,OAAO,aAAay1I,EAAchO,OAAO32I,MAAM,GAAG,GAAG,0CAA8C6kJ,EAAe,IAAI31I,OAAO,IAAIy1I,EAAchO,OAAOiO,EAASjO,OAAO,QAAQgO,EAAchO,OAAOiO,EAASjO,OAAO,QAA8I,SAASE,IAAY,CAA+P,SAASxyI,EAAMsyI,EAAOmO,EAAiB7N,EAAUH,EAAW7O,GAAgO,SAAS8c,EAAerqJ,GAAG,IAAIyG,EAAEzG,EAAEsF,MAAM,GAAG,GAAG,OAAGmB,KAAK81I,EAAkBA,EAAU91I,GAAyB,MAAdA,EAAEswC,OAAO,GAAzT,SAA2BluC,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAIyhJ,EAAW,QAA3BzhJ,GAAM,QAAkC,IAAI0hJ,EAAW,OAAY,KAAL1hJ,GAAW,OAAOyE,OAAOghI,aAAagc,EAAWC,EAAW,CAAM,OAAOj9I,OAAOghI,aAAazlI,EAAM,CAAyH2hJ,CAAkB9yI,SAASjR,EAAEitC,OAAO,GAAGtuC,QAAQ,IAAI,SAAamoI,EAAa5rI,MAAM,oBAAoB3B,GAAUA,EAAE,CAAC,SAASyqJ,EAAWtzG,GAAK,GAAGA,EAAI7yB,EAAM,CAAC,IAAIomI,EAAGzO,EAAOxyH,UAAUnF,EAAM6yB,GAAK/xC,QAAQ,WAAWilJ,GAAgBjP,GAASroJ,EAASuxB,GAAO83H,EAAWwC,WAAW8L,EAAG,EAAEvzG,EAAI7yB,GAAOA,EAAM6yB,CAAG,CAAC,CAAC,SAASpkD,EAASmhB,EAAEs8G,GAAG,KAAMt8G,GAAGy2I,IAAUn6B,EAAEo6B,EAAYhc,KAAKqN,KAAU4O,EAAUr6B,EAAEryH,MAAMwsJ,EAAQE,EAAUr6B,EAAE,GAAGj4H,OAAO6iJ,EAAQG,aAAaH,EAAQI,aAAatnI,EAAE22I,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BxP,EAAQgB,EAAWhB,QAAY0P,EAAW,CAAC,CAACC,aAAaX,IAAuBY,EAAS,CAAC,EAAM1mI,EAAM,IAAa,CAAC,IAAI,IAAI2mI,EAAShP,EAAOx8I,QAAQ,IAAI6kB,GAAO,GAAG2mI,EAAS,EAAE,CAAC,IAAIhP,EAAOvoG,OAAOpvB,GAAOoR,MAAM,SAAS,CAAC,IAAI4tF,EAAI84B,EAAW94B,IAAQ7iH,EAAK6iH,EAAIvmC,eAAek/D,EAAOvoG,OAAOpvB,IAAQg/F,EAAItmC,YAAYv8E,GAAM27I,EAAWJ,eAAev7I,CAAI,CAAC,MAAM,CAAyC,OAArCwqJ,EAAS3mI,GAAOmmI,EAAWQ,GAAiBhP,EAAOllG,OAAOk0G,EAAS,IAAI,IAAI,IAAI,IAAI9zG,EAAI8kG,EAAOx8I,QAAQ,IAAIwrJ,EAAS,GAAOtnC,EAAQs4B,EAAOxyH,UAAUwhI,EAAS,EAAE9zG,GAAS9iD,EAAOy2J,EAAWxqH,MAAS6W,EAAI,GAAGwsE,EAAQs4B,EAAOxyH,UAAUwhI,EAAS,GAAG7lJ,QAAQ,UAAU,IAAImoI,EAAa5rI,MAAM,iBAAiBgiH,EAAQ,oBAAoBtvH,EAAOsvH,SAASxsE,EAAI8zG,EAAS,EAAEtnC,EAAQprH,QAAeorH,EAAQjuF,MAAM,SAAQiuF,EAAQA,EAAQv+G,QAAQ,UAAU,IAAImoI,EAAa5rI,MAAM,iBAAiBgiH,EAAQ,uBAAuBxsE,EAAI8zG,EAAS,EAAEtnC,EAAQprH,QAAO,IAAI2yJ,EAAW72J,EAAO62J,WAAeC,EAAS92J,EAAOsvH,SAASA,EAA4G,GAA9EwnC,GAAU92J,EAAOsvH,SAAStvH,EAAOsvH,QAAQp5G,eAAeo5G,EAAQp5G,cAAmC,CAA4D,GAA3D6xI,EAAW8B,WAAW7pJ,EAAOgqJ,IAAIhqJ,EAAOmpJ,UAAU75B,GAAYunC,EAAY,IAAI,IAAIn+I,KAAUm+I,EAAY9O,EAAWkC,iBAAiBvxI,GAAao+I,GAAU5d,EAAasS,WAAW,iBAAiBl8B,EAAQ,2CAA2CtvH,EAAOsvH,QAAS,MAAMmnC,EAAWp0J,KAAKrC,GAAQ8iD,IAAM,MAAM,IAAI,IAAIikG,GAASroJ,EAASk4J,GAAU9zG,EAAIi0G,EAAiBnP,EAAOgP,EAAS7O,GAAY,MAAM,IAAI,IAAIhB,GAASroJ,EAASk4J,GAAU9zG,EAAIk0G,EAASpP,EAAOgP,EAAS7O,EAAW7O,GAAc,MAAM,QAAQ6N,GAASroJ,EAASk4J,GAAU,IAAIrsJ,EAAG,IAAI0sJ,EAAsBP,EAAaD,EAAWA,EAAWvyJ,OAAO,GAAGwyJ,aAA4GpN,GAA3FxmG,EAAIo0G,EAAsBtP,EAAOgP,EAASrsJ,EAAGmsJ,EAAaV,EAAe9c,GAAsB3uI,EAAGrG,QAAwJ,IAA7IqG,EAAG4sJ,QAAQC,EAAcxP,EAAO9kG,EAAIv4C,EAAG+kH,QAAQqnC,KAAWpsJ,EAAG4sJ,QAAO,EAASjP,EAAUY,MAAM5P,EAAaqS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAI+N,EAASC,EAAYvQ,EAAQ,CAAC,GAAW31I,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAG1S,EAASiN,EAAEqsI,QAAQrsI,EAAEo7I,QAAQuQ,EAAYvQ,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQsQ,EAAY5P,EAAcl9I,EAAGw9I,EAAW2O,IAAeD,EAAWp0J,KAAKkI,GAAIw9I,EAAWhB,QAAQA,CAAO,MAASU,EAAcl9I,EAAGw9I,EAAW2O,IAAeD,EAAWp0J,KAAKkI,GAAiB,iCAATA,EAAGy/I,KAAuCz/I,EAAG4sJ,OAA0Fr0G,IAAlFA,EAAIy0G,EAAwB3P,EAAO9kG,EAAIv4C,EAAG+kH,QAAQ0mC,EAAejO,GAAsF,CAA7D,MAAM3/I,GAAG8wI,EAAa5rI,MAAM,wBAAwBlF,GAAG06C,GAAK,CAAC,CAAIA,EAAI7yB,EAAOA,EAAM6yB,EAASszG,EAAW9xJ,KAAK03C,IAAI46G,EAAS3mI,GAAO,EAAG,CAAC,CAAC,SAASqnI,EAAYvyJ,EAAE21B,GAA2D,OAAxDA,EAAEwsH,WAAWniJ,EAAEmiJ,WAAWxsH,EAAEysH,aAAapiJ,EAAEoiJ,aAAoBzsH,CAAC,CAAC,SAASw8H,EAAsBtP,EAAO33H,EAAM1lB,EAAGmsJ,EAAaV,EAAe9c,GAA+D,IAAjD,IAAIse,EAAuB33I,IAAIoQ,EAAUtlB,EAAviI,IAA0jI,CAAC,IAAIrJ,EAAEsmJ,EAAOllG,OAAO7iC,GAAG,OAAOve,GAAG,IAAI,IAAI,GAAvlI,IAA0lIqJ,EAAY6sJ,EAAS5P,EAAO32I,MAAMgf,EAAMpQ,GAAGlV,EAAvmI,MAAmnI,IAA9nI,IAAioIA,EAA8B,MAAM,IAAItE,MAAM,uCAA5BsE,EAAxoI,CAA0sI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAjuI,IAAouIA,GAAlwI,IAA4wIA,EAAW,CAA0I,GAAj6I,IAA2xIA,IAAYuuI,EAAaqS,QAAQ,kCAAkCiM,EAAS5P,EAAO32I,MAAMgf,EAAMpQ,IAAGoQ,EAAMpQ,EAAE,KAAEA,EAAE+nI,EAAOx8I,QAAQ9J,EAAE2uB,IAAY,GAAmH,MAAM,IAAI5pB,MAAM,2BAA2B/E,EAAE,WAA7JZ,EAAMknJ,EAAO32I,MAAMgf,EAAMpQ,GAAG9O,QAAQ,WAAWilJ,GAAgBzrJ,EAAG0U,IAAIu4I,EAAS92J,EAAMuvB,EAAM,GAAGtlB,EAA97I,CAAwgJ,KAAM,IAA/hJ,GAAkiJA,EAA4N,MAAM,IAAItE,MAAM,kCAApN3F,EAAMknJ,EAAO32I,MAAMgf,EAAMpQ,GAAG9O,QAAQ,WAAWilJ,GAAgBzrJ,EAAG0U,IAAIu4I,EAAS92J,EAAMuvB,GAAOipH,EAAaqS,QAAQ,cAAciM,EAAS,uBAAuBl2J,EAAE,OAAO2uB,EAAMpQ,EAAE,EAAElV,EAA3tJ,CAA8xJ,CAAC,MAAM,IAAI,IAAI,OAAOA,GAAG,KAA74J,EAAw5JJ,EAAGktJ,WAAW7P,EAAO32I,MAAMgf,EAAMpQ,IAAI,KAAv2J,EAAu3J,KAAr2J,EAAs3J,KAAp2J,EAAq3JlV,EAAr3J,EAAm4JJ,EAAG4sJ,QAAO,EAAK,KAAv8J,EAAg+J,KAAxhK,EAAoiK,KAAjhK,EAAmiK,MAAM,QAAQ,MAAM,IAAI9wJ,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhG6yI,EAAa5rI,MAAM,2BAAtqK,GAAosK3C,GAAUJ,EAAGktJ,WAAW7P,EAAO32I,MAAMgf,EAAMpQ,IAAWA,EAAE,IAAI,IAAI,OAAOlV,GAAG,KAA9wK,EAAyxKJ,EAAGktJ,WAAW7P,EAAO32I,MAAMgf,EAAMpQ,IAAI,KAAxuK,EAAwvK,KAAtuK,EAAuvK,KAAruK,EAAsvK,MAAM,KAAjzK,EAA00K,KAAl4K,EAA+7K,OAAjDnf,EAAMknJ,EAAO32I,MAAMgf,EAAMpQ,IAAY5O,OAAO,KAAU1G,EAAG4sJ,QAAO,EAAKz2J,EAAMA,EAAMuQ,MAAM,GAAG,IAAG,KAAx9K,MAA6+KtG,IAAkBjK,EAAM82J,GAAh+K,GAA4+K7sJ,GAAwBuuI,EAAaqS,QAAQ,cAAc7qJ,EAAM,sBAAsB6J,EAAG0U,IAAIu4I,EAAS92J,EAAMqQ,QAAQ,WAAWilJ,GAAgB/lI,KAAkC,iCAAnBymI,EAAa,KAAuCh2J,EAAM2gC,MAAM,qCAAqC63G,EAAaqS,QAAQ,cAAc7qJ,EAAM,qBAAqBA,EAAM,eAAe6J,EAAG0U,IAAIve,EAAMA,EAAMuvB,IAAO,MAAM,KAA73L,EAAu4L,MAAM,IAAI5pB,MAAM,4BAA4B,OAAOwZ,EAAE,IAAI,IAAIve,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOqJ,GAAG,KAAlhM,EAA6hMJ,EAAGktJ,WAAW7P,EAAO32I,MAAMgf,EAAMpQ,IAAIlV,EAA19L,EAAw+L,MAAM,KAAzkM,EAAqlM6sJ,EAAS5P,EAAO32I,MAAMgf,EAAMpQ,GAAGlV,EAAjmM,EAAgnM,MAAM,KAAjlM,EAA0mM,IAAIjK,EAAMknJ,EAAO32I,MAAMgf,EAAMpQ,GAAG9O,QAAQ,WAAWilJ,GAAgB9c,EAAaqS,QAAQ,cAAc7qJ,EAAM,sBAAsB6J,EAAG0U,IAAIu4I,EAAS92J,EAAMuvB,GAAO,KAAxvM,EAAwwMtlB,EAAtvM,OAAgxM,OAAOA,GAAG,KAAl2M,EAAg4MJ,EAAG+kH,QAA8B,iCAAnBonC,EAAa,KAAuCc,EAASn2H,MAAM,qCAAqC63G,EAAaqS,QAAQ,cAAciM,EAAS,qBAAqBA,EAAS,gBAAgBjtJ,EAAG0U,IAAIu4I,EAASA,EAASvnI,GAAOA,EAAMpQ,EAAElV,EAA3oN,EAAopN,MAAM,KAAjlN,EAAimNuuI,EAAaqS,QAAQ,+BAA+BiM,EAAS,OAAO,KAAnpN,EAAoqN7sJ,EAA/vN,EAAwwNslB,EAAMpQ,EAAE,MAAM,KAAxvN,EAAkwNlV,EAAxuN,EAA8vNslB,EAAMpQ,EAAE,MAAM,KAAvtN,EAAwuN,MAAM,IAAIxZ,MAAM,+DAAgEwZ,GAAG,CAAC,CAAC,SAAS4nI,EAAcl9I,EAAGw9I,EAAW2O,GAAyE,IAA3D,IAAIpnC,EAAQ/kH,EAAG+kH,QAAYunC,EAAW,KAASzlJ,EAAE7G,EAAGrG,OAAakN,KAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAOg4I,EAAMz9I,EAAEy9I,MAAU1oJ,EAAMiL,EAAEjL,MAAiC,IAAvBg3J,EAAItO,EAAMh+I,QAAQ,MAAY,EAAG,IAAIsN,EAAO/M,EAAE+M,OAAO0wI,EAAMn4I,MAAM,EAAEymJ,GAASvO,EAAUC,EAAMn4I,MAAMymJ,EAAI,GAAOC,EAAkB,UAATj/I,GAAkBywI,OAAeA,EAAUC,EAAM1wI,EAAO,KAAKi/I,EAAiB,UAARvO,GAAiB,GAAGz9I,EAAEw9I,UAAUA,GAAwB,IAAXwO,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAUj3J,EAAMiL,EAAEq+I,IAAI,gCAAgCjC,EAAWgC,mBAAmB4N,EAASj3J,GAAO,CAAiB,IAAZ0Q,EAAE7G,EAAGrG,OAAakN,MAAiBsH,GAAZ/M,EAAEpB,EAAG6G,IAAgBsH,UAA8B,QAATA,IAAgB/M,EAAEq+I,IAAI,wCAAmD,UAATtxI,IAAkB/M,EAAEq+I,IAAI0M,EAAah+I,GAAQ,MAAM,IAAIg/I,KAAIpoC,EAAQlkH,QAAQ,MAAY,GAAGsN,EAAOnO,EAAGmO,OAAO42G,EAAQr+G,MAAM,EAAEymJ,GAAKvO,EAAU5+I,EAAG4+I,UAAU75B,EAAQr+G,MAAMymJ,EAAI,KAAQh/I,EAAO,KAAKywI,EAAU5+I,EAAG4+I,UAAU75B,GAAQ,IAAIwiC,EAAGvnJ,EAAGy/I,IAAI0M,EAAah+I,GAAQ,IAAqD,GAAjDqvI,EAAW9+F,aAAa6oG,EAAG3I,EAAU75B,EAAQ/kH,IAAOA,EAAG4sJ,OAA8L,OAAtD5sJ,EAAGmsJ,aAAaA,EAAansJ,EAAGssJ,WAAWA,GAAkB,EAAjJ,GAA5C9O,EAAW8B,WAAWiI,EAAG3I,EAAU75B,GAAYunC,EAAY,IAAIn+I,KAAUm+I,EAAY9O,EAAWkC,iBAAiBvxI,EAAiF,CAAC,SAAS6+I,EAAwB3P,EAAOiQ,EAAWvoC,EAAQ0mC,EAAejO,GAAY,GAAG,yBAAyB3nI,KAAKkvG,GAAS,CAAC,IAAIwoC,EAAWlQ,EAAOx8I,QAAQ,KAAKkkH,EAAQ,IAAIuoC,GAAgBzrJ,EAAKw7I,EAAOxyH,UAAUyiI,EAAW,EAAEC,GAAY,GAAG,OAAO13I,KAAKhU,GAAO,MAAG,YAAYgU,KAAKkvG,IAAUy4B,EAAWwC,WAAWn+I,EAAK,EAAEA,EAAKlI,QAAe4zJ,IAAW1rJ,EAAKA,EAAK2E,QAAQ,WAAWilJ,GAAgBjO,EAAWwC,WAAWn+I,EAAK,EAAEA,EAAKlI,QAAe4zJ,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAcxP,EAAOiQ,EAAWvoC,EAAQqnC,GAAU,IAAI5oI,EAAI4oI,EAASrnC,GAA8I,OAA7H,MAALvhG,KAAWA,EAAI65H,EAAOmQ,YAAY,KAAKzoC,EAAQ,MAAYuoC,IAAY9pI,EAAI65H,EAAOmQ,YAAY,KAAKzoC,IAASqnC,EAASrnC,GAASvhG,GAAWA,EAAI8pI,CAAU,CAAC,SAASD,EAAMhQ,EAAO7iG,GAAQ,IAAI,IAAI7G,KAAK0pG,EAAQ7iG,EAAO7G,GAAG0pG,EAAO1pG,EAAG,CAAC,SAAS84G,EAASpP,EAAO33H,EAAM83H,EAAW7O,GAA8C,GAAiB,MAAxC0O,EAAOllG,OAAOzyB,EAAM,GAAwB,MAA4B,MAAzB23H,EAAOllG,OAAOzyB,EAAM,IAAc6yB,EAAI8kG,EAAOx8I,QAAQ,SAAM6kB,EAAM,IAAUA,GAAO83H,EAAWlhC,QAAQ+gC,EAAO33H,EAAM,EAAE6yB,EAAI7yB,EAAM,GAAU6yB,EAAI,IAAOo2F,EAAa5rI,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1Bs6I,EAAOvoG,OAAOpvB,EAAM,EAAE,GAAa,CAAC,IAAI6yB,EAAI8kG,EAAOx8I,QAAQ,MAAM6kB,EAAM,GAAmG,OAAhG83H,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAO33H,EAAM,EAAE6yB,EAAI7yB,EAAM,GAAG83H,EAAWiD,WAAkBloG,EAAI,CAAC,CAAC,IAAIk1G,EAAqiD,SAAepQ,EAAO33H,GAAO,IAAIoR,EAAUiwH,EAAI,GAAO2G,EAAI,6CAAkF,IAArCA,EAAInJ,UAAU7+H,EAAMgoI,EAAI1d,KAAKqN,GAAcvmH,EAAM42H,EAAI1d,KAAKqN,IAAyB,GAAhB0J,EAAIjvJ,KAAKg/B,GAAUA,EAAM,GAAG,OAAOiwH,CAAI,CAA/uDtrI,CAAM4hI,EAAO33H,GAAWq5H,EAAI0O,EAAO9zJ,OAAO,GAAGolJ,EAAI,GAAG,YAAYlpI,KAAK43I,EAAO,GAAG,IAAI,CAAC,IAAI9yJ,EAAK8yJ,EAAO,GAAG,GAAOjG,EAAMzI,EAAI,GAAG,YAAYlpI,KAAK43I,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOhG,EAAM1I,EAAI,GAAG0O,EAAO,GAAG,GAAOE,EAAUF,EAAO1O,EAAI,GAA2I,OAAxIvB,EAAWkD,SAAS/lJ,EAAK6sJ,GAAOA,EAAMhhJ,QAAQ,kBAAkB,MAAMihJ,GAAOA,EAAMjhJ,QAAQ,kBAAkB,OAAOg3I,EAAWoQ,SAAgBD,EAAUpuJ,MAAMouJ,EAAU,GAAGh0J,MAAM,CAAE,OAAO,CAAC,CAAC,SAAS6yJ,EAAiBnP,EAAO33H,EAAM83H,GAAY,IAAIjlG,EAAI8kG,EAAOx8I,QAAQ,KAAK6kB,GAAO,GAAG6yB,EAAI,CAAC,IAAIzhB,EAAMumH,EAAOxyH,UAAUnF,EAAM6yB,GAAKzhB,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAGn9B,OAAO6jJ,EAAWmC,sBAAsB7oH,EAAM,GAAGA,EAAM,IAAWyhB,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAASm0G,EAAkBrP,GAAQ,CAAkjB,SAASwQ,EAAYC,EAAKvlJ,GAA8B,OAAtBulJ,EAAKvM,UAAUh5I,EAAculJ,CAAI,CAAnqVvQ,EAAU5vG,UAAU,CAAC5iC,MAAM,SAASsyI,EAAOI,EAAaE,GAAW,IAAIH,EAAWhqJ,KAAKgqJ,WAAWA,EAAWgB,gBAAgB6O,EAAM5P,EAAaA,EAAa,CAAC,GAAG1yI,EAAMsyI,EAAOI,EAAaE,EAAUH,EAAWhqJ,KAAKm7I,cAAc6O,EAAW4C,aAAa,GAAozTsM,EAAkB/+G,UAAU,CAACu/G,WAAW,SAASnoC,GAAS,IAAIwmC,EAAe11I,KAAKkvG,GAAU,MAAM,IAAIjpH,MAAM,mBAAmBipH,GAASvxH,KAAKuxH,QAAQA,CAAO,EAAErwG,IAAI,SAASmqI,EAAM1oJ,EAAMs3I,GAAQ,IAAI8d,EAAe11I,KAAKgpI,GAAQ,MAAM,IAAI/iJ,MAAM,qBAAqB+iJ,GAAOrrJ,KAAKA,KAAKmG,UAAU,CAACklJ,MAAMA,EAAM1oJ,MAAMA,EAAMs3I,OAAOA,EAAO,EAAE9zI,OAAO,EAAEo0J,aAAa,SAASlnJ,GAAG,OAAOrT,KAAKqT,GAAG+3I,SAAS,EAAEO,WAAW,SAASt4I,GAAG,OAAOrT,KAAKqT,GAAG21I,OAAO,EAAEyC,SAAS,SAASp4I,GAAG,OAAOrT,KAAKqT,GAAGg4I,KAAK,EAAEG,OAAO,SAASn4I,GAAG,OAAOrT,KAAKqT,GAAG44I,GAAG,EAAEhgJ,SAAS,SAASoH,GAAG,OAAOrT,KAAKqT,GAAG1Q,KAAK,GAA4E03J,EAAY,CAAC,EAAEA,EAAYlgH,qBAAqBkgH,IAAcA,EAAY,SAASC,EAAKvlJ,GAAQ,SAAS+M,IAAI,CAA4B,IAAI/M,KAA/B+M,EAAEq4B,UAAUplC,EAAO+M,EAAE,IAAIA,EAAgBw4I,EAAMx4I,EAAE/M,GAAQulJ,EAAKvlJ,GAAQ,OAAO+M,CAAC,GAAoNpiB,EAAQqqJ,UAAUA,CAAS,EAAE,CAAC,GAAG,mBAAmB,CAAC,SAASn0E,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIzuD,EAAU7S,EAAQ,eAAmB2gE,EAAS3gE,EAAQ,iBAAiB2gE,SAAarkE,EAAU0D,EAAQ,UAAU1D,UAA0D,IAAIylE,EAAW/hE,EAAQ,gBAAoBqvE,EAAW,iDAAiD,SAASuV,EAAatW,GAAyB,OAAVA,EAAK5J,IAAgB,CAAC,SAASmgB,EAAaC,GAAO,IAAIpgB,EAAKogB,EAAMpgB,KAAKhqC,EAAKoqD,EAAMpqD,KAAK7L,EAAMi2D,EAAMj2D,MAAsCk2D,EAArBD,EAAMhV,WAAoCxyI,MAAMo9F,EAAK,EAAE7L,GAAOm0C,QAAO,SAASrxH,EAAOnZ,GAAM,OAAOmZ,EAAOnZ,EAAKzL,KAAK,GAAE,IAAQ2vE,GAAO,IAAKJ,GAAWE,gBAAgB,QAAQuoF,EAAU,UAAc1gB,EAAO3nE,EAAOE,qBAAqB,SAAaooF,EAAItoF,EAAOE,qBAAqB,SAA4M,OAAnM8nE,EAAKsgB,IAAI,CAACC,GAAGv1I,SAASs1I,EAAI,GAAGz2E,aAAa,MAAM,IAAI22E,GAAGx1I,SAASs1I,EAAI,GAAGz2E,aAAa,MAAM,KAAKm2D,EAAKL,OAAO,CAAC/sI,EAAEoY,SAAS20H,EAAO,GAAG91D,aAAa,KAAK,IAAI7sB,EAAEhyC,SAAS20H,EAAO,GAAG91D,aAAa,KAAK,KAAYm2D,CAAI,CAAC,IAAI7rB,EAAY,WAAW,SAASA,EAAYtsH,GAA4K,GAAtwC,SAAyB0lD,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAo9BC,CAAgB93I,KAAKyuH,GAAazuH,KAAKmH,KAAK,cAAcnH,KAAKmC,QAAQA,GAAS,CAAC,EAAEnC,KAAK+6J,YAAY,CAAC,EAA4B,MAAvB/6J,KAAKmC,QAAQivH,WAAgBpxH,KAAKmC,QAAQivH,UAAS,GAAgC,MAAvBpxH,KAAKmC,QAAQkvH,SAAgB,MAAM,IAAI/oH,MAAM,4BAA4B,GAAyB,MAAtBtI,KAAKmC,QAAQqvH,QAAe,MAAM,IAAIlpH,MAAM,2BAA2BtI,KAAKg7J,YAAY,CAAC,CAC3u4B,OAD4u4BrkB,EAAaloB,EAAY,CAAC,CAACpqH,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQu0I,GACtw+B,IAAIukB,EAAUvkB,EAAczlB,IAAIp+C,KAAK,eAAetrD,OAAOmvH,EAAczlB,IAAIp+C,KAAK,0BAA0B1kE,KAAI,SAAS0kE,GAAM,OAAOA,EAAK1rE,IAAI,IAAgL,OAA7KnH,KAAKi9I,eAAevG,EAAcuG,eAAej9I,KAAK48C,SAAS85F,EAAc95F,SAAS58C,KAAKixH,IAAIylB,EAAczlB,IAAI9uH,EAAQg7I,aAAah7I,EAAQg7I,aAAa51H,OAAO0zI,GAAkB94J,CAAO,GAAG,CAACkC,IAAI,MAAM1B,MAAM,SAAaR,GAAYA,EAAQ8uH,MAAKjxH,KAAKixH,IAAI9uH,EAAQ8uH,KAAO9uH,EAAQy1I,eAAc53I,KAAK43I,aAAaz1I,EAAQy1I,aAAa,GAAG,CAACvzI,IAAI,QAAQ1B,MAAM,SAAeuiJ,GAAoB,IAAIzlJ,EAAOwlJ,EAAerjJ,EAAK,cAAc,MAAuC,OAApCsjJ,EAAmB7tH,UAAU,EAAE,GAAiB,CAACz1B,KAAKA,EAAKe,MAAMuiJ,EAAmB5jG,OAAO,GAAG7hD,OAAOA,EAAO2xH,UAAS,GAA6C,MAApC8zB,EAAmB7tH,UAAU,EAAE,GAAgB,CAACz1B,KAAKA,EAAKe,MAAMuiJ,EAAmB5jG,OAAO,GAAG7hD,OAAOA,EAAO2xH,UAAS,GAAc,IAAI,GAAG,CAAC/sH,IAAI,YAAY1B,MAAM,SAAmB81H,GAAQ,IAAI+rB,OAAS,EAAWiB,OAAS,EAA8I,MAApH,SAAhBzlJ,KAAK48C,UAAmB4nG,EAAS,OAAOiB,EAASgV,IAAkBjW,EAASxkJ,KAAKmC,QAAQivH,SAAS,MAAM,MAAMq0B,EAAS+U,GAAoBjkB,EAASmG,OAAOoJ,YAAYrtB,EAAO,CAACwsB,WAAWA,EAAWQ,SAASA,EAASjB,SAASA,GAAU,GAAG,CAACngJ,IAAI,SAAS1B,MAAM,SAAgB23I,EAAKn4I,GAASnC,KAAK+6J,YAAY54J,EAAQm8I,UAAUt+I,KAAK+6J,YAAY54J,EAAQm8I,WAAW,IAAI3G,EAAW33I,KAAKixH,IAAI9uH,EAAQm8I,SAASt+I,KAAK43I,aAAa53I,KAAK48C,UAAU,IAAIs+G,EAAWl7J,KAAK+6J,YAAY54J,EAAQm8I,UAAU,GAAgB,iBAAZhE,EAAK14I,MAAsB04I,EAAK76I,SAASwlJ,EAAY,OAAO,KAAK,IAAI,IAAI3zB,EAASnvH,EAAQmjJ,aAAar5I,SAASquI,EAAK33I,OAAO,IAAI2uH,EAAU,MAAM,IAAIhpH,MAAM,qBAAqB,IAAImpH,EAAUzxH,KAAKmC,QAAQkvH,SAASC,EAASgpB,EAAK33I,OAAWm3I,EAAIohB,EAAW1hB,aAAax5I,KAAKm7J,mBAAmB1pC,GAAe2pC,EAAUp7J,KAAKmC,QAAQqvH,QAAQC,EAAUH,EAASgpB,EAAK33I,OAAO,OAAO3C,KAAKq7J,gBAAgB/gB,EAAKR,EAAIshB,EAAgE,CAArD,MAAM/wJ,GAAG,MAAM,CAAC1H,MAAM3C,KAAKi9I,eAAewC,WAAW,CAAC,GAAG,CAACp7I,IAAI,kBAAkB1B,MAAM,SAAyB23I,EAAKR,EAAIshB,GAAW,IADum4Bt6I,EAC9l4Bg5H,IADun4Bh5H,EACjn4B,MAAM,IAAIxY,MAAM,wBADyj4B,IAAewY,EAC5i4BuiE,EAAK,CAACkzD,EAASC,oBAAoB4kB,EAAU,IAAI7kB,EAASC,oBAAoB4kB,EAAU,KAAShqC,EAASpxH,KAAKmC,QAAQivH,UAAUkpB,EAAKlpB,SAAyK,MAAM,CAACzuH,MAAjI,SAAhB3C,KAAK48C,SAA2B58C,KAAKs7J,oBAAoBhhB,EAAKR,EAAIz2D,EAAK+tC,GAAuBpxH,KAAKu7J,oBAAoBzhB,EAAIz2D,EAAK+tC,GAA+B,GAAG,CAAC/sH,IAAI,sBAAsB1B,MAAM,SAA6B23I,EAAKR,EAAIz2D,EAAK+tC,GAAU,IAAI6oB,EAAO,CAAC/sI,EAAEotI,EAAKL,OAAO/sI,EAAEoqD,EAAEgjF,EAAKL,OAAO3iF,GAAOkkG,EAAOlhB,EAAKsgB,IAAIC,GAAOY,EAAOnhB,EAAKsgB,IAAIE,GAAOY,EAAKr4E,EAAK,GAAOs4E,EAAKt4E,EAAK,GAAoE,OAA9D+tC,IAAU6oB,EAAO/sI,GAAGsuJ,EAAO,EAAEE,EAAK,EAAEzhB,EAAO3iF,GAAGmkG,EAAO,EAAEE,EAAK,GAASlzE,EAAUuxD,gBAAgBF,EAAI,CAAC4hB,EAAKC,GAAM1hB,EAAO,GAAG,CAAC51I,IAAI,sBAAsB1B,MAAM,SAA6Bm3I,EAAIz2D,EAAK+tC,GAAU,OAAOA,EAAS3oC,EAAUsxD,oBAAoBD,EAAIz2D,GAAMoF,EAAUoxD,YAAYC,EAAIz2D,EAAK,GAAG,CAACh/E,IAAI,mBAAmB1B,MAAM,WAA4B,IAAIwE,EAAK,mBAAmBnH,KAAKg7J,YAAY,OAA0B,OAAnBh7J,KAAKg7J,cAAqB7zJ,CAAI,KAAYsnH,CAAW,CADq23B,GACj23BhvH,EAAOC,QAAQ+uH,CAAW,EAAE,CAAC,eAAe,EAAE,cAAc,EAAEioB,cAAc,EAAEkG,OAAO,MAAM,CAAC,EAAE,GAH/rF,CAGmsF,+BCH5+Fn9I,EAAOC,QAAoS,SAAS2K,EAAEsyB,EAAEwjB,EAAEvwC,GAAG,SAAShD,EAAEkZ,EAAE0xD,GAAG,IAAIr3B,EAAEr6B,GAAG,CAAC,IAAI6W,EAAE7W,GAAG,CAAmE,GAAGzS,EAAE,OAAOA,EAAEyS,GAAE,GAAI,IAAI9e,EAAE,IAAIsB,MAAM,uBAAuBwd,EAAE,KAAK,MAAM9e,EAAEyP,KAAK,mBAAmBzP,CAAC,CAAC,IAAIsN,EAAE6rC,EAAEr6B,GAAG,CAACpmB,QAAQ,CAAC,GAAGi9B,EAAE7W,GAAG,GAAGs0B,KAAK9lC,EAAE5U,SAAQ,SAAS2K,GAAoB,OAAOuC,EAAlB+vB,EAAE7W,GAAG,GAAGzb,IAAgBA,EAAE,GAAEiK,EAAEA,EAAE5U,QAAQ2K,EAAEsyB,EAAEwjB,EAAEvwC,EAAE,CAAC,OAAOuwC,EAAEr6B,GAAGpmB,OAAO,CAA2C,IAA1C,IAAI2T,OAAE,EAA4CyS,EAAE,EAAEA,EAAElW,EAAEzJ,OAAO2f,IAAIlZ,EAAEgD,EAAEkW,IAAI,OAAOlZ,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAASgpE,EAAQn2E,EAAOC,GAAS,aAAgM,IAAIw6I,EAAQtkE,EAAQ,aAAiB1D,EAAU0D,EAAQ,UAAU1D,UAAcioE,EAAcvkE,EAAQ,UAAUukE,cAAkBC,EAAOxkE,EAAQ,YAAgB2gE,EAAS,CAAC,EAA0HA,EAASnyI,SAAS,CAACi2I,WAAW,SAAoBC,GAAM,OAAIA,EAAK76I,QAA6B66I,EAAK76I,OAAyB,IAA7C,WAAwD,EAAEy2E,OAAOgkE,GAAxQ,SAAgBpoB,GAAK,OAAnVnvH,EAAmX,SAAaovH,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvbztH,EAAiX,SAArXyT,EAAkX,CAAC,GAArV3D,OAAO8iI,eAAen/H,EAAIzT,EAAI,CAAC1B,MAAMA,EAAMm0I,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAYl/H,EAAIzT,GAAK1B,EAAamV,EAA/K,IAAyBA,EAAIzT,EAAI1B,CAAqb,IAAiK43I,WAAW,CAACroH,MAAM,IAAI6yB,IAAI,MAAMwxF,EAASiE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAM3iI,OAAI,EAAO1D,OAAK,EAAef,EAAE,EAAEA,EAAEN,UAAU5M,OAAOkN,GAAG,EAAE,CAACyE,EAAI/E,UAAUM,GAAGe,EAAKD,OAAOC,KAAK0D,GAAK,IAAI,IAAIupB,EAAE,EAAEA,EAAEjtB,EAAKjO,OAAOk7B,GAAG,EAAGo5G,EAAOrmI,EAAKitB,IAAIvpB,EAAI1D,EAAKitB,GAAI,CAAC,OAAOo5G,CAAM,EAAElE,EAASiC,QAAQ,SAASkC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAEnE,EAASqE,WAAW,SAAShuI,GAAG,IAAI,QAAO+d,IAAJ/d,EAAe,OAAiB,OAAOiuI,mBAAmBC,OAAOvE,EAASwE,cAAcnuI,IAAmI,CAA9H,MAAMvC,GAAG,IAAIlC,EAAI,IAAIG,MAAM,OAA0F,MAAnFH,EAAIumF,WAAW7kF,KAAK+C,EAAEzE,EAAIumF,WAAWssD,YAAY,kCAAwC7yI,CAAG,CAAC,EAAEouI,EAAS0E,WAAW,SAASruI,GAAG,OAAOsuI,SAASjlI,mBAAmBrJ,GAAG,EAAE2pI,EAASgC,QAAQ,SAAS5kE,EAAIwnE,GAAoE,OAA3C,IAAIjpE,EAAU,CAACipE,aAAaA,IAA6B/oE,gBAAgBuB,EAAI,WAAW,EAAE4iE,EAAS6E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC9E,EAAS+E,aAAa,SAAS3nE,GAAK,OAAOA,EAAI3gE,QAAQqoI,EAAiB,OAAO,EAAE9E,EAASgF,eAAepnI,OAAOC,KAAKmiI,EAAS6E,SAASjtI,KAAI,SAASqtI,GAAS,IAAIC,EAAUlF,EAAS6E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAIt5H,OAAOm0H,EAAS+E,aAAaG,GAAW,KAAKE,KAAK,IAAIv5H,OAAOm0H,EAAS+E,aAAaE,GAAS,KAAKtpH,MAAMupH,EAAU12F,IAAIy2F,EAAQ,IAAGjF,EAASqF,WAAW,SAAS/3F,GAAqB,IAAb,IAAIj0C,OAAE,EAAeyD,EAAE,EAAEiB,EAAEiiI,EAASgF,eAAep1I,OAAOkN,EAAEiB,EAAEjB,IAAKzD,EAAE2mI,EAASgF,eAAeloI,GAAGwwC,EAAOA,EAAO7wC,QAAQpD,EAAE8rI,OAAO9rI,EAAEm1C,KAAK,OAAOlB,CAAM,EAAE0yF,EAASsF,WAAW,SAASh4F,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOnvC,YAAwB,IAAb,IAAI9E,OAAE,EAAeyD,EAAE,EAAEiB,EAAEiiI,EAASgF,eAAep1I,OAAOkN,EAAEiB,EAAEjB,IAAKzD,EAAE2mI,EAASgF,eAAeloI,GAAGwwC,EAAOA,EAAO7wC,QAAQpD,EAAE+rI,KAAK/rI,EAAEsiB,OAAO,OAAO2xB,CAAM,EAAE0yF,EAAS7wI,UAAU,SAASoS,GAAK,OAAOjE,KAAK0D,MAAM1D,KAAKC,UAAUgE,GAAK,EAAEy+H,EAASuF,aAAa,SAASC,GAAQ,OAAOA,EAAOnD,QAAO,SAAS9qI,EAAOkuI,GAAgD,OAAzC7uI,MAAMgtC,UAAU71C,KAAKqlC,MAAM77B,EAAOkuI,GAAcluI,CAAM,GAAE,GAAG,EAAE,IAAImuI,EAAY,IAAI75H,OAAOlH,OAAOghI,aAAa,KAAK,KAA8U,SAASC,EAAoBh6I,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,WAAWj6I,EAAQs3B,QAAQ,sBAAsBt3B,EAAQxB,UAAsN,MAA5MwH,EAAIumF,WAAW,CAAC9tF,GAAG,uBAAuBuB,EAAQxB,SAASq6I,YAAY,WAAW74I,EAAQs3B,QAAQ,sBAAsBt3B,EAAQxB,SAAS83H,OAAOt2H,EAAQs2H,OAAO1sH,MAAM5J,EAAQ4J,MAAM0tB,QAAQt3B,EAAQs3B,SAAetxB,CAAG,CAA1qBouI,EAASwE,cAAc,SAASnuI,GAAG,OAAOA,EAAEoG,QAAQipI,EAAY,IAAI,EAAE1F,EAAS8F,aAAa,SAASC,EAAMnsE,GAA4C,IAAnC,IAAIosE,EAAW,GAAOj5G,OAAM,EAA0C,OAA5BA,EAAMg5G,EAAME,KAAKrsE,KAAiBosE,EAAWj4I,KAAK,CAAC03I,MAAM14G,EAAM22G,OAAO32G,EAAMv3B,QAAQ,OAAOwwI,CAAU,EAAEhG,EAASkG,aAAa,SAAS3kI,GAAK,OAAO3D,OAAOC,KAAK0D,GAAK3R,MAAM,EAAoWowI,EAAS5zF,SAAS,SAAS81E,EAAOh/F,EAAQ1tB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMuI,EAAEmkH,EAAOtyH,OAAOkN,EAAEiB,EAAEjB,IAAwB,GAAVolH,EAAOplH,GAAW1Q,QAAQ,KAAK82B,EAAQ,IAAK,OAAOpmB,EAAG8oI,EAAoB,CAACx7I,SAAS,QAAQ84B,QAAQA,EAAQg/F,OAAOA,EAAO1sH,MAAMA,GAAO,EAAEwqI,EAAS7zF,QAAQ,SAAS+1E,EAAOh/F,EAAQ1tB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMsH,GAAG,EAAEA,IAAI,CAAC,IAAIinI,EAAK7hB,EAAOplH,GAAG,GAAqC,IAAlCinI,EAAK33I,MAAM0K,QAAQ,IAAIosB,KAAiE,IAAnD,CAAC,IAAI,KAAKpsB,QAAQitI,EAAK33I,MAAM82B,EAAQtzB,OAAO,IAAU,OAAOkN,CAAE,CAAC8oI,EAAoB,CAACx7I,SAAS,OAAO84B,QAAQA,EAAQg/F,OAAOA,EAAO1sH,MAAMA,GAAO,EAAEtM,EAAOC,QAAQ62I,CAAQ,EAAE,CAAC,WAAW,EAAE,YAAY,EAAEqG,OAAO,KAAK,EAAE,CAAC,SAAShnE,EAAQn2E,EAAOC,GAAS,aAAa,SAASm/I,EAAQvtI,GAAStR,KAAKmH,KAAK,eAAenH,KAAKsR,QAAQA,EAAQtR,KAAK8+I,MAAM,IAAIx2I,MAAMgJ,GAASwtI,KAAK,CAAmC,SAAS1C,EAAgB9qI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAKsR,QAAQA,EAAQtR,KAAK8+I,MAAM,IAAIx2I,MAAMgJ,GAASwtI,KAAK,CAAuC,SAASC,EAAmBztI,GAAStR,KAAKmH,KAAK,mBAAmBnH,KAAKsR,QAAQA,EAAQtR,KAAK8+I,MAAM,IAAIx2I,MAAMgJ,GAASwtI,KAAK,CAA0C,SAASE,EAAgB1tI,GAAStR,KAAKmH,KAAK,gBAAgBnH,KAAK0uF,WAAW,CAACssD,YAAY,iBAAiBh7I,KAAKsR,QAAQA,EAAQtR,KAAK8+I,MAAM,IAAIx2I,MAAMgJ,GAASwtI,KAAK,CAAngBD,EAAQ1kG,UAAU7xC,MAAM6xC,UAA+HiiG,EAAgBjiG,UAAU,IAAI0kG,EAAmIE,EAAmB5kG,UAAU,IAAI0kG,EAA2KG,EAAgB7kG,UAAU,IAAI0kG,EAAQp/I,EAAOC,QAAQ,CAACm/I,QAAQA,EAAQzC,gBAAgBA,EAAgB4C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASnpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIu/I,EAAWrpE,EAAQ,kBAAsBspE,EAAoBtpE,EAAQ,4BAAgCupE,EAAavpE,EAAQ,oBAAwBwpE,EAAgBxpE,EAAQ,+BAAmC7I,EAAO6I,EAAQ,oBAAwBypE,EAAmB,CAAC7B,kBAAkB,SAA2BvsB,GAAkI,OAA1GA,EAAIp+C,KAAK,2DAA2D1kE,KAAI,SAAS0kE,GAAM,OAAOA,EAAK1rE,IAAI,IAAyBogB,OAAO,CAAC,wBAAwB,EAAEm3H,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAAC3wE,EAAOqyE,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2BvsB,GAAwG,OAAhFA,EAAIp+C,KAAK,iCAAiC1kE,KAAI,SAAS0kE,GAAM,OAAOA,EAAK1rE,IAAI,IAAyBogB,OAAO,CAAC,qBAAqB,EAAEm3H,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAAC3wE,EAAOmyE,EAAoBE,EAAgBD,EAAaF,IAAax/I,EAAOC,QAAQ,CAACigJ,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,EAAE,iBAAiB,EAAE,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAASzpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI06I,EAAOxkE,EAAQ,YAAgB2gE,EAAS3gE,EAAQ,eAAe,SAASiqE,EAAQC,EAAMx8G,GAAO,OAAOw8G,EAAM,IAAIx8G,EAAM22G,QAAQ32G,EAAM22G,OAAO6F,EAAM,EAAE,CAAC,SAASC,EAAgBzF,EAAK0F,GAAW,GAAe,QAAZ1F,EAAK14I,MAA8B,UAAhB04I,EAAK35I,UAAoB25I,EAAKjsI,KAAK,CAAC,GAAG2xI,EAAW,MAAM,IAAI13I,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZgyI,EAAK14I,MAA8B,QAAhB04I,EAAK35I,UAAkB25I,EAAKjsI,KAAK,CAAC,IAAI2xI,EAAW,MAAM,IAAI13I,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAO03I,CAAS,CAAC,SAASC,EAAWryI,EAAEC,GAAG,OAAOD,EAAEqsI,OAAOpsI,EAAEosI,MAAM,CAAC,SAASiG,EAAOpuB,GAAK,IAAI5/F,EAAM,EAAc,MAAT4/F,EAAI,KAAU5/F,EAAM,GAAE,IAAInmB,EAAM+lH,EAAIzkH,QAAQ,KAAS03C,GAAa,IAATh5C,EAAW+lH,EAAI3rH,OAAO,EAAE4F,EAAM,MAAM,CAAC+lH,IAAIA,EAAI5+G,MAAMgf,EAAM6yB,GAAKpkD,SAAiB,IAARuxB,EAAU,QAAQ,MAAM,CAA6hC,SAASiuH,EAA0Bh+I,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,gBAAmM,MAAnLj0I,EAAIumF,WAAW,CAAC0xD,KAAKj+I,EAAQi+I,KAAKn4H,MAAM,KAAK,GAAGq5B,OAAO,GAAG1gD,GAAG,eAAe0O,QAAQnN,EAAQi+I,KAAKpF,YAAY,2BAA2B74I,EAAQi+I,KAAK9+F,OAAO,EAAE,IAAI,iBAAuBn5C,CAAG,CAAC,SAASk4I,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACxG,OAAO,GAAOmG,OAAK,EAAOE,EAAiBr8I,SAAQ,SAASy8I,GAAgBN,EAAKG,EAASj/F,OAAOm/F,EAAmBxG,OAAOyG,EAAezG,OAAOwG,EAAmBxG,SAAqC,UAA1ByG,EAAe//I,UAAoB6/I,GAAuC,QAA1BE,EAAe//I,WAAmB6/I,KAA0C,UAA1BE,EAAe//I,SAAoBw/I,EAA0B,CAACC,KAAKA,IAA3+B,SAAmCj+I,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,gBAAyL,MAAzKj0I,EAAIumF,WAAW,CAAC0xD,KAAKj+I,EAAQi+I,KAAKn4H,MAAM,KAAK,GAAGrnB,GAAG,eAAe0O,QAAQnN,EAAQi+I,KAAKpF,YAAY,2BAA2B74I,EAAQi+I,KAAK9+F,OAAO,EAAE,IAAI,iBAAuBn5C,CAAG,CAAsuBw4I,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAASp6I,OAAQi6I,EAAKG,EAASj/F,OAAOm/F,EAAmBxG,OAAOyG,EAAsBD,EAAmBxG,QAAWuG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAI7qI,EAAIrV,GAAU,IAAI6/B,EAAQ,GAAOy5G,GAAQ,EAAE,IAAiD,KAA9CA,EAAO4G,EAAIxzI,QAAQ2I,EAAIikI,EAAO,KAAmBz5G,EAAQl8B,KAAK,CAAC21I,OAAOA,EAAOt5I,SAASA,WAA4B,IAAVs5I,GAAa,OAAOz5G,CAAO,CAAC,SAASsgH,EAAOC,GAAmB,IAAI/D,EAAMh9I,KAAKA,KAAK+gJ,kBAAkBA,EAAkB/gJ,KAAKghJ,KAAK,GAAGhhJ,KAAKihJ,gBAAgB,SAAS1G,GAAYyC,EAAMgE,KAAKhE,EAAM+D,kBAAkBzyI,KAAK,IAAI,IAAI2rI,EAAO,EAAE+C,EAAMkE,OAAOlE,EAAM+D,kBAAkB5yI,KAAI,SAASmsI,GAA0B,OAApBL,GAAQK,EAAKn0I,QAAqBm0I,EAAKn0I,MAAM,IAAG,IAAIm6I,EAAiB/J,EAASuF,aAAa,CAAC8E,EAAc5D,EAAMgE,KAAKzG,EAAWroH,MAAM,SAAS0uH,EAAc5D,EAAMgE,KAAKzG,EAAWx1F,IAAI,SAASp3C,KAAKsyI,GAAYI,EAAuBC,EAAiBtD,EAAMgE,MAAM,IAAIG,EAAgB,CAACjvH,MAAMqoH,EAAWroH,MAAM/rB,OAAO4+C,IAAIw1F,EAAWx1F,IAAI5+C,QAAYi7I,EAAQ,EAAMC,EAAe,EAAErE,EAAMvkB,OAAOukB,EAAMkE,OAAO/yI,KAAI,SAAS8rI,EAAO5mI,GAAkI,IAA/H,IAAIysI,EAAM,CAAC7F,EAAOA,EAAOj6I,KAAK+gJ,kBAAkB1tI,GAAGlN,QAAYm7I,EAAYthJ,KAAK+gJ,kBAAkB1tI,GAAOkuI,EAAmB,GAASF,EAAef,EAAiBn6I,QAAQ05I,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmBj9I,KAAKg8I,EAAiBe,IAAiBA,IAAiB,IAAIr5H,EAAM,GAAOm3E,EAAO,EAAKiiD,EAAQ,IAAGjiD,EAAOiiD,EAAQA,EAAQ,GAAEG,EAAmBt9I,SAAQ,SAASu9I,GAAmB,IAAI7+I,EAAM2+I,EAAYhgG,OAAO69C,EAAOqiD,EAAkBvH,OAAOA,EAAO96C,GAAWx8F,EAAMwD,OAAO,GAAG6hB,EAAM1jB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQqlB,EAAM1jB,KAAK,CAAC1C,KAAK,YAAYjB,SAAS6gJ,EAAkB7gJ,WAAWw+F,EAAOqiD,EAAkBvH,OAAOA,EAAOkH,EAAgBK,EAAkB7gJ,SAAS,IAAGygJ,EAAQjiD,EAAOmiD,EAAYn7I,OAAO,IAAIxD,EAAM2+I,EAAYhgG,OAAO69C,GAAoE,OAAzDx8F,EAAMwD,OAAO,GAAG6hB,EAAM1jB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAeqlB,CAAK,GAAEg1H,EAAM,CAAC,CAACv9I,EAAOC,QAAQ,CAAC6X,MAAM,SAAekqI,EAAUlH,GAAY,IAAIyF,GAAU,EAAUe,EAAkB,GAAGU,EAAUx9I,SAAQ,SAASq2I,IAAM0F,EAAUD,EAAgBzF,EAAK0F,KAAqC,YAAZ1F,EAAK14I,MAAkBm/I,EAAkBz8I,KAAKg2I,EAAK33I,MAAO,IAAG,IAAIswE,EAAO,IAAI6tE,EAAOC,GAAmB9tE,EAAOguE,gBAAgB1G,GAAY,IAAImH,EAAS,GAAO31I,EAAM,EAAoW,OAAlW01I,EAAUx9I,SAAQ,SAASq2I,GAAM0F,EAAUD,EAAgBzF,EAAK0F,GAA0B,YAAZ1F,EAAK14I,OAAkB04I,EAAK35I,SAASq/I,EAAU,YAAY,cAAgBA,GAAuB,YAAZ1F,EAAK14I,MAAkBuL,MAAMgtC,UAAU71C,KAAKqlC,MAAM+3G,EAASzuE,EAAOwlD,OAAO1sH,GAAOoC,KAAI,SAAS2T,GAAiD,MAAlC,YAATA,EAAElgB,OAAkBkgB,EAAEnhB,SAAS,aAAmBmhB,CAAC,KAAI/V,KAAa21I,EAASp9I,KAAKg2I,EAAM,IAAUoH,CAAQ,EAAEC,SAAS,SAAkBxxE,EAAQyxE,GAAS,IAAIC,EAApgJ,SAAoB1xE,EAAQ2xE,EAAeC,GAAuU,IAArT,IAAI5iD,EAAO,EAAM6iD,EAAc7xE,EAAQhqE,OAAW87I,EAAW1L,EAASuF,aAAa,CAACgG,EAAe3zI,KAAI,SAAS2jH,GAAK,MAAM,CAACA,IAAIA,EAAIzjH,MAAK,EAAK,IAAG0zI,EAAiB5zI,KAAI,SAAS2jH,GAAK,MAAM,CAACA,IAAIA,EAAIzjH,MAAK,EAAM,MAAKuqI,QAAO,SAASqJ,EAAWtlH,GAA4B,OAAzBslH,EAAWtlH,EAAEm1F,KAAKn1F,EAAEtuB,KAAY4zI,CAAU,GAAE,CAAC,GAAOC,EAAa,GAAS/iD,EAAO6iD,IAA+D,KAAhD7iD,EAAOhvB,EAAQ9iE,QAAQ,IAAI8xF,KAA5B,CAA0D,IAAI86C,EAAO96C,EAAOA,EAAOhvB,EAAQ9iE,QAAQ,IAAI8xF,GAAQ,IAAIgjD,EAAQhyE,EAAQj9D,MAAM+mI,EAAO96C,EAAO,GAAOijD,EAAQlC,EAAOiC,GAASrwB,EAAIswB,EAAQtwB,IAAInxH,EAASyhJ,EAAQzhJ,SAAa0N,EAAK4zI,EAAWnwB,GAAc,MAANzjH,GAAqB6zI,EAAa59I,KAAK,CAAC1C,KAAK,MAAMjB,SAASA,EAAS0N,KAAKA,EAAK4rI,OAAOA,EAAOt3I,MAAMw/I,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAWlyE,EAAQyxE,EAAQvzI,KAAKuzI,EAAQU,OAAWnjD,EAAO,EAAMs5B,EAAOopB,EAAQjJ,QAAO,SAASngB,EAAOn1F,GAAO,IAAI3gC,EAAMwtE,EAAQ7uB,OAAO69C,EAAO77D,EAAM22G,OAAO96C,GAA4K,OAAjKx8F,EAAMwD,OAAO,GAAGsyH,EAAOn0H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQw8F,EAAO77D,EAAM22G,OAAO32G,EAAM3gC,MAAMwD,cAAcm9B,EAAM22G,OAAU32G,EAAM3gC,MAAMwD,OAAO,GAAGsyH,EAAOn0H,KAAKg/B,GAAcm1F,CAAM,GAAE,IAAQ91H,EAAMwtE,EAAQ7uB,OAAO69C,GAAqE,OAA1Dx8F,EAAMwD,OAAO,GAAGsyH,EAAOn0H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe81H,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAAS7iD,EAAQn2E,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiB6iJ,GAAM,IAAIC,EAAc3uI,KAAKC,UAAU2uI,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAIjsH,EAAKgsH,EAAczvI,WAAW,OAAOyjB,KAAQisH,EAAMA,EAAMjsH,GAAMisH,EAAMjsH,GAAM+rH,EAAK54G,MAAM3pC,KAAK+S,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS6iE,EAAQn2E,EAAOC,GAAS,aAAa,SAASgjJ,EAAiB3G,EAAOr0F,GAAuB,IAAhB,IAAIi7F,GAAU,EAAUtvI,EAAE,EAAEiB,EAAEynI,EAAO51I,OAAOkN,EAAEiB,EAAEjB,IAAQq0C,EAAMr0C,IAAI0oI,EAAO1oI,GAAGlN,UAAgC,IAAZw8I,GAAe5G,EAAO1oI,GAAGq0C,EAAMr0C,IAAI4mI,OAAO8B,EAAO4G,GAAUj7F,EAAMi7F,IAAW1I,UAAQ0I,EAAStvI,GAAG,IAAe,IAAZsvI,EAAe,MAAM,IAAIr6I,MAAM,qBAAqB,OAAOq6I,CAAQ,CAACljJ,EAAOC,QAAQ,SAASq8I,GAAQ,IAAI6G,EAAY7G,EAAOnD,QAAO,SAAS56F,EAAIg+F,GAAO,OAAOh+F,EAAIg+F,EAAM71I,MAAM,GAAE,GAAG41I,EAAOA,EAAOjzI,QAAO,SAASkzI,GAAO,OAAOA,EAAM71I,OAAO,CAAC,IAA6F,IAA1F,IAAI08I,EAAY,IAAI11I,MAAMy1I,GAAiBl7F,EAAMq0F,EAAO5tI,KAAI,WAAW,OAAO,CAAC,IAAOkF,EAAE,EAAQA,GAAGuvI,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiB3G,EAAOr0F,GAAOm7F,EAAYxvI,GAAG0oI,EAAO+G,GAAYp7F,EAAMo7F,IAAap7F,EAAMo7F,KAAczvI,GAAG,CAAC,OAAOwvI,CAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASjtE,EAAQn2E,EAAOC,GAAS,aAAa,SAASqjJ,IAAW,CAAC,SAASC,EAAS3vI,GAAG,OAAOA,CAAC,CAAC5T,EAAOC,QAAQ,SAASD,GAAQ,IAAI2E,EAAS,CAACyV,IAAIkpI,EAASxrI,MAAMwrI,EAASh2E,OAAOg2E,EAASE,UAAUF,EAASnF,mBAAmBoF,EAAS/E,eAAe+E,EAASE,UAAUF,GAAU,GAAG7uI,OAAOC,KAAKhQ,GAAU++I,OAAM,SAAS9+I,GAAK,OAAO5E,EAAO4E,EAAI,IAAI,MAAM,IAAIiE,MAAM,2FAAgL,OAArF6L,OAAOC,KAAKhQ,GAAUH,SAAQ,SAASI,GAAK5E,EAAO4E,GAAK5E,EAAO4E,IAAMD,EAASC,EAAI,IAAU5E,CAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASm2E,EAAQn2E,EAAOC,GAAS,aAAa,IAA+B0jJ,EAAUxtE,EAAQ,gBAAoB2gE,EAAS3gE,EAAQ,gBAAoBinE,EAAQjnE,EAAQ,qBAAuDytE,EAArBztE,EAAQ,aAAyCytE,mBAAuBjJ,EAAOxkE,EAAQ,aAA+V,SAAS0tE,EAAkCnhJ,GAAS,IAAIs4H,EAAKt4H,EAAQs4H,KAAStyH,EAAI,IAAIiyI,EAAOgC,gBAAgB,0CAA4O,MAAlMj0I,EAAIumF,WAAW,CAAC9tF,GAAG,yCAAyCo6I,YAAY,YAAYvgB,EAAK,GAAG93H,MAAM,2BAA2B83H,EAAK,GAAG93H,MAAM,IAAI4gJ,WAAW9oB,EAAK,GAAG93H,MAAM6gJ,WAAW/oB,EAAK,GAAG93H,OAAawF,CAAG,CAAC,SAASs7I,EAAmBnJ,GAAM,OAAOA,EAAKoJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAIp7I,MAAM,uDAAuDgyI,EAAKoJ,SAAS,KAAK,CAAC,SAASC,EAASjH,GAAQ,GAAmB,IAAhBA,EAAOv2I,OAAY,MAAM,GAA4C,IAAzC,IAAIy9I,EAAU,EAAMC,EAAWnH,EAAO,GAAWrpI,EAAE,EAAEA,EAAEqpI,EAAOv2I,OAAOkN,IAAI,CAAC,IAAIywI,EAAapH,EAAOrpI,GAAoD,GAAe,KAAhEuwI,GAAWH,EAAmBK,EAAaxJ,OAAuB,CAAIwJ,EAAaxJ,KAAK33I,QAAQkhJ,EAAWvJ,KAAK33I,OAAiC,KAA1BmhJ,EAAaxJ,KAAK33I,OAAY2gJ,EAAkC,CAAC7oB,KAAK,CAACopB,EAAWvJ,KAAKwJ,EAAaxJ,QAAQ,IAAIyJ,EAAMJ,EAASjH,EAAOxpI,MAAMG,EAAE,IAAI,MAAM,CAAC,CAACwwI,EAAWC,IAAev8H,OAAOw8H,EAAM,CAAC,CAAC,IAAIzJ,EAAKuJ,EAAWvJ,MAAp2C,SAAqCn4I,GAAS,IAAIuhJ,EAASvhJ,EAAQuhJ,SAAa/mH,EAAa,UAAX+mH,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAev7I,EAAI,IAAIiyI,EAAOgC,gBAAgB4H,EAAE,SAAalyB,EAAI3vH,EAAQm4I,KAAK33I,MAA2F,MAArFwF,EAAIumF,WAAW,CAAC9tF,GAAG+7B,EAAE,QAAQq+G,YAAY,qBAAqBlpB,EAAI,OAAOn1F,EAAEyjH,KAAKtuB,GAAW3pH,CAAG,CAAwhC87I,CAA4B,CAAC3J,KAAKA,EAAKoJ,SAASpJ,EAAKoJ,UAAU,CAAC,IAAItE,EAAgB,CAACj4I,KAAK,kBAAkB+7I,UAAU,SAAmBzqB,EAAOyrB,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAAcxG,EAAOuG,EAAnzD,aAAu0DxqB,GAAQikB,EAAOA,EAAOvuI,KAAI,SAASi2I,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnCjH,EAAO0G,EAAU1G,IAAuC4H,EAAcD,EAAMl2I,KAAI,SAASo2I,GAAM,IAAIC,EAASD,EAAK,GAAGjK,KAAKkK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmB5qB,EAAOvlH,MAAMqxI,EAAK,GAAGtK,OAAOsK,EAAK,GAAGtK,UAAauK,EAA4K,CAAnHjO,EAAS7zF,QAAQ+1E,EAAO+rB,EAASD,EAAK,GAAGtK,QAAkB1D,EAAS5zF,SAAS81E,EAAO+rB,EAASD,EAAK,GAAGtK,SAA9I,CAACsK,EAAK,GAAGtK,OAAOsK,EAAK,GAAGtK,OAAgJ,IAAOwK,EAAiB,EAAMC,OAAW,EAAO,OAAOjsB,EAAOmgB,QAAO,SAAS+L,EAAUrK,EAAKjnI,GAAG,IAAIuxI,EAAOH,EAAiBJ,EAAMl+I,QAAQm+I,EAAcG,GAAkB,IAAIpxI,EAAMkxI,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAUrgJ,KAAKg2I,GAAaqK,EAAiH,GAApGE,EAAa,KAAKxxI,IAAGqxI,EAAW,IAAMH,EAAK,GAAGtK,SAAS5mI,GAAGkxI,EAAK,GAAGtK,SAAS5mI,GAAGqxI,EAAWpgJ,KAAKg2I,GAASuK,EAAa,KAAKxxI,EAAE,CAAC,IAAIyxI,EAASrsB,EAAO8rB,EAAK,GAAGtK,eAAe6K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAUrgJ,KAAKwgJ,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAGllJ,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQuC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,oBAAoB,EAAE,YAAY,KAAK,EAAE,CAAC,SAASxpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,gBAAoBovE,EAAe,oBAAwBnI,EAAQjnE,EAAQ,qBAAyBqvE,EAAW,OAAWhG,EAAW,CAAC93I,KAAK,aAAaoQ,MAAM,SAAe2tI,GAAoB,IAAIzlJ,EAAOwlJ,EAAerjJ,EAAK,cAAc,MAA2B,MAAxBsjJ,EAAmB,GAAgB,CAACtjJ,KAAKA,EAAKe,MAAMuiJ,EAAmB5jG,OAAO,GAAGkjG,SAAS,OAAO/kJ,OAAOA,EAAOikJ,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAACtjJ,KAAKA,EAAKe,MAAMuiJ,EAAmB5jG,OAAO,GAAGkjG,SAAS,OAAO/kJ,OAAOA,EAAOikJ,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAACtjJ,KAAKA,EAAKe,MAAMuiJ,EAAmB5jG,OAAO,GAAG7hD,OAAOA,EAAOikJ,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAACtjJ,KAAKA,EAAKe,MAA9HuiJ,EAAmBlyI,QAAQgyI,EAAe,MAAgGR,SAA7EU,EAAmBlyI,QAAQgyI,EAAe,MAAqDvlJ,OAAOA,EAAOikJ,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAU3sB,GAAQ,GAAe,eAAZ2sB,EAAiC,OAAO3sB,EAAOmgB,QAAO,SAASne,EAAK6f,EAAKL,GAAqG,MAA9E,gBAAZK,EAAK14I,MAAsB04I,EAAK76I,SAASwlJ,GAAYxqB,EAAKn2H,KAAK,CAACg2I,KAAKA,EAAKL,OAAOA,IAAgBxf,CAAI,GAAE,GAAG,EAAE1tD,OAAO,SAAgButE,EAAKn4I,GAAS,GAAgB,iBAAZm4I,EAAK14I,MAAsB04I,EAAK76I,SAASwlJ,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjEljJ,EAAQmjJ,aAAaC,SAASjL,EAAK33I,OAAzQ,SAAkBovH,GAAO,IAAIuzB,EAAanjJ,EAAQmjJ,aAAaE,sBAAsBzzB,EAAMuoB,EAAK33I,OAAO0iJ,EAAW/gJ,KAAKnC,EAAQ4qE,OAAOwpE,EAASiE,aAAa,CAAC,EAAEr4I,EAAQ,CAAC26I,SAASxC,EAAKyK,UAAUtqB,KAAK,CAAC,EAAE6qB,aAAaA,KAAgB,GAAmDhL,EAAK6K,UAAgB,CAACxiJ,MAAM0iJ,EAAW/2I,KAAK,IAAI,GAAG7O,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQoC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAASrpE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS3gE,EAAQ,gBAAoBwkE,EAAOxkE,EAAQ,aAAiBqvE,EAAW,SAAapI,EAAQjnE,EAAQ,qBAAkW,SAAS6vE,EAASvB,GAAM,IAAI5J,EAAK4J,EAAK5J,KAAKhqC,EAAK4zC,EAAK5zC,KAAK7L,EAAMy/C,EAAKz/C,MAAMihD,EAAWxB,EAAKwB,WAAW35I,EAAMm4I,EAAKn4I,MAAU45I,EAAeD,EAAWxyI,MAAMo9F,EAAK,EAAE7L,GAAsO,OAA/NkhD,EAAe1hJ,SAAQ,SAAS6d,EAAEzO,GAAMA,IAAItH,EAAMukG,EAAK,IAAsB,gBAATxuF,EAAElgB,MAA+B,YAATkgB,EAAElgB,MAA+B,cAAbkgB,EAAEnhB,WAAxmB,SAAgDwB,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,gDAAoDtqB,EAAI3vH,EAAQm4I,KAAK33I,MAAkK,MAA5JwF,EAAIumF,WAAW,CAAC9tF,GAAG,+CAA+Co6I,YAAY,WAAWlpB,EAAIsuB,KAAKj+I,EAAQm4I,KAAK33I,MAAMgjJ,eAAexjJ,EAAQwjJ,gBAAsBx9I,CAAG,CAAoTy9I,CAAuC,CAACD,eAAeA,EAAerL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIuL,EAAa,WAAW,SAASA,KAA5hC,SAAyBh+F,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgB93I,KAAK6lJ,GAAc7lJ,KAAKmH,KAAK,cAAc,CAAyvB,OAAxvBwvI,EAAakP,EAAa,CAAC,CAACxhJ,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQu0I,GAAgE,OAAjD12I,KAAKi9I,eAAevG,EAAcuG,eAAsB96I,CAAO,GAAG,CAACkC,IAAI,QAAQ1B,MAAM,SAAeuiJ,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAACtjJ,KAAjE,cAA2Ee,MAAMuiJ,EAAmB5jG,OAAO,GAAG7hD,OAAOwlJ,EAAW,GAAG,CAAC5gJ,IAAI,YAAY1B,MAAM,SAAmB81H,GAAQ,OAAO8d,EAASmG,OAAOoJ,YAAYrtB,EAAO,CAACwsB,WAAWA,EAAWQ,SAASA,EAASjB,SAASxkJ,KAAKi9I,eAAeuC,WAAW,GAAG,CAACn7I,IAAI,SAAS1B,MAAM,SAAgB23I,EAAKn4I,GAAS,GAAGm4I,EAAK76I,SAASwlJ,EAAY,OAAO,KAAK,IAAItiJ,EAAMR,EAAQmjJ,aAAar5I,SAASquI,EAAK33I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQk4I,WAAWC,IAAY,CAAC33I,MAAMA,EAAM,KAAYkjJ,CAAY,CAA12B,GAA82BpmJ,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQ,IAAIgJ,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAASjwE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI2F,EAAQjnE,EAAQ,qBAAyBmwE,EAAO,WAAW,SAASA,KAAxN,SAAyBl+F,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgB93I,KAAK+lJ,GAAQ/lJ,KAAKmH,KAAK,QAAQ,CAA4V,OAA3VwvI,EAAaoP,EAAO,CAAC,CAAC1hJ,IAAI,MAAM1B,MAAM,SAAamV,GAAQA,EAAIglI,WAAU98I,KAAK88I,SAAShlI,EAAIglI,UAAsB,MAAVhlI,EAAIjO,OAAY7J,KAAK6J,KAAKiO,EAAIjO,KAAK,GAAG,CAACxF,IAAI,iBAAiB1B,MAAM,SAAwBq7I,GAAQ,IAAIhB,EAAMh9I,KAAK,OAAOmU,OAAOC,KAAKpU,KAAK88I,UAAUlE,QAAO,SAASoF,EAAOx2G,GAA+C,OAAzCw2G,EAAOx2G,GAAM,CAACA,KAAKA,EAAK39B,KAAKmzI,EAAMnzI,MAAam0I,CAAM,GAAEA,EAAO,KAAY+H,CAAM,CAArb,GAAybtmJ,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQ,IAAIkJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAASnwE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIm9I,EAAQjnE,EAAQ,qBAAyBowE,EAAc,CAAC7+I,KAAK,sBAAsB+7I,UAAU,SAAmBzqB,GAAQ,IAAIvzE,EAAM,GAAO+gG,GAAQ,EAAUn4I,EAAO2qH,EAAOmgB,QAAO,SAASngB,EAAO6hB,GAA8X,MAAzW,QAAZA,EAAK14I,MAA8B,UAAhB04I,EAAK35I,UAAoB25I,EAAKjsI,MAAmB,UAAbisI,EAAK33I,QAAiBsjJ,GAAQ,GAAQA,GAAwB,gBAAZ3L,EAAK14I,MAAuB04I,EAAK76I,SAAQylD,EAAM,GAAGviD,MAAM,8BAA6BuiD,EAAM5gD,KAAKg2I,IAAW7hB,EAAOn0H,KAAKg2I,GAAqB,QAAZA,EAAK14I,MAA8B,QAAhB04I,EAAK35I,UAAkB25I,EAAKjsI,MAAmB,WAAbisI,EAAK33I,QAAkBwK,MAAMgtC,UAAU71C,KAAKqlC,MAAM8uF,EAAOvzE,GAAO+gG,GAAQ,EAAM/gG,EAAM,IAAUuzE,CAAM,GAAE,IAA6C,OAAzCtrH,MAAMgtC,UAAU71C,KAAKqlC,MAAM77B,EAAOo3C,GAAcp3C,CAAM,GAAGrO,EAAOC,QAAQ,WAAW,OAAOm9I,EAAQmJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAASpwE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,eAAmBM,EAAO,CAACgtE,UAAU,SAAmBzqB,EAAOskB,GAAS,SAASkG,EAAUmC,EAAU3sB,GAAQ,OAAOskB,EAAQ5uI,KAAI,SAAS1O,GAAQ,OAAOA,EAAOwjJ,UAAUmC,EAAU3sB,EAAO,GAAE,CAA6J,OAA5J,SAASyqB,EAAUzqB,GAAQ,OAAOskB,EAAQnE,QAAO,SAASngB,EAAOh5H,GAAQ,OAAOA,EAAOyjJ,UAAUzqB,EAAO,CAACyqB,UAAUA,EAAUD,UAAUA,GAAW,GAAExqB,EAAO,CAAQyqB,CAAUzqB,EAAO,EAAElhH,MAAM,SAAe2uI,EAAMnJ,GAAyQ,IAAIoJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMtN,QAAO,SAASngB,EAAO4tB,GAAO,MAAgB,cAAbA,EAAMzkJ,MAAoBukJ,EAA+B,UAAjBE,EAAM1lJ,SAAuC,QAAjB0lJ,EAAM1lJ,UAA/b,SAAqBukJ,EAAmBzsB,GAAgC,IAAxB,IAAI6tB,OAAa,EAAejzI,EAAE,EAAEiB,EAAEyoI,EAAQ52I,OAAOkN,EAAEiB,EAAEjB,IAA2E,GAA/CizI,EAAXvJ,EAAQ1pI,GAAwBkE,MAAM2tI,GAA+D,OAA1BzsB,EAAOn0H,KAAKgiJ,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmB3O,EAASqF,WAAWsJ,GAAuDzsB,IAASA,EAAOn0H,KAAK,CAAC1C,KAAK,cAAce,MAAMuiJ,IAAqB/3I,MAAMgtC,UAAU71C,KAAKqlC,MAAM8uF,EAAO2tB,GAAWA,EAAU,GAAU3tB,IAAOysB,EAAmB,GAAUzsB,IAAU0tB,GAA+B,YAAbE,EAAMzkJ,MAAmC,cAAjBykJ,EAAM1lJ,SAAwBukJ,GAAoBmB,EAAM1jJ,MAAWyjJ,EAAU9hJ,KAAK+hJ,GAAc5tB,IAAOA,EAAOn0H,KAAK+hJ,GAAc5tB,EAAM,GAAE,GAAG,GAAGh5H,EAAOC,QAAQw2E,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASN,EAAQn2E,EAAOC,GAAS,aAAa,IAAI8mJ,EAAa5wE,EAAQ,mBAAuB2gE,EAAS3gE,EAAQ,eAAu1Bn2E,EAAOC,QAAjmB,SAASqtE,EAAO5qE,GAA2J,OAAlJA,EAAQ4qE,OAAOA,EAAO5qE,EAAQ46I,QAAQ56I,EAAQ46I,QAAY56I,EAAQmjJ,eAAcnjJ,EAAQmjJ,aAAakB,EAAaC,uBAAuBtkJ,IAAgBA,EAAQ26I,SAAS3uI,KAAI,SAASmsI,GAAM,IAAIoM,EAAxc,SAAsBpM,EAAKn4I,GAAmC,IAA1B,IAAIukJ,OAAe,EAAerzI,EAAE,EAAEiB,EAAEnS,EAAQ46I,QAAQ52I,OAAOkN,EAAEiB,EAAEjB,IAAgF,GAA5CqzI,EAAnBvkJ,EAAQ46I,QAAQ1pI,GAA0B05D,OAAOutE,EAAKn4I,GAA4B,OAAOukJ,EAAgB,OAAO,CAAK,CAA0OC,CAAarM,EAAKn4I,GAAS,GAAGukJ,EAAgB,OAAOA,EAAe/jJ,MAAM,GAAe,gBAAZ23I,EAAK14I,KAAqB,CAAC,IAAIe,EAAMR,EAAQmjJ,aAAar5I,SAASquI,EAAK33I,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQk4I,WAAWC,IAAa/D,EAASsF,WAAWl5I,EAAM,CAAC,GAAe,YAAZ23I,EAAK14I,MAA8B,QAAZ04I,EAAK14I,KAAc,OAAO04I,EAAK33I,MAAM,MAAM,IAAI2F,MAAM,2BAA2BgyI,EAAK14I,KAAK,IAAI,IAAG0M,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASsnE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIkD,EAAOxkE,EAAQ,YAAgB4wE,EAAa,WAAW,SAASA,EAAarkJ,IAAjO,SAAyB0lD,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgB93I,KAAKwmJ,GAAcxmJ,KAAK4mJ,UAAUzkJ,EAAQykJ,UAAU5mJ,KAAKg0B,UAAU7xB,EAAQ6xB,UAAUh0B,KAAKk2E,OAAO/zE,EAAQ+zE,MAAM,CAAmmE,OAAlmEygE,EAAa6P,EAAa,CAAC,CAACniJ,IAAI,WAAW1B,MAAM,SAAkBmvH,EAAIjgH,EAASszI,GAAmC,OAAzBA,EAASA,IAAU,EAAanlJ,KAAK6mJ,cAAc7mJ,KAAKiM,SAAS6lH,GAAKjgH,EAASszI,EAAS,GAAG,CAAC9gJ,IAAI,oBAAoB1B,MAAM,SAA2BwiJ,EAAS2B,EAAQnkJ,GAAUwiJ,GAAU2B,EAAQnkJ,EAAO,GAAG,CAAC0B,IAAI,eAAe1B,MAAM,SAAsBA,EAAMf,GAAM,OAAc,MAAPe,IAAcA,GAAc,mBAAPf,GAAwC,IAAfe,EAAMwD,MAAU,GAAG,CAAC9B,IAAI,gBAAgB1B,MAAM,SAAuBA,EAAMmkJ,EAAQ3B,GAAU,IAAIvjJ,EAAKuS,OAAOgmC,UAAUzlC,SAAS0lC,KAAKz3C,GAAWokJ,EAAa/mJ,KAAKg0B,UAAUh0B,KAAKgnJ,KAAK,GAAGhnJ,KAAKinJ,aAAatkJ,EAAMf,GAAO,OAAO5B,KAAKknJ,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAPnlJ,EAAqI,MAAU,oBAAPA,EAAiC5B,KAAKknJ,mBAAmB/B,EAAS2B,EAAQnkJ,IAAkB,IAARA,EAAqB3C,KAAKknJ,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQh1B,EAAJ1+G,EAAE,EAAQA,EAAE1Q,EAAMwD,OAAOkN,IAAK0+G,EAAMpvH,EAAM0Q,GAAGrT,KAAKknJ,mBAAmB/B,EAAS2B,EAAQ/0B,EAAiL,GAAG,CAAC1tH,IAAI,WAAW1B,MAAM,SAAkBmvH,EAAIk1B,GAAKhnJ,KAAKgnJ,IAAS,MAALA,EAAUhnJ,KAAKg0B,UAAU7tB,OAAO,EAAE6gJ,EAAI,IAAI7+I,OAAI,EAAW+tE,OAAO,EAAWpoE,OAAO,EAAWikH,EAAM/xH,KAAKg0B,UAAUh0B,KAAKgnJ,KAAK,IAAI9wE,EAAOl2E,KAAKk2E,OAAO47C,EAAkP,CAA7O,MAAMviH,GAA8N,MAAvNpH,EAAI,IAAIiyI,EAAO2E,mBAAmB,oCAAuCrwD,WAAW,CAAC9tF,GAAG,iCAAiCkxH,IAAIA,EAAIkpB,YAAY,gCAAgClpB,EAAI,qBAAqBq1B,UAAU53I,GAAapH,CAAG,CAAC,IAAI2F,EAAOooE,EAAOvgE,IAAIo8G,EAAM,CAACi1B,IAAIhnJ,KAAKgnJ,IAAIhzH,UAAUh0B,KAAKg0B,WAAiQ,CAArP,MAAMzkB,GAAsO,MAA/NpH,EAAI,IAAIiyI,EAAO2E,mBAAmB,kCAAqCrwD,WAAW,CAAC9tF,GAAG,+BAA+Bo6I,YAAY,gCAAgClpB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAIq1B,UAAU53I,GAAapH,CAAG,CAAC,OAAW,MAAR2F,GAAc9N,KAAKgnJ,IAAI,EAAUhnJ,KAAKiM,SAAS6lH,EAAI9xH,KAAKgnJ,IAAI,GAAUl5I,CAAM,GAAG,CAACzJ,IAAI,wBAAwB1B,MAAM,SAA+BovH,EAAMD,GAAK,IAAI3vH,EAAQ,CAACykJ,UAAU5mJ,KAAK4mJ,UAAU1zI,MAAM,GAAG8gB,UAAUh0B,KAAKg0B,UAAU9gB,MAAM,IAA2H,OAAvH/Q,EAAQ+zE,OAAOl2E,KAAKk2E,OAAO/zE,EAAQ6xB,UAAUh0B,KAAKg0B,UAAUzM,OAAOwqG,GAAO5vH,EAAQykJ,UAAU5mJ,KAAK4mJ,UAAUr/H,OAAOuqG,GAAY,IAAI00B,EAAarkJ,EAAQ,KAAYqkJ,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAIhuE,EAAOguE,EAAKhuE,OAAOukD,EAAKypB,EAAKzpB,KAASt4H,EAAQ,CAAC+zE,OAAOA,EAAOukD,KAAKA,EAAMt4H,UAAkB,IAA4B,OAAzBA,EAAQ6xB,UAAU,CAACymG,GAAa,IAAI+rB,EAAarkJ,EAAQ,EAAE1C,EAAOC,QAAQ8mJ,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAAS5wE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,eAAmBwkE,EAAOxkE,EAAQ,YAA4V,SAASwxE,EAAiBpL,EAAMlqB,GAAK,GAAkB,IAAfkqB,EAAM71I,OAAY,OAAO,EAAM,IAAsCkhJ,EAA1BrL,EAAMA,EAAM71I,OAAO,GAA4B2rH,IAAIxwE,OAAO,GAAOgmG,EAAgBx1B,EAAIxwE,OAAO,EAAEwwE,EAAI3rH,OAAO,GAAG,OAA+C,IAAxCkhJ,EAAah6I,QAAQi6I,EAAoB,CAAC,SAASC,EAAOvL,EAAMlqB,GAA2B,OAAtBkqB,EAAM13I,KAAK,CAACwtH,IAAIA,IAAakqB,CAAK,CAA0nB,SAASwL,EAAUlN,EAAKoL,EAAWvjJ,GAAS,IAAIqiJ,EAASlK,EAAKkK,UAAUriJ,EAAQqiJ,SAAaz4I,EAAM25I,EAAWr4I,QAAQitI,GAAM,IAAIkK,EAAU,OAAOkB,EAAW,IAAIjhD,OAAM,EAAO6L,OAAK,EAAO,IAAI7L,EAAM8xC,EAAS5zF,SAAS+iG,EAAWlB,EAASz4I,GAAOukG,EAAKimC,EAAS7zF,QAAQgjG,EAAWlB,EAASz4I,EAAsM,CAA/L,MAAMo7I,GAA0K,MAA5JA,aAAqB/M,EAAOgC,iBAAxkD,SAAmCj6I,GAAS,IAAIgG,EAAI,IAAIiyI,EAAOgC,gBAAgB,4BAAgCtqB,EAAI3vH,EAAQm4I,KAAK33I,MAAsM,MAAhMwF,EAAIumF,WAAW,CAAC9tF,GAAG,2BAA2Bo6I,YAAY,YAAYlpB,EAAI,IAAIq1B,UAAUhlJ,EAAQglJ,UAAU/G,KAAKtuB,EAAI4zB,WAAWvjJ,EAAQujJ,WAAWlB,SAASriJ,EAAQqiJ,SAASz4I,MAAM5J,EAAQ4J,OAAa5D,CAAG,CAA0wCs/I,CAA0B,CAACnN,KAAKA,EAAK6M,UAAUA,EAAUzB,WAAWA,EAAWlB,SAASA,EAASz4I,MAAMA,IAAco7I,CAAS,CAAC,IAAIO,EAAUhC,EAAWxyI,MAAMo9F,EAAKvkG,GAAW47I,EAAWjC,EAAWxyI,MAAMnH,EAAM,EAAE04F,EAAM,GAAOmjD,EAAMzlJ,EAAQsjJ,SAAS,CAAC15I,MAAMA,EAAMuuI,KAAKA,EAAKoN,UAAUA,EAAUC,WAAWA,EAAWr3C,KAAKA,EAAK7L,MAAMA,EAAMihD,WAAWA,IAAmF,OAAlEkC,EAAMzhJ,SAAQyhJ,EAAMgU,SAAS,CAAClU,EAAUC,GAAYC,EAAM,CAACA,IAAcrR,EAASuF,aAAa,CAAC4J,EAAWxyI,MAAM,EAAEo9F,GAAMs3C,EAAMlC,EAAWxyI,MAAMuxF,EAAM,IAAI,CAA4ThlG,EAAOC,QAAQ,CAAComJ,YAA3U,SAAqBJ,EAAWvjJ,GAAyQ,OAA3OujJ,EAAW9M,QAAO,SAAS1vI,EAASoxI,GAA0F,MAArE,gBAAZA,EAAK14I,MAAsB04I,EAAK76I,SAAS0C,EAAQ8iJ,YAAY/7I,EAAS5E,KAAKg2I,GAAapxI,CAAQ,GAAE,IAAqBjF,SAAQ,SAASq2I,GAAMoL,EAAW8B,EAAUlN,EAAKoL,EAAWvjJ,EAAQ,IAAUujJ,CAAU,EAAyCrC,mBAAl9C,SAA4Br7H,GAAiD,IAA1C,IAAI6/H,EAAvZ,SAA4B7/H,GAA4H,IAArH,IAAiI8pG,EAA7H2I,EAAKzyG,EAAMlf,QAAO,SAASwxI,GAAM,MAAmB,QAAZA,EAAK14I,IAAY,IAAGuM,KAAI,SAASmsI,GAAM,OAAOA,EAAK33I,KAAK,IAAOmL,EAAO,GAAWuF,EAAE,EAAMA,EAAEonH,EAAKt0H,OAAOkN,IAA6B,OAAxBy+G,EAAI2I,EAAKpnH,IAAU,GAAa+zI,EAAiBt5I,EAAOgkH,GAAMhkH,EAAOogC,MAAWpgC,EAAOy5I,EAAOz5I,EAAOgkH,GAAkC,MAApBA,EAAIA,EAAI3rH,OAAO,KAAU2H,EAAOy5I,EAAOz5I,EAAOgkH,IAAM,OAAOhkH,CAAM,CAAoDg6I,CAAmB9/H,GAAe3U,EAAE,EAAEA,EAAEw0I,EAAY1hJ,OAAOkN,IAAI,CAAC,IAAIwoJ,EAAWhU,EAAYx0I,GAAG,GAAqC,IAAlCwoJ,EAAW/pC,IAAIzkH,QAAQ,SAAc,MAAM,OAAO,GAAqC,IAAlCwuJ,EAAW/pC,IAAIzkH,QAAQ,SAAc,MAAM,MAAO,CAAC,OAAO,CAAK,EAAgvC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASuoE,EAAQn2E,EAAOC,GAAS,aAAa,IAAI62I,EAAS3gE,EAAQ,eAAo7C,IAAImyE,EAA75CnyE,EAAQ,YAA85CskE,EAAxe,SAAoB/pE,EAAQ63E,GAAc,IAAI5tI,EAAI,CAAC,EAAEA,EAAI+1D,QAAQA,EAAQ/1D,EAAI4tI,aAAaA,EAAa5tI,EAAI6tI,mBAAmB7tI,EAAI4tI,aAAa15I,KAAK,KAAK,IAAI+1C,EAAO,IAAIjiC,OAAO,QAAQhI,EAAI6tI,mBAAmB,wBAAwB7tI,EAAI6tI,mBAAmB,KAAK,KAAyL,OAApL7tI,EAAIynI,QAAQtL,EAAS8F,aAAah4F,EAAOjqC,EAAI+1D,SAAS/1D,EAAI8tI,0BAA0B9tI,EAAIynI,QAAQ1zI,KAAI,WAAW,OAAO,CAAC,IAAGiM,EAAI+tI,gBAAgB/tI,EAAIynI,QAAQ1zI,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6BiM,GAAK,SAASguI,IAAkB,IAAIC,EAAG,CAACrM,MAAM7uI,MAAMgtC,UAAUjnC,MAAMknC,KAAKrnC,YAAYs1I,EAAGrM,MAAMznI,QAAQ,IAAI+uB,EAAM+kH,EAAGrM,MAAM,GAAGqM,EAAGrM,MAAM,GAAGqM,EAAGrM,MAAMnvG,QAAQvJ,GAAO+kH,EAAGrM,MAAM9tG,MAAM,IAAI+rG,EAAOoO,EAAGrM,MAAM9tG,MAA4F,OAAtFm6G,EAAGpO,OAAOA,EAAOoO,EAAG3rH,OAAM,EAAKtiB,EAAIynI,QAAQh1G,QAAQw7G,GAAIjuI,EAAI+tI,gBAAgBt7G,QAAQ,GAAUzyB,EAAI8tI,0BAA0Br7G,QAAQ,EAAE,EAAgC,IAA5BzyB,EAAI+1D,QAAQ9iE,QAAQ,OAAuC,IAA5B+M,EAAI+1D,QAAQ9iE,QAAQ,MAAW+M,EAAI+1D,QAAQn9D,QAAQ,eAAeo1I,GAAiB,IAAIx4I,EAAE,IAAIwS,OAAO,kBAAkBhI,EAAI6tI,mBAAmB,MAAmY,OAA7X7tI,EAAI+1D,QAAQn9D,QAAQpD,EAAEw4I,GAAmQx4I,EAAE,IAAIwS,OAAO,QAAQhI,EAAI6tI,mBAAmB,oBAAoB7tI,EAAI+1D,QAAQn9D,QAAQpD,GAAtU,WAAwB,IAAIy4I,EAAG,CAACrM,MAAM7uI,MAAMgtC,UAAUjnC,MAAMknC,KAAKrnC,YAAYs1I,EAAGrM,MAAM9tG,MAAM,IAAI+rG,EAAOoO,EAAGrM,MAAM9tG,MAAqF,OAA/Em6G,EAAGpO,OAAOA,EAAOoO,EAAGC,MAAK,EAAKluI,EAAIynI,QAAQv9I,KAAK+jJ,GAAIjuI,EAAI+tI,gBAAgB7jJ,KAAK,GAAU8V,EAAI8tI,0BAA0B5jJ,KAAK,EAAE,IAA4G8V,CAAG,CAAmcmuI,CAAoBnuI,EAAI,IAAkC3a,EAAOC,QAAQ,SAASywE,EAAQ63E,GAAc,OAAOzR,EAAS7wI,UAAUqiJ,EAAS53E,EAAQ63E,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAASpyE,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS3gE,EAAQ,eAAmB4wE,EAAa5wE,EAAQ,mBAAuB4yE,EAAW5yE,EAAQ,iBAAqBwkE,EAAOxkE,EAAQ,YAAgB6yE,EAAM7yE,EAAQ,WAAe8yE,EAAO9yE,EAAQ,eAAmB+yE,EAAQ/yE,EAAQ,eAAmPn2E,EAAOC,QAAQ,WAAW,SAAS++I,EAAatuE,EAAQhuE,IAArqB,SAAyB0lD,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgB93I,KAAKy+I,GAAcz+I,KAAK4oJ,SAASzmJ,GAASnC,KAAK6oJ,WAAW,CAACC,QAAQ,CAACxK,SAASt+I,KAAKs+I,YAAYt+I,KAAK8yB,KAAKq9C,EAAQ,CAA2tD,OAA1tDwmE,EAAa8H,EAAa,CAAC,CAACp6I,IAAI,OAAO1B,MAAM,SAAcwtE,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAIhoE,EAAI,IAAIiyI,EAAO4E,gBAAgB,4BAAoF,MAAxD72I,EAAIumF,WAAW9tF,GAAG,sCAA4CuH,CAAG,CAACnI,KAAKmwE,QAAQA,CAAO,GAAG,CAAC9rE,IAAI,UAAU1B,MAAM,SAAiB83H,GAA8H,OAAxHz6H,KAAKy6H,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAEz6H,KAAKslJ,aAAakB,EAAaC,uBAAuB,CAAChsB,KAAKz6H,KAAKy6H,KAAKvkD,OAAOl2E,KAAKk2E,SAAgBl2E,IAAI,GAAG,CAACqE,IAAI,WAAW1B,MAAM,SAAkBR,GAASnC,KAAKs+I,SAASn8I,EAAQm8I,SAASt+I,KAAK+8I,QAAQ56I,EAAQ46I,QAAQ/8I,KAAKi9I,eAAe96I,EAAQ86I,eAAe9oI,OAAOC,KAAKmiI,EAASnyI,UAAU+J,KAAI,SAAS9J,GAAKrE,KAAKqE,GAAmB,MAAdlC,EAAQkC,GAAWlC,EAAQkC,GAAKkyI,EAASnyI,SAASC,EAAI,GAAErE,KAAK,GAAG,CAACqE,IAAI,cAAc1B,MAAM,WAAuB,OAA/nCwtE,EAAmpCnwE,KAAKmwE,QAAhpC63E,EAAwpChoJ,KAAKi9I,eAAeqC,iBAA7mCxxI,EAArC06I,EAAWr4E,EAAQ63E,GAAiCnG,QAAQ1zI,KAAI,SAASm1B,GAAO,OAAOA,EAAM04G,MAAM,EAAE,IAAUzF,EAASqF,WAAWrF,EAASwE,cAAcjtI,EAAOQ,KAAK,MAA9N,IAAsB6hE,EAAQ63E,EAA+Dl6I,CAA8nC,GAAG,CAACzJ,IAAI,aAAa1B,MAAM,SAAoBmV,GAAK9X,KAAK+8I,QAAQ94I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI/B,EAAI,GAAE,GAAG,CAACzT,IAAI,QAAQ1B,MAAM,WAAyc,OAAxb3C,KAAK+oJ,SAASN,EAAM9G,SAAS3hJ,KAAKmwE,QAAQ,CAAC9hE,KAAKrO,KAAKi9I,eAAeqC,iBAAiBgD,MAAMtiJ,KAAKi9I,eAAesC,oBAAoBv/I,KAAK6oJ,WAAW,CAACC,QAAQ,CAACC,SAAS/oJ,KAAK+oJ,YAAY/oJ,KAAKkmJ,MAAMuC,EAAMlxI,MAAMvX,KAAK+oJ,SAAS/oJ,KAAKu6I,YAAYv6I,KAAK6oJ,WAAW,CAACC,QAAQ,CAAC5C,MAAMlmJ,KAAKkmJ,SAASlmJ,KAAKy4H,OAAOiwB,EAAOnxI,MAAMvX,KAAKkmJ,MAAMlmJ,KAAK+8I,SAAS/8I,KAAK6oJ,WAAW,CAACC,QAAQ,CAACrwB,OAAOz4H,KAAKy4H,UAAUz4H,KAAK0lJ,WAAWgD,EAAOxF,UAAUljJ,KAAKy4H,OAAOz4H,KAAK+8I,SAAgB/8I,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,SAAgB2kC,GAAyR,OAArRtnC,KAAKs+I,SAASh3G,EAAGtnC,KAAK6oJ,WAAW,CAACC,QAAQ,CAACpD,WAAW1lJ,KAAK0lJ,cAAc1lJ,KAAKmwE,QAAQw4E,EAAQ,CAAC7L,SAAS98I,KAAK0lJ,WAAWjrB,KAAKz6H,KAAKy6H,KAAKsiB,QAAQ/8I,KAAK+8I,QAAQ7mE,OAAOl2E,KAAKk2E,OAAOmkE,WAAWr6I,KAAKq6I,WAAWiE,SAASt+I,KAAKs+I,WAAWt+I,KAAK6oJ,WAAW,CAACC,QAAQ,CAAC34E,QAAQnwE,KAAKmwE,WAAkBnwE,IAAI,KAAYy+I,CAAY,CAAh6D,EAAm6D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS7oE,EAAQn2E,EAAOC,GAAS,SAASwyE,EAAU/vE,GAASnC,KAAKmC,QAAQA,GAAS,CAAC6mJ,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAajpJ,KAAKkpJ,OAAM,CAAK,CAAC,SAASvoJ,EAASqoJ,EAAQzmJ,GAAMA,EAAK4mJ,WAAWH,EAAQG,WAAW5mJ,EAAK6mJ,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAAS/0I,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAEg1I,UAAU,IAAI,UAAUh1I,EAAE60I,WAAW,QAAQ70I,EAAE80I,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMt3H,EAAM/rB,GAAQ,MAAiB,iBAAPqjJ,EAAwBA,EAAMloG,OAAOpvB,EAAM/rB,GAAgBqjJ,EAAMrjJ,QAAQ+rB,EAAM/rB,GAAQ+rB,EAAc,IAAIu3H,KAAK5kF,KAAK3pD,OAAOsuI,EAAMt3H,EAAM/rB,GAAQ,GAAUqjJ,CAAM,CAAiP,SAASE,EAAcC,EAAOpnJ,GAAUonJ,EAAOC,eAAkDD,EAAOC,eAAeh/D,YAAYroF,GAApEonJ,EAAOz4B,IAAItmC,YAAYroF,EAAmD,CAA3/I2vE,EAAU/3B,UAAUi4B,gBAAgB,SAASy3E,EAAOl3B,GAAU,IAAIxwH,EAAQnC,KAAKmC,QAAY2nJ,EAAI,IAAIC,EAAcC,EAAW7nJ,EAAQ6nJ,YAAY,IAAIf,EAAe9N,EAAah5I,EAAQg5I,aAAiB6N,EAAQ7mJ,EAAQ6mJ,QAAYiB,EAAa9nJ,EAAQ+nJ,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAI3O,aAA2a,SAA2BuP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI7O,EAAa,CAAC,EAAMwP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMxmJ,GAAK,IAAIqM,EAAGg6I,EAAUrmJ,IAASqM,GAAIi6I,IAAYj6I,EAAqB,GAAlBg6I,EAAUvkJ,OAAU,SAAS4Y,GAAK2rI,EAAUrmJ,EAAI0a,EAAI,EAAE2rI,GAAUvP,EAAa92I,GAAKqM,GAAI,SAASqO,GAAKrO,EAAG,WAAWrM,EAAI,MAAM0a,EAAIsqI,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqB1P,CAAY,CAAj7B2P,CAAkB3P,EAAa6O,EAAWhB,GAASc,EAAIE,WAAW7nJ,EAAQ6nJ,YAAYA,EAAc,aAAa3nI,KAAKswG,KAAWw3B,EAAUY,KAAK,IAAIZ,EAAUhwF,KAAK,IAAI8vF,EAAa,IAAI,gCAA+BA,EAAa/iH,IAAI+iH,EAAa/iH,KAAK,uCAA0C2iH,EAAQC,EAAIvyI,MAAMsyI,EAAOI,EAAaE,GAAgBL,EAAI3O,aAAa5rI,MAAM,sBAA6By6I,EAAW94B,GAAG,EAAuqB+3B,EAAW9uG,UAAU,CAAC6wG,cAAc,WAAWhrJ,KAAKkxH,KAAI,IAAK+5B,GAAmBC,eAAe,KAAK,KAAK,MAASlrJ,KAAKgpJ,UAAShpJ,KAAKkxH,IAAIi6B,YAAYnrJ,KAAKgpJ,QAAQM,SAAS,EAAEp+F,aAAa,SAASkuF,EAAagS,EAAUC,EAAMxsI,GAAO,IAAIqyG,EAAIlxH,KAAKkxH,IAAQ1kH,EAAG0kH,EAAIo6B,gBAAgBlS,EAAaiS,GAAOD,GAAeG,EAAI1sI,EAAM1Y,OAAOujJ,EAAc1pJ,KAAKwM,GAAIxM,KAAK4pJ,eAAep9I,EAAGxM,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQx8I,GAAI,IAAI,IAAI6G,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAAI,CAAK+lI,EAAav6H,EAAM2sI,OAAOn4I,GAA9B,IAAqC1Q,EAAMkc,EAAM5S,SAASoH,GAAmCsK,GAA5B0tI,EAAMxsI,EAAM4sI,SAASp4I,GAAY69G,EAAIw6B,kBAAkBtS,EAAaiS,IAAOrrJ,KAAKgpJ,SAASroJ,EAASke,EAAM8sI,WAAWt4I,GAAGsK,GAAMA,EAAKhb,MAAMgb,EAAKiuI,UAAUjpJ,EAAM6J,EAAGq/I,iBAAiBluI,EAAK,CAAC,EAAEmuI,WAAW,SAAS1S,EAAagS,EAAUC,GAAO,IAAIU,EAAQ/rJ,KAAK4pJ,eAA2BmC,EAAQx6B,QAAQvxH,KAAK4pJ,eAAemC,EAAQ/hE,UAAU,EAAEgiE,mBAAmB,SAASrxI,EAAOsxI,GAAK,EAAEC,iBAAiB,SAASvxI,GAAQ,EAAEwxI,sBAAsB,SAASnlG,EAAOn9C,GAAM,IAAIuiJ,EAAIpsJ,KAAKkxH,IAAIm7B,4BAA4BrlG,EAAOn9C,GAAM7J,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQoD,GAAK1C,EAAc1pJ,KAAKosJ,EAAI,EAAEE,oBAAoB,SAASC,EAAGr6H,EAAM/rB,GAAQ,EAAEqmJ,WAAW,SAAShD,EAAMt3H,EAAM/rB,GAA8C,GAAtCqjJ,EAAMD,EAAU5/G,MAAM3pC,KAAK+S,WAAoB,CAAC,GAAG/S,KAAKkpJ,MAAO,IAAIuD,EAASzsJ,KAAKkxH,IAAIw7B,mBAAmBlD,QAAgBiD,EAASzsJ,KAAKkxH,IAAIvmC,eAAe6+D,GAAUxpJ,KAAK4pJ,eAAgB5pJ,KAAK4pJ,eAAeh/D,YAAY6hE,GAAkB,QAAQpqI,KAAKmnI,IAAQxpJ,KAAKkxH,IAAItmC,YAAY6hE,GAAUzsJ,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAASxlJ,GAAM,EAAEylJ,YAAY,WAAW5sJ,KAAKkxH,IAAI27B,WAAW,EAAEpC,mBAAmB,SAASzB,IAAYhpJ,KAAKgpJ,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAErgC,QAAQ,SAAS0gC,EAAMt3H,EAAM/rB,GAAQqjJ,EAAMD,EAAU5/G,MAAM3pC,KAAK+S,WAAW,IAAI+5I,EAAK9sJ,KAAKkxH,IAAI67B,cAAcvD,GAAOxpJ,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQ8D,GAAMpD,EAAc1pJ,KAAK8sJ,EAAK,EAAEE,WAAW,WAAWhtJ,KAAKkpJ,OAAM,CAAI,EAAE+D,SAAS,WAAWjtJ,KAAKkpJ,OAAM,CAAK,EAAEgE,SAAS,SAAS/lJ,EAAKgmJ,EAAS7D,GAAU,IAAI8D,EAAKptJ,KAAKkxH,IAAIm8B,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmBnmJ,EAAKgmJ,EAAS7D,GAAUtpJ,KAAKgpJ,SAASroJ,EAASX,KAAKgpJ,QAAQuE,GAAI7D,EAAc1pJ,KAAKutJ,EAAG,CAAC,EAAEC,QAAQ,SAASj+I,GAAO/G,QAAQC,KAAK,qBAAqB8G,EAAM85I,EAASrpJ,KAAKgpJ,SAAS,EAAEz5I,MAAM,SAASA,GAAO/G,QAAQ+G,MAAM,mBAAmBA,EAAM85I,EAASrpJ,KAAKgpJ,SAAS,EAAEyE,WAAW,SAASl+I,GAA2E,MAApE/G,QAAQ+G,MAAM,wBAAwBA,EAAM85I,EAASrpJ,KAAKgpJ,UAAgBz5I,CAAK,GAA8T,+JAA+JyD,QAAQ,QAAO,SAAS3O,GAAK4kJ,EAAW9uG,UAAU91C,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAI0lJ,EAAUn0E,EAAQ,SAASm0E,UAAckB,EAAkBvrJ,EAAQurJ,kBAAkBr1E,EAAQ,SAASq1E,kBAAkBvrJ,EAAQy6I,cAAcvkE,EAAQ,SAASukE,cAAcz6I,EAAQwyE,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAAS0D,EAAQn2E,EAAOC,GAAS,SAASy6D,EAAKqsB,EAAIknE,GAAM,IAAI,IAAI5rI,KAAK0kE,EAAKknE,EAAK5rI,GAAG0kE,EAAI1kE,EAAG,CAAC,SAAS6rI,EAASpvI,EAAMqvI,GAAO,IAAIC,EAAGtvI,EAAM47B,UAAU,GAAGhmC,OAAOu1D,OAAO,CAAC,IAAIokF,EAAI35I,OAAOu1D,OAAOkkF,EAAMzzG,WAAW0zG,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAASjxH,IAAI,CAACA,EAAEwd,UAAUyzG,EAAMzzG,UAAkBggB,EAAK0zF,EAAblxH,EAAE,IAAIA,GAAape,EAAM47B,UAAU0zG,EAAGlxH,CAAC,CAAIkxH,EAAGluJ,aAAa4e,IAAwB,mBAAPA,GAAmB/V,QAAQ+G,MAAM,gBAAgBgP,GAAOsvI,EAAGluJ,YAAY4e,EAAM,CAAC,IAA8CyvI,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAah5I,EAAKnF,GAAS,GAAGA,aAAmBhJ,MAAO,IAAIiH,EAAM+B,OAAa/B,EAAMvP,KAAKsI,MAAM8xC,KAAKp6C,KAAK8uJ,EAAiBr4I,IAAOzW,KAAKsR,QAAQw9I,EAAiBr4I,GAASnO,MAAMonJ,mBAAkBpnJ,MAAMonJ,kBAAkB1vJ,KAAKyvJ,GAAgF,OAAlElgJ,EAAMkH,KAAKA,EAAQnF,IAAQtR,KAAKsR,QAAQtR,KAAKsR,QAAQ,KAAKA,GAAe/B,CAAK,CAAyE,SAASogJ,IAAW,CAA+N,SAASC,EAAartJ,EAAKmC,GAAS1E,KAAK6vJ,MAAMttJ,EAAKvC,KAAK8vJ,SAASprJ,EAAQqrJ,EAAgB/vJ,KAAK,CAAC,SAAS+vJ,EAAgB9lJ,GAAM,IAAI+lJ,EAAI/lJ,EAAK4lJ,MAAMI,MAAMhmJ,EAAK4lJ,MAAMK,cAAcD,KAAK,GAAGhmJ,EAAKgmJ,MAAMD,EAAI,CAAC,IAAIG,EAAGlmJ,EAAK6lJ,SAAS7lJ,EAAK4lJ,OAAOO,GAAQnmJ,EAAK,SAASkmJ,EAAGhqJ,QAAQg0D,EAAKg2F,EAAGlmJ,GAAMA,EAAKgmJ,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAermJ,EAAK1H,GAAwB,IAAlB,IAAI8Q,EAAEpJ,EAAK9D,OAAakN,KAAK,GAAGpJ,EAAKoJ,KAAK9Q,EAAM,OAAO8Q,CAAG,CAAC,SAASk9I,EAAc/jJ,EAAGvC,EAAKumJ,EAAQC,GAAiG,GAArFA,EAASxmJ,EAAKqmJ,EAAermJ,EAAKwmJ,IAAUD,EAAavmJ,EAAKA,EAAK9D,UAAUqqJ,EAAWhkJ,EAAG,CAACgkJ,EAAQE,aAAalkJ,EAAG,IAAI0kH,EAAI1kH,EAAG0jJ,cAAiBh/B,IAAKu/B,GAASE,EAAmBz/B,EAAI1kH,EAAGikJ,GAAyvI,SAAyBv/B,EAAI1kH,EAAGgkJ,GAASt/B,GAAKA,EAAI++B,OAA0C,iCAA5BO,EAAQpX,eAAqD5sI,EAAGokJ,OAAOJ,EAAQ71I,OAAO61I,EAAQpF,UAAU,IAAIoF,EAAQ7tJ,MAAM,CAA16IkuJ,CAAgB3/B,EAAI1kH,EAAGgkJ,GAAS,CAAC,CAAC,SAASM,EAAiBtkJ,EAAGvC,EAAK0T,GAAM,IAAItK,EAAEi9I,EAAermJ,EAAK0T,GAAM,KAAGtK,GAAG,GAAgM,MAAMo8I,EAAaP,EAAc,IAAI5mJ,MAAMkE,EAAG+kH,QAAQ,IAAI5zG,IAA3N,IAA5B,IAAIozI,EAAU9mJ,EAAK9D,OAAO,EAAQkN,EAAE09I,GAAW9mJ,EAAKoJ,GAAGpJ,IAAOoJ,GAAyB,GAAtBpJ,EAAK9D,OAAO4qJ,EAAavkJ,EAAG,CAAC,IAAI0kH,EAAI1kH,EAAG0jJ,cAAiBh/B,IAAKy/B,EAAmBz/B,EAAI1kH,EAAGmR,GAAMA,EAAK+yI,aAAa,KAAK,CAAwE,CAAioC,SAASzF,EAAkB+F,GAA4B,GAAlBhxJ,KAAKixJ,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAUhxJ,KAAKixJ,UAAUD,EAASE,EAAU,CAAsrB,SAASC,IAAO,CAA6kD,SAASC,EAAY7tJ,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAE8tJ,aAAa,GAAG,CAAmD,SAASC,EAAW/uJ,EAAKsP,GAAU,GAAGA,EAAStP,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAK45G,WAAY,GAAG,GAAGm1C,EAAW/uJ,EAAKsP,GAAW,OAAO,QAAYtP,EAAKA,EAAKgvJ,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmBz/B,EAAI1kH,EAAGgkJ,EAAQ31I,GAAQq2G,GAAKA,EAAI++B,OAA0C,iCAA5BO,EAAQpX,qBAA4D5sI,EAAGokJ,OAAOJ,EAAQ71I,OAAO61I,EAAQpF,UAAU,GAAI,CAAC,SAASqG,EAAevgC,EAAI1kH,EAAGklJ,GAAU,GAAGxgC,GAAKA,EAAI++B,KAAK,CAAC/+B,EAAI++B,OAAO,IAAI0B,EAAGnlJ,EAAGolJ,WAAW,GAAGF,EAAUC,EAAGA,EAAGxrJ,UAAUurJ,MAAa,CAAiC,IAAhC,IAAIlkE,EAAMhhF,EAAG2vG,WAAe9oG,EAAE,EAAQm6E,GAAOmkE,EAAGt+I,KAAKm6E,EAAMA,EAAMA,EAAM+jE,YAAYI,EAAGxrJ,OAAOkN,CAAC,CAAC,CAAC,CAAC,SAASw+I,EAAa7nE,EAAWwD,GAAO,IAAIskE,EAAStkE,EAAMukE,gBAAoB5mI,EAAKqiE,EAAM+jE,YAAiN,OAAlMO,EAAUA,EAASP,YAAYpmI,EAAU6+D,EAAWmyB,WAAWhxF,EAAQA,EAAMA,EAAK4mI,gBAAgBD,EAAc9nE,EAAWgoE,UAAUF,EAASL,EAAeznE,EAAWkmE,cAAclmE,GAAmBwD,CAAK,CAAC,SAASykE,EAAcjoE,EAAW0nE,EAASQ,GAAW,IAAIC,EAAGT,EAAS1nE,WAA2C,GAA7BmoE,GAAIA,EAAGloE,YAAYynE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAASv1C,WAAW,GAAa,MAAVk2C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgB/nE,EAAWgoE,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAcroE,EAAWmyB,WAAWk2C,EAAuB,MAAXH,EAAiBloE,EAAWgoE,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAASroE,WAAWA,QAAiBqoE,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAeznE,EAAWkmE,eAAelmE,EAAWA,GAAe0nE,EAASU,UAAUzD,IAAwB+C,EAASv1C,WAAWu1C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUxyJ,KAAK4wJ,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAAShZ,IAAgB,CAAqL,SAASiZ,EAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfxzJ,KAAKoyJ,SAAYpyJ,KAAKyzJ,gBAAgBzzJ,KAAS2a,EAAO64I,EAAQ74I,OAAWsxI,EAAIuH,EAAQpa,aAAa,GAAG6S,GAAa,MAARtxI,GAA8D,OAA5CA,EAAO64I,EAAQE,aAAazH,IAAsB,IAAI0H,EAAkB,CAAC,CAACC,UAAU3H,EAAItxI,OAAO,OAAwE,OAAhEggI,GAAkB36I,KAAKuzJ,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAIjlJ,KAAK,GAAG,CAAC,SAASulJ,GAAoBtxJ,EAAKuxJ,EAAOH,GAAmB,IAAIh5I,EAAOpY,EAAKoY,QAAQ,GAAOsxI,EAAI1pJ,EAAK62I,aAAa,IAAIz+H,IAASsxI,EAAK,OAAO,EAAM,GAAY,QAATtxI,GAAsB,yCAANsxI,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAI54I,EAAEsgJ,EAAkBxtJ,OAAakN,KAAI,CAAC,IAAI0gJ,EAAGJ,EAAkBtgJ,GAAG,GAAG0gJ,EAAGp5I,QAAQA,EAAQ,OAAOo5I,EAAGH,WAAW3H,CAAI,CAAC,OAAO,CAAI,CAAC,SAAStR,GAAkBp4I,EAAKgxJ,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtB/wJ,EAAK+wJ,EAAW/wJ,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAfgxJ,EAAIjvJ,KAAK/B,EAA0B,CAAC,OAAOA,EAAK6vJ,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBxtJ,OAA7C,IAAwD0Y,EAAMtc,EAAKygB,WAAeuoI,EAAI1sI,EAAM1Y,OAAWqnF,EAAMjrF,EAAK45G,WAAeC,EAAS75G,EAAKgvH,QAAQuiC,EAA7/kB,iCAA6glBvxJ,EAAK62I,cAAc0a,EAAOP,EAAIjvJ,KAAK,IAAI83G,GAAU,IAAI,IAAI/oG,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAA4C,UAAnCsK,EAAKkB,EAAMzQ,KAAKiF,IAAWsH,OAAiBg5I,EAAkBrvJ,KAAK,CAACqW,OAAOgD,EAAKytI,UAAUwI,UAAUj2I,EAAKhb,QAA+B,SAAfgb,EAAKy+F,UAAmBu3C,EAAkBrvJ,KAAK,CAACqW,OAAO,GAAGi5I,UAAUj2I,EAAKhb,QAAS,IAAQ0Q,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAAI,CAAC,IAAIsK,EAAmB,GAAGk2I,GAAtBl2I,EAAKkB,EAAMzQ,KAAKiF,GAA+BygJ,EAAOH,GAAmB,CAAC,IAAIh5I,EAAOgD,EAAKhD,QAAQ,GAAOsxI,EAAItuI,EAAKy7H,aAAiB2a,EAAGp5I,EAAO,UAAUA,EAAO,SAAS44I,EAAIjvJ,KAAKyvJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBrvJ,KAAK,CAACqW,OAAOA,EAAOi5I,UAAU3H,GAAK,CAACtR,GAAkBh9H,EAAK41I,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoBtxJ,EAAKuxJ,EAAOH,KAAwBh5I,EAAOpY,EAAKoY,QAAQ,GAAOsxI,EAAI1pJ,EAAK62I,aAAiB2a,EAAGp5I,EAAO,UAAUA,EAAO,SAAS44I,EAAIjvJ,KAAKyvJ,EAAG,KAAK9H,EAAI,KAAK0H,EAAkBrvJ,KAAK,CAACqW,OAAOA,EAAOi5I,UAAU3H,KAASz+D,GAAOsmE,IAAS,mCAAmCzxI,KAAK+5F,GAAU,CAAe,GAAdm3C,EAAIjvJ,KAAK,KAAQwvJ,GAAQ,YAAYzxI,KAAK+5F,GAAW,KAAM5uB,GAAUA,EAAM3jF,KAAM0pJ,EAAIjvJ,KAAKkpF,EAAM3jF,MAAW8wI,GAAkBntD,EAAM+lE,EAAIO,EAAOR,EAAWK,GAAmBnmE,EAAMA,EAAM+jE,iBAAkB,KAAM/jE,GAAOmtD,GAAkBntD,EAAM+lE,EAAIO,EAAOR,EAAWK,GAAmBnmE,EAAMA,EAAM+jE,YAAagC,EAAIjvJ,KAAK,KAAK83G,EAAS,IAAI,MAAMm3C,EAAIjvJ,KAAK,MAAM,OAAO,KAAKmqJ,EAAc,KAAKE,EAAiD,IAAtBnhE,EAAMjrF,EAAK45G,WAAiB3uB,GAAOmtD,GAAkBntD,EAAM+lE,EAAIO,EAAOR,EAAWK,GAAmBnmE,EAAMA,EAAM+jE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAIjvJ,KAAK,IAAI/B,EAAK4E,KAAK,KAAK5E,EAAKI,MAAMqQ,QAAQ,SAASo+I,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAIjvJ,KAAK/B,EAAKsH,KAAKmJ,QAAQ,QAAQo+I,IAAc,KAAKhD,EAAmB,OAAOmF,EAAIjvJ,KAAK,YAAY/B,EAAKsH,KAAK,OAAO,KAAK2kJ,EAAa,OAAO+E,EAAIjvJ,KAAK,UAAU/B,EAAKsH,KAAK,UAAU,KAAK6kJ,EAAmB,IAAIsF,EAAMzxJ,EAAK4qJ,SAAa8G,EAAM1xJ,EAAK+mJ,SAA0C,GAAjCiK,EAAIjvJ,KAAK,aAAa/B,EAAK4E,MAAS6sJ,EAAOT,EAAIjvJ,KAAK,YAAY0vJ,GAAUC,GAAc,KAAPA,GAAYV,EAAIjvJ,KAAK,MAAM2vJ,GAAOV,EAAIjvJ,KAAK,WAAW,GAAG2vJ,GAAc,KAAPA,EAAYV,EAAIjvJ,KAAK,YAAY2vJ,EAAM,UAAU,CAAC,IAAI3gJ,EAAI/Q,EAAK2xJ,eAAkB5gJ,GAAKigJ,EAAIjvJ,KAAK,KAAKgP,EAAI,KAAKigJ,EAAIjvJ,KAAK,IAAI,CAAC,OAAO,KAAKiqJ,EAA4B,OAAOgF,EAAIjvJ,KAAK,KAAK/B,EAAKykD,OAAO,IAAIzkD,EAAKsH,KAAK,MAAM,KAAKwkJ,EAAsB,OAAOkF,EAAIjvJ,KAAK,IAAI/B,EAAK65G,SAAS,KAAK,QAAQm3C,EAAIjvJ,KAAK,KAAK/B,EAAK65G,UAAU,CAAC,SAAS+3C,GAAWjjC,EAAI3uH,EAAKskB,GAAM,IAAIutI,EAAM,OAAO7xJ,EAAK6vJ,UAAU,KAAKnE,GAAamG,EAAM7xJ,EAAK8xJ,WAAU,IAAanE,cAAch/B,EAAI,KAAKy9B,EAAuB,MAAM,KAAKT,EAAernI,GAAK,EAAgG,GAAjFutI,IAAOA,EAAM7xJ,EAAK8xJ,WAAU,IAAOD,EAAMlE,cAAch/B,EAAIkjC,EAAMpqE,WAAW,KAAQnjE,EAAgC,IAA1B,IAAI2mE,EAAMjrF,EAAK45G,WAAiB3uB,GAAO4mE,EAAMxpE,YAAYupE,GAAWjjC,EAAI1jC,EAAM3mE,IAAO2mE,EAAMA,EAAM+jE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAUnjC,EAAI3uH,EAAKskB,GAAM,IAAIutI,EAAM,IAAI7xJ,EAAK5C,YAAY,IAAI,IAAIwgD,KAAK59C,EAAK,CAAC,IAAI6Q,EAAE7Q,EAAK49C,GAAgB,iBAAH/sC,GAAgBA,GAAGghJ,EAAMj0G,KAAIi0G,EAAMj0G,GAAG/sC,EAAG,CAA2E,OAAvE7Q,EAAKqvJ,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAch/B,EAAWkjC,EAAMhC,UAAU,KAAKnE,EAAa,IAAIpvI,EAAMtc,EAAKygB,WAAesxI,EAAOF,EAAMpxI,WAAW,IAAIqtI,EAAiB9E,EAAI1sI,EAAM1Y,OAAOmuJ,EAAOC,cAAcH,EAAM,IAAI,IAAI/gJ,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAAK+gJ,EAAMvI,iBAAiBwI,GAAUnjC,EAAIryG,EAAMzQ,KAAKiF,IAAG,IAAO,MAAM,KAAK66I,EAAernI,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAI2mE,EAAMjrF,EAAK45G,WAAiB3uB,GAAO4mE,EAAMxpE,YAAYypE,GAAUnjC,EAAI1jC,EAAM3mE,IAAO2mE,EAAMA,EAAM+jE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQnrJ,EAAOZ,EAAI1B,GAAOsC,EAAOZ,GAAK1B,CAAK,CAA3qoBksJ,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAat1G,UAAU7xC,MAAM6xC,UAAUggB,EAAK00F,EAAcY,GAAmCE,EAASx1G,UAAU,CAACh0C,OAAO,EAAEiI,KAAK,SAASrC,GAAO,OAAO/L,KAAK+L,IAAQ,IAAI,EAAE2I,SAAS,SAASo/I,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAGlgJ,EAAE,EAAEA,EAAErT,KAAKmG,OAAOkN,IAAKsnI,GAAkB36I,KAAKqT,GAAGkgJ,EAAIO,EAAOR,GAAY,OAAOC,EAAIjlJ,KAAK,GAAG,GAA2SshJ,EAAaz1G,UAAU/rC,KAAK,SAASiF,GAAyB,OAAtB08I,EAAgB/vJ,MAAaA,KAAKqT,EAAE,EAAEs6I,EAASiC,EAAaD,GAAuuBU,EAAal2G,UAAU,CAACh0C,OAAO,EAAEiI,KAAKuhJ,EAASx1G,UAAU/rC,KAAKymJ,aAAa,SAASxwJ,GAAuB,IAAlB,IAAIgP,EAAErT,KAAKmG,OAAakN,KAAI,CAAC,IAAIsK,EAAK3d,KAAKqT,GAAG,GAAGsK,EAAKy+F,UAAU/3G,EAAK,OAAOsZ,CAAK,CAAC,EAAEm3I,aAAa,SAASn3I,GAAM,IAAInR,EAAGmR,EAAK+yI,aAAa,GAAGlkJ,GAAIA,GAAIxM,KAAKu0J,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQzwJ,KAAK60J,aAAal3I,EAAKy+F,UAA8D,OAApDm0C,EAAcvwJ,KAAKu0J,cAAcv0J,KAAK2d,EAAK8yI,GAAgBA,CAAO,EAAEsE,eAAe,SAASp3I,GAAM,IAAyB8yI,EAArBjkJ,EAAGmR,EAAK+yI,aAAqB,GAAGlkJ,GAAIA,GAAIxM,KAAKu0J,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQzwJ,KAAKg1J,eAAer3I,EAAKy7H,aAAaz7H,EAAKytI,WAAWmF,EAAcvwJ,KAAKu0J,cAAcv0J,KAAK2d,EAAK8yI,GAAgBA,CAAO,EAAEwE,gBAAgB,SAAS5wJ,GAAK,IAAIsZ,EAAK3d,KAAK60J,aAAaxwJ,GAAoD,OAA/CysJ,EAAiB9wJ,KAAKu0J,cAAcv0J,KAAK2d,GAAaA,CAAI,EAAEu3I,kBAAkB,SAAS9b,EAAagS,GAAW,IAAIztI,EAAK3d,KAAKg1J,eAAe5b,EAAagS,GAA0D,OAA/C0F,EAAiB9wJ,KAAKu0J,cAAcv0J,KAAK2d,GAAaA,CAAI,EAAEq3I,eAAe,SAAS5b,EAAagS,GAA6B,IAAlB,IAAI/3I,EAAErT,KAAKmG,OAAakN,KAAI,CAAC,IAAI9Q,EAAKvC,KAAKqT,GAAG,GAAG9Q,EAAK6oJ,WAAWA,GAAW7oJ,EAAK62I,cAAcA,EAAc,OAAO72I,CAAK,CAAC,OAAO,IAAI,GAAuI0oJ,EAAkB9wG,UAAU,CAACg7G,WAAW,SAASjE,EAAQ7tI,GAAS,IAAI+xI,EAASp1J,KAAKixJ,UAAUC,EAAQ/4I,eAAe,SAAGi9I,GAAY/xI,KAASA,KAAW+xI,GAAyC,EAAElK,eAAe,SAAS9R,EAAaic,EAAcC,GAAS,IAAIpkC,EAAI,IAAIsgC,EAAsH,GAA7GtgC,EAAIm8B,eAAertJ,KAAKkxH,EAAI0gC,WAAW,IAAIjC,EAASz+B,EAAIokC,QAAQA,EAAWA,GAASpkC,EAAItmC,YAAY0qE,GAAYD,EAAc,CAAC,IAAIj5D,EAAK80B,EAAIo6B,gBAAgBlS,EAAaic,GAAenkC,EAAItmC,YAAYwR,EAAK,CAAC,OAAO80B,CAAG,EAAEo8B,mBAAmB,SAAS+H,EAAclI,EAAS7D,GAAU,IAAI/mJ,EAAK,IAAIuwJ,EAA+G,OAAlGvwJ,EAAK4E,KAAKkuJ,EAAc9yJ,EAAK65G,SAASi5C,EAAc9yJ,EAAK4qJ,SAASA,EAAS5qJ,EAAK+mJ,SAASA,EAAgB/mJ,CAAI,GAAoB4uJ,EAAKh3G,UAAU,CAACgiE,WAAW,KAAK61C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAKvuI,WAAW,KAAKgnE,WAAW,KAAK4nE,WAAW,KAAK1B,cAAc,KAAKtE,UAAU,KAAKxS,aAAa,KAAKz+H,OAAO,KAAKywI,UAAU,KAAKmK,aAAa,SAAS7D,EAAS8D,GAAU,OAAOvD,EAAcjyJ,KAAK0xJ,EAAS8D,EAAS,EAAEC,aAAa,SAAS/D,EAASgE,GAAU11J,KAAKu1J,aAAa7D,EAASgE,GAAaA,GAAU11J,KAAKiqF,YAAYyrE,EAAU,EAAEzrE,YAAY,SAASyrE,GAAU,OAAO7D,EAAa7xJ,KAAK01J,EAAS,EAAE9qE,YAAY,SAAS8mE,GAAU,OAAO1xJ,KAAKu1J,aAAa7D,EAAS,KAAK,EAAEiE,cAAc,WAAW,OAAwB,MAAjB31J,KAAKm8G,UAAgB,EAAEk4C,UAAU,SAASxtI,GAAM,OAAOwtI,GAAUr0J,KAAKkwJ,eAAelwJ,KAAKA,KAAK6mB,EAAK,EAAEgmI,UAAU,WAAqC,IAA1B,IAAIr/D,EAAMxtF,KAAKm8G,WAAiB3uB,GAAM,CAAC,IAAIriE,EAAKqiE,EAAM+jE,YAAepmI,GAAMA,EAAKinI,UAAUjE,GAAW3gE,EAAM4kE,UAAUjE,GAAWnuJ,KAAKiqF,YAAY9+D,GAAMqiE,EAAMooE,WAAWzqI,EAAKthB,QAAW2jF,EAAMq/D,YAAYr/D,EAAMriE,EAAK,CAAC,EAAE0qI,YAAY,SAAS3E,EAAQ7tI,GAAS,OAAOrjB,KAAKkwJ,cAAc7C,eAAe8H,WAAWjE,EAAQ7tI,EAAQ,EAAEyyI,cAAc,WAAW,OAAO91J,KAAKgjB,WAAW7c,OAAO,CAAC,EAAEutJ,aAAa,SAASta,GAA0B,IAAZ,IAAI5sI,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAGokJ,OAAO,GAAGziJ,EAAK,IAAI,IAAIgyC,KAAKhyC,EAAK,GAAGA,EAAIgyC,IAAIi5F,EAAc,OAAOj5F,EAAI3zC,EAAGA,EAAG4lJ,UAAUlE,EAAe1hJ,EAAG0jJ,cAAc1jJ,EAAGw9E,UAAU,CAAC,OAAO,IAAI,EAAE+rE,mBAAmB,SAASp7I,GAAoB,IAAZ,IAAInO,EAAGxM,KAAWwM,GAAG,CAAC,IAAI2B,EAAI3B,EAAGokJ,OAAO,GAAGziJ,GAAQwM,KAAUxM,EAAK,OAAOA,EAAIwM,GAASnO,EAAGA,EAAG4lJ,UAAUlE,EAAe1hJ,EAAG0jJ,cAAc1jJ,EAAGw9E,UAAU,CAAC,OAAO,IAAI,EAAEgsE,mBAAmB,SAAS5c,GAAyD,OAAe,MAA/Cp5I,KAAK0zJ,aAAata,EAAiC,GAA6Hj/E,EAAK6zF,EAASmD,GAAMh3F,EAAK6zF,EAASmD,EAAKh3G,WAA02Eq3G,EAASr3G,UAAU,CAACiiE,SAAS,YAAYg2C,SAAS3D,EAAc6G,QAAQ,KAAK7B,gBAAgB,KAAKxD,KAAK,EAAEsF,aAAa,SAAS7D,EAAS8D,GAAU,GAAG9D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAInhE,EAAMkkE,EAASv1C,WAAiB3uB,GAAM,CAAC,IAAIriE,EAAKqiE,EAAM+jE,YAAYvxJ,KAAKu1J,aAAa/nE,EAAMgoE,GAAUhoE,EAAMriE,CAAI,CAAC,OAAOumI,CAAQ,CAA+F,OAArE,MAAtB1xJ,KAAKyzJ,iBAAuB/B,EAASU,UAAUnE,IAAcjuJ,KAAKyzJ,gBAAgB/B,GAAgBO,EAAcjyJ,KAAK0xJ,EAAS8D,GAAU9D,EAASxB,cAAclwJ,KAAK0xJ,CAAQ,EAAEznE,YAAY,SAASyrE,GAAuE,OAA1D11J,KAAKyzJ,iBAAiBiC,IAAU11J,KAAKyzJ,gBAAgB,MAAY5B,EAAa7xJ,KAAK01J,EAAS,EAAEvB,WAAW,SAAS8B,EAAapvI,GAAM,OAAOstI,GAAWn0J,KAAKi2J,EAAapvI,EAAK,EAAEqvI,eAAe,SAASt1J,GAAI,IAAIu1J,EAAI,KAA6I,OAAxI7E,EAAWtxJ,KAAKyzJ,iBAAgB,SAASlxJ,GAAM,GAAGA,EAAK6vJ,UAAUnE,GAAiB1rJ,EAAK4hF,aAAa,OAAOvjF,EAAa,OAATu1J,EAAI5zJ,GAAY,CAAM,IAAU4zJ,CAAG,EAAE3rH,cAAc,SAAS+mF,GAAS,IAAIhvH,EAAK,IAAIiwJ,EAA4K,OAApKjwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAK65G,SAASmV,EAAQhvH,EAAKgvH,QAAQA,EAAQhvH,EAAKqvJ,WAAW,IAAIjC,GAAmBptJ,EAAKygB,WAAW,IAAIqtI,GAAmBkE,cAAchyJ,EAAYA,CAAI,EAAE6zJ,uBAAuB,WAAW,IAAI7zJ,EAAK,IAAI2wJ,EAAsE,OAArD3wJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKqvJ,WAAW,IAAIjC,EAAgBptJ,CAAI,EAAEooF,eAAe,SAAS9gF,GAAM,IAAItH,EAAK,IAAIowJ,EAAmD,OAA9CpwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKqzJ,WAAW/rJ,GAAatH,CAAI,EAAEwqJ,cAAc,SAASljJ,GAAM,IAAItH,EAAK,IAAIqwJ,EAAsD,OAA9CrwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKqzJ,WAAW/rJ,GAAatH,CAAI,EAAEmqJ,mBAAmB,SAAS7iJ,GAAM,IAAItH,EAAK,IAAIswJ,EAA2D,OAA9CtwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKqzJ,WAAW/rJ,GAAatH,CAAI,EAAE8pJ,4BAA4B,SAASrlG,EAAOn9C,GAAM,IAAItH,EAAK,IAAI4wJ,EAA4G,OAAtF5wJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAKgvH,QAAQhvH,EAAKykD,OAAOA,EAAOzkD,EAAKqpJ,UAAUrpJ,EAAKsH,KAAKA,EAAYtH,CAAI,EAAE8zJ,gBAAgB,SAASlvJ,GAAM,IAAI5E,EAAK,IAAIkwJ,EAAuG,OAAlGlwJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAK4E,KAAKA,EAAK5E,EAAK65G,SAASj1G,EAAK5E,EAAK6oJ,UAAUjkJ,EAAK5E,EAAK+zJ,WAAU,EAAY/zJ,CAAI,EAAEg0J,sBAAsB,SAASpvJ,GAAM,IAAI5E,EAAK,IAAI0wJ,EAA2D,OAA3C1wJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAK65G,SAASj1G,EAAY5E,CAAI,EAAE+oJ,gBAAgB,SAASlS,EAAaic,GAAe,IAAI9yJ,EAAK,IAAIiwJ,EAAYgE,EAAGnB,EAAcptI,MAAM,KAASpJ,EAAMtc,EAAKygB,WAAW,IAAIqtI,EAA2Q,OAA9P9tJ,EAAKqvJ,WAAW,IAAIjC,EAASptJ,EAAK2tJ,cAAclwJ,KAAKuC,EAAK65G,SAASi5C,EAAc9yJ,EAAKgvH,QAAQ8jC,EAAc9yJ,EAAK62I,aAAaA,EAA2B,GAAXod,EAAGrwJ,QAAW5D,EAAKoY,OAAO67I,EAAG,GAAGj0J,EAAK6oJ,UAAUoL,EAAG,IAAQj0J,EAAK6oJ,UAAUiK,EAAcx2I,EAAM01I,cAAchyJ,EAAYA,CAAI,EAAEmpJ,kBAAkB,SAAStS,EAAaic,GAAe,IAAI9yJ,EAAK,IAAIkwJ,EAAS+D,EAAGnB,EAAcptI,MAAM,KAA8N,OAAzN1lB,EAAK2tJ,cAAclwJ,KAAKuC,EAAK65G,SAASi5C,EAAc9yJ,EAAK4E,KAAKkuJ,EAAc9yJ,EAAK62I,aAAaA,EAAa72I,EAAK+zJ,WAAU,EAAmB,GAAXE,EAAGrwJ,QAAW5D,EAAKoY,OAAO67I,EAAG,GAAGj0J,EAAK6oJ,UAAUoL,EAAG,IAAQj0J,EAAK6oJ,UAAUiK,EAAqB9yJ,CAAI,GAAGorJ,EAAS6D,EAASL,GAAwCqB,EAAQr4G,UAAU,CAACi4G,SAASnE,EAAawI,aAAa,SAAStvJ,GAAM,OAAoC,MAA7BnH,KAAK02J,iBAAiBvvJ,EAAW,EAAEg9E,aAAa,SAASh9E,GAAM,IAAIwW,EAAK3d,KAAK02J,iBAAiBvvJ,GAAM,OAAOwW,GAAMA,EAAKhb,OAAO,EAAE,EAAE+zJ,iBAAiB,SAASvvJ,GAAM,OAAOnH,KAAKgjB,WAAW6xI,aAAa1tJ,EAAK,EAAEu6E,aAAa,SAASv6E,EAAKxE,GAAO,IAAIgb,EAAK3d,KAAKkwJ,cAAcmG,gBAAgBlvJ,GAAMwW,EAAKhb,MAAMgb,EAAKiuI,UAAU,GAAGjpJ,EAAM3C,KAAK6rJ,iBAAiBluI,EAAK,EAAE2mE,gBAAgB,SAASn9E,GAAM,IAAIwW,EAAK3d,KAAK02J,iBAAiBvvJ,GAAMwW,GAAM3d,KAAK22J,oBAAoBh5I,EAAK,EAAEitE,YAAY,SAAS8mE,GAAU,OAAGA,EAASU,WAAWzD,EAA+B3uJ,KAAKu1J,aAAa7D,EAAS,MAAr4H,SAA4B1nE,EAAW0nE,GAAU,IAAIS,EAAGT,EAAS1nE,WAAW,GAAGmoE,EAAG,CAAC,IAAII,EAAIvoE,EAAWgoE,UAAUG,EAAGloE,YAAYynE,GAAca,EAAIvoE,EAAWgoE,SAAS,CAAoR,OAA/QO,EAAIvoE,EAAWgoE,UAAUN,EAAS1nE,WAAWA,EAAW0nE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAc1nE,EAAWmyB,WAAWu1C,EAAS1nE,EAAWgoE,UAAUN,EAASD,EAAeznE,EAAWkmE,cAAclmE,EAAW0nE,GAAiBA,CAAQ,CAA+8GkF,CAAmB52J,KAAK0xJ,EAAU,EAAE7F,iBAAiB,SAAS2E,GAAS,OAAOxwJ,KAAKgjB,WAAW8xI,aAAatE,EAAQ,EAAEqG,mBAAmB,SAASrG,GAAS,OAAOxwJ,KAAKgjB,WAAW+xI,eAAevE,EAAQ,EAAEmG,oBAAoB,SAASlG,GAAS,OAAOzwJ,KAAKgjB,WAAWiyI,gBAAgBxE,EAAQr0C,SAAS,EAAE06C,kBAAkB,SAAS1d,EAAagS,GAAW,IAAI3xC,EAAIz5G,KAAK+2J,mBAAmB3d,EAAagS,GAAW3xC,GAAKz5G,KAAK22J,oBAAoBl9C,EAAI,EAAEu9C,eAAe,SAAS5d,EAAagS,GAAW,OAAwD,MAAjDprJ,KAAK+2J,mBAAmB3d,EAAagS,EAAgB,EAAE6L,eAAe,SAAS7d,EAAagS,GAAW,IAAIztI,EAAK3d,KAAK+2J,mBAAmB3d,EAAagS,GAAW,OAAOztI,GAAMA,EAAKhb,OAAO,EAAE,EAAEu0J,eAAe,SAAS9d,EAAaic,EAAc1yJ,GAAO,IAAIgb,EAAK3d,KAAKkwJ,cAAcxE,kBAAkBtS,EAAaic,GAAe13I,EAAKhb,MAAMgb,EAAKiuI,UAAU,GAAGjpJ,EAAM3C,KAAK6rJ,iBAAiBluI,EAAK,EAAEo5I,mBAAmB,SAAS3d,EAAagS,GAAW,OAAOprJ,KAAKgjB,WAAWgyI,eAAe5b,EAAagS,EAAU,EAAE54E,qBAAqB,SAAS++C,GAAS,OAAO,IAAIq+B,EAAa5vJ,MAAK,SAAS4hE,GAAM,IAAIuuF,EAAG,GAAwI,OAArImB,EAAW1vF,GAAK,SAASr/D,GAASA,IAAOq/D,GAAMr/D,EAAK6vJ,UAAUnE,GAAyB,MAAV18B,GAAehvH,EAAKgvH,SAASA,GAAU4+B,EAAG7rJ,KAAK/B,EAAM,IAAU4tJ,CAAE,GAAE,EAAEgH,uBAAuB,SAAS/d,EAAagS,GAAW,OAAO,IAAIwE,EAAa5vJ,MAAK,SAAS4hE,GAAM,IAAIuuF,EAAG,GAAuM,OAApMmB,EAAW1vF,GAAK,SAASr/D,GAASA,IAAOq/D,GAAMr/D,EAAK6vJ,WAAWnE,GAA8B,MAAf7U,GAAoB72I,EAAK62I,eAAeA,GAA4B,MAAZgS,GAAiB7oJ,EAAK6oJ,WAAWA,GAAY+E,EAAG7rJ,KAAK/B,EAAM,IAAU4tJ,CAAE,GAAE,GAAGqB,EAASr3G,UAAUq4B,qBAAqBggF,EAAQr4G,UAAUq4B,qBAAqBg/E,EAASr3G,UAAUg9G,uBAAuB3E,EAAQr4G,UAAUg9G,uBAAuBxJ,EAAS6E,EAAQrB,GAAuBsB,EAAKt4G,UAAUi4G,SAASlE,EAAeP,EAAS8E,EAAKtB,GAAgCuB,EAAcv4G,UAAU,CAACtwC,KAAK,GAAGutJ,cAAc,SAASnd,EAAO/oH,GAAO,OAAOlxB,KAAK6J,KAAKwtB,UAAU4iH,EAAOA,EAAO/oH,EAAM,EAAE0kI,WAAW,SAASvnJ,GAAMA,EAAKrO,KAAK6J,KAAKwE,EAAKrO,KAAK4rJ,UAAU5rJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,EAAEkxJ,WAAW,SAASpd,EAAO5rI,GAAMrO,KAAKs3J,YAAYrd,EAAO,EAAE5rI,EAAK,EAAEu8E,YAAY,SAAS8mE,GAAU,MAAM,IAAIppJ,MAAMwmJ,EAAiBC,GAAuB,EAAEwI,WAAW,SAAStd,EAAO/oH,GAAOlxB,KAAKs3J,YAAYrd,EAAO/oH,EAAM,GAAG,EAAEomI,YAAY,SAASrd,EAAO/oH,EAAM7iB,GAAwFA,EAAxErO,KAAK6J,KAAKwtB,UAAU,EAAE4iH,GAA6D5rI,EAA7CrO,KAAK6J,KAAKwtB,UAAU4iH,EAAO/oH,GAA2BlxB,KAAK4rJ,UAAU5rJ,KAAK6J,KAAKwE,EAAKrO,KAAKmG,OAAOkI,EAAKlI,MAAM,GAAGwnJ,EAAS+E,EAAcvB,GAAuBwB,EAAKx4G,UAAU,CAACiiE,SAAS,QAAQg2C,SAASjE,EAAUqJ,UAAU,SAASvd,GAAQ,IAAI5rI,EAAKrO,KAAK6J,KAAS4tJ,EAAQppJ,EAAKgpB,UAAU4iH,GAAQ5rI,EAAKA,EAAKgpB,UAAU,EAAE4iH,GAAQj6I,KAAK6J,KAAK7J,KAAK4rJ,UAAUv9I,EAAKrO,KAAKmG,OAAOkI,EAAKlI,OAAO,IAAIuxJ,EAAQ13J,KAAKkwJ,cAAcvlE,eAAe8sE,GAAoF,OAAxEz3J,KAAKgqF,YAAYhqF,KAAKgqF,WAAWurE,aAAamC,EAAQ13J,KAAKuxJ,aAAoBmG,CAAO,GAAG/J,EAASgF,EAAKD,GAAmCE,EAAQz4G,UAAU,CAACiiE,SAAS,WAAWg2C,SAAS5D,GAAcb,EAASiF,EAAQF,GAAwCG,EAAa14G,UAAU,CAACiiE,SAAS,iBAAiBg2C,SAAShE,GAAoBT,EAASkF,EAAaH,GAAwCI,EAAa34G,UAAUi4G,SAAS1D,EAAmBf,EAASmF,EAAa3B,GAA2B4B,EAAS54G,UAAUi4G,SAASxD,EAAcjB,EAASoF,EAAS5B,GAAyB6B,EAAO74G,UAAUi4G,SAAS9D,EAAYX,EAASqF,EAAO7B,GAAkC8B,EAAgB94G,UAAUi4G,SAAS/D,EAAsBV,EAASsF,EAAgB9B,GAAmC+B,EAAiB/4G,UAAUiiE,SAAS,qBAAqB82C,EAAiB/4G,UAAUi4G,SAASzD,EAAuBhB,EAASuF,EAAiB/B,GAAwCgC,EAAsBh5G,UAAUi4G,SAAS7D,EAA4BZ,EAASwF,EAAsBhC,GAAgChX,EAAchgG,UAAUwgG,kBAAkB,SAASp4I,EAAK8wJ,EAAOC,GAAY,OAAOF,EAAsBh5G,KAAK73C,EAAK8wJ,EAAOC,EAAW,EAAEnC,EAAKh3G,UAAUzlC,SAAS0+I,EAA2hJ,IAAI,GAAGj/I,OAAO8iI,eAAe,CAA2f,SAAS0gB,GAAep1J,GAAM,OAAOA,EAAK6vJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArBhxJ,EAAKA,EAAK45G,WAAiB55G,GAAyB,IAAhBA,EAAK6vJ,UAA8B,IAAhB7vJ,EAAK6vJ,UAAcmB,EAAIjvJ,KAAKqzJ,GAAep1J,IAAOA,EAAKA,EAAKgvJ,YAAY,OAAOgC,EAAIjlJ,KAAK,IAAI,QAAQ,OAAO/L,EAAKqpJ,UAAU,CAAxxBz3I,OAAO8iI,eAAe2Y,EAAaz1G,UAAU,SAAS,CAACxkC,IAAI,WAAiC,OAAtBo6I,EAAgB/vJ,MAAaA,KAAK43J,QAAQ,IAAIzjJ,OAAO8iI,eAAeka,EAAKh3G,UAAU,cAAc,CAACxkC,IAAI,WAAW,OAAOgiJ,GAAe33J,KAAK,EAAE6Z,IAAI,SAAShQ,GAAM,OAAO7J,KAAKoyJ,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAM3uJ,KAAKm8G,YAAYn8G,KAAKiqF,YAAYjqF,KAAKm8G,aAAetyG,GAAMqR,OAAOrR,KAAO7J,KAAK4qF,YAAY5qF,KAAKkwJ,cAAcvlE,eAAe9gF,IAAO,MAAM,QAAQ7J,KAAK6J,KAAKA,EAAK7J,KAAK2C,MAAMkH,EAAK7J,KAAK4rJ,UAAU/hJ,EAAK,IAAmSumJ,GAAQ,SAASnrJ,EAAOZ,EAAI1B,GAAOsC,EAAO,KAAKZ,GAAK1B,CAAK,CAAC,CAAW,CAAT,MAAM0H,IAAG,CAAC3K,EAAQurJ,kBAAkBA,EAAkBvrJ,EAAQy6I,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvkE,EAAQn2E,EAAOC,GAAS,IAAIm4J,EAAc,mJAAuJC,EAAS,IAAI11I,OAAO,aAAay1I,EAAchO,OAAO32I,MAAM,GAAG,GAAG,0CAA8C6kJ,EAAe,IAAI31I,OAAO,IAAIy1I,EAAchO,OAAOiO,EAASjO,OAAO,QAAQgO,EAAchO,OAAOiO,EAASjO,OAAO,QAA8I,SAASE,IAAY,CAA+P,SAASxyI,EAAMsyI,EAAOmO,EAAiB7N,EAAUH,EAAW7O,GAAgO,SAAS8c,EAAerqJ,GAAG,IAAIyG,EAAEzG,EAAEsF,MAAM,GAAG,GAAG,OAAGmB,KAAK81I,EAAkBA,EAAU91I,GAAyB,MAAdA,EAAEswC,OAAO,GAAzT,SAA2BluC,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAIyhJ,EAAW,QAA3BzhJ,GAAM,QAAkC,IAAI0hJ,EAAW,OAAY,KAAL1hJ,GAAW,OAAOyE,OAAOghI,aAAagc,EAAWC,EAAW,CAAM,OAAOj9I,OAAOghI,aAAazlI,EAAM,CAAyH2hJ,CAAkB9yI,SAASjR,EAAEitC,OAAO,GAAGtuC,QAAQ,IAAI,SAAamoI,EAAa5rI,MAAM,oBAAoB3B,GAAUA,EAAE,CAAC,SAASyqJ,EAAWtzG,GAAK,GAAGA,EAAI7yB,EAAM,CAAC,IAAIomI,EAAGzO,EAAOxyH,UAAUnF,EAAM6yB,GAAK/xC,QAAQ,WAAWilJ,GAAgBjP,GAASroJ,EAASuxB,GAAO83H,EAAWwC,WAAW8L,EAAG,EAAEvzG,EAAI7yB,GAAOA,EAAM6yB,CAAG,CAAC,CAAC,SAASpkD,EAASmhB,EAAEs8G,GAAG,KAAMt8G,GAAGy2I,IAAUn6B,EAAEo6B,EAAYhc,KAAKqN,KAAU4O,EAAUr6B,EAAEryH,MAAMwsJ,EAAQE,EAAUr6B,EAAE,GAAGj4H,OAAO6iJ,EAAQG,aAAaH,EAAQI,aAAatnI,EAAE22I,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BxP,EAAQgB,EAAWhB,QAAY0P,EAAW,CAAC,CAACC,aAAaX,IAAuBY,EAAS,CAAC,EAAM1mI,EAAM,IAAa,CAAC,IAAI,IAAI2mI,EAAShP,EAAOx8I,QAAQ,IAAI6kB,GAAO,GAAG2mI,EAAS,EAAE,CAAC,IAAIhP,EAAOvoG,OAAOpvB,GAAOoR,MAAM,SAAS,CAAC,IAAI4tF,EAAI84B,EAAW94B,IAAQ7iH,EAAK6iH,EAAIvmC,eAAek/D,EAAOvoG,OAAOpvB,IAAQg/F,EAAItmC,YAAYv8E,GAAM27I,EAAWJ,eAAev7I,CAAI,CAAC,MAAM,CAAyC,OAArCwqJ,EAAS3mI,GAAOmmI,EAAWQ,GAAiBhP,EAAOllG,OAAOk0G,EAAS,IAAI,IAAI,IAAI,IAAI9zG,EAAI8kG,EAAOx8I,QAAQ,IAAIwrJ,EAAS,GAAOtnC,EAAQs4B,EAAOxyH,UAAUwhI,EAAS,EAAE9zG,GAAS9iD,EAAOy2J,EAAWxqH,MAAS6W,EAAI,GAAGwsE,EAAQs4B,EAAOxyH,UAAUwhI,EAAS,GAAG7lJ,QAAQ,UAAU,IAAImoI,EAAa5rI,MAAM,iBAAiBgiH,EAAQ,oBAAoBtvH,EAAOsvH,SAASxsE,EAAI8zG,EAAS,EAAEtnC,EAAQprH,QAAeorH,EAAQjuF,MAAM,SAAQiuF,EAAQA,EAAQv+G,QAAQ,UAAU,IAAImoI,EAAa5rI,MAAM,iBAAiBgiH,EAAQ,uBAAuBxsE,EAAI8zG,EAAS,EAAEtnC,EAAQprH,QAAO,IAAI2yJ,EAAW72J,EAAO62J,WAAeC,EAAS92J,EAAOsvH,SAASA,EAA4G,GAA9EwnC,GAAU92J,EAAOsvH,SAAStvH,EAAOsvH,QAAQp5G,eAAeo5G,EAAQp5G,cAAmC,CAA4D,GAA3D6xI,EAAW8B,WAAW7pJ,EAAOgqJ,IAAIhqJ,EAAOmpJ,UAAU75B,GAAYunC,EAAY,IAAI,IAAIn+I,KAAUm+I,EAAY9O,EAAWkC,iBAAiBvxI,GAAao+I,GAAU5d,EAAasS,WAAW,iBAAiBl8B,EAAQ,2CAA2CtvH,EAAOsvH,QAAS,MAAMmnC,EAAWp0J,KAAKrC,GAAQ8iD,IAAM,MAAM,IAAI,IAAIikG,GAASroJ,EAASk4J,GAAU9zG,EAAIi0G,EAAiBnP,EAAOgP,EAAS7O,GAAY,MAAM,IAAI,IAAIhB,GAASroJ,EAASk4J,GAAU9zG,EAAIk0G,EAASpP,EAAOgP,EAAS7O,EAAW7O,GAAc,MAAM,QAAQ6N,GAASroJ,EAASk4J,GAAU,IAAIrsJ,EAAG,IAAI0sJ,EAAsBP,EAAaD,EAAWA,EAAWvyJ,OAAO,GAAGwyJ,aAA4GpN,GAA3FxmG,EAAIo0G,EAAsBtP,EAAOgP,EAASrsJ,EAAGmsJ,EAAaV,EAAe9c,GAAsB3uI,EAAGrG,QAAwJ,IAA7IqG,EAAG4sJ,QAAQC,EAAcxP,EAAO9kG,EAAIv4C,EAAG+kH,QAAQqnC,KAAWpsJ,EAAG4sJ,QAAO,EAASjP,EAAUY,MAAM5P,EAAaqS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAI+N,EAASC,EAAYvQ,EAAQ,CAAC,GAAW31I,EAAE,EAAEA,EAAEk4I,EAAIl4I,IAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAG1S,EAASiN,EAAEqsI,QAAQrsI,EAAEo7I,QAAQuQ,EAAYvQ,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQsQ,EAAY5P,EAAcl9I,EAAGw9I,EAAW2O,IAAeD,EAAWp0J,KAAKkI,GAAIw9I,EAAWhB,QAAQA,CAAO,MAASU,EAAcl9I,EAAGw9I,EAAW2O,IAAeD,EAAWp0J,KAAKkI,GAAiB,iCAATA,EAAGy/I,KAAuCz/I,EAAG4sJ,OAA0Fr0G,IAAlFA,EAAIy0G,EAAwB3P,EAAO9kG,EAAIv4C,EAAG+kH,QAAQ0mC,EAAejO,GAAsF,CAA7D,MAAM3/I,GAAG8wI,EAAa5rI,MAAM,wBAAwBlF,GAAG06C,GAAK,CAAC,CAAIA,EAAI7yB,EAAOA,EAAM6yB,EAASszG,EAAW9xJ,KAAK03C,IAAI46G,EAAS3mI,GAAO,EAAG,CAAC,CAAC,SAASqnI,EAAYvyJ,EAAE21B,GAA2D,OAAxDA,EAAEwsH,WAAWniJ,EAAEmiJ,WAAWxsH,EAAEysH,aAAapiJ,EAAEoiJ,aAAoBzsH,CAAC,CAAC,SAASw8H,EAAsBtP,EAAO33H,EAAM1lB,EAAGmsJ,EAAaV,EAAe9c,GAA+D,IAAjD,IAAIse,EAAuB33I,IAAIoQ,EAAUtlB,EAAviI,IAA0jI,CAAC,IAAIrJ,EAAEsmJ,EAAOllG,OAAO7iC,GAAG,OAAOve,GAAG,IAAI,IAAI,GAAvlI,IAA0lIqJ,EAAY6sJ,EAAS5P,EAAO32I,MAAMgf,EAAMpQ,GAAGlV,EAAvmI,MAAmnI,IAA9nI,IAAioIA,EAA8B,MAAM,IAAItE,MAAM,uCAA5BsE,EAAxoI,CAA0sI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAjuI,IAAouIA,GAAlwI,IAA4wIA,EAAW,CAA0I,GAAj6I,IAA2xIA,IAAYuuI,EAAaqS,QAAQ,kCAAkCiM,EAAS5P,EAAO32I,MAAMgf,EAAMpQ,IAAGoQ,EAAMpQ,EAAE,KAAEA,EAAE+nI,EAAOx8I,QAAQ9J,EAAE2uB,IAAY,GAAmH,MAAM,IAAI5pB,MAAM,2BAA2B/E,EAAE,WAA7JZ,EAAMknJ,EAAO32I,MAAMgf,EAAMpQ,GAAG9O,QAAQ,WAAWilJ,GAAgBzrJ,EAAG0U,IAAIu4I,EAAS92J,EAAMuvB,EAAM,GAAGtlB,EAA97I,CAAwgJ,KAAM,IAA/hJ,GAAkiJA,EAA4N,MAAM,IAAItE,MAAM,kCAApN3F,EAAMknJ,EAAO32I,MAAMgf,EAAMpQ,GAAG9O,QAAQ,WAAWilJ,GAAgBzrJ,EAAG0U,IAAIu4I,EAAS92J,EAAMuvB,GAAOipH,EAAaqS,QAAQ,cAAciM,EAAS,uBAAuBl2J,EAAE,OAAO2uB,EAAMpQ,EAAE,EAAElV,EAA3tJ,CAA8xJ,CAAC,MAAM,IAAI,IAAI,OAAOA,GAAG,KAA74J,EAAw5JJ,EAAGktJ,WAAW7P,EAAO32I,MAAMgf,EAAMpQ,IAAI,KAAv2J,EAAu3J,KAAr2J,EAAs3J,KAAp2J,EAAq3JlV,EAAr3J,EAAm4JJ,EAAG4sJ,QAAO,EAAK,KAAv8J,EAAg+J,KAAxhK,EAAoiK,KAAjhK,EAAmiK,MAAM,QAAQ,MAAM,IAAI9wJ,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhG6yI,EAAa5rI,MAAM,2BAAtqK,GAAosK3C,GAAUJ,EAAGktJ,WAAW7P,EAAO32I,MAAMgf,EAAMpQ,IAAWA,EAAE,IAAI,IAAI,OAAOlV,GAAG,KAA9wK,EAAyxKJ,EAAGktJ,WAAW7P,EAAO32I,MAAMgf,EAAMpQ,IAAI,KAAxuK,EAAwvK,KAAtuK,EAAuvK,KAAruK,EAAsvK,MAAM,KAAjzK,EAA00K,KAAl4K,EAA+7K,OAAjDnf,EAAMknJ,EAAO32I,MAAMgf,EAAMpQ,IAAY5O,OAAO,KAAU1G,EAAG4sJ,QAAO,EAAKz2J,EAAMA,EAAMuQ,MAAM,GAAG,IAAG,KAAx9K,MAA6+KtG,IAAkBjK,EAAM82J,GAAh+K,GAA4+K7sJ,GAAwBuuI,EAAaqS,QAAQ,cAAc7qJ,EAAM,sBAAsB6J,EAAG0U,IAAIu4I,EAAS92J,EAAMqQ,QAAQ,WAAWilJ,GAAgB/lI,KAAkC,iCAAnBymI,EAAa,KAAuCh2J,EAAM2gC,MAAM,qCAAqC63G,EAAaqS,QAAQ,cAAc7qJ,EAAM,qBAAqBA,EAAM,eAAe6J,EAAG0U,IAAIve,EAAMA,EAAMuvB,IAAO,MAAM,KAA73L,EAAu4L,MAAM,IAAI5pB,MAAM,4BAA4B,OAAOwZ,EAAE,IAAI,IAAIve,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOqJ,GAAG,KAAlhM,EAA6hMJ,EAAGktJ,WAAW7P,EAAO32I,MAAMgf,EAAMpQ,IAAIlV,EAA19L,EAAw+L,MAAM,KAAzkM,EAAqlM6sJ,EAAS5P,EAAO32I,MAAMgf,EAAMpQ,GAAGlV,EAAjmM,EAAgnM,MAAM,KAAjlM,EAA0mM,IAAIjK,EAAMknJ,EAAO32I,MAAMgf,EAAMpQ,GAAG9O,QAAQ,WAAWilJ,GAAgB9c,EAAaqS,QAAQ,cAAc7qJ,EAAM,sBAAsB6J,EAAG0U,IAAIu4I,EAAS92J,EAAMuvB,GAAO,KAAxvM,EAAwwMtlB,EAAtvM,OAAgxM,OAAOA,GAAG,KAAl2M,EAAg4MJ,EAAG+kH,QAA8B,iCAAnBonC,EAAa,KAAuCc,EAASn2H,MAAM,qCAAqC63G,EAAaqS,QAAQ,cAAciM,EAAS,qBAAqBA,EAAS,gBAAgBjtJ,EAAG0U,IAAIu4I,EAASA,EAASvnI,GAAOA,EAAMpQ,EAAElV,EAA3oN,EAAopN,MAAM,KAAjlN,EAAimNuuI,EAAaqS,QAAQ,+BAA+BiM,EAAS,OAAO,KAAnpN,EAAoqN7sJ,EAA/vN,EAAwwNslB,EAAMpQ,EAAE,MAAM,KAAxvN,EAAkwNlV,EAAxuN,EAA8vNslB,EAAMpQ,EAAE,MAAM,KAAvtN,EAAwuN,MAAM,IAAIxZ,MAAM,+DAAgEwZ,GAAG,CAAC,CAAC,SAAS4nI,EAAcl9I,EAAGw9I,EAAW2O,GAAyE,IAA3D,IAAIpnC,EAAQ/kH,EAAG+kH,QAAYunC,EAAW,KAASzlJ,EAAE7G,EAAGrG,OAAakN,KAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAOg4I,EAAMz9I,EAAEy9I,MAAU1oJ,EAAMiL,EAAEjL,MAAiC,IAAvBg3J,EAAItO,EAAMh+I,QAAQ,MAAY,EAAG,IAAIsN,EAAO/M,EAAE+M,OAAO0wI,EAAMn4I,MAAM,EAAEymJ,GAASvO,EAAUC,EAAMn4I,MAAMymJ,EAAI,GAAOC,EAAkB,UAATj/I,GAAkBywI,OAAeA,EAAUC,EAAM1wI,EAAO,KAAKi/I,EAAiB,UAARvO,GAAiB,GAAGz9I,EAAEw9I,UAAUA,GAAwB,IAAXwO,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAUj3J,EAAMiL,EAAEq+I,IAAI,gCAAgCjC,EAAWgC,mBAAmB4N,EAASj3J,GAAO,CAAiB,IAAZ0Q,EAAE7G,EAAGrG,OAAakN,MAAiBsH,GAAZ/M,EAAEpB,EAAG6G,IAAgBsH,UAA8B,QAATA,IAAgB/M,EAAEq+I,IAAI,wCAAmD,UAATtxI,IAAkB/M,EAAEq+I,IAAI0M,EAAah+I,GAAQ,MAAM,IAAIg/I,KAAIpoC,EAAQlkH,QAAQ,MAAY,GAAGsN,EAAOnO,EAAGmO,OAAO42G,EAAQr+G,MAAM,EAAEymJ,GAAKvO,EAAU5+I,EAAG4+I,UAAU75B,EAAQr+G,MAAMymJ,EAAI,KAAQh/I,EAAO,KAAKywI,EAAU5+I,EAAG4+I,UAAU75B,GAAQ,IAAIwiC,EAAGvnJ,EAAGy/I,IAAI0M,EAAah+I,GAAQ,IAAqD,GAAjDqvI,EAAW9+F,aAAa6oG,EAAG3I,EAAU75B,EAAQ/kH,IAAOA,EAAG4sJ,OAA8L,OAAtD5sJ,EAAGmsJ,aAAaA,EAAansJ,EAAGssJ,WAAWA,GAAkB,EAAjJ,GAA5C9O,EAAW8B,WAAWiI,EAAG3I,EAAU75B,GAAYunC,EAAY,IAAIn+I,KAAUm+I,EAAY9O,EAAWkC,iBAAiBvxI,EAAiF,CAAC,SAAS6+I,EAAwB3P,EAAOiQ,EAAWvoC,EAAQ0mC,EAAejO,GAAY,GAAG,yBAAyB3nI,KAAKkvG,GAAS,CAAC,IAAIwoC,EAAWlQ,EAAOx8I,QAAQ,KAAKkkH,EAAQ,IAAIuoC,GAAgBzrJ,EAAKw7I,EAAOxyH,UAAUyiI,EAAW,EAAEC,GAAY,GAAG,OAAO13I,KAAKhU,GAAO,MAAG,YAAYgU,KAAKkvG,IAAUy4B,EAAWwC,WAAWn+I,EAAK,EAAEA,EAAKlI,QAAe4zJ,IAAW1rJ,EAAKA,EAAK2E,QAAQ,WAAWilJ,GAAgBjO,EAAWwC,WAAWn+I,EAAK,EAAEA,EAAKlI,QAAe4zJ,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAcxP,EAAOiQ,EAAWvoC,EAAQqnC,GAAU,IAAI5oI,EAAI4oI,EAASrnC,GAA8I,OAA7H,MAALvhG,KAAWA,EAAI65H,EAAOmQ,YAAY,KAAKzoC,EAAQ,MAAYuoC,IAAY9pI,EAAI65H,EAAOmQ,YAAY,KAAKzoC,IAASqnC,EAASrnC,GAASvhG,GAAWA,EAAI8pI,CAAU,CAAC,SAASD,EAAMhQ,EAAO7iG,GAAQ,IAAI,IAAI7G,KAAK0pG,EAAQ7iG,EAAO7G,GAAG0pG,EAAO1pG,EAAG,CAAC,SAAS84G,EAASpP,EAAO33H,EAAM83H,EAAW7O,GAA8C,GAAiB,MAAxC0O,EAAOllG,OAAOzyB,EAAM,GAAwB,MAA4B,MAAzB23H,EAAOllG,OAAOzyB,EAAM,IAAc6yB,EAAI8kG,EAAOx8I,QAAQ,SAAS6kB,EAAM,IAAUA,GAAO83H,EAAWlhC,QAAQ+gC,EAAO33H,EAAM,EAAE6yB,EAAI7yB,EAAM,GAAU6yB,EAAI,IAAOo2F,EAAa5rI,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1Bs6I,EAAOvoG,OAAOpvB,EAAM,EAAE,GAAa,CAAC,IAAI6yB,EAAI8kG,EAAOx8I,QAAQ,MAAM6kB,EAAM,GAAmG,OAAhG83H,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAO33H,EAAM,EAAE6yB,EAAI7yB,EAAM,GAAG83H,EAAWiD,WAAkBloG,EAAI,CAAC,CAAC,IAAIk1G,EAAqiD,SAAepQ,EAAO33H,GAAO,IAAIoR,EAAUiwH,EAAI,GAAO2G,EAAI,6CAAkF,IAArCA,EAAInJ,UAAU7+H,EAAMgoI,EAAI1d,KAAKqN,GAAcvmH,EAAM42H,EAAI1d,KAAKqN,IAAyB,GAAhB0J,EAAIjvJ,KAAKg/B,GAAUA,EAAM,GAAG,OAAOiwH,CAAI,CAA/uDtrI,CAAM4hI,EAAO33H,GAAWq5H,EAAI0O,EAAO9zJ,OAAO,GAAGolJ,EAAI,GAAG,YAAYlpI,KAAK43I,EAAO,GAAG,IAAI,CAAC,IAAI9yJ,EAAK8yJ,EAAO,GAAG,GAAOjG,EAAMzI,EAAI,GAAG,YAAYlpI,KAAK43I,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOhG,EAAM1I,EAAI,GAAG0O,EAAO,GAAG,GAAOE,EAAUF,EAAO1O,EAAI,GAA2I,OAAxIvB,EAAWkD,SAAS/lJ,EAAK6sJ,GAAOA,EAAMhhJ,QAAQ,kBAAkB,MAAMihJ,GAAOA,EAAMjhJ,QAAQ,kBAAkB,OAAOg3I,EAAWoQ,SAAgBD,EAAUpuJ,MAAMouJ,EAAU,GAAGh0J,MAAM,CAAE,OAAO,CAAC,CAAC,SAAS6yJ,EAAiBnP,EAAO33H,EAAM83H,GAAY,IAAIjlG,EAAI8kG,EAAOx8I,QAAQ,KAAK6kB,GAAO,GAAG6yB,EAAI,CAAC,IAAIzhB,EAAMumH,EAAOxyH,UAAUnF,EAAM6yB,GAAKzhB,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAGn9B,OAAO6jJ,EAAWmC,sBAAsB7oH,EAAM,GAAGA,EAAM,IAAWyhB,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAASm0G,EAAkBrP,GAAQ,CAAkjB,SAASwQ,EAAYC,EAAKvlJ,GAA8B,OAAtBulJ,EAAKvM,UAAUh5I,EAAculJ,CAAI,CAAtqVvQ,EAAU5vG,UAAU,CAAC5iC,MAAM,SAASsyI,EAAOI,EAAaE,GAAW,IAAIH,EAAWhqJ,KAAKgqJ,WAAWA,EAAWgB,gBAAgB6O,EAAM5P,EAAaA,EAAa,CAAC,GAAG1yI,EAAMsyI,EAAOI,EAAaE,EAAUH,EAAWhqJ,KAAKm7I,cAAc6O,EAAW4C,aAAa,GAAuzTsM,EAAkB/+G,UAAU,CAACu/G,WAAW,SAASnoC,GAAS,IAAIwmC,EAAe11I,KAAKkvG,GAAU,MAAM,IAAIjpH,MAAM,mBAAmBipH,GAASvxH,KAAKuxH,QAAQA,CAAO,EAAErwG,IAAI,SAASmqI,EAAM1oJ,EAAMs3I,GAAQ,IAAI8d,EAAe11I,KAAKgpI,GAAQ,MAAM,IAAI/iJ,MAAM,qBAAqB+iJ,GAAOrrJ,KAAKA,KAAKmG,UAAU,CAACklJ,MAAMA,EAAM1oJ,MAAMA,EAAMs3I,OAAOA,EAAO,EAAE9zI,OAAO,EAAEo0J,aAAa,SAASlnJ,GAAG,OAAOrT,KAAKqT,GAAG+3I,SAAS,EAAEO,WAAW,SAASt4I,GAAG,OAAOrT,KAAKqT,GAAG21I,OAAO,EAAEyC,SAAS,SAASp4I,GAAG,OAAOrT,KAAKqT,GAAGg4I,KAAK,EAAEG,OAAO,SAASn4I,GAAG,OAAOrT,KAAKqT,GAAG44I,GAAG,EAAEhgJ,SAAS,SAASoH,GAAG,OAAOrT,KAAKqT,GAAG1Q,KAAK,GAA4E03J,EAAY,CAAC,EAAEA,EAAYlgH,qBAAqBkgH,IAAcA,EAAY,SAASC,EAAKvlJ,GAAQ,SAAS+M,IAAI,CAA4B,IAAI/M,KAA/B+M,EAAEq4B,UAAUplC,EAAO+M,EAAE,IAAIA,EAAgBw4I,EAAMx4I,EAAE/M,GAAQulJ,EAAKvlJ,GAAQ,OAAO+M,CAAC,GAAoNpiB,EAAQqqJ,UAAUA,CAAS,EAAE,CAAC,GAAG,2BAA2B,CAAC,SAASn0E,EAAQn2E,EAAOC,GAAS,aAAa,IAAIi3I,EAAa,WAAW,SAASC,EAAiB5vF,EAAOyxC,GAAO,IAAI,IAAIplF,EAAE,EAAEA,EAAEolF,EAAMtyF,OAAOkN,IAAI,CAAC,IAAIwjI,EAAWp+C,EAAMplF,GAAGwjI,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAK7iI,OAAO8iI,eAAejwF,EAAO6vF,EAAWxyI,IAAIwyI,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAY/8F,UAAUg9F,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0e,SAASY,EAAgBjwF,EAASqvF,GAAa,KAAKrvF,aAAoBqvF,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAC,IAAItB,EAAS3gE,EAAQ,eAAe2gE,EAASmG,OAAO9mE,EAAQ,YAAY2gE,EAASoG,cAAc/mE,EAAQ,oBAAoB,IAAIinE,EAAQtG,EAASoG,cAAkBnuB,EAAc,WAAW,SAASA,IAAoD,GAApCspB,EAAgB93I,KAAKwuH,GAAkBz7G,UAAU5M,OAAO,EAAG,MAAM,IAAImC,MAAM,2GAA2GtI,KAAK88I,SAAS,CAAC,EAAE98I,KAAK+8I,QAAQ,GAAG/8I,KAAKsoF,WAAW,CAAC,EAAE,CAAq5G,OAAp5GquD,EAAanoB,EAAc,CAAC,CAACnqH,IAAI,eAAe1B,MAAM,SAAsBlD,GAA2C,OAAnCO,KAAK+8I,QAAQz4I,KAAKu4I,EAAQp9I,IAAgBO,IAAI,GAAG,CAACqE,IAAI,aAAa1B,MAAM,SAAoBR,GAAS,IAAI66I,EAAMh9I,KAAsO,OAAjOA,KAAKmC,QAAQA,EAAQgS,OAAOC,KAAKmiI,EAASnyI,UAAUH,SAAQ,SAASI,GAAK,IAAIq+B,EAAa6zG,EAASnyI,SAASC,GAAK24I,EAAM34I,GAAyB,MAApB24I,EAAM76I,QAAQkC,GAAW24I,EAAM76I,QAAQkC,GAAKq+B,CAAY,IAAM1iC,KAAKixH,KAAKjxH,KAAK87J,uBAA8B97J,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBsuH,GAAK,GAAGA,EAAImsB,UAAW,MAAM,IAAI90I,MAAM,iEAA0G,OAAzCtI,KAAKixH,IAAIA,EAAIjxH,KAAK87J,uBAA8B97J,IAAI,GAAG,CAACqE,IAAI,cAAc1B,MAAM,SAAqBuvG,GAAU,IAAImrC,EAAYr9I,KAAKs9I,oBAAoBprC,GAAUmrC,EAAY9lI,QAAQvX,KAAK88I,SAAS5qC,GAAUmrC,CAAW,GAAG,CAACh5I,IAAI,UAAU1B,MAAM,WAAuF,OAApE3C,KAAKu9I,eAAev9I,KAAKi9I,eAAeO,kBAAkBx9I,KAAKixH,KAAYjxH,IAAI,GAAG,CAACqE,IAAI,uBAAuB1B,MAAM,WAA6L,OAA7J3C,KAAK48C,SAAS58C,KAAKixH,IAAIqnB,MAAM,qBAAqB,OAAO,OAAOt4I,KAAKi9I,eAAej9I,KAAKmC,QAAQ86I,gBAAgBzuB,EAAc0uB,eAAel9I,KAAK48C,UAAiB58C,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,IAAI86I,EAAOz9I,KAAmzC,OAA9yCA,KAAKmC,QAAQg7I,aAAa,GAAGn9I,KAAK+8I,QAAQ/8I,KAAKi9I,eAAeS,YAAYvvI,KAAI,SAASwvI,GAAgB,OAAOA,GAAgB,IAAGp2H,OAAOvnB,KAAK+8I,SAAS/8I,KAAKmC,QAAQnC,KAAK+8I,QAAQnE,QAAO,SAASz2I,EAAQ1C,GAAQ,OAAOA,EAAOm+I,mBAAmBz7I,EAAQs7I,EAAO,GAAEz9I,KAAKmC,SAASnC,KAAK43I,aAAa53I,KAAKmC,QAAQg7I,aAAavE,QAAO,SAAShB,EAAa1lC,GAAU,IAAI/hC,EAAQstE,EAAOxsB,IAAIqnB,MAAMpmC,GAAU2rC,SAA0D,OAAjDjG,EAAa1lC,GAAUqkC,EAASgC,QAAQpoE,GAAgBynE,CAAY,GAAE,CAAC,GAAG53I,KAAK+8I,QAAQ94I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI,CAACo3G,IAAIwsB,EAAOxsB,IAAI2mB,aAAa6F,EAAO7F,aAAa/tI,KAAK4zI,EAAO5zI,MAAM,IAAG7J,KAAK89I,UAAU99I,KAAK+8I,QAAQ94I,SAAQ,SAASxE,GAAQA,EAAOoa,IAAI,CAACijI,SAASW,EAAOX,UAAU,IAAG98I,KAAKu9I,eAAet5I,SAAQ,SAASiuG,GAAyC,MAA5BurC,EAAOxsB,IAAIqnB,MAAMpmC,IAAiBurC,EAAOM,YAAY7rC,EAAU,IAAGlyG,KAAKg+I,OAAOh+I,KAAK+8I,QAAQnE,QAAO,SAASj2I,EAAMlD,GAAQ,OAAOA,EAAOw+I,eAAet7I,EAAM,GAAE,CAAC,GAAGwR,OAAOC,KAAKpU,KAAKg+I,QAAQ/5I,SAAQ,SAASqjC,GAAI,IAAI42G,EAAOT,EAAOO,OAAO12G,GAAQE,EAAK02G,EAAO12G,KAAS61G,EAAYI,EAAOX,SAASt1G,GAAM61G,EAAYc,QAAQD,EAAOr0I,MAAMwzI,EAAYtwE,OAAOzlC,GAAIm2G,EAAOxsB,IAAIp+C,KAAKvrC,EAAG+1G,EAAYltE,QAAQ,IAAGh8D,OAAOC,KAAKpU,KAAK43I,cAAc3zI,SAAQ,SAASiuG,GAAUurC,EAAOxsB,IAAIp2G,OAAOq3F,GAAU,IAAI/hC,EAAQomE,EAASiC,QAAQiF,EAAO7F,aAAa1lC,IAAW,OAAOurC,EAAOxsB,IAAIp+C,KAAKq/B,EAAS/hC,EAAQ,CAAC,EAAE,IAAUnwE,IAAI,GAAG,CAACqE,IAAI,UAAU1B,MAAM,SAAiBkH,GAAqB,OAAf7J,KAAK6J,KAAKA,EAAY7J,IAAI,GAAG,CAACqE,IAAI,SAAS1B,MAAM,WAAkB,OAAO3C,KAAKixH,GAAG,GAAG,CAAC5sH,IAAI,sBAAsB1B,MAAM,SAA6BsqD,GAAM,IAAImxF,EAASp+I,KAAKixH,IAAIqnB,MAAMrrF,GAAM4wF,SAAS,OAAO79I,KAAKq+I,+BAA+BD,EAASnxF,EAAK,GAAG,CAAC5oD,IAAI,iCAAiC1B,MAAM,SAAwCwtE,EAAQmuE,GAAU,IAAIC,EAAOv+I,KAASw+I,EAAY,CAACF,SAASA,GAA8K,OAApKnqI,OAAOC,KAAKmiI,EAASnyI,UAAUH,SAAQ,SAASI,GAAKm6I,EAAYn6I,GAAKk6I,EAAOl6I,EAAI,IAAGm6I,EAAYvB,eAAej9I,KAAKi9I,eAAeuB,EAAYzB,QAAQ/8I,KAAK+8I,QAAe,IAAIvuB,EAAciwB,aAAatuE,EAAQquE,EAAY,GAAG,CAACn6I,IAAI,cAAc1B,MAAM,SAAqBsqD,GAAM,OAAOjtD,KAAKs9I,oBAAoBrwF,GAAMjtD,KAAKi9I,eAAeyB,UAAUC,aAAa,GAAG,CAACt6I,IAAI,oBAAoB1B,MAAM,WAA4C,OAAf3C,KAAK89I,UAAiB99I,KAAKu9I,cAAc,KAAY/uB,CAAa,CAAvrH,GAA2rHA,EAAc+nB,SAAS3gE,EAAQ,eAAe44C,EAAc4rB,OAAOxkE,EAAQ,YAAY44C,EAAciwB,aAAa7oE,EAAQ,mBAAmB44C,EAAc0uB,eAAetnE,EAAQ,sBAAsB44C,EAAcowB,WAAWhpE,EAAQ,iBAAiBn2E,EAAOC,QAAQ8uH,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,WAAW,GAAG,gBAAgB,GAAG,kBAAkB,MAAM,CAAC,EAAE,GAAnkiF,CAAukiF,uCCWr3iF/uH,EAAOC,QAA2N,SAASkO,EAAEC,EAAEtK,EAAE8sB,GAAG,SAAShmB,EAAE6uG,EAAEjoC,GAAG,IAAI1tE,EAAE21G,GAAG,CAAC,IAAIrrG,EAAEqrG,GAAG,CAAmE,GAAGlyG,EAAE,OAAOA,EAAEkyG,GAAE,GAAI,IAAI73E,EAAE,IAAI/4B,MAAM,uBAAuB4wG,EAAE,KAAK,MAAM73E,EAAE5qB,KAAK,mBAAmB4qB,CAAC,CAAC,IAAIhtB,EAAE9Q,EAAE21G,GAAG,CAACx5G,QAAQ,CAAC,GAAGmO,EAAEqrG,GAAG,GAAG9+D,KAAK/lC,EAAE3U,SAAQ,SAASkO,GAAoB,OAAOvD,EAAlBwD,EAAEqrG,GAAG,GAAGtrG,IAAgBA,EAAE,GAAEyG,EAAEA,EAAE3U,QAAQkO,EAAEC,EAAEtK,EAAE8sB,EAAE,CAAC,OAAO9sB,EAAE21G,GAAGx5G,OAAO,CAAC,IAAI,IAAIsH,OAAE,EAAoCkyG,EAAE,EAAEA,EAAE7oF,EAAElqB,OAAO+yG,IAAI7uG,EAAEgmB,EAAE6oF,IAAI,OAAO7uG,CAAC,CAAnb,CAAqb,CAAC,EAAE,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAG,GAAGA,EAAE,CAAC5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK+7J,KAAK,EAAE,IAAI,IAAIluJ,EAAE,EAAEA,EAAE7N,KAAK6J,KAAK1D,OAAO0H,IAAID,EAAEC,GAAG,IAAID,EAAEC,EAAE,CAAC,CAAC,IAAIxD,EAAEuD,EAAE,gBAAgByiB,EAAE8pB,UAAU,IAAI9vC,EAAEgmB,EAAE8pB,UAAU6hH,OAAO,SAASpuJ,GAAG,OAAO5N,KAAK6J,KAAK7J,KAAK+7J,KAAKnuJ,EAAE,EAAEyiB,EAAE8pB,UAAU8hH,qBAAqB,SAASruJ,GAAG,IAAI,IAAIC,EAAED,EAAEyjJ,WAAW,GAAG9tJ,EAAEqK,EAAEyjJ,WAAW,GAAGhhI,EAAEziB,EAAEyjJ,WAAW,GAAGhnJ,EAAEuD,EAAEyjJ,WAAW,GAAGrqJ,EAAEhH,KAAKmG,OAAO,EAAEa,GAAG,IAAIA,EAAE,GAAGhH,KAAK6J,KAAK7C,KAAK6G,GAAG7N,KAAK6J,KAAK7C,EAAE,KAAKzD,GAAGvD,KAAK6J,KAAK7C,EAAE,KAAKqpB,GAAGrwB,KAAK6J,KAAK7C,EAAE,KAAKqD,EAAE,OAAOrD,EAAEhH,KAAK+7J,KAAK,OAAO,CAAC,EAAE1rI,EAAE8pB,UAAU+hH,SAAS,SAAStuJ,GAAG,GAAG5N,KAAKm8J,YAAYvuJ,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKqJ,MAAMlT,KAAK+7J,KAAK/7J,KAAK+L,MAAM/L,KAAK+7J,KAAK/7J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAE,oEAAoE9sB,EAAE64J,OAAO,SAASxuJ,EAAEC,GAAG,IAAI,IAAItK,EAAE8G,EAAErD,EAAEkyG,EAAEjoC,EAAE59D,EAAEguB,EAAEhtB,EAAE,GAAGC,EAAE,EAAEA,EAAE1G,EAAEzH,QAAoE+yG,GAA5D31G,EAAEqK,EAAEyjJ,WAAW/8I,OAAkD,EAAE28D,GAAG,EAAE1tE,IAAI,GAAxD8G,EAAEuD,EAAEyjJ,WAAW/8I,OAA8C,EAAEjB,GAAG,GAAGhJ,IAAI,GAArDrD,EAAE4G,EAAEyjJ,WAAW/8I,OAA2C,EAAE+sB,EAAE,GAAGr6B,EAAEo5C,MAAM/1C,GAAGgJ,EAAEguB,EAAE,GAAG+e,MAAMp5C,KAAKq6B,EAAE,IAAIhtB,EAAEA,EAAEgc,EAAEs0B,OAAOu0D,GAAG7oF,EAAEs0B,OAAOssB,GAAG5gD,EAAEs0B,OAAOtxC,GAAGgd,EAAEs0B,OAAOtjB,GAAG,OAAOhtB,CAAC,EAAE9Q,EAAE84J,OAAO,SAASzuJ,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAIiqE,EAAE59D,EAAEguB,EAAEhtB,EAAE,GAAGC,EAAE,EAAE,IAAI1G,EAAEA,EAAEoF,QAAQ,sBAAsB,IAAIsB,EAAE1G,EAAEzH,QAAoH5C,EAA1G8sB,EAAEhjB,QAAQO,EAAE+2C,OAAOrwC,OAA4F,GAAtF28D,EAAE5gD,EAAEhjB,QAAQO,EAAE+2C,OAAOrwC,QAAsE,EAAEjK,GAAG,GAAG4mE,IAAI,GAA5E59D,EAAEgd,EAAEhjB,QAAQO,EAAE+2C,OAAOrwC,QAA4D,EAAEtN,GAAG,EAAEqM,IAAI,GAAjEguB,EAAEhR,EAAEhjB,QAAQO,EAAE+2C,OAAOrwC,OAAgDD,GAAG6G,OAAOghI,aAAa34I,GAAG,IAAI8P,IAAIgB,GAAG6G,OAAOghI,aAAa7xI,IAAI,IAAIg3B,IAAIhtB,GAAG6G,OAAOghI,aAAal1I,IAAI,OAAOqN,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASzG,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,IAAIrwB,KAAKs8J,eAAe,EAAEt8J,KAAKu8J,iBAAiB,EAAEv8J,KAAKw8J,MAAM,EAAEx8J,KAAKy8J,kBAAkB,KAAKz8J,KAAK08J,kBAAkB,IAAI,CAACrsI,EAAE8pB,UAAU,CAACwiH,WAAW,WAAW,OAAO,IAAI,EAAEC,qBAAqB,WAAW,OAAO,IAAI,GAAG/uJ,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAaA,EAAEs5J,MAAM,CAACC,MAAM,OAAOC,SAAS,SAASnvJ,EAAEC,GAAG,OAAOD,CAAC,EAAEovJ,WAAW,SAASpvJ,GAAG,OAAOA,CAAC,EAAEqvJ,kBAAkB,KAAKC,oBAAoB,MAAM35J,EAAE45J,QAAQvvJ,EAAE,UAAU,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAEziB,EAAE,WAAWvD,EAAE,CAAC,EAAE,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAWwD,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,QAAG,IAAoBD,IAAIA,EAAEzH,OAAO,OAAO,EAAE,IAAI5C,EAAE,WAAW8sB,EAAE+sI,UAAUxvJ,QAAG,IAAoBC,IAAIA,EAAE,GAAG,IAAYojE,EAAE,EAAEpjE,IAAI,EAAE,IAAI,IAAIwF,EAAE,EAAEguB,EAAEzzB,EAAEzH,OAAOkN,EAAEguB,EAAEhuB,IAAI49D,EAAE1tE,EAAEqK,EAAEyF,GAAGzF,EAAEyjJ,WAAWh+I,GAAsBxF,EAAEA,IAAI,EAAXxD,EAAZ,KAAKwD,EAAEojE,IAAoB,OAAU,EAAHpjE,CAAI,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAG5N,KAAK6J,KAAK,KAAK7J,KAAKmG,OAAO,EAAEnG,KAAK+L,MAAM,EAAE/L,KAAK+7J,KAAK,CAAC,CAAC,IAAI1xJ,EAAEuD,EAAE,WAAWyiB,EAAE8pB,UAAU,CAACgiH,YAAY,SAASvuJ,GAAG5N,KAAKq9J,WAAWr9J,KAAK+L,MAAM6B,EAAE,EAAEyvJ,WAAW,SAASzvJ,GAAG,GAAG5N,KAAKmG,OAAOnG,KAAK+7J,KAAKnuJ,GAAGA,EAAE,EAAE,MAAM,IAAItF,MAAM,sCAAsCtI,KAAKmG,OAAO,mBAAmByH,EAAE,qBAAqB,EAAE0vJ,SAAS,SAAS1vJ,GAAG5N,KAAKq9J,WAAWzvJ,GAAG5N,KAAK+L,MAAM6B,CAAC,EAAEykB,KAAK,SAASzkB,GAAG5N,KAAKs9J,SAASt9J,KAAK+L,MAAM6B,EAAE,EAAEouJ,OAAO,SAASpuJ,GAAG,EAAE2vJ,QAAQ,SAAS3vJ,GAAG,IAAIC,EAAEtK,EAAE,EAAE,IAAIvD,KAAKm8J,YAAYvuJ,GAAGC,EAAE7N,KAAK+L,MAAM6B,EAAE,EAAEC,GAAG7N,KAAK+L,MAAM8B,IAAItK,GAAGA,GAAG,GAAGvD,KAAKg8J,OAAOnuJ,GAAG,OAAO7N,KAAK+L,OAAO6B,EAAErK,CAAC,EAAEi6J,WAAW,SAAS5vJ,GAAG,OAAOvD,EAAEozJ,YAAY,SAASz9J,KAAKk8J,SAAStuJ,GAAG,EAAEsuJ,SAAS,SAAStuJ,GAAG,EAAEquJ,qBAAqB,SAASruJ,GAAG,EAAE8vJ,SAAS,WAAW,IAAI9vJ,EAAE5N,KAAKu9J,QAAQ,GAAG,OAAO,IAAIh9I,KAAiB,MAAX3S,GAAG,GAAG,MAAWA,GAAG,GAAG,IAAI,EAAEA,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAGA,GAAG,EAAE,IAAI,GAAGA,IAAI,EAAE,GAAGC,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAaA,EAAEo6J,QAAO,EAAGp6J,EAAEk2I,QAAO,EAAGl2I,EAAEoH,KAAI,EAAGpH,EAAEq6J,eAAc,EAAGr6J,EAAEkd,KAAK,KAAKld,EAAEs6J,YAAY,KAAKt6J,EAAEu6J,mBAAmB,KAAKv6J,EAAEulH,QAAQ,KAAKvlH,EAAEw6J,gBAAgB,KAAKx6J,EAAEy6J,eAAe,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,SAASpwJ,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAEziB,EAAE,WAAWrK,EAAE06J,cAAc,SAASrwJ,GAAG,OAAOyiB,EAAE4tI,cAAcrwJ,EAAE,EAAErK,EAAE26J,kBAAkB,SAAStwJ,GAAG,OAAOyiB,EAAEotI,YAAY,aAAa7vJ,EAAE,EAAErK,EAAE46J,kBAAkB,SAASvwJ,GAAG,OAAOyiB,EAAEotI,YAAY,SAAS7vJ,EAAE,EAAErK,EAAE66J,YAAY,SAASxwJ,GAAG,IAAIC,EAAEwiB,EAAEotI,YAAY,cAAc7vJ,GAAG,OAAOyiB,EAAEguI,iBAAiBxwJ,EAAE,EAAEtK,EAAE86J,iBAAiB,SAASzwJ,GAAG,OAAOyiB,EAAEguI,iBAAiBzwJ,EAAE,EAAErK,EAAEk6J,YAAY,SAAS7vJ,EAAEC,GAAG,OAAOwiB,EAAEotI,YAAY7vJ,EAAEC,EAAE,EAAEtK,EAAE65J,UAAU,SAASxvJ,GAAG,OAAOyiB,EAAE+sI,UAAUxvJ,EAAE,EAAErK,EAAE+6J,aAAa,SAAS1wJ,GAAG,OAAOyiB,EAAEiuI,aAAa1wJ,EAAE,EAAErK,EAAEg7J,iBAAiBluI,EAAEkuI,iBAAiBh7J,EAAEi7J,iBAAiBnuI,EAAEmuI,iBAAiBj7J,EAAEk7J,OAAO,SAAS7wJ,GAAG,OAAOyiB,EAAEouI,OAAO7wJ,EAAE,EAAErK,EAAEm7J,gBAAgB,SAAS9wJ,GAAG,OAAOyiB,EAAEquI,gBAAgB9wJ,EAAE,EAAErK,EAAEo7J,SAAS,SAAS/wJ,GAAG,OAAOyiB,EAAEsuI,SAAS/wJ,EAAE,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAE,oBAAoBuuI,YAAY,oBAAoBC,aAAa,oBAAoBC,YAAYz0J,EAAEuD,EAAE,QAAQrK,EAAE25J,oBAAoB7sI,EAAE,aAAa,QAAQ9sB,EAAE05J,kBAAkB5sI,EAAE,aAAa,QAAQ9sB,EAAEu5J,MAAM,OAAOv5J,EAAEw5J,SAAS,SAASnvJ,EAAEC,GAAG,OAAOxD,EAAE00J,WAAWnxJ,EAAE,CAACoxJ,MAAMnxJ,EAAEmxJ,QAAQ,GAAG,EAAEz7J,EAAEy5J,WAAW,SAASpvJ,GAAG,OAAOvD,EAAE40J,WAAWrxJ,EAAE,CAAC,EAAE,CAACsxJ,KAAK,KAAK,GAAG,CAAC,SAAStxJ,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,EAAEC,GAAG,OAAO7N,gBAAgBqwB,GAAGrwB,KAAKs4I,MAAM,CAAC,EAAEt4I,KAAK8oH,QAAQ,KAAK9oH,KAAKo8F,KAAK,GAAGxuF,GAAG5N,KAAK8yB,KAAKllB,EAAEC,QAAQ7N,KAAK80B,MAAM,WAAW,IAAIlnB,EAAE,IAAIyiB,EAAE,IAAI,IAAIxiB,KAAK7N,KAAK,mBAAmBA,KAAK6N,KAAKD,EAAEC,GAAG7N,KAAK6N,IAAI,OAAOD,CAAC,IAAI,IAAIyiB,EAAEziB,EAAEC,EAAE,CAAC,IAAIxD,EAAEuD,EAAE,YAAYyiB,EAAE8pB,UAAUvsC,EAAE,YAAYyiB,EAAE8pB,UAAUrnB,KAAKllB,EAAE,UAAUyiB,EAAE8uI,QAAQvxJ,EAAE,aAAayiB,EAAEjsB,SAASwJ,EAAE,cAAcyiB,EAAE+uI,MAAMxxJ,EAAE,2BAA2ByiB,EAAEstI,OAAO,CAACvB,OAAO,SAASxuJ,GAAG,OAAOvD,EAAE+xJ,OAAOxuJ,EAAE,EAAEyuJ,OAAO,SAASzuJ,GAAG,OAAOvD,EAAEgyJ,OAAOzuJ,EAAE,GAAGyiB,EAAEgvI,aAAazxJ,EAAE,kBAAkBC,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,WAAW,EAAE,iBAAiB,EAAE,aAAa,EAAE,0BAA0B,EAAE,SAAS,GAAG,WAAW,GAAG,YAAY,KAAK,GAAG,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAEziB,EAAE,YAAYvD,EAAEuD,EAAE,UAAU5G,EAAE4G,EAAE,WAAWsrG,EAAEtrG,EAAE,gBAAgBC,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,IAAItK,EAAE0tE,EAAE59D,EAAEguB,EAAE,KAAIxzB,EAAE7G,EAAEtD,OAAOmK,GAAG,CAAC,EAAE,CAAC8vJ,QAAO,EAAG2B,YAAW,EAAGC,uBAAsB,EAAG3B,eAAc,EAAG4B,eAAen1J,EAAEo1J,cAAe9B,SAAS/vJ,EAAEyiB,EAAEgsI,OAAOzuJ,IAAiBrK,GAAb0tE,EAAE,IAAIioC,EAAEtrG,EAAEC,IAAOyqI,MAAMjlI,EAAE,EAAEA,EAAE9P,EAAE4C,OAAOkN,IAAIguB,EAAE99B,EAAE8P,GAAGrT,KAAK6yE,KAAKxxC,EAAEq+H,YAAYr+H,EAAEs+H,aAAa,CAAClmB,QAAO,EAAG8lB,uBAAsB,EAAG9+I,KAAK4gB,EAAE5gB,KAAK9V,IAAI02B,EAAE12B,IAAIm+G,QAAQznF,EAAEu+H,eAAez5J,OAAOk7B,EAAEu+H,eAAe,KAAK7B,gBAAgB18H,EAAE08H,gBAAgBC,eAAe38H,EAAE28H,eAAeJ,cAAc/vJ,EAAE+vJ,gBAAgB,OAAO3sF,EAAE4uF,WAAW15J,SAASnG,KAAK8oH,QAAQ73C,EAAE4uF,YAAY7/J,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,GAAG,UAAU,GAAG,eAAe,KAAK,GAAG,CAAC,SAAS4N,EAAEC,EAAEtK,IAAG,SAAUqK,GAAG,aAAaC,EAAEnO,QAAQ,SAASmO,EAAEtK,GAAG,OAAO,IAAIqK,EAAEC,EAAEtK,EAAE,EAAEsK,EAAEnO,QAAQ2iB,KAAK,SAASxU,GAAG,OAAOD,EAAEkyJ,SAASjyJ,EAAE,CAAE,GAAEusC,KAAKp6C,KAAK,oBAAoB+/J,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAASnyJ,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAG5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK+7J,KAAK,CAAC,CAAC,IAAI1xJ,EAAEuD,EAAE,sBAAsByiB,EAAE8pB,UAAU,IAAI9vC,EAAEgmB,EAAE8pB,UAAU+hH,SAAS,SAAStuJ,GAAG5N,KAAKm8J,YAAYvuJ,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKqJ,MAAMlT,KAAK+7J,KAAK/7J,KAAK+L,MAAM/L,KAAK+7J,KAAK/7J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,qBAAqB,KAAK,GAAG,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAEziB,EAAE,aAAavD,EAAEuD,EAAE,WAAW5G,EAAE4G,EAAE,WAAWsrG,EAAEtrG,EAAE,eAAeqjE,EAAErjE,EAAE,cAAcyF,EAAEzF,EAAE,YAAYyzB,EAAEzzB,EAAE,kBAAkByG,EAAEzG,EAAE,sBAAsB0G,EAAE1G,EAAE,gBAAgBwwH,EAAExwH,EAAE,UAAUuyC,EAAEvyC,EAAE,kBAAkBkY,EAAElY,EAAE,sBAAsBkU,EAAE,SAASlU,GAAG,GAAGA,EAAEoyJ,iBAAiB3rJ,IAAIzG,EAAEoyJ,MAAMpyJ,EAAEoyJ,MAAMrD,aAAa/uJ,EAAEzL,QAAQs3I,QAAO,EAAG7rI,EAAEzL,QAAQw7J,QAAO,EAAG,eAAetzJ,EAAE+yJ,UAAUxvJ,EAAEoyJ,QAAQ,CAAC,IAAInyJ,EAAED,EAAEoyJ,MAAMpyJ,EAAEoyJ,MAAM,IAAIpB,WAAW/wJ,EAAE1H,QAAQ,IAAI0H,EAAE1H,QAAQyH,EAAEoyJ,MAAMnmJ,IAAIhM,EAAE,EAAE,CAAC,OAAOD,EAAEoyJ,KAAK,EAAEp4I,EAAE,SAASha,GAAG,IAAIC,EAAEiU,EAAElU,GAAoB,MAAM,WAArBvD,EAAE+yJ,UAAUvvJ,IAAuBD,EAAEzL,QAAQs3I,QAAQppH,EAAE4vI,WAAW3rJ,EAAEzG,EAAE,SAASD,EAAEsyJ,WAAWryJ,CAAC,EAAE+B,EAAE,SAAShC,GAAG,IAAIC,EAAEiU,EAAE9hB,MAAM,OAAO,MAAO6N,EAAyB,IAAI7N,KAAKmC,QAAQw7J,SAAS9vJ,EAAEwF,EAAEgpJ,OAAOxuJ,IAAIA,EAAED,GAAG5N,KAAKmC,QAAQs3I,OAAO0mB,EAAEV,WAAW5xJ,GAAGxD,EAAEozJ,YAAY,SAAS5vJ,GAAGD,GAAG5N,KAAKmC,QAAQs3I,SAAS5rI,EAAExD,EAAEozJ,YAAY,SAAS0C,EAAEC,WAAWvyJ,KAAKA,EAAE,EAAEjB,EAAE,SAASgB,EAAEC,EAAEtK,GAAGvD,KAAKmH,KAAKyG,EAAE5N,KAAK2K,IAAIpH,EAAEoH,IAAI3K,KAAKygB,KAAKld,EAAEkd,KAAKzgB,KAAK8oH,QAAQvlH,EAAEulH,QAAQ9oH,KAAK+9J,gBAAgBx6J,EAAEw6J,gBAAgB/9J,KAAKg+J,eAAez6J,EAAEy6J,eAAeh+J,KAAKggK,MAAMnyJ,EAAE7N,KAAKmC,QAAQoB,EAAEvD,KAAKqgK,iBAAiB,CAAC11J,IAAIpH,EAAEoH,IAAI8V,KAAKld,EAAEkd,KAAK,EAAE7T,EAAEutC,UAAU,CAAC0jG,OAAO,WAAW,OAAOjuI,EAAEwqC,KAAKp6C,MAAK,EAAG,EAAEkgK,SAAS,WAAW,OAAOtwJ,EAAEwqC,KAAKp6C,MAAK,EAAG,EAAEsgK,aAAa,WAAW,IAAI1yJ,EAAEga,EAAE5nB,MAAM,OAAOqK,EAAEozJ,YAAY,aAAa7vJ,EAAE,EAAE2yJ,aAAa,WAAW,IAAI3yJ,EAAEga,EAAE5nB,MAAM,OAAOqK,EAAEozJ,YAAY,aAAa7vJ,EAAE,EAAE4yJ,cAAc,WAAW,OAAOxgK,KAAKugK,eAAeE,MAAM,GAAG,IAAI9jI,EAAE,SAAS/uB,EAAEC,GAAG,IAAItK,EAAE8sB,EAAE,GAAG,IAAI9sB,EAAE,EAAEA,EAAEsK,EAAEtK,IAAI8sB,GAAGnV,OAAOghI,aAAa,IAAItuI,GAAGA,KAAK,EAAE,OAAOyiB,CAAC,EAA6Mjd,EAAE,SAASxF,EAAEC,EAAEtK,GAAG,IAAI8sB,EAAErpB,EAAEqD,EAAE+yJ,UAAUvvJ,GAAG,GAAU,iBAAPtK,EAArP,SAASqK,GAAG,OAA0B,KAAnBA,EAAEA,GAAG,CAAC,GAAI+vJ,QAAa,OAAO/vJ,EAAE6rI,aAAQ,IAAS7rI,EAAE6rI,SAAS7rI,EAAE6rI,QAAO,IAAI7rI,EAAEvD,EAAE3G,OAAOkK,EAAEqjE,IAAKxwD,KAAK7S,EAAE6S,MAAM,IAAIF,KAAK,OAAO3S,EAAEiwJ,cAAcjwJ,EAAEiwJ,YAAYjwJ,EAAEiwJ,YAAYn5G,eAAe92C,CAAC,CAAgD4pE,CAAEj0E,IAAsBw6J,kBAAkBx6J,EAAEw6J,gBAAgBz4I,SAAS/hB,EAAEw6J,gBAAgB,IAAIx6J,EAAEw6J,iBAAiB,MAAMx6J,EAAEw6J,kBAAkBx6J,EAAEoH,KAAI,GAAIpH,EAAEy6J,gBAAgB,GAAGz6J,EAAEy6J,iBAAiBz6J,EAAEoH,KAAI,GAAIpH,EAAEoH,MAAMiD,EAAEV,EAAEU,IAAIrK,EAAEq6J,gBAAgBvtI,EAAEsgD,EAAE/iE,KAAK0pD,EAAEld,KAAKp6C,KAAKqwB,GAAE,GAAI9sB,EAAEoH,KAAFpH,MAAcsK,EAAyBtK,EAAEo6J,QAAO,EAAGp6J,EAAEk2I,QAAO,EAAG5rI,EAAE,KAAK7G,EAAE,UAAU,GAAG,WAAWA,EAAEzD,EAAEk2I,SAASl2I,EAAEo6J,SAAkC,IAA1Bp6J,EAAEg8J,wBAA6B1xJ,EAAExD,EAAE4zJ,cAAcpwJ,QAAQ,CAAC,GAAGtK,EAAEo6J,QAAO,EAAGp6J,EAAEk2I,QAAO,IAAKzyI,GAAG6G,aAAawG,GAAG,MAAM,IAAI/L,MAAM,gBAAgBsF,EAAE,mCAAmC,gBAAgB5G,IAAI6G,EAAExD,EAAEozJ,YAAY,aAAa5vJ,GAAG,CAAC,IAAIqrG,EAAE,IAAItsG,EAAEgB,EAAEC,EAAEtK,GAAG,OAAOvD,KAAKs4I,MAAM1qI,GAAGsrG,EAAEA,CAAC,EAAEvoC,EAAE,SAAS/iE,GAAG,KAAKA,EAAEsF,OAAO,KAAKtF,EAAEA,EAAEypB,UAAU,EAAEzpB,EAAEzH,OAAO,IAAI,IAAI0H,EAAED,EAAEosJ,YAAY,KAAK,OAAOnsJ,EAAE,EAAED,EAAEypB,UAAU,EAAExpB,GAAG,EAAE,EAAEX,EAAE,SAASU,GAAG,MAAM,KAAKA,EAAEsF,OAAO,KAAKtF,GAAG,KAAKA,CAAC,EAAE0pD,EAAE,SAAS1pD,EAAEC,GAAG,OAAOA,OAAE,IAAoBA,GAAGA,EAAED,EAAEV,EAAEU,GAAG5N,KAAKs4I,MAAM1qI,IAAIwF,EAAEgnC,KAAKp6C,KAAK4N,EAAE,KAAK,CAACjD,KAAI,EAAGizJ,cAAc/vJ,IAAI7N,KAAKs4I,MAAM1qI,EAAE,EAAE8yJ,EAAE,SAAS9yJ,EAAEC,EAAEtK,GAAG,IAAI8sB,EAAE6oF,EAAE,IAAI7kG,EAAE,OAAOzG,EAAEoyJ,iBAAiB3rJ,GAAG6kG,EAAEqjD,iBAAiB3uJ,EAAEoyJ,MAAMzD,iBAAiBrjD,EAAEsjD,MAAM5uJ,EAAEoyJ,MAAMxD,MAAM,IAAItjD,EAAEqjD,kBAAkB3uJ,EAAEjD,KAAKkD,EAAEwzB,EAAEw7H,MAAM3jD,EAAEwjD,kBAAkB,GAAGxjD,EAAEsjD,MAAM,GAAG5uJ,EAAEoyJ,MAAMvD,oBAAoB5uJ,EAAEivJ,MAAM5jD,EAAEwjD,kBAAkB9uJ,EAAEoyJ,MAAMpD,wBAAwBvsI,EAAEziB,EAAEoyJ,MAAMrD,aAAazjD,EAAEwjD,kBAAkB7uJ,EAAEkvJ,SAAS1yJ,EAAEozJ,YAAY5vJ,EAAEovJ,kBAAkB5sI,GAAG9sB,OAAM8sB,EAAEzI,EAAEha,KAAM,IAAIyiB,EAAElqB,SAASyH,EAAEjD,MAAMkD,EAAEwzB,EAAEw7H,MAAMxsI,EAAE,IAAI6oF,EAAEqjD,iBAAiBlsI,EAAElqB,OAAO+yG,EAAEsjD,MAAMx1J,EAAEqpB,GAAG6oF,EAAEwjD,kBAAkB7uJ,EAAEkvJ,SAAS1yJ,EAAEozJ,YAAY5vJ,EAAEovJ,kBAAkB5sI,GAAG9sB,IAAI21G,EAAEojD,eAAepjD,EAAEwjD,kBAAkBv2J,OAAO+yG,EAAEujD,kBAAkB5uJ,EAAEivJ,MAAM5jD,CAAC,EAAuGynD,EAAE,SAAS/yJ,EAAEC,EAAEtK,EAAE8sB,EAAE4gD,EAAE59D,GAAG,IAAIguB,EAAEhtB,EAAEC,EAAE6rC,EAAEr6B,GAAGviB,EAAEm5J,kBAAkBrpJ,IAAI+qH,EAAEgiC,YAAYt+I,EAAEzX,EAAEozJ,YAAY,SAASpqJ,EAAExF,EAAE1G,OAAOygB,EAAEvd,EAAEozJ,YAAY,SAASr/B,EAAEgiC,WAAWvyJ,EAAE1G,OAAOyI,EAAE/B,EAAEi7G,SAAS,GAAGl8G,EAAEvC,EAAEozJ,YAAY,SAASpqJ,EAAEzD,IAAI4nE,EAAEntE,EAAEozJ,YAAY,SAASr/B,EAAEgiC,WAAWxwJ,IAAIwD,EAAEwU,EAAEzhB,SAAS0H,EAAE1G,KAAKhB,OAAOwqE,EAAE6G,EAAErxE,SAASyJ,EAAEzJ,OAAO+G,EAAEW,EAAE1L,QAAQm1D,EAAE,GAAGopG,EAAE,GAAGC,EAAE,GAAGrsJ,EAAEzG,EAAEwyJ,iBAAiB11J,MAAMkD,EAAElD,IAAIkD,EAAElD,IAAIuC,EAAEvC,IAAIw1C,EAAEtyC,EAAEwyJ,iBAAiB5/I,OAAO5S,EAAE4S,KAAK5S,EAAE4S,KAAKvT,EAAEuT,KAAK,IAAI0/I,EAAE,EAAES,EAAE,EAAEtsJ,IAAI6rJ,GAAG,IAAI,SAASlvF,GAAG2vF,EAAE,IAAIT,GAA/iB,SAASvyJ,EAAEC,GAAG,IAAItK,EAAEqK,EAAE,OAAOA,IAAIrK,EAAEsK,EAAE,MAAM,QAAQ,MAAMtK,IAAI,EAAE,CAAmfs9J,CAAEhzJ,EAAEkwJ,gBAAgBzpJ,KAAKssJ,EAAE,GAAGT,GAA7gB,SAASvyJ,EAAEC,GAAG,OAAO,IAAID,GAAG,EAAE,CAAkfkzJ,CAAEjzJ,EAAEmwJ,iBAAmB38H,EAAE8e,EAAEvE,WAAWva,IAAI,EAAEA,GAAG8e,EAAErE,aAAaza,IAAI,EAAEA,GAAG8e,EAAEnE,aAAa,EAAE3nC,EAAE8rC,EAAEnK,cAAc,KAAK3hC,IAAI,EAAEA,GAAG8rC,EAAEjK,WAAW,EAAE7hC,IAAI,EAAEA,GAAG8rC,EAAE/J,UAAUhjC,IAAIstJ,EAAE/jI,EAAE,EAAE,GAAGA,EAAE31B,EAAE8a,GAAG,GAAG8F,EAAE0vC,GAAG,KAAK36B,EAAE+jI,EAAEv6J,OAAO,GAAGu6J,GAAG/vF,IAAIgwF,EAAEhkI,EAAE,EAAE,GAAGA,EAAE38B,KAAKw8J,MAAM5vJ,GAAG,GAAG4qE,EAAElgB,GAAG,KAAK36B,EAAEgkI,EAAEx6J,OAAO,GAAGw6J,GAAG,IAAIz8J,EAAE,GAAuS,OAApSA,GAAG,OAAOA,GAAG4hB,IAAI1S,IAAIu9D,EAAE,OAAO,OAAOzsE,GAAGX,EAAEk5J,kBAAkBv4J,GAAGy4B,EAAE0E,EAAE,GAAGn9B,GAAGy4B,EAAEtoB,EAAE,GAAGnQ,GAAGy4B,EAAEp5B,EAAEi5J,MAAM,GAAGt4J,GAAGy4B,EAAEp5B,EAAE+4J,eAAe,GAAGp4J,GAAGy4B,EAAEp5B,EAAEg5J,iBAAiB,GAAGr4J,GAAGy4B,EAAE7a,EAAE3b,OAAO,GAAGjC,GAAGy4B,EAAE26B,EAAEnxD,OAAO,GAAuH,CAAC46J,WAA/G7nD,EAAE8nD,kBAAkB98J,EAAE4d,EAAEw1C,EAAoG2pG,UAAhG/nD,EAAEgoD,oBAAoBvkI,EAAEikI,EAAE,GAAG18J,EAAEy4B,EAAE/vB,EAAEzG,OAAO,GAAG,WAAWw2B,EAAEwjI,EAAE,GAAGxjI,EAAEtM,EAAE,GAAGvO,EAAEw1C,EAAE1qD,EAAkCu0J,iBAAiB59J,EAAE,EAAE48J,EAAE,CAACrtI,KAAK,SAASllB,EAAEC,GAAG,MAAM,IAAIvF,MAAM,mEAAmE,EAAEQ,OAAO,SAAS8E,GAAG,IAAIC,EAAEtK,EAAE8sB,EAAErpB,EAAEkyG,EAAE,GAAG,IAAIrrG,KAAK7N,KAAKs4I,MAAMt4I,KAAKs4I,MAAMjpE,eAAexhE,KAAKwiB,EAAErwB,KAAKs4I,MAAMzqI,GAAG7G,EAAE,IAAI4F,EAAEyjB,EAAElpB,KAAKkpB,EAAE2vI,MAAM31J,EAAE3G,OAAO2sB,EAAEluB,UAAUoB,EAAEsK,EAAEqF,MAAMlT,KAAKo8F,KAAKj2F,OAAO0H,EAAE1H,QAAQ0H,EAAEqF,MAAM,EAAElT,KAAKo8F,KAAKj2F,UAAUnG,KAAKo8F,MAAMxuF,EAAErK,EAAEyD,IAAIkyG,EAAE50G,KAAK0C,IAAI,OAAOkyG,CAAC,EAAErmC,KAAK,SAASjlE,EAAEC,EAAEtK,GAAG,GAAG,IAAIwP,UAAU5M,OAAO,CAAC,GAAGkE,EAAEs0J,SAAS/wJ,GAAG,CAAC,IAAIyiB,EAAEziB,EAAE,OAAO5N,KAAK8I,QAAO,SAAS8E,EAAEC,GAAG,OAAOA,EAAElD,KAAK0lB,EAAEhO,KAAKzU,EAAE,GAAE,CAAC,OAAO5N,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAEoH,KAAKkD,IAAID,CAAC,IAAG,IAAI,IAAI,CAAC,OAAOA,EAAE5N,KAAKo8F,KAAKxuF,EAAEwF,EAAEgnC,KAAKp6C,KAAK4N,EAAEC,EAAEtK,GAAGvD,IAAI,EAAEohK,OAAO,SAASxzJ,GAAG,IAAIA,EAAE,OAAO5N,KAAK,GAAGqK,EAAEs0J,SAAS/wJ,GAAG,OAAO5N,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAEoH,KAAKiD,EAAEyU,KAAKxU,EAAE,IAAG,IAAIA,EAAE7N,KAAKo8F,KAAKxuF,EAAErK,EAAE+zD,EAAEld,KAAKp6C,KAAK6N,GAAGwiB,EAAErwB,KAAK80B,QAAQ,OAAOzE,EAAE+rE,KAAK74F,EAAE4D,KAAKkpB,CAAC,EAAExV,OAAO,SAASjN,GAAGA,EAAE5N,KAAKo8F,KAAKxuF,EAAE,IAAIC,EAAE7N,KAAKs4I,MAAM1qI,GAAG,GAAGC,IAAI,KAAKD,EAAEsF,OAAO,KAAKtF,GAAG,KAAKC,EAAE7N,KAAKs4I,MAAM1qI,IAAIC,IAAIA,EAAElD,WAAW3K,KAAKs4I,MAAM1qI,QAAQ,IAAI,IAAIrK,EAAEvD,KAAK8I,QAAO,SAAS+E,EAAEtK,GAAG,OAAOA,EAAE4D,KAAK+L,MAAM,EAAEtF,EAAEzH,UAAUyH,CAAC,IAAGyiB,EAAE,EAAEA,EAAE9sB,EAAE4C,OAAOkqB,WAAWrwB,KAAKs4I,MAAM/0I,EAAE8sB,GAAGlpB,MAAM,OAAOnH,IAAI,EAAE0yH,SAAS,SAAS9kH,GAAGA,EAAEvD,EAAE3G,OAAOkK,GAAG,CAAC,EAAE,CAAC+vJ,QAAO,EAAGE,YAAY,QAAQC,mBAAmB,KAAKl8J,KAAK,SAASy/J,SAAS,MAAMv4C,QAAQ,KAAK6J,SAAS,kBAAkB2uC,eAAeljC,EAAEgiC,aAAa/1J,EAAEi0J,aAAa1wJ,EAAEhM,MAAM,WAAWgM,EAAEyzJ,UAAU,YAAYzzJ,EAAEyzJ,UAAU,UAAUzzJ,EAAEyzJ,UAAU,UAAUzzJ,EAAEyzJ,WAAWzzJ,EAAEyzJ,SAAS,QAAQ,UAAUzzJ,EAAEyzJ,WAAWzzJ,EAAEyzJ,SAAS,OAAO,IAAIxzJ,EAAEtK,EAAE8sB,EAAE,GAAGrpB,EAAE,EAAEiqE,EAAE,EAAE58D,EAAEhK,EAAEozJ,YAAY,SAAS7vJ,EAAE0zJ,eAAe1zJ,EAAEk7G,SAAS9oH,KAAK8oH,SAAS,KAAK,IAAI,IAAIx0G,KAAKtU,KAAKs4I,MAAM,GAAGt4I,KAAKs4I,MAAMjpE,eAAe/6D,GAAG,CAAC,IAAIwN,EAAE9hB,KAAKs4I,MAAMhkI,GAAGsT,EAAE9F,EAAE3f,QAAQ07J,aAAajwJ,EAAEiwJ,YAAYn5G,cAAc90C,EAAEyxB,EAAEzZ,GAAG,IAAIhY,EAAE,MAAM,IAAItH,MAAMsf,EAAE,wCAAwC,IAAIhb,EAAEkV,EAAE3f,QAAQ27J,oBAAoBlwJ,EAAEkwJ,oBAAoB,CAAC,EAAEtmF,EAAEkpF,EAAEtmH,KAAKp6C,KAAK8hB,EAAElS,EAAEhD,GAAGwG,EAAEutJ,EAAEvmH,KAAKp6C,KAAKsU,EAAEwN,EAAE01D,EAAExwE,EAAE4G,EAAEyzJ,SAASzzJ,EAAE0zJ,gBAAgBt6J,GAAGoM,EAAE2tJ,WAAW56J,OAAOqxE,EAAE8kF,eAAerrF,GAAG79D,EAAE6tJ,UAAU96J,OAAOkqB,EAAE/rB,KAAK8O,EAAE,CAAC,IAAIu9D,EAAKA,EAAEuoC,EAAEqoD,sBAAsB,WAAW5kI,EAAEtM,EAAElqB,OAAO,GAAGw2B,EAAEtM,EAAElqB,OAAO,GAAGw2B,EAAEs0C,EAAE,GAAGt0C,EAAE31B,EAAE,GAAG21B,EAAEtoB,EAAElO,OAAO,GAAGkO,EAAE,IAAInH,EAAEU,EAAEhM,KAAKuW,cAAc,IAAItK,EAAE,eAAeX,GAAG,gBAAgBA,GAAG,SAASA,GAAG,eAAeA,EAAE,IAAI4Y,EAAE9e,EAAEiqE,EAAEN,EAAExqE,QAAQ,IAAIg6C,EAAEn5C,EAAEiqE,EAAEN,EAAExqE,QAAQ5C,EAAE,EAAEA,EAAE8sB,EAAElqB,OAAO5C,IAAIsK,EAAE2zJ,OAAOnxI,EAAE9sB,GAAGw9J,YAAYlzJ,EAAE2zJ,OAAOnxI,EAAE9sB,GAAG49J,iBAAiBzE,mBAAmB,IAAIn5J,EAAE,EAAEA,EAAE8sB,EAAElqB,OAAO5C,IAAIsK,EAAE2zJ,OAAOnxI,EAAE9sB,GAAG09J,WAAWpzJ,EAAE2zJ,OAAO7wF,GAAG,IAAIrZ,EAAEzpD,EAAE4zJ,WAAW,OAAO7zJ,EAAEhM,KAAKuW,eAAe,IAAI,aAAa,IAAI,cAAc,IAAI,aAAa,OAAO9N,EAAEozJ,YAAY7vJ,EAAEhM,KAAKuW,cAAcm/C,GAAG,IAAI,OAAO,OAAOjtD,EAAEg0J,iBAAiBh0J,EAAEozJ,YAAY,cAAcnmG,GAAG1pD,EAAE+kH,UAAU,IAAI,SAAS,OAAO/kH,EAAE+vJ,OAAOtqJ,EAAE+oJ,OAAO9kG,GAAGA,EAAE,QAAQ,OAAOA,EAAE,EAAEklG,MAAM,SAAS5uJ,EAAEC,GAAG,OAAO7G,EAAE4G,EAAEC,EAAE,EAAEuyJ,WAAW,SAASxyJ,GAAG,OAAOvD,EAAEozJ,YAAY,SAASr/B,EAAEgiC,WAAWxyJ,GAAG,EAAE6xJ,WAAW,SAAS7xJ,GAAG,OAAOwwH,EAAEqhC,WAAW7xJ,EAAE,GAAGC,EAAEnO,QAAQygK,CAAC,EAAE,CAAC,WAAW,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,UAAU,EAAE,aAAa,EAAE,eAAe,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,SAAS,GAAG,UAAU,KAAK,GAAG,CAAC,SAASvyJ,EAAEC,EAAEtK,GAAG,aAAaA,EAAEy9J,kBAAkB,OAAOz9J,EAAE29J,oBAAoB,OAAO39J,EAAEg+J,sBAAsB,OAAOh+J,EAAEm+J,gCAAgC,OAAOn+J,EAAEo+J,4BAA4B,OAAOp+J,EAAEq+J,gBAAgB,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAASh0J,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,EAAEC,GAAG7N,KAAK6J,KAAK+D,EAAEC,IAAI7N,KAAK6J,KAAK7C,EAAEi3J,cAAcj+J,KAAK6J,OAAO7J,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK+7J,KAAK,CAAC,CAAC,IAAI1xJ,EAAEuD,EAAE,gBAAgB5G,EAAE4G,EAAE,WAAWyiB,EAAE8pB,UAAU,IAAI9vC,EAAEgmB,EAAE8pB,UAAU6hH,OAAO,SAASpuJ,GAAG,OAAO5N,KAAK6J,KAAKwnJ,WAAWrxJ,KAAK+7J,KAAKnuJ,EAAE,EAAEyiB,EAAE8pB,UAAU8hH,qBAAqB,SAASruJ,GAAG,OAAO5N,KAAK6J,KAAKmwJ,YAAYpsJ,GAAG5N,KAAK+7J,IAAI,EAAE1rI,EAAE8pB,UAAU+hH,SAAS,SAAStuJ,GAAG5N,KAAKm8J,YAAYvuJ,GAAG,IAAIC,EAAE7N,KAAK6J,KAAKqJ,MAAMlT,KAAK+7J,KAAK/7J,KAAK+L,MAAM/L,KAAK+7J,KAAK/7J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,eAAe,EAAE,UAAU,KAAK,GAAG,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAEziB,EAAE,WAAWvD,EAAE,WAAWrK,KAAK6J,KAAK,EAAE,EAAEQ,EAAE8vC,UAAU,CAACqnH,OAAO,SAAS5zJ,GAAGA,EAAEyiB,EAAEotI,YAAY,SAAS7vJ,GAAG5N,KAAK6J,KAAKvF,KAAKsJ,EAAE,EAAE6zJ,SAAS,WAAW,OAAOzhK,KAAK6J,KAAKyE,KAAK,GAAG,GAAGT,EAAEnO,QAAQ2K,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,IAAG,SAAUqK,GAAG,aAAa,GAAGrK,EAAEo6J,QAAO,EAAGp6J,EAAEy4I,OAAM,EAAGz4I,EAAEsgD,QAAO,EAAGtgD,EAAEs+J,YAAY,oBAAoBC,aAAa,oBAAoBlD,WAAWr7J,EAAE08J,gBAAW,IAAoBryJ,EAAErK,EAAEw+J,WAAW,oBAAoBnD,WAAW,oBAAoBkD,YAAYv+J,EAAEujG,MAAK,MAAO,CAAC,IAAIj5F,EAAE,IAAIi0J,YAAY,GAAG,IAAIv+J,EAAEujG,KAAK,IAAI,IAAIk7D,KAAK,CAACn0J,GAAG,CAACjM,KAAK,oBAAoByhF,IAAsM,CAAjM,MAAMhzD,GAAG,IAAI,IAAgGrpB,EAAE,IAA5FgS,OAAOipJ,aAAajpJ,OAAOkpJ,mBAAmBlpJ,OAAOmpJ,gBAAgBnpJ,OAAOopJ,eAAsBp7J,EAAEw6J,OAAO3zJ,GAAGtK,EAAEujG,KAAK,IAAI9/F,EAAEq7J,QAAQ,mBAAmBh/E,IAAuB,CAAlB,MAAMhzD,GAAG9sB,EAAEujG,MAAK,CAAE,CAAC,CAAC,CAAE,GAAE1sD,KAAKp6C,KAAK,oBAAoB+/J,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAASnyJ,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAGA,IAAI5N,KAAK6J,KAAK+D,EAAE5N,KAAKmG,OAAOnG,KAAK6J,KAAK1D,OAAOnG,KAAK+L,MAAM,EAAE/L,KAAK+7J,KAAK,EAAE,CAAC,IAAI1xJ,EAAEuD,EAAE,iBAAiByiB,EAAE8pB,UAAU,IAAI9vC,EAAEgmB,EAAE8pB,UAAU+hH,SAAS,SAAStuJ,GAAG,GAAG5N,KAAKm8J,YAAYvuJ,GAAG,IAAIA,EAAE,OAAO,IAAIgxJ,WAAW,GAAG,IAAI/wJ,EAAE7N,KAAK6J,KAAKy4J,SAAStiK,KAAK+7J,KAAK/7J,KAAK+L,MAAM/L,KAAK+7J,KAAK/7J,KAAK+L,MAAM6B,GAAG,OAAO5N,KAAK+L,OAAO6B,EAAEC,CAAC,EAAEA,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,gBAAgB,IAAI,GAAG,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAEziB,EAAE,WAAWvD,EAAE,SAASuD,GAAG5N,KAAK6J,KAAK,IAAI+0J,WAAWhxJ,GAAG5N,KAAK+L,MAAM,CAAC,EAAE1B,EAAE8vC,UAAU,CAACqnH,OAAO,SAAS5zJ,GAAG,IAAIA,EAAEzH,SAASyH,EAAEyiB,EAAEotI,YAAY,aAAa7vJ,GAAG5N,KAAK6J,KAAKgQ,IAAIjM,EAAE5N,KAAK+L,OAAO/L,KAAK+L,OAAO6B,EAAEzH,OAAO,EAAEs7J,SAAS,WAAW,OAAOzhK,KAAK6J,IAAI,GAAGgE,EAAEnO,QAAQ2K,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,IAAI,IAAI8sB,EAAEziB,EAAE,WAAWvD,EAAEuD,EAAE,aAAa5G,EAAE4G,EAAE,gBAAgBsrG,EAAE,IAAI/rG,MAAM,KAAK8jE,EAAE,EAAEA,EAAE,IAAIA,IAAIioC,EAAEjoC,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAEioC,EAAE,KAAKA,EAAE,KAAK,EAAE,IAAumB73E,EAAE,SAASzzB,EAAEC,GAAG,IAAItK,EAAE,KAAIsK,EAAEA,GAAGD,EAAEzH,QAASyH,EAAEzH,SAAS0H,EAAED,EAAEzH,QAAQ5C,EAAEsK,EAAE,EAAEtK,GAAG,GAAG,MAAO,IAAIqK,EAAErK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANsK,EAAUtK,EAAE21G,EAAEtrG,EAAErK,IAAIsK,EAAEtK,EAAEsK,CAAC,EAAEwG,EAAE,SAASzG,GAAG,IAAIC,EAAEtK,EAAE8G,EAAErD,EAAEiqE,EAAErjE,EAAEzH,OAAOkN,EAAE,IAAIlG,MAAM,EAAE8jE,GAAG,IAAI1tE,EAAE,EAAEsK,EAAE,EAAEA,EAAEojE,GAAG,IAAG5mE,EAAEuD,EAAEC,MAAO,IAAIwF,EAAE9P,KAAK8G,OAAO,IAAGrD,EAAEkyG,EAAE7uG,IAAK,EAAEgJ,EAAE9P,KAAK,MAAMsK,GAAG7G,EAAE,MAAM,CAAC,IAAIqD,GAAG,IAAIrD,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAG6G,EAAEojE,GAAG5mE,EAAEA,GAAG,EAAE,GAAGuD,EAAEC,KAAK7G,IAAIA,EAAE,EAAEqM,EAAE9P,KAAK,MAAM8G,EAAE,MAAMgJ,EAAE9P,KAAK8G,GAAGA,GAAG,MAAMgJ,EAAE9P,KAAK,MAAM8G,GAAG,GAAG,KAAKgJ,EAAE9P,KAAK,MAAM,KAAK8G,EAAE,CAAC,OAAOgJ,EAAElN,SAAS5C,IAAI8P,EAAEivJ,SAASjvJ,EAAEA,EAAEivJ,SAAS,EAAE/+J,GAAG8P,EAAElN,OAAO5C,GAAG8sB,EAAEkyI,kBAAkBlvJ,EAAE,EAAE9P,EAAE68J,WAAW,SAASxyJ,GAAG,OAAOvD,EAAE41J,WAAWj5J,EAAE4G,EAAE,SAAnpC,SAASA,GAAG,IAAIC,EAAEtK,EAAE8sB,EAAErpB,EAAEkyG,EAAEjoC,EAAErjE,EAAEzH,OAAOkN,EAAE,EAAE,IAAIrM,EAAE,EAAEA,EAAEiqE,EAAEjqE,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEyjJ,WAAWrqJ,MAAsBA,EAAE,EAAEiqE,GAAwB,QAAS,OAA7B5gD,EAAEziB,EAAEyjJ,WAAWrqJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAK8sB,EAAE,OAAOrpB,KAAMqM,GAAG9P,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIsK,EAAExD,EAAE03J,WAAW,IAAInD,WAAWvrJ,GAAG,IAAIlG,MAAMkG,GAAG6lG,EAAE,EAAElyG,EAAE,EAAEkyG,EAAE7lG,EAAErM,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEyjJ,WAAWrqJ,MAAsBA,EAAE,EAAEiqE,GAAwB,QAAS,OAA7B5gD,EAAEziB,EAAEyjJ,WAAWrqJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAK8sB,EAAE,OAAOrpB,KAAMzD,EAAE,IAAIsK,EAAEqrG,KAAK31G,EAAEA,EAAE,MAAMsK,EAAEqrG,KAAK,IAAI31G,IAAI,EAAEsK,EAAEqrG,KAAK,IAAI,GAAG31G,GAAGA,EAAE,OAAOsK,EAAEqrG,KAAK,IAAI31G,IAAI,GAAGsK,EAAEqrG,KAAK,IAAI31G,IAAI,EAAE,GAAGsK,EAAEqrG,KAAK,IAAI,GAAG31G,IAAIsK,EAAEqrG,KAAK,IAAI31G,IAAI,GAAGsK,EAAEqrG,KAAK,IAAI31G,IAAI,GAAG,GAAGsK,EAAEqrG,KAAK,IAAI31G,IAAI,EAAE,GAAGsK,EAAEqrG,KAAK,IAAI,GAAG31G,GAAG,OAAOsK,CAAC,CAA6jBwF,CAAEzF,EAAE,EAAErK,EAAEk8J,WAAW,SAAS7xJ,GAAG,GAAGvD,EAAE41J,WAAW,OAAO5vI,EAAEotI,YAAY,aAAa7vJ,GAAG8G,SAAS,SAA8D,IAAI,IAAI7G,EAAE,GAAGtK,EAAE,EAAEyD,GAAtE4G,EAAEyiB,EAAEotI,YAAYpzJ,EAAE03J,WAAW,aAAa,QAAQn0J,IAAwBzH,OAAe5C,EAAEyD,GAAG,CAAC,IAAIiqE,EAAE5vC,EAAEzzB,EAAErH,KAAK23C,IAAI36C,EAA/B,MAAmCyD,IAAIqD,EAAE03J,WAAWl0J,EAAEvJ,KAAK+P,EAAEzG,EAAE00J,SAAS/+J,EAAE0tE,KAAKpjE,EAAEvJ,KAAK+P,EAAEzG,EAAEsF,MAAM3P,EAAE0tE,KAAK1tE,EAAE0tE,CAAC,CAAC,OAAOpjE,EAAES,KAAK,GAAG,CAAC,EAAE,CAAC,eAAe,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAASV,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAG,OAAOA,CAAC,CAAC,SAASvD,EAAEuD,EAAEC,GAAG,IAAI,IAAItK,EAAE,EAAEA,EAAEqK,EAAEzH,SAAS5C,EAAEsK,EAAEtK,GAAG,IAAIqK,EAAEyjJ,WAAW9tJ,GAAG,OAAOsK,CAAC,CAAC,SAAS7G,EAAE4G,GAAG,IAAIC,EAAE,MAAMwiB,EAAE,GAAGhmB,EAAEuD,EAAEzH,OAAOa,EAAEzD,EAAE65J,UAAUxvJ,GAAGsrG,EAAE,EAAEjoC,GAAE,EAAG,IAAI,OAAOjqE,GAAG,IAAI,aAAakU,OAAOghI,aAAavyG,MAAM,KAAK,IAAIi1H,WAAW,IAAI,MAAM,IAAI,aAAa1jJ,OAAOghI,aAAavyG,MAAM,KAAKtI,EAAE,IAAkB,CAAb,MAAMhuB,GAAG49D,GAAE,CAAE,CAAC,IAAIA,EAAE,CAAC,IAAI,IAAI58D,EAAE,GAAGC,EAAE,EAAEA,EAAE1G,EAAEzH,OAAOmO,IAAID,GAAG6G,OAAOghI,aAAatuI,EAAE0G,IAAI,OAAOD,CAAC,CAAC,KAAK6kG,EAAE7uG,GAAGwD,EAAE,GAAG,IAAI,UAAU7G,GAAG,eAAeA,EAAEqpB,EAAE/rB,KAAK4W,OAAOghI,aAAavyG,MAAM,KAAK/7B,EAAEsF,MAAMgmG,EAAE3yG,KAAK23C,IAAIg7D,EAAErrG,EAAExD,MAAMgmB,EAAE/rB,KAAK4W,OAAOghI,aAAavyG,MAAM,KAAK/7B,EAAE00J,SAASppD,EAAE3yG,KAAK23C,IAAIg7D,EAAErrG,EAAExD,MAAM6uG,GAAGrrG,CAA4B,CAA1B,MAAMwF,GAAGxF,EAAEtH,KAAKC,MAAMqH,EAAE,EAAE,CAAC,OAAOwiB,EAAE/hB,KAAK,GAAG,CAAC,SAAS4qG,EAAEtrG,EAAEC,GAAG,IAAI,IAAItK,EAAE,EAAEA,EAAEqK,EAAEzH,OAAO5C,IAAIsK,EAAEtK,GAAGqK,EAAErK,GAAG,OAAOsK,CAAC,CAAC,IAAIojE,EAAErjE,EAAE,aAAayF,EAAEzF,EAAE,kBAAkByzB,EAAEzzB,EAAE,gBAAgBrK,EAAE06J,cAAc,SAASrwJ,GAAG,IAAI,IAAIC,EAAE,GAAGtK,EAAE,EAAEA,EAAEqK,EAAEzH,OAAO5C,IAAIsK,GAAGqN,OAAOghI,aAAa,IAAItuI,EAAEyjJ,WAAW9tJ,IAAI,OAAOsK,CAAC,EAAEtK,EAAE86J,iBAAiB,SAASzwJ,EAAEC,GAAGtK,EAAE+6J,aAAa,QAAQzwJ,EAAEA,GAAG,kBAAkB,IAAI,OAAO,IAAIm0J,KAAK,CAACp0J,GAAG,CAAChM,KAAKiM,GAAqN,CAAjN,MAAMwiB,GAAG,IAAI,IAAgGrpB,EAAE,IAA5FgS,OAAOipJ,aAAajpJ,OAAOkpJ,mBAAmBlpJ,OAAOmpJ,gBAAgBnpJ,OAAOopJ,eAAsB,OAAOp7J,EAAEw6J,OAAO5zJ,GAAG5G,EAAEq7J,QAAQx0J,EAA8D,CAA3D,MAAMwiB,GAAG,MAAM,IAAI/nB,MAAM,kCAAkC,CAAC,CAAC,EAAE/E,EAAEg/J,kBAAkBv7J,EAAE,IAAIqN,EAAE,CAAC,EAAEA,EAAEwvC,OAAO,CAACA,OAAOxzB,EAAE2rH,MAAM,SAASpuI,GAAG,OAAOvD,EAAEuD,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAE07J,YAAY,SAASj0J,GAAG,OAAOyG,EAAEwvC,OAAOk+G,WAAWn0J,GAAG6yJ,MAAM,EAAEsB,WAAW,SAASn0J,GAAG,OAAOvD,EAAEuD,EAAE,IAAIgxJ,WAAWhxJ,EAAEzH,QAAQ,EAAE85J,WAAW,SAASryJ,GAAG,OAAOvD,EAAEuD,EAAEyzB,EAAEzzB,EAAEzH,QAAQ,GAAGkO,EAAE2nI,MAAM,CAACn4F,OAAO78C,EAAEg1I,MAAM3rH,EAAEwxI,YAAY,SAASj0J,GAAG,OAAO,IAAIgxJ,WAAWhxJ,GAAG6yJ,MAAM,EAAEsB,WAAW,SAASn0J,GAAG,OAAO,IAAIgxJ,WAAWhxJ,EAAE,EAAEqyJ,WAAW,SAASryJ,GAAG,OAAOyzB,EAAEzzB,EAAE,GAAGyG,EAAEwtJ,YAAY,CAACh+G,OAAO,SAASj2C,GAAG,OAAO5G,EAAE,IAAI43J,WAAWhxJ,GAAG,EAAEouI,MAAM,SAASpuI,GAAG,OAAOsrG,EAAE,IAAI0lD,WAAWhxJ,GAAG,IAAIT,MAAMS,EAAE40J,YAAY,EAAEX,YAAYxxI,EAAE0xI,WAAW,SAASn0J,GAAG,OAAO,IAAIgxJ,WAAWhxJ,EAAE,EAAEqyJ,WAAW,SAASryJ,GAAG,OAAOyzB,EAAE,IAAIu9H,WAAWhxJ,GAAG,GAAGyG,EAAE0tJ,WAAW,CAACl+G,OAAO78C,EAAEg1I,MAAM,SAASpuI,GAAG,OAAOsrG,EAAEtrG,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAE07J,YAAY,SAASj0J,GAAG,OAAOA,EAAE6yJ,MAAM,EAAEsB,WAAW1xI,EAAE4vI,WAAW,SAASryJ,GAAG,OAAOyzB,EAAEzzB,EAAE,GAAGyG,EAAE4rJ,WAAW,CAACp8G,OAAO78C,EAAEg1I,MAAM,SAASpuI,GAAG,OAAOsrG,EAAEtrG,EAAE,IAAIT,MAAMS,EAAEzH,QAAQ,EAAE07J,YAAY,SAASj0J,GAAG,OAAOyG,EAAE4rJ,WAAW8B,WAAWn0J,GAAG6yJ,MAAM,EAAEsB,WAAW,SAASn0J,GAAG,OAAOsrG,EAAEtrG,EAAE,IAAIgxJ,WAAWhxJ,EAAEzH,QAAQ,EAAE85J,WAAW5vI,GAAG9sB,EAAEk6J,YAAY,SAAS7vJ,EAAEC,GAAG,GAAGA,IAAIA,EAAE,KAAKD,EAAE,OAAOC,EAAEtK,EAAE+6J,aAAa1wJ,GAAG,IAAIyiB,EAAE9sB,EAAE65J,UAAUvvJ,GAAgB,OAAXwG,EAAEgc,GAAGziB,GAAGC,EAAW,EAAEtK,EAAE65J,UAAU,SAASxvJ,GAAG,MAAM,iBAAiBA,EAAE,SAAS,mBAAmBuG,OAAOgmC,UAAUzlC,SAAS0lC,KAAKxsC,GAAG,QAAQqjE,EAAEgvF,YAAY5+H,EAAEhf,KAAKzU,GAAG,aAAaqjE,EAAE8wF,YAAYn0J,aAAagxJ,WAAW,aAAa3tF,EAAE4wF,aAAaj0J,aAAak0J,YAAY,mBAAc,CAAM,EAAEv+J,EAAE+6J,aAAa,SAAS1wJ,GAA4B,IAAnBqjE,EAAErjE,EAAEuK,eAAqB,MAAM,IAAI7P,MAAMsF,EAAE,oCAAoC,EAAErK,EAAEg7J,iBAAiB,MAAMh7J,EAAEi7J,kBAAkB,EAAEj7J,EAAEk7J,OAAO,SAAS7wJ,GAAG,IAAIC,EAAEtK,EAAE8sB,EAAE,GAAG,IAAI9sB,EAAE,EAAEA,GAAGqK,GAAG,IAAIzH,OAAO5C,IAAsB8sB,GAAG,QAArBxiB,EAAED,EAAEyjJ,WAAW9tJ,IAAe,GAAG,IAAI,IAAIsK,EAAE6G,SAAS,IAAIgwC,cAAc,OAAOr0B,CAAC,EAAE9sB,EAAEm7J,gBAAgB,SAAS9wJ,GAAG,IAAI,IAAIC,KAAKwF,EAAE,GAAGA,EAAEg8D,eAAexhE,IAAIwF,EAAExF,GAAGivJ,QAAQlvJ,EAAE,OAAOyF,EAAExF,GAAG,OAAO,IAAI,EAAEtK,EAAEo7J,SAAS,SAAS/wJ,GAAG,MAAM,oBAAoBuG,OAAOgmC,UAAUzlC,SAAS0lC,KAAKxsC,EAAE,EAAErK,EAAEG,OAAO,WAAW,IAAIkK,EAAEC,EAAEtK,EAAE,CAAC,EAAE,IAAIqK,EAAE,EAAEA,EAAEmF,UAAU5M,OAAOyH,IAAI,IAAIC,KAAKkF,UAAUnF,GAAGmF,UAAUnF,GAAGyhE,eAAexhE,SAAI,IAAoBtK,EAAEsK,KAAKtK,EAAEsK,GAAGkF,UAAUnF,GAAGC,IAAI,OAAOtK,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,eAAe,GAAG,YAAY,KAAK,GAAG,CAAC,SAASqK,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,EAAEC,GAAG7N,KAAKs4I,MAAM,GAAGt4I,KAAKyiK,YAAY50J,EAAED,GAAG5N,KAAK8yB,KAAKllB,EAAE,CAAC,IAAIvD,EAAEuD,EAAE,kBAAkB5G,EAAE4G,EAAE,sBAAsBsrG,EAAEtrG,EAAE,sBAAsBqjE,EAAErjE,EAAE,iBAAiByF,EAAEzF,EAAE,WAAWyzB,EAAEzzB,EAAE,eAAeyG,EAAEzG,EAAE,cAAc0G,EAAE1G,EAAE,aAAaA,EAAE,YAAYyiB,EAAE8pB,UAAU,CAACuoH,eAAe,SAAS90J,GAAG,IAAIC,EAAE7N,KAAKizE,OAAOuqF,WAAW,GAAG,GAAG3vJ,IAAID,EAAE,MAAM,IAAItF,MAAM,gDAAgD+K,EAAEorJ,OAAO5wJ,GAAG,cAAcwF,EAAEorJ,OAAO7wJ,GAAG,IAAI,EAAE+0J,YAAY,SAAS/0J,EAAEC,GAAG,IAAItK,EAAEvD,KAAKizE,OAAOlnE,MAAM/L,KAAKizE,OAAOqqF,SAAS1vJ,GAAG,IAAgCvD,EAA1BrK,KAAKizE,OAAOuqF,WAAW,KAAS3vJ,EAAE,OAAO7N,KAAKizE,OAAOqqF,SAAS/5J,GAAG8G,CAAC,EAAEu4J,sBAAsB,WAAW5iK,KAAK6iK,WAAW7iK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAK8iK,wBAAwB9iK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAK+iK,4BAA4B/iK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKgjK,kBAAkBhjK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKijK,eAAejjK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKkjK,iBAAiBljK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKmjK,iBAAiBnjK,KAAKizE,OAAOsqF,QAAQ,GAAG,IAAI3vJ,EAAE5N,KAAKizE,OAAOipF,SAASl8J,KAAKmjK,kBAAkBt1J,EAAEyG,EAAEytJ,WAAW,aAAa,QAAQx+J,EAAE8P,EAAEoqJ,YAAY5vJ,EAAED,GAAG5N,KAAK6/J,WAAW7/J,KAAKyiK,YAAYjD,eAAej8J,EAAE,EAAE6/J,2BAA2B,WAAWpjK,KAAKqjK,sBAAsBrjK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKsjK,cAActjK,KAAKizE,OAAOuqF,WAAW,GAAGx9J,KAAKujK,cAAcvjK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAK6iK,WAAW7iK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAK8iK,wBAAwB9iK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAK+iK,4BAA4B/iK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKgjK,kBAAkBhjK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKijK,eAAejjK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKkjK,iBAAiBljK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAKwjK,oBAAoB,CAAC,EAAE,IAAI,IAAI51J,EAAEC,EAAEtK,EAAE8sB,EAAErwB,KAAKqjK,sBAAsB,GAAK,EAAIhzI,GAAGziB,EAAE5N,KAAKizE,OAAOsqF,QAAQ,GAAG1vJ,EAAE7N,KAAKizE,OAAOsqF,QAAQ,GAAGh6J,EAAEvD,KAAKizE,OAAOuqF,WAAW3vJ,GAAG7N,KAAKwjK,oBAAoB51J,GAAG,CAAChN,GAAGgN,EAAEzH,OAAO0H,EAAElL,MAAMY,EAAE,EAAEkgK,kCAAkC,WAAW,GAAGzjK,KAAK0jK,6BAA6B1jK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAK2jK,mCAAmC3jK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAK4jK,WAAW5jK,KAAKizE,OAAOsqF,QAAQ,GAAGv9J,KAAK4jK,WAAW,EAAE,MAAM,IAAIt7J,MAAM,sCAAsC,EAAEu7J,eAAe,WAAW,IAAIj2J,EAAEC,EAAE,IAAID,EAAE,EAAEA,EAAE5N,KAAKs4I,MAAMnyI,OAAOyH,IAAIC,EAAE7N,KAAKs4I,MAAM1qI,GAAG5N,KAAKizE,OAAOqqF,SAASzvJ,EAAEi2J,mBAAmB9jK,KAAK0iK,eAAerhI,EAAE2/H,mBAAmBnzJ,EAAEk2J,cAAc/jK,KAAKizE,QAAQplE,EAAEm2J,aAAan2J,EAAEo2J,mBAAmB,EAAEC,eAAe,WAAW,IAAIt2J,EAAE,IAAI5N,KAAKizE,OAAOqqF,SAASt9J,KAAKkjK,kBAAkBljK,KAAKizE,OAAOuqF,WAAW,KAAKn8H,EAAE6/H,sBAAqBtzJ,EAAE,IAAIyG,EAAE,CAAC8vJ,MAAMnkK,KAAKmkK,OAAOnkK,KAAKyiK,cAAe2B,gBAAgBpkK,KAAKizE,QAAQjzE,KAAKs4I,MAAMh0I,KAAKsJ,GAAG,GAAG5N,KAAKgjK,oBAAoBhjK,KAAKs4I,MAAMnyI,QAAQ,IAAInG,KAAKgjK,mBAAmB,IAAIhjK,KAAKs4I,MAAMnyI,OAAO,MAAM,IAAImC,MAAM,kCAAkCtI,KAAKgjK,kBAAkB,gCAAgChjK,KAAKs4I,MAAMnyI,OAAO,EAAEk+J,iBAAiB,WAAW,IAAIz2J,EAAE5N,KAAKizE,OAAOgpF,qBAAqB56H,EAAEkgI,uBAAuB,GAAG3zJ,EAAE,EAAkD,MAAxC5N,KAAK2iK,YAAY,EAAEthI,EAAE2/H,mBAA+K,IAAI14J,MAAM,uDAA9J,IAAIA,MAAM,0IAA2MtI,KAAKizE,OAAOqqF,SAAS1vJ,GAAG,IAAIrK,EAAEqK,EAAE,GAAG5N,KAAK0iK,eAAerhI,EAAEkgI,uBAAuBvhK,KAAK4iK,wBAAwB5iK,KAAK6iK,aAAaxvJ,EAAEkrJ,kBAAkBv+J,KAAK8iK,0BAA0BzvJ,EAAEkrJ,kBAAkBv+J,KAAK+iK,8BAA8B1vJ,EAAEkrJ,kBAAkBv+J,KAAKgjK,oBAAoB3vJ,EAAEkrJ,kBAAkBv+J,KAAKijK,iBAAiB5vJ,EAAEmrJ,kBAAkBx+J,KAAKkjK,mBAAmB7vJ,EAAEmrJ,iBAAiB,CAAC,GAAGx+J,KAAKmkK,OAAM,GAAGv2J,EAAE5N,KAAKizE,OAAOgpF,qBAAqB56H,EAAEqgI,kCAAmC,EAAE,MAAM,IAAIp5J,MAAM,yEAAyE,GAAGtI,KAAKizE,OAAOqqF,SAAS1vJ,GAAG5N,KAAK0iK,eAAerhI,EAAEqgI,iCAAiC1hK,KAAKyjK,qCAAqCzjK,KAAK2iK,YAAY3iK,KAAK2jK,mCAAmCtiI,EAAEsgI,+BAA+B3hK,KAAK2jK,mCAAmC3jK,KAAKizE,OAAOgpF,qBAAqB56H,EAAEsgI,6BAA6B3hK,KAAK2jK,mCAAmC,GAAG,MAAM,IAAIr7J,MAAM,iEAAiEtI,KAAKizE,OAAOqqF,SAASt9J,KAAK2jK,oCAAoC3jK,KAAK0iK,eAAerhI,EAAEsgI,6BAA6B3hK,KAAKojK,4BAA4B,CAAC,IAAI/yI,EAAErwB,KAAKkjK,iBAAiBljK,KAAKijK,eAAejjK,KAAKmkK,QAAQ9zI,GAAG,GAAGA,GAAG,GAAGrwB,KAAKqjK,uBAAuB,IAAIh5J,EAAE9G,EAAE8sB,EAAE,GAAGhmB,EAAE,EAAErK,KAAK2iK,YAAYp/J,EAAE89B,EAAE6/H,uBAAuBlhK,KAAKizE,OAAO8oF,KAAK1xJ,QAAQ,GAAGA,EAAE,EAAE,MAAM,IAAI/B,MAAM,0BAA0B/B,KAAK06C,IAAI52C,GAAG,UAAU,EAAEi6J,cAAc,SAAS12J,GAAG,IAAIC,EAAEwF,EAAE+pJ,UAAUxvJ,GAAG,GAAGyF,EAAEirJ,aAAazwJ,GAAG,WAAWA,GAAGyG,EAAEytJ,WAAW,GAAG,eAAel0J,EAAE7N,KAAKizE,OAAO,IAAIjsE,EAAE4G,QAAQ,GAAG0G,EAAEytJ,WAAW/hK,KAAKizE,OAAO,IAAIimC,EAAE7lG,EAAEoqJ,YAAY,aAAa7vJ,QAAQ,CAAC,IAAI0G,EAAE0nI,MAAM,MAAM,IAAI1zI,MAAM,uCAAuCuF,EAAE,KAAK7N,KAAKizE,OAAO,IAAIhC,EAAE59D,EAAEoqJ,YAAY,QAAQ7vJ,GAAG,MAAM5N,KAAKizE,OAAO,IAAI5oE,EAAEuD,EAAE5N,KAAKyiK,YAAYlD,sBAAsB,EAAEzsI,KAAK,SAASllB,GAAG5N,KAAKskK,cAAc12J,GAAG5N,KAAKqkK,mBAAmBrkK,KAAKkkK,iBAAiBlkK,KAAK6jK,gBAAgB,GAAGh2J,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,gBAAgB,EAAE,qBAAqB,GAAG,WAAW,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,UAAU,GAAG,aAAa,KAAK,GAAG,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,EAAEC,GAAG7N,KAAKmC,QAAQyL,EAAE5N,KAAKyiK,YAAY50J,CAAC,CAAC,IAAIxD,EAAEuD,EAAE,kBAAkB5G,EAAE4G,EAAE,WAAWsrG,EAAEtrG,EAAE,sBAAsBqjE,EAAErjE,EAAE,YAAYyF,EAAEzF,EAAE,aAAqByiB,EAAE8pB,UAAU,CAACoqH,YAAY,WAAW,OAAO,IAAK,EAAEvkK,KAAKwkK,QAAQ,EAAEC,QAAQ,WAAW,OAAO,OAAQ,KAAKzkK,KAAKwkK,QAAQ,EAAEE,yBAAyB,SAAS92J,EAAEC,EAAEtK,GAAG,OAAO,WAAW,IAAI8sB,EAAEziB,EAAE7B,MAAM6B,EAAE0vJ,SAASzvJ,GAAG,IAAIxD,EAAEuD,EAAEsuJ,SAAS34J,GAAG,OAAOqK,EAAE0vJ,SAASjtI,GAAGhmB,CAAC,CAAC,EAAEs6J,eAAe,SAAS/2J,EAAEC,EAAEtK,EAAE8sB,EAAEhmB,GAAG,OAAO,WAAW,IAAIuD,EAAE5G,EAAEy2J,YAAYptI,EAAE6sI,oBAAoBl9J,KAAK48J,wBAAwB/uJ,EAAEwiB,EAAE2sI,WAAWpvJ,GAAG,GAAGC,EAAE1H,SAASkE,EAAE,MAAM,IAAI/B,MAAM,yCAAyC,OAAOuF,CAAC,CAAC,EAAEk2J,cAAc,SAASn2J,GAAG,IAAIC,EAAEtK,EAAE,GAAGqK,EAAEykB,KAAK,IAAIryB,KAAK4kK,eAAeh3J,EAAE2vJ,QAAQ,GAAGh6J,EAAEqK,EAAE2vJ,QAAQ,GAAGv9J,KAAKkyG,SAAStkG,EAAEsuJ,SAASl8J,KAAK4kK,gBAAgBh3J,EAAEykB,KAAK9uB,IAAyB,GAAtBvD,KAAKs8J,iBAA4C,GAAxBt8J,KAAKu8J,iBAAqB,MAAM,IAAIj0J,MAAM,qIAAqI,GAA+C,QAA5CuF,EAAE7G,EAAE03J,gBAAgB1+J,KAAKy8J,oBAA4B,MAAM,IAAIn0J,MAAM,+BAA+BtB,EAAEy3J,OAAOz+J,KAAKy8J,mBAAmB,0BAA0Bz1J,EAAEy2J,YAAY,SAASz9J,KAAKkyG,UAAU,KAAK,GAAGlyG,KAAK2/J,aAAa,IAAIzmD,EAAEl5G,KAAK2/J,aAAarD,eAAet8J,KAAKs8J,eAAet8J,KAAK2/J,aAAapD,iBAAiBv8J,KAAKu8J,iBAAiBv8J,KAAK2/J,aAAanD,MAAMx8J,KAAKw8J,MAAMx8J,KAAK2/J,aAAalD,kBAAkBz8J,KAAKy8J,kBAAkBz8J,KAAK2/J,aAAa/C,qBAAqB58J,KAAK0kK,yBAAyB92J,EAAEA,EAAE7B,MAAM/L,KAAKs8J,eAAezuJ,GAAG7N,KAAK2/J,aAAahD,WAAW38J,KAAK2kK,eAAe/2J,EAAEA,EAAE7B,MAAM/L,KAAKs8J,eAAezuJ,EAAE7N,KAAKu8J,kBAAkBv8J,KAAKyiK,YAAYnD,aAAat/J,KAAK2/J,aAAa34J,EAAEy2J,YAAY,SAASz9J,KAAK2/J,aAAahD,cAAc1rF,EAAEurF,MAAMx8J,KAAK2/J,gBAAgB3/J,KAAKw8J,OAAO,MAAM,IAAIl0J,MAAM,iCAC5x+B,EAAE87J,gBAAgB,SAASx2J,GAAG,GAAG5N,KAAKsjK,cAAc11J,EAAE2vJ,QAAQ,GAAGv9J,KAAKujK,cAAc31J,EAAE2vJ,QAAQ,GAAGv9J,KAAKwkK,QAAQ52J,EAAE2vJ,QAAQ,GAAGv9J,KAAKy8J,kBAAkB7uJ,EAAE4vJ,WAAW,GAAGx9J,KAAKygB,KAAK7S,EAAE8vJ,WAAW19J,KAAKw8J,MAAM5uJ,EAAE2vJ,QAAQ,GAAGv9J,KAAKs8J,eAAe1uJ,EAAE2vJ,QAAQ,GAAGv9J,KAAKu8J,iBAAiB3uJ,EAAE2vJ,QAAQ,GAAGv9J,KAAK4kK,eAAeh3J,EAAE2vJ,QAAQ,GAAGv9J,KAAK6kK,kBAAkBj3J,EAAE2vJ,QAAQ,GAAGv9J,KAAK8kK,kBAAkBl3J,EAAE2vJ,QAAQ,GAAGv9J,KAAK+kK,gBAAgBn3J,EAAE2vJ,QAAQ,GAAGv9J,KAAKglK,uBAAuBp3J,EAAE2vJ,QAAQ,GAAGv9J,KAAKilK,uBAAuBr3J,EAAE2vJ,QAAQ,GAAGv9J,KAAK8jK,kBAAkBl2J,EAAE2vJ,QAAQ,GAAGv9J,KAAKukK,cAAc,MAAM,IAAIj8J,MAAM,mCAAmCtI,KAAKkyG,SAAStkG,EAAEsuJ,SAASl8J,KAAK4kK,gBAAgB5kK,KAAKklK,gBAAgBt3J,GAAG5N,KAAKmlK,qBAAqBv3J,GAAG5N,KAAKolK,YAAYx3J,EAAEsuJ,SAASl8J,KAAK8kK,kBAAkB,EAAEb,kBAAkB,WAAWjkK,KAAK+9J,gBAAgB,KAAK/9J,KAAKg+J,eAAe,KAAK,IAAIpwJ,EAAE5N,KAAKsjK,eAAe,EAAEtjK,KAAK2K,OAAO,GAAG3K,KAAKilK,wBADm05B,IAC3y5Br3J,IAAQ5N,KAAKg+J,eAAe,GAAGh+J,KAAKilK,wBAD2w5B,IACnv5Br3J,IAAQ5N,KAAK+9J,gBAAgB/9J,KAAKilK,wBAAwB,GAAG,OAAOjlK,KAAK2K,KAAK,MAAM3K,KAAK0/J,YAAYxsJ,OAAO,KAAKlT,KAAK2K,KAAI,EAAG,EAAEw6J,qBAAqB,SAASv3J,GAAG,GAAG5N,KAAKqlK,YAAY,GAAG,CAAC,IAAIx3J,EAAE,IAAIxD,EAAErK,KAAKqlK,YAAY,GAAG1iK,OAAO3C,KAAKu8J,mBAAmBv1J,EAAEw3J,mBAAmBx+J,KAAKu8J,iBAAiB1uJ,EAAE0vJ,QAAQ,IAAIv9J,KAAKs8J,iBAAiBt1J,EAAEw3J,mBAAmBx+J,KAAKs8J,eAAezuJ,EAAE0vJ,QAAQ,IAAIv9J,KAAK8jK,oBAAoB98J,EAAEw3J,mBAAmBx+J,KAAK8jK,kBAAkBj2J,EAAE0vJ,QAAQ,IAAIv9J,KAAK+kK,kBAAkB/9J,EAAEw3J,mBAAmBx+J,KAAK+kK,gBAAgBl3J,EAAE0vJ,QAAQ,GAAG,CAAC,EAAE2H,gBAAgB,SAASt3J,GAAG,IAAIC,EAAEtK,EAAE8sB,EAAEhmB,EAAEuD,EAAE7B,MAAM,IAAI/L,KAAKqlK,YAAYrlK,KAAKqlK,aAAa,CAAC,EAAEz3J,EAAE7B,MAAM1B,EAAErK,KAAK6kK,mBAAmBh3J,EAAED,EAAE2vJ,QAAQ,GAAGh6J,EAAEqK,EAAE2vJ,QAAQ,GAAGltI,EAAEziB,EAAE4vJ,WAAWj6J,GAAGvD,KAAKqlK,YAAYx3J,GAAG,CAACjN,GAAGiN,EAAE1H,OAAO5C,EAAEZ,MAAM0tB,EAAE,EAAE2zI,WAAW,WAAW,IAAIp2J,EAAEyF,EAAE0uJ,WAAW,aAAa,QAAQ,GAAG/hK,KAAKykK,UAAUzkK,KAAK0/J,YAAYzuF,EAAEwuF,WAAWz/J,KAAKkyG,UAAUlyG,KAAK4/J,eAAe3uF,EAAEwuF,WAAWz/J,KAAKolK,iBAAiB,CAAC,IAAIv3J,EAAE7N,KAAKslK,4BAA4B,GAAG,OAAOz3J,EAAE7N,KAAK0/J,YAAY7xJ,MAAM,CAAC,IAAItK,EAAEyD,EAAEy2J,YAAY7vJ,EAAE5N,KAAKkyG,UAAUlyG,KAAK0/J,YAAY1/J,KAAKyiK,YAAYjD,eAAej8J,EAAE,CAAC,IAAI8sB,EAAErwB,KAAKulK,+BAA+B,GAAG,OAAOl1I,EAAErwB,KAAK4/J,eAAevvI,MAAM,CAAC,IAAIhmB,EAAErD,EAAEy2J,YAAY7vJ,EAAE5N,KAAKolK,aAAaplK,KAAK4/J,eAAe5/J,KAAKyiK,YAAYjD,eAAen1J,EAAE,CAAC,CAAC,EAAEi7J,0BAA0B,WAAW,IAAI13J,EAAE5N,KAAKqlK,YAAY,OAAO,GAAGz3J,EAAE,CAAC,IAAIC,EAAE,IAAIxD,EAAEuD,EAAEjL,OAAO,OAAO,IAAIkL,EAAE0vJ,QAAQ,IAAQtsF,EAAEurF,MAAMx8J,KAAKkyG,YAAYrkG,EAAE0vJ,QAAQ,GAAxC,KAAgDtsF,EAAEwuF,WAAW5xJ,EAAE2vJ,WAAW5vJ,EAAEzH,OAAO,GAAG,CAAC,OAAO,IAAI,EAAEo/J,6BAA6B,WAAW,IAAI33J,EAAE5N,KAAKqlK,YAAY,OAAO,GAAGz3J,EAAE,CAAC,IAAIC,EAAE,IAAIxD,EAAEuD,EAAEjL,OAAO,OAAO,IAAIkL,EAAE0vJ,QAAQ,IAAQtsF,EAAEurF,MAAMx8J,KAAKolK,eAAev3J,EAAE0vJ,QAAQ,GAA3C,KAAmDtsF,EAAEwuF,WAAW5xJ,EAAE2vJ,WAAW5vJ,EAAEzH,OAAO,GAAG,CAAC,OAAO,IAAI,GAAG0H,EAAEnO,QAAQ2wB,CAAC,EAAE,CAAC,qBAAqB,EAAE,WAAW,GAAG,iBAAiB,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAa,IAA2G0tE,EAAE,CAAC,GAAE5gD,EAA1GziB,EAAE,sBAAsB6tC,QAAoFw1B,EAA3ErjE,EAAE,iBAAmBA,EAAE,iBAAmBA,EAAE,yBAAwCC,EAAEnO,QAAQuxE,CAAC,EAAE,CAAC,gBAAgB,GAAG,gBAAgB,GAAG,qBAAqB,GAAG,uBAAuB,KAAK,GAAG,CAAC,SAASrjE,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAG,KAAK5N,gBAAgBqwB,GAAG,OAAO,IAAIA,EAAEziB,GAAG5N,KAAKmC,QAAQkR,EAAEooC,OAAO,CAACujH,MAAMpyJ,EAAEoK,OAAOwgE,EAAEguF,UAAU,MAAMC,WAAW,GAAGC,SAAS,EAAEC,SAAShpI,EAAE2K,GAAG,IAAI15B,GAAG,CAAC,GAAG,IAAIC,EAAE7N,KAAKmC,QAAQ0L,EAAE8Q,KAAK9Q,EAAE43J,WAAW,EAAE53J,EAAE43J,YAAY53J,EAAE43J,WAAW53J,EAAE+3J,MAAM/3J,EAAE43J,WAAW,GAAG53J,EAAE43J,WAAW,KAAK53J,EAAE43J,YAAY,IAAIzlK,KAAKmI,IAAI,EAAEnI,KAAK+e,IAAI,GAAG/e,KAAK6lK,OAAM,EAAG7lK,KAAKglD,OAAO,GAAGhlD,KAAK8lK,KAAK,IAAIxxJ,EAAEtU,KAAK8lK,KAAKC,UAAU,EAAE,IAAIxiK,EAAE0tE,EAAE+0F,aAAahmK,KAAK8lK,KAAKj4J,EAAEmxJ,MAAMnxJ,EAAEmJ,OAAOnJ,EAAE43J,WAAW53J,EAAE63J,SAAS73J,EAAE83J,UAAU,GAAGpiK,IAAIue,EAAE,MAAM,IAAIxZ,MAAM+L,EAAE9Q,IAAI,GAAGsK,EAAEiiE,QAAQmB,EAAEg1F,iBAAiBjmK,KAAK8lK,KAAKj4J,EAAEiiE,QAAQjiE,EAAEq4J,WAAW,CAAC,IAAI77J,EAAE,GAAGA,EAAE,iBAAiBwD,EAAEq4J,WAAW7kI,EAAE8kI,WAAWt4J,EAAEq4J,YAAY,yBAAyB9nC,EAAEhkF,KAAKvsC,EAAEq4J,YAAY,IAAItH,WAAW/wJ,EAAEq4J,YAAYr4J,EAAEq4J,YAAW3iK,EAAE0tE,EAAEm1F,qBAAqBpmK,KAAK8lK,KAAKz7J,MAAOyX,EAAE,MAAM,IAAIxZ,MAAM+L,EAAE9Q,IAAIvD,KAAKqmK,WAAU,CAAE,CAAC,CAAC,SAASh8J,EAAEuD,EAAEC,GAAG,IAAItK,EAAE,IAAI8sB,EAAExiB,GAAG,GAAGtK,EAAEe,KAAKsJ,GAAE,GAAIrK,EAAE4E,IAAI,MAAM5E,EAAEwb,IAAI,OAAOxb,EAAEuK,MAAM,CAAgG,IAAImjE,EAAErjE,EAAE,kBAAkByF,EAAEzF,EAAE,kBAAkByzB,EAAEzzB,EAAE,mBAAmByG,EAAEzG,EAAE,mBAAmB0G,EAAE1G,EAAE,kBAAkBwwH,EAAEjqH,OAAOgmC,UAAUzlC,SAAiBoN,EAAE,EAAUlV,GAAG,EAAE+vB,EAAE,EAAE66C,EAAE,EAAEnnD,EAAE8pB,UAAU71C,KAAK,SAASsJ,EAAEC,GAAG,IAAItK,EAAE8sB,EAAEhmB,EAAErK,KAAK8lK,KAAK9+J,EAAEhH,KAAKmC,QAAQqjK,UAAU,GAAGxlK,KAAK6lK,MAAM,OAAM,EAAGx1I,EAAExiB,MAAMA,EAAEA,GAAM,IAAJA,EAA1I,EAAJ,EAAyJ,iBAAiBD,EAAEvD,EAAEi8J,MAAMjlI,EAAE8kI,WAAWv4J,GAAG,yBAAyBwwH,EAAEhkF,KAAKxsC,GAAGvD,EAAEi8J,MAAM,IAAI1H,WAAWhxJ,GAAGvD,EAAEi8J,MAAM14J,EAAEvD,EAAEk8J,QAAQ,EAAEl8J,EAAEm8J,SAASn8J,EAAEi8J,MAAMngK,OAAO,EAAE,CAAC,GAAG,IAAIkE,EAAE07J,YAAY17J,EAAEo8J,OAAO,IAAIpzJ,EAAEqzJ,KAAK1/J,GAAGqD,EAAEs8J,SAAS,EAAEt8J,EAAE07J,UAAU/+J,GAA7W,KAAgXzD,EAAE0tE,EAAE21F,QAAQv8J,EAAEgmB,KAAU9sB,IAAIue,EAAE,OAAO9hB,KAAK6mK,MAAMtjK,GAAGvD,KAAK6lK,OAAM,GAAG,EAAG,IAAIx7J,EAAE07J,YAAY,IAAI17J,EAAEm8J,UAApd,IAA8dn2I,GAAld,IAAydA,KAAS,WAAWrwB,KAAKmC,QAAQmlC,GAAGtnC,KAAK8mK,OAAOzlI,EAAE0lI,cAAc1zJ,EAAE2zJ,UAAU38J,EAAEo8J,OAAOp8J,EAAEs8J,YAAY3mK,KAAK8mK,OAAOzzJ,EAAE2zJ,UAAU38J,EAAEo8J,OAAOp8J,EAAEs8J,WAAW,QAAQt8J,EAAEm8J,SAAS,GAAG,IAAIn8J,EAAE07J,YAA1oB,IAAspBxiK,GAAO,OAArqB,IAA4qB8sB,GAAO9sB,EAAE0tE,EAAEg2F,WAAWjnK,KAAK8lK,MAAM9lK,KAAK6mK,MAAMtjK,GAAGvD,KAAK6lK,OAAM,EAAGtiK,IAAIue,GAAjuB,IAAouBuO,IAAQrwB,KAAK6mK,MAAM/kJ,GAAGzX,EAAE07J,UAAU,GAAE,EAAG,EAAE11I,EAAE8pB,UAAU2sH,OAAO,SAASl5J,GAAG5N,KAAKglD,OAAO1gD,KAAKsJ,EAAE,EAAEyiB,EAAE8pB,UAAU0sH,MAAM,SAASj5J,GAAGA,IAAIkU,IAAI,WAAW9hB,KAAKmC,QAAQmlC,GAAGtnC,KAAK8N,OAAO9N,KAAKglD,OAAO12C,KAAK,IAAItO,KAAK8N,OAAOuF,EAAE6zJ,cAAclnK,KAAKglD,SAAShlD,KAAKglD,OAAO,GAAGhlD,KAAKmI,IAAIyF,EAAE5N,KAAK+e,IAAI/e,KAAK8lK,KAAK/mJ,GAAG,EAAExb,EAAE4jK,QAAQ92I,EAAE9sB,EAAEqjK,QAAQv8J,EAAE9G,EAAEw7J,WAA1xC,SAAWnxJ,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAI8Q,KAAI,EAAGtU,EAAEuD,EAAEC,EAAE,EAAyvCtK,EAAEqiK,KAA1vC,SAAWh4J,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAI+3J,MAAK,EAAGv7J,EAAEuD,EAAEC,EAAE,CAAitC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAG,KAAK5N,gBAAgBqwB,GAAG,OAAO,IAAIA,EAAEziB,GAAG5N,KAAKmC,QAAQ8uE,EAAEx1B,OAAO,CAAC+pH,UAAU,MAAMC,WAAW,EAAEn+H,GAAG,IAAI15B,GAAG,CAAC,GAAG,IAAIC,EAAE7N,KAAKmC,QAAQ0L,EAAE8Q,KAAK9Q,EAAE43J,YAAY,GAAG53J,EAAE43J,WAAW,KAAK53J,EAAE43J,YAAY53J,EAAE43J,WAAW,IAAI53J,EAAE43J,aAAa53J,EAAE43J,YAAY,OAAO53J,EAAE43J,YAAY,GAAG53J,EAAE43J,WAAW,KAAK73J,GAAGA,EAAE63J,aAAa53J,EAAE43J,YAAY,IAAI53J,EAAE43J,WAAW,IAAI53J,EAAE43J,WAAW,IAAI,IAAK,GAAG53J,EAAE43J,cAAc53J,EAAE43J,YAAY,IAAIzlK,KAAKmI,IAAI,EAAEnI,KAAK+e,IAAI,GAAG/e,KAAK6lK,OAAM,EAAG7lK,KAAKglD,OAAO,GAAGhlD,KAAK8lK,KAAK,IAAIxxJ,EAAEtU,KAAK8lK,KAAKC,UAAU,EAAE,IAAIxiK,EAAE21G,EAAEkuD,aAAapnK,KAAK8lK,KAAKj4J,EAAE43J,YAAY,GAAGliK,IAAI89B,EAAEgmI,KAAK,MAAM,IAAI/+J,MAAM+L,EAAE9Q,IAAIvD,KAAK8vE,OAAO,IAAIsuD,EAAEllB,EAAEouD,iBAAiBtnK,KAAK8lK,KAAK9lK,KAAK8vE,OAAO,CAAC,SAASzlE,EAAEuD,EAAEC,GAAG,IAAItK,EAAE,IAAI8sB,EAAExiB,GAAG,GAAGtK,EAAEe,KAAKsJ,GAAE,GAAIrK,EAAE4E,IAAI,MAAM5E,EAAEwb,IAAI,OAAOxb,EAAEuK,MAAM,CAAgD,IAAIorG,EAAEtrG,EAAE,kBAAkBqjE,EAAErjE,EAAE,kBAAkByF,EAAEzF,EAAE,mBAAmByzB,EAAEzzB,EAAE,oBAAoByG,EAAEzG,EAAE,mBAAmB0G,EAAE1G,EAAE,kBAAkBwwH,EAAExwH,EAAE,mBAAmBuyC,EAAEhsC,OAAOgmC,UAAUzlC,SAAS2b,EAAE8pB,UAAU71C,KAAK,SAASsJ,EAAEC,GAAG,IAAItK,EAAE8sB,EAAEhmB,EAAErD,EAAEqN,EAAEC,EAAE8pH,EAAEp+H,KAAK8lK,KAAKhgJ,EAAE9lB,KAAKmC,QAAQqjK,UAAU1jJ,EAAE9hB,KAAKmC,QAAQ+jK,WAAWt+I,GAAE,EAAG,GAAG5nB,KAAK6lK,MAAM,OAAM,EAAGx1I,EAAExiB,MAAMA,EAAEA,GAAM,IAAJA,EAAOwzB,EAAEkmI,SAASlmI,EAAEmmI,WAAW,iBAAiB55J,EAAEwwH,EAAEkoC,MAAMjzJ,EAAEo0J,cAAc75J,GAAG,yBAAyBuyC,EAAE/F,KAAKxsC,GAAGwwH,EAAEkoC,MAAM,IAAI1H,WAAWhxJ,GAAGwwH,EAAEkoC,MAAM14J,EAAEwwH,EAAEmoC,QAAQ,EAAEnoC,EAAEooC,SAASpoC,EAAEkoC,MAAMngK,OAAO,EAAE,CAAC,GAAG,IAAIi4H,EAAE2nC,YAAY3nC,EAAEqoC,OAAO,IAAIx1F,EAAEy1F,KAAK5gJ,GAAGs4G,EAAEuoC,SAAS,EAAEvoC,EAAE2nC,UAAUjgJ,IAAGviB,EAAE21G,EAAEwuD,QAAQtpC,EAAE/8F,EAAEmmI,eAAgBnmI,EAAEsmI,aAAa7lJ,IAAIxN,EAAE,iBAAiBwN,EAAEzO,EAAE8yJ,WAAWrkJ,GAAG,yBAAyBq+B,EAAE/F,KAAKt4B,GAAG,IAAI88I,WAAW98I,GAAGA,EAAEve,EAAE21G,EAAE0uD,qBAAqB5nK,KAAK8lK,KAAKxxJ,IAAI/Q,IAAI89B,EAAEwmI,cAAiB,IAAJjgJ,IAASrkB,EAAE89B,EAAEgmI,KAAKz/I,GAAE,GAAIrkB,IAAI89B,EAAEymI,cAAcvkK,IAAI89B,EAAEgmI,KAAK,OAAOrnK,KAAK6mK,MAAMtjK,GAAGvD,KAAK6lK,OAAM,GAAG,EAAGznC,EAAEuoC,WAAW,IAAIvoC,EAAE2nC,WAAWxiK,IAAI89B,EAAEymI,eAAe,IAAI1pC,EAAEooC,UAAUn2I,IAAIgR,EAAEkmI,UAAUl3I,IAAIgR,EAAE0mI,gBAAgB,WAAW/nK,KAAKmC,QAAQmlC,IAAIj9B,EAAEgJ,EAAE20J,WAAW5pC,EAAEqoC,OAAOroC,EAAEuoC,UAAU3/J,EAAEo3H,EAAEuoC,SAASt8J,EAAEgK,EAAEhB,EAAE40J,WAAW7pC,EAAEqoC,OAAOp8J,GAAG+zH,EAAEuoC,SAAS3/J,EAAEo3H,EAAE2nC,UAAUjgJ,EAAE9e,EAAEA,GAAGiqE,EAAEi3F,SAAS9pC,EAAEqoC,OAAOroC,EAAEqoC,OAAOp8J,EAAErD,EAAE,GAAGhH,KAAK8mK,OAAOzyJ,IAAIrU,KAAK8mK,OAAO71F,EAAE+1F,UAAU5oC,EAAEqoC,OAAOroC,EAAEuoC,aAAa,IAAIvoC,EAAEooC,UAAU,IAAIpoC,EAAE2nC,YAAYn+I,GAAE,EAAG,QAAQw2G,EAAEooC,SAAS,GAAG,IAAIpoC,EAAE2nC,YAAYxiK,IAAI89B,EAAEymI,cAAc,OAAOvkK,IAAI89B,EAAEymI,eAAez3I,EAAEgR,EAAEkmI,UAAUl3I,IAAIgR,EAAEkmI,UAAUhkK,EAAE21G,EAAEivD,WAAWnoK,KAAK8lK,MAAM9lK,KAAK6mK,MAAMtjK,GAAGvD,KAAK6lK,OAAM,EAAGtiK,IAAI89B,EAAEgmI,MAAMh3I,IAAIgR,EAAE0mI,eAAe/nK,KAAK6mK,MAAMxlI,EAAEgmI,MAAMjpC,EAAE2nC,UAAU,GAAE,EAAG,EAAE11I,EAAE8pB,UAAU2sH,OAAO,SAASl5J,GAAG5N,KAAKglD,OAAO1gD,KAAKsJ,EAAE,EAAEyiB,EAAE8pB,UAAU0sH,MAAM,SAASj5J,GAAGA,IAAIyzB,EAAEgmI,OAAO,WAAWrnK,KAAKmC,QAAQmlC,GAAGtnC,KAAK8N,OAAO9N,KAAKglD,OAAO12C,KAAK,IAAItO,KAAK8N,OAAOmjE,EAAEi2F,cAAclnK,KAAKglD,SAAShlD,KAAKglD,OAAO,GAAGhlD,KAAKmI,IAAIyF,EAAE5N,KAAK+e,IAAI/e,KAAK8lK,KAAK/mJ,GAAG,EAAExb,EAAE6kK,QAAQ/3I,EAAE9sB,EAAEmkK,QAAQr9J,EAAE9G,EAAE07J,WAAjzD,SAAWrxJ,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAI8Q,KAAI,EAAGtU,EAAEuD,EAAEC,EAAE,EAAgxDtK,EAAE8kK,OAAOh+J,CAAC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASuD,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAE,oBAAoBuuI,YAAY,oBAAoBC,aAAa,oBAAoByJ,WAAW/kK,EAAEk4C,OAAO,SAAS7tC,GAAG,IAAI,IAAIC,EAAEV,MAAMgtC,UAAUjnC,MAAMknC,KAAKrnC,UAAU,GAAGlF,EAAE1H,QAAQ,CAAC,IAAI5C,EAAEsK,EAAE0G,QAAQ,GAAGhR,EAAE,CAAC,GAAG,iBAAiBA,EAAE,MAAM,IAAIs0I,UAAUt0I,EAAE,sBAAsB,IAAI,IAAI8sB,KAAK9sB,EAAEA,EAAE8rE,eAAeh/C,KAAKziB,EAAEyiB,GAAG9sB,EAAE8sB,GAAG,CAAC,CAAC,OAAOziB,CAAC,EAAErK,EAAEyjK,UAAU,SAASp5J,EAAEC,GAAG,OAAOD,EAAEzH,SAAS0H,EAAED,EAAEA,EAAE00J,SAAS10J,EAAE00J,SAAS,EAAEz0J,IAAID,EAAEzH,OAAO0H,EAAED,EAAE,EAAE,IAAIvD,EAAE,CAAC69J,SAAS,SAASt6J,EAAEC,EAAEtK,EAAE8sB,EAAEhmB,GAAG,GAAGwD,EAAEy0J,UAAU10J,EAAE00J,SAAqB10J,EAAEiM,IAAIhM,EAAEy0J,SAAS/+J,EAAEA,EAAE8sB,GAAGhmB,QAAG,IAAI,IAAIrD,EAAE,EAAEA,EAAEqpB,EAAErpB,IAAI4G,EAAEvD,EAAErD,GAAG6G,EAAEtK,EAAEyD,EAAE,EAAEkgK,cAAc,SAASt5J,GAAG,IAAIC,EAAEtK,EAAE8sB,EAAEhmB,EAAErD,EAAEkyG,EAAE,IAAI7oF,EAAE,EAAExiB,EAAE,EAAEtK,EAAEqK,EAAEzH,OAAO0H,EAAEtK,EAAEsK,IAAIwiB,GAAGziB,EAAEC,GAAG1H,OAAO,IAAI+yG,EAAE,IAAI0lD,WAAWvuI,GAAGhmB,EAAE,EAAEwD,EAAE,EAAEtK,EAAEqK,EAAEzH,OAAO0H,EAAEtK,EAAEsK,IAAI7G,EAAE4G,EAAEC,GAAGqrG,EAAEr/F,IAAI7S,EAAEqD,GAAGA,GAAGrD,EAAEb,OAAO,OAAO+yG,CAAC,GAAGlyG,EAAE,CAACkhK,SAAS,SAASt6J,EAAEC,EAAEtK,EAAE8sB,EAAEhmB,GAAG,IAAI,IAAIrD,EAAE,EAAEA,EAAEqpB,EAAErpB,IAAI4G,EAAEvD,EAAErD,GAAG6G,EAAEtK,EAAEyD,EAAE,EAAEkgK,cAAc,SAASt5J,GAAG,MAAM,GAAG2Z,OAAOoiB,MAAM,GAAG/7B,EAAE,GAAGrK,EAAEglK,SAAS,SAAS36J,GAAGA,GAAGrK,EAAEmjK,KAAK9H,WAAWr7J,EAAEilK,MAAM3J,YAAYt7J,EAAEklK,MAAMH,WAAW/kK,EAAEk4C,OAAOl4C,EAAE8G,KAAK9G,EAAEmjK,KAAKv5J,MAAM5J,EAAEilK,MAAMr7J,MAAM5J,EAAEklK,MAAMt7J,MAAM5J,EAAEk4C,OAAOl4C,EAAEyD,GAAG,EAAEzD,EAAEglK,SAASl4I,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAASziB,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,EAAEC,GAAG,GAAGA,EAAE,QAAQD,EAAE00J,UAAUppD,IAAItrG,EAAE00J,UAAUt7J,GAAG,OAAOkU,OAAOghI,aAAavyG,MAAM,KAAKt/B,EAAE28J,UAAUp5J,EAAEC,IAAI,IAAI,IAAItK,EAAE,GAAG8sB,EAAE,EAAEA,EAAExiB,EAAEwiB,IAAI9sB,GAAG2X,OAAOghI,aAAatuI,EAAEyiB,IAAI,OAAO9sB,CAAC,CAAC,IAAI8G,EAAEuD,EAAE,YAAY5G,GAAE,EAAGkyG,GAAE,EAAG,IAAIh+F,OAAOghI,aAAavyG,MAAM,KAAK,CAAC,GAAiB,CAAb,MAAMsnC,GAAGjqE,GAAE,CAAE,CAAC,IAAIkU,OAAOghI,aAAavyG,MAAM,KAAK,IAAIi1H,WAAW,GAAiB,CAAb,MAAM3tF,GAAGioC,GAAE,CAAE,CAAC,IAAI,IAAI7lG,EAAE,IAAIhJ,EAAEq8J,KAAK,KAAKrlI,EAAE,EAAEA,EAAE,IAAIA,IAAIhuB,EAAEguB,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAEhuB,EAAE,KAAKA,EAAE,KAAK,EAAE9P,EAAE4iK,WAAW,SAASv4J,GAAG,IAAIC,EAAEtK,EAAE8sB,EAAErpB,EAAEkyG,EAAEjoC,EAAErjE,EAAEzH,OAAOkN,EAAE,EAAE,IAAIrM,EAAE,EAAEA,EAAEiqE,EAAEjqE,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEyjJ,WAAWrqJ,MAAsBA,EAAE,EAAEiqE,GAAwB,QAAS,OAA7B5gD,EAAEziB,EAAEyjJ,WAAWrqJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAK8sB,EAAE,OAAOrpB,KAAMqM,GAAG9P,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIsK,EAAE,IAAIxD,EAAEq8J,KAAKrzJ,GAAG6lG,EAAE,EAAElyG,EAAE,EAAEkyG,EAAE7lG,EAAErM,IAAsB,QAAS,OAA3BzD,EAAEqK,EAAEyjJ,WAAWrqJ,MAAsBA,EAAE,EAAEiqE,GAAwB,QAAS,OAA7B5gD,EAAEziB,EAAEyjJ,WAAWrqJ,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAK8sB,EAAE,OAAOrpB,KAAMzD,EAAE,IAAIsK,EAAEqrG,KAAK31G,EAAEA,EAAE,MAAMsK,EAAEqrG,KAAK,IAAI31G,IAAI,EAAEsK,EAAEqrG,KAAK,IAAI,GAAG31G,GAAGA,EAAE,OAAOsK,EAAEqrG,KAAK,IAAI31G,IAAI,GAAGsK,EAAEqrG,KAAK,IAAI31G,IAAI,EAAE,GAAGsK,EAAEqrG,KAAK,IAAI,GAAG31G,IAAIsK,EAAEqrG,KAAK,IAAI31G,IAAI,GAAGsK,EAAEqrG,KAAK,IAAI31G,IAAI,GAAG,GAAGsK,EAAEqrG,KAAK,IAAI31G,IAAI,EAAE,GAAGsK,EAAEqrG,KAAK,IAAI,GAAG31G,GAAG,OAAOsK,CAAC,EAAEtK,EAAEwjK,cAAc,SAASn5J,GAAG,OAAOyiB,EAAEziB,EAAEA,EAAEzH,OAAO,EAAE5C,EAAEkkK,cAAc,SAAS75J,GAAG,IAAI,IAAIC,EAAE,IAAIxD,EAAEq8J,KAAK94J,EAAEzH,QAAQ5C,EAAE,EAAE8sB,EAAExiB,EAAE1H,OAAO5C,EAAE8sB,EAAE9sB,IAAIsK,EAAEtK,GAAGqK,EAAEyjJ,WAAW9tJ,GAAG,OAAOsK,CAAC,EAAEtK,EAAE0kK,WAAW,SAASr6J,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAEkyG,EAAEjoC,EAAEpjE,GAAGD,EAAEzH,OAAOk7B,EAAE,IAAIl0B,MAAM,EAAE8jE,GAAG,IAAI5mE,EAAE,EAAE9G,EAAE,EAAEA,EAAE0tE,GAAG,IAAGjqE,EAAE4G,EAAErK,MAAO,IAAI89B,EAAEh3B,KAAKrD,OAAO,IAAGkyG,EAAE7lG,EAAErM,IAAK,EAAEq6B,EAAEh3B,KAAK,MAAM9G,GAAG21G,EAAE,MAAM,CAAC,IAAIlyG,GAAG,IAAIkyG,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAG31G,EAAE0tE,GAAGjqE,EAAEA,GAAG,EAAE,GAAG4G,EAAErK,KAAK21G,IAAIA,EAAE,EAAE73E,EAAEh3B,KAAK,MAAMrD,EAAE,MAAMq6B,EAAEh3B,KAAKrD,GAAGA,GAAG,MAAMq6B,EAAEh3B,KAAK,MAAMrD,GAAG,GAAG,KAAKq6B,EAAEh3B,KAAK,MAAM,KAAKrD,EAAE,CAAC,OAAOqpB,EAAEgR,EAAEh3B,EAAE,EAAE9G,EAAEykK,WAAW,SAASp6J,EAAEC,GAAG,IAAItK,EAAE,KAAIsK,EAAEA,GAAGD,EAAEzH,QAASyH,EAAEzH,SAAS0H,EAAED,EAAEzH,QAAQ5C,EAAEsK,EAAE,EAAEtK,GAAG,GAAG,MAAO,IAAIqK,EAAErK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANsK,EAAUtK,EAAE8P,EAAEzF,EAAErK,IAAIsK,EAAEtK,EAAEsK,CAAC,CAAC,EAAE,CAAC,WAAW,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEtK,GAAG,aAA2KsK,EAAEnO,QAAhK,SAAWkO,EAAEC,EAAEtK,EAAE8sB,GAAG,IAAI,IAAIhmB,EAAE,MAAMuD,EAAE,EAAE5G,EAAE4G,IAAI,GAAG,MAAM,EAAEsrG,EAAE,EAAE,IAAI31G,GAAG,CAAeA,GAAd21G,EAAE31G,EAAE,IAAI,IAAIA,EAAO,GAAgByD,EAAEA,GAAfqD,EAAEA,EAAEwD,EAAEwiB,KAAK,GAAQ,UAAU6oF,GAAG7uG,GAAG,MAAMrD,GAAG,KAAK,CAAC,OAAOqD,EAAErD,GAAG,GAAG,CAAC,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS4G,EAAEC,EAAEtK,GAAG,aAAasK,EAAEnO,QAAQ,CAAC8nK,WAAW,EAAEkB,gBAAgB,EAAEX,aAAa,EAAEY,aAAa,EAAEpB,SAAS,EAAEqB,QAAQ,EAAEC,QAAQ,EAAExB,KAAK,EAAES,aAAa,EAAEH,YAAY,EAAEmB,SAAS,EAAEC,gBAAgB,EAAEC,cAAc,EAAEnB,aAAa,EAAEoB,iBAAiB,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,uBAAuB,EAAEC,WAAW,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAASj8J,EAAEC,EAAEtK,GAAG,aAA6N,IAAIyD,EAApN,WAAa,IAAI,IAAI4G,EAAEC,EAAE,GAAGtK,EAAE,EAAEA,EAAE,IAAIA,IAAI,CAACqK,EAAErK,EAAE,IAAI,IAAI8sB,EAAE,EAAEA,EAAE,EAAEA,IAAIziB,EAAE,EAAEA,EAAE,WAAWA,IAAI,EAAEA,IAAI,EAAEC,EAAEtK,GAAGqK,CAAC,CAAC,OAAOC,CAAC,CAAuGwiB,GAAIxiB,EAAEnO,QAA5G,SAAWkO,EAAEC,EAAEtK,EAAE8sB,GAAG,IAAIhmB,EAAErD,EAAEkyG,EAAE7oF,EAAE9sB,EAAEqK,IAAI,EAAE,IAAI,IAAIqjE,EAAE5gD,EAAE4gD,EAAEioC,EAAEjoC,IAAIrjE,EAAEA,IAAI,EAAEvD,EAAE,KAAKuD,EAAEC,EAAEojE,KAAK,OAAU,EAAHrjE,CAAI,CAAsB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,EAAEC,GAAG,OAAOD,EAAEmR,IAAI+qJ,EAAEj8J,GAAGA,CAAC,CAAC,SAASxD,EAAEuD,GAAG,OAAOA,GAAG,IAAIA,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS5G,EAAE4G,GAAG,IAAI,IAAIC,EAAED,EAAEzH,SAAS0H,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAASqrG,EAAEtrG,GAAG,IAAIC,EAAED,EAAE85C,MAAMnkD,EAAEsK,EAAE8R,QAAQpc,EAAEqK,EAAEm4J,YAAYxiK,EAAEqK,EAAEm4J,WAAW,IAAIxiK,IAAIq9J,EAAEsH,SAASt6J,EAAE64J,OAAO54J,EAAEk8J,YAAYl8J,EAAEm8J,YAAYzmK,EAAEqK,EAAE+4J,UAAU/4J,EAAE+4J,UAAUpjK,EAAEsK,EAAEm8J,aAAazmK,EAAEqK,EAAEq8J,WAAW1mK,EAAEqK,EAAEm4J,WAAWxiK,EAAEsK,EAAE8R,SAASpc,EAAE,IAAIsK,EAAE8R,UAAU9R,EAAEm8J,YAAY,GAAG,CAAC,SAAS/4F,EAAErjE,EAAEC,GAAG3J,EAAEgmK,gBAAgBt8J,EAAEA,EAAEu8J,aAAa,EAAEv8J,EAAEu8J,aAAa,EAAEv8J,EAAEw8J,SAASx8J,EAAEu8J,YAAYt8J,GAAGD,EAAEu8J,YAAYv8J,EAAEw8J,SAASlxD,EAAEtrG,EAAEk4J,KAAK,CAAC,SAASzyJ,EAAEzF,EAAEC,GAAGD,EAAEm8J,YAAYn8J,EAAE+R,WAAW9R,CAAC,CAAC,SAASwzB,EAAEzzB,EAAEC,GAAGD,EAAEm8J,YAAYn8J,EAAE+R,WAAW9R,IAAI,EAAE,IAAID,EAAEm8J,YAAYn8J,EAAE+R,WAAW,IAAI9R,CAAC,CAAC,SAASwG,EAAEzG,EAAEC,EAAEtK,EAAE8sB,GAAG,IAAIhmB,EAAEuD,EAAE44J,SAAS,OAAOn8J,EAAEgmB,IAAIhmB,EAAEgmB,GAAG,IAAIhmB,EAAE,GAAGuD,EAAE44J,UAAUn8J,EAAEu2J,EAAEsH,SAASr6J,EAAED,EAAE04J,MAAM14J,EAAE24J,QAAQl8J,EAAE9G,GAAG,IAAIqK,EAAE85C,MAAM2iH,KAAKz8J,EAAE08J,MAAMC,EAAE38J,EAAE08J,MAAMz8J,EAAExD,EAAE9G,GAAG,IAAIqK,EAAE85C,MAAM2iH,OAAOz8J,EAAE08J,MAAME,EAAE58J,EAAE08J,MAAMz8J,EAAExD,EAAE9G,IAAIqK,EAAE24J,SAASl8J,EAAEuD,EAAE68J,UAAUpgK,EAAEA,EAAE,CAAC,SAASiK,EAAE1G,EAAEC,GAAG,IAAItK,EAAE8sB,EAAEhmB,EAAEuD,EAAE88J,iBAAiB1jK,EAAE4G,EAAEw8J,SAASlxD,EAAEtrG,EAAE+8J,YAAY15F,EAAErjE,EAAEg9J,WAAWv3J,EAAEzF,EAAEw8J,SAASx8J,EAAEi9J,OAAOC,GAAGl9J,EAAEw8J,UAAUx8J,EAAEi9J,OAAOC,IAAI,EAAEzpI,EAAEzzB,EAAEoL,OAAO3E,EAAEzG,EAAEm9J,OAAOz2J,EAAE1G,EAAEo9J,KAAK5sC,EAAExwH,EAAEw8J,SAASa,GAAG9qH,EAAE9e,EAAEr6B,EAAEkyG,EAAE,GAAGpzF,EAAEub,EAAEr6B,EAAEkyG,GAAGtrG,EAAE+8J,aAAa/8J,EAAEs9J,aAAa7gK,IAAI,GAAG4mE,EAAErjE,EAAEu9J,YAAYl6F,EAAErjE,EAAEu9J,WAAW,MAAU9pI,GAAJ99B,EAAEsK,GAAMqrG,KAAKpzF,GAAGub,EAAE99B,EAAE21G,EAAE,KAAK/4D,GAAG9e,EAAE99B,KAAK89B,EAAEr6B,IAAIq6B,IAAI99B,KAAK89B,EAAEr6B,EAAE,GAAG,CAACA,GAAG,EAAEzD,IAAI,UAAS89B,IAAIr6B,KAAKq6B,IAAI99B,IAAI89B,IAAIr6B,KAAKq6B,IAAI99B,IAAI89B,IAAIr6B,KAAKq6B,IAAI99B,IAAI89B,IAAIr6B,KAAKq6B,IAAI99B,IAAI89B,IAAIr6B,KAAKq6B,IAAI99B,IAAI89B,IAAIr6B,KAAKq6B,IAAI99B,IAAI89B,IAAIr6B,KAAKq6B,IAAI99B,IAAI89B,IAAIr6B,KAAKq6B,IAAI99B,IAAIyD,EAAEo3H,GAAG,GAAG/tG,EAAE46I,IAAI7sC,EAAEp3H,GAAGA,EAAEo3H,EAAE6sC,GAAG56I,EAAE6oF,EAAE,CAAC,GAAGtrG,EAAEw9J,YAAYv9J,EAAEqrG,EAAE7oF,EAAEA,GAAG4gD,EAAE,MAAM9wB,EAAE9e,EAAEr6B,EAAEkyG,EAAE,GAAGpzF,EAAEub,EAAEr6B,EAAEkyG,EAAE,CAAC,SAAQrrG,EAAEyG,EAAEzG,EAAEwG,IAAIhB,GAAG,KAAMhJ,GAAG,OAAO6uG,GAAGtrG,EAAEu9J,UAAUjyD,EAAEtrG,EAAEu9J,SAAS,CAAC,SAAS/sC,EAAExwH,GAAG,IAAIC,EAAEtK,EAAE8sB,EAAEhmB,EAAErD,EAAEkyG,EAAEtrG,EAAEi9J,OAAO,EAAE,CAAC,GAAGxgK,EAAEuD,EAAEy9J,YAAYz9J,EAAEu9J,UAAUv9J,EAAEw8J,SAASx8J,EAAEw8J,UAAUlxD,GAAGA,EAAE4xD,IAAI,CAAClK,EAAEsH,SAASt6J,EAAEoL,OAAOpL,EAAEoL,OAAOkgG,EAAEA,EAAE,GAAGtrG,EAAEw9J,aAAalyD,EAAEtrG,EAAEw8J,UAAUlxD,EAAEtrG,EAAEu8J,aAAajxD,EAAgBrrG,EAAdtK,EAAEqK,EAAE09J,UAAc,GAAGj7I,EAAEziB,EAAE3M,OAAO4M,GAAGD,EAAE3M,KAAK4M,GAAGwiB,GAAG6oF,EAAE7oF,EAAE6oF,EAAE,UAAU31G,GAAOsK,EAAJtK,EAAE21G,EAAM,GAAG7oF,EAAEziB,EAAEo9J,OAAOn9J,GAAGD,EAAEo9J,KAAKn9J,GAAGwiB,GAAG6oF,EAAE7oF,EAAE6oF,EAAE,UAAU31G,GAAG8G,GAAG6uG,CAAC,CAAC,GAAG,IAAItrG,EAAEk4J,KAAKU,SAAS,MAAM,GAAGjjK,EAAE8Q,EAAEzG,EAAEk4J,KAAKl4J,EAAEoL,OAAOpL,EAAEw8J,SAASx8J,EAAEu9J,UAAU9gK,GAAGuD,EAAEu9J,WAAW5nK,EAAEqK,EAAEu9J,UAAUv9J,EAAE29J,QAAQC,GAAG,IAAIxkK,EAAE4G,EAAEw8J,SAASx8J,EAAE29J,OAAO39J,EAAE69J,MAAM79J,EAAEoL,OAAOhS,GAAG4G,EAAE69J,OAAO79J,EAAE69J,OAAO79J,EAAE89J,WAAW99J,EAAEoL,OAAOhS,EAAE,IAAI4G,EAAE+9J,UAAU/9J,EAAE29J,SAAS39J,EAAE69J,OAAO79J,EAAE69J,OAAO79J,EAAE89J,WAAW99J,EAAEoL,OAAOhS,EAAEwkK,GAAG,IAAI59J,EAAE+9J,UAAU/9J,EAAEo9J,KAAKhkK,EAAE4G,EAAEm9J,QAAQn9J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAE3M,KAAK2M,EAAE69J,OAAOzkK,EAAEA,IAAI4G,EAAE29J,WAAW39J,EAAEu9J,UAAUv9J,EAAE29J,OAAOC,OAAO,OAAO59J,EAAEu9J,UAAUL,IAAI,IAAIl9J,EAAEk4J,KAAKU,SAAS,CAAwiB,SAAS1gJ,EAAElY,EAAEC,GAAG,IAAI,IAAItK,EAAE8sB,IAAI,CAAC,GAAGziB,EAAEu9J,UAAUL,GAAG,CAAC,GAAG1sC,EAAExwH,GAAGA,EAAEu9J,UAAUL,IAAIj9J,IAAI+9J,EAAE,OAAOC,GAAG,GAAG,IAAIj+J,EAAEu9J,UAAU,KAAK,CAAC,GAAG5nK,EAAE,EAAEqK,EAAEu9J,WAAWK,KAAK59J,EAAE69J,OAAO79J,EAAE69J,OAAO79J,EAAE89J,WAAW99J,EAAEoL,OAAOpL,EAAEw8J,SAASoB,GAAG,IAAI59J,EAAE+9J,UAAUpoK,EAAEqK,EAAEo9J,KAAKp9J,EAAEw8J,SAASx8J,EAAEm9J,QAAQn9J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAEw8J,UAAU,IAAI7mK,GAAGqK,EAAEw8J,SAAS7mK,GAAGqK,EAAEi9J,OAAOC,KAAKl9J,EAAEk+J,aAAax3J,EAAE1G,EAAErK,IAAIqK,EAAEk+J,cAAcN,GAAG,GAAGn7I,EAAEnsB,EAAE6nK,UAAUn+J,EAAEA,EAAEw8J,SAASx8J,EAAEw9J,YAAYx9J,EAAEk+J,aAAaN,IAAI59J,EAAEu9J,WAAWv9J,EAAEk+J,aAAal+J,EAAEk+J,cAAcl+J,EAAEo+J,gBAAgBp+J,EAAEu9J,WAAWK,GAAG,CAAC59J,EAAEk+J,eAAe,GAAGl+J,EAAEw8J,WAAWx8J,EAAE69J,OAAO79J,EAAE69J,OAAO79J,EAAE89J,WAAW99J,EAAEoL,OAAOpL,EAAEw8J,SAASoB,GAAG,IAAI59J,EAAE+9J,UAAUpoK,EAAEqK,EAAEo9J,KAAKp9J,EAAEw8J,SAASx8J,EAAEm9J,QAAQn9J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAEw8J,eAAe,KAAMx8J,EAAEk+J,cAAcl+J,EAAEw8J,UAAU,MAAMx8J,EAAEw8J,UAAUx8J,EAAEk+J,aAAal+J,EAAEk+J,aAAa,EAAEl+J,EAAE69J,MAAM79J,EAAEoL,OAAOpL,EAAEw8J,UAAUx8J,EAAE69J,OAAO79J,EAAE69J,OAAO79J,EAAE89J,WAAW99J,EAAEoL,OAAOpL,EAAEw8J,SAAS,IAAIx8J,EAAE+9J,eAAet7I,EAAEnsB,EAAE6nK,UAAUn+J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAEw8J,WAAWx8J,EAAEu9J,YAAYv9J,EAAEw8J,WAAW,GAAG/5I,IAAI4gD,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAOj+J,EAAE29J,OAAO39J,EAAEw8J,SAASoB,GAAG,EAAE59J,EAAEw8J,SAASoB,GAAG,EAAE39J,IAAIo+J,GAAGh7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,UAAUmG,GAAGC,IAAIv+J,EAAEw+J,WAAWn7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASvqJ,EAAElU,EAAEC,GAAG,IAAI,IAAItK,EAAE8sB,EAAEhmB,IAAI,CAAC,GAAGuD,EAAEu9J,UAAUL,GAAG,CAAC,GAAG1sC,EAAExwH,GAAGA,EAAEu9J,UAAUL,IAAIj9J,IAAI+9J,EAAE,OAAOC,GAAG,GAAG,IAAIj+J,EAAEu9J,UAAU,KAAK,CAAC,GAAG5nK,EAAE,EAAEqK,EAAEu9J,WAAWK,KAAK59J,EAAE69J,OAAO79J,EAAE69J,OAAO79J,EAAE89J,WAAW99J,EAAEoL,OAAOpL,EAAEw8J,SAASoB,GAAG,IAAI59J,EAAE+9J,UAAUpoK,EAAEqK,EAAEo9J,KAAKp9J,EAAEw8J,SAASx8J,EAAEm9J,QAAQn9J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAEw8J,UAAUx8J,EAAE+8J,YAAY/8J,EAAEk+J,aAAal+J,EAAE0+J,WAAW1+J,EAAEw9J,YAAYx9J,EAAEk+J,aAAaN,GAAG,EAAE,IAAIjoK,GAAGqK,EAAE+8J,YAAY/8J,EAAEo+J,gBAAgBp+J,EAAEw8J,SAAS7mK,GAAGqK,EAAEi9J,OAAOC,KAAKl9J,EAAEk+J,aAAax3J,EAAE1G,EAAErK,GAAGqK,EAAEk+J,cAAc,IAAIl+J,EAAE+3J,WAAW4G,GAAG3+J,EAAEk+J,eAAeN,IAAI59J,EAAEw8J,SAASx8J,EAAEw9J,YAAY,QAAQx9J,EAAEk+J,aAAaN,GAAG,IAAI59J,EAAE+8J,aAAaa,IAAI59J,EAAEk+J,cAAcl+J,EAAE+8J,YAAY,CAACtgK,EAAEuD,EAAEw8J,SAASx8J,EAAEu9J,UAAUK,GAAGn7I,EAAEnsB,EAAE6nK,UAAUn+J,EAAEA,EAAEw8J,SAAS,EAAEx8J,EAAE0+J,WAAW1+J,EAAE+8J,YAAYa,IAAI59J,EAAEu9J,WAAWv9J,EAAE+8J,YAAY,EAAE/8J,EAAE+8J,aAAa,EAAE,KAAI/8J,EAAEw8J,UAAU//J,IAAIuD,EAAE69J,OAAO79J,EAAE69J,OAAO79J,EAAE89J,WAAW99J,EAAEoL,OAAOpL,EAAEw8J,SAASoB,GAAG,IAAI59J,EAAE+9J,UAAUpoK,EAAEqK,EAAEo9J,KAAKp9J,EAAEw8J,SAASx8J,EAAEm9J,QAAQn9J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAE3M,KAAK2M,EAAE69J,OAAO79J,EAAEw8J,gBAAgB,KAAMx8J,EAAE+8J,aAAa,GAAG/8J,EAAE4+J,gBAAgB,EAAE5+J,EAAEk+J,aAAaN,GAAG,EAAE59J,EAAEw8J,WAAW/5I,IAAI4gD,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW,OAAO8F,EAAE,MAAM,GAAGj+J,EAAE4+J,iBAAiB,IAAGn8I,EAAEnsB,EAAE6nK,UAAUn+J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAEw8J,SAAS,MAAOn5F,EAAErjE,GAAE,GAAIA,EAAEw8J,WAAWx8J,EAAEu9J,YAAY,IAAIv9J,EAAEk4J,KAAKC,UAAU,OAAO8F,QAAQj+J,EAAE4+J,gBAAgB,EAAE5+J,EAAEw8J,WAAWx8J,EAAEu9J,WAAW,CAAC,OAAOv9J,EAAE4+J,kBAAkBn8I,EAAEnsB,EAAE6nK,UAAUn+J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAEw8J,SAAS,IAAIx8J,EAAE4+J,gBAAgB,GAAG5+J,EAAE29J,OAAO39J,EAAEw8J,SAASoB,GAAG,EAAE59J,EAAEw8J,SAASoB,GAAG,EAAE39J,IAAIo+J,GAAGh7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,UAAUmG,GAAGC,IAAIv+J,EAAEw+J,WAAWn7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASzkJ,EAAEha,EAAEC,GAAG,IAAI,IAAItK,EAAE8sB,EAAEhmB,EAAErD,EAAEkyG,EAAEtrG,EAAEoL,SAAS,CAAC,GAAGpL,EAAEu9J,WAAWF,GAAG,CAAC,GAAG7sC,EAAExwH,GAAGA,EAAEu9J,WAAWF,IAAIp9J,IAAI+9J,EAAE,OAAOC,GAAG,GAAG,IAAIj+J,EAAEu9J,UAAU,KAAK,CAAC,GAAGv9J,EAAEk+J,aAAa,EAAEl+J,EAAEu9J,WAAWK,IAAI59J,EAAEw8J,SAAS,IAAmB/5I,EAAE6oF,EAAjB7uG,EAAEuD,EAAEw8J,SAAS,MAAalxD,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,GAAI,CAACrD,EAAE4G,EAAEw8J,SAASa,GAAG,UAAS56I,IAAI6oF,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,IAAIgmB,IAAI6oF,IAAI7uG,IAAIA,EAAErD,GAAG4G,EAAEk+J,aAAab,IAAIjkK,EAAEqD,GAAGuD,EAAEk+J,aAAal+J,EAAEu9J,YAAYv9J,EAAEk+J,aAAal+J,EAAEu9J,UAAU,CAAC,GAAGv9J,EAAEk+J,cAAcN,IAAIjoK,EAAEW,EAAE6nK,UAAUn+J,EAAE,EAAEA,EAAEk+J,aAAaN,IAAI59J,EAAEu9J,WAAWv9J,EAAEk+J,aAAal+J,EAAEw8J,UAAUx8J,EAAEk+J,aAAal+J,EAAEk+J,aAAa,IAAIvoK,EAAEW,EAAE6nK,UAAUn+J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAEw8J,WAAWx8J,EAAEu9J,YAAYv9J,EAAEw8J,YAAY7mK,IAAI0tE,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAOj+J,EAAE29J,OAAO,EAAE19J,IAAIo+J,GAAGh7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,UAAUmG,GAAGC,IAAIv+J,EAAEw+J,WAAWn7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASz8J,EAAEhC,EAAEC,GAAG,IAAI,IAAItK,IAAI,CAAC,GAAG,IAAIqK,EAAEu9J,YAAY/sC,EAAExwH,GAAG,IAAIA,EAAEu9J,WAAW,CAAC,GAAGt9J,IAAI+9J,EAAE,OAAOC,GAAG,KAAK,CAAC,GAAGj+J,EAAEk+J,aAAa,EAAEvoK,EAAEW,EAAE6nK,UAAUn+J,EAAE,EAAEA,EAAEoL,OAAOpL,EAAEw8J,WAAWx8J,EAAEu9J,YAAYv9J,EAAEw8J,WAAW7mK,IAAI0tE,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAOj+J,EAAE29J,OAAO,EAAE19J,IAAIo+J,GAAGh7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,UAAUmG,GAAGC,IAAIv+J,EAAEw+J,WAAWn7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASz/J,EAAEgB,EAAEC,EAAEtK,EAAE8sB,EAAEhmB,GAAGrK,KAAKysK,YAAY7+J,EAAE5N,KAAK0sK,SAAS7+J,EAAE7N,KAAK2sK,YAAYppK,EAAEvD,KAAK4sK,UAAUv8I,EAAErwB,KAAKuiJ,KAAKl4I,CAAC,CAA6T,SAASmtE,IAAIx3E,KAAK8lK,KAAK,KAAK9lK,KAAKqX,OAAO,EAAErX,KAAK+pK,YAAY,KAAK/pK,KAAK6sK,iBAAiB,EAAE7sK,KAAKgqK,YAAY,EAAEhqK,KAAK2f,QAAQ,EAAE3f,KAAKqqK,KAAK,EAAErqK,KAAK8sK,OAAO,KAAK9sK,KAAK+sK,QAAQ,EAAE/sK,KAAKgX,OAAOg2J,EAAEhtK,KAAKitK,YAAY,EAAEjtK,KAAK6qK,OAAO,EAAE7qK,KAAKktK,OAAO,EAAEltK,KAAK+qK,OAAO,EAAE/qK,KAAKgZ,OAAO,KAAKhZ,KAAKqrK,YAAY,EAAErrK,KAAKgrK,KAAK,KAAKhrK,KAAKiB,KAAK,KAAKjB,KAAKyrK,MAAM,EAAEzrK,KAAKsrK,UAAU,EAAEtrK,KAAKmtK,UAAU,EAAEntK,KAAK2rK,UAAU,EAAE3rK,KAAK0rK,WAAW,EAAE1rK,KAAKmqK,YAAY,EAAEnqK,KAAK8rK,aAAa,EAAE9rK,KAAKssK,WAAW,EAAEtsK,KAAKwsK,gBAAgB,EAAExsK,KAAKoqK,SAAS,EAAEpqK,KAAKorK,YAAY,EAAEprK,KAAKmrK,UAAU,EAAEnrK,KAAK2qK,YAAY,EAAE3qK,KAAK0qK,iBAAiB,EAAE1qK,KAAKgsK,eAAe,EAAEhsK,KAAKg/J,MAAM,EAAEh/J,KAAK2lK,SAAS,EAAE3lK,KAAKkrK,WAAW,EAAElrK,KAAK4qK,WAAW,EAAE5qK,KAAKotK,UAAU,IAAIxM,EAAE4H,MAAM,EAAE6E,GAAIrtK,KAAKstK,UAAU,IAAI1M,EAAE4H,MAAM,GAAG,EAAE+E,EAAG,IAAIvtK,KAAKwtK,QAAQ,IAAI5M,EAAE4H,MAAM,GAAG,EAAEiF,EAAG,IAAIzmK,EAAEhH,KAAKotK,WAAWpmK,EAAEhH,KAAKstK,WAAWtmK,EAAEhH,KAAKwtK,SAASxtK,KAAK0tK,OAAO,KAAK1tK,KAAK2tK,OAAO,KAAK3tK,KAAK4tK,QAAQ,KAAK5tK,KAAK6tK,SAAS,IAAIjN,EAAE4H,MAAMsF,EAAG,GAAG9tK,KAAK+tK,KAAK,IAAInN,EAAE4H,MAAM,EAAEwF,EAAG,GAAGhnK,EAAEhH,KAAK+tK,MAAM/tK,KAAKiuK,SAAS,EAAEjuK,KAAKkuK,SAAS,EAAEluK,KAAK0gF,MAAM,IAAIkgF,EAAE4H,MAAM,EAAEwF,EAAG,GAAGhnK,EAAEhH,KAAK0gF,OAAO1gF,KAAKmuK,MAAM,EAAEnuK,KAAKouK,YAAY,EAAEpuK,KAAKosK,SAAS,EAAEpsK,KAAKquK,MAAM,EAAEruK,KAAKsuK,QAAQ,EAAEtuK,KAAKuuK,WAAW,EAAEvuK,KAAK6hJ,QAAQ,EAAE7hJ,KAAKurK,OAAO,EAAEvrK,KAAKwuK,OAAO,EAAExuK,KAAKyuK,SAAS,CAAC,CAAC,SAASr7J,EAAExF,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE85C,OAAO95C,EAAE68J,SAAS78J,EAAEq8J,UAAU,EAAEr8J,EAAE8gK,UAAUC,GAAE9gK,EAAED,EAAE85C,OAAQ/nC,QAAQ,EAAE9R,EAAEm8J,YAAY,EAAEn8J,EAAEw8J,KAAK,IAAIx8J,EAAEw8J,MAAMx8J,EAAEw8J,MAAMx8J,EAAEwJ,OAAOxJ,EAAEw8J,KAAKuE,GAAGC,GAAGjhK,EAAE08J,MAAM,IAAIz8J,EAAEw8J,KAAK,EAAE,EAAEx8J,EAAEo/J,WAAWrB,EAAE1nK,EAAE4qK,SAASjhK,GAAGkhK,GAAG1+I,EAAEziB,EAAEohK,EAAE,CAAC,SAASr+F,EAAE/iE,GAAG,IAAIC,EAAEuF,EAAExF,GAAG,OAAOC,IAAIkhK,GAAptD,SAAWnhK,GAAGA,EAAEy9J,YAAY,EAAEz9J,EAAEi9J,OAAO7jK,EAAE4G,EAAE3M,MAAM2M,EAAEo+J,eAAe7L,EAAEvyJ,EAAEoxJ,OAAO0N,SAAS9+J,EAAEs9J,WAAW/K,EAAEvyJ,EAAEoxJ,OAAOyN,YAAY7+J,EAAEg9J,WAAWzK,EAAEvyJ,EAAEoxJ,OAAO2N,YAAY/+J,EAAE88J,iBAAiBvK,EAAEvyJ,EAAEoxJ,OAAO4N,UAAUh/J,EAAEw8J,SAAS,EAAEx8J,EAAEu8J,YAAY,EAAEv8J,EAAEu9J,UAAU,EAAEv9J,EAAE29J,OAAO,EAAE39J,EAAEk+J,aAAal+J,EAAE+8J,YAAYa,GAAG,EAAE59J,EAAE4+J,gBAAgB,EAAE5+J,EAAE69J,MAAM,CAAC,CAA45C9uI,CAAE/uB,EAAE85C,OAAO75C,CAAC,CAA6E,SAASypD,EAAE1pD,EAAEC,EAAEtK,EAAE8G,EAAErD,EAAEkyG,GAAG,IAAItrG,EAAE,OAAOohK,EAAE,IAAI/9F,EAAE,EAAE,GAAGpjE,IAAIm2I,IAAIn2I,EAAE,GAAGxD,EAAE,GAAG4mE,EAAE,EAAE5mE,GAAGA,GAAGA,EAAE,KAAK4mE,EAAE,EAAE5mE,GAAG,IAAIrD,EAAE,GAAGA,EAAEw5H,GAAGj9H,IAAIypK,GAAG3iK,EAAE,GAAGA,EAAE,IAAIwD,EAAE,GAAGA,EAAE,GAAGqrG,EAAE,GAAGA,EAAE+1D,EAAE,OAAO5+I,EAAEziB,EAAEohK,GAAG,IAAI3kK,IAAIA,EAAE,GAAG,IAAIgJ,EAAE,IAAImkE,EAAE,OAAO5pE,EAAE85C,MAAMr0C,EAAEA,EAAEyyJ,KAAKl4J,EAAEyF,EAAEg3J,KAAKp5F,EAAE59D,EAAEy5J,OAAO,KAAKz5J,EAAE65J,OAAO7iK,EAAEgJ,EAAEw3J,OAAO,GAAGx3J,EAAE65J,OAAO75J,EAAE03J,OAAO13J,EAAEw3J,OAAO,EAAEx3J,EAAE85J,UAAUnmK,EAAE,EAAEqM,EAAEi4J,UAAU,GAAGj4J,EAAE85J,UAAU95J,EAAEs4J,UAAUt4J,EAAEi4J,UAAU,EAAEj4J,EAAEq4J,eAAer4J,EAAE85J,UAAU3B,GAAG,GAAGA,IAAIn4J,EAAE2F,OAAO,IAAI4nJ,EAAE8F,KAAK,EAAErzJ,EAAEw3J,QAAQx3J,EAAEpS,KAAK,IAAI2/J,EAAE4H,MAAMn1J,EAAEi4J,WAAWj4J,EAAE23J,KAAK,IAAIpK,EAAE4H,MAAMn1J,EAAEw3J,QAAQx3J,EAAE+6J,YAAY,GAAGpnK,EAAE,EAAEqM,EAAEw5J,iBAAiB,EAAEx5J,EAAE+6J,YAAY/6J,EAAE02J,YAAY,IAAInJ,EAAE8F,KAAKrzJ,EAAEw5J,kBAAkBx5J,EAAEg7J,MAAM,EAAEh7J,EAAE+6J,YAAY/6J,EAAE86J,MAAM,EAAE96J,EAAE+6J,YAAY/6J,EAAE2rJ,MAAMnxJ,EAAEwF,EAAEsyJ,SAASzsD,EAAE7lG,EAAE2D,OAAOzT,EAAEotE,EAAE/iE,EAAE,CAAy6I,IAAIuyJ,EAAES,EAAEhzJ,EAAE,mBAAmB1J,EAAE0J,EAAE,WAAW28J,EAAE38J,EAAE,aAAa48J,EAAE58J,EAAE,WAAWk8J,EAAEl8J,EAAE,cAAcg+J,EAAE,EAAEsD,EAAE,EAAEnvK,EAAE,EAAEksK,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,GAAG,EAAEK,GAAG,EAAEC,GAAG,EAAEtrB,GAAG,EAAEuoB,EAAE,EAAEviI,EAAE,EAAEulI,EAAE,EAAEN,EAAE,EAAEO,EAAE,EAAEb,EAAE,EAAE3B,EAAE,EAAExsC,EAAE,EAAEivC,EAAG,GAAGC,EAAG,EAAe1B,EAAG2B,IAAQpC,EAAG,GAAGE,EAAG,GAAGJ,EAAG,EAAEW,EAAG,EAAEF,EAAG,GAAGtC,GAAG,EAAEP,GAAG,IAAIH,GAAGG,GAAGO,GAAG,EAAEoE,GAAG,GAAGhB,GAAG,GAAGiB,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,IAAInB,GAAG,IAAIoB,GAAG,IAAIpE,GAAG,EAAEQ,GAAG,EAAEH,GAAG,EAAEC,GAAG,EAAE+D,GAAG,EAAE/P,EAAE,CAAC,IAAIvzJ,EAAE,EAAE,EAAE,EAAE,GAAl/W,SAAWgB,EAAEC,GAAG,IAAItK,EAAE,MAAM,IAAIA,EAAEqK,EAAEi/J,iBAAiB,IAAItpK,EAAEqK,EAAEi/J,iBAAiB,KAAK,CAAC,GAAGj/J,EAAEu9J,WAAW,EAAE,CAAC,GAAG/sC,EAAExwH,GAAG,IAAIA,EAAEu9J,WAAWt9J,IAAI+9J,EAAE,OAAOC,GAAG,GAAG,IAAIj+J,EAAEu9J,UAAU,KAAK,CAACv9J,EAAEw8J,UAAUx8J,EAAEu9J,UAAUv9J,EAAEu9J,UAAU,EAAE,IAAI96I,EAAEziB,EAAEu8J,YAAY5mK,EAAE,IAAI,IAAIqK,EAAEw8J,UAAUx8J,EAAEw8J,UAAU/5I,KAAKziB,EAAEu9J,UAAUv9J,EAAEw8J,SAAS/5I,EAAEziB,EAAEw8J,SAAS/5I,EAAE4gD,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW,OAAO8F,GAAG,GAAGj+J,EAAEw8J,SAASx8J,EAAEu8J,aAAav8J,EAAEi9J,OAAOC,KAAK75F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAOj+J,EAAE29J,OAAO,EAAE19J,IAAIo+J,GAAGh7F,EAAErjE,GAAE,GAAI,IAAIA,EAAEk4J,KAAKC,UAAUmG,GAAGC,KAAIv+J,EAAEw8J,SAASx8J,EAAEu8J,cAAcl5F,EAAErjE,GAAE,GAAQA,EAAEk4J,KAAKC,WAAW8F,GAAK,IAAi9V,IAAIj/J,EAAE,EAAE,EAAE,EAAE,EAAEkZ,GAAG,IAAIlZ,EAAE,EAAE,EAAE,GAAG,EAAEkZ,GAAG,IAAIlZ,EAAE,EAAE,EAAE,GAAG,GAAGkZ,GAAG,IAAIlZ,EAAE,EAAE,EAAE,GAAG,GAAGkV,GAAG,IAAIlV,EAAE,EAAE,GAAG,GAAG,GAAGkV,GAAG,IAAIlV,EAAE,EAAE,GAAG,IAAI,IAAIkV,GAAG,IAAIlV,EAAE,EAAE,GAAG,IAAI,IAAIkV,GAAG,IAAIlV,EAAE,GAAG,IAAI,IAAI,KAAKkV,GAAG,IAAIlV,EAAE,GAAG,IAAI,IAAI,KAAKkV,IAAIve,EAAE4sK,YAA18J,SAAWviK,EAAEC,GAAG,OAAOypD,EAAE1pD,EAAEC,EAAEm/J,EAAEyC,EAAGC,EAAGF,EAAE,EAAi7JjsK,EAAEyiK,aAAa1uG,EAAE/zD,EAAE6sK,aAAaz/F,EAAEptE,EAAE8sK,iBAAiBj9J,EAAE7P,EAAE0iK,iBAA7vL,SAAWr4J,EAAEC,GAAG,OAAOD,GAAGA,EAAE85C,MAAM,IAAI95C,EAAE85C,MAAM2iH,KAAK2E,GAAGphK,EAAE85C,MAAMolH,OAAOj/J,EAAEkhK,GAAGC,CAAC,EAAqsLzrK,EAAEqjK,QAA9/J,SAAWh5J,EAAEC,GAAG,IAAItK,EAAE0tE,EAAE58D,EAAEC,EAAE,IAAI1G,IAAIA,EAAE85C,OAAO75C,EAAEshK,GAAGthK,EAAE,EAAE,OAAOD,EAAEyiB,EAAEziB,EAAEohK,GAAGA,EAAE,GAAG/9F,EAAErjE,EAAE85C,OAAO95C,EAAE64J,SAAS74J,EAAE04J,OAAO,IAAI14J,EAAE44J,UAAUv1F,EAAE55D,SAAS44J,IAAIpiK,IAAIo+J,EAAE,OAAO57I,EAAEziB,EAAE,IAAIA,EAAEm4J,UAAUuJ,EAAEN,GAAG,GAAG/9F,EAAE60F,KAAKl4J,EAAErK,EAAE0tE,EAAEg8F,WAAWh8F,EAAEg8F,WAAWp/J,EAAEojE,EAAE55D,SAASu3J,GAAG,GAAG,IAAI39F,EAAEo5F,KAAKz8J,EAAE08J,MAAM,EAAEj3J,EAAE49D,EAAE,IAAI59D,EAAE49D,EAAE,KAAK59D,EAAE49D,EAAE,GAAGA,EAAE67F,QAAQz5J,EAAE49D,GAAGA,EAAE67F,OAAOz+J,KAAK,EAAE,IAAI4iE,EAAE67F,OAAOwD,KAAK,EAAE,IAAIr/F,EAAE67F,OAAOyD,MAAM,EAAE,IAAIt/F,EAAE67F,OAAO3lK,KAAK,EAAE,IAAI8pE,EAAE67F,OAAOhkD,QAAQ,GAAG,IAAIz1G,EAAE49D,EAAE,IAAIA,EAAE67F,OAAO0D,MAAMn9J,EAAE49D,EAAEA,EAAE67F,OAAO0D,MAAM,EAAE,KAAKn9J,EAAE49D,EAAEA,EAAE67F,OAAO0D,MAAM,GAAG,KAAKn9J,EAAE49D,EAAEA,EAAE67F,OAAO0D,MAAM,GAAG,KAAKn9J,EAAE49D,EAAE,IAAIA,EAAE+tF,MAAM,EAAE/tF,EAAE00F,UAAU37H,GAAGinC,EAAE+tF,MAAM,EAAE,EAAE,GAAG3rJ,EAAE49D,EAAE,IAAIA,EAAE67F,OAAO2D,IAAIx/F,EAAE67F,OAAOyD,OAAOt/F,EAAE67F,OAAOyD,MAAMpqK,SAASkN,EAAE49D,EAAE,IAAIA,EAAE67F,OAAOyD,MAAMpqK,QAAQkN,EAAE49D,EAAEA,EAAE67F,OAAOyD,MAAMpqK,QAAQ,EAAE,MAAM8qE,EAAE67F,OAAOwD,OAAO1iK,EAAE08J,MAAME,EAAE58J,EAAE08J,MAAMr5F,EAAE84F,YAAY94F,EAAEtxD,QAAQ,IAAIsxD,EAAE87F,QAAQ,EAAE97F,EAAE55D,OAAOw4J,KAAKx8J,EAAE49D,EAAE,GAAG59D,EAAE49D,EAAE,GAAG59D,EAAE49D,EAAE,GAAG59D,EAAE49D,EAAE,GAAG59D,EAAE49D,EAAE,GAAG59D,EAAE49D,EAAE,IAAIA,EAAE+tF,MAAM,EAAE/tF,EAAE00F,UAAU37H,GAAGinC,EAAE+tF,MAAM,EAAE,EAAE,GAAG3rJ,EAAE49D,EAAEi/F,IAAIj/F,EAAE55D,OAAOw3J,QAAQ,CAAC,IAAIzwC,EAAE4uC,GAAG/7F,EAAEi8F,OAAO,GAAG,IAAI,EAAgE9uC,IAAvDntD,EAAE00F,UAAU37H,GAAGinC,EAAE+tF,MAAM,EAAE,EAAE/tF,EAAE+tF,MAAM,EAAE,EAAE,IAAI/tF,EAAE+tF,MAAM,EAAE,IAAQ,EAAE,IAAI/tF,EAAEm5F,WAAWhsC,GAAGwxC,IAAIxxC,GAAG,GAAGA,EAAE,GAAGntD,EAAE55D,OAAOw3J,GAAGxtI,EAAE4vC,EAAEmtD,GAAG,IAAIntD,EAAEm5F,WAAW/oI,EAAE4vC,EAAErjE,EAAE08J,QAAQ,IAAIjpI,EAAE4vC,EAAE,MAAMrjE,EAAE08J,QAAQ18J,EAAE08J,MAAM,CAAC,CAAC,GAAGr5F,EAAE55D,SAASw4J,GAAG,GAAG5+F,EAAE67F,OAAOyD,MAAM,CAAC,IAAIl8J,EAAE48D,EAAEtxD,QAAQsxD,EAAE87F,SAAS,MAAM97F,EAAE67F,OAAOyD,MAAMpqK,UAAU8qE,EAAEtxD,UAAUsxD,EAAE47F,mBAAmB57F,EAAE67F,OAAOwD,MAAMr/F,EAAEtxD,QAAQtL,IAAIzG,EAAE08J,MAAME,EAAE58J,EAAE08J,MAAMr5F,EAAE84F,YAAY94F,EAAEtxD,QAAQtL,EAAEA,IAAI6kG,EAAEtrG,GAAGyG,EAAE48D,EAAEtxD,QAAQsxD,EAAEtxD,UAAUsxD,EAAE47F,oBAAoBx5J,EAAE49D,EAAE,IAAIA,EAAE67F,OAAOyD,MAAMt/F,EAAE87F,UAAU97F,EAAE87F,UAAU97F,EAAE67F,OAAOwD,MAAMr/F,EAAEtxD,QAAQtL,IAAIzG,EAAE08J,MAAME,EAAE58J,EAAE08J,MAAMr5F,EAAE84F,YAAY94F,EAAEtxD,QAAQtL,EAAEA,IAAI48D,EAAE87F,UAAU97F,EAAE67F,OAAOyD,MAAMpqK,SAAS8qE,EAAE87F,QAAQ,EAAE97F,EAAE55D,OAAOy4J,GAAG,MAAM7+F,EAAE55D,OAAOy4J,GAAG,GAAG7+F,EAAE55D,SAASy4J,GAAG,GAAG7+F,EAAE67F,OAAO3lK,KAAK,CAACkN,EAAE48D,EAAEtxD,QAAQ,EAAE,CAAC,GAAGsxD,EAAEtxD,UAAUsxD,EAAE47F,mBAAmB57F,EAAE67F,OAAOwD,MAAMr/F,EAAEtxD,QAAQtL,IAAIzG,EAAE08J,MAAME,EAAE58J,EAAE08J,MAAMr5F,EAAE84F,YAAY94F,EAAEtxD,QAAQtL,EAAEA,IAAI6kG,EAAEtrG,GAAGyG,EAAE48D,EAAEtxD,QAAQsxD,EAAEtxD,UAAUsxD,EAAE47F,kBAAkB,CAACv4J,EAAE,EAAE,KAAK,CAACA,EAAE28D,EAAE87F,QAAQ97F,EAAE67F,OAAO3lK,KAAKhB,OAAO,IAAI8qE,EAAE67F,OAAO3lK,KAAKkqJ,WAAWpgF,EAAE87F,WAAW,EAAE15J,EAAE49D,EAAE38D,EAAE,OAAO,IAAIA,GAAG28D,EAAE67F,OAAOwD,MAAMr/F,EAAEtxD,QAAQtL,IAAIzG,EAAE08J,MAAME,EAAE58J,EAAE08J,MAAMr5F,EAAE84F,YAAY94F,EAAEtxD,QAAQtL,EAAEA,IAAI,IAAIC,IAAI28D,EAAE87F,QAAQ,EAAE97F,EAAE55D,OAAO04J,GAAG,MAAM9+F,EAAE55D,OAAO04J,GAAG,GAAG9+F,EAAE55D,SAAS04J,GAAG,GAAG9+F,EAAE67F,OAAOhkD,QAAQ,CAACz0G,EAAE48D,EAAEtxD,QAAQ,EAAE,CAAC,GAAGsxD,EAAEtxD,UAAUsxD,EAAE47F,mBAAmB57F,EAAE67F,OAAOwD,MAAMr/F,EAAEtxD,QAAQtL,IAAIzG,EAAE08J,MAAME,EAAE58J,EAAE08J,MAAMr5F,EAAE84F,YAAY94F,EAAEtxD,QAAQtL,EAAEA,IAAI6kG,EAAEtrG,GAAGyG,EAAE48D,EAAEtxD,QAAQsxD,EAAEtxD,UAAUsxD,EAAE47F,kBAAkB,CAACv4J,EAAE,EAAE,KAAK,CAACA,EAAE28D,EAAE87F,QAAQ97F,EAAE67F,OAAOhkD,QAAQ3iH,OAAO,IAAI8qE,EAAE67F,OAAOhkD,QAAQuoC,WAAWpgF,EAAE87F,WAAW,EAAE15J,EAAE49D,EAAE38D,EAAE,OAAO,IAAIA,GAAG28D,EAAE67F,OAAOwD,MAAMr/F,EAAEtxD,QAAQtL,IAAIzG,EAAE08J,MAAME,EAAE58J,EAAE08J,MAAMr5F,EAAE84F,YAAY94F,EAAEtxD,QAAQtL,EAAEA,IAAI,IAAIC,IAAI28D,EAAE55D,OAAO24J,GAAG,MAAM/+F,EAAE55D,OAAO24J,GAAG,GAAG/+F,EAAE55D,SAAS24J,KAAK/+F,EAAE67F,OAAOwD,MAAMr/F,EAAEtxD,QAAQ,EAAEsxD,EAAE47F,kBAAkB3zD,EAAEtrG,GAAGqjE,EAAEtxD,QAAQ,GAAGsxD,EAAE47F,mBAAmBx5J,EAAE49D,EAAE,IAAIrjE,EAAE08J,OAAOj3J,EAAE49D,EAAErjE,EAAE08J,OAAO,EAAE,KAAK18J,EAAE08J,MAAM,EAAEr5F,EAAE55D,OAAOw3J,KAAK59F,EAAE55D,OAAOw3J,IAAI,IAAI59F,EAAEtxD,SAAS,GAAGu5F,EAAEtrG,GAAG,IAAIA,EAAEm4J,UAAU,OAAO90F,EAAEg8F,YAAY,EAAE8B,OAAO,GAAG,IAAInhK,EAAE44J,UAAUn8J,EAAEwD,IAAIxD,EAAE9G,IAAIsK,IAAIo+J,EAAE,OAAO57I,EAAEziB,EAAE0hK,GAAG,GAAGr+F,EAAE55D,SAAS44J,IAAI,IAAIriK,EAAE44J,SAAS,OAAOn2I,EAAEziB,EAAE0hK,GAAG,GAAG,IAAI1hK,EAAE44J,UAAU,IAAIv1F,EAAEk6F,WAAWt9J,IAAI+9J,GAAG36F,EAAE55D,SAAS44J,GAAG,CAAC,IAAInqJ,EAAEmrD,EAAE00F,WAAW37H,EAAEp6B,EAAEqhE,EAAEpjE,GAAGojE,EAAE00F,WAAW4J,EAAE3nJ,EAAEqpD,EAAEpjE,GAAGsyJ,EAAElvF,EAAE+tF,OAAOzc,KAAKtxE,EAAEpjE,GAAG,GAAGiY,IAAIomJ,IAAIpmJ,IAAIqmJ,KAAKl7F,EAAE55D,OAAO44J,IAAInqJ,IAAI+lJ,IAAI/lJ,IAAIomJ,GAAG,OAAO,IAAIt+J,EAAEm4J,YAAY90F,EAAEg8F,YAAY,GAAG8B,EAAE,GAAGjpJ,IAAIumJ,KAAKx+J,IAAIqhK,EAAEhrK,EAAEwsK,UAAUz/F,GAAGpjE,IAAIshK,IAAIjrK,EAAEysK,iBAAiB1/F,EAAE,EAAE,GAAE,GAAIpjE,IAAI9N,IAAIiH,EAAEiqE,EAAEhwE,MAAM,IAAIgwE,EAAEk6F,YAAYl6F,EAAEm5F,SAAS,EAAEn5F,EAAEk5F,YAAY,EAAEl5F,EAAEs6F,OAAO,KAAKryD,EAAEtrG,GAAG,IAAIA,EAAEm4J,WAAW,OAAO90F,EAAEg8F,YAAY,EAAE8B,CAAC,CAAC,OAAOlhK,IAAIo+J,EAAE8C,EAAE99F,EAAEo5F,MAAM,EAAE+E,GAAG,IAAIn+F,EAAEo5F,MAAMh3J,EAAE49D,EAAE,IAAIrjE,EAAE08J,OAAOj3J,EAAE49D,EAAErjE,EAAE08J,OAAO,EAAE,KAAKj3J,EAAE49D,EAAErjE,EAAE08J,OAAO,GAAG,KAAKj3J,EAAE49D,EAAErjE,EAAE08J,OAAO,GAAG,KAAKj3J,EAAE49D,EAAE,IAAIrjE,EAAE68J,UAAUp3J,EAAE49D,EAAErjE,EAAE68J,UAAU,EAAE,KAAKp3J,EAAE49D,EAAErjE,EAAE68J,UAAU,GAAG,KAAKp3J,EAAE49D,EAAErjE,EAAE68J,UAAU,GAAG,OAAOppI,EAAE4vC,EAAErjE,EAAE08J,QAAQ,IAAIjpI,EAAE4vC,EAAE,MAAMrjE,EAAE08J,QAAQpxD,EAAEtrG,GAAGqjE,EAAEo5F,KAAK,IAAIp5F,EAAEo5F,MAAMp5F,EAAEo5F,MAAM,IAAIp5F,EAAEtxD,QAAQovJ,EAAEK,EAAE,EAA2lD7rK,EAAE0jK,WAA5lD,SAAWr5J,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE85C,OAAO75C,EAAED,EAAE85C,MAAMrwC,UAAWu3J,IAAI/gK,IAAIgiK,IAAIhiK,IAAIiiK,IAAIjiK,IAAIkiK,IAAIliK,IAAImiK,IAAIniK,IAAIghK,IAAIhhK,IAAIoiK,GAAG5/I,EAAEziB,EAAEohK,IAAIphK,EAAE85C,MAAM,KAAK75C,IAAIghK,GAAGx+I,EAAEziB,EAAEyhK,GAAGN,GAAIC,CAAC,EAAk9CzrK,EAAE6iK,qBAAn9C,SAAWx4J,EAAEC,GAAG,IAAItK,EAAE8sB,EAAEhmB,EAAE6uG,EAAEjoC,EAAE59D,EAAEguB,EAAEhtB,EAAEC,EAAEzG,EAAE1H,OAAO,IAAIyH,IAAIA,EAAE85C,MAAM,OAAOsnH,EAAE,GAAsB,KAAT91D,GAAV31G,EAAEqK,EAAE85C,OAAU2iH,OAAY,IAAInxD,GAAG31G,EAAE8T,SAASu3J,IAAIrrK,EAAE4nK,UAAU,OAAO6D,EAAE,IAAI,IAAI91D,IAAItrG,EAAE08J,MAAMC,EAAE38J,EAAE08J,MAAMz8J,EAAEyG,EAAE,IAAI/Q,EAAE8mK,KAAK,EAAE/1J,GAAG/Q,EAAEsnK,SAAS,IAAI3xD,IAAIlyG,EAAEzD,EAAEtC,MAAMsC,EAAE6mK,SAAS,EAAE7mK,EAAE4mK,YAAY,EAAE5mK,EAAEgoK,OAAO,GAAGl3J,EAAE,IAAIusJ,EAAE8F,KAAKnjK,EAAEsnK,QAAQjK,EAAEsH,SAAS7zJ,EAAExG,EAAEyG,EAAE/Q,EAAEsnK,OAAOtnK,EAAEsnK,OAAO,GAAGh9J,EAAEwG,EAAEC,EAAE/Q,EAAEsnK,QAAQ55F,EAAErjE,EAAE44J,SAASnzJ,EAAEzF,EAAE24J,QAAQllI,EAAEzzB,EAAE04J,MAAM14J,EAAE44J,SAASlyJ,EAAE1G,EAAE24J,QAAQ,EAAE34J,EAAE04J,MAAMz4J,EAAEuwH,EAAE76H,GAAGA,EAAE4nK,WAAWK,IAAI,CAACn7I,EAAE9sB,EAAE6mK,SAAS//J,EAAE9G,EAAE4nK,WAAWK,GAAG,GAAG,GAAGjoK,EAAEkoK,OAAOloK,EAAEkoK,OAAOloK,EAAEmoK,WAAWnoK,EAAEyV,OAAOqX,EAAEm7I,GAAG,IAAIjoK,EAAEooK,UAAUpoK,EAAEynK,KAAK36I,EAAE9sB,EAAEwnK,QAAQxnK,EAAEtC,KAAKsC,EAAEkoK,OAAOloK,EAAEtC,KAAKsC,EAAEkoK,OAAOp7I,EAAEA,YAAYhmB,GAAG9G,EAAE6mK,SAAS/5I,EAAE9sB,EAAE4nK,UAAUK,GAAG,EAAEptC,EAAE76H,EAAE,CAAC,OAAOA,EAAE6mK,UAAU7mK,EAAE4nK,UAAU5nK,EAAE4mK,YAAY5mK,EAAE6mK,SAAS7mK,EAAEgoK,OAAOhoK,EAAE4nK,UAAU5nK,EAAE4nK,UAAU,EAAE5nK,EAAEuoK,aAAavoK,EAAEonK,YAAYa,GAAG,EAAEjoK,EAAEipK,gBAAgB,EAAE5+J,EAAE24J,QAAQlzJ,EAAEzF,EAAE04J,MAAMjlI,EAAEzzB,EAAE44J,SAASv1F,EAAE1tE,EAAE8mK,KAAKnxD,EAAE61D,CAAC,EAAirBxrK,EAAEqtK,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,UAAU,KAAK,GAAG,CAAC,SAAShjK,EAAEC,EAAEtK,GAAG,aAAiKsK,EAAEnO,QAAtJ,WAAaM,KAAKqO,KAAK,EAAErO,KAAKwwK,KAAK,EAAExwK,KAAK6wK,OAAO,EAAE7wK,KAAKywK,GAAG,EAAEzwK,KAAKuwK,MAAM,KAAKvwK,KAAK8wK,UAAU,EAAE9wK,KAAKmH,KAAK,GAAGnH,KAAK8oH,QAAQ,GAAG9oH,KAAKswK,KAAK,EAAEtwK,KAAK+vI,MAAK,CAAE,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAASniI,EAAEC,EAAEtK,GAAG,aAA2BsK,EAAEnO,QAAQ,SAASkO,EAAEC,GAAG,IAAItK,EAAEyD,EAAEkyG,EAAEjoC,EAAE59D,EAAEguB,EAAEhtB,EAAEC,EAAE8pH,EAAEj+E,EAAEr6B,EAAEhE,EAAE8F,EAAEhY,EAAEhD,EAAE+vB,EAAE66C,EAAEpkE,EAAEu9D,EAAEzjE,EAAEoqD,EAAEopG,EAAEG,EAAEC,EAAEH,EAAEp9J,EAAEqK,EAAE85C,MAAM1gD,EAAE4G,EAAE24J,QAAQzF,EAAElzJ,EAAE04J,MAAMptD,EAAElyG,GAAG4G,EAAE44J,SAAS,GAAGv1F,EAAErjE,EAAE+4J,SAAShG,EAAE/yJ,EAAE64J,OAAOpzJ,EAAE49D,GAAGpjE,EAAED,EAAEm4J,WAAW1kI,EAAE4vC,GAAGrjE,EAAEm4J,UAAU,KAAK1xJ,EAAE9Q,EAAEwtK,KAAKz8J,EAAE/Q,EAAEytK,MAAM5yC,EAAE76H,EAAE0tK,MAAM9wH,EAAE58C,EAAE2tK,MAAMprJ,EAAEviB,EAAEyV,OAAO8I,EAAEve,EAAE4tK,KAAKvpJ,EAAErkB,EAAE6tK,KAAKxhK,EAAErM,EAAE8tK,QAAQzkK,EAAErJ,EAAE+tK,SAAS30I,GAAG,GAAGp5B,EAAEguK,SAAS,EAAE/5F,GAAG,GAAGj0E,EAAEiuK,UAAU,EAAE5jK,EAAE,EAAE,CAACga,EAAE,KAAK9F,GAAGg/I,EAAE95J,MAAM4gB,EAAEA,GAAG,EAAE9F,GAAGg/I,EAAE95J,MAAM4gB,EAAEA,GAAG,GAAGxU,EAAExD,EAAEkS,EAAE6a,GAAG9uB,EAAE,OAAO,CAAC,GAAYiU,KAAT6uD,EAAEv9D,IAAI,GAAUwU,GAAG+oD,EAAe,IAAbA,EAAEv9D,IAAI,GAAG,KAAUutJ,EAAE1vF,KAAK,MAAM79D,MAAM,CAAC,KAAK,GAAGu9D,GAAG,CAAC,GAAG,IAAK,GAAGA,GAAG,CAACv9D,EAAExD,GAAG,MAAMwD,IAAI0O,GAAG,GAAG6uD,GAAG,IAAI,SAAS9iE,CAAC,CAAC,GAAG,GAAG8iE,EAAE,CAACptE,EAAE0yE,KAA1hB,GAAiiB,MAAMroE,CAAC,CAACA,EAAEmR,IAAI,8BAA8Bxb,EAAE0yE,KAAplB,GAA2lB,MAAMroE,CAAC,CAACV,EAAE,MAAMkG,GAAEu9D,GAAG,MAAO/oD,EAAE+oD,IAAI7uD,GAAGg/I,EAAE95J,MAAM4gB,EAAEA,GAAG,GAAG1a,GAAG4U,GAAG,GAAG6uD,GAAG,EAAE7uD,KAAK6uD,EAAE/oD,GAAG+oD,GAAG/oD,EAAE,KAAK9F,GAAGg/I,EAAE95J,MAAM4gB,EAAEA,GAAG,EAAE9F,GAAGg/I,EAAE95J,MAAM4gB,EAAEA,GAAG,GAAGxU,EAAExG,EAAEkV,EAAE01D,GAAGj0E,EAAE,OAAO,CAAC,GAAYue,KAAT6uD,EAAEv9D,IAAI,GAAUwU,GAAG+oD,IAAiB,IAAfA,EAAEv9D,IAAI,GAAG,MAAY,CAAC,GAAG,IAAK,GAAGu9D,GAAG,CAACv9D,EAAExG,GAAG,MAAMwG,IAAI0O,GAAG,GAAG6uD,GAAG,IAAI,SAASptE,CAAC,CAACqK,EAAEmR,IAAI,wBAAwBxb,EAAE0yE,KAA92B,GAAq3B,MAAMroE,CAAC,CAAC,GAAG0pD,EAAE,MAAMlkD,EAAQwU,GAAN+oD,GAAG,MAAS7uD,GAAGg/I,EAAE95J,MAAM4gB,GAAEA,GAAG,GAAI+oD,IAAI7uD,GAAGg/I,EAAE95J,MAAM4gB,EAAEA,GAAG,KAAI0vC,GAAGx1C,GAAG,GAAG6uD,GAAG,GAAIt8D,EAAE,CAACzG,EAAEmR,IAAI,gCAAgCxb,EAAE0yE,KAA7/B,GAAogC,MAAMroE,CAAC,CAAC,GAAGkU,KAAK6uD,EAAE/oD,GAAG+oD,EAAQrZ,GAANqZ,EAAEM,EAAE59D,GAAM,CAAC,IAAGs9D,EAAErZ,EAAEqZ,GAAIytD,GAAG76H,EAAEkuK,KAAK,CAAC7jK,EAAEmR,IAAI,gCAAgCxb,EAAE0yE,KAApmC,GAA2mC,MAAMroE,CAAC,CAAC,GAAG8yJ,EAAE,EAAEG,EAAE/6I,EAAE,IAAIq6B,GAAG,GAAGugH,GAAGpsJ,EAAEq8D,EAAEA,EAAEzjE,EAAE,CAACA,GAAGyjE,EAAE,GAAGgwF,EAAE1vF,KAAKnrD,EAAE46I,aAAa/vF,GAAG+vF,EAAEzvF,EAAE3Z,EAAEupG,EAAEF,CAAC,OAAO,GAAGxgH,EAAEwwB,GAAG,GAAG+vF,GAAGpsJ,EAAE6rC,EAAEwwB,GAAEA,GAAGxwB,GAAIjzC,EAAE,CAACA,GAAGyjE,EAAE,GAAGgwF,EAAE1vF,KAAKnrD,EAAE46I,aAAa/vF,GAAG,GAAG+vF,EAAE,EAAEvgH,EAAEjzC,EAAE,CAAKA,GAAJyjE,EAAExwB,EAAO,GAAGwgH,EAAE1vF,KAAKnrD,EAAE46I,aAAa/vF,GAAG+vF,EAAEzvF,EAAE3Z,EAAEupG,EAAEF,CAAC,CAAC,OAAO,GAAGD,GAAGvgH,EAAEwwB,EAAEA,EAAEzjE,EAAE,CAACA,GAAGyjE,EAAE,GAAGgwF,EAAE1vF,KAAKnrD,EAAE46I,aAAa/vF,GAAG+vF,EAAEzvF,EAAE3Z,EAAEupG,EAAEF,CAAC,CAAC,KAAKzzJ,EAAE,GAAGyzJ,EAAE1vF,KAAK4vF,EAAEH,KAAKC,EAAE1vF,KAAK4vF,EAAEH,KAAKC,EAAE1vF,KAAK4vF,EAAEH,KAAKxzJ,GAAG,EAAEA,IAAIyzJ,EAAE1vF,KAAK4vF,EAAEH,KAAKxzJ,EAAE,IAAIyzJ,EAAE1vF,KAAK4vF,EAAEH,MAAM,KAAK,CAACA,EAAEzvF,EAAE3Z,EAAE,GAAGqpG,EAAE1vF,KAAK0vF,EAAED,KAAKC,EAAE1vF,KAAK0vF,EAAED,KAAKC,EAAE1vF,KAAK0vF,EAAED,KAAKxzJ,GAAG,QAAQA,EAAE,GAAGA,IAAIyzJ,EAAE1vF,KAAK0vF,EAAED,KAAKxzJ,EAAE,IAAIyzJ,EAAE1vF,KAAK0vF,EAAED,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO15J,EAAEkyG,GAAGjoC,EAAE5vC,GAAUr6B,GAAPkG,EAAE0a,GAAG,EAAe9F,IAAI,IAAZ8F,GAAG1a,GAAG,IAAY,EAAEU,EAAE24J,QAAQv/J,EAAE4G,EAAE+4J,SAAS11F,EAAErjE,EAAE44J,SAASx/J,EAAEkyG,EAAKA,EAAElyG,EAAL,EAAQ,GAAGA,EAAEkyG,GAAGtrG,EAAEm4J,UAAU90F,EAAE5vC,EAAOA,EAAE4vC,EAAP,IAAU,KAAKA,EAAE5vC,GAAG99B,EAAE4tK,KAAKrvJ,EAAEve,EAAE6tK,KAAKxpJ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASha,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAG,OAAOA,IAAI,GAAG,MAAMA,IAAI,EAAE,SAAS,MAAMA,IAAI,KAAK,IAAIA,IAAI,GAAG,CAAC,SAASvD,IAAIrK,KAAKi2E,KAAK,EAAEj2E,KAAKsoJ,MAAK,EAAGtoJ,KAAKqqK,KAAK,EAAErqK,KAAK0xK,UAAS,EAAG1xK,KAAK2xK,MAAM,EAAE3xK,KAAK+wK,KAAK,EAAE/wK,KAAK4xK,MAAM,EAAE5xK,KAAKklH,MAAM,EAAEllH,KAAKiB,KAAK,KAAKjB,KAAK6xK,MAAM,EAAE7xK,KAAKgxK,MAAM,EAAEhxK,KAAKixK,MAAM,EAAEjxK,KAAKkxK,MAAM,EAAElxK,KAAKgZ,OAAO,KAAKhZ,KAAKmxK,KAAK,EAAEnxK,KAAKoxK,KAAK,EAAEpxK,KAAKmG,OAAO,EAAEnG,KAAKi6I,OAAO,EAAEj6I,KAAKuwK,MAAM,EAAEvwK,KAAKqxK,QAAQ,KAAKrxK,KAAKsxK,SAAS,KAAKtxK,KAAKuxK,QAAQ,EAAEvxK,KAAKwxK,SAAS,EAAExxK,KAAK8xK,MAAM,EAAE9xK,KAAK+xK,KAAK,EAAE/xK,KAAKgyK,MAAM,EAAEhyK,KAAKiyK,KAAK,EAAEjyK,KAAKmrB,KAAK,KAAKnrB,KAAKkyK,KAAK,IAAItlK,EAAE47J,MAAM,KAAKxoK,KAAKmyK,KAAK,IAAIvlK,EAAE47J,MAAM,KAAKxoK,KAAKoyK,OAAO,KAAKpyK,KAAKqyK,QAAQ,KAAKryK,KAAKyxK,KAAK,EAAEzxK,KAAKsyK,KAAK,EAAEtyK,KAAKuyK,IAAI,CAAC,CAAC,SAASvrK,EAAE4G,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE85C,OAAO75C,EAAED,EAAE85C,MAAM95C,EAAE68J,SAAS78J,EAAEq8J,UAAUp8J,EAAEq3G,MAAM,EAAEt3G,EAAEmR,IAAI,GAAGlR,EAAEw8J,OAAOz8J,EAAE08J,MAAM,EAAEz8J,EAAEw8J,MAAMx8J,EAAEooE,KAAKl2E,EAAE8N,EAAEy6I,KAAK,EAAEz6I,EAAE6jK,SAAS,EAAE7jK,EAAEkjK,KAAK,MAAMljK,EAAE5M,KAAK,KAAK4M,EAAEsjK,KAAK,EAAEtjK,EAAEujK,KAAK,EAAEvjK,EAAEwjK,QAAQxjK,EAAEukK,OAAO,IAAIxlK,EAAE67J,MAAMqH,IAAIjiK,EAAEyjK,SAASzjK,EAAEwkK,QAAQ,IAAIzlK,EAAE67J,MAAMsH,IAAIliK,EAAE4jK,KAAK,EAAE5jK,EAAEykK,MAAM,EAAEnS,GAAGoK,CAAC,CAAC,SAASrxD,EAAEtrG,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE85C,QAAO75C,EAAED,EAAE85C,OAAQspH,MAAM,EAAEnjK,EAAEojK,MAAM,EAAEpjK,EAAEqjK,MAAM,EAAElqK,EAAE4G,IAAI28J,CAAC,CAAC,SAASt5F,EAAErjE,EAAEC,GAAG,IAAItK,EAAE8sB,EAAE,OAAOziB,GAAGA,EAAE85C,OAAOr3B,EAAEziB,EAAE85C,MAAM75C,EAAE,GAAGtK,EAAE,EAAEsK,GAAGA,IAAItK,EAAS,GAANsK,GAAG,GAAKA,EAAE,KAAKA,GAAG,KAAKA,IAAIA,EAAE,GAAGA,EAAE,IAAI08J,GAAG,OAAOl6I,EAAErX,QAAQqX,EAAEwhJ,QAAQhkK,IAAIwiB,EAAErX,OAAO,MAAMqX,EAAEg6I,KAAK9mK,EAAE8sB,EAAEwhJ,MAAMhkK,EAAEqrG,EAAEtrG,KAAK28J,CAAC,CAAC,SAASl3J,EAAEzF,EAAEC,GAAG,IAAItK,EAAE8sB,EAAE,OAAOziB,GAAGyiB,EAAE,IAAIhmB,EAAEuD,EAAE85C,MAAMr3B,EAAEA,EAAErX,OAAO,MAAKzV,EAAE0tE,EAAErjE,EAAEC,MAAOsyJ,IAAIvyJ,EAAE85C,MAAM,MAAMnkD,GAAGgnK,CAAC,CAA8B,SAASl2J,EAAEzG,GAAG,GAAGqiK,GAAG,CAAC,IAAIpiK,EAAE,IAAI+Z,EAAE,IAAIhb,EAAE67J,MAAM,KAAK74J,EAAE,IAAIhD,EAAE67J,MAAM,IAAI56J,EAAE,EAAEA,EAAE,KAAKD,EAAEskK,KAAKrkK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEskK,KAAKrkK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEskK,KAAKrkK,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEskK,KAAKrkK,KAAK,EAAE,IAAI8iE,EAAErZ,EAAE1pD,EAAEskK,KAAK,EAAE,IAAItqJ,EAAE,EAAEha,EAAEukK,KAAK,CAACf,KAAK,IAAIvjK,EAAE,EAAEA,EAAE,IAAID,EAAEskK,KAAKrkK,KAAK,EAAE8iE,EAAE+vF,EAAE9yJ,EAAEskK,KAAK,EAAE,GAAGtiK,EAAE,EAAEhC,EAAEukK,KAAK,CAACf,KAAK,IAAInB,IAAG,CAAE,CAACriK,EAAEyjK,QAAQzpJ,EAAEha,EAAE2jK,QAAQ,EAAE3jK,EAAE0jK,SAAS1hK,EAAEhC,EAAE4jK,SAAS,CAAC,CAAC,SAASl9J,EAAE1G,EAAEC,EAAEtK,EAAE8sB,GAAG,IAAIhmB,EAAErD,EAAE4G,EAAE85C,MAAM,OAAO,OAAO1gD,EAAEgS,SAAShS,EAAEgqK,MAAM,GAAGhqK,EAAE6qK,MAAM7qK,EAAEkqK,MAAM,EAAElqK,EAAEiqK,MAAM,EAAEjqK,EAAEgS,OAAO,IAAIpM,EAAE85J,KAAK1/J,EAAEgqK,QAAQ3gJ,GAAGrpB,EAAEgqK,OAAOpkK,EAAEs7J,SAASlhK,EAAEgS,OAAOnL,EAAEtK,EAAEyD,EAAEgqK,MAAMhqK,EAAEgqK,MAAM,GAAGhqK,EAAEkqK,MAAM,EAAElqK,EAAEiqK,MAAMjqK,EAAEgqK,SAAQ3mK,EAAErD,EAAEgqK,MAAMhqK,EAAEkqK,OAAQ7gJ,IAAIhmB,EAAEgmB,GAAGzjB,EAAEs7J,SAASlhK,EAAEgS,OAAOnL,EAAEtK,EAAE8sB,EAAEhmB,EAAErD,EAAEkqK,QAAO7gJ,GAAGhmB,IAAKuC,EAAEs7J,SAASlhK,EAAEgS,OAAOnL,EAAEtK,EAAE8sB,EAAEA,EAAE,GAAGrpB,EAAEkqK,MAAM7gJ,EAAErpB,EAAEiqK,MAAMjqK,EAAEgqK,QAAQhqK,EAAEkqK,OAAO7mK,EAAErD,EAAEkqK,QAAQlqK,EAAEgqK,QAAQhqK,EAAEkqK,MAAM,GAAGlqK,EAAEiqK,MAAMjqK,EAAEgqK,QAAQhqK,EAAEiqK,OAAO5mK,KAAK,CAAC,CAC78sB,IAAIud,EAAEhY,EAAEhD,EAAEgB,EAAE,mBAAmB+uB,EAAE/uB,EAAE,aAAa4pE,EAAE5pE,EAAE,WAAWwF,EAAExF,EAAE,aAAa+iE,EAAE/iE,EAAE,cAAcV,EAAE,EAAEoqD,EAAE,EAAEopG,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAEH,EAAE,EAAER,EAAE,EAAES,EAAE,EAAE18J,EAAE,EAAEqmK,GAAG,EAAEC,GAAG,EAAEV,GAAG,EAAE8B,GAAG,EAAEsD,EAAE,EAAEnvK,EAAE,EAAEksK,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEC,EAAE,EAAEtrB,EAAE,EAAEuoB,EAAE,GAAGviI,EAAE,GAAGulI,EAAE,GAAGN,EAAE,GAAGO,EAAE,GAAGb,EAAE,GAAG3B,EAAE,GAAGxsC,EAAE,GAAGivC,EAAG,GAAGC,EAAG,GAAG8C,EAAG,GAAG7C,EAAG,GAAG3B,EAAG,GAAGT,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGS,GAAG,GAAGtC,GAAG,GAAGP,GAAG,GAAGH,GAAG,GAAG8E,GAAG,GAAGhB,GAAG,GAASkB,GAAG,IAAIC,GAAG,IAAUlB,GAAH,GAASoB,IAAG,EAAG1sK,EAAEkvK,aAAav5D,EAAE31G,EAAEmvK,cAAczhG,EAAE1tE,EAAEovK,iBAAiB3rK,EAAEzD,EAAEqvK,YADmyqB,SAAWhlK,GAAG,OAAOyF,EAAEzF,EAAEihK,GAAG,EACjzqBtrK,EAAE6jK,aAAa/zJ,EAAE9P,EAAEmkK,QAD+gsB,SAAW95J,EAAEC,GAAG,IAAItK,EAAE8G,EAAErD,EAAEkyG,EAAEjoC,EAAE59D,EAAEguB,EAAE+8F,EAAEj+E,GAAEr6B,GAAEhE,GAAE8F,GAAEhY,GAAEkgK,GAAGC,GAAGC,GAAGnB,GAAGoB,GAAGpE,GAAGQ,GAAGH,GAAGC,GAAG+D,GAAG2C,GAAGC,GAAG,EAAEC,GAAG,IAAInmK,EAAE85J,KAAK,GAAGsM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,IAAIplK,IAAIA,EAAE85C,QAAQ95C,EAAE64J,SAAS74J,EAAE04J,OAAO,IAAI14J,EAAE44J,SAAS,OAAO+D,GAAEhnK,EAAEqK,EAAE85C,OAAQuuB,OAAOs5F,IAAIhsK,EAAE0yE,KAAKg5F,GAAGh+F,EAAErjE,EAAE+4J,SAAS3/J,EAAE4G,EAAE64J,OAAOplI,EAAEzzB,EAAEm4J,UAAU7sD,EAAEtrG,EAAE24J,QAAQl8J,EAAEuD,EAAE04J,MAAMjzJ,EAAEzF,EAAE44J,SAASpoC,EAAE76H,EAAE4tK,KAAKhxH,GAAE58C,EAAE6tK,KAAKtrJ,GAAEzS,EAAEyO,GAAEuf,EAAE8qI,GAAGhM,EAAEvyJ,EAAE,OAAO,OAAOrK,EAAE0yE,MAAM,KAAKl2E,EAAE,GAAG,IAAIwD,EAAE8mK,KAAK,CAAC9mK,EAAE0yE,KAAKg5F,EAAE,KAAK,CAAC,KAAK9uH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAG,EAAE58C,EAAE8mK,MAAM,QAAQjsC,EAAE,CAAC76H,EAAEquK,MAAM,EAAEmB,GAAG,GAAG,IAAI30C,EAAE20C,GAAG,GAAG30C,IAAI,EAAE,IAAI76H,EAAEquK,MAAMp6F,EAAEj0E,EAAEquK,MAAMmB,GAAG,EAAE,GAAG30C,EAAE,EAAEj+E,GAAE,EAAE58C,EAAE0yE,KAAKg2F,EAAE,KAAK,CAAC,GAAG1oK,EAAEouK,MAAM,EAAEpuK,EAAEtC,OAAOsC,EAAEtC,KAAK8uI,MAAK,KAAM,EAAExsI,EAAE8mK,UAAU,IAAIjsC,IAAI,IAAIA,GAAG,IAAI,GAAG,CAACxwH,EAAEmR,IAAI,yBAAyBxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC,IAAI,GAAGxxC,KAAK8wC,EAAE,CAACthK,EAAEmR,IAAI,6BAA6Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC,GAAUzvH,IAAG,EAAE+rH,GAAU,GAAN,IAAhB9tC,KAAK,IAAmB,IAAI76H,EAAEsuK,MAAMtuK,EAAEsuK,MAAM3F,QAAQ,GAAGA,GAAG3oK,EAAEsuK,MAAM,CAACjkK,EAAEmR,IAAI,sBAAsBxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACrsK,EAAEwtK,KAAK,GAAG7E,GAAGt+J,EAAE08J,MAAM/mK,EAAEquK,MAAM,EAAEruK,EAAE0yE,KAAK,IAAImoD,EAAEmuC,EAAEgD,EAAEnxC,EAAE,EAAEj+E,GAAE,EAAE,MAAM,KAAK8rH,EAAE,KAAK9rH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAG58C,EAAEouK,MAAMvzC,GAAG,IAAI76H,EAAEouK,SAASzC,EAAE,CAACthK,EAAEmR,IAAI,6BAA6Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC,GAAG,MAAMrsK,EAAEouK,MAAM,CAAC/jK,EAAEmR,IAAI,2BAA2Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACrsK,EAAEtC,OAAOsC,EAAEtC,KAAKoN,KAAK+vH,GAAG,EAAE,GAAG,IAAI76H,EAAEouK,QAAQoB,GAAG,GAAG,IAAI30C,EAAE20C,GAAG,GAAG30C,IAAI,EAAE,IAAI76H,EAAEquK,MAAMp6F,EAAEj0E,EAAEquK,MAAMmB,GAAG,EAAE,IAAI30C,EAAE,EAAEj+E,GAAE,EAAE58C,EAAE0yE,KAAKk5F,EAAE,KAAKA,EAAE,KAAKhvH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC58C,EAAEtC,OAAOsC,EAAEtC,KAAKuvK,KAAKpyC,GAAG,IAAI76H,EAAEouK,QAAQoB,GAAG,GAAG,IAAI30C,EAAE20C,GAAG,GAAG30C,IAAI,EAAE,IAAI20C,GAAG,GAAG30C,IAAI,GAAG,IAAI20C,GAAG,GAAG30C,IAAI,GAAG,IAAI76H,EAAEquK,MAAMp6F,EAAEj0E,EAAEquK,MAAMmB,GAAG,EAAE,IAAI30C,EAAE,EAAEj+E,GAAE,EAAE58C,EAAE0yE,KAAK84F,EAAE,KAAKA,EAAE,KAAK5uH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GACzw+BA,IAAG,CAAC,CAAC58C,EAAEtC,OAAOsC,EAAEtC,KAAK4vK,OAAO,IAAIzyC,EAAE76H,EAAEtC,KAAKwvK,GAAGryC,GAAG,GAAG,IAAI76H,EAAEouK,QAAQoB,GAAG,GAAG,IAAI30C,EAAE20C,GAAG,GAAG30C,IAAI,EAAE,IAAI76H,EAAEquK,MAAMp6F,EAAEj0E,EAAEquK,MAAMmB,GAAG,EAAE,IAAI30C,EAAE,EAAEj+E,GAAE,EAAE58C,EAAE0yE,KAAKm5F,EAAE,KAAKA,EAAE,GAAG,KAAK7rK,EAAEouK,MAAM,CAAC,KAAKxxH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC58C,EAAE4C,OAAOi4H,EAAE76H,EAAEtC,OAAOsC,EAAEtC,KAAK6vK,UAAU1yC,GAAG,IAAI76H,EAAEouK,QAAQoB,GAAG,GAAG,IAAI30C,EAAE20C,GAAG,GAAG30C,IAAI,EAAE,IAAI76H,EAAEquK,MAAMp6F,EAAEj0E,EAAEquK,MAAMmB,GAAG,EAAE,IAAI30C,EAAE,EAAEj+E,GAAE,CAAC,MAAM58C,EAAEtC,OAAOsC,EAAEtC,KAAKsvK,MAAM,MAAMhtK,EAAE0yE,KAAK+4F,EAAE,KAAKA,EAAE,GAAG,KAAKzrK,EAAEouK,SAAQ/pJ,GAAErkB,EAAE4C,QAASkN,IAAIuU,GAAEvU,GAAGuU,KAAIrkB,EAAEtC,OAAOirK,GAAG3oK,EAAEtC,KAAK6vK,UAAUvtK,EAAE4C,OAAO5C,EAAEtC,KAAKsvK,QAAQhtK,EAAEtC,KAAKsvK,MAAM,IAAIpjK,MAAM5J,EAAEtC,KAAK6vK,YAAYlkK,EAAEs7J,SAAS3kK,EAAEtC,KAAKsvK,MAAMlmK,EAAE6uG,EAAEtxF,GAAEskJ,KAAK,IAAI3oK,EAAEouK,QAAQpuK,EAAEquK,MAAMp6F,EAAEj0E,EAAEquK,MAAMvnK,EAAEud,GAAEsxF,IAAI7lG,GAAGuU,GAAEsxF,GAAGtxF,GAAErkB,EAAE4C,QAAQyhB,IAAGrkB,EAAE4C,QAAQ,MAAMyH,EAAErK,EAAE4C,OAAO,EAAE5C,EAAE0yE,KAAKo5F,EAAE,KAAKA,EAAE,GAAG,KAAK9rK,EAAEouK,MAAM,CAAC,GAAG,IAAIt+J,EAAE,MAAMzF,EAAEga,GAAE,EAAE,GAAGskJ,GAAG7hK,EAAE6uG,EAAEtxF,MAAKrkB,EAAEtC,MAAMirK,IAAI3oK,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAKkG,MAAM+T,OAAOghI,aAAagwB,WAAWA,IAAItkJ,GAAEvU,GAAG,GAAG,IAAI9P,EAAEouK,QAAQpuK,EAAEquK,MAAMp6F,EAAEj0E,EAAEquK,MAAMvnK,EAAEud,GAAEsxF,IAAI7lG,GAAGuU,GAAEsxF,GAAGtxF,GAAEskJ,GAAG,MAAMt+J,CAAC,MAAMrK,EAAEtC,OAAOsC,EAAEtC,KAAKkG,KAAK,MAAM5D,EAAE4C,OAAO,EAAE5C,EAAE0yE,KAAKq5F,EAAE,KAAKA,EAAE,GAAG,KAAK/rK,EAAEouK,MAAM,CAAC,GAAG,IAAIt+J,EAAE,MAAMzF,EAAEga,GAAE,EAAE,GAAGskJ,GAAG7hK,EAAE6uG,EAAEtxF,MAAKrkB,EAAEtC,MAAMirK,IAAI3oK,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAK6nH,SAAS5tG,OAAOghI,aAAagwB,WAAWA,IAAItkJ,GAAEvU,GAAG,GAAG,IAAI9P,EAAEouK,QAAQpuK,EAAEquK,MAAMp6F,EAAEj0E,EAAEquK,MAAMvnK,EAAEud,GAAEsxF,IAAI7lG,GAAGuU,GAAEsxF,GAAGtxF,GAAEskJ,GAAG,MAAMt+J,CAAC,MAAMrK,EAAEtC,OAAOsC,EAAEtC,KAAK6nH,QAAQ,MAAMvlH,EAAE0yE,KAAK+tE,EAAE,KAAKA,EAAE,GAAG,IAAIzgJ,EAAEouK,MAAM,CAAC,KAAKxxH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAGi+E,KAAK,MAAM76H,EAAEquK,OAAO,CAAChkK,EAAEmR,IAAI,sBAAsBxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACxxC,EAAE,EAAEj+E,GAAE,CAAC,CAAC58C,EAAEtC,OAAOsC,EAAEtC,KAAKqvK,KAAK/sK,EAAEouK,OAAO,EAAE,EAAEpuK,EAAEtC,KAAK8uI,MAAK,GAAIniI,EAAE08J,MAAM/mK,EAAEquK,MAAM,EAAEruK,EAAE0yE,KAAKs5F,EAAE,MAAM,KAAKhD,EAAE,KAAKpsH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAACvyC,EAAE08J,MAAM/mK,EAAEquK,MAAMvhJ,EAAE+tG,GAAGA,EAAE,EAAEj+E,GAAE,EAAE58C,EAAE0yE,KAAKjsC,EAAE,KAAKA,EAAE,GAAG,IAAIzmC,EAAEmuK,SAAS,OAAO9jK,EAAE+4J,SAAS11F,EAAErjE,EAAEm4J,UAAU1kI,EAAEzzB,EAAE24J,QAAQrtD,EAAEtrG,EAAE44J,SAASnzJ,EAAE9P,EAAE4tK,KAAK/yC,EAAE76H,EAAE6tK,KAAKjxH,GAAEj8C,EAAE0J,EAAE08J,MAAM/mK,EAAEquK,MAAM,EAAEruK,EAAE0yE,KAAKs5F,EAAE,KAAKA,EAAE,GAAG1hK,IAAIizJ,GAAGjzJ,IAAI8yJ,EAAE,MAAM/yJ,EAAE,KAAKqhK,EAAE,GAAG1rK,EAAE+kJ,KAAK,CAAClqB,KAAK,EAAEj+E,GAAEA,IAAG,EAAEA,GAAE58C,EAAE0yE,KAAKu1F,GAAG,KAAK,CAAC,KAAKrrH,GAAE,GAAG,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,OAAO58C,EAAE+kJ,KAAK,EAAElqB,EAASj+E,IAAG,EAAE,GAAZi+E,KAAK,IAAY,KAAK,EAAE76H,EAAE0yE,KAAKu5F,EAAE,MAAM,KAAK,EAAE,GAAGn7J,EAAE9Q,GAAGA,EAAE0yE,KAAKu8F,EAAG3kK,IAAI8yJ,EAAE,CAACviC,KAAK,EAAEj+E,IAAG,EAAE,MAAMvyC,CAAC,CAAC,MAAM,KAAK,EAAErK,EAAE0yE,KAAKuqD,EAAE,MAAM,KAAK,EAAE5yH,EAAEmR,IAAI,qBAAqBxb,EAAE0yE,KAAK25F,GAAGxxC,KAAK,EAAEj+E,IAAG,EAAE,MAAM,KAAKqvH,EAAE,IAAIpxC,KAAK,EAAEj+E,GAAEA,IAAG,EAAEA,GAAEA,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,IAAI,MAAMi+E,KAAMA,IAAI,GAAG,OAAO,CAACxwH,EAAEmR,IAAI,+BAA+Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC,GAAGrsK,EAAE4C,OAAO,MAAMi4H,EAAEA,EAAE,EAAEj+E,GAAE,EAAE58C,EAAE0yE,KAAK04F,EAAE9gK,IAAI8yJ,EAAE,MAAM/yJ,EAAE,KAAK+gK,EAAEprK,EAAE0yE,KAAK+2F,EAAE,KAAKA,EAAE,GAAGplJ,GAAErkB,EAAE4C,OAAO,CAAC,GAAGyhB,GAAEvU,IAAIuU,GAAEvU,GAAGuU,GAAEyZ,IAAIzZ,GAAEyZ,GAAG,IAAIzZ,GAAE,MAAMha,EAAEhB,EAAEs7J,SAASlhK,EAAEqD,EAAE6uG,EAAEtxF,GAAEqpD,GAAG59D,GAAGuU,GAAEsxF,GAAGtxF,GAAEyZ,GAAGzZ,GAAEqpD,GAAGrpD,GAAErkB,EAAE4C,QAAQyhB,GAAE,KAAK,CAACrkB,EAAE0yE,KAAKs5F,EAAE,MAAM,KAAK/uC,EAAE,KAAKrgF,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAG58C,EAAEwuK,KAAY,KAAN,GAAG3zC,GAAOA,KAAK,EAAEj+E,IAAG,EAAE58C,EAAEyuK,MAAa,GAAN,GAAG5zC,GAAKA,KAAK,EAAEj+E,IAAG,EAAE58C,EAAEuuK,MAAa,GAAN,GAAG1zC,GAAKA,KAAK,EAAEj+E,IAAG,EAAE58C,EAAEwuK,KAAK,KAAKxuK,EAAEyuK,MAAM,GAAG,CAACpkK,EAAEmR,IAAI,sCAAsCxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACrsK,EAAE0uK,KAAK,EAAE1uK,EAAE0yE,KAAKw5F,EAAG,KAAKA,EAAG,KAAKlsK,EAAE0uK,KAAK1uK,EAAEuuK,OAAO,CAAC,KAAK3xH,GAAE,GAAG,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC58C,EAAE2uK,KAAKc,GAAGzvK,EAAE0uK,SAAS,EAAE7zC,EAAEA,KAAK,EAAEj+E,IAAG,CAAC,CAAC,KAAK58C,EAAE0uK,KAAK,IAAI1uK,EAAE2uK,KAAKc,GAAGzvK,EAAE0uK,SAAS,EAAE,GAAG1uK,EAAE8tK,QAAQ9tK,EAAE6uK,OAAO7uK,EAAEguK,QAAQ,EAAErB,GAAG,CAACkB,KAAK7tK,EAAEguK,SAASpF,GAAGx7F,EAAEzjE,EAAE3J,EAAE2uK,KAAK,EAAE,GAAG3uK,EAAE8tK,QAAQ,EAAE9tK,EAAE4uK,KAAKjC,IAAI3sK,EAAEguK,QAAQrB,GAAGkB,KAAKjF,GAAG,CAACv+J,EAAEmR,IAAI,2BAA2Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACrsK,EAAE0uK,KAAK,EAAE1uK,EAAE0yE,KAAKy5F,EAAG,KAAKA,EAAG,KAAKnsK,EAAE0uK,KAAK1uK,EAAEwuK,KAAKxuK,EAAEyuK,OAAO,CAAC,KAAiDhC,IAA5C8C,GAAGvvK,EAAE8tK,QAAQjzC,GAAG,GAAG76H,EAAEguK,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC3yH,KAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAG0uH,GAAG,GAAGzwC,KAAK2xC,GAAG5vH,IAAG4vH,GAAGxsK,EAAE2uK,KAAK3uK,EAAE0uK,QAAQpD,OAAO,CAAC,GAAG,KAAKA,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAE5vH,GAAE0yH,IAAI,CAAC,GAAG,IAAIx/J,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAGi+E,KAAK2xC,GAAG5vH,IAAG4vH,GAAG,IAAIxsK,EAAE0uK,KAAK,CAACrkK,EAAEmR,IAAI,4BAA4Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC1D,GAAG3oK,EAAE2uK,KAAK3uK,EAAE0uK,KAAK,GAAGrqJ,GAAE,GAAG,EAAEw2G,GAAGA,KAAK,EAAEj+E,IAAG,CAAC,MAAM,GAAG,KAAK0uH,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAE5vH,GAAE0yH,IAAI,CAAC,GAAG,IAAIx/J,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAASA,IAAG4vH,GAAG7D,GAAG,EAAEtkJ,GAAE,GAAG,GAAxBw2G,KAAK2xC,KAAwB3xC,KAAK,EAAEj+E,IAAG,CAAC,KAAK,CAAC,IAAI0yH,GAAG9C,GAAG,EAAE5vH,GAAE0yH,IAAI,CAAC,GAAG,IAAIx/J,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAASA,IAAG4vH,GAAG7D,GAAG,EAAEtkJ,GAAE,IAAI,KAAzBw2G,KAAK2xC,KAA2B3xC,KAAK,EAAEj+E,IAAG,CAAC,CAAC,GAAG58C,EAAE0uK,KAAKrqJ,GAAErkB,EAAEwuK,KAAKxuK,EAAEyuK,MAAM,CAACpkK,EAAEmR,IAAI,4BAA4Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC,KAAKhoJ,MAAKrkB,EAAE2uK,KAAK3uK,EAAE0uK,QAAQ/F,EAAE,CAAC,CAAC,GAAG3oK,EAAE0yE,OAAO25F,GAAG,MAAM,GAAG,IAAIrsK,EAAE2uK,KAAK,KAAK,CAACtkK,EAAEmR,IAAI,uCAAuCxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC,GAAGrsK,EAAEguK,QAAQ,EAAErB,GAAG,CAACkB,KAAK7tK,EAAEguK,SAASpF,GAAGx7F,EAAErZ,EAAE/zD,EAAE2uK,KAAK,EAAE3uK,EAAEwuK,KAAKxuK,EAAE8tK,QAAQ,EAAE9tK,EAAE4uK,KAAKjC,IAAI3sK,EAAEguK,QAAQrB,GAAGkB,KAAKjF,GAAG,CAACv+J,EAAEmR,IAAI,8BAA8Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC,GAAGrsK,EAAEiuK,SAAS,EAAEjuK,EAAE+tK,SAAS/tK,EAAE8uK,QAAQnC,GAAG,CAACkB,KAAK7tK,EAAEiuK,UAAUrF,GAAGx7F,EAAE+vF,EAAEn9J,EAAE2uK,KAAK3uK,EAAEwuK,KAAKxuK,EAAEyuK,MAAMzuK,EAAE+tK,SAAS,EAAE/tK,EAAE4uK,KAAKjC,IAAI3sK,EAAEiuK,SAAStB,GAAGkB,KAAKjF,GAAG,CAACv+J,EAAEmR,IAAI,wBAAwBxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAC,GAAGrsK,EAAE0yE,KAAKu8F,EAAG3kK,IAAI8yJ,EAAE,MAAM/yJ,EAAE,KAAK4kK,EAAGjvK,EAAE0yE,KAAK05F,EAAG,KAAKA,EAAG,GAAGt8J,GAAG,GAAGguB,GAAG,IAAI,CAACzzB,EAAE+4J,SAAS11F,EAAErjE,EAAEm4J,UAAU1kI,EAAEzzB,EAAE24J,QAAQrtD,EAAEtrG,EAAE44J,SAASnzJ,EAAE9P,EAAE4tK,KAAK/yC,EAAE76H,EAAE6tK,KAAKjxH,GAAE/sC,EAAExF,EAAEkU,IAAGmvD,EAAErjE,EAAE+4J,SAAS3/J,EAAE4G,EAAE64J,OAAOplI,EAAEzzB,EAAEm4J,UAAU7sD,EAAEtrG,EAAE24J,QAAQl8J,EAAEuD,EAAE04J,MAAMjzJ,EAAEzF,EAAE44J,SAASpoC,EAAE76H,EAAE4tK,KAAKhxH,GAAE58C,EAAE6tK,KAAK7tK,EAAE0yE,OAAOs5F,IAAIhsK,EAAE+uK,MAAM,GAAG,KAAK,CAAC,IAAI/uK,EAAE+uK,KAAK,EAA8CtC,IAA5C8C,GAAGvvK,EAAE8tK,QAAQjzC,GAAG,GAAG76H,EAAEguK,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC3yH,KAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAG6vH,IAAI,IAAK,IAAIA,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAsDmB,IAAnD8C,GAAGvvK,EAAE8tK,QAAQhF,KAAKjuC,GAAG,GAAG6xC,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuC3yH,KAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAACi+E,KAAK6xC,GAAG9vH,IAAG8vH,GAAG1sK,EAAE+uK,MAAMrC,EAAE,CAAC,GAAG7xC,KAAK2xC,GAAG5vH,IAAG4vH,GAAGxsK,EAAE+uK,MAAMvC,GAAGxsK,EAAE4C,OAAO0oK,GAAG,IAAImB,GAAG,CAACzsK,EAAE0yE,KAAK63F,GAAG,KAAK,CAAC,GAAG,GAAGkC,GAAG,CAACzsK,EAAE+uK,MAAM,EAAE/uK,EAAE0yE,KAAKs5F,EAAE,KAAK,CAAC,GAAG,GAAGS,GAAG,CAACpiK,EAAEmR,IAAI,8BAA8Bxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACrsK,EAAEgtK,MAAM,GAAGP,GAAGzsK,EAAE0yE,KAAK+3F,EAAG,KAAKA,EAAG,GAAGzqK,EAAEgtK,MAAM,CAAC,IAAIsC,GAAGtvK,EAAEgtK,MAAMpwH,GAAE0yH,IAAI,CAAC,GAAG,IAAIx/J,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC58C,EAAE4C,QAAQi4H,GAAG,GAAG76H,EAAEgtK,OAAO,EAAEnyC,KAAK76H,EAAEgtK,MAAMpwH,IAAG58C,EAAEgtK,MAAMhtK,EAAE+uK,MAAM/uK,EAAEgtK,KAAK,CAAChtK,EAAEgvK,IAAIhvK,EAAE4C,OAAO5C,EAAE0yE,KAAKs3F,GAAG,KAAKA,GAAG,KAAmDyC,IAA9C8C,GAAGvvK,EAAE+tK,SAASlzC,GAAG,GAAG76H,EAAEiuK,UAAU,MAAsB,GAAG,IAAI3C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoC3yH,KAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAG,IAAK,IAAI6vH,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAuDmB,IAApD8C,GAAGvvK,EAAE+tK,SAASjF,KAAKjuC,GAAG,GAAG6xC,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuC3yH,KAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAACi+E,KAAK6xC,GAAG9vH,IAAG8vH,GAAG1sK,EAAE+uK,MAAMrC,EAAE,CAAC,GAAG7xC,KAAK2xC,GAAG5vH,IAAG4vH,GAAGxsK,EAAE+uK,MAAMvC,GAAG,GAAGC,GAAG,CAACpiK,EAAEmR,IAAI,wBAAwBxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACrsK,EAAE02I,OAAO40B,GAAGtrK,EAAEgtK,MAAM,GAAGP,GAAGzsK,EAAE0yE,KAAKw3F,GAAG,KAAKA,GAAG,GAAGlqK,EAAEgtK,MAAM,CAAC,IAAIsC,GAAGtvK,EAAEgtK,MAAMpwH,GAAE0yH,IAAI,CAAC,GAAG,IAAIx/J,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC58C,EAAE02I,QAAQ7b,GAAG,GAAG76H,EAAEgtK,OAAO,EAAEnyC,KAAK76H,EAAEgtK,MAAMpwH,IAAG58C,EAAEgtK,MAAMhtK,EAAE+uK,MAAM/uK,EAAEgtK,KAAK,CAAC,GAAGhtK,EAAE02I,OAAO12I,EAAEwtK,KAAK,CAACnjK,EAAEmR,IAAI,gCAAgCxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACrsK,EAAE0yE,KAAKo3F,GAAG,KAAKA,GAAG,GAAG,IAAIhsI,EAAE,MAAMzzB,EAAE,GAAGga,GAAE9F,GAAEuf,EAAE99B,EAAE02I,OAAOryH,GAAE,CAAC,IAAGA,GAAErkB,EAAE02I,OAAOryH,IAAIrkB,EAAE0tK,OAAO1tK,EAAEkuK,KAAK,CAAC7jK,EAAEmR,IAAI,gCAAgCxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAAChoJ,GAAErkB,EAAE2tK,OAAOtpJ,IAAGrkB,EAAE2tK,MAAMthK,GAAErM,EAAEytK,MAAMppJ,IAAGhY,GAAErM,EAAE2tK,MAAMtpJ,GAAEA,GAAErkB,EAAE4C,SAASyhB,GAAErkB,EAAE4C,QAAQ2pK,GAAGvsK,EAAEyV,MAAM,MAAM82J,GAAG9oK,EAAE4I,GAAEqhE,EAAE1tE,EAAE02I,OAAOryH,GAAErkB,EAAE4C,OAAOyhB,GAAEyZ,IAAIzZ,GAAEyZ,GAAGA,GAAGzZ,GAAErkB,EAAE4C,QAAQyhB,GAAE,GAAG5gB,EAAEiqE,KAAK6+F,GAAGlgK,cAAagY,IAAG,IAAIrkB,EAAE4C,SAAS5C,EAAE0yE,KAAK05F,GAAI,MAAM,KAAK7B,GAAG,GAAG,IAAIzsI,EAAE,MAAMzzB,EAAE5G,EAAEiqE,KAAK1tE,EAAE4C,OAAOk7B,IAAI99B,EAAE0yE,KAAK05F,EAAG,MAAM,KAAKnE,GAAG,GAAGjoK,EAAE8mK,KAAK,CAAC,KAAKlqH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAGr+B,IAAGuf,EAAEzzB,EAAEq8J,WAAWnoJ,GAAEve,EAAE2hH,OAAOpjG,GAAEA,KAAIlU,EAAE08J,MAAM/mK,EAAEquK,MAAMruK,EAAEouK,MAAMn6F,EAAEj0E,EAAEquK,MAAM5qK,EAAE8a,GAAEmvD,EAAEnvD,IAAG6a,EAAEp5B,EAAEquK,MAAM5qK,EAAE8a,GAAEmvD,EAAEnvD,KAAIA,GAAEuf,GAAG99B,EAAEouK,MAAMvzC,EAAE/tG,EAAE+tG,MAAM76H,EAAEquK,MAAM,CAAChkK,EAAEmR,IAAI,uBAAuBxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACxxC,EAAE,EAAEj+E,GAAE,CAAC,CAAC58C,EAAE0yE,KAAKg1F,GAAG,KAAKA,GAAG,GAAG1nK,EAAE8mK,MAAM9mK,EAAEouK,MAAM,CAAC,KAAKxxH,GAAE,IAAI,CAAC,GAAG,IAAI9sC,EAAE,MAAMzF,EAAEyF,IAAI+qH,GAAG/zH,EAAE6uG,MAAM/4D,GAAEA,IAAG,CAAC,CAAC,GAAGi+E,KAAK,WAAW76H,EAAE2hH,OAAO,CAACt3G,EAAEmR,IAAI,yBAAyBxb,EAAE0yE,KAAK25F,GAAG,KAAK,CAACxxC,EAAE,EAAEj+E,GAAE,CAAC,CAAC58C,EAAE0yE,KAAK60F,GAAG,KAAKA,GAAGqB,GAAGvL,EAAE,MAAMhzJ,EAAE,KAAKgiK,GAAGzD,GAAG3B,EAAE,MAAM58J,EAAE,KAAKghK,GAAG,OAAO9E,EAAU,QAAQ,OAAOS,EAAE,OAAO38J,EAAE+4J,SAAS11F,EAAErjE,EAAEm4J,UAAU1kI,EAAEzzB,EAAE24J,QAAQrtD,EAAEtrG,EAAE44J,SAASnzJ,EAAE9P,EAAE4tK,KAAK/yC,EAAE76H,EAAE6tK,KAAKjxH,IAAG58C,EAAEytK,OAAOlvJ,KAAIlU,EAAEm4J,WAAWxiK,EAAE0yE,KAAK25F,KAAKrsK,EAAE0yE,KAAKu1F,IAAI39J,IAAIgzJ,KAAKvsJ,EAAE1G,EAAEA,EAAE64J,OAAO74J,EAAE+4J,SAAS7kJ,GAAElU,EAAEm4J,YAAYxiK,EAAE0yE,KAAK24F,GAAG9E,IAAIhkJ,IAAGlY,EAAE44J,SAAS1kJ,IAAGlU,EAAEm4J,UAAUn4J,EAAE68J,UAAU3kJ,GAAElY,EAAEq8J,WAAWnoJ,GAAEve,EAAE2hH,OAAOpjG,GAAEve,EAAE8mK,MAAMvoJ,KAAIlU,EAAE08J,MAAM/mK,EAAEquK,MAAMruK,EAAEouK,MAAMn6F,EAAEj0E,EAAEquK,MAAM5qK,EAAE8a,GAAElU,EAAE+4J,SAAS7kJ,IAAG6a,EAAEp5B,EAAEquK,MAAM5qK,EAAE8a,GAAElU,EAAE+4J,SAAS7kJ,KAAIlU,EAAE8gK,UAAUnrK,EAAE6tK,MAAM7tK,EAAE+kJ,KAAK,GAAG,IAAI/kJ,EAAE0yE,OAAOs5F,EAAE,IAAI,IAAIhsK,EAAE0yE,OAAOu8F,GAAIjvK,EAAE0yE,OAAO04F,EAAE,IAAI,IAAI,IAAI7oJ,IAAG,IAAIhE,IAAGjU,IAAIgzJ,IAAIsL,KAAKhM,IAAIgM,GAAGP,GAAGO,GAAG,EAAs0B5oK,EAAE4kK,WAAv0B,SAAWv6J,GAAG,IAAIA,IAAIA,EAAE85C,MAAM,OAAO6iH,EAAE,IAAI18J,EAAED,EAAE85C,MAAM,OAAO75C,EAAEmL,SAASnL,EAAEmL,OAAO,MAAMpL,EAAE85C,MAAM,KAAKy4G,CAAC,EAAgvB58J,EAAE+jK,iBAAjvB,SAAW15J,EAAEC,GAAG,IAAItK,EAAE,OAAOqK,GAAGA,EAAE85C,MAAiB,IAAK,GAAfnkD,EAAEqK,EAAE85C,OAAe2iH,MAAME,GAAGhnK,EAAEtC,KAAK4M,EAAEA,EAAEkiI,MAAK,EAAGowB,GAAIoK,CAAC,EAAuqBhnK,EAAEqkK,qBAAxqB,SAAWh6J,EAAEC,GAAG,IAAItK,EAAMyD,EAAE6G,EAAE1H,OAAO,OAAOyH,GAAGA,EAAE85C,MAAiB,KAAVnkD,EAAEqK,EAAE85C,OAAY2iH,MAAM9mK,EAAE0yE,OAAOjsC,EAAEugI,EAAEhnK,EAAE0yE,OAAOjsC,GAAUrN,EAAJ,EAAQ9uB,EAAE7G,EAAE,KAAOzD,EAAEquK,MAAOpH,EAAKl2J,EAAE1G,EAAEC,EAAE7G,EAAEA,IAAKzD,EAAE0yE,KAAK24F,GAAG9E,IAAIvmK,EAAEmuK,SAAS,EAAEvR,GAAIoK,CAAC,EAAugBhnK,EAAE0vK,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,YAAY,GAAG,aAAa,KAAK,GAAG,CAAC,SAASrlK,EAAEC,EAAEtK,GAAG,aAAa,IAAI8sB,EAAEziB,EAAE,mBAAmBvD,EAAE,GAA2BgK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAGC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI8pH,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,EAAE,GAAGj+E,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAItyC,EAAEnO,QAAQ,SAASkO,EAAEC,EAAEtK,EAAEuiB,EAAEhE,EAAE8F,EAAEhY,EAAEhD,GAAG,IAAI+vB,EAAE66C,EAAEpkE,EAAEu9D,EAAEzjE,EAAEoqD,EAAEopG,EAAEG,EAAEC,EAAEH,EAAE/zJ,EAAEwkK,KAAKjR,EAAE,EAAES,EAAE,EAAE18J,EAAE,EAAEqmK,EAAE,EAAEC,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAEnvK,EAAE,EAAEksK,EAAE,EAAEkD,EAAE,KAAKJ,EAAE,EAAEK,EAAE,IAAI/+I,EAAEm4I,MAAMn+J,IAAK2kK,EAAE,IAAI3+I,EAAEm4I,MAAMn+J,IAAKglK,EAAE,KAAKC,EAAE,EAAE,IAAInP,EAAE,EAAEA,GAAG91J,EAAE81J,IAAIiP,EAAEjP,GAAG,EAAE,IAAIS,EAAE,EAAEA,EAAE96I,EAAE86I,IAAIwO,EAAEvhK,EAAEtK,EAAEq9J,MAAM,IAAI4J,EAAE7J,EAAE4J,EAAElgK,EAAEkgK,GAAG,GAAG,IAAI6E,EAAE7E,GAAGA,KAAK,GAAGC,EAAED,IAAIC,EAAED,GAAG,IAAIA,EAAE,OAAOzoJ,EAAE8F,KAAK,SAAS9F,EAAE8F,KAAK,SAAShb,EAAEwkK,KAAK,EAAE,EAAE,IAAIltK,EAAE,EAAEA,EAAEqmK,GAAG,IAAI6E,EAAElrK,GAAGA,KAAK,IAAIsmK,EAAEtmK,IAAIsmK,EAAEtmK,GAAGgrK,EAAE,EAAE/O,EAAE,EAAEA,GAAG91J,EAAE81J,IAAI,GAAG+O,IAAI,GAAEA,GAAGE,EAAEjP,IAAK,EAAE,OAAO,EAAE,GAAG+O,EAAE,IAAp0B,IAAw0BthK,GAAO,IAAI28J,GAAG,OAAO,EAAE,IAAIyE,EAAE,GAAG,EAAE7O,EAAE,EAAEA,EAAE91J,EAAE81J,IAAI6O,EAAE7O,EAAE,GAAG6O,EAAE7O,GAAGiP,EAAEjP,GAAG,IAAIS,EAAE,EAAEA,EAAE96I,EAAE86I,IAAI,IAAI/yJ,EAAEtK,EAAEq9J,KAAKhxJ,EAAEo/J,EAAEnhK,EAAEtK,EAAEq9J,OAAOA,GAAG,GAAt7B,IAAy7BhzJ,GAAOuhK,EAAEE,EAAEz/J,EAAE0nD,EAAE,IAAp8B,IAAw8B1pD,GAAOuhK,EAAE96J,EAAE06J,GAAG,IAAIM,EAAE/6J,EAAEg7J,GAAG,IAAIh4G,EAAE,MAAM63G,EAAE/wC,EAAEixC,EAAElvH,EAAEmX,GAAG,GAAG20G,EAAE,EAAErL,EAAE,EAAET,EAAEj8J,EAAEgJ,EAAE0a,EAAEkiJ,EAAEU,EAAEoB,EAAE,EAAEx4J,GAAG,EAASu9D,GAAP5wE,EAAE,GAAGyqK,GAAM,EAAniC,IAAqiC58J,GAAO7N,EAA5jC,KAAoB,IAA6iC6N,GAAO7N,EAAlkC,IAAskC,OAAO,EAAE,OAAc,CAAK2gK,EAAEP,EAAEyL,EAAEh8J,EAAEgxJ,GAAGtpG,GAAGupG,EAAE,EAAEC,EAAElxJ,EAAEgxJ,IAAIhxJ,EAAEgxJ,GAAGtpG,GAAGupG,EAAEwO,EAAEC,EAAE1/J,EAAEgxJ,IAAIE,EAAEqO,EAAEJ,EAAEn/J,EAAEgxJ,MAAMC,EAAE,GAAGC,EAAE,GAAGnkI,EAAE,GAAGwjI,EAAEyL,EAAS1nK,EAAPszE,EAAE,GAAGsyF,EAAM,GAAQhoJ,EAAE5U,GAAG++J,GAAGL,IAAbp0F,GAAG76C,IAAgB+jI,GAAG,GAAGG,GAAG,GAAGC,EAAE,QAAQ,IAAItpF,GAAG,IAAI76C,EAAE,GAAGwjI,EAAE,EAAE8L,EAAEtvI,GAAGA,IAAI,EAAE,GAAG,IAAIA,GAAGsvI,GAAGtvI,EAAE,EAAEsvI,GAAGtvI,GAAGsvI,EAAE,EAAErL,IAAI,KAAMwO,EAAEjP,GAAG,CAAC,GAAGA,IAAIoK,EAAE,MAAMpK,EAAEtyJ,EAAEtK,EAAEqM,EAAEgxJ,GAAG,CAAC,GAAGT,EAAEqK,IAAIyB,EAAEt7F,KAAKv9D,EAAE,CAAC,IAAI,IAAIw4J,IAAIA,EAAEpB,GAAGt9J,GAAGhJ,EAAQgrK,EAAE,IAARpF,EAAE3J,EAAEyL,GAAS9B,EAAE8B,EAAErB,MAAI2E,GAAGE,EAAEtF,EAAE8B,KAAQ,IAAK9B,IAAIoF,IAAI,EAAE,GAAGnvK,GAAG,GAAG+pK,EAAx6C,IAA06Cl8J,GAAO7N,EAAj8C,KAAoB,IAAk7C6N,GAAO7N,EAAv8C,IAA28C,OAAO,EAAQ+hB,EAAN1O,EAAE64J,EAAEt7F,GAAO65F,GAAG,GAAGV,GAAG,GAAG58J,EAAE0a,EAAE,CAAC,CAAC,CAAC,OAAO,IAAIqkJ,IAAInqJ,EAAE5U,EAAE++J,GAAG9L,EAAEyL,GAAG,GAAG,IAAI,GAAG,GAAGh/J,EAAEwkK,KAAK5G,EAAE,CAAC,CAAC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAAS58J,EAAEC,EAAEtK,GAAG,aAAasK,EAAEnO,QAAQ,CAAC,EAAE,kBAAkB,EAAE,aAAa,EAAE,GAAG,KAAK,aAAa,KAAK,eAAe,KAAK,aAAa,KAAK,sBAAsB,KAAK,eAAe,KAAK,uBAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASkO,EAAEC,EAAEtK,GAAG,aAAa,SAAS8sB,EAAEziB,GAAG,IAAI,IAAIC,EAAED,EAAEzH,SAAS0H,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAASxD,EAAEuD,EAAEC,EAAEtK,EAAE8sB,EAAEhmB,GAAGrK,KAAKkzK,YAAYtlK,EAAE5N,KAAKmzK,WAAWtlK,EAAE7N,KAAKozK,WAAW7vK,EAAEvD,KAAK48H,MAAMvsG,EAAErwB,KAAK8qF,WAAWzgF,EAAErK,KAAKqzK,UAAUzlK,GAAGA,EAAEzH,MAAM,CAAC,SAASa,EAAE4G,EAAEC,GAAG7N,KAAKszK,SAAS1lK,EAAE5N,KAAKuzK,SAAS,EAAEvzK,KAAKwzK,UAAU3lK,CAAC,CAAC,SAASqrG,EAAEtrG,GAAG,OAAOA,EAAE,IAAIkgK,EAAGlgK,GAAGkgK,EAAG,KAAKlgK,IAAI,GAAG,CAAC,SAASqjE,EAAErjE,EAAEC,GAAGD,EAAEm8J,YAAYn8J,EAAE+R,WAAW,IAAI9R,EAAED,EAAEm8J,YAAYn8J,EAAE+R,WAAW9R,IAAI,EAAE,GAAG,CAAC,SAASwF,EAAEzF,EAAEC,EAAEtK,GAAGqK,EAAE6gK,SAASQ,EAAE1rK,GAAGqK,EAAE4gK,QAAQ3gK,GAAGD,EAAE6gK,SAAS,MAAMx9F,EAAErjE,EAAEA,EAAE4gK,QAAQ5gK,EAAE4gK,OAAO3gK,GAAGohK,EAAErhK,EAAE6gK,SAAS7gK,EAAE6gK,UAAUlrK,EAAE0rK,IAAIrhK,EAAE4gK,QAAQ3gK,GAAGD,EAAE6gK,SAAS,MAAM7gK,EAAE6gK,UAAUlrK,EAAE,CAAC,SAAS89B,EAAEzzB,EAAEC,EAAEtK,GAAG8P,EAAEzF,EAAErK,EAAE,EAAEsK,GAAGtK,EAAE,EAAEsK,EAAE,GAAG,CAAC,SAASwG,EAAEzG,EAAEC,GAAG,IAAItK,EAAE,EAAE,GAAGA,GAAG,EAAEqK,EAAEA,KAAK,EAAErK,IAAI,UAAUsK,EAAE,GAAG,OAAOtK,IAAI,CAAC,CAAo0B,SAAS48C,EAAEvyC,EAAEC,EAAEtK,GAAG,IAAI8sB,EAAEhmB,EAAErD,EAAE,IAAImG,MAAMoiK,EAAE,GAAGr2D,EAAE,EAAE,IAAI7oF,EAAE,EAAEA,GAAGk/I,EAAEl/I,IAAIrpB,EAAEqpB,GAAG6oF,EAAEA,EAAE31G,EAAE8sB,EAAE,IAAI,EAAE,IAAIhmB,EAAE,EAAEA,GAAGwD,EAAExD,IAAI,CAAC,IAAI4mE,EAAErjE,EAAE,EAAEvD,EAAE,GAAG,IAAI4mE,IAAIrjE,EAAE,EAAEvD,GAAGgK,EAAErN,EAAEiqE,KAAKA,GAAG,CAAC,CAAwiB,SAASnvD,EAAElU,GAAG,IAAIC,EAAE,IAAIA,EAAE,EAAEA,EAAEyhK,EAAEzhK,IAAID,EAAEw/J,UAAU,EAAEv/J,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAEm2I,EAAEn2I,IAAID,EAAE0/J,UAAU,EAAEz/J,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAE0+J,EAAE1+J,IAAID,EAAE4/J,QAAQ,EAAE3/J,GAAG,EAAED,EAAEw/J,UAAU,EAAEuB,GAAG,EAAE/gK,EAAE0gK,QAAQ1gK,EAAE2gK,WAAW,EAAE3gK,EAAEw+J,SAASx+J,EAAEi0I,QAAQ,CAAC,CAAC,SAASj6H,EAAEha,GAAGA,EAAE6gK,SAAS,EAAEx9F,EAAErjE,EAAEA,EAAE4gK,QAAQ5gK,EAAE6gK,SAAS,IAAI7gK,EAAEm8J,YAAYn8J,EAAE+R,WAAW/R,EAAE4gK,QAAQ5gK,EAAE4gK,OAAO,EAAE5gK,EAAE6gK,SAAS,CAAC,CAA4G,SAAS7hK,EAAEgB,EAAEC,EAAEtK,EAAE8sB,GAAG,IAAIhmB,EAAE,EAAEwD,EAAE7G,EAAE,EAAEzD,EAAE,OAAOqK,EAAEvD,GAAGuD,EAAE5G,IAAI4G,EAAEvD,KAAKuD,EAAE5G,IAAIqpB,EAAExiB,IAAIwiB,EAAE9sB,EAAE,CAAC,SAASo5B,EAAE/uB,EAAEC,EAAEtK,GAAG,IAAI,IAAI8sB,EAAEziB,EAAEmgK,KAAKxqK,GAAG8G,EAAE9G,GAAG,EAAE8G,GAAGuD,EAAEqgK,WAAW5jK,EAAEuD,EAAEqgK,UAAUrhK,EAAEiB,EAAED,EAAEmgK,KAAK1jK,EAAE,GAAGuD,EAAEmgK,KAAK1jK,GAAGuD,EAAE8yE,QAAQr2E,KAAKuC,EAAEiB,EAAEwiB,EAAEziB,EAAEmgK,KAAK1jK,GAAGuD,EAAE8yE,SAAS9yE,EAAEmgK,KAAKxqK,GAAGqK,EAAEmgK,KAAK1jK,GAAG9G,EAAE8G,EAAEA,IAAI,EAAEuD,EAAEmgK,KAAKxqK,GAAG8sB,CAAC,CAAC,SAASmnD,EAAE5pE,EAAEC,EAAEtK,GAAG,IAAI8sB,EAAEhmB,EAAErD,EAAEiqE,EAAE58D,EAAE,EAAE,GAAG,IAAIzG,EAAEw+J,SAAS,GAAG/7I,EAAEziB,EAAEm8J,YAAYn8J,EAAEygK,MAAM,EAAEh6J,IAAI,EAAEzG,EAAEm8J,YAAYn8J,EAAEygK,MAAM,EAAEh6J,EAAE,GAAGhK,EAAEuD,EAAEm8J,YAAYn8J,EAAEugK,MAAM95J,GAAGA,IAAI,IAAIgc,EAAEgR,EAAEzzB,EAAEvD,EAAEwD,IAAYwzB,EAAEzzB,GAAV5G,EAAEwkK,EAAGnhK,IAASglK,EAAE,EAAExhK,GAAW,KAARojE,EAAEy+F,EAAG1oK,KAAoBqM,EAAEzF,EAAXvD,GAAG4gK,EAAGjkK,GAASiqE,GAAe5vC,EAAEzzB,EAAT5G,EAAEkyG,IAAN7oF,GAAiB9sB,GAAW,KAAR0tE,EAAEuhG,EAAGxrK,KAAoBqM,EAAEzF,EAAXyiB,GAAGy6I,EAAG9jK,GAASiqE,UAAW58D,EAAEzG,EAAEw+J,UAAU/qI,EAAEzzB,EAAE+gK,EAAE9gK,EAAE,CAAC,SAASuF,EAAExF,EAAEC,GAAG,IAAItK,EAAE8sB,EAAEhmB,EAAErD,EAAE6G,EAAEylK,SAASp6D,EAAErrG,EAAE2lK,UAAUN,YAAYjiG,EAAEpjE,EAAE2lK,UAAUH,UAAUhgK,EAAExF,EAAE2lK,UAAU52C,MAAMv7F,GAAG,EAAE,IAAIzzB,EAAEqgK,SAAS,EAAErgK,EAAEsgK,SAASlkI,EAAEzmC,EAAE,EAAEA,EAAE8P,EAAE9P,IAAI,IAAIyD,EAAE,EAAEzD,IAAIqK,EAAEmgK,OAAOngK,EAAEqgK,UAAU5sI,EAAE99B,EAAEqK,EAAE8yE,MAAMn9E,GAAG,GAAGyD,EAAE,EAAEzD,EAAE,GAAG,EAAE,KAAKqK,EAAEqgK,SAAS,GAAoCjnK,EAAE,GAAnCqD,EAAEuD,EAAEmgK,OAAOngK,EAAEqgK,UAAU5sI,EAAE,IAAIA,EAAE,IAAS,EAAEzzB,EAAE8yE,MAAMr2E,GAAG,EAAEuD,EAAE0gK,UAAUr9F,IAAIrjE,EAAE2gK,YAAYr1D,EAAE,EAAE7uG,EAAE,IAAI,IAAIwD,EAAE0lK,SAASlyI,EAAE99B,EAAEqK,EAAEqgK,UAAU,EAAE1qK,GAAG,EAAEA,IAAIo5B,EAAE/uB,EAAE5G,EAAEzD,GAAG8G,EAAEgJ,EAAE,GAAG9P,EAAEqK,EAAEmgK,KAAK,GAAGngK,EAAEmgK,KAAK,GAAGngK,EAAEmgK,KAAKngK,EAAEqgK,YAAYtxI,EAAE/uB,EAAE5G,EAAE,GAAGqpB,EAAEziB,EAAEmgK,KAAK,GAAGngK,EAAEmgK,OAAOngK,EAAEsgK,UAAU3qK,EAAEqK,EAAEmgK,OAAOngK,EAAEsgK,UAAU79I,EAAErpB,EAAE,EAAEqD,GAAGrD,EAAE,EAAEzD,GAAGyD,EAAE,EAAEqpB,GAAGziB,EAAE8yE,MAAMr2E,IAAIuD,EAAE8yE,MAAMn9E,IAAIqK,EAAE8yE,MAAMrwD,GAAGziB,EAAE8yE,MAAMn9E,GAAGqK,EAAE8yE,MAAMrwD,IAAI,EAAErpB,EAAE,EAAEzD,EAAE,GAAGyD,EAAE,EAAEqpB,EAAE,GAAGhmB,EAAEuD,EAAEmgK,KAAK,GAAG1jK,IAAIsyB,EAAE/uB,EAAE5G,EAAE,SAAS4G,EAAEqgK,UAAU,GAAGrgK,EAAEmgK,OAAOngK,EAAEsgK,UAAUtgK,EAAEmgK,KAAK,GAAv9F,SAAWngK,EAAEC,GAAG,IAAItK,EAAE8sB,EAAEhmB,EAAErD,EAAEkyG,EAAEjoC,EAAE59D,EAAExF,EAAEylK,SAASjyI,EAAExzB,EAAE0lK,SAASl/J,EAAExG,EAAE2lK,UAAUN,YAAY5+J,EAAEzG,EAAE2lK,UAAUH,UAAUj1C,EAAEvwH,EAAE2lK,UAAUL,WAAWhzH,EAAEtyC,EAAE2lK,UAAUJ,WAAWttJ,EAAEjY,EAAE2lK,UAAU1oF,WAAWhpE,EAAE,EAAE,IAAI9a,EAAE,EAAEA,GAAGuoK,EAAEvoK,IAAI4G,EAAEigK,SAAS7mK,GAAG,EAAE,IAAIqM,EAAE,EAAEzF,EAAEmgK,KAAKngK,EAAEsgK,UAAU,GAAG,EAAE3qK,EAAEqK,EAAEsgK,SAAS,EAAE3qK,EAAEymC,EAAEzmC,KAAgByD,EAAEqM,EAAE,EAAEA,EAAE,GAApBgd,EAAEziB,EAAEmgK,KAAKxqK,IAAe,GAAG,GAAG,GAAIuiB,IAAI9e,EAAE8e,EAAEhE,KAAKzO,EAAE,EAAEgd,EAAE,GAAGrpB,EAAEqpB,EAAEgR,IAAIzzB,EAAEigK,SAAS7mK,KAAKkyG,EAAE,EAAE7oF,GAAG8vB,IAAI+4D,EAAEklB,EAAE/tG,EAAE8vB,IAAI8wB,EAAE59D,EAAE,EAAEgd,GAAGziB,EAAE0gK,SAASr9F,GAAGjqE,EAAEkyG,GAAG5kG,IAAI1G,EAAE2gK,YAAYt9F,GAAG58D,EAAE,EAAEgc,EAAE,GAAG6oF,KAAK,GAAG,IAAIp3F,EAAE,CAAC,EAAE,CAAC,IAAI9a,EAAE8e,EAAE,EAAE,IAAIlY,EAAEigK,SAAS7mK,IAAIA,IAAI4G,EAAEigK,SAAS7mK,KAAK4G,EAAEigK,SAAS7mK,EAAE,IAAI,EAAE4G,EAAEigK,SAAS/nJ,KAAKhE,GAAG,CAAC,OAAOA,EAAE,GAAG,IAAI9a,EAAE8e,EAAE,IAAI9e,EAAEA,IAAI,IAAIqpB,EAAEziB,EAAEigK,SAAS7mK,GAAG,IAAIqpB,IAAGhmB,EAAEuD,EAAEmgK,OAAOxqK,IAAK89B,IAAIhuB,EAAE,EAAEhJ,EAAE,KAAKrD,IAAI4G,EAAE0gK,UAAUtnK,EAAEqM,EAAE,EAAEhJ,EAAE,IAAIgJ,EAAE,EAAEhJ,GAAGgJ,EAAE,EAAEhJ,EAAE,GAAGrD,GAAGqpB,IAAI,CAAC,CAAkzE+tG,CAAExwH,EAAEC,GAAGsyC,EAAEn5C,EAAEq6B,EAAEzzB,EAAEigK,SAAS,CAAC,SAASl9F,EAAE/iE,EAAEC,EAAEtK,GAAG,IAAI8sB,EAAEhmB,EAAErD,GAAG,EAAEkyG,EAAErrG,EAAE,GAAGojE,EAAE,EAAE59D,EAAE,EAAEguB,EAAE,EAAE,IAAI,IAAI63E,IAAI7lG,EAAE,IAAIguB,EAAE,GAAGxzB,EAAE,GAAGtK,EAAE,GAAG,GAAG,MAAM8sB,EAAE,EAAEA,GAAG9sB,EAAE8sB,IAAIhmB,EAAE6uG,EAAEA,EAAErrG,EAAE,GAAGwiB,EAAE,GAAG,KAAK4gD,EAAE59D,GAAGhJ,IAAI6uG,IAAIjoC,EAAE5vC,EAAEzzB,EAAE4/J,QAAQ,EAAEnjK,IAAI4mE,EAAE,IAAI5mE,GAAGA,IAAIrD,GAAG4G,EAAE4/J,QAAQ,EAAEnjK,KAAKuD,EAAE4/J,QAAQ,EAAER,MAAM/7F,GAAG,GAAGrjE,EAAE4/J,QAAQ,EAAEhtC,KAAK5yH,EAAE4/J,QAAQ,EAAEiC,KAAMx+F,EAAE,EAAEjqE,EAAEqD,EAAE,IAAI6uG,GAAG7lG,EAAE,IAAIguB,EAAE,GAAGh3B,IAAI6uG,GAAG7lG,EAAE,EAAEguB,EAAE,IAAIhuB,EAAE,EAAEguB,EAAE,GAAG,CAAC,SAASn0B,EAAEU,EAAEC,EAAEtK,GAAG,IAAI8sB,EAAEhmB,EAAErD,GAAG,EAAEkyG,EAAErrG,EAAE,GAAGojE,EAAE,EAAE58D,EAAE,EAAEC,EAAE,EAAE,IAAI,IAAI4kG,IAAI7kG,EAAE,IAAIC,EAAE,GAAG+b,EAAE,EAAEA,GAAG9sB,EAAE8sB,IAAI,GAAGhmB,EAAE6uG,EAAEA,EAAErrG,EAAE,GAAGwiB,EAAE,GAAG,OAAO4gD,EAAE58D,GAAGhK,IAAI6uG,GAAG,CAAC,GAAGjoC,EAAE38D,EAAG,GAAG+sB,EAAEzzB,EAAEvD,EAAEuD,EAAE4/J,eAAe,KAAMv8F,QAAQ,IAAI5mE,GAAGA,IAAIrD,IAAIq6B,EAAEzzB,EAAEvD,EAAEuD,EAAE4/J,SAASv8F,KAAK5vC,EAAEzzB,EAAEo/J,EAAEp/J,EAAE4/J,SAASn6J,EAAEzF,EAAEqjE,EAAE,EAAE,IAAIA,GAAG,IAAI5vC,EAAEzzB,EAAE4yH,EAAE5yH,EAAE4/J,SAASn6J,EAAEzF,EAAEqjE,EAAE,EAAE,KAAK5vC,EAAEzzB,EAAE6hK,EAAG7hK,EAAE4/J,SAASn6J,EAAEzF,EAAEqjE,EAAE,GAAG,IAAIA,EAAE,EAAEjqE,EAAEqD,EAAE,IAAI6uG,GAAG7kG,EAAE,IAAIC,EAAE,GAAGjK,IAAI6uG,GAAG7kG,EAAE,EAAEC,EAAE,IAAID,EAAE,EAAEC,EAAE,EAAE,CAAC,CAAysB,SAASqsJ,EAAE/yJ,EAAEC,EAAEtK,EAAE8sB,GAAGhd,EAAEzF,GAAG7N,GAAG,IAAIswB,EAAE,EAAE,GAAG,GAAtuF,SAAWziB,EAAEC,EAAEtK,EAAE8sB,GAAGzI,EAAEha,GAAGyiB,IAAI4gD,EAAErjE,EAAErK,GAAG0tE,EAAErjE,GAAGrK,IAAIgnK,EAAErC,SAASt6J,EAAEm8J,YAAYn8J,EAAEoL,OAAOnL,EAAEtK,EAAEqK,EAAE+R,SAAS/R,EAAE+R,SAASpc,CAAC,CAA+nFqM,CAAEhC,EAAEC,EAAEtK,GAAE,EAAG,CAA+sB,IAAIgnK,EAAE38J,EAAE,mBAAmB48J,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAEnvK,EAAE,EAAEksK,EAAE,EAAEkD,EAAE,EAAYH,EAAE,GAAGK,EAAE,IAAIC,EAAED,EAAE,EAAEL,EAAEhrB,EAAE,GAAGuoB,EAAE,GAAGviI,EAAE,EAAEslI,EAAE,EAAEC,EAAE,GAAGN,EAAE,GAAGO,EAAE,EAAEb,EAAE,IAAI3B,EAAE,GAAGxsC,EAAE,GAAGivtgK,MAAM,GAAGmiK,EAAE,IAAIj/I,EAAEo9I,GAAI,IAAIJ,EAAG,IAAIlgK,MAAM,EAAE62I,GAAG3zH,EAAEg9I,GAAI,IAAIS,EAAG,IAAI3gK,MAAvE,KAAiFkjB,EAAEy9I,GAAI,IAAItC,EAAG,IAAIr+J,MAAMiiK,KAAO/+I,EAAEm7I,GAAI,IAAIP,EAAG,IAAI99J,MAAM6hK,GAAG3+I,EAAE46I,GAAI,IAAIH,EAAG,IAAI39J,MAAM62I,GAAG3zH,EAAEy6I,GAAI,IAAI8E,EAAGhB,EAAGiB,GAAGC,IAAG,EAAGvsK,EAAEurK,SAA78C,SAAWlhK,GAAGkiK,KAAh5G,WAAa,IAAIliK,EAAEC,EAAEtK,EAAE8sB,EAAErpB,EAAEkyG,EAAE,IAAI/rG,MAAMoiK,EAAE,GAAG,IAAIhsK,EAAE,EAAE8sB,EAAE,EAAEA,EAAE2+I,EAAE,EAAE3+I,IAAI,IAAI46I,EAAG56I,GAAG9sB,EAAEqK,EAAE,EAAEA,EAAE,GAAG8hK,EAAGr/I,GAAGziB,IAAI49J,EAAGjoK,KAAK8sB,EAAE,IAAIm7I,EAAGjoK,EAAE,GAAG8sB,EAAErpB,EAAE,EAAEqpB,EAAE,EAAEA,EAAE,GAAGA,IAAI,IAAIy6I,EAAGz6I,GAAGrpB,EAAE4G,EAAE,EAAEA,EAAE,GAAG4kK,EAAGniJ,GAAGziB,IAAIkgK,EAAG9mK,KAAKqpB,EAAE,IAAIrpB,IAAI,EAAEqpB,EAAE2zH,EAAE3zH,IAAI,IAAIy6I,EAAGz6I,GAAGrpB,GAAG,EAAE4G,EAAE,EAAEA,EAAE,GAAG4kK,EAAGniJ,GAAG,EAAEziB,IAAIkgK,EAAG,IAAI9mK,KAAKqpB,EAAE,IAAIxiB,EAAE,EAAEA,GAAG0hK,EAAE1hK,IAAIqrG,EAAErrG,GAAG,EAAE,IAAID,EAAE,EAAEA,GAAG,KAAK6/J,EAAG,EAAE7/J,EAAE,GAAG,EAAEA,IAAIsrG,EAAE,KAAK,KAAKtrG,GAAG,KAAK6/J,EAAG,EAAE7/J,EAAE,GAAG,EAAEA,IAAIsrG,EAAE,KAAK,KAAKtrG,GAAG,KAAK6/J,EAAG,EAAE7/J,EAAE,GAAG,EAAEA,IAAIsrG,EAAE,KAAK,KAAKtrG,GAAG,KAAK6/J,EAAG,EAAE7/J,EAAE,GAAG,EAAEA,IAAIsrG,EAAE,KAAK,IAAI/4D,EAAEstH,EAAG6B,EAAE,EAAEp2D,GAAGtrG,EAAE,EAAEA,EAAEo2I,EAAEp2I,IAAIy/J,EAAG,EAAEz/J,EAAE,GAAG,EAAEy/J,EAAG,EAAEz/J,GAAGyG,EAAEzG,EAAE,GAAGgiK,EAAG,IAAIvlK,EAAEojK,EAAGiC,EAAGL,EAAE,EAAEC,EAAEC,GAAGX,EAAG,IAAIvkK,EAAEgjK,EAAGmF,EAAG,EAAExuB,EAAEurB,GAAGM,GAAG,IAAIxlK,EAAE,IAAI8C,MAAM,GAAGwiK,EAAG,EAAEpD,EAAEiD,EAAE,CAA+2F1pJ,GAAIgqJ,IAAG,GAAIliK,EAAE8/J,OAAO,IAAI1mK,EAAE4G,EAAEw/J,UAAUwC,GAAIhiK,EAAE+/J,OAAO,IAAI3mK,EAAE4G,EAAE0/J,UAAUsB,GAAIhhK,EAAEggK,QAAQ,IAAI5mK,EAAE4G,EAAE4/J,QAAQqC,IAAIjiK,EAAE4gK,OAAO,EAAE5gK,EAAE6gK,SAAS,EAAE3sJ,EAAElU,EAAE,EAAk0CrK,EAAEotK,iBAAiBhQ,EAAEp9J,EAAE2mK,gBAAzvC,SAAWt8J,EAAEC,EAAEtK,EAAE8sB,GAAG,IAAIhmB,EAAErD,EAAEkyG,EAAE,EAAEtrG,EAAEoxJ,MAAM,GAAGpxJ,EAAEk4J,KAAK4I,YAAYQ,IAAIthK,EAAEk4J,KAAK4I,UAApiB,SAAW9gK,GAAG,IAAIC,EAAEtK,EAAE,WAAW,IAAIsK,EAAE,EAAEA,GAAG,GAAGA,IAAItK,KAAK,EAAE,GAAG,EAAEA,GAAG,IAAIqK,EAAEw/J,UAAU,EAAEv/J,GAAG,OAAOi8J,EAAE,GAAG,IAAIl8J,EAAEw/J,UAAU,KAAK,IAAIx/J,EAAEw/J,UAAU,KAAK,IAAIx/J,EAAEw/J,UAAU,IAAI,OAAOxB,EAAE,IAAI/9J,EAAE,GAAGA,EAAEwhK,EAAExhK,IAAI,GAAG,IAAID,EAAEw/J,UAAU,EAAEv/J,GAAG,OAAO+9J,EAAE,OAAO9B,CAAC,CAA0UjJ,CAAEjzJ,IAAIwF,EAAExF,EAAEA,EAAE8/J,QAAQt6J,EAAExF,EAAEA,EAAE+/J,QAAQz0D,EAA55B,SAAWtrG,GAAG,IAAIC,EAAE,IAAI8iE,EAAE/iE,EAAEA,EAAEw/J,UAAUx/J,EAAE8/J,OAAO6F,UAAU5iG,EAAE/iE,EAAEA,EAAE0/J,UAAU1/J,EAAE+/J,OAAO4F,UAAUngK,EAAExF,EAAEA,EAAEggK,SAAS//J,EAAE0+J,EAAE,EAAE1+J,GAAG,GAAG,IAAID,EAAE4/J,QAAQ,EAAEQ,EAAGngK,GAAG,GAAGA,KAAK,OAAOD,EAAE0gK,SAAS,GAAGzgK,EAAE,GAAG,EAAE,EAAE,EAAEA,CAAC,CAAsuBypD,CAAE1pD,GAAGvD,EAAEuD,EAAE0gK,QAAQ,EAAE,IAAI,GAAEtnK,EAAE4G,EAAE2gK,WAAW,EAAE,IAAI,IAAKlkK,IAAIA,EAAErD,IAAIqD,EAAErD,EAAEzD,EAAE,EAAEA,EAAE,GAAG8G,IAAQ,IAALwD,EAAO8yJ,EAAE/yJ,EAAEC,EAAEtK,EAAE8sB,GAAGziB,EAAE+3J,WAAW6E,GAAGxjK,IAAIqD,GAAGgJ,EAAEzF,GAAGq+J,GAAG,IAAI57I,EAAE,EAAE,GAAG,GAAGmnD,EAAE5pE,EAAE6/J,EAAGJ,KAAMh6J,EAAEzF,GAAGuhK,GAAG,IAAI9+I,EAAE,EAAE,GAAG,GAAj5B,SAAWziB,EAAEC,EAAEtK,EAAE8sB,GAAG,IAAIhmB,EAAE,IAAIgJ,EAAEzF,EAAEC,EAAE,IAAI,GAAGwF,EAAEzF,EAAErK,EAAE,EAAE,GAAG8P,EAAEzF,EAAEyiB,EAAE,EAAE,GAAGhmB,EAAE,EAAEA,EAAEgmB,EAAEhmB,IAAIgJ,EAAEzF,EAAEA,EAAE4/J,QAAQ,EAAEQ,EAAG3jK,GAAG,GAAG,GAAG6C,EAAEU,EAAEA,EAAEw/J,UAAUv/J,EAAE,GAAGX,EAAEU,EAAEA,EAAE0/J,UAAU/pK,EAAE,EAAE,CAAkwBm9J,CAAE9yJ,EAAEA,EAAE8/J,OAAO6F,SAAS,EAAE3lK,EAAE+/J,OAAO4F,SAAS,EAAEr6D,EAAE,GAAG1hC,EAAE5pE,EAAEA,EAAEw/J,UAAUx/J,EAAE0/J,YAAYxrJ,EAAElU,GAAGyiB,GAAGzI,EAAEha,EAAE,EAA04BrK,EAAEwoK,UAA34B,SAAWn+J,EAAEC,EAAEtK,GAAG,OAAOqK,EAAEm8J,YAAYn8J,EAAEygK,MAAM,EAAEzgK,EAAEw+J,UAAUv+J,IAAI,EAAE,IAAID,EAAEm8J,YAAYn8J,EAAEygK,MAAM,EAAEzgK,EAAEw+J,SAAS,GAAG,IAAIv+J,EAAED,EAAEm8J,YAAYn8J,EAAEugK,MAAMvgK,EAAEw+J,UAAU,IAAI7oK,EAAEqK,EAAEw+J,WAAW,IAAIv+J,EAAED,EAAEw/J,UAAU,EAAE7pK,MAAMqK,EAAEi0I,UAAUh0I,IAAID,EAAEw/J,UAAU,GAAG5B,EAAGjoK,GAAG8rK,EAAE,MAAMzhK,EAAE0/J,UAAU,EAAEp0D,EAAErrG,OAAOD,EAAEw+J,WAAWx+J,EAAEwgK,YAAY,CAAC,EAAqnB7qK,EAAEmtK,UAAp0C,SAAW9iK,GAAGyF,EAAEzF,EAAEq+J,GAAG,EAAE,GAAG5qI,EAAEzzB,EAAE+gK,EAAElB,GAAnkJ,SAAW7/J,GAAG,KAAKA,EAAE6gK,UAAUx9F,EAAErjE,EAAEA,EAAE4gK,QAAQ5gK,EAAE4gK,OAAO,EAAE5gK,EAAE6gK,SAAS,GAAG7gK,EAAE6gK,UAAU,IAAI7gK,EAAEm8J,YAAYn8J,EAAE+R,WAAW,IAAI/R,EAAE4gK,OAAO5gK,EAAE4gK,SAAS,EAAE5gK,EAAE6gK,UAAU,EAAE,CAA86In6J,CAAE1G,EAAE,CAAuyC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASA,EAAEC,EAAEtK,GAAG,aAAsNsK,EAAEnO,QAA3M,WAAaM,KAAKsmK,MAAM,KAAKtmK,KAAKumK,QAAQ,EAAEvmK,KAAKwmK,SAAS,EAAExmK,KAAKyqK,SAAS,EAAEzqK,KAAKymK,OAAO,KAAKzmK,KAAK2mK,SAAS,EAAE3mK,KAAK+lK,UAAU,EAAE/lK,KAAKiqK,UAAU,EAAEjqK,KAAK+e,IAAI,GAAG/e,KAAK0nD,MAAM,KAAK1nD,KAAK0uK,UAAU,EAAE1uK,KAAKsqK,MAAM,CAAC,CAAY,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAF31gB,CAEg2gB,qBCbvohB,IAAIn8J,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASslK,EAAe34I,GACvB,IAAIl6B,EAAK8yK,EAAsB54I,GAC/B,OAAO64I,EAAoB/yK,EAC5B,CACA,SAAS8yK,EAAsB54I,GAC9B,IAAI64I,EAAoB7tJ,EAAE3X,EAAK2sB,GAAM,CACpC,IAAIzwB,EAAI,IAAI/B,MAAM,uBAAyBwyB,EAAM,KAEjD,MADAzwB,EAAEoM,KAAO,mBACHpM,CACP,CACA,OAAO8D,EAAI2sB,EACZ,CACA24I,EAAer/J,KAAO,WACrB,OAAOD,OAAOC,KAAKjG,EACpB,EACAslK,EAAe/jK,QAAUgkK,EACzBj0K,EAAOC,QAAU+zK,EACjBA,EAAe7yK,GAAK,iBC5RpBnB,EAAOC,QAAU,MACV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcI85F,EAAM,CACPh3F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMmwK,QAAQz1E,EAAK16F,MAAMhD,GAAGwJ,KAAMxG,MAAMowK,cAC3C,cCpCHp0K,EAAOC,QAAU,MACV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MASZD,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMhD,GAAGqzK,WAAWC,YAActwK,MAAMC,OACrC,CACGgB,QAAS,SAAU0uG,EAAW7wG,EAAMof,GACjC,IAAI7T,EAAS,GAECslG,EAAUtmF,KAAK,CAAC,IAAM,IAC5B7oB,SAASib,IACd,GAAW,MAAPA,EAAJ,CAEA,IAAIrV,EACDqV,EAAIyC,EAAKxW,WAAa+T,EAAIyC,EAAKxW,SAAW,cAGzCtB,GAAQsD,MAAMC,QAAQvD,GACvBiE,GAAUjE,EAAK1D,OAEP,MAAR0D,GACQ,IAARA,GACQ,GAARA,GACQ,SAARA,GACQ,KAARA,IAEAiE,GAAU,EAfU,CAgBvB,IAGHvL,EAAKkoC,UAAY38B,CACpB,GAEHrK,MAAMhD,GAAGqzK,WAAWE,WAE1B,oBC1DH,IAAIrgH,EAAgB,CACjB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAIXl0D,EAAOC,QAAU,MACdC,cAAe,CAEf2rE,eAAe1rE,GACZA,EAAI6pE,OAAS7pE,EAAI6pE,QAAU,CAAC,EAE5B9V,EAAc1vD,SAAS2pI,IACpB,IAAIztI,EAAY,IAAIytI,EAAUhuI,GAC9BA,EAAI6pE,OAAOtpE,EAAUkE,KAAOlE,CAAS,IAIxCP,EAAImC,GAAG0nE,OAAS7pE,EAAI6pE,MACvB,cC7BHhqE,EAAOC,QAAU,MAGV2E,UACD,MAAO,gBACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAKrBzE,EAAIQ,OAAO,yBAEpBJ,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMgkF,QAAQq9B,OAAOmvD,SAAW,CAC7BvzK,KAAM,QACNM,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHf,KAAM,WACN0c,OAAO,EACPzb,YAAY,EACZo9D,YAAY,IAIlBt7D,MAAMgkF,QAAQwsF,SAAWxwK,MAAMC,OAC5B,CACGwwK,UAAW,YAEdzwK,MAAMgkF,QAAQhnE,KAEpB,cCxDHhhB,EAAOC,QAAU,MAGV2E,UACD,MAAO,UACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcI85F,EAAM,CACPh3F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMmwK,QAAQz1E,EAAK16F,MAAM0wK,YAAa1wK,MAAMhD,GAAGwJ,KAClD,cCtCHxK,EAAOC,QAAU,MAGV2E,UACD,MAAO,UACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcI85F,EAAM,CACPh3F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMmwK,QAAQz1E,EAAK16F,MAAM0wK,YAAa1wK,MAAMhD,GAAG+rF,KAClD,cCtCH/sF,EAAOC,QAAU,MAGV2E,UACD,MAAO,cACV,CAEA1E,YAAYC,GAoBT,IAAIu+F,EAAM,CACPh3F,KAAMnH,KAAKqE,KAEdrE,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMmwK,QAAQz1E,EAAK16F,MAAM0wK,YAAa1wK,MAAMhD,GAAG2zK,SAClD,cCtCH30K,EAAOC,QAAU,MACV2E,UACD,MAAO,mBACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcI85F,EAAM,CACPh3F,KAAMnH,KAAKqE,IACX4a,MAAO,WACJ,OAAO,CACV,GAEHjf,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMmwK,QAAQz1E,EAAK16F,MAAMhD,GAAG8hE,SAAU9+D,MAAMwuI,UAC/C,oBCxCH,IAAIh2G,EAAY,EAAQ,OACxBx8B,EAAOC,QAAU,cAAoCu8B,EAC9C53B,UACD,MAAO,eACV,CAEA1E,YAAYC,GACTE,QAQQF,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAX9B,IAeI85F,EAAM,CACPh3F,KAAMnH,KAAKqE,IACXD,SAAU,CACPlD,IAAK,UACLS,YAAY,GAEf0yK,MAAO,SAAUpyK,GACd,IAAIqyK,EAAiBryK,EAAOqyK,eACvBryK,EAAOqyK,eACP,CAAC,EACFp/C,EAAWjzH,EAAOizH,SAAWjzH,EAAOizH,SAAW,CAAC,EAEpD,IAAK,IAAIrrH,KAAQqrH,EACd,GACG/nH,MAAMC,QAAQ8nH,EAASrrH,KACK,iBAArBqrH,EAASrrH,GAAM,GACvB,CACC,IAAI0qK,EAAO,GACXr/C,EAASrrH,GAAM5F,SAASmK,IACjBA,EAAKxN,IAAI2zK,EAAKjwK,KAAK8J,EAAKxN,GAAG,IAElCs0H,EAASrrH,GAAQ0qK,CACpB,CAGHC,OAAOC,WAAWz0K,KAAK0N,MAAO4mK,EAAgB,CAM9C,GAAG9/J,MAAK,SAAUtK,GAIfA,EAAKwqK,WAAa,CACf7qK,KAAMqrH,IAERo/C,EAAevnH,YAAc,IAAI9oD,SAASkpD,IAExB,UAAbA,EAAKvrD,MACU,SAAfurD,EAAKC,QACLD,EAAKj9B,OAELhmB,EAAKykE,KAAKxhB,EAAKj9B,OAAO,SAAU3uB,GAC7BU,EAAO0yK,UAAW1yK,EAAO0yK,SAASxnH,EAAKj9B,MAE1C,GACH,GAqBN,GACH,GAEHlwB,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMmwK,QAAQz1E,EAAK16F,MAAMhD,GAAGC,KAC/B,cC5GHjB,EAAOC,QAAU,MACV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcI85F,EAAM,CACPh3F,KAAMnH,KAAKqE,IAEXD,SAAU,CACPlD,IAAK,iBAIR0zK,UAAW,WACR,IAAI5+J,EAAMhW,KAAKokG,eAAezhG,MAC9B,OAAIqT,EAAYnC,KAAK0D,MAAMvB,GAEf,EACf,GAEHhW,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMmwK,QAAQz1E,EAAK16F,MAAMhD,GAAG4N,KAC/B,cChDH5O,EAAOC,QAAU,MAGV2E,UACD,MAAO,YACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAKrBzE,EAAIQ,OAAO,qBAEpBJ,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMgkF,QAAQq9B,OAAO0rD,KAAO,CACzB9vK,KAAM,QACNe,KAAM,CACHf,KAAM,WACNM,MAAO,IACPD,OAAQ,IACRa,KAAM,SAIZ6B,MAAMgkF,QAAQ+oF,KAAO/sK,MAAMC,OACxB,CACGwwK,UAAW,QAEdzwK,MAAMgkF,QAAQhnE,KAEpB,cCrDHhhB,EAAOC,QAAU,MACV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,EAAKyE,GAMNzE,EAAIK,MASZD,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMhD,GAAGqzK,WAAW/tG,YAActiE,MAAMC,OACrC,CACGgB,QAAS,SAAU0uG,EAAW7wG,EAAMof,GACjC,IAAI7T,EAAS,EAEbslG,EAAUyhE,SAAQ,SAAU31J,GACzB,IAAIwO,EAAS0lF,EAAU3mF,QAAQvN,GAE3BrV,EAAO8X,EAAK/b,MAAM0a,OAAOoN,GAGzB7jB,IACDiE,GAAUipC,WAAWltC,GAE3B,IAEAtH,EAAKkoC,UAAY38B,CACpB,GAEHrK,MAAMhD,GAAGqzK,WAAWE,WAE1B,cChDHv0K,EAAOC,QAAU,MAGV2E,UACD,MAAO,aACV,CAEA1E,YAAYC,GAMDA,EAAIK,MAGDL,EAAI4S,OAOD5S,EAAIQ,OAAOJ,KAAKqE,KAV9B,IAcI85F,EAAM,CACPh3F,KAAMnH,KAAKqE,IACXD,SAAU,CACPxC,KAAM,OACNZ,MAAO,EACPS,KAAM,CACHE,YAAY,EACZg4F,QAAQ,EACRp3B,SAAU,SAASzqD,EAAKiyB,GACrB,MACG,UACCjyB,EAAIg9J,OAAS,MAAQh9J,EAAInV,MAAQ,OAASmV,EAAInV,OAC/C,SAEN,EACA06E,MAAO,WACJr9E,KAAKosF,SACR,EACAhqF,GAAI,CACD4yG,cAAe,SAASp0G,EAAIyJ,GACrBrK,KAAKysB,QAAQ7rB,GAAIk0K,SAClB90K,KAAKyL,gBAAgBspK,eAAe,IACpC/0K,KAAK4E,KACFjB,GAAG3D,KAAKyL,gBAAgBxJ,OAAO+yK,QAAQ5wE,gBAGhD,MAKZpkG,KAAKU,KAAOV,KAAKqE,IAIjBrE,KAAKwB,OADQ,CAAC,EAIdiC,MAAMmwK,QAAQz1E,EAAK16F,MAAMhD,GAAG24E,QAC/B","sources":["webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      console.error(\n         \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      );\n      return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\")\n                        model.normalizeData(data.data);\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (value) {\n         this._config.options[key] = value;\n         return;\n      }\n      return this._config.options[key];\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nimport Webix from \"../js/webix/webix.js\";\n// NOTE: moved to require() because using import with webix_debug.js\n// really messed things up!\n// var Webix = require(\"../js/webix/webix-debug.js\");\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = Webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      console.error(\"TODO: ABFactory.notify(): pass error off to analytics\");\n      console.error(error);\n      console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            this.AB.applications().then((apps) => {\n               // NOTE: apps is a webix datacollection\n\n               var allRemoves = [];\n\n               var appsWithObject = apps.filter((a) => {\n                  return a.datacollectionsIncluded((o) => o.id == this.id);\n               });\n               appsWithObject.forEach((app) => {\n                  allRemoves.push(app.datacollectionRemove(this));\n               });\n\n               return Promise.all(allRemoves).then(next).catch(err);\n            });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null, then show all data\n         if (linkCursor == null) return true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n                           model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {};\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(updateItemData);\n                     if (\n                        this.__treeCollection &&\n                        this.__treeCollection.exists(d.id)\n                     )\n                        this.__treeCollection.updateItem(d.id, updateItemData);\n\n                     if (\n                        this.__dataCollection &&\n                        this.__dataCollection.exists(d.id)\n                     ) {\n                        this.__dataCollection.updateItem(d.id, updateItemData);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n                     var model = obj.model();\n                     model.normalizeData(res.data[0]);\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal) &&\n                     relateVal.filter(\n                        (v) =>\n                           v == deleteId ||\n                           v.id == deleteId ||\n                           v[PK] == deleteId\n                     ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n                  model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      let linkDv = this.datacollectionLink;\n      if (linkDv && this.settings.loadAll) {\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   waitForDataCollectionToInitialize(DC, msg) {\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      var wheres = this.settings.objectWorkspace.filterConditions || null;\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      if (this.__filterCond) {\n         if (wheres.rules.length) {\n            // combine them together:\n            wheres = {\n               glue: \"and\",\n               rules: [wheres, this.__filterCond],\n            };\n         } else {\n            // simplify to just use filterCond\n            wheres = this.__filterCond;\n         }\n      }\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll) {\n         delete cond.limit;\n      }\n\n      return (\n         Promise.resolve()\n            //\n            // Step 1: make sure any DataCollections we are linked to are\n            // initialized first.  Then proceed with our initialization.\n            //\n            .then(() => {\n               // If we are linked to another datacollection then wait for it\n               let linkDc = this.datacollectionLink;\n               if (!linkDc) return Promise.resolve(); // TODO: refactor in v2\n\n               return this.waitForDataCollectionToInitialize(linkDc);\n            })\n            //\n            // Step 2: if we have any filter rules that depend on other DataCollections,\n            // then wait for them to be initialized first.\n            // eg: \"(not_)in_data_collection\" rule filters\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  if (\n                     wheres == null ||\n                     wheres.rules == null ||\n                     !wheres.rules.length\n                  )\n                     return resolve();\n\n                  var dcFilters = [];\n\n                  wheres.rules.forEach((rule) => {\n                     // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n                     if (\n                        rule.rule == \"in_data_collection\" ||\n                        rule.rule == \"not_in_data_collection\"\n                     ) {\n                        var dv = this.AB.datacollectionByID(rule.value);\n                        if (dv) {\n                           dcFilters.push(\n                              this.waitForDataCollectionToInitialize(dv)\n                           );\n                        }\n                     }\n                  });\n\n                  Promise.all(dcFilters)\n                     .then(() => {\n                        resolve();\n                     })\n                     .catch(reject);\n               });\n            })\n\n            // pull data to data collection\n            .then(() => {\n               return new Promise((resolve, reject) => {\n                  // we will keep track of the resolve, reject for this\n                  // operation.\n                  // the actual resolve() should happen in the\n                  // .processIncomingData() after the  data is processed.\n                  this._pendingLoadDataResolve = {\n                     resolve: resolve,\n                     reject: reject,\n                  };\n\n                  this.platformFind(model, cond).catch((err) => {\n                     reject(err);\n                  });\n               });\n            })\n      );\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            this.__dataCollection.parse(data);\n         }\n\n         // In order to get the total_count updated I had to use .load()\n         queueOperation(() => {\n            this.__dataCollection.load(() => {\n               // If this dc loads all, then it has to filter data by the parent dc\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return data;\n            });\n         }, 1);\n\n         // In order to keep detail and graphs loading properly I had to keep .parse()\n         // queueOperation(() => {\n         //    this.__dataCollection.clearAll();\n         //    this.__dataCollection.parse(data);\n         // }, 50);\n\n         // this does nothing???\n         this.parseTreeCollection(data);\n\n         queueOperation(() => {\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n         }, 5);\n         queueOperation(() => {\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 20);\n         queueOperation(() => {\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n         }, 10);\n         queueOperation(() => {\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n         }, 5);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return null;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter((val) => (val.id || val[PK] || val) == linkCursor.id)\n               .length > 0\n         );\n      } else {\n         return (linkVal.id || linkVal[PK] || linkVal) == linkCursor.id;\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\"object\", \"query\", \"datacollection\", \"process\", \"application\"].forEach(\n         (type) => {\n            var objTypes = allDefinitions.filter((d) => d.type == type);\n            objTypes.forEach((def) => {\n               let { keyList, keyFn } = this.objectKeysByDef(def);\n               if (keyList) {\n                  this[keyList].push(this[keyFn](def.json));\n               }\n            });\n         }\n      );\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, includeRelativeData: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            if (\n               objectLink &&\n               objectLink.PK() != \"id\" &&\n               d[relationName] &&\n               !d[relationName].id\n            ) {\n               // is array\n               if (d[relationName].forEach) {\n                  d[relationName].forEach((subData) => {\n                     if (subData[objectLink.PK()])\n                        subData.id = subData[objectLink.PK()];\n                  });\n               } else if (d[relationName][objectLink.PK()]) {\n                  d[relationName].id = d[relationName][objectLink.PK()];\n               }\n            }\n\n            var relatedMlFields = objectLink.multilingualFields();\n            if (relatedMlFields.length) {\n               objectLink.translate(\n                  d[relationName],\n                  d[relationName],\n                  relatedMlFields\n               );\n            }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) d[c.columnName] = d[relationName];\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(d[date.columnName], {\n                        format: \"MM/DD/YYYY\",\n                        ignoreTime: true,\n                     });\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(d[date.columnName]);\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         this.__linkProblems = this.__linkProblems ?? [];\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      if (!fn)\n         fn = () => {\n            return true;\n         };\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      var task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         // get any field's it provides\n         var value = task[method].apply(task, param);\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (typeof value != \"undefined\") {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      const condition = this.condition;\n      const _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         condition == null ||\n         condition.rules == null ||\n         condition.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = value.indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = value.indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     f.settings.isCustomFK &&\n                     // 1:M\n                     ((f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                        // 1:1 isSource = true\n                        (f.settings.linkType == \"one\" &&\n                           f.settings.linkViaType == \"one\" &&\n                           f.settings.isSource))\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(f);\n\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n            let columnName = field.columnName;\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter.key || !filter.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f && f.fieldIsFilterable());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result = rowData[colName] || rowData.id || rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      let dataFieldOpt = (this.process.processDataFields(this) || []).filter(\n         (opt) => opt.key == this.parameterId\n      )[0];\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      if (data == null)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null) data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (field.key == \"connectObject\") {\n                     return (\n                        myState[\"data\"][field.columnName] ||\n                        myState[\"data\"][field.relationName()]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this.prevOP.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      if (typeof this.settings.width != \"undefined\") {\n         this.settings.width = parseInt(this.settings.width);\n      } else {\n         this.settings.width = ABViewCarouselPropertyComponentDefaults.width;\n      }\n      if (typeof this.settings.height != \"undefined\") {\n         this.settings.height = parseInt(this.settings.height);\n      } else {\n         this.settings.height = ABViewCarouselPropertyComponentDefaults.height;\n      }\n      try {\n         this.settings.showLabel = JSON.parse(this.settings.showLabel);\n      } catch (e) {\n         this.settings.showLabel =\n            ABViewCarouselPropertyComponentDefaults.showLabel;\n      }\n      try {\n         this.settings.hideItem = JSON.parse(this.settings.hideItem);\n      } catch (e) {\n         this.settings.hideItem =\n            ABViewCarouselPropertyComponentDefaults.hideItem;\n      }\n      try {\n         this.settings.hideButton = JSON.parse(this.settings.hideButton);\n      } catch (e) {\n         this.settings.hideButton =\n            ABViewCarouselPropertyComponentDefaults.hideButton;\n      }\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n      try {\n         this.settings.filterByCursor = JSON.parse(\n            this.settings.filterByCursor\n         );\n      } catch (e) {\n         this.settings.filterByCursor =\n            ABViewCarouselPropertyComponentDefaults.filterByCursor;\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.field)[0];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n      this.refreshData();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"],\n         allComponents = this.application.viewAll(); // ABViewManager.allViews();\n\n      const ret = allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n      return ret;\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnLabel)[0];\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnValue)[0];\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnValue2)[0];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnUser)[0];\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnComment)[0];\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.settings.columnDate)[0];\n   }\n\n   getUserData() {\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = \"/opsportal/image/UserProfile/\" + item.image;\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABObject\n      let obj = dv.datasource;\n      if (obj == null) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = true;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = true;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      console.error(\"!!! where is this being called???\");\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      ); // ABViewManager.newView({ key: this.common().key }, application, parent);\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.AB.notify.builder(\n               new Error(\n                  `Application[${this.application.name}][${this.application.id}].View[${this.name}][${this.id}] references unknown View[${id}]`\n               ),\n               {\n                  context:\"ABViewCore:fromValues():values.viewIDs for each\",\n                  id\n               }\n            );\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    *\n    * return an flatten array of all the ABViews parents\n    *\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if ([\"page\", \"viewcontainer\"].indexOf(this.key) == -1) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages = this.application._pages.filter(\n                              (p2) => p2.id != lookUpIds[p.id]\n                           );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datafitler\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n      console.warn(\n         new Error(\n            \"TODO: convert ABViewDocxBuilderCore.uploadUrl() to use common url code.\"\n         )\n      );\n      // let actionKey =\n      //    \"opstool.AB_\" + this.application.name.replace(\"_\", \"\") + \".view\";\n\n      // return (\n      //    \"/\" +\n      //    [\"opsportal\", \"file\", this.application.name, actionKey, \"1\"].join(\"/\")\n      // );\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of a field.\n      // TODO\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fields((f) => f.id == this.settings.field)[0];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.allowDelete || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   moduleList: [],\n   queryList: []\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\" // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.moduleList =\n         this.settings.moduleList ||\n         ABViewReportManagerPropertyComponentDefaults.moduleList;\n\n      this.settings.queryList =\n         this.settings.queryList ||\n         ABViewReportManagerPropertyComponentDefaults.queryList;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      this._warnings = [];\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.emit(\n                  \"warning\",\n                  `Application is referencing a missing ${checks[k]}`,\n                  {\n                     appID: this.id,\n                     id,\n                  }\n               );\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.emit(\n            \"warning\",\n            \"Application has no Role assigned, and is unaccessible.\"\n         );\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.emit(\n               \"warning\",\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it witht hat field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            // copy current wheres\n            var wheres = this.AB.cloneDeep(\n               this.settings.objectWorkspace.filterConditions\n            );\n            // add bind items data as a filter to wheres\n            if (value) {\n               // don't include an empty where condition in our .rules\n               // start by replacing it with null\n               if (!wheres.rules) {\n                  wheres = null;\n               }\n\n               wheres = {\n                  glue: \"and\",\n                  rules: [\n                     wheres,\n                     {\n                        alias: fieldLink.alias, // ABObjectQuery\n                        key: Object.keys(params)[0],\n                        rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n                        value: fieldLink.getRelationValue(\n                           dataCollectionLink.__dataCollection.getItem(value)\n                        ),\n                     },\n                  ],\n               };\n\n               // remove any null in the .rules\n               wheres.rules = wheres.rules.filter((r) => r);\n            }\n\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (this?.datacollectionLink?.getCursor()?.id == value) {\n               cursorUpdated = true;\n            }\n\n            // this is the same item that was already bound...don't reload data\n            if (\n               cursorUpdated ||\n               JSON.stringify(this.__reloadWheres) != JSON.stringify(wheres) ||\n               wheres?.rules?.length > 0\n            ) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               this.reloadWheres(wheres);\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      if (\n         this.__bindComponentIds.indexOf(component.config.id) > -1 &&\n         $$(component.config.id).data &&\n         $$(component.config.id).data.find &&\n         $$(component.config.id).data.find({}).length > 0\n      )\n         return;\n      // keep component id to an array\n      else this.__bindComponentIds.push(component.config.id);\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView = formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // cache options if not a xxx->one connection\n                  if (this?.settings?.linkViaType != \"one\") {\n                     this.AB.Storage.set(storageID, this._options);\n                  }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        if (\n                           field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)\n                        ) {\n                           newVal = field.object\n                              .fieldByID(value.filterValue.config.dataFieldId)\n                              .getItemFromVal(parentValue)[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(combineFilters, \"\", \"\", theEditor).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue && theEditor.getValue()) {\n         theEditor.setValue(theEditor.getValue());\n         // } else if (this._selectedData && this._selectedData.length) {\n         //    theEditor.setValue(this.editFormat(this._selectedData));\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor = \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            message: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\";\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      const L = App.Label;\n\n      options = options || {};\n\n      const idBase = App.unique(this.idCustomContainer(row, options.formId));\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n\n                  // TODO: delete previous image from our OPsPortal service?\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} width:${options.width}; height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   // /*\n   //  * @method isValid\n   //  * check the current values to make sure they are valid.\n   //  * Here we check the default values provided by ABView.\n   //  *\n   //  * @return {ABFactory.Validation.validator()}\n   //  */\n   // isValid() {\n   //    var validator = this.AB.Validation.validator();\n\n   //    // // labels must be unique among views on the same parent\n   //    var parent = this.parent;\n   //    // if (!parent) { parent = this.application; }\n\n   //    // if we have a parent component:\n   //    if (parent) {\n   //       var isNameUnique =\n   //          parent.views((v) => {\n   //             return (\n   //                v.id != this.id &&\n   //                v.label.toLowerCase() == this.label.toLowerCase()\n   //             );\n   //          }).length == 0;\n   //       if (!isNameUnique) {\n   //          validator.addError(\n   //             \"label\",\n   //             L(\"View label must be unique among peers.\")\n   //          );\n   //       }\n   //    }\n   //    return validator;\n   // }\n\n   // /**\n   //  * @method editorComponent\n   //  * return the Editor for this UI component.\n   //  * the editor should display either a \"block\" view or \"preview\" of\n   //  * the current layout of the view.\n   //  * @param {string} mode what mode are we in ['block', 'preview']\n   //  * @return {Component}\n   //  */\n   // editorComponent(App, mode) {\n   //    var idBase = \"ABViewEditorComponent\";\n   //    var ids = {\n   //       component: App.unique(idBase + \"_component\"),\n   //       view: App.unique(idBase + \"_view\"),\n   //    };\n\n   //    var _ui = {\n   //       rows: [\n   //          {\n   //             id: ids.component,\n   //             view: App.custom.savablelayout.view,\n   //             type: \"space\",\n   //             rows: [],\n   //          },\n   //       ],\n   //    };\n\n   //    var _init = (options) => {\n   //       var Layout = $$(ids.component);\n\n   //       var allComponents = [];\n\n   //       App.eventIds = App.eventIds || {};\n\n   //       // prevent .attachEvent multiple times\n   //       if (App.eventIds[\"onAfterPortletMove\"])\n   //          webix.detachEvent(\"onAfterPortletMove\");\n\n   //       // listen a event of the porlet when layout is changed\n   //       App.eventIds[\"onAfterPortletMove\"] = webix.attachEvent(\n   //          \"onAfterPortletMove\",\n   //          (source, parent, active, target, mode) => {\n   //             _logic.onAfterPortletMove();\n   //          }\n   //       );\n\n   //       // attach all the .UI views:\n   //       this.views().forEach((child) => {\n   //          var component = child.component(App);\n\n   //          var porletUI = {\n   //             viewId: child.id, // set id to .viewId, the layout template\n   //             view: \"portlet\",\n   //             css: \"ab-interface-component\",\n   //             // borderless: true,\n   //             layoutType: \"head\", // Drag on icon\n   //             body: {\n   //                rows: [\n   //                   {\n   //                      view: \"template\",\n   //                      height: 30,\n   //                      css: \"ab-porlet-header\",\n   //                      template: _logic.template(child),\n   //                      onClick: {\n   //                         \"ab-component-edit\": (e, id, trg) => {\n   //                            _logic.viewEdit(e, child.id, trg);\n   //                         },\n   //                         \"ab-component-remove\": (e, id, trg) => {\n   //                            _logic.viewDelete(e, child.id, trg);\n   //                         },\n   //                      },\n   //                   },\n   //                   mode == \"preview\"\n   //                      ? component.ui\n   //                      : {\n   //                           // empty element\n   //                           view: \"spacer\",\n   //                           hidden: true,\n   //                        },\n   //                ],\n   //             },\n   //          };\n\n   //          // get element in template\n   //          var elem = Layout.queryView({ viewId: child.id });\n\n   //          // If webix element is not exists in html, then destroy it.\n   //          // NOTE : webix does not know html is missing when we redraw layout at .setState\n   //          if (elem && !document.body.contains(elem.$view)) elem.destructor();\n\n   //          if (elem) {\n   //             // replace component to layout\n   //             webix.ui(porletUI, elem);\n   //          }\n   //          // add component to rows\n   //          else {\n   //             Layout.addView(porletUI);\n   //          }\n\n   //          allComponents.push(component);\n   //       });\n\n   //       // in preview mode, have each child render a preview\n   //       // of their content:\n   //       if (mode == \"preview\") {\n   //          // perform any init setups for the content:\n   //          allComponents.forEach((component) => {\n   //             component.init();\n   //          });\n   //       }\n   //    };\n\n   //    var _logic = {\n   //       /**\n   //        * @method template()\n   //        * render the list template for the View\n   //        * @param {obj} obj the current View instance\n   //        * @param {obj} common  Webix provided object with common UI tools\n   //        */\n   //       template: function (child) {\n   //          return (\n   //             \"<div>\" +\n   //             `<i class=\"fa fa-${child.icon} webix_icon_btn\"></i> ` +\n   //             ` ${child.label}` +\n   //             '<div class=\"ab-component-tools\">' +\n   //             '<i class=\"fa fa-trash ab-component-remove\"></i>' +\n   //             '<i class=\"fa fa-edit ab-component-edit\"></i>' +\n   //             \"</div>\" +\n   //             \"</div>\"\n   //          );\n   //       },\n\n   //       /**\n   //        * @method viewDelete()\n   //        * Called when the [delete] icon for a child View is clicked.\n   //        * @param {obj} e the onClick event object\n   //        * @param {integer} id the id of the element to delete\n   //        * @param {obj} trg  Webix provided object\n   //        */\n   //       viewDelete: (e, id, trg) => {\n   //          var deletedView = this.views((v) => v.id == id)[0];\n\n   //          if (!deletedView) return false;\n\n   //          this.AB.Dialog.Confirm({\n   //             title: L(\"Delete component\"),\n   //             text: L(\"Do you want to delete <b>{0}</b>?\", [\n   //                deletedView.label,\n   //             ]),\n   //             callback: function (result) {\n   //                if (result) {\n   //                   var Layout = $$(ids.component);\n\n   //                   // remove UI of this component in template\n   //                   var deletedElem = Layout.queryView({ viewId: id });\n   //                   if (deletedElem)\n   //                      $$(ids.component).destroyView(deletedElem);\n\n   //                   // update/refresh template to ABView\n   //                   _logic.refreshTemplate();\n\n   //                   deletedView\n   //                      .destroy()\n   //                      .then(() => {\n   //                         // signal the current view has been deleted.\n   //                         deletedView.emit(\"destroyed\", deletedView);\n\n   //                         // if we don't have any views, then place a \"drop here\" placeholder\n   //                         if ($$(ids.component).getChildViews().length == 0) {\n   //                            webix.extend($$(ids.component), webix.OverlayBox);\n   //                            $$(ids.component).showOverlay(\n   //                               \"<div class='drop-zone'><div>\" +\n   //                                  App.labels.componentDropZone +\n   //                                  \"</div></div>\"\n   //                            );\n   //                         }\n   //                      })\n   //                      .catch((err) => {\n   //                         this.AB.error(\n   //                            \"Error trying to delete selected View:\",\n   //                            { error: err, view: deletedView }\n   //                         );\n   //                      });\n   //                }\n   //             },\n   //          });\n   //          e.preventDefault();\n   //       },\n\n   //       /**\n   //        * @method viewEdit()\n   //        * Called when the [edit] icon for a child View is clicked.\n   //        * @param {obj} e the onClick event object\n   //        * @param {integer} id the id of the element to edit\n   //        * @param {obj} trg  Webix provided object\n   //        */\n   //       viewEdit: (e, id, trg) => {\n   //          var view = this.views((v) => v.id == id)[0];\n\n   //          if (!view) return false;\n\n   //          // yeah, if the empty placeholder fires an [edit] event,\n   //          // then ignore it.\n   //          if (view.id == \"del_me\") return false;\n\n   //          // NOTE: let webix finish this onClick event, before\n   //          // calling .populateInterfaceWorkspace() which will replace\n   //          // the interface elements with the edited view.  (apparently\n   //          // that causes errors.)\n   //          setTimeout(() => {\n   //             App.actions.populateInterfaceWorkspace(view);\n   //          }, 50);\n\n   //          e.preventDefault();\n\n   //          return false;\n   //       },\n\n   //       onAfterPortletMove: () => {\n   //          _logic.refreshTemplate();\n\n   //          // save template layout to ABPageView\n   //          this.save();\n\n   //          // // Reorder\n   //          // var viewId = active.config.id;\n   //          // var targetId = target.config.id;\n\n   //          // var toPosition = this._views.findIndex((v) => v.id == targetId);\n\n   //          // this.viewReorder(viewId, toPosition);\n   //       },\n\n   //       refreshTemplate: () => {\n   //          // get portlet template UI to ABView\n   //          this.template = $$(ids.component).getState();\n   //       },\n   //    };\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //    };\n   // }\n\n   // static propertyEditorComponent(App) {\n   //    var ABViewPropertyComponent = new ABPropertyComponent({\n   //       editObject: this, // ABView\n\n   //       fieldDefaults: this.common(), // ABViewDefaults,\n\n   //       elements: (App, field) => {\n   //          var ids = {\n   //             imageWidth: \"\",\n   //             imageHeight: \"\",\n   //          };\n   //          ids = field.idsUnique(ids, App);\n\n   //          return [];\n   //       },\n\n   //       // defaultValues: the keys must match a .name of your elements to set it's default value.\n   //       defaultValues: ABViewPropertyComponentDefaults,\n\n   //       // rules: basic form validation rules for webix form entry.\n   //       // the keys must match a .name of your .elements for it to apply\n   //       rules: {\n   //          // 'textDefault':webix.rules.isNotEmpty,\n   //          // 'supportMultilingual':webix.rules.isNotEmpty\n   //       },\n\n   //       // include additional behavior on default component operations here:\n   //       // The base routines will be processed first, then these.  Any results\n   //       // from the base routine, will be passed on to these:\n   //       //   @param {obj} ids  the list of ids used to generate the UI.  your\n   //       //           provided .elements will have matching .name keys\n   //       //           to access them here.\n   //       //  @param {obj} values the current set of values provided for this instance\n   //       //             of ABField:\n   //       //           {\n   //       //           id:'',      // if already .saved()\n   //       //             label:'',\n   //       //             columnName:'',\n   //       //           settings:{\n   //       //             showIcon:'',\n   //       //\n   //       //             your element key=>values here\n   //       //           }\n   //       //           }\n   //       //\n   //       //     .clear(ids)  : reset the display to an empty state\n   //       //     .isValid(ids, isValid): perform validation on the current editor values\n   //       //     .populate(ids, ABField) : populate the form with your current settings\n   //       //     .show(ids)   : display the form in the editor\n   //       //     .values(ids, values) : return the current values from the form\n   //       logic: {},\n\n   //       // perform any additional setup actions here.\n   //       // @param {obj} ids  the hash of id values for all the current form elements.\n   //       //          it should have your elements + the default Header elements:\n   //       //           .label, .columnName, .fieldDescription, .showIcon\n   //       init: function (ids) {\n   //          // want to hide the description? :\n   //          // $$(ids.fieldDescription).hide();\n   //       },\n   //    });\n\n   //    return ABViewPropertyComponent.component(App);\n   // }\n\n   // static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n   //    return [\n   //       // Component Label\n   //       {\n   //          view: \"text\",\n   //          // id: ids.label,\n   //          name: \"label\",\n   //          label: App.labels.dataFieldHeaderLabel,\n   //          placeholder: App.labels.dataFieldHeaderLabelPlaceholder,\n   //          labelWidth: this.AB.UISettings.config().labelWidthLarge,\n   //          css: \"ab-new-label-name\",\n   //          //        on: {\n   //          //          onChange: function (newVal, oldVal) {\n   //          // console.warn('ABView.onChange()!!!');\n   //          //          }\n   //          //        }\n   //       },\n   //    ];\n   // }\n\n   // static propertyEditorPopulate(App, ids, view) {\n   //    if (!view) return;\n   //    $$(ids.label).setValue(view.label);\n   // }\n\n   // static propertyEditorValues(ids, view) {\n   //    if (!view) return;\n   //    view.label = $$(ids.label).getValue();\n   // }\n\n   // static propertyEditorSave(ids, view, includeSubViews = false) {\n   //    this.propertyEditorValues(ids, view);\n\n   //    return new Promise((resolve, reject) => {\n   //       view\n   //          .save(includeSubViews)\n   //          .then(function () {\n   //             // signal the current view has been updated.\n   //             view.emit(\"properties.updated\", view);\n\n   //             resolve();\n   //          })\n   //          .catch(function (err) {\n   //             this.AB.error(\"unable to save view:\", {\n   //                error: err,\n   //                view: view,\n   //             });\n   //             reject(err);\n   //          });\n   //    });\n   // }\n\n   // /**\n   //  * @method propertyDatacollections()\n   //  * a convience method to return a list of available Datacollections\n   //  * @param {bool} isGlobal\n   //  *        true : return a list of ALL available DataCollections\n   //  *        false: (default) only return a list of included DCs\n   //  * @return {array}\n   //  *        [ { id:dc.id, value:dc.label } ]\n   //  *        this format is used by the webix select lists to choose your\n   //  *        datasources.\n   //  */\n   // propertyDatacollections(\n   //    filter = () => true,\n   //    isGlobal = false,\n   //    defaultOption = null\n   // ) {\n   //    if (defaultOption == null) {\n   //       defaultOption = {\n   //          id: \"\",\n   //          value: L(\"Select a DataCollection\"),\n   //       };\n   //    }\n\n   //    var list = [];\n   //    if (isGlobal) {\n   //       list = this.AB.datacollections(filter);\n   //    } else {\n   //       list = this.application.datacollectionsIncluded(filter);\n   //    }\n   //    list = list.map((dc) => {\n   //       return {\n   //          id: dc.id,\n   //          value: dc.label,\n   //       };\n   //    });\n   //    list.unshift(defaultOption);\n   //    return list;\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    *\n    * @return {obj} UI component\n    */\n   component() {\n      const component = new ABViewComponent(this);\n\n      return component;\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // if (this.parent) {\n      //  return this.parent.componentList(false);\n      // } else {\n\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n\n      // }\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   // removeField(field, cb) {\n   //    // if this view has matching field then destroy()\n   //    if (this.settings.fieldId == field.id) {\n   //       this.destroy()\n   //          .then(() => {\n   //             // signal the current view has been deleted.\n   //             this.emit(\"destroyed\", this);\n   //             cb(null, true);\n   //          })\n   //          .catch((err) => {\n   //             this.AB.error(\"Error trying to delete selected View:\", {\n   //                error: err,\n   //                view: this,\n   //             });\n   //             cb(err);\n   //          });\n   //    } else {\n   //       // if not check for subViews then call removeField on them\n\n   //       var shouldSave = false;\n\n   //       var finish = () => {\n   //          if (shouldSave) {\n   //             this.save()\n   //                .then(() => {\n   //                   cb();\n   //                })\n   //                .catch(cb);\n   //          } else {\n   //             cb();\n   //          }\n   //       };\n\n   //       // for each sub view, view.removeField(field);\n   //       var listViews = this.views();\n   //       var done = 0;\n   //       listViews.forEach((v) => {\n   //          v.removeField(field, (err, updateMade) => {\n   //             if (err) {\n   //                cb(err);\n   //             } else {\n   //                if (updateMade) {\n   //                   shouldSave = true;\n   //                }\n\n   //                done++;\n   //                if (done >= listViews.length) {\n   //                   finish();\n   //                }\n   //             }\n   //          });\n   //       });\n\n   //       if (listViews.length == 0) {\n   //          finish();\n   //       }\n   //    }\n   // }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewCSVExporterComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false, idBase) {\n      var component = new ABViewCSVImporterComponent(this, idBase);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return [\n            `<div class=\"ab-carousel-image-container\">`,\n            `<img src=\"${row.src}\" class=\"content\" ondragstart=\"return false\" />`,\n            settings.showLabel\n               ? `<div class=\"ab-carousel-image-title\">${row.label || \"\"}</div>`\n               : \"\",\n            `<div class=\"ab-carousel-image-icon\">`,\n            settings.detailsPage || settings.detailsTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n               : \"\",\n            settings.editPage || settings.editTab\n               ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n               : \"\",\n            `<span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>`,\n            `<span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>`,\n            `</div>`,\n            `</div>`,\n         ].join(\"\");\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      let component = new ABViewCarouselComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartAreaComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartBarComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   editorComponent(App, mode, options) {\n      let component = this.component(App);\n      let _ui = component.ui;\n      _ui.id = options.componentId;\n\n      let _init = () => {\n         component.init({\n            componentId: _ui.id,\n         });\n      };\n      let _logic = component.logic;\n      let _onShow = component.onShow;\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: _logic,\n         onShow: _onShow,\n      };\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewChartContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartLineComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewChartPieComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewCommentComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewConditionalContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $filter.disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewConnectDataFilterComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n      return component;\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n\n   component(v1App = false) {\n      let component = new ABViewContainerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewDataFilterComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n      return component;\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDataviewComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailCheckboxComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailConnectComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailCustomComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      let component = new ABViewDetailImageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewDetailItemComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    *\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDetailTextComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @param {string} idPrefix\n    *\n    * @return {obj} UI component\n    */\n   component(v1App, idPrefix) {\n      var component = new ABViewDetailTreeComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewDocxBuilderComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               formVals[f.columnName] = f.format(cursorFormVals, true);\n            }\n         }\n      );\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let isValid = true;\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      let validator;\n      if (isValid) {\n         validator = object.isValidData(formVals);\n         isValid = validator.pass();\n      }\n\n      // $$($formView).validate();\n      $formView.validate();\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            isValid = false;\n\n            // Fix position of invalid message\n            const $forminput = $formView.elements[f.columnName];\n            if ($forminput) {\n               // Y position\n               const height = $forminput.$height;\n               if (height < 56) {\n                  $forminput.define(\"height\", 60);\n                  $forminput.resize();\n               }\n\n               // X position\n               const domInvalidMessage =\n                  $forminput.$view.getElementsByClassName(\n                     \"webix_inp_bottom_label\"\n                  )[0];\n               if (!domInvalidMessage?.style[\"margin-left\"]) {\n                  domInvalidMessage.style.marginLeft = `${\n                     this.settings.labelWidth ??\n                     ABViewFormPropertyComponentDefaults.labelWidth\n                  }px`;\n               }\n            }\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      // form validate\n      if (!$formView || !$formView.validate()) {\n         // TODO : error message\n         return;\n      }\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: \"System could not save your data\",\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormButtonComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewFormCheckboxComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n         component._ui = newComponent._ui;\n      }\n\n      return component;\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      if (\n         !this.settings.objectWorkspace ||\n         !this.settings.objectWorkspace.filterConditions\n      ) {\n         this.AB.error(\"Error: filter conditions do not exist\", {\n            error: \"filterConditions do not exist\",\n            viewLocation: {\n               application: this.application.name,\n               id: this.id,\n               name: this.label,\n            },\n            view: this,\n         });\n         // manually place an empty filter\n         this.settings[\"objectWorkspace\"] = {};\n         this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      }\n\n      this.__filterComponent.setValue(\n         this.settings.objectWorkspace.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewFormConnectComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormCustomComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormDatepickerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormItemComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   // componentV1(App) {\n   //    // setup 'label' of the element\n   //    var form = this.parentFormComponent(),\n   //       field = this.field(),\n   //       label = \"\";\n\n   //    var settings = {};\n   //    if (form) settings = form.settings;\n\n   //    var _ui = {\n   //       labelPosition: settings.labelPosition,\n   //       labelWidth: settings.labelWidth,\n   //       label: label,\n   //    };\n\n   //    if (field != null) {\n   //       _ui.name = field.columnName;\n\n   //       // default value\n   //       var data = {};\n   //       field.defaultValue(data);\n   //       if (data[field.columnName]) _ui.value = data[field.columnName];\n\n   //       if (settings.showLabel == true) {\n   //          _ui.label = field.label;\n   //       }\n\n   //       if (\n   //          field.settings.required == true ||\n   //          this.settings.required == true\n   //       ) {\n   //          _ui.required = 1;\n   //       }\n\n   //       if (this.settings.disable == 1) {\n   //          _ui.disabled = true;\n   //       }\n\n   //       // add data-cy to form element for better testing code\n   //       _ui.on = {\n   //          onAfterRender() {\n   //             if (this.getList) {\n   //                var popup = this.getPopup();\n   //                if (!popup) return;\n   //                this.getList().data.each((option) => {\n   //                   if (!option) return;\n   //                   var node = popup.$view.querySelector(\n   //                      \"[webix_l_id='\" + option.id + \"']\"\n   //                   );\n   //                   if (!node) return;\n   //                   node.setAttribute(\n   //                      \"data-cy\",\n   //                      `${field.key} options ${option.id} ${field.id} ${form.id}`\n   //                   );\n   //                });\n   //             }\n   //             this.getInputNode().setAttribute(\n   //                \"data-cy\",\n   //                `${field.key} ${field.columnName} ${field.id} ${form.id}`\n   //             );\n   //          },\n   //       };\n\n   //       // this may be needed if we want to format data at this point\n   //       // if (field.format) data = field.format(data);\n\n   //       _ui.validate = (val, data, colName) => {\n   //          let validator = this.AB.Validation.validator();\n\n   //          field.isValidData(data, validator);\n\n   //          return validator.pass();\n   //       };\n   //    }\n\n   //    var _init = () => {};\n\n   //    return {\n   //       ui: _ui,\n   //       init: _init,\n   //    };\n   // }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormJsonComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormNumberComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormReadonlyComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormSelectMultipleComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormSelectSingleComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormTextboxComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewFormTreeComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n\n            break;\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n\n            break;\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n\n            break;\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewGanttComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (/* options, accessLevel*/) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeListener(\n         \"filter.data\",\n         this._handler_filterData\n      );\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1)\n            abWebix.confirm({\n               title: self.label(\"Delete data\"),\n               text: self.label(\"Do you want to delete this row?\"),\n               callback: function (result) {\n                  if (result) {\n                     const deleteRow = async () => {\n                        try {\n                           const response = await CurrentObject.model().delete(\n                              id.row\n                           );\n\n                           if (response.numRows > 0) {\n                              $DataTable.remove(id);\n                              $DataTable.clearSelection();\n                           } else\n                              abWebix.alert({\n                                 text: self.label(\n                                    \"No rows were effected.  This does not seem right.\"\n                                 ),\n                              });\n                        } catch (err) {\n                           self.AB.notify.developer(err, {\n                              context: \"ABViewGridComponent.onItemClick\",\n                              message: \"Error deleting item\",\n                              obj: CurrentObject.toObj(),\n                              id: id.row,\n                           });\n\n                           //// TODO: what do we do here?\n                        }\n                     };\n\n                     deleteRow();\n                  }\n\n                  $DataTable.clearSelection();\n\n                  return true;\n               },\n            });\n         else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n            };\n\n            this.__handler_dc_loadData = () => {\n               if (\n                  $DataTable.config.view === \"treetable\" &&\n                  CurrentObject &&\n                  !CurrentObject.isGroup\n               ) {\n                  $DataTable.clearAll();\n                  $DataTable.parse(dc.getData() || []);\n\n                  this.grouping();\n                  this.ready();\n               }\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n\n   component(v1App = false) {\n      var component = new ABViewGridComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow() {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      $$(this.ids.component).show($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewImageEditorComponent\";\n\n      var ImageComponent = this.component(App, idBase);\n\n      return ImageComponent;\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      _logic.validateType = (item) => {\n         // verify file type\n         var acceptableTypes = [\"jpg\", \"jpeg\", \"bmp\", \"png\", \"gif\"];\n         var type = item.type.toLowerCase();\n         if (acceptableTypes.indexOf(type) == -1) {\n            webix.message(\n               L(\"Only [{0}] images are supported\", [\n                  acceptableTypes.join(\", \"),\n               ])\n            );\n            return false;\n         } else {\n            // set upload url to uploader\n            var currView = _logic.currentEditObject();\n            let actionKey = `opstool.AB_${currView.application.name.replace(\n               \"_\",\n               \"\"\n            )}.view`;\n            let url = `/file/upload/${currView.application.name}/${actionKey}/1`;\n\n            $$(ids.file).define(\"upload\", url);\n            $$(ids.file).refresh();\n\n            return true;\n         }\n      };\n\n      _logic.uploadedFile = (fileInfo) => {\n         if (!fileInfo || !fileInfo.data) return;\n\n         var currView = _logic.currentEditObject();\n         currView.settings.filename = fileInfo.data.uuid;\n\n         // get width & height of images\n         if (fileInfo.file) {\n            let img = new Image();\n            img.onload = function () {\n               $$(ids.width).setValue(img.width);\n               $$(ids.height).setValue(img.height);\n            };\n            img.src = URL.createObjectURL(fileInfo.file);\n         }\n\n         // trigger a save()\n         this.propertyEditorSave(ids, currView);\n      };\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         {\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Image:\"),\n                  css: \"ab-text-bold\",\n                  width: this.AB.UISettings.config().labelWidthXLarge,\n               },\n               {\n                  view: \"uploader\",\n                  value: L(\"Upload image\"),\n                  name: \"file\",\n                  apiOnly: true,\n                  inputName: \"image\",\n                  multiple: false,\n                  on: {\n                     onBeforeFileAdd: (item) => {\n                        return _logic.validateType(item);\n                     },\n\n                     onFileUpload: (file, response) => {\n                        _logic.uploadedFile(file);\n                     },\n\n                     onFileUploadError: (file, response) => {},\n                  },\n               },\n            ],\n         },\n         {\n            view: \"counter\",\n            name: \"width\",\n            label: L(\"Width:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      $$(ids.width).setValue(view.settings.width);\n      $$(ids.height).setValue(view.settings.height);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.width = $$(ids.width).getValue();\n      view.settings.height = $$(ids.height).getValue();\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewImageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         let newComponent = component;\n\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewKanbanEditorComponent\";\n\n      var Kanban = this.component(App, idBase);\n\n      return {\n         ui: Kanban.ui,\n         logic: Kanban.logic,\n         onShow: Kanban.onShow,\n\n         init: () => {\n            // remove id of the component in caching for refresh .bind of the data collection\n            let dv = this.datacollection;\n            if (dv) dv.removeComponent(Kanban.ui.id);\n\n            Kanban.init();\n         },\n      };\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n\n   component(v1App = false) {\n      let component = new ABViewKanbanComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui.rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewLabelComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewLayoutComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewListEditorComponent\";\n\n      var ListView = this.component(App, idBase);\n\n      return {\n         ui: ListView.ui,\n         logic: ListView.logic,\n         onShow: ListView.onShow,\n\n         init: () => {\n            // remove id of the component in caching for refresh .bind of the data collection\n            let dv = this.datacollection;\n            if (dv) dv.removeComponent(ListView.ui.id);\n\n            ListView.init();\n         },\n      };\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      // _logic functions\n\n      _logic.selectSource = (dcId, oldDcId) => {\n         var currView = _logic.currentEditObject();\n\n         // Update field options in property\n         this.propertyUpdateFieldOptions(ids, currView, dcId);\n      };\n\n      return commonUI.concat([\n         {\n            name: \"datacollection\",\n            view: \"richselect\",\n            label: L(\"Data Source\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            on: {\n               onChange: _logic.selectSource,\n            },\n         },\n         {\n            name: \"field\",\n            view: \"richselect\",\n            label: L(\"Field\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n      ]);\n   }\n\n   /**\n    * @method propertyUpdateFieldOptions\n    * Populate fields of object to select list in property\n    *\n    * @param {Object} ids\n    * @param {ABViewForm} view - the current component\n    * @param {string} dvId - id of ABDatacollection\n    */\n   static propertyUpdateFieldOptions(ids, view, dvId) {\n      var datacollection = view.AB.datacollectionByID(dvId);\n      var object = datacollection ? datacollection.datasource : null;\n\n      // Pull field list\n      var fieldOptions = [];\n      if (object != null) {\n         fieldOptions = object.fields().map((f) => {\n            return {\n               id: f.id,\n               value: f.label,\n            };\n         });\n      }\n\n      $$(ids.field).define(\"options\", fieldOptions);\n      $$(ids.field).refresh();\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      var datacollectionId = view.settings.dataviewID\n         ? view.settings.dataviewID\n         : null;\n      var SourceSelector = $$(ids.datacollection);\n\n      // Pull data collections to options\n      var dcOptions = view.propertyDatacollections();\n      SourceSelector.define(\"options\", dcOptions);\n      SourceSelector.define(\"value\", datacollectionId);\n      SourceSelector.refresh();\n\n      this.propertyUpdateFieldOptions(ids, view, datacollectionId);\n\n      $$(ids.field).setValue(view.settings.field);\n      $$(ids.height).setValue(view.settings.height);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n      view.settings.field = $$(ids.field).getValue();\n      view.settings.height = $$(ids.height).getValue();\n      view.settings.height =\n         parseInt(view.settings.height) || ABViewList.defaultValues().height;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewListComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App) {\n      let component = new ABViewMenuComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n   /*\n   componentV1(App) {\n      var comp = super.component(App);\n      var _ui = {\n         view: \"scrollview\",\n         borderless: true,\n         css:\n            this.settings.pageBackground ||\n            ABPropertyComponentDefaults.pageBackground,\n         body: comp.ui,\n      };\n\n      var _init = (options) => {\n         var accessLevel = this.getUserAccess();\n         comp.init(options, accessLevel);\n      };\n\n      return {\n         ui: _ui,\n         init: _init,\n         logic: comp.logic,\n\n         onShow: comp.onShow,\n      };\n   }\n   */\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      var idBase = \"ABViewPivotEditorComponent\";\n      var ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      var componentBase = this.component(App);\n      var component = App.AB.cloneDeep(componentBase);\n\n      component.ui.id = ids.component;\n      component.ui.readonly = false;\n      component.ui.on = {\n         onBeforeApply: (structure) => {\n            this.settings.structure = structure;\n            this.save();\n         },\n      };\n\n      component.init = (options) => {\n         componentBase.init({\n            componentId: ids.component,\n         });\n      };\n\n      return component;\n   }\n\n   //\n   // Property Editor\n   //\n\n   // static propertyEditorComponent(App) {\n   // \treturn ABViewPropertyComponent.component(App);\n   // }\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      let commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      return commonUI.concat([\n         {\n            name: \"datacollection\",\n            view: \"richselect\",\n            label: L(\"Data Source\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"counter\",\n            name: \"height\",\n            label: L(\"Height:\"),\n            labelWidth: this.AB.UISettings.config().labelWidthLarge,\n         },\n         {\n            view: \"checkbox\",\n            name: \"removeMissed\",\n            labelRight: L(\"Remove empty data.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"totalColumn\",\n            labelRight: L(\"Show a total column.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"separateLabel\",\n            labelRight: L(\"Separate header label.\"),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"min\",\n            labelRight: L(\n               \"Highlighting of a cell(s) with the least value in a row.\"\n            ),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            view: \"checkbox\",\n            name: \"max\",\n            labelRight: L(\n               \"Highlighting of a cell(s) with the biggest value in a row.\"\n            ),\n            labelWidth: this.AB.UISettings.config().labelWidthCheckbox,\n         },\n         {\n            name: \"decimalPlaces\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Decimal Places\"),\n            labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      var datacollectionId = view.settings.dataviewID\n         ? view.settings.dataviewID\n         : null;\n      var SourceSelector = $$(ids.datacollection);\n\n      // Pull data collections to options\n      var dcOptions = view.propertyDatacollections();\n      SourceSelector.define(\"options\", dcOptions);\n      SourceSelector.define(\"value\", datacollectionId);\n      SourceSelector.refresh();\n\n      $$(ids.removeMissed).setValue(view.settings.removeMissed);\n      $$(ids.totalColumn).setValue(view.settings.totalColumn);\n      $$(ids.separateLabel).setValue(view.settings.separateLabel);\n      $$(ids.min).setValue(view.settings.min);\n      $$(ids.max).setValue(view.settings.max);\n      $$(ids.height).setValue(view.settings.height);\n      $$(ids.decimalPlaces).setValue(\n         view.settings.decimalPlaces == null ? 2 : view.settings.decimalPlaces\n      );\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n\n      view.settings.removeMissed = $$(ids.removeMissed).getValue();\n      view.settings.totalColumn = $$(ids.totalColumn).getValue();\n      view.settings.separateLabel = $$(ids.separateLabel).getValue();\n      view.settings.min = $$(ids.min).getValue();\n      view.settings.max = $$(ids.max).getValue();\n      view.settings.height = $$(ids.height).getValue();\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewPivotComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method editorComponent\n    * return the Editor for this UI component.\n    * the editor should display either a \"block\" view or \"preview\" of\n    * the current layout of the view.\n    * @param {string} mode what mode are we in ['block', 'preview']\n    * @return {Component}\n    */\n   editorComponent(App, mode) {\n      let idBase = \"ABViewReportsManagerEditorComponent\";\n      let ids = {\n         component: App.unique(`${idBase}_component`),\n      };\n\n      let component = this.component(App);\n\n      component.ui.id = ids.component;\n\n      component.init = (options) => {};\n\n      return component;\n   }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      return commonUI.concat([]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.settings.dataviewID = $$(ids.datacollection).getValue();\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewReportsManagerComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB, accessLevel);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTextComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   // Property Editor\n   //\n\n   static propertyEditorDefaultElements(App, ids, _logic, ObjectDefaults) {\n      var commonUI = super.propertyEditorDefaultElements(\n         App,\n         ids,\n         _logic,\n         ObjectDefaults\n      );\n\n      // in addition to the common .label  values, we\n      // ask for:\n      return commonUI.concat([\n         {\n            name: \"columnSpan\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Column Span\"),\n\n            hidden: true, // TODO\n         },\n         {\n            name: \"rowSpan\",\n            view: \"counter\",\n            min: 1,\n            label: L(\"Row Span\"),\n\n            hidden: true, // TODO\n         },\n      ]);\n   }\n\n   static propertyEditorPopulate(App, ids, view) {\n      super.propertyEditorPopulate(App, ids, view);\n\n      $$(ids.columnSpan).setValue(\n         view.position.dx || ABPropertyComponentDefaults.columnSpan\n      );\n      $$(ids.rowSpan).setValue(\n         view.position.dy || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n\n   static propertyEditorValues(ids, view) {\n      super.propertyEditorValues(ids, view);\n\n      view.position.dx = $$(ids.columnSpan).getValue();\n      view.position.dy = $$(ids.rowSpan).getValue();\n   }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               view: \"button\",\n               name: \"import\",\n               id: ids.importButton,\n               value: this.label(\"Import\"),\n               css: \"webix_primary\",\n               disabled: true,\n               click: () => {\n                  this.import();\n               },\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = {};\n\n         // Set parent's data collection cursor\n         if (objectLink && linkConnectFields.length && linkValues) {\n            linkConnectFields.forEach((f) => {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               newRowData[f.columnName] = {};\n               newRowData[f.columnName][linkColName] =\n                  linkValues[linkColName] || linkValues.id;\n            });\n         }\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % 50 == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, 50);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui();\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               // \tlet item = this.getItem(rowId);\n\n               // \t_logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n\n   onShow(viewId) {\n      super.onShow(viewId);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key]).hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component();\n         } catch (err) {\n            component = v.component(this.AB._App);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage.bind(this),\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               scrollview: \"\",\n               dataFlexView: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.scrollview,\n            view: \"scrollview\",\n            scroll: \"y\",\n            body: {\n               id: ids.dataFlexView,\n               view: \"flexlayout\",\n               paddingX: 15,\n               paddingY: 19,\n               type: \"space\",\n               cols: [],\n            },\n            on: {\n               onAfterScroll: async () => {\n                  const pos = $$(ids.scrollview).getScrollState();\n\n                  await this.scroll(pos);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      const dataView = $$(ids.dataFlexView);\n\n      // initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      // if (dc.datacollectionLink && dc.fieldLink) {\n      //    dc.bind(dataView, dc.datacollectionLink, dc.fieldLink);\n      // } else {\n      //    dc.bind(dataView);\n      // }\n      // track all flexlayout component IDs on the data collectino so we can notify them of changes\n      dc.attachFlexlayout(dataView);\n      dc.on(\"initializingData\", () => {\n         this.busy();\n      });\n      dc.on(\"initializedData\", () => {\n         this.ready();\n      });\n      dc.on(\"loadData\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"update\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"delete\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n      dc.on(\"create\", () => {\n         this.emptyView();\n         this.renderData();\n      });\n\n      // this.eventClear();\n      //\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"loadData\",\n      //    listener: () => {\n      //       com.renderData();\n      //    },\n      // });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.initialized) this.renderData();\n   }\n\n   get yPosition() {\n      return this._yPosition ?? 0;\n   }\n\n   set yPosition(pos) {\n      this._yPosition = pos;\n   }\n\n   busy() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.disable();\n\n      const abWebix = this.AB.Webix;\n\n      if (!Scroll.showProgress) abWebix.extend(Scroll, abWebix.ProgressBar);\n\n      Scroll.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n\n      // editor mode doesn't load this ui\n      if (!Scroll || !Layout) return;\n\n      Layout.enable();\n\n      const AB = this.AB;\n\n      if (Scroll && !Scroll.hideProgress)\n         AB.Webix.extend(Scroll, AB.Webix.ProgressBar);\n\n      Scroll.hideProgress();\n   }\n\n   renderData() {\n      const ids = this.ids;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      const records = [];\n      const dc = this.datacollection;\n\n      if (!dc) {\n         this.ready();\n\n         return;\n      }\n\n      const Layout = $$(ids.dataFlexView) || $$(ids.component);\n\n      if (!Layout || isNaN(Layout.$width)) {\n         this.ready();\n\n         return;\n      }\n\n      const baseView = this.view;\n      const xCount = parseInt(this.settings.xCount);\n      const recordWidth = Math.floor(\n         (Layout.$width - 20 - xCount * 20) / xCount\n      );\n\n      const rows = dc.getData();\n\n      // if this amount of data is already parsed just skip the rest.\n      if (Layout.currentLength === rows.length) {\n         this.ready();\n\n         return;\n      }\n\n      Layout.currentLength = rows.length;\n\n      // store total of rows\n      this._startPos = Layout.getChildViews ? Layout.getChildViews().length : 0;\n\n      let stopPos = rows.length;\n\n      if (dc.settings.loadAll || this._startPos === 0) stopPos = rows.length;\n      else if (rows.length - this._startPos > 20) stopPos = this._startPos + 20;\n\n      for (let i = this._startPos; i < stopPos; i++) {\n         // get the components configuation\n         const detailCom = new ABViewDetailComponent(baseView, rows[i].id);\n         const _ui = detailCom.ui();\n\n         // adjust the UI to make sure it will look like a \"card\"\n         _ui.type = \"space\";\n         _ui.css = \"ab-detail-view\";\n\n         if (detailsPage || editPage) {\n            _ui.css += ` ab-detail-hover ab-record-${rows[i].id}`;\n\n            if (detailsPage) _ui.css += \" ab-detail-page\";\n\n            if (editPage) _ui.css += \" ab-edit-page\";\n         }\n\n         _ui.paddingX = 10;\n         _ui.paddingY = 6;\n         _ui.minWidth = recordWidth - 10;\n         _ui.maxWidth = recordWidth;\n\n         if (Layout.addView) {\n            Layout.addView(_ui, -1);\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[i]), 0);\n         } else records.push(_ui);\n      }\n\n      if (records.length) {\n         const flexlayout = {\n            id: ids.dataFlexView,\n            view: \"flexlayout\",\n            paddingX: 15,\n            paddingY: 19,\n            type: \"space\",\n            cols: records,\n         };\n\n         this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n\n         for (let j = this._startPos; j < stopPos; j++) {\n            const detailCom = new ABViewDetailComponent(baseView, rows[j].id);\n\n            detailCom.init(null, 2); // 2 - Always allow access to components inside data view\n            setTimeout(detailCom.displayData(rows[j]), 0);\n         }\n      }\n\n      if ($$(ids.scrollview)) {\n         $$(ids.scrollview).scrollTo(0, this.yPosition);\n\n         if (detailsPage || editPage) {\n            Layout.$view.onclick = (e) => {\n               let clicked = false;\n               let divs = e.path ?? [];\n\n               // NOTE: Some web browser clients do not support .path\n               if (!divs.length) {\n                  divs.push(e.target);\n                  divs.push(e.target.parentNode);\n               }\n\n               if (editPage) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem_header\") > -1\n                     ) {\n                        clicked = true;\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(editPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n                        break;\n                     }\n                  }\n               }\n\n               if (detailsPage && !clicked) {\n                  for (let p of divs) {\n                     if (\n                        p.className &&\n                        p.className.indexOf(\"webix_accordionitem\") > -1\n                     ) {\n                        p.parentNode.parentNode.classList.forEach((c) => {\n                           if (c.indexOf(\"ab-record-\") > -1) {\n                              // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                              const record = c.replace(\"ab-record-\", \"\");\n                              this.linkPage.changePage(detailsPage, record);\n                              // com.logic.toggleTab(detailsTab, ids.component);\n                           }\n                        });\n\n                        break;\n                     }\n                  }\n               }\n            };\n         }\n      }\n\n      //Add data-cy attributes for cypress tests\n      const name = baseView.name.replace(\".dataview\", \"\");\n\n      Layout.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n\n      Layout.getChildViews().forEach((child, i) => {\n         const uuid = rows[i + this._startPos][\"uuid\"];\n         const view = child.$view;\n\n         view\n            .querySelector(\".webix_accordionitem_body\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item ${name} ${uuid} ${baseView.id}`\n            );\n         view\n            .querySelector(\".webix_accordionitem_button\")\n            ?.setAttribute(\n               \"data-cy\",\n               `dataview item button ${name} ${uuid} ${baseView.id}`\n            );\n      });\n\n      this.ready();\n   }\n\n   emptyView() {\n      const ids = this.ids;\n      const flexlayout = {\n         id: ids.dataFlexView,\n         view: \"flexlayout\",\n         type: \"clean\",\n         padding: 10,\n         css: { background: \"#ebedf0 !important\" },\n         cols: [],\n      };\n\n      this.AB.Webix.ui(flexlayout, $$(ids.scrollview), $$(ids.dataFlexView));\n   }\n\n   /**\n    * @method scroll\n    * @param pos - {\n    * \t\t\t\t\tx: {integer},\n    * \t\t\t\t\ty: {integer}\n    * \t\t\t\t}\n    */\n   async scroll(pos) {\n      const ids = this.ids;\n      const Layout = $$(ids.dataFlexView);\n      const Scroll = $$(ids.scrollview);\n      const loadWhen = 40;\n      const y = pos.y;\n      const maxYPos = Layout.$height - Scroll.$height;\n\n      if (maxYPos - y <= loadWhen) {\n         if (this.loadMoreTimer) return;\n\n         this.yPosition = y;\n\n         const dc = this.datacollection;\n\n         if (!dc) return;\n\n         if (Layout.getChildViews().length >= dc.totalCount) return;\n\n         // loading cursor\n         this.busy();\n\n         await dc.loadData(Layout.getChildViews().length || 0);\n\n         this.loadMoreTimer = setTimeout(() => {\n            this.loadMoreTimer = null;\n         }, 1100);\n      }\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field || !b?.field) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field.key === \"formula\" && b.field.key === \"calculate\")\n            return -1;\n         else if (a.field.key === \"calculate\" && b.field.key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData[field.columnName];\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     const dv = this.datacollection;\n                     const ds = dv ? dv.datasource : null;\n                     const needRecalculate =\n                        !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(null, this.ids.detailItem);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let templateLabel = \"\";\n\n      if (detailView?.settings?.showLabel) {\n         if (detailView.settings.labelPosition === \"top\")\n            templateLabel =\n               \"<label style='display:block; text-align: left;' class='webix_inp_top_label'>#label#</label>\";\n         else\n            templateLabel =\n               \"<label style='width: #width#px; display: inline-block; float: left; line-height: 32px;'>#label#</label>\";\n      }\n\n      const template = (templateLabel + \"#result#\")\n         // let template = (templateLabel)\n         .replace(/#width#/g, detailView.settings.labelWidth)\n         .replace(/#label#/g, field ? field.label : \"\")\n         .replace(/#result#/g, field ? field.columnHeader().template({}) : \"\");\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n\n      let templateLabel = \"\";\n\n      if (settings.showLabel) {\n         if (settings.labelPosition === \"top\")\n            templateLabel =\n               \"<label style='display:block; text-align: left;' class='webix_inp_top_label'>#label#</label>#display#\";\n         else\n            templateLabel =\n               \"<label style='width: #width#px; display: inline-block; float: left; line-height: 32px;'>#label#</label><div class='ab-detail-component-holder' style='margin-left: #width#px;'>#display#</div>\";\n      }\n      // no label\n      else templateLabel = \"#display#\";\n\n      const field = baseView.field();\n      const template = templateLabel\n         .replace(/#width#/g, settings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\");\n\n      let height = 38;\n\n      if (settings.labelPosition === \"top\") height = height * 2;\n\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const _ui = super.ui([\n         Object.assign(\n            {\n               id: this.ids.detailItem,\n               view: \"template\",\n               borderless: true,\n               height: height,\n               isUsers: field?.key === \"user\",\n               template: template,\n               data: { display: \"\" }, // show empty data in template\n            },\n            uiDetailItemComponent\n         ),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            if (dcCursor) {\n               const treeCursor = dc.getCursor(true);\n\n               dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            } else dataList.push(...this.AB.cloneDeep(dc.getData()));\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = this.setReportValues(\n                     data,\n                     f,\n                     fieldLabels,\n                     mlFields\n                  );\n\n                  // Keep id of ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //\t\tfieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //\t\t\twe can buy newer version to support it\n            //\t\t\thttps://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         // \tif (imgBuffer) {\n         // \t\tvar maxWidth = 300;\n         // \t\tvar maxHeight = 160;\n\n         // \t\t// Find aspect ratio image dimensions\n         // \t\ttry {\n         // \t\t\tvar image = sizeOf(imgBuffer);\n         // \t\t\tvar ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         // \t\t\treturn [image.width * ratio, image.height * ratio];\n         // \t\t}\n         // \t\t// if invalid image, then should return 0, 0 sizes\n         // \t\tcatch (err) {\n         // \t\t\treturn [0, 0];\n         // \t\t}\n\n         // \t}\n         // \telse {\n         // \t\treturn [0, 0];\n         // \t}\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n               reloadView: `${\n                  idBase || `ABViewForm_${baseView.id}`\n               }_form_reloadView`,\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n      this.loadDcDataOfRecordRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   loadDcDataOfRecordRules() {\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollections(\n                  (dc) => dc.id === op.value\n               )[0];\n\n               if (\n                  pullDataDC &&\n                  pullDataDC.dataStatus === pullDataDC.dataStatusFlag.notInitial\n               )\n                  pullDataDC.loadData();\n            }\n         );\n      });\n   }\n\n   async onShow(data) {\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n\n      await superComponent.onShow();\n\n      const ids = this.ids;\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // if the cursor is cleared before or after we need to make\n         // sure the reload view button does not appear\n         if (settings.clearOnLoad || settings.clearOnSave)\n            $$(ids.reloadView)?.getParentView()?.removeView(ids.reloadView);\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n\n         if ($form) dc.bind($form);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field() && comp.field().id === relationField.id;\n      })[0];\n\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required: field?.settings?.required || settings?.required || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         const currentVals = $formItem.getValue();\n\n         let selectedItems;\n         if (currentVals.indexOf(saveData.id) === -1)\n            selectedItems = currentVals\n               ? `${currentVals},${saveData.id}`\n               : saveData.id;\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData.id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n      // else if (settings?.objectWorkspace?.filterConditions?.rules?.length) {\n      //    filterConditions = this.AB.cloneDeep(\n      //       settings.objectWorkspace.filterConditions\n      //    );\n      // }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         sort: settings.objectWorkspace.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      const template = `<div class=\"customField ${\n         formSettings.labelPosition\n      }\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: this.new_width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || this.new_width\n            : this.new_width;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: () => {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        const $resizer = $$(ids.resizer);\n\n                        if (itemId) {\n                           const data = $$(ids.kanban).getItem(itemId);\n\n                           this.FormSide.show(data);\n\n                           $resizer?.show();\n                        } else {\n                           this.FormSide.hide();\n\n                           $resizer?.hide();\n                        }\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            if (!this.settings.template)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      const CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this._ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this._ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this._ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (\n                  CurrentHorizontalField instanceof this._ABFieldConnect\n               )\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this._ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this._ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            $menuUser.parse(\n               options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                  };\n               })\n            );\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         try {\n            viewComponents[v.id] = v.component();\n         } catch (err) {\n            // NOTE: The 'Layout' component supports only view component v2\n            console.error(\n               `View: [${v.key}] might need to be updated to new version`,\n               err\n            );\n         }\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id, e, node) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            id: this.ids.pivot,\n            view: \"pivot\",\n            readonly: true,\n            removeMissed: settings.removeMissed,\n            totalColumn: settings.totalColumn,\n            separateLabel: settings.separateLabel,\n            min: settings.min,\n            max: settings.max,\n            format: (value) => {\n               const decimalPlaces = settings.decimalPlaces || 2;\n\n               return value !== \"0\"\n                  ? parseFloat(value).toFixed(decimalPlaces || 0)\n                  : value;\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      const object = dc.datasource;\n\n      if (!object) return;\n\n      const $pivot = $$(ids.pivot);\n\n      if ($pivot && object instanceof ABObjectQuery) {\n         const customLabels = {};\n\n         object.fields().forEach((f) => {\n            customLabels[f.columnName] = f.label;\n         });\n\n         $pivot.define(\"fieldMap\", customLabels);\n      }\n\n      const populateData = () => {\n         const data = dc.getData();\n         const dataMapped = data.map((d) => {\n            const result = {};\n\n            object.fields().forEach((f) => {\n               if (\n                  f instanceof ABFieldCalculate ||\n                  f instanceof ABFieldFormula ||\n                  f instanceof ABFieldNumber\n               )\n                  result[f.columnName] = d[f.columnName];\n               else result[f.columnName] = f.format(d);\n            });\n\n            return result;\n         });\n\n         $pivot.parse(dataMapped);\n\n         const settings = this.settings;\n\n         // set pivot configuration\n         if (settings.structure) $pivot.setStructure(settings.structure);\n      };\n\n      this.view.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            populateData();\n         },\n      });\n\n      switch (dc.dataStatus) {\n         case dc.dataStatusFlag.notInitial:\n            dc.loadData();\n\n            break;\n\n         case dc.dataStatusFlag.initialized:\n            populateData();\n\n            break;\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign({ reportManager: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      const _uiReportManager = {\n         id: this.ids.reportManager,\n         view: \"reports\",\n         toolbar: true,\n         override: new Map([\n            [\n               reports.services.Backend,\n               class MyBackend extends reports.services.Backend {\n                  async getModules() {\n                     return settings.moduleList || [];\n                  }\n\n                  saveModule(id = abWebix.uid(), data) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     let indexOfModule = null;\n\n                     const module = settings.moduleList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfModule = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (module) settings.moduleList[indexOfModule] = data;\n                     // Add\n                     else settings.moduleList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteModule(id) {\n                     settings.moduleList = settings.moduleList || [];\n\n                     settings.moduleList = settings.moduleList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getModels() {\n                     const reportModels = {};\n\n                     (ab.datacollections() || []).forEach((dc) => {\n                        const obj = dc.datasource;\n\n                        if (!obj) return;\n\n                        const reportFields = self.getReportFields(dc);\n\n                        // get connected data collections\n                        // let linkedFields = [];\n                        // (obj.connectFields() || []).forEach((f, index) => {\n                        //    let connectedDcs = ab.datacollections(\n                        //       (dColl) =>\n                        //          dColl &&\n                        //          dColl.datasource &&\n                        //          dColl.datasource.id === f.settings.linkObject\n                        //    );\n                        //    (connectedDcs || []).forEach((linkedDc) => {\n                        //       linkedFields.push({\n                        //          id: index + 1,\n                        //          name: linkedDc.label,\n                        //          source: dc.id,\n                        //          target: linkedDc.id\n                        //       });\n                        //    });\n                        // });\n\n                        // // MOCK UP for testing\n                        // let linkedFields = [\n                        //    {\n                        //       id: \"id\",\n                        //       name: \"id\",\n                        //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n                        //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n                        //    }\n                        // ];\n\n                        reportModels[dc.id] = {\n                           id: dc.id,\n                           name: dc.label,\n                           data: reportFields,\n                           refs: [],\n                        };\n                     });\n\n                     return reportModels;\n                  }\n\n                  async getQueries() {\n                     return settings.queryList || [];\n                  }\n\n                  saveQuery(id = abWebix.uid(), data) {\n                     settings.queryList = settings.queryList || [];\n\n                     let indexOfQuery = null;\n\n                     const query = settings.queryList.filter((m, index) => {\n                        const isExists = m.id === id;\n\n                        if (isExists) indexOfQuery = index;\n\n                        return isExists;\n                     })[0];\n\n                     // Update\n                     if (query) settings.queryList[indexOfQuery] = data;\n                     // Add\n                     else settings.queryList.push(data);\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  deleteQuery(id) {\n                     settings.queryList = settings.queryList || [];\n                     settings.queryList = settings.queryList.filter(\n                        (m) => m.id !== id\n                     );\n\n                     return new Promise((resolve, reject) => {\n                        const viewSave = async () => {\n                           try {\n                              await baseView.save();\n\n                              resolve({ id: id });\n                           } catch (err) {\n                              reject(err);\n                           }\n                        };\n\n                        viewSave();\n                     });\n                  }\n\n                  async getData(config) {\n                     let result = [];\n                     let pullDataTasks = [];\n                     let dcIds = [];\n                     let dcData = {};\n                     let reportFields = [];\n\n                     // pull data of the base and join DCs\n                     dcIds.push(config.data);\n                     (config.joins || []).forEach((j) => {\n                        dcIds.push(j.sid);\n                        dcIds.push(j.tid);\n                     });\n                     dcIds = ab.uniq(dcIds);\n                     dcIds.forEach((dcId) => {\n                        pullDataTasks.push(\n                           new Promise((resolve, reject) => {\n                              const getData = async () => {\n                                 try {\n                                    dcData[dcId] =\n                                       (await self.getData(dcId)) || [];\n\n                                    resolve();\n                                 } catch (err) {\n                                    reject(err);\n                                 }\n                              };\n\n                              getData();\n                           })\n                        );\n                     });\n\n                     dcIds.forEach((dcId) => {\n                        const dataCol = ab.datacollectionByID(dcId);\n\n                        if (!dataCol) return;\n\n                        reportFields = reportFields.concat(\n                           self.getReportFields(dataCol).map((f) => {\n                              // change format of id to match the report widget\n                              f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                              return f;\n                           })\n                        );\n                     });\n\n                     await Promise.all(pullDataTasks);\n\n                     // the data result equals data of the base DC\n                     result = dcData[config.data] || [];\n\n                     if (config.joins?.length)\n                        (config.joins || []).forEach((j) => {\n                           const sourceDc = ab.datacollectionByID(j.sid);\n\n                           if (!sourceDc) return;\n\n                           const sourceObj = sourceDc.datasource;\n\n                           if (!sourceObj) return;\n\n                           const targetDc = ab.datacollectionByID(j.tid);\n\n                           if (!targetDc) return;\n\n                           const targetObj = targetDc.datasource;\n\n                           if (!targetObj) return;\n\n                           const sourceLinkField = sourceObj.fieldByID(j.sf);\n                           const targetLinkField = targetObj.fieldByID(j.tf);\n\n                           if (!sourceLinkField && !targetLinkField) return;\n\n                           const sourceData = dcData[j.sid] || [];\n                           const targetData = dcData[j.tid] || [];\n\n                           sourceData.forEach((sData) => {\n                              targetData.forEach((tData) => {\n                                 let sVal =\n                                    sData[\n                                       sourceLinkField\n                                          ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                          : `${j.sid}.id`\n                                    ] || [];\n\n                                 let tVal =\n                                    tData[\n                                       targetLinkField\n                                          ? `${j.tid}.${targetLinkField.columnName}.id`\n                                          : `${j.tid}.id`\n                                    ] || [];\n\n                                 if (!Array.isArray(sVal)) sVal = [sVal];\n\n                                 if (!Array.isArray(tVal)) tVal = [tVal];\n\n                                 // Add joined row to the result array\n                                 const matchedVal = sVal.filter(\n                                    (val) => tVal.indexOf(val) > -1\n                                 );\n\n                                 if (matchedVal?.length) {\n                                    const updateRows =\n                                       result.filter(\n                                          (r) =>\n                                             r[`${j.sid}.id`] ===\n                                                sData[`${j.sid}.id`] &&\n                                             !r[`${j.tid}.id`]\n                                       ) || [];\n\n                                    if (updateRows?.length)\n                                       (updateRows || []).forEach((r) => {\n                                          for (const key in tData)\n                                             if (key !== \"id\")\n                                                r[key] = tData[key];\n                                       });\n                                    else\n                                       result.push(\n                                          Object.assign(\n                                             ab.cloneDeep(sData),\n                                             ab.cloneDeep(tData)\n                                          )\n                                       );\n                                 }\n                              });\n                           });\n                        });\n\n                     // filter & sort\n                     const queryVal = JSON.parse(config.query || \"{}\");\n\n                     if (queryVal?.rules?.length)\n                        queryVal.rules.forEach((r) => {\n                           if (!r || !r.type || !r.condition) return;\n\n                           switch (r.type) {\n                              case \"date\":\n                              case \"datetime\":\n                                 // Convert string to Date object\n                                 if (r.condition.filter) {\n                                    if (ab.isString(r.condition.filter))\n                                       r.condition.filter = ab.rules.toDate(\n                                          r.condition.filter\n                                       );\n\n                                    if (\n                                       r.condition.filter.start &&\n                                       ab.isString(r.condition.filter.start)\n                                    )\n                                       r.condition.filter.start =\n                                          ab.rules.toDate(\n                                             r.condition.filter.start\n                                          );\n\n                                    if (\n                                       r.condition.filter.end &&\n                                       ab.isString(r.condition.filter.end)\n                                    )\n                                       r.condition.filter.end = ab.rules.toDate(\n                                          r.condition.filter.end\n                                       );\n                                 }\n\n                                 break;\n                           }\n                        });\n\n                     // create a new query widget to get the filter function\n                     const filterElem = abWebix.ui({\n                        view: \"query\",\n                        fields: reportFields,\n                        value: queryVal,\n                     });\n\n                     // create a new data collection and apply the query filter\n                     const tempDc = new abWebix.DataCollection();\n\n                     tempDc.parse(result);\n\n                     // filter\n                     let filterFn;\n\n                     try {\n                        filterFn = filterElem.getFilterFunction();\n                     } catch (error) {\n                        // continue regardless of error\n                     }\n\n                     if (filterFn) tempDc.filter(filterFn);\n\n                     // sorting\n                     (config.sort || []).forEach((sort) => {\n                        if (sort.id)\n                           tempDc.sort({\n                              as: \"string\",\n                              dir: sort.mod || \"asc\",\n                              by: `#${sort.id}#`,\n                           });\n                     });\n\n                     result = tempDc.serialize();\n\n                     // clear\n                     filterElem.destructor();\n                     tempDc.destructor();\n\n                     // group by\n                     if (config?.group?.length) {\n                        (config.group || []).forEach((groupProp) => {\n                           result = _(result).groupBy(groupProp);\n                        });\n\n                        result = result\n                           .map((groupedData, id) => {\n                              const groupedResult = {};\n\n                              (config.columns || []).forEach((col) => {\n                                 const agg = col.split(\".\")[0];\n                                 const rawCol = col.replace(\n                                    /sum.|avg.|count.|max.|min./g,\n                                    \"\"\n                                 );\n\n                                 switch (agg) {\n                                    case \"sum\":\n                                       groupedResult[col] = ab.sumBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"avg\":\n                                       groupedResult[col] = ab.meanBy(\n                                          groupedData,\n                                          rawCol\n                                       );\n                                       break;\n                                    case \"count\":\n                                       groupedResult[col] = (\n                                          groupedData || []\n                                       ).length;\n                                       break;\n                                    case \"max\":\n                                       groupedResult[col] =\n                                          (ab.maxBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    case \"min\":\n                                       groupedResult[col] =\n                                          (ab.minBy(groupedData, rawCol) || {})[\n                                             rawCol\n                                          ] || \"\";\n                                       break;\n                                    default:\n                                       groupedResult[col] = groupedData[0][col];\n                                       break;\n                                 }\n                              });\n\n                              return groupedResult;\n                           })\n                           .value();\n                     }\n\n                     return result;\n                  }\n                  getOptions(fields) {\n                     return Promise.resolve([]);\n                  }\n                  getFieldData(fieldId) {\n                     return Promise.resolve([]);\n                  }\n               },\n            ],\n            [\n               reports.views.table,\n               class MyTable extends reports.views.table {\n                  // NOTE: fix format of date column type\n                  GetColumnConfig(a) {\n                     if (a.type === \"date\") {\n                        return {\n                           id: a.id,\n                           header:\n                              !a.meta.header || a.meta.header === \"none\"\n                                 ? a.meta.name || a.name\n                                 : [\n                                      a.meta.name || a.name,\n                                      {\n                                         content:\n                                            a.header === \"text\"\n                                               ? \"textFilter\"\n                                               : \"richSelectFilter\",\n                                      },\n                                   ],\n                           type: a.type,\n                           sort: \"date\",\n                           width: a.width || 200,\n                           format: (val) => {\n                              // check valid date\n                              if (val?.getTime && !isNaN(val.getTime()))\n                                 return abWebix.i18n.dateFormatStr(val);\n                              else return \"\";\n                           },\n                        };\n                     } else return super.GetColumnConfig(a);\n                  }\n               },\n            ],\n         ]),\n      };\n\n      const _ui = super.ui([_uiReportManager]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         fields.push({\n            id: f.columnName,\n            name: f.label,\n            filter: f.fieldIsFilterable(),\n            edit: false,\n            type: columnFormat.editor || \"text\",\n            format: columnFormat.format,\n            options: columnFormat.options,\n            ref: \"\",\n            key: false,\n            show: true,\n            abField: f,\n         });\n\n         if (f.isConnection && f.settings.isSource) {\n            const linkedDcs = this.AB.datacollectionByID(f.settings.linkObject);\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n\n      if (!object) return [];\n\n      if (\n         datacollection.dataStatus === datacollection.dataStatusFlag.notInitial\n      )\n         await datacollection.loadData();\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            reportRow[col] = field ? field.format(row) : row[columnName];\n\n            // FK value of the connect field\n            if (field && field.isConnection) {\n               if (Array.isArray(row[columnName]))\n                  reportRow[`${col}.id`] = row[columnName].map(\n                     (link) =>\n                        link[field.datasourceLink.PK()] || link.id || link\n                  );\n               else if (row[columnName])\n                  reportRow[`${col}.id`] =\n                     row[columnName][field.datasourceLink.PK()] ||\n                     row[columnName].id ||\n                     row[columnName];\n            }\n\n            const rField = reportFields.filter((f) => f.id === columnName)[0];\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onAfterRender: () => {\n                        const $sidebar = $$(ids.sidebar);\n\n                        // set ids of controller buttons\n                        const collapseNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                        );\n\n                        if (collapseNode)\n                           collapseNode.setAttribute(\n                              \"data-cy\",\n                              `tab-collapseMenu-${ids.collapseMenu}`\n                           );\n\n                        const expandNode = $sidebar.$view.querySelector(\n                           `[webix_tm_id=\"${ids.expandMenu}\"]`\n                        );\n\n                        if (expandNode)\n                           expandNode.setAttribute(\n                              \"data-cy\",\n                              `tab-expandMenu-${ids.expandMenu}`\n                           );\n\n                        baseView.views((view) => {\n                           const node = $sidebar.$view.querySelector(\n                              `[webix_tm_id=\"${view.id}_menu\"]`\n                           );\n\n                           if (!node) return;\n\n                           node.setAttribute(\n                              \"data-cy\",\n                              `tab-${view.label.replace(\" \", \"\")}-${view.id}-${\n                                 baseView.id\n                              }`\n                           );\n                        });\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n\n      $tab.blockEvent();\n      this.view.changePage(pageId);\n      $tab.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const ids = this.ids;\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (\n         (view.key === \"tab\" || view.key === \"viewcontainer\") &&\n         $viewID?.show\n      ) {\n         $viewID.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const button = pageClone.views(\n                  (v) => v instanceof ABViewFormButton,\n                  true\n               )[0];\n               if (button) {\n                  button.parent.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               }\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      var id = \"hiddenQB_\" + webix.uid();\n\n      // if our data passes the QueryRules then tell Action to process\n      var ui = {\n         id: id,\n         hidden: true,\n         view: \"querybuilder\",\n      };\n      var hiddenQB = webix.ui(ui);\n\n      let currentAction = this.currentAction();\n      var QBCondition = currentAction.condition();\n\n      if (this.objectQB) {\n         this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      }\n\n      let query = QBCondition[0] || {},\n         fields = QBCondition[1] || [];\n\n      let convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.type == \"number\" ||\n               f.type == \"calculate\" ||\n               f.type == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (query && query.rules && Array.isArray(query.rules)) {\n                  query.rules.forEach((r) => {\n                     if (r.key != f.id) return;\n\n                     r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (data[f.id] && typeof data[f.id] === \"string\") {\n                  data[f.id] = convertToNumber(data[f.id]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      // hiddenQB.setValue(QBCondition);\n      hiddenQB.setValue({\n         query: query,\n         fields: fields,\n      });\n\n      var QBHelper = hiddenQB.getFilterHelper();\n      var isValid = QBHelper(data);\n\n      hiddenQB.destructor(); // remove the QB\n\n      return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings || {};\n      this.valueRules = settings.valueRules || {};\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: connObj.PK(),\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return this.updateObject ? this.updateObject.fieldByID(fieldID) : null;\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["ABComponent","ABFieldManager","module","exports","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","id","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","Error","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","e","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","map","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","resolve","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","Object","keys","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","code","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","normalizeData","isConnected","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","jobID","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","o","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","QueuedOperations","_queueTimer","runQueue","op","queueOperation","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","applications","apps","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDv","eventAdd","emitter","eventName","listener","waitForDataCollectionToInitialize","loadData","start","limit","wheres","skip","linkDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","__totalCount","total_count","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABDataCollection","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allProcesses","_allQueries","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","req","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","includeRelativeData","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","subData","relatedMlFields","calField","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","colIds","match","colId","colIdNoBracket","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","ele","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","unshift","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","description","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","linkObj","configError","pullRelationValues","selectedData","dataValue","propName","getRelationValue","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","assign","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","opt","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","isNaN","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","step","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldOpt","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","refreshData","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","imageURL","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","moduleList","queryList","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","_object","displayText","componentID","clearTemplateValue","fData","urlImage","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","_warnings","checks","allRoles","warningsAll","warnings","CustomComponentManager","custom","create","edit","export","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","dataCollectionLink","cursorUpdated","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","warningsMessage","ABDefinitionCore","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","header","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","h","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","allDestroy","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","_customOptions","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","storageID","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","dataFieldId","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","each","option","querySelector","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","display","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","delay","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","showImage","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","querySelectorAll","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","v1App","idPrefix","newComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","color","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","componentId","_onShow","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","formVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formReady","newFormVals","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","focusOnFirst","topPosition","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","viewLocation","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","csv","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","checked","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ObjectDefaults","commonUI","propertyEditorDefaultElements","validateType","currentEditObject","actionKey","uploadedFile","propertyEditorSave","propertyEditorPopulate","propertyEditorValues","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","Kanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewList","ListView","selectSource","dcId","oldDcId","propertyUpdateFieldOptions","dvId","SourceSelector","propertyDatacollections","ABViewMenuCore","ABViewMenuComponent","ABViewPageCore","ABViewPivotCore","ABViewPivotComponent","componentBase","readonly","onBeforeApply","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","parsedData","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","year","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","linkConnectFields","validRows","allValid","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","scrollview","dataFlexView","paddingX","paddingY","onAfterScroll","dataView","emptyView","renderData","_yPosition","Layout","Scroll","records","$width","recordWidth","currentLength","_startPos","stopPos","flexlayout","clicked","divs","background","loadMoreTimer","detailItem","createdRow","updatedRow","myVal","needRecalculate","templateLabel","$detailItem","parsedImageUrl","imageUrl","uiDetailItemComponent","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","reloadView","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","loadDcDataOfRecordRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","currentVals","selectedItems","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","linkedField","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","AB_App","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","filterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","$resizer","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","setInterval","clearInterval","parentElem","viewInfo","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","$pivot","customLabels","populateData","dataMapped","setStructure","reportManager","_uiReportManager","reports","saveModule","indexOfModule","m","viewSave","deleteModule","reportModels","reportFields","getReportFields","refs","saveQuery","indexOfQuery","deleteQuery","pullDataTasks","dcIds","dcData","sid","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","sData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","groupProp","_","groupedData","groupedResult","agg","rawCol","getFieldData","GetColumnConfig","meta","columnFormat","ref","abField","reportData","reportRow","rField","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","selectedItem","abStorage","$sidebar","toggle","collapseNode","expandNode","multiview","keepViews","onViewChange","prevId","nextId","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","linkedData","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","callEvent","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","notes","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","hiddenQB","QBCondition","convertToNumber","QBHelper","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","newValues","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","some","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","_this","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","ArrayBuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","webpackContext","webpackContextResolve","__webpack_require__","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","eachRow","$count","setMasterValue","master"],"sourceRoot":""}