{"version":3,"file":"orgchart.150.a58bb07fb37010ac8925.js","mappings":"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","sources":["webpack://ab_platform_web/./js/orgchart-webcomponents.js"],"sourcesContent":["export default class OrgChart extends HTMLElement {\n   constructor(options) {\n      super(); // always call super() first in the ctor.\n\n      /* Frankly, I do believe Show DOM has the narrow usage range. */\n      // Attach a shadow root to the element.\n      // let shadowRoot = this.attachShadow({mode: 'open'});\n\n      // shadowRoot.innerHTML = `\n      //   <style> </style>\n      //   <div class=\"container\"> </div>\n      // `;\n\n      Promise.prototype.finally = function (callback) {\n         let P = this.constructor;\n\n         return this.then(\n            (value) => P.resolve(callback()).then(() => value),\n            (reason) =>\n               P.resolve(callback()).then(() => {\n                  throw reason;\n               })\n         );\n      };\n\n      let that = this,\n         defaultOptions = {\n            nodeTitle: \"name\",\n            nodeId: \"id\",\n            toggleSiblingsResp: false,\n            depth: 999,\n            chartClass: \"\",\n            parentNodeSymbol: \"fa-users\",\n            draggable: false,\n            direction: \"t2b\",\n            pan: false,\n            zoom: false,\n         },\n         opts = Object.assign(defaultOptions, options);\n\n      this.options = opts;\n\n      this.addEventListener(\"click\", this._clickChart.bind(this));\n\n      if (opts.pan && opts.chartContainer) {\n         let chartContainer = document.querySelector(opts.chartContainer);\n\n         chartContainer.style.overflow = \"hidden\";\n         this.addEventListener(\"mousedown\", this._onPanStart.bind(this));\n         this.addEventListener(\"touchstart\", this._onPanStart.bind(this));\n         document.body.addEventListener(\"mouseup\", this._onPanEnd.bind(this));\n         document.body.addEventListener(\"touchend\", this._onPanEnd.bind(this));\n      }\n\n      if (opts.zoom && opts.chartContainer) {\n         let chartContainer = document.querySelector(opts.chartContainer);\n\n         chartContainer.addEventListener(\"wheel\", this._onWheeling.bind(this));\n         chartContainer.addEventListener(\n            \"touchstart\",\n            this._onTouchStart.bind(this)\n         );\n         document.body.addEventListener(\n            \"touchmove\",\n            this._onTouchMove.bind(this)\n         );\n         document.body.addEventListener(\n            \"touchend\",\n            this._onTouchEnd.bind(this)\n         );\n      }\n   }\n   connectedCallback() {\n      let that = this,\n         opts = this.options,\n         data = opts.data;\n\n      this.setAttribute(\n         \"class\",\n         \"orgchart\" +\n            (opts.chartClass !== \"\" ? \" \" + opts.chartClass : \"\") +\n            (opts.direction !== \"t2b\" ? \" \" + opts.direction : \"\")\n      );\n      if (typeof data === \"object\") {\n         // local json datasource\n         this.buildHierarchy(\n            this,\n            opts.ajaxURL ? data : this._attachRel(data, \"00\"),\n            0\n         );\n      } else if (typeof data === \"string\" && data.startsWith(\"#\")) {\n         // ul datasource\n         this.buildHierarchy(\n            this,\n            this._buildJsonDS(document.querySelector(data).children[0]),\n            0\n         );\n      } else {\n         // ajax datasource\n         let spinner = document.createElement(\"i\");\n\n         spinner.setAttribute(\"class\", \"fa fa-circle-o-notch fa-spin spinner\");\n         this.appendChild(spinner);\n         this._getJSON(data)\n            .then(function (resp) {\n               that.buildHierarchy(\n                  that,\n                  opts.ajaxURL ? resp : that._attachRel(resp, \"00\"),\n                  0\n               );\n            })\n            .catch(function (err) {\n               console.error(\"failed to fetch datasource for orgchart\", err);\n            })\n            .finally(function () {\n               let spinner = that.querySelector(\".spinner\");\n\n               spinner.parentNode.removeChild(spinner);\n            });\n      }\n   }\n\n   disconnectedCallback() {}\n\n   attributeChangedCallback(attrName, oldVal, newVal) {}\n\n   _closest(el, fn) {\n      return (\n         el && (fn(el) && el !== this ? el : this._closest(el.parentNode, fn))\n      );\n   }\n   _siblings(el, expr) {\n      return Array.from(el.parentNode.children).filter((child) => {\n         if (child !== el) {\n            if (expr) {\n               return el.matches(expr);\n            }\n            return true;\n         }\n         return false;\n      });\n   }\n   _prevAll(el, expr) {\n      let sibs = [],\n         prevSib = el.previousElementSibling;\n\n      while (prevSib) {\n         if (!expr || prevSib.matches(expr)) {\n            sibs.push(prevSib);\n         }\n         prevSib = prevSib.previousElementSibling;\n      }\n      return sibs;\n   }\n   _nextAll(el, expr) {\n      let sibs = [];\n      let nextSib = el.nextElementSibling;\n\n      while (nextSib) {\n         if (!expr || nextSib.matches(expr)) {\n            sibs.push(nextSib);\n         }\n         nextSib = nextSib.nextElementSibling;\n      }\n      return sibs;\n   }\n   _isVisible(el) {\n      return el.offsetParent !== null;\n   }\n   _addClass(elements, classNames) {\n      elements.forEach((el) => {\n         if (classNames.indexOf(\" \") > 0) {\n            classNames\n               .split(\" \")\n               .forEach((className) => el.classList.add(className));\n         } else {\n            el.classList.add(classNames);\n         }\n      });\n   }\n   _removeClass(elements, classNames) {\n      elements.forEach((el) => {\n         if (classNames.indexOf(\" \") > 0) {\n            classNames\n               .split(\" \")\n               .forEach((className) => el.classList.remove(className));\n         } else {\n            el.classList.remove(classNames);\n         }\n      });\n   }\n   _css(elements, prop, val) {\n      elements.forEach((el) => {\n         el.style[prop] = val;\n      });\n   }\n   _removeAttr(elements, attr) {\n      elements.forEach((el) => {\n         el.removeAttribute(attr);\n      });\n   }\n   _one(el, type, listener, self) {\n      let one = function (event) {\n         try {\n            listener.call(self, event);\n         } finally {\n            el.removeEventListener(type, one);\n         }\n      };\n\n      el.addEventListener(type, one);\n   }\n   _getDescElements(ancestors, selector) {\n      let results = [];\n\n      ancestors.forEach((el) => results.push(...el.querySelectorAll(selector)));\n      return results;\n   }\n   _getJSON(url) {\n      return new Promise(function (resolve, reject) {\n         let xhr = new XMLHttpRequest();\n\n         function handler() {\n            if (this.readyState !== 4) {\n               return;\n            }\n            if (this.status === 200) {\n               resolve(JSON.parse(this.response));\n            } else {\n               reject(new Error(this.statusText));\n            }\n         }\n         xhr.open(\"GET\", url);\n         xhr.onreadystatechange = handler;\n         xhr.responseType = \"json\";\n         // xhr.setRequestHeader('Accept', 'application/json');\n         xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n         xhr.send();\n      });\n   }\n   _buildJsonDS(li) {\n      let subObj = {\n         name: li.firstChild.textContent.trim(),\n         relationship:\n            (li.parentNode.parentNode.nodeName === \"LI\" ? \"1\" : \"0\") +\n            (li.parentNode.children.length > 1 ? 1 : 0) +\n            (li.children.length ? 1 : 0),\n      };\n\n      if (li.id) {\n         subObj.id = li.id;\n      }\n      if (li.querySelector(\"ul\")) {\n         Array.from(li.querySelector(\"ul\").children).forEach((el) => {\n            if (!subObj.children) {\n               subObj.children = [];\n            }\n            subObj.children.push(this._buildJsonDS(el));\n         });\n      }\n      return subObj;\n   }\n   _attachRel(data, flags) {\n      data.relationship =\n         flags + (data.children && data.children.length > 0 ? 1 : 0);\n      if (data.children) {\n         for (let item of data.children) {\n            this._attachRel(item, \"1\" + (data.children.length > 1 ? 1 : 0));\n         }\n      }\n      return data;\n   }\n   _repaint(node) {\n      if (node) {\n         node.style.offsetWidth = node.offsetWidth;\n      }\n   }\n   // whether the cursor is hovering over the node\n   _isInAction(node) {\n      return node.querySelector(\":scope > .edge\").className.indexOf(\"fa-\") > -1;\n   }\n   // detect the exist/display state of related node\n   _getNodeState(node, relation) {\n      let criteria,\n         state = { exist: false, visible: false };\n\n      if (relation === \"parent\") {\n         criteria = this._closest(\n            node,\n            (el) => el.classList && el.classList.contains(\"nodes\")\n         );\n         if (criteria) {\n            state.exist = true;\n         }\n         if (state.exist && this._isVisible(criteria.parentNode.children[0])) {\n            state.visible = true;\n         }\n      } else if (relation === \"children\") {\n         criteria = this._closest(\n            node,\n            (el) => el.nodeName === \"TR\"\n         ).nextElementSibling;\n         if (criteria) {\n            state.exist = true;\n         }\n         if (state.exist && this._isVisible(criteria)) {\n            state.visible = true;\n         }\n      } else if (relation === \"siblings\") {\n         criteria = this._siblings(\n            this._closest(node, (el) => el.nodeName === \"TABLE\").parentNode\n         );\n         if (criteria.length) {\n            state.exist = true;\n         }\n         if (state.exist && criteria.some((el) => this._isVisible(el))) {\n            state.visible = true;\n         }\n      }\n\n      return state;\n   }\n   // find the related nodes\n   getRelatedNodes(node, relation) {\n      if (relation === \"parent\") {\n         return this._closest(node, (el) =>\n            el.classList.contains(\"nodes\")\n         ).parentNode.children[0].querySelector(\".node\");\n      } else if (relation === \"children\") {\n         return Array.from(\n            this._closest(node, (el) => el.nodeName === \"TABLE\").lastChild\n               .children\n         ).map((el) => el.querySelector(\".node\"));\n      } else if (relation === \"siblings\") {\n         return this._siblings(\n            this._closest(node, (el) => el.nodeName === \"TABLE\").parentNode\n         ).map((el) => el.querySelector(\".node\"));\n      }\n      return [];\n   }\n   _switchHorizontalArrow(node) {\n      let opts = this.options,\n         leftEdge = node.querySelector(\".leftEdge\"),\n         rightEdge = node.querySelector(\".rightEdge\"),\n         temp = this._closest(node, (el) => el.nodeName === \"TABLE\").parentNode;\n\n      if (\n         opts.toggleSiblingsResp &&\n         (typeof opts.ajaxURL === \"undefined\" ||\n            this._closest(node, (el) => el.classList.contains(\".nodes\")).dataset\n               .siblingsLoaded)\n      ) {\n         let prevSib = temp.previousElementSibling,\n            nextSib = temp.nextElementSibling;\n\n         if (prevSib) {\n            if (prevSib.classList.contains(\"hidden\")) {\n               leftEdge.classList.add(\"fa-chevron-left\");\n               leftEdge.classList.remove(\"fa-chevron-right\");\n            } else {\n               leftEdge.classList.add(\"fa-chevron-right\");\n               leftEdge.classList.remove(\"fa-chevron-left\");\n            }\n         }\n         if (nextSib) {\n            if (nextSib.classList.contains(\"hidden\")) {\n               rightEdge.classList.add(\"fa-chevron-right\");\n               rightEdge.classList.remove(\"fa-chevron-left\");\n            } else {\n               rightEdge.classList.add(\"fa-chevron-left\");\n               rightEdge.classList.remove(\"fa-chevron-right\");\n            }\n         }\n      } else {\n         let sibs = this._siblings(temp),\n            sibsVisible = sibs.length\n               ? !sibs.some((el) => el.classList.contains(\"hidden\"))\n               : false;\n\n         leftEdge.classList.toggle(\"fa-chevron-right\", sibsVisible);\n         leftEdge.classList.toggle(\"fa-chevron-left\", !sibsVisible);\n         rightEdge.classList.toggle(\"fa-chevron-left\", sibsVisible);\n         rightEdge.classList.toggle(\"fa-chevron-right\", !sibsVisible);\n      }\n   }\n   _hoverNode(event) {\n      let node = event.target,\n         flag = false,\n         topEdge = node.querySelector(\":scope > .topEdge\"),\n         bottomEdge = node.querySelector(\":scope > .bottomEdge\"),\n         leftEdge = node.querySelector(\":scope > .leftEdge\");\n\n      if (event.type === \"mouseenter\") {\n         if (topEdge) {\n            flag = this._getNodeState(node, \"parent\").visible;\n            topEdge.classList.toggle(\"fa-chevron-up\", !flag);\n            topEdge.classList.toggle(\"fa-chevron-down\", flag);\n         }\n         if (bottomEdge) {\n            flag = this._getNodeState(node, \"children\").visible;\n            bottomEdge.classList.toggle(\"fa-chevron-down\", !flag);\n            bottomEdge.classList.toggle(\"fa-chevron-up\", flag);\n         }\n         if (leftEdge) {\n            this._switchHorizontalArrow(node);\n         }\n      } else {\n         Array.from(node.querySelectorAll(\":scope > .edge\")).forEach((el) => {\n            el.classList.remove(\n               \"fa-chevron-up\",\n               \"fa-chevron-down\",\n               \"fa-chevron-right\",\n               \"fa-chevron-left\"\n            );\n         });\n      }\n   }\n   // define node click event handler\n   _clickNode(event) {\n      let clickedNode = event.currentTarget,\n         focusedNode = this.querySelector(\".focused\");\n\n      if (focusedNode) {\n         focusedNode.classList.remove(\"focused\");\n      }\n      clickedNode.classList.add(\"focused\");\n   }\n   // build the parent node of specific node\n   _buildParentNode(currentRoot, nodeData, callback) {\n      let that = this,\n         table = document.createElement(\"table\");\n\n      nodeData.relationship = \"001\";\n      this._createNode(nodeData, 0)\n         .then(function (nodeDiv) {\n            nodeDiv.classList.remove(\"slide-up\");\n            nodeDiv.classList.add(\"slide-down\");\n            let parentTr = document.createElement(\"tr\"),\n               superiorLine = document.createElement(\"tr\"),\n               inferiorLine = document.createElement(\"tr\"),\n               childrenTr = document.createElement(\"tr\");\n\n            parentTr.setAttribute(\"class\", \"hidden\");\n            parentTr.innerHTML = `<td colspan=\"2\"></td>`;\n            table.appendChild(parentTr);\n            superiorLine.setAttribute(\"class\", \"lines hidden\");\n            superiorLine.innerHTML = `<td colspan=\"2\"><div class=\"downLine\"></div></td>`;\n            table.appendChild(superiorLine);\n            inferiorLine.setAttribute(\"class\", \"lines hidden\");\n            inferiorLine.innerHTML = `<td class=\"rightLine\">&nbsp;</td><td class=\"leftLine\">&nbsp;</td>`;\n            table.appendChild(inferiorLine);\n            childrenTr.setAttribute(\"class\", \"nodes\");\n            childrenTr.innerHTML = `<td colspan=\"2\"></td>`;\n            table.appendChild(childrenTr);\n            table.querySelector(\"td\").appendChild(nodeDiv);\n            that.insertBefore(table, that.children[0]);\n            table.children[3].children[0].appendChild(that.lastChild);\n            callback();\n         })\n         .catch(function (err) {\n            console.error(\"Failed to create parent node\", err);\n         });\n   }\n   _switchVerticalArrow(arrow) {\n      arrow.classList.toggle(\"fa-chevron-up\");\n      arrow.classList.toggle(\"fa-chevron-down\");\n   }\n   // show the parent node of the specified node\n   showParent(node) {\n      // just show only one superior level\n      let temp = this._prevAll(\n         this._closest(node, (el) => el.classList.contains(\"nodes\"))\n      );\n\n      this._removeClass(temp, \"hidden\");\n      // just show only one line\n      this._addClass(Array(temp[0].children).slice(1, -1), \"hidden\");\n      // show parent node with animation\n      let parent = temp[2].querySelector(\".node\");\n\n      this._one(\n         parent,\n         \"transitionend\",\n         function () {\n            parent.classList.remove(\"slide\");\n            if (this._isInAction(node)) {\n               this._switchVerticalArrow(\n                  node.querySelector(\":scope > .topEdge\")\n               );\n            }\n         },\n         this\n      );\n      this._repaint(parent);\n      parent.classList.add(\"slide\");\n      parent.classList.remove(\"slide-down\");\n   }\n   // show the sibling nodes of the specified node\n   showSiblings(node, direction) {\n      // firstly, show the sibling td tags\n      let siblings = [],\n         temp = this._closest(node, (el) => el.nodeName === \"TABLE\").parentNode;\n\n      if (direction) {\n         siblings =\n            direction === \"left\" ? this._prevAll(temp) : this._nextAll(temp);\n      } else {\n         siblings = this._siblings(temp);\n      }\n      this._removeClass(siblings, \"hidden\");\n      // secondly, show the lines\n      let upperLevel = this._prevAll(\n         this._closest(node, (el) => el.classList.contains(\"nodes\"))\n      );\n\n      temp = Array.from(upperLevel[0].querySelectorAll(\":scope > .hidden\"));\n      if (direction) {\n         this._removeClass(temp.slice(0, siblings.length * 2), \"hidden\");\n      } else {\n         this._removeClass(temp, \"hidden\");\n      }\n      // thirdly, do some cleaning stuff\n      if (!this._getNodeState(node, \"parent\").visible) {\n         this._removeClass(upperLevel, \"hidden\");\n         let parent = upperLevel[2].querySelector(\".node\");\n\n         this._one(\n            parent,\n            \"transitionend\",\n            function (event) {\n               event.target.classList.remove(\"slide\");\n            },\n            this\n         );\n         this._repaint(parent);\n         parent.classList.add(\"slide\");\n         parent.classList.remove(\"slide-down\");\n      }\n      // lastly, show the sibling nodes with animation\n      siblings.forEach((sib) => {\n         Array.from(sib.querySelectorAll(\".node\")).forEach((node) => {\n            if (this._isVisible(node)) {\n               node.classList.add(\"slide\");\n               node.classList.remove(\"slide-left\", \"slide-right\");\n            }\n         });\n      });\n      this._one(\n         siblings[0].querySelector(\".slide\"),\n         \"transitionend\",\n         function () {\n            siblings.forEach((sib) => {\n               this._removeClass(\n                  Array.from(sib.querySelectorAll(\".slide\")),\n                  \"slide\"\n               );\n            });\n            if (this._isInAction(node)) {\n               this._switchHorizontalArrow(node);\n               node.querySelector(\".topEdge\").classList.remove(\"fa-chevron-up\");\n               node.querySelector(\".topEdge\").classList.add(\"fa-chevron-down\");\n            }\n         },\n         this\n      );\n   }\n   // hide the sibling nodes of the specified node\n   hideSiblings(node, direction) {\n      let nodeContainer = this._closest(\n            node,\n            (el) => el.nodeName === \"TABLE\"\n         ).parentNode,\n         siblings = this._siblings(nodeContainer);\n\n      siblings.forEach((sib) => {\n         if (sib.querySelector(\".spinner\")) {\n            this.dataset.inAjax = false;\n         }\n      });\n\n      if (!direction || (direction && direction === \"left\")) {\n         let preSibs = this._prevAll(nodeContainer);\n\n         preSibs.forEach((sib) => {\n            Array.from(sib.querySelectorAll(\".node\")).forEach((node) => {\n               if (this._isVisible(node)) {\n                  node.classList.add(\"slide\", \"slide-right\");\n               }\n            });\n         });\n      }\n      if (!direction || (direction && direction !== \"left\")) {\n         let nextSibs = this._nextAll(nodeContainer);\n\n         nextSibs.forEach((sib) => {\n            Array.from(sib.querySelectorAll(\".node\")).forEach((node) => {\n               if (this._isVisible(node)) {\n                  node.classList.add(\"slide\", \"slide-left\");\n               }\n            });\n         });\n      }\n\n      let animatedNodes = [];\n\n      this._siblings(nodeContainer).forEach((sib) => {\n         Array.prototype.push.apply(\n            animatedNodes,\n            Array.from(sib.querySelectorAll(\".slide\"))\n         );\n      });\n      let lines = [];\n\n      for (let node of animatedNodes) {\n         let temp = this._closest(node, function (el) {\n            return el.classList.contains(\"nodes\");\n         }).previousElementSibling;\n\n         lines.push(temp);\n         lines.push(temp.previousElementSibling);\n      }\n      lines = [...new Set(lines)];\n      lines.forEach(function (line) {\n         line.style.visibility = \"hidden\";\n      });\n\n      this._one(\n         animatedNodes[0],\n         \"transitionend\",\n         function (event) {\n            lines.forEach(function (line) {\n               line.removeAttribute(\"style\");\n            });\n            let sibs = [];\n\n            if (direction) {\n               if (direction === \"left\") {\n                  sibs = this._prevAll(nodeContainer, \":not(.hidden)\");\n               } else {\n                  sibs = this._nextAll(nodeContainer, \":not(.hidden)\");\n               }\n            } else {\n               sibs = this._siblings(nodeContainer);\n            }\n            let temp = Array.from(\n               this._closest(nodeContainer, function (el) {\n                  return el.classList.contains(\"nodes\");\n               }).previousElementSibling.querySelectorAll(\n                  \":scope > :not(.hidden)\"\n               )\n            );\n\n            let someLines = temp.slice(1, direction ? sibs.length * 2 + 1 : -1);\n\n            this._addClass(someLines, \"hidden\");\n            this._removeClass(animatedNodes, \"slide\");\n            sibs.forEach((sib) => {\n               Array.from(sib.querySelectorAll(\".node\"))\n                  .slice(1)\n                  .forEach((node) => {\n                     if (this._isVisible(node)) {\n                        node.classList.remove(\"slide-left\", \"slide-right\");\n                        node.classList.add(\"slide-up\");\n                     }\n                  });\n            });\n            sibs.forEach((sib) => {\n               this._addClass(\n                  Array.from(sib.querySelectorAll(\".lines\")),\n                  \"hidden\"\n               );\n               this._addClass(\n                  Array.from(sib.querySelectorAll(\".nodes\")),\n                  \"hidden\"\n               );\n               this._addClass(\n                  Array.from(sib.querySelectorAll(\".verticalNodes\")),\n                  \"hidden\"\n               );\n            });\n            this._addClass(sibs, \"hidden\");\n\n            if (this._isInAction(node)) {\n               this._switchHorizontalArrow(node);\n            }\n         },\n         this\n      );\n   }\n   // recursively hide the ancestor node and sibling nodes of the specified node\n   hideParent(node) {\n      let temp = Array.from(\n         this._closest(node, function (el) {\n            return el.classList.contains(\"nodes\");\n         }).parentNode.children\n      ).slice(0, 3);\n\n      if (temp[0].querySelector(\".spinner\")) {\n         this.dataset.inAjax = false;\n      }\n      // hide the sibling nodes\n      if (this._getNodeState(node, \"siblings\").visible) {\n         this.hideSiblings(node);\n      }\n      // hide the lines\n      let lines = temp.slice(1);\n\n      this._css(lines, \"visibility\", \"hidden\");\n      // hide the superior nodes with transition\n      let parent = temp[0].querySelector(\".node\"),\n         grandfatherVisible = this._getNodeState(parent, \"parent\").visible;\n\n      if (parent && this._isVisible(parent)) {\n         parent.classList.add(\"slide\", \"slide-down\");\n         this._one(\n            parent,\n            \"transitionend\",\n            function () {\n               parent.classList.remove(\"slide\");\n               this._removeAttr(lines, \"style\");\n               this._addClass(temp, \"hidden\");\n            },\n            this\n         );\n      }\n      // if the current node has the parent node, hide it recursively\n      if (parent && grandfatherVisible) {\n         this.hideParent(parent);\n      }\n   }\n   // exposed method\n   addParent(currentRoot, data) {\n      let that = this;\n\n      this._buildParentNode(currentRoot, data, function () {\n         if (!currentRoot.querySelector(\":scope > .topEdge\")) {\n            let topEdge = document.createElement(\"i\");\n\n            topEdge.setAttribute(\"class\", \"edge verticalEdge topEdge fa\");\n            currentRoot.appendChild(topEdge);\n         }\n         that.showParent(currentRoot);\n      });\n   }\n   // start up loading status for requesting new nodes\n   _startLoading(arrow, node) {\n      let opts = this.options;\n\n      if (\n         typeof this.dataset.inAjax !== \"undefined\" &&\n         this.dataset.inAjax === \"true\"\n      ) {\n         return false;\n      }\n\n      arrow.classList.add(\"hidden\");\n      let spinner = document.createElement(\"i\");\n\n      spinner.setAttribute(\"class\", \"fa fa-circle-o-notch fa-spin spinner\");\n      node.appendChild(spinner);\n      this._addClass(\n         Array.from(node.querySelectorAll(\":scope > *:not(.spinner)\")),\n         \"hazy\"\n      );\n      this.dataset.inAjax = true;\n\n      return true;\n   }\n   // terminate loading status for requesting new nodes\n   _endLoading(arrow, node) {\n      let opts = this.options;\n\n      arrow.classList.remove(\"hidden\");\n      node.querySelector(\":scope > .spinner\").remove();\n      this._removeClass(\n         Array.from(node.querySelectorAll(\":scope > .hazy\")),\n         \"hazy\"\n      );\n      this.dataset.inAjax = false;\n   }\n   // define click event handler for the top edge\n   _clickTopEdge(event) {\n      event.stopPropagation();\n      let that = this,\n         topEdge = event.target,\n         node = topEdge.parentNode,\n         parentState = this._getNodeState(node, \"parent\"),\n         opts = this.options;\n\n      if (parentState.exist) {\n         let temp = this._closest(node, function (el) {\n            return el.classList.contains(\"nodes\");\n         });\n         let parent = temp.parentNode.firstChild.querySelector(\".node\");\n\n         if (parent.classList.contains(\"slide\")) {\n            return;\n         }\n         // hide the ancestor nodes and sibling nodes of the specified node\n         if (parentState.visible) {\n            this.hideParent(node);\n            this._one(\n               parent,\n               \"transitionend\",\n               function () {\n                  if (this._isInAction(node)) {\n                     this._switchVerticalArrow(topEdge);\n                     this._switchHorizontalArrow(node);\n                  }\n               },\n               this\n            );\n         } else {\n            // show the ancestors and siblings\n            this.showParent(node);\n         }\n      } else {\n         // load the new parent node of the specified node by ajax request\n         let nodeId = topEdge.parentNode.id;\n\n         // start up loading status\n         if (this._startLoading(topEdge, node)) {\n            // load new nodes\n            this._getJSON(\n               typeof opts.ajaxURL.parent === \"function\"\n                  ? opts.ajaxURL.parent(node.dataset.source)\n                  : opts.ajaxURL.parent + nodeId\n            )\n               .then(function (resp) {\n                  if (that.dataset.inAjax === \"true\") {\n                     if (Object.keys(resp).length) {\n                        that.addParent(node, resp);\n                     }\n                  }\n               })\n               .catch(function (err) {\n                  console.error(\"Failed to get parent node data.\", err);\n               })\n               .finally(function () {\n                  that._endLoading(topEdge, node);\n               });\n         }\n      }\n   }\n   // recursively hide the descendant nodes of the specified node\n   hideChildren(node) {\n      let that = this,\n         temp = this._nextAll(node.parentNode.parentNode),\n         lastItem = temp[temp.length - 1],\n         lines = [];\n\n      if (lastItem.querySelector(\".spinner\")) {\n         this.dataset.inAjax = false;\n      }\n      let descendants = Array.from(lastItem.querySelectorAll(\".node\")).filter(\n            (el) => that._isVisible(el)\n         ),\n         isVerticalDesc = lastItem.classList.contains(\"verticalNodes\");\n\n      if (!isVerticalDesc) {\n         descendants.forEach((desc) => {\n            Array.prototype.push.apply(\n               lines,\n               that._prevAll(\n                  that._closest(desc, (el) => el.classList.contains(\"nodes\")),\n                  \".lines\"\n               )\n            );\n         });\n         lines = [...new Set(lines)];\n         this._css(lines, \"visibility\", \"hidden\");\n      }\n      this._one(\n         descendants[0],\n         \"transitionend\",\n         function (event) {\n            this._removeClass(descendants, \"slide\");\n            if (isVerticalDesc) {\n               that._addClass(temp, \"hidden\");\n            } else {\n               lines.forEach((el) => {\n                  el.removeAttribute(\"style\");\n                  el.classList.add(\"hidden\");\n                  el.parentNode.lastChild.classList.add(\"hidden\");\n               });\n               this._addClass(\n                  Array.from(lastItem.querySelectorAll(\".verticalNodes\")),\n                  \"hidden\"\n               );\n            }\n            if (this._isInAction(node)) {\n               this._switchVerticalArrow(node.querySelector(\".bottomEdge\"));\n            }\n         },\n         this\n      );\n      this._addClass(descendants, \"slide slide-up\");\n   }\n   // show the children nodes of the specified node\n   showChildren(node) {\n      let that = this,\n         temp = this._nextAll(node.parentNode.parentNode),\n         descendants = [];\n\n      this._removeClass(temp, \"hidden\");\n      if (temp.some((el) => el.classList.contains(\"verticalNodes\"))) {\n         temp.forEach((el) => {\n            Array.prototype.push.apply(\n               descendants,\n               Array.from(el.querySelectorAll(\".node\")).filter((el) => {\n                  return that._isVisible(el);\n               })\n            );\n         });\n      } else {\n         Array.from(temp[2].children).forEach((el) => {\n            Array.prototype.push.apply(\n               descendants,\n               Array.from(\n                  el.querySelector(\"tr\").querySelectorAll(\".node\")\n               ).filter((el) => {\n                  return that._isVisible(el);\n               })\n            );\n         });\n      }\n      // the two following statements are used to enforce browser to repaint\n      this._repaint(descendants[0]);\n      this._one(\n         descendants[0],\n         \"transitionend\",\n         (event) => {\n            this._removeClass(descendants, \"slide\");\n            if (this._isInAction(node)) {\n               this._switchVerticalArrow(node.querySelector(\".bottomEdge\"));\n            }\n         },\n         this\n      );\n      this._addClass(descendants, \"slide\");\n      this._removeClass(descendants, \"slide-up\");\n   }\n   // build the child nodes of specific node\n   _buildChildNode(appendTo, nodeData, callback) {\n      let data = nodeData.children || nodeData.siblings;\n\n      appendTo.querySelector(\"td\").setAttribute(\"colSpan\", data.length * 2);\n      this.buildHierarchy(appendTo, { children: data }, 0, callback);\n   }\n   // exposed method\n   addChildren(node, data) {\n      let that = this,\n         opts = this.options,\n         count = 0;\n\n      this.dataset.inEdit = \"addChildren\";\n      this._buildChildNode.call(\n         this,\n         this._closest(node, (el) => el.nodeName === \"TABLE\"),\n         data,\n         function () {\n            if (++count === data.children.length) {\n               if (!node.querySelector(\".bottomEdge\")) {\n                  let bottomEdge = document.createElement(\"i\");\n\n                  bottomEdge.setAttribute(\n                     \"class\",\n                     \"edge verticalEdge bottomEdge fa\"\n                  );\n                  node.appendChild(bottomEdge);\n               }\n               if (!node.querySelector(\".symbol\")) {\n                  let symbol = document.createElement(\"i\");\n\n                  symbol.setAttribute(\n                     \"class\",\n                     \"fa \" + opts.parentNodeSymbol + \" symbol\"\n                  );\n                  node.querySelector(\":scope > .title\").appendChild(symbol);\n               }\n               that.showChildren(node);\n               that.dataset.inEdit = \"\";\n            }\n         }\n      );\n   }\n   // bind click event handler for the bottom edge\n   _clickBottomEdge(event) {\n      event.stopPropagation();\n      let that = this,\n         opts = this.options,\n         bottomEdge = event.target,\n         node = bottomEdge.parentNode,\n         childrenState = this._getNodeState(node, \"children\");\n\n      if (childrenState.exist) {\n         let temp = this._closest(node, function (el) {\n            return el.nodeName === \"TR\";\n         }).parentNode.lastChild;\n\n         if (\n            Array.from(temp.querySelectorAll(\".node\")).some((node) => {\n               return this._isVisible(node) && node.classList.contains(\"slide\");\n            })\n         ) {\n            return;\n         }\n         // hide the descendant nodes of the specified node\n         if (childrenState.visible) {\n            this.hideChildren(node);\n         } else {\n            // show the descendants\n            this.showChildren(node);\n         }\n      } else {\n         // load the new children nodes of the specified node by ajax request\n         let nodeId = bottomEdge.parentNode.id;\n\n         if (this._startLoading(bottomEdge, node)) {\n            this._getJSON(\n               typeof opts.ajaxURL.children === \"function\"\n                  ? opts.ajaxURL.children(node.dataset.source)\n                  : opts.ajaxURL.children + nodeId\n            )\n               .then(function (resp) {\n                  if (that.dataset.inAjax === \"true\") {\n                     if (resp.children.length) {\n                        that.addChildren(node, resp);\n                     }\n                  }\n               })\n               .catch(function (err) {\n                  console.error(\"Failed to get children nodes data\", err);\n               })\n               .finally(function () {\n                  that._endLoading(bottomEdge, node);\n               });\n         }\n      }\n   }\n   // subsequent processing of build sibling nodes\n   _complementLine(oneSibling, siblingCount, existingSibligCount) {\n      let temp = oneSibling.parentNode.parentNode.children;\n\n      temp[0].children[0].setAttribute(\"colspan\", siblingCount * 2);\n      temp[1].children[0].setAttribute(\"colspan\", siblingCount * 2);\n      for (let i = 0; i < existingSibligCount; i++) {\n         let rightLine = document.createElement(\"td\"),\n            leftLine = document.createElement(\"td\");\n\n         rightLine.setAttribute(\"class\", \"rightLine topLine\");\n         rightLine.innerHTML = \"&nbsp;\";\n         temp[2].insertBefore(rightLine, temp[2].children[1]);\n         leftLine.setAttribute(\"class\", \"leftLine topLine\");\n         leftLine.innerHTML = \"&nbsp;\";\n         temp[2].insertBefore(leftLine, temp[2].children[1]);\n      }\n   }\n   // build the sibling nodes of specific node\n   _buildSiblingNode(nodeChart, nodeData, callback) {\n      let that = this,\n         newSiblingCount = nodeData.siblings\n            ? nodeData.siblings.length\n            : nodeData.children.length,\n         existingSibligCount =\n            nodeChart.parentNode.nodeName === \"TD\"\n               ? this._closest(nodeChart, (el) => {\n                    return el.nodeName === \"TR\";\n                 }).children.length\n               : 1,\n         siblingCount = existingSibligCount + newSiblingCount,\n         insertPostion =\n            siblingCount > 1 ? Math.floor(siblingCount / 2 - 1) : 0;\n\n      // just build the sibling nodes for the specific node\n      if (nodeChart.parentNode.nodeName === \"TD\") {\n         let temp = this._prevAll(nodeChart.parentNode.parentNode);\n\n         temp[0].remove();\n         temp[1].remove();\n         let childCount = 0;\n\n         that._buildChildNode.call(\n            that,\n            that._closest(\n               nodeChart.parentNode,\n               (el) => el.nodeName === \"TABLE\"\n            ),\n            nodeData,\n            () => {\n               if (++childCount === newSiblingCount) {\n                  let siblingTds = Array.from(\n                     that._closest(\n                        nodeChart.parentNode,\n                        (el) => el.nodeName === \"TABLE\"\n                     ).lastChild.children\n                  );\n\n                  if (existingSibligCount > 1) {\n                     let temp = nodeChart.parentNode.parentNode;\n\n                     Array.from(temp.children).forEach((el) => {\n                        siblingTds[0].parentNode.insertBefore(\n                           el,\n                           siblingTds[0]\n                        );\n                     });\n                     temp.remove();\n                     that._complementLine(\n                        siblingTds[0],\n                        siblingCount,\n                        existingSibligCount\n                     );\n                     that._addClass(siblingTds, \"hidden\");\n                     siblingTds.forEach((el) => {\n                        that._addClass(\n                           el.querySelectorAll(\".node\"),\n                           \"slide-left\"\n                        );\n                     });\n                  } else {\n                     let temp = nodeChart.parentNode.parentNode;\n\n                     siblingTds[insertPostion].parentNode.insertBefore(\n                        nodeChart.parentNode,\n                        siblingTds[insertPostion + 1]\n                     );\n                     temp.remove();\n                     that._complementLine(\n                        siblingTds[insertPostion],\n                        siblingCount,\n                        1\n                     );\n                     that._addClass(siblingTds, \"hidden\");\n                     that._addClass(\n                        that._getDescElements(\n                           siblingTds.slice(0, insertPostion + 1),\n                           \".node\"\n                        ),\n                        \"slide-right\"\n                     );\n                     that._addClass(\n                        that._getDescElements(\n                           siblingTds.slice(insertPostion + 1),\n                           \".node\"\n                        ),\n                        \"slide-left\"\n                     );\n                  }\n                  callback();\n               }\n            }\n         );\n      } else {\n         // build the sibling nodes and parent node for the specific ndoe\n         let nodeCount = 0;\n\n         that.buildHierarchy.call(that, that, nodeData, 0, () => {\n            if (++nodeCount === siblingCount) {\n               let temp =\n                     nodeChart.nextElementSibling.children[3].children[\n                        insertPostion\n                     ],\n                  td = document.createElement(\"td\");\n\n               td.setAttribute(\"colspan\", 2);\n               td.appendChild(nodeChart);\n               temp.parentNode.insertBefore(td, temp.nextElementSibling);\n               that._complementLine(temp, siblingCount, 1);\n\n               let temp2 = that._closest(\n                  nodeChart,\n                  (el) => el.classList && el.classList.contains(\"nodes\")\n               ).parentNode.children[0];\n\n               temp2.classList.add(\"hidden\");\n               that._addClass(\n                  Array.from(temp2.querySelectorAll(\".node\")),\n                  \"slide-down\"\n               );\n\n               let temp3 = this._siblings(nodeChart.parentNode);\n\n               that._addClass(temp3, \"hidden\");\n               that._addClass(\n                  that._getDescElements(temp3.slice(0, insertPostion), \".node\"),\n                  \"slide-right\"\n               );\n               that._addClass(\n                  that._getDescElements(temp3.slice(insertPostion), \".node\"),\n                  \"slide-left\"\n               );\n               callback();\n            }\n         });\n      }\n   }\n   addSiblings(node, data) {\n      let that = this;\n\n      this.dataset.inEdit = \"addSiblings\";\n      this._buildSiblingNode.call(\n         this,\n         this._closest(node, (el) => el.nodeName === \"TABLE\"),\n         data,\n         () => {\n            that._closest(\n               node,\n               (el) => el.classList && el.classList.contains(\"nodes\")\n            ).dataset.siblingsLoaded = true;\n            if (!node.querySelector(\".leftEdge\")) {\n               let rightEdge = document.createElement(\"i\"),\n                  leftEdge = document.createElement(\"i\");\n\n               rightEdge.setAttribute(\n                  \"class\",\n                  \"edge horizontalEdge rightEdge fa\"\n               );\n               node.appendChild(rightEdge);\n               leftEdge.setAttribute(\n                  \"class\",\n                  \"edge horizontalEdge leftEdge fa\"\n               );\n               node.appendChild(leftEdge);\n            }\n            that.showSiblings(node);\n            that.dataset.inEdit = \"\";\n         }\n      );\n   }\n   removeNodes(node) {\n      let parent = this._closest(\n            node,\n            (el) => el.nodeName === \"TABLE\"\n         ).parentNode,\n         sibs = this._siblings(parent.parentNode);\n\n      if (parent.nodeName === \"TD\") {\n         if (this._getNodeState(node, \"siblings\").exist) {\n            sibs[2].querySelector(\".topLine\").nextElementSibling.remove();\n            sibs[2].querySelector(\".topLine\").remove();\n            sibs[0].children[0].setAttribute(\n               \"colspan\",\n               sibs[2].children.length\n            );\n            sibs[1].children[0].setAttribute(\n               \"colspan\",\n               sibs[2].children.length\n            );\n            parent.remove();\n         } else {\n            sibs[0].children[0].removeAttribute(\"colspan\");\n            sibs[0].querySelector(\".bottomEdge\").remove();\n            this._siblings(sibs[0]).forEach((el) => el.remove());\n         }\n      } else {\n         Array.from(parent.parentNode.children).forEach((el) => el.remove());\n      }\n   }\n   // bind click event handler for the left and right edges\n   _clickHorizontalEdge(event) {\n      event.stopPropagation();\n      let that = this,\n         opts = this.options,\n         hEdge = event.target,\n         node = hEdge.parentNode,\n         siblingsState = this._getNodeState(node, \"siblings\");\n\n      if (siblingsState.exist) {\n         let temp = this._closest(node, function (el) {\n               return el.nodeName === \"TABLE\";\n            }).parentNode,\n            siblings = this._siblings(temp);\n\n         if (\n            siblings.some((el) => {\n               let node = el.querySelector(\".node\");\n\n               return this._isVisible(node) && node.classList.contains(\"slide\");\n            })\n         ) {\n            return;\n         }\n         if (opts.toggleSiblingsResp) {\n            let prevSib = this._closest(node, (el) => el.nodeName === \"TABLE\")\n                  .parentNode.previousElementSibling,\n               nextSib = this._closest(node, (el) => el.nodeName === \"TABLE\")\n                  .parentNode.nextElementSibling;\n\n            if (hEdge.classList.contains(\"leftEdge\")) {\n               if (prevSib.classList.contains(\"hidden\")) {\n                  this.showSiblings(node, \"left\");\n               } else {\n                  this.hideSiblings(node, \"left\");\n               }\n            } else {\n               if (nextSib.classList.contains(\"hidden\")) {\n                  this.showSiblings(node, \"right\");\n               } else {\n                  this.hideSiblings(node, \"right\");\n               }\n            }\n         } else {\n            if (siblingsState.visible) {\n               this.hideSiblings(node);\n            } else {\n               this.showSiblings(node);\n            }\n         }\n      } else {\n         // load the new sibling nodes of the specified node by ajax request\n         let nodeId = hEdge.parentNode.id,\n            url = this._getNodeState(node, \"parent\").exist\n               ? typeof opts.ajaxURL.siblings === \"function\"\n                  ? opts.ajaxURL.siblings(JSON.parse(node.dataset.source))\n                  : opts.ajaxURL.siblings + nodeId\n               : typeof opts.ajaxURL.families === \"function\"\n               ? opts.ajaxURL.families(JSON.parse(node.dataset.source))\n               : opts.ajaxURL.families + nodeId;\n\n         if (this._startLoading(hEdge, node)) {\n            this._getJSON(url)\n               .then(function (resp) {\n                  if (that.dataset.inAjax === \"true\") {\n                     if (resp.siblings || resp.children) {\n                        that.addSiblings(node, resp);\n                     }\n                  }\n               })\n               .catch(function (err) {\n                  console.error(\"Failed to get sibling nodes data\", err);\n               })\n               .finally(function () {\n                  that._endLoading(hEdge, node);\n               });\n         }\n      }\n   }\n   // event handler for toggle buttons in Hybrid(horizontal + vertical) OrgChart\n   _clickToggleButton(event) {\n      let that = this,\n         toggleBtn = event.target,\n         descWrapper = toggleBtn.parentNode.nextElementSibling,\n         descendants = Array.from(descWrapper.querySelectorAll(\".node\")),\n         children = Array.from(descWrapper.children).map((item) =>\n            item.querySelector(\".node\")\n         );\n\n      if (children.some((item) => item.classList.contains(\"slide\"))) {\n         return;\n      }\n      toggleBtn.classList.toggle(\"fa-plus-square\");\n      toggleBtn.classList.toggle(\"fa-minus-square\");\n      if (descendants[0].classList.contains(\"slide-up\")) {\n         descWrapper.classList.remove(\"hidden\");\n         this._repaint(children[0]);\n         this._addClass(children, \"slide\");\n         this._removeClass(children, \"slide-up\");\n         this._one(children[0], \"transitionend\", () => {\n            that._removeClass(children, \"slide\");\n         });\n      } else {\n         this._addClass(descendants, \"slide slide-up\");\n         this._one(descendants[0], \"transitionend\", () => {\n            that._removeClass(descendants, \"slide\");\n            descendants.forEach((desc) => {\n               let ul = that._closest(desc, function (el) {\n                  return el.nodeName === \"UL\";\n               });\n\n               ul.classList.add(\"hidden\");\n            });\n         });\n\n         descendants.forEach((desc) => {\n            let subTBs = Array.from(desc.querySelectorAll(\".toggleBtn\"));\n\n            that._removeClass(subTBs, \"fa-minus-square\");\n            that._addClass(subTBs, \"fa-plus-square\");\n         });\n      }\n   }\n   _dispatchClickEvent(event) {\n      let classList = event.target.classList;\n\n      if (classList.contains(\"topEdge\")) {\n         this._clickTopEdge(event);\n      } else if (\n         classList.contains(\"rightEdge\") ||\n         classList.contains(\"leftEdge\")\n      ) {\n         this._clickHorizontalEdge(event);\n      } else if (classList.contains(\"bottomEdge\")) {\n         this._clickBottomEdge(event);\n      } else if (classList.contains(\"toggleBtn\")) {\n         this._clickToggleButton(event);\n      } else {\n         this._clickNode(event);\n      }\n   }\n   _onDragStart(event) {\n      let nodeDiv = event.target,\n         opts = this.options,\n         isFirefox = /firefox/.test(window.navigator.userAgent.toLowerCase());\n\n      if (isFirefox) {\n         event.dataTransfer.setData(\"text/html\", \"hack for firefox\");\n      }\n      // if users enable zoom or direction options\n      if (this.style.transform) {\n         let ghostNode, nodeCover;\n\n         if (!document.querySelector(\".ghost-node\")) {\n            ghostNode = document.createElementNS(\n               \"http://www.w3.org/2000/svg\",\n               \"svg\"\n            );\n            ghostNode.classList.add(\"ghost-node\");\n            nodeCover = document.createElementNS(\n               \"http://www.w3.org/2000/svg\",\n               \"rect\"\n            );\n            ghostNode.appendChild(nodeCover);\n            this.appendChild(ghostNode);\n         } else {\n            ghostNode = this.querySelector(\":scope > .ghost-node\");\n            nodeCover = ghostNode.children[0];\n         }\n         let transValues = this.style.transform.split(\",\"),\n            scale = Math.abs(\n               window.parseFloat(\n                  opts.direction === \"t2b\" || opts.direction === \"b2t\"\n                     ? transValues[0].slice(transValues[0].indexOf(\"(\") + 1)\n                     : transValues[1]\n               )\n            );\n\n         ghostNode.setAttribute(\"width\", nodeDiv.offsetWidth);\n         ghostNode.setAttribute(\"height\", nodeDiv.offsetHeight);\n         nodeCover.setAttribute(\"x\", 5 * scale);\n         nodeCover.setAttribute(\"y\", 5 * scale);\n         nodeCover.setAttribute(\"width\", 120 * scale);\n         nodeCover.setAttribute(\"height\", 40 * scale);\n         nodeCover.setAttribute(\"rx\", 4 * scale);\n         nodeCover.setAttribute(\"ry\", 4 * scale);\n         nodeCover.setAttribute(\"stroke-width\", 1 * scale);\n         let xOffset = event.offsetX * scale,\n            yOffset = event.offsetY * scale;\n\n         if (opts.direction === \"l2r\") {\n            xOffset = event.offsetY * scale;\n            yOffset = event.offsetX * scale;\n         } else if (opts.direction === \"r2l\") {\n            xOffset = nodeDiv.offsetWidth - event.offsetY * scale;\n            yOffset = event.offsetX * scale;\n         } else if (opts.direction === \"b2t\") {\n            xOffset = nodeDiv.offsetWidth - event.offsetX * scale;\n            yOffset = nodeDiv.offsetHeight - event.offsetY * scale;\n         }\n         if (isFirefox) {\n            // hack for old version of Firefox(< 48.0)\n            let ghostNodeWrapper = document.createElement(\"img\");\n\n            ghostNodeWrapper.src =\n               \"data:image/svg+xml;utf8,\" +\n               new XMLSerializer().serializeToString(ghostNode);\n            event.dataTransfer.setDragImage(ghostNodeWrapper, xOffset, yOffset);\n            nodeCover.setAttribute(\"fill\", \"rgb(255, 255, 255)\");\n            nodeCover.setAttribute(\"stroke\", \"rgb(191, 0, 0)\");\n         } else {\n            event.dataTransfer.setDragImage(ghostNode, xOffset, yOffset);\n         }\n      }\n      let dragged = event.target,\n         dragZone = this._closest(dragged, (el) => {\n            return el.classList && el.classList.contains(\"nodes\");\n         }).parentNode.children[0].querySelector(\".node\"),\n         dragHier = Array.from(\n            this._closest(dragged, (el) => {\n               return el.nodeName === \"TABLE\";\n            }).querySelectorAll(\".node\")\n         );\n\n      this.dragged = dragged;\n      Array.from(this.querySelectorAll(\".node\")).forEach(function (node) {\n         if (!dragHier.includes(node)) {\n            if (opts.dropCriteria) {\n               if (opts.dropCriteria(dragged, dragZone, node)) {\n                  node.classList.add(\"allowedDrop\");\n               }\n            } else {\n               node.classList.add(\"allowedDrop\");\n            }\n         }\n      });\n   }\n   _onDragOver(event) {\n      event.preventDefault();\n      let dropZone = event.currentTarget;\n\n      if (!dropZone.classList.contains(\"allowedDrop\")) {\n         event.dataTransfer.dropEffect = \"none\";\n      }\n   }\n   _onDragEnd(event) {\n      Array.from(this.querySelectorAll(\".allowedDrop\")).forEach(function (el) {\n         el.classList.remove(\"allowedDrop\");\n      });\n   }\n   _onDrop(event) {\n      let dropZone = event.currentTarget,\n         dragged = this.dragged,\n         dragZone = this._closest(dragged, function (el) {\n            return el.classList && el.classList.contains(\"nodes\");\n         }).parentNode.children[0].children[0];\n\n      this._removeClass(\n         Array.from(this.querySelectorAll(\".allowedDrop\")),\n         \"allowedDrop\"\n      );\n      // firstly, deal with the hierarchy of drop zone\n      if (!dropZone.parentNode.parentNode.nextElementSibling) {\n         // if the drop zone is a leaf node\n         let bottomEdge = document.createElement(\"i\");\n\n         bottomEdge.setAttribute(\"class\", \"edge verticalEdge bottomEdge fa\");\n         dropZone.appendChild(bottomEdge);\n         dropZone.parentNode.setAttribute(\"colspan\", 2);\n         let table = this._closest(dropZone, function (el) {\n               return el.nodeName === \"TABLE\";\n            }),\n            upperTr = document.createElement(\"tr\"),\n            lowerTr = document.createElement(\"tr\"),\n            nodeTr = document.createElement(\"tr\");\n\n         upperTr.setAttribute(\"class\", \"lines\");\n         upperTr.innerHTML = `<td colspan=\"2\"><div class=\"downLine\"></div></td>`;\n         table.appendChild(upperTr);\n         lowerTr.setAttribute(\"class\", \"lines\");\n         lowerTr.innerHTML = `<td class=\"rightLine\">&nbsp;</td><td class=\"leftLine\">&nbsp;</td>`;\n         table.appendChild(lowerTr);\n         nodeTr.setAttribute(\"class\", \"nodes\");\n         table.appendChild(nodeTr);\n         Array.from(dragged.querySelectorAll(\".horizontalEdge\")).forEach(\n            (hEdge) => {\n               dragged.removeChild(hEdge);\n            }\n         );\n         let draggedTd = this._closest(\n            dragged,\n            (el) => el.nodeName === \"TABLE\"\n         ).parentNode;\n\n         nodeTr.appendChild(draggedTd);\n      } else {\n         let dropColspan = window.parseInt(dropZone.parentNode.colSpan) + 2;\n\n         dropZone.parentNode.setAttribute(\"colspan\", dropColspan);\n         dropZone.parentNode.parentNode.nextElementSibling.children[0].setAttribute(\n            \"colspan\",\n            dropColspan\n         );\n         if (!dragged.querySelector(\".horizontalEdge\")) {\n            let rightEdge = document.createElement(\"i\"),\n               leftEdge = document.createElement(\"i\");\n\n            rightEdge.setAttribute(\"class\", \"edge horizontalEdge rightEdge fa\");\n            dragged.appendChild(rightEdge);\n            leftEdge.setAttribute(\"class\", \"edge horizontalEdge leftEdge fa\");\n            dragged.appendChild(leftEdge);\n         }\n         let temp =\n               dropZone.parentNode.parentNode.nextElementSibling\n                  .nextElementSibling,\n            leftline = document.createElement(\"td\"),\n            rightline = document.createElement(\"td\");\n\n         leftline.setAttribute(\"class\", \"leftLine topLine\");\n         leftline.innerHTML = `&nbsp;`;\n         temp.insertBefore(leftline, temp.children[1]);\n         rightline.setAttribute(\"class\", \"rightLine topLine\");\n         rightline.innerHTML = `&nbsp;`;\n         temp.insertBefore(rightline, temp.children[2]);\n         temp.nextElementSibling.appendChild(\n            this._closest(dragged, function (el) {\n               return el.nodeName === \"TABLE\";\n            }).parentNode\n         );\n\n         let dropSibs = this._siblings(\n            this._closest(dragged, function (el) {\n               return el.nodeName === \"TABLE\";\n            }).parentNode\n         ).map((el) => el.querySelector(\".node\"));\n\n         if (dropSibs.length === 1) {\n            let rightEdge = document.createElement(\"i\"),\n               leftEdge = document.createElement(\"i\");\n\n            rightEdge.setAttribute(\"class\", \"edge horizontalEdge rightEdge fa\");\n            dropSibs[0].appendChild(rightEdge);\n            leftEdge.setAttribute(\"class\", \"edge horizontalEdge leftEdge fa\");\n            dropSibs[0].appendChild(leftEdge);\n         }\n      }\n      // secondly, deal with the hierarchy of dragged node\n      let dragColSpan = window.parseInt(dragZone.colSpan);\n\n      if (dragColSpan > 2) {\n         dragZone.setAttribute(\"colspan\", dragColSpan - 2);\n         dragZone.parentNode.nextElementSibling.children[0].setAttribute(\n            \"colspan\",\n            dragColSpan - 2\n         );\n         let temp = dragZone.parentNode.nextElementSibling.nextElementSibling;\n\n         temp.children[1].remove();\n         temp.children[1].remove();\n\n         let dragSibs = Array.from(\n            dragZone.parentNode.parentNode.children[3].children\n         ).map(function (td) {\n            return td.querySelector(\".node\");\n         });\n\n         if (dragSibs.length === 1) {\n            dragSibs[0].querySelector(\".leftEdge\").remove();\n            dragSibs[0].querySelector(\".rightEdge\").remove();\n         }\n      } else {\n         dragZone.removeAttribute(\"colspan\");\n         dragZone\n            .querySelector(\".node\")\n            .removeChild(dragZone.querySelector(\".bottomEdge\"));\n         Array.from(dragZone.parentNode.parentNode.children)\n            .slice(1)\n            .forEach((tr) => tr.remove());\n      }\n      let customE = new CustomEvent(\"nodedropped.orgchart\", {\n         detail: {\n            draggedNode: dragged,\n            dragZone: dragZone.children[0],\n            dropZone: dropZone,\n         },\n      });\n\n      this.dispatchEvent(customE);\n   }\n   // create node\n   _createNode(nodeData, level) {\n      let that = this,\n         opts = this.options;\n\n      return new Promise(function (resolve, reject) {\n         if (nodeData.children) {\n            for (let child of nodeData.children) {\n               child.parentId = nodeData.id;\n            }\n         }\n\n         // construct the content of node\n         let nodeDiv = document.createElement(\"div\");\n\n         delete nodeData.children;\n         nodeDiv.dataset.source = JSON.stringify(nodeData);\n         if (nodeData[opts.nodeId]) {\n            nodeDiv.id = nodeData[opts.nodeId];\n         }\n         let inEdit = that.dataset.inEdit,\n            isHidden;\n\n         if (inEdit) {\n            isHidden = inEdit === \"addChildren\" ? \" slide-up\" : \"\";\n         } else {\n            isHidden = level >= opts.depth ? \" slide-up\" : \"\";\n         }\n         nodeDiv.setAttribute(\n            \"class\",\n            \"node \" + (nodeData.className || \"\") + isHidden\n         );\n         if (opts.draggable) {\n            nodeDiv.setAttribute(\"draggable\", true);\n         }\n         if (nodeData.parentId) {\n            nodeDiv.setAttribute(\"data-parent\", nodeData.parentId);\n         }\n         nodeDiv.innerHTML = `\n        <div class=\"title\">${nodeData[opts.nodeTitle]}</div>\n        ${\n           opts.nodeContent\n              ? `<div class=\"content\">${nodeData[opts.nodeContent]}</div>`\n              : \"\"\n        }\n      `;\n         // append 4 direction arrows or expand/collapse buttons\n         let flags = nodeData.relationship || \"\";\n\n         if (opts.verticalDepth && level + 2 > opts.verticalDepth) {\n            if (level + 1 >= opts.verticalDepth && Number(flags.substr(2, 1))) {\n               let toggleBtn = document.createElement(\"i\"),\n                  icon = level + 1 >= opts.depth ? \"plus\" : \"minus\";\n\n               toggleBtn.setAttribute(\n                  \"class\",\n                  \"toggleBtn fa fa-\" + icon + \"-square\"\n               );\n               nodeDiv.appendChild(toggleBtn);\n            }\n         } else {\n            if (Number(flags.substr(0, 1))) {\n               let topEdge = document.createElement(\"i\");\n\n               topEdge.setAttribute(\"class\", \"edge verticalEdge topEdge fa\");\n               nodeDiv.appendChild(topEdge);\n            }\n            if (Number(flags.substr(1, 1))) {\n               let rightEdge = document.createElement(\"i\"),\n                  leftEdge = document.createElement(\"i\");\n\n               rightEdge.setAttribute(\n                  \"class\",\n                  \"edge horizontalEdge rightEdge fa\"\n               );\n               nodeDiv.appendChild(rightEdge);\n               leftEdge.setAttribute(\n                  \"class\",\n                  \"edge horizontalEdge leftEdge fa\"\n               );\n               nodeDiv.appendChild(leftEdge);\n            }\n            if (Number(flags.substr(2, 1))) {\n               let bottomEdge = document.createElement(\"i\"),\n                  symbol = document.createElement(\"i\"),\n                  title = nodeDiv.querySelector(\":scope > .title\");\n\n               bottomEdge.setAttribute(\n                  \"class\",\n                  \"edge verticalEdge bottomEdge fa\"\n               );\n               nodeDiv.appendChild(bottomEdge);\n               symbol.setAttribute(\n                  \"class\",\n                  \"fa \" + opts.parentNodeSymbol + \" symbol\"\n               );\n               title.insertBefore(symbol, title.children[0]);\n            }\n         }\n\n         nodeDiv.addEventListener(\"mouseenter\", that._hoverNode.bind(that));\n         nodeDiv.addEventListener(\"mouseleave\", that._hoverNode.bind(that));\n         nodeDiv.addEventListener(\"click\", that._dispatchClickEvent.bind(that));\n         if (opts.draggable) {\n            nodeDiv.addEventListener(\"dragstart\", that._onDragStart.bind(that));\n            nodeDiv.addEventListener(\"dragover\", that._onDragOver.bind(that));\n            nodeDiv.addEventListener(\"dragend\", that._onDragEnd.bind(that));\n            nodeDiv.addEventListener(\"drop\", that._onDrop.bind(that));\n         }\n         // allow user to append dom modification after finishing node create of orgchart\n         if (opts.createNode) {\n            opts.createNode(nodeDiv, nodeData);\n         }\n\n         resolve(nodeDiv);\n      });\n   }\n   buildHierarchy(appendTo, nodeData, level, callback) {\n      // Construct the node\n      let that = this,\n         opts = this.options,\n         nodeWrapper,\n         childNodes = nodeData.children,\n         isVerticalNode = opts.verticalDepth && level + 1 >= opts.verticalDepth;\n\n      if (Object.keys(nodeData).length > 1) {\n         // if nodeData has nested structure\n         nodeWrapper = isVerticalNode\n            ? appendTo\n            : document.createElement(\"table\");\n         if (!isVerticalNode) {\n            appendTo.appendChild(nodeWrapper);\n         }\n         this._createNode(nodeData, level)\n            .then(function (nodeDiv) {\n               if (isVerticalNode) {\n                  nodeWrapper.insertBefore(nodeDiv, nodeWrapper.firstChild);\n               } else {\n                  let tr = document.createElement(\"tr\");\n\n                  tr.innerHTML = `\n            <td ${childNodes ? `colspan=\"${childNodes.length * 2}\"` : \"\"}>\n            </td>\n          `;\n                  tr.children[0].appendChild(nodeDiv);\n                  nodeWrapper.insertBefore(\n                     tr,\n                     nodeWrapper.children[0] ? nodeWrapper.children[0] : null\n                  );\n               }\n               if (callback) {\n                  callback();\n               }\n            })\n            .catch(function (err) {\n               console.error(\"Failed to creat node\", err);\n            });\n      }\n      // Construct the inferior nodes and connectiong lines\n      if (childNodes) {\n         if (Object.keys(nodeData).length === 1) {\n            // if nodeData is just an array\n            nodeWrapper = appendTo;\n         }\n         let isHidden,\n            isVerticalLayer =\n               opts.verticalDepth && level + 2 >= opts.verticalDepth,\n            inEdit = that.dataset.inEdit;\n\n         if (inEdit) {\n            isHidden = inEdit === \"addSiblings\" ? \"\" : \" hidden\";\n         } else {\n            isHidden = level + 1 >= opts.depth ? \" hidden\" : \"\";\n         }\n\n         // draw the line close to parent node\n         if (!isVerticalLayer) {\n            let tr = document.createElement(\"tr\");\n\n            tr.setAttribute(\"class\", \"lines\" + isHidden);\n            tr.innerHTML = `\n          <td colspan=\"${childNodes.length * 2}\">\n            <div class=\"downLine\"></div>\n          </td>\n        `;\n            nodeWrapper.appendChild(tr);\n         }\n         // draw the lines close to children nodes\n         let lineLayer = document.createElement(\"tr\");\n\n         lineLayer.setAttribute(\"class\", \"lines\" + isHidden);\n         lineLayer.innerHTML = `\n        <td class=\"rightLine\">&nbsp;</td>\n        ${childNodes\n           .slice(1)\n           .map(\n              () => `\n          <td class=\"leftLine topLine\">&nbsp;</td>\n          <td class=\"rightLine topLine\">&nbsp;</td>\n          `\n           )\n           .join(\"\")}\n        <td class=\"leftLine\">&nbsp;</td>\n      `;\n         let nodeLayer;\n\n         if (isVerticalLayer) {\n            nodeLayer = document.createElement(\"ul\");\n            if (isHidden) {\n               nodeLayer.classList.add(isHidden.trim());\n            }\n            if (level + 2 === opts.verticalDepth) {\n               let tr = document.createElement(\"tr\");\n\n               tr.setAttribute(\"class\", \"verticalNodes\" + isHidden);\n               tr.innerHTML = `<td></td>`;\n               tr.firstChild.appendChild(nodeLayer);\n               nodeWrapper.appendChild(tr);\n            } else {\n               nodeWrapper.appendChild(nodeLayer);\n            }\n         } else {\n            nodeLayer = document.createElement(\"tr\");\n            nodeLayer.setAttribute(\"class\", \"nodes\" + isHidden);\n            nodeWrapper.appendChild(lineLayer);\n            nodeWrapper.appendChild(nodeLayer);\n         }\n         // recurse through children nodes\n         childNodes.forEach((child) => {\n            let nodeCell;\n\n            if (isVerticalLayer) {\n               nodeCell = document.createElement(\"li\");\n            } else {\n               nodeCell = document.createElement(\"td\");\n               nodeCell.setAttribute(\"colspan\", 2);\n            }\n            nodeLayer.appendChild(nodeCell);\n            that.buildHierarchy(nodeCell, child, level + 1, callback);\n         });\n      }\n   }\n   _clickChart(event) {\n      let closestNode = this._closest(event.target, function (el) {\n         return el.classList && el.classList.contains(\"node\");\n      });\n\n      if (!closestNode && this.querySelector(\".node.focused\")) {\n         this.querySelector(\".node.focused\").classList.remove(\"focused\");\n      }\n   }\n   _loopChart(chart) {\n      let subObj = { id: chart.querySelector(\".node\").id };\n\n      if (chart.children[3]) {\n         Array.from(chart.children[3].children).forEach((el) => {\n            if (!subObj.children) {\n               subObj.children = [];\n            }\n            subObj.children.push(this._loopChart(el.firstChild));\n         });\n      }\n      return subObj;\n   }\n   getHierarchy() {\n      if (!this.querySelector(\".node\").id) {\n         return \"Error: Nodes of orghcart to be exported must have id attribute!\";\n      }\n      return this._loopChart(this.querySelector(\"table\"));\n   }\n   _onPanStart(event) {\n      let chart = event.currentTarget;\n\n      if (\n         this._closest(\n            event.target,\n            (el) => el.classList && el.classList.contains(\"node\")\n         ) ||\n         (event.touches && event.touches.length > 1)\n      ) {\n         chart.dataset.panning = false;\n         return;\n      }\n      chart.style.cursor = \"move\";\n      chart.dataset.panning = true;\n\n      let lastX = 0,\n         lastY = 0,\n         lastTf = window.getComputedStyle(chart).transform;\n\n      if (lastTf !== \"none\") {\n         let temp = lastTf.split(\",\");\n\n         if (!lastTf.includes(\"3d\")) {\n            lastX = Number.parseInt(temp[4], 10);\n            lastY = Number.parseInt(temp[5], 10);\n         } else {\n            lastX = Number.parseInt(temp[12], 10);\n            lastY = Number.parseInt(temp[13], 10);\n         }\n      }\n      let startX = 0,\n         startY = 0;\n\n      if (!event.targetTouches) {\n         // pan on desktop\n         startX = event.pageX - lastX;\n         startY = event.pageY - lastY;\n      } else if (event.targetTouches.length === 1) {\n         // pan on mobile device\n         startX = event.targetTouches[0].pageX - lastX;\n         startY = event.targetTouches[0].pageY - lastY;\n      } else if (event.targetTouches.length > 1) {\n         return;\n      }\n      chart.dataset.panStart = JSON.stringify({\n         startX: startX,\n         startY: startY,\n      });\n      chart.addEventListener(\"mousemove\", this._onPanning.bind(this));\n      chart.addEventListener(\"touchmove\", this._onPanning.bind(this));\n   }\n   _onPanning(event) {\n      let chart = event.currentTarget;\n\n      if (chart.dataset.panning === \"false\") {\n         return;\n      }\n      let newX = 0,\n         newY = 0,\n         panStart = JSON.parse(chart.dataset.panStart),\n         startX = panStart.startX,\n         startY = panStart.startY;\n\n      if (!event.targetTouches) {\n         // pand on desktop\n         newX = event.pageX - startX;\n         newY = event.pageY - startY;\n      } else if (event.targetTouches.length === 1) {\n         // pan on mobile device\n         newX = event.targetTouches[0].pageX - startX;\n         newY = event.targetTouches[0].pageY - startY;\n      } else if (event.targetTouches.length > 1) {\n         return;\n      }\n      let lastTf = window.getComputedStyle(chart).transform;\n\n      if (lastTf === \"none\") {\n         if (!lastTf.includes(\"3d\")) {\n            chart.style.transform =\n               \"matrix(1, 0, 0, 1, \" + newX + \", \" + newY + \")\";\n         } else {\n            chart.style.transform =\n               \"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, \" +\n               newX +\n               \", \" +\n               newY +\n               \", 0, 1)\";\n         }\n      } else {\n         let matrix = lastTf.split(\",\");\n\n         if (!lastTf.includes(\"3d\")) {\n            matrix[4] = newX;\n            matrix[5] = newY + \")\";\n         } else {\n            matrix[12] = newX;\n            matrix[13] = newY;\n         }\n         chart.style.transform = matrix.join(\",\");\n      }\n   }\n   _onPanEnd(event) {\n      if (this.dataset.panning === \"true\") {\n         this.dataset.panning = false;\n         this.style.cursor = \"default\";\n         document.body.removeEventListener(\"mousemove\", this._onPanning);\n         document.body.removeEventListener(\"touchmove\", this._onPanning);\n      }\n   }\n   _setChartScale(chart, newScale) {\n      let lastTf = window.getComputedStyle(chart).transform;\n\n      if (lastTf === \"none\") {\n         chart.style.transform = \"scale(\" + newScale + \",\" + newScale + \")\";\n      } else {\n         let matrix = lastTf.split(\",\");\n\n         if (!lastTf.includes(\"3d\")) {\n            matrix[0] = \"matrix(\" + newScale;\n            matrix[3] = newScale;\n            chart.style.transform =\n               lastTf + \" scale(\" + newScale + \",\" + newScale + \")\";\n         } else {\n            chart.style.transform =\n               lastTf + \" scale3d(\" + newScale + \",\" + newScale + \", 1)\";\n         }\n      }\n      chart.dataset.scale = newScale;\n   }\n   _onWheeling(event) {\n      event.preventDefault();\n\n      let newScale = event.deltaY > 0 ? 0.8 : 1.2;\n\n      this._setChartScale(this, newScale);\n   }\n   _getPinchDist(event) {\n      return Math.sqrt(\n         (event.touches[0].clientX - event.touches[1].clientX) *\n            (event.touches[0].clientX - event.touches[1].clientX) +\n            (event.touches[0].clientY - event.touches[1].clientY) *\n               (event.touches[0].clientY - event.touches[1].clientY)\n      );\n   }\n   _onTouchStart(event) {\n      if (event.touches && event.touches.length === 2) {\n         let dist = this._getPinchDist(event);\n\n         this.dataset.pinching = true;\n         this.dataset.pinchDistStart = dist;\n      }\n   }\n   _onTouchMove(event) {\n      if (this.dataset.pinching) {\n         let dist = this._getPinchDist(event);\n\n         this.dataset.pinchDistEnd = dist;\n      }\n   }\n   _onTouchEnd(event) {\n      if (this.dataset.pinching) {\n         this.dataset.pinching = false;\n         let diff = this.dataset.pinchDistEnd - this.dataset.pinchDistStart;\n\n         if (diff > 0) {\n            this._setChartScale(this, 1);\n         } else if (diff < 0) {\n            this._setChartScale(this, -1);\n         }\n      }\n   }\n}\n\nwindow.customElements.define(\"org-chart\", OrgChart);\n"],"names":["OrgChart","HTMLElement","constructor","options","super","Promise","prototype","finally","callback","P","this","then","value","resolve","reason","opts","Object","assign","nodeTitle","nodeId","toggleSiblingsResp","depth","chartClass","parentNodeSymbol","draggable","direction","pan","zoom","addEventListener","_clickChart","bind","chartContainer","document","querySelector","style","overflow","_onPanStart","body","_onPanEnd","_onWheeling","_onTouchStart","_onTouchMove","_onTouchEnd","connectedCallback","that","data","setAttribute","buildHierarchy","ajaxURL","_attachRel","startsWith","_buildJsonDS","children","spinner","createElement","appendChild","_getJSON","resp","catch","err","console","error","parentNode","removeChild","disconnectedCallback","attributeChangedCallback","attrName","oldVal","newVal","_closest","el","fn","_siblings","expr","Array","from","filter","child","matches","_prevAll","sibs","prevSib","previousElementSibling","push","_nextAll","nextSib","nextElementSibling","_isVisible","offsetParent","_addClass","elements","classNames","forEach","indexOf","split","className","classList","add","_removeClass","remove","_css","prop","val","_removeAttr","attr","removeAttribute","_one","type","listener","self","one","event","call","removeEventListener","_getDescElements","ancestors","selector","results","querySelectorAll","url","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","response","Error","statusText","responseType","setRequestHeader","send","li","subObj","name","firstChild","textContent","trim","relationship","nodeName","length","id","flags","item","_repaint","node","offsetWidth","_isInAction","_getNodeState","relation","criteria","state","exist","visible","contains","some","getRelatedNodes","lastChild","map","_switchHorizontalArrow","leftEdge","rightEdge","temp","dataset","siblingsLoaded","sibsVisible","toggle","_hoverNode","target","flag","topEdge","bottomEdge","_clickNode","clickedNode","currentTarget","focusedNode","_buildParentNode","currentRoot","nodeData","table","_createNode","nodeDiv","parentTr","superiorLine","inferiorLine","childrenTr","innerHTML","insertBefore","_switchVerticalArrow","arrow","showParent","slice","parent","showSiblings","siblings","upperLevel","sib","hideSiblings","nodeContainer","inAjax","animatedNodes","apply","lines","Set","line","visibility","someLines","hideParent","grandfatherVisible","addParent","_startLoading","_endLoading","_clickTopEdge","stopPropagation","parentState","source","keys","hideChildren","lastItem","descendants","isVerticalDesc","desc","showChildren","_buildChildNode","appendTo","addChildren","count","inEdit","symbol","_clickBottomEdge","childrenState","_complementLine","oneSibling","siblingCount","existingSibligCount","i","rightLine","leftLine","_buildSiblingNode","nodeChart","newSiblingCount","insertPostion","Math","floor","childCount","siblingTds","nodeCount","td","temp2","temp3","addSiblings","removeNodes","_clickHorizontalEdge","hEdge","siblingsState","families","_clickToggleButton","toggleBtn","descWrapper","subTBs","_dispatchClickEvent","_onDragStart","isFirefox","test","window","navigator","userAgent","toLowerCase","dataTransfer","setData","transform","ghostNode","nodeCover","createElementNS","transValues","scale","abs","parseFloat","offsetHeight","xOffset","offsetX","yOffset","offsetY","ghostNodeWrapper","src","XMLSerializer","serializeToString","setDragImage","dragged","dragZone","dragHier","includes","dropCriteria","_onDragOver","preventDefault","dropEffect","_onDragEnd","_onDrop","dropZone","dropColspan","parseInt","colSpan","leftline","rightline","dropSibs","upperTr","lowerTr","nodeTr","draggedTd","dragColSpan","dragSibs","tr","customE","CustomEvent","detail","draggedNode","dispatchEvent","level","parentId","stringify","isHidden","nodeContent","verticalDepth","Number","substr","icon","title","createNode","nodeWrapper","childNodes","isVerticalNode","isVerticalLayer","nodeLayer","lineLayer","join","nodeCell","_loopChart","chart","getHierarchy","touches","panning","cursor","lastX","lastY","lastTf","getComputedStyle","startX","startY","targetTouches","pageX","pageY","panStart","_onPanning","newX","newY","matrix","_setChartScale","newScale","deltaY","_getPinchDist","sqrt","clientX","clientY","dist","pinching","pinchDistStart","pinchDistEnd","diff","customElements","define"],"sourceRoot":""}