{"version":3,"file":"635.046b22087992e570eaf9.js","mappings":";inBAAA,IAAIA,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,IACX,aAAc,IACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,KACX,aAAc,KACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,KACZ,cAAe,KACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,KACT,aAAc,MACd,gBAAiB,MACjB,WAAY,KACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,EAC5B,CACA,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CACP,CACA,OAAOP,EAAIE,EACZ,CACAD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,EACpB,EACAC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,uBC5RpB,MAAMY,EAAc,EAAQ,OACtBC,EAAiB,EAAQ,OAE/BH,EAAOC,QAAU,cAAyD,EAKvEG,YAAYC,EAAKC,GAGdC,MAAMF,EAFNC,EAASA,GAAU,8CAGnB,IAAIE,EAAIC,KAAKC,QAGTC,EAAM,CACPC,UAAWH,KAAKI,OAAO,GAAGP,iBAC1BQ,MAAOL,KAAKI,OAAO,GAAGP,uBACtBS,gBAAiBN,KAAKI,OAAO,GAAGP,iCAEhCU,WAAYP,KAAKI,OAAO,GAAGP,4BAC3BW,aAAcR,KAAKI,OAAO,GAAGP,+BAIhCG,KAAKS,GAAK,CACPC,KAAM,SACNC,SAAU,SACV9B,GAAIqB,EAAIC,UACRS,QAAQ,EACRC,OAAO,EACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,CACHN,KAAM,UACNO,IAAK,aACLC,KAAM,CACH,CACGR,KAAM,QACNS,MAAOpB,EAAE,iBACTkB,IAAK,cACLG,MAAO,UAEV,CACGV,KAAM,SACNS,MAAOpB,EAAE,SACTsB,WAAW,EACXD,MAAO,SACPE,MAAO,WACJC,EAAOf,cACV,KASTgB,KAAM,CACHd,KAAM,aACNe,OAAQ,IACRR,IAAK,sBACLS,YAAY,EACZF,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGlB,KAAM,aACN7B,GAAIqB,EAAIG,MACRc,MAAOpB,EAAE,cACT8B,WAAY7B,KAAK8B,GAAGC,WAAWC,SAASC,gBACxCC,QAAS,CAEN,CAAErD,GAAI,YAAa6B,KAAM,cAE5ByB,GAAI,CACDC,SAAU,SAAUvD,EAAIwD,EAAIC,GACzBf,EAAOa,SAASvD,EACnB,IAGN,CACGiC,OAAQ,GACRa,KAAM,QAET,CACGjB,KAAM,YACN7B,GAAIqB,EAAII,gBACRiC,QAAS,EAETC,MAAO,CACJ,CACG3D,GAAI,SACJ6B,KAAM,QACNS,MAAOpB,EAAE,2BAIlB,CAAEe,OAAQ,IACV,CACGI,KAAM,CACH,CAAEuB,WAAW,GACb,CACG/B,KAAM,SACNgC,MAAO3C,EAAE,UACTkB,IAAK,mBACLI,WAAW,EACXC,MAAO,WACJC,EAAOf,cACV,GAEH,CACGE,KAAM,SACNO,IAAK,gBACLpC,GAAIqB,EAAIK,WACRY,MAAOpB,EAAE,cACTsB,WAAW,EACXM,KAAM,OACNL,MAAO,WACJC,EAAOhB,YACV,QAOlB4B,GAAI,CAIDQ,OAAQ,WACLpB,EAAOqB,YACV,IAIN,IAAIC,EAAc,CAAC,EACfC,EAAiB,CAAC,EAClBC,EAAoB,CAAC,EACrBC,EAAiB,KAEjBC,EAAiB,KAEjBC,EAAyB,KAEzBC,EAAW,GAEXC,EAAa,KAGjBpD,KAAKqD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAIxDE,MAAM/C,GAAGT,KAAKS,IACd+C,MAAMC,OAAOC,GAAGxD,EAAIC,WAAYqD,MAAMG,aAEtC,IAAIC,EAASlE,EAAemE,YAKxBC,EAAgB,CACjBpD,KAAM,YACN7B,GAAIqB,EAAII,gBACRyD,SAAS,EACTnC,KAAM,IAGTgC,EAAOI,SAAQ,SAAUC,GACtB,IAAIC,EAAWD,EAAEE,WAAWD,SACxBE,EAAMH,EAAEE,WAAWC,IAGvBjB,EAASkB,KAAK,CAAExF,GAAIqF,EAAUxB,MAAOwB,IAGrC,IAAII,EAAkBL,EAAEM,oBAAoB3E,EAAKC,GAC5CqD,IACFA,EAAyBoB,GAG5BR,EAAclC,KAAKyC,KAAKC,EAAgB7D,IAExCoC,EAAYqB,GAAYD,EACxBnB,EAAeoB,GAAYI,EAC3BvB,EAAkBqB,GAAOE,CAC5B,IASAZ,GAAGxD,EAAIG,OAAOmE,OAAO,UAAWrB,GAChCO,GAAGxD,EAAIG,OAAOoE,UAGdjB,MAAM/C,GAAGqD,EAAeJ,GAAGxD,EAAII,kBAG/B,IAAK,IAAIgD,KAAKR,EACXA,EAAeQ,GAAGD,OAElBP,EAAeQ,GAAGoB,OAGrBxB,EAAuByB,OACvB3B,EAAiBE,EAGjBQ,GAAGxD,EAAIG,OAAOuE,SAASzB,EAAS,GAAGtE,GAAG,EAQzC,IAAI0C,EAAUvB,KAAKuB,OAAS,CACzBsD,gBAAkBC,IAIf,IAAK,IAAIZ,KAAYpB,EAEfA,EAAeoB,IACfpB,EAAeoB,GAAU3C,OAAOsD,iBAEhC/B,EAAeoB,GAAU3C,OAAOsD,gBAAgBC,EAEtD,EAGHC,WAAaC,IAIV,IAAK,IAAId,KAHTjB,EAAiB+B,EAGIlC,EAEfA,EAAeoB,IACfpB,EAAeoB,GAAU3C,OAAOwD,YAEhCjC,EAAeoB,GAAU3C,OAAOwD,WAAW9B,EAEjD,EAGHzC,aAAc,WAIX,IAAK,IAAI8C,KAHT/B,EAAOqB,aAGOE,EACXA,EAAeQ,GAAG2B,QAIrBvB,GAAGxD,EAAIC,WAAWuE,MACrB,EAEAnE,WAAY2E,iBACTxB,GAAGxD,EAAIK,YAAY4E,UAEnBzB,GAAGxD,EAAIC,WAAWiF,eAElB,IAAIC,EAASrC,EACb,GAAIqC,EAED,GAAIA,EAAOC,UAAW,CACnB,IAKIC,EALAC,EAAOxF,KAAK8B,GAAG2D,UAAUJ,EAAOK,UAEhCC,EAAQ,KACRC,EAAU,KAKd,GAAKxC,EAoEE,CAEAoC,EAAKrE,QAAOiC,EAAWjC,MAAQqE,EAAKrE,OAGxCyE,EAAUxC,EAAWyC,QAGrB,IAAIC,EAAe9F,KAAK8B,GAAG2D,UAAUG,GACrC,IAAK,IAAIxB,KAAOoB,EAEb,GACU,YAAPpB,GACAoB,EAAe,UACY,iBAApBA,EAAe,SACvB,CACCM,EAAuB,SACpBA,EAAuB,UAAK,CAAC,EAEhC,IAAK,IAAIC,KAAcP,EAAe,SACnCM,EAAuB,SAAEC,GACtBP,EAAe,SAAEO,EAE1B,MACGD,EAAa1B,GAAOoB,EAAKpB,GAI/BhB,EAAW4C,WAAWF,GAEtBH,EAAQvC,CACX,KAnGiB,CAKd,IAAIrC,EAAQ,GAA0B,IAHtC4E,EAAQ1C,EAAegD,SAAST,IAGTrE,MAAM+E,OAW7B,GAVIP,EAAMQ,SAASC,WAChBrF,GAAgB,IAEfA,EAAQ,MACTA,EAAQ,KAGX4E,EAAMQ,SAASpF,MAAQA,EAGN,iBAAb4E,EAAMvB,IAAwB,CAC/B,IAAIiC,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3Bb,EAAMQ,SAASM,SAAW,EAE1B,IAAIC,EAAaf,EAAMgB,eAGvB,IAAIC,EAAiBjB,EAAMkB,WAIxBH,EAAWI,QACPC,GAAMA,EAAEF,YAAcD,IACxBV,SAEFU,EAAiB,GAAGA,IAAiBP,KAKV,QAA3BV,EAAMQ,SAASa,UACe,QAA9BrB,EAAMQ,SAASc,cAGfL,EAAiB,GAAG3D,EAAeiE,OAAOb,KAG7Cd,EAAUmB,EAAWT,SAAS,CAG3B7B,IAAKuB,EAAMvB,IAEXyC,WAAYD,EACZzF,MAAO8B,EAAe9B,MAEtBgF,SAAU,CACPC,SAAUT,EAAMQ,SAASC,SAEzBM,WAAYf,EAAMX,OAAOnG,GACzBmI,SAAUrB,EAAMQ,SAASc,YACzBA,YAAatB,EAAMQ,SAASa,SAC5BG,WAAYxB,EAAMQ,SAASgB,WAC3BC,WAAYzB,EAAMQ,SAASiB,WAC3BC,YAAa1B,EAAMQ,SAASkB,YAC5BZ,SAAU,EACV1F,MAAOA,IAMhB,CACH,CAiCA,IAAIuG,EAAY3B,EAAML,UACtB,GAAIgC,EAAUC,OACXD,EAAUE,WAAW9D,GAAG2B,EAAO5E,GAAG5B,KAI9B+G,GACDD,EAAMK,WAAWJ,GAGpBlC,GAAGxD,EAAIK,YAAYkH,SACnB/D,GAAGxD,EAAIC,WAAWuH,oBAElB,UACS/B,EAAMgC,OAEZ,IAAIC,EAAoB,KACrBlE,GAAGxD,EAAIK,YAAYkH,SACnB/D,GAAGxD,EAAIC,WAAWuH,eAClB1E,EAAeiC,QACf1D,EAAOmD,OACPnD,EAAOgC,UAAUsE,OAAOlC,EAAM,EAG7BmC,EAAgB,KAEjBvC,EAAQP,OAAO+C,QAAQtD,UAIvBkB,EAAMX,OAAO+C,QAAQtD,SAAS,EAIlB,MAAXc,GACDA,EAAQY,SAAS6B,WAAarC,EAAM9G,SAC9B0G,EAAQoC,OAGdhC,EAAMQ,SAAS6B,WAAazC,EAAQ1G,SAC9B8G,EAAMgC,OAGPvE,UACIuC,EAAMsC,sBACN1C,EAAQ0C,iBAGjBH,IACAF,KAEAA,GA6BN,CA3BE,MAAOM,GA2BT,CAEN,MACGxE,GAAGxD,EAAIK,YAAYkH,SACnB/D,GAAGxD,EAAIC,WAAWuH,oBAGrB1H,KAAK8B,GAAGqG,OAAOC,UACZ,IAAIlJ,MAAM,sCACV,CAAC,GAGJwE,GAAGxD,EAAIK,YAAYkH,SACnB/D,GAAGxD,EAAIC,WAAWuH,cAgCxB,EAEAnE,UAAW,CACR8E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAV,OAAQ,SAAUlC,GACf2C,QAAQC,KAAK,eAChB,GAGH7D,KAAM,WACHhB,GAAGxD,EAAIC,WAAWuE,MACrB,EAEA8D,QAAS,SAAUC,GAQhB,GANAvF,EAAuByB,MAAK,GAAO,GACnC3B,EAAiBE,EAGbD,EAAeyF,aAAYD,EAAgB,iBAE3CA,EAAe,CAChB,IAAIE,EAAejJ,EAAemE,YAAY+E,QAC1C7B,GAAMA,EAAE5C,WAAWC,KAAOqE,IAC5B,GACF,IAAKE,EAAc,OACnB,IAAIE,EAAkBF,EAAaxE,WAAWD,SAC9CR,GAAGxD,EAAIG,OAAOuE,SAASiE,GACvBnF,GAAGxD,EAAIG,OAAO8E,SACjB,MAGGzB,GAAGxD,EAAIG,OAAOoH,SAGjB/D,GAAGxD,EAAIG,OAAOsE,OAGdjB,GAAGxD,EAAIK,YAAYiE,OAAO,QAASzE,EAAE,eACrC2D,GAAGxD,EAAIK,YAAYkE,SACtB,EAEAqE,SAAU,SAAUnD,GAKjB,IAAK,IAAIrC,KAJLN,GAAgBA,EAAe0B,OAIrB3B,EACPO,GAAKqC,EAAMvB,KACZrB,EAAkBO,GAAGqB,MAAK,GAAO,GACjC5B,EAAkBO,GAAGyF,SAASpD,GAC9B3C,EAAiBD,EAAkBO,IAEnCP,EAAkBO,GAAGoB,OAK3B,GACG1B,GACAA,EAAevC,IACfuC,EAAevC,GAAGuI,SACnB,CACC,IAAIC,EAAeC,IACZA,EAAKC,cAAgBzF,GAAGwF,EAAKrK,KAAO6E,GAAGwF,EAAKrK,IAAIsG,SACjDzB,GAAGwF,EAAKrK,IAAIsG,SACf,EAGHnC,EAAevC,GAAGuI,SAAShF,SAASkF,IACjCD,EAAYC,GAGZ,IAAIE,EAAaF,EAAKhI,MAAQgI,EAAKtH,KAC/BwH,GAAcA,EAAWpF,SAC1BoF,EAAWpF,SAASqF,IACjBJ,EAAYI,EAAU,GAE5B,GAEN,CAGA3F,GAAGxD,EAAIG,OAAOqE,OAGdhB,GAAGxD,EAAIK,YAAYiE,OAAO,QAASzE,EAAE,SACrC2D,GAAGxD,EAAIK,YAAYkE,SACtB,EAQArC,SAAU,SAAU8E,GAGjB,IAAI7B,EAASvC,EAAeoE,GACxB7B,IACDA,EAAOV,OACP3B,EAAiBqC,EACjB3B,GAAGxD,EAAIG,OAAOiJ,OAMpB,EAEA1G,WAAY,WAET,GACGI,GACAA,EAAevC,IACfuC,EAAevC,GAAGuI,SACnB,CACC,IAAIO,EAAcL,IACXA,EAAKC,cAAgBzF,GAAGwF,EAAKrK,KAAO6E,GAAGwF,EAAKrK,IAAI4I,QACjD/D,GAAGwF,EAAKrK,IAAI4I,QACf,EAGHzE,EAAevC,GAAGuI,SAAShF,SAASkF,IACjCK,EAAWL,GAGX,IAAIE,EAAaF,EAAKhI,MAAQgI,EAAKtH,KAC/BwH,GAAcA,EAAWpF,SAC1BoF,EAAWpF,SAASqF,IACjBE,EAAWF,EAAU,GAE3B,GAEN,CAEAnG,EAAuByB,OACvB3B,EAAiBE,EAGjBQ,GAAGxD,EAAIG,OAAOuE,SAASzB,EAAS,GAAGtE,GACtC,EAUA8F,KAAM,SAAUgB,EAAO6D,IACpBpG,EAAauC,GAGVpE,EAAOuH,SAASnD,GAEhBpE,EAAOiH,QAAQgB,GAGlB9F,GAAGxD,EAAIC,WAAWwE,MACrB,EAEA8E,UAAW,WAKR,IAAIC,EAAYhG,GAAGxD,EAAIG,OAAO2B,OAAO2H,KAAK,GAAGC,QAIrB,iBAAbF,IACRhG,GAAGxD,EAAIG,OAAOwJ,WAAWnG,GAAGxD,EAAIG,OAAO2B,OAAO2H,KAAK,GAAG9K,IACtD6K,EAAYhG,GAAGxD,EAAIG,OAAO2B,OAAO2H,KAAK,GAAGC,SAGxClG,GAAGgG,IAAYhG,GAAGgG,GAAW/E,MACpC,GAIH3E,KAAK8J,QAAQ,CAAC,GAKd9J,KAAK6E,gBAAkBtD,EAAOsD,gBAC9B7E,KAAK+E,WAAaxD,EAAOwD,WACzB/E,KAAK2E,KAAOpD,EAAOoD,IACtB,oBC/rBH,MAAMlF,EAAc,EAAQ,OAE5BF,EAAOC,QAAU,cAAuDC,EAGrEE,YAAYC,EAAKC,GAGdC,MAAMF,EAFNC,EAASA,GAAU,4CAGnB,IAAIE,EAAIC,KAAKC,QAGTC,EAAM,CACPC,UAAWH,KAAKI,OAAO,GAAGP,eAC1BkK,KAAM/J,KAAKI,OAAO,GAAGP,oBACrBmK,KAAMhK,KAAKI,OAAO,GAAGP,qBAIpBoK,EAAS,CACVvJ,KAAM,OACN7B,GAAIqB,EAAI8J,KAERtI,YAAY,EACZsH,SAAU,CACP,CACGtI,KAAM,SACNiB,KAAM,OACNV,IAAK,gBACLyB,MAAO3C,EAAE,gBACToC,GAAI,CACD+H,YAAa,SAAUrL,EAAII,EAAGqD,GAC3Bf,EAAO4I,kBACP5I,EAAO6I,iBACV,MAMZpK,KAAKS,GAAK,CACPC,KAAM,QACN7B,GAAIqB,EAAIC,UAERY,MAAO,IACPS,KAAMyI,EACN9H,GAAI,CACDkI,OAAQ,WACL9I,EAAO8I,QACV,IAKNrK,KAAKqD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDE,MAAM/C,GAAGT,KAAKS,GAAG,EAGpB,IAAI6J,EAAgB,KAGpB,IAAI/I,EAAUvB,KAAKuB,OAAS,CACzBgC,UAAW,CASRnB,SAAU,WAAa,GAQ1B+H,gBAAiB,SAAUI,EAASC,GACjC,IAAIC,EAAY/G,GAAGxD,EAAI8J,MAEnBU,EAAYD,EAAUE,gBAAgBzE,OAAS,EAC/C0E,EAAarJ,EAAOsJ,cAAa,GACrCJ,EAAUK,QACP,CACGjM,GAAI,OAAS2E,MAAMuH,MACnB7J,KAAM,CACH,CACGR,KAAM,QACNK,MAAO,IACPmB,QAAS0I,EACTzI,GAAI,CACDC,SAAU,SAAU4I,GAEjBzJ,EAAO0J,cAAcD,EADZhL,KAEZ,IAGN,CACGU,KAAM,YACNK,MAAO,IACPmB,QAAS,CACN,CACGrD,GAAI,GACJ6D,MAAO3C,EAAE,yBAGfoC,GAAI,CACDC,SAAU,SAAU8I,EAAMC,GAEvB5J,EAAO6I,iBACV,IAGN,CACG1J,KAAM,SACNO,IAAK,eACLmK,KAAM,cACNzJ,KAAM,OACNZ,MAAO,GACPoB,GAAI,CACD+H,YAAa,WACVO,EAAUY,WAAWrL,KAAKsL,iBAC1B/J,EAAOgK,kBAAiB,GACxBhK,EAAO6I,iBACV,MAKZM,GAICH,GACiBE,EACdE,gBACAD,GAAWC,gBAAgB,GACnB/F,SAAS2F,GAEpBC,GACmBC,EAChBE,gBACAD,GAAWC,gBAAgB,GACjB/F,SAAS4F,EAM7B,EAMAK,aAAc,SAAUW,GACJ9H,GAAGxD,EAAIC,WAAxB,IACGsK,EAAY/G,GAAGxD,EAAI8J,MACnBY,EAAa,GAEhB,IAAKN,EAAcxD,SAAU,OAAO8D,EAcpC,GAXgBN,EAAcxD,SACpB9C,SAAS+C,IACZA,EAAE0E,mBACHb,EAAWvG,KAAK,CACbxF,GAAIkI,EAAElI,GACN6D,MAAOqE,EAAE5F,OAEf,IAICqK,EAAiB,CAClB,IAAIE,EAAajB,EAAUE,gBACvBe,EAAWxF,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,GAAIF,EAAWxF,OAAS,GAAK0F,EAAO,OAAO,EAE3C,IAAIC,EAAgBF,EAAMhB,gBAAgB,GAAGmB,WAC7C,GAAID,EAAe,CAChB,IAAIE,EAAc,KACDnB,EAAWhC,QAAO,SAAU7B,EAAG6E,GAC7C,OAAI7E,EAAElI,IAAMgN,IACTE,EAAcH,GACP,EAIb,IAUAhB,EAAWoB,OAAOD,EAAa,EAClC,CACH,GAEN,CACA,OAAOnB,CACV,EAOA7F,WAAY,SAAUC,GACnBsF,EAAgBtF,CACnB,EAYAiH,YAAc9F,IACXnG,KAAKkM,UAAYlM,KAAK8B,GAAG2D,UAAUU,EAAS,EAa/CgG,YAAa,WACV,IAAI1B,EAAY/G,GAAGxD,EAAI8J,MACpBoC,EAAa,GAEZV,EAAajB,EAAUE,gBAiB3B,OAhBIe,EAAWxF,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,GAAIF,EAAWxF,OAAS,GAAK0F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WACnCM,EAAW/H,KAAK,CAEbD,IAAKmG,EACLC,IAAKA,GAGX,IAGI4B,CACV,EAEAnB,cAAe,SAAUD,EAAUqB,GAChC,IAAIxI,EAAYyG,EAAcxD,SAC1BwF,EAAe,GAChBC,EAAUF,EAAGf,gBAAgBX,gBAAgB,GAG7CzI,EAAU,KAQb,GANA2B,EAAUG,SAAS+C,IACZA,EAAElI,IAAMmM,IACTsB,EAAevF,EAClB,IAGEuF,EAAL,CAEA,OAAQA,EAAalI,KAClB,IAAK,SAkBL,QACGlC,EAAU,CACP,CAAErD,GAAI,MAAO6D,MAAO3C,EAAE,WACtB,CAAElB,GAAI,OAAQ6D,MAAO3C,EAAE,YAE1B,MAjBH,IAAK,OACFmC,EAAU,CACP,CAAErD,GAAI,MAAO6D,MAAO3C,EAAE,oBACtB,CAAElB,GAAI,OAAQ6D,MAAO3C,EAAE,qBAE1B,MACH,IAAK,SACFmC,EAAU,CACP,CAAErD,GAAI,MAAO6D,MAAO3C,EAAE,WACtB,CAAElB,GAAI,OAAQ6D,MAAO3C,EAAE,YAWhCwM,EAAQ/H,OAAO,UAAWtC,GAC1BqK,EAAQ9H,UAORlD,EAAOgK,mBAEPhK,EAAO6I,iBAvCkB,CAwC5B,EAOAC,OAAQ,KACL,IAAII,EAAY/G,GAAGxD,EAAI8J,MAGvBxG,MAAM/C,GAAGwJ,EAAQQ,GAQjB,IAAI+B,EAAQxM,KAAKkM,UACbM,GAASA,EAAMxI,SAChBwI,EAAMxI,SAASyI,IACZlL,EAAO4I,gBAAgBsC,EAAErI,IAAKqI,EAAEjC,IAAI,IAI7B,MAATgC,GAAiC,GAAhBA,EAAMtG,QACxB3E,EAAO4I,iBACV,EAOHoB,iBAAkB,SAAUmB,GACzB,IAAIjC,EAAY/G,GAAGxD,EAAI8J,MACpBY,EAAarJ,EAAOsJ,cAAa,GACjC8B,EAAiB,GACjBC,EAAmB,GAElBlB,EAAajB,EAAUE,gBACvBe,EAAWxF,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,GAAIF,EAAWxF,OAAS,GAAK0F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWhC,QAAO,SAAU7B,GACpC,OAAOA,EAAElI,IAAM0L,CAClB,IAECsC,EAAS3G,OAAS,EAEnByG,EAAetI,KAAKwI,EAAS,IAG7BD,EAAiBvI,KAAKsH,EAE5B,IAIEe,GACFE,EAAiB5I,SAAQ,SAAU2H,EAAOC,GACvCnB,EAAUY,WAAWM,EACxB,KAIHD,EAAajB,EAAUE,iBACRzE,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,GAAIF,EAAWxF,OAAS,GAAK0F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWhC,QAAO,SAAU7B,GACpC,OAAOA,EAAElI,IAAM0L,CAClB,IAGCuC,EAAgCH,EAAe/D,QAChD,SAAUmE,GACP,OACGC,MAAMC,QAAQJ,KACW,IAAzBA,EAASK,QAAQH,EAKvB,IAICI,EAAevC,EAAWhC,QAAO,SAAUmE,GAC5C,OACGC,MAAMC,QAAQH,KACgC,IAA9CA,EAA8BI,QAAQH,EAK5C,IAGApB,EAAMhB,gBAAgB,GAAGnG,OAAO,UAAW2I,GAC3CxB,EAAMhB,gBAAgB,GAAGlG,SAC5B,GAEN,EAMA2F,gBAAiB,KAEVpK,KAAKoN,iBAETpN,KAAKkM,UAAY3K,EAAO4K,cAExB5K,EAAOgC,UAAUnB,SAASpC,KAAKkM,WAAU,EAmB5CmB,cAAe,KACZrN,KAAKoN,gBAAiB,CAAI,EAG7BE,gBAAiB,KACdtN,KAAKoN,gBAAiB,CAAK,EAU9BzI,KAAM,CAAC4I,EAAOhD,EAASrI,KACpBX,EAAO8L,gBAEP3J,GAAGxD,EAAIC,WAAWwE,KAAK4I,EAAOrL,GAAW,MAErCqI,GACDhJ,EAAO4I,gBAAgBI,GAG1BhJ,EAAO+L,iBAAiB,EAU3BE,KAAM,SAAUC,EAAGC,GAChB,IAAIC,EAAS,EAETjC,EAAahI,GAAGxD,EAAI8J,MAAMW,gBA2C9B,OA1CIe,EAAWxF,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,KAAIF,EAAWxF,OAAS,GAAK0F,GAAmB,GAAV+B,GAAtC,CAEA,IAAIpD,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WAE/BnG,EAAQ2E,EAAcsD,UAAUrD,GACpC,GAAK5E,EAAL,CAEA,IAAIkI,EAAKlI,EAAMkB,WAEXiH,EAASL,EAAEI,GACZE,EAASL,EAAEG,GAEVb,MAAMC,QAAQa,KACfA,GAAUA,GAAU,IAChBpP,KAAI,SAAUsP,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRlB,MAAMC,QAAQc,KACfA,GAAUA,GAAU,IAChBrP,KAAI,SAAUsP,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRJ,GAAUC,IAERJ,EADQ,OAAPnD,EACQsD,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,EA3BpB,CANuC,CAoC5D,IAGIJ,CACV,GAIH3N,KAAK8J,QAAQ,CAAC,GAKd9J,KAAK+E,WAAaxD,EAAOwD,WACzB/E,KAAK2E,KAAOpD,EAAOoD,KACnB3E,KAAKwN,KAAOjM,EAAOiM,KAEnBxN,KAAK4E,SAAWrD,EAAO0K,YACvBjM,KAAK8L,SAAWvK,EAAO4K,WAC1B,+LC7jBCgC,EAAe,qBAyHnB,YAvHA,cAAsBA,EACnBxO,cACGG,QAEAE,KAAKoO,iBAAkB,EACvBpO,KAAKqO,QAAU,KAEfrO,KAAKsO,WAAa,KAIlBtO,KAAKuO,YAAc,KAInBvO,KAAKwO,WAAa,IAGrB,CAEAnL,KAAKvB,GAGF9B,KAAK8B,GAAKA,EACV,IAAI2M,EAAazO,KAAK8B,GAAG4M,OAAOC,aAC5BF,IACDzO,KAAKoO,iBAAkB,EACvBpO,KAAKqO,QAAUI,GAGlB,IAAIG,EAAa5O,KAAK8B,GAAG4M,OAAOG,aAehC,OAdID,IACD5O,KAAKsO,WAAaM,EAAWE,OAAS,GACtC9O,KAAKuO,YAAcK,EAAWG,QAAU,GACxC/O,KAAKwO,WAAaI,EAAWI,OAAS,IAGzChP,KAAK8B,GAAGmN,QAAQ9M,GAAG,kBAAkB,CAAC+M,EAAShH,EAAKyB,KAC7CzB,EACDI,QAAQ6G,MAAMjH,GAGjBlI,KAAKoP,KAAK,SAAUzF,EAAK,IAGrB0F,QAAQ/P,SAClB,CAEAgQ,gBACG,OACGtP,KAAK8O,OAAOS,GAAiB,yCAAXA,EAAEC,OAChBtJ,OAAS,CAEnB,CAEAuJ,gBACG,OAAOzP,KAAK8B,GAAG4M,OAAOgB,UACzB,CAEAC,mBACG,OACG3P,KAAK8O,OAAOS,GAAiB,yCAAXA,EAAEC,OAChBtJ,OAAS,CAEnB,CAEA0J,QACG,OAAO5P,KAAKqO,SAASuB,OAAS,EACjC,CAEAC,WACG,OAAO7P,KAAKqO,SAASyB,cAAgB,IACxC,CAEAC,SACG,OAAO/P,KAAK8B,GAAGmN,QAAQe,KACpB,CACGC,IAAK,eACLtG,KAAM,CAAEuG,UAAWlQ,KAAK8B,GAAGqO,OAAOC,QAAQ,SAE7C,CACGhM,IAAK,iBACL8K,QAAS,CAAC,GAGnB,CAEAJ,MAAMuB,EAAK,MAAM,IACd,OAAQrQ,KAAKqO,SAASS,OAAS,IAAIlG,OAAOyH,EAC7C,CACAC,WACG,OAAOtQ,KAAKsO,UACf,CAEAS,SACG,OAAO/O,KAAKuO,WACf,CAEAgC,WACG,OAAOvQ,KAAKqO,SAASkC,QACxB,CAEAC,WACG,OAAOxQ,KAAKwO,UACf,CAEAgB,OACG,OAAOxP,KAAKqO,SAASmB,IACxB,CAEAiB,UACG,OAAOzQ,KAAKqO,SAASqC,QACxB,CAEAC,yBACG,OAAO3Q,KAAKqO,SAASsC,sBACxB,kBC9GH,SAKGC,MAAO,SAAUC,GACdrN,MAAMsN,MAAM,CACTC,MACGF,EAAKE,OACLjP,GAAGkP,aAAa7P,MAAM,yBAA0B,UACnD8M,KACG4C,EAAK5C,MACL4C,EAAKI,SACLnP,GAAGkP,aAAa7P,MACb,wBACA,wBAEN+P,GAAIL,EAAKK,IAAMpP,GAAGkP,aAAa7P,MAAM,sBAAuB,QAElE,EAIAgQ,QAAS,SAAUN,GAChB,IAAIE,EACDF,EAAKE,OACLjP,GAAGkP,aAAa7P,MAAM,kCAAmC,aACxD8P,EACDJ,EAAK5C,MACL4C,EAAKI,SACLnP,GAAGkP,aAAa7P,MACb,gCACA,uCAGFiQ,EACDP,EAAKO,UACLP,EAAKK,IACLpP,GAAGkP,aAAa7P,MAAM,iBAAkB,SACvCkQ,EACDR,EAAKQ,SACLR,EAAKS,QACLxP,GAAGkP,aAAa7P,MAAM,gBAAiB,QAK1CqC,MAAM+N,QAAQ,CACXR,MAAOA,EACP9C,KAAMgD,EAENC,GAAIE,EACJE,OAAQD,EAERG,SAAU,SAAU7D,GACbA,EACGkD,EAAKY,OAAOZ,EAAKY,QAEjBZ,EAAKa,MAAMb,EAAKa,OAGnBb,EAAKW,UAAUX,EAAKW,SAAS7D,EACpC,GAmBN,EAKAgE,cAAe,SAAUd,GACtB7Q,KAAKmR,QAAQ,CACVJ,MACGF,EAAKE,OACLjP,GAAGkP,aAAa7P,MACb,iCACA,oBAEN+P,GAAIL,EAAKK,IAAMpP,GAAGkP,aAAa7P,MAAM,oBAAqB,YAC1DmQ,OACGT,EAAKS,QACLxP,GAAGkP,aAAa7P,MAAM,oBAAqB,YAC9C8M,KACG4C,EAAK5C,MACL4C,EAAKI,SACLnP,GAAGkP,aAAa7P,MACb,+BACA,0CACA,CAAC,SAEPqQ,SAAU,SAAU7D,GACbA,EACGkD,EAAKY,OAAOZ,EAAKY,QAEjBZ,EAAKa,MAAMb,EAAKa,OAGnBb,EAAKW,UAAUX,EAAKW,SAAS7D,EACpC,GAEN,EAIAiE,QAAS,SAAUf,GAChB,IAAII,EAAUJ,EAAK5C,MAAQ4C,EAAKI,QAC5BY,EAAUhB,EAAKgB,SAAW,IAE9BrO,MAAMyN,QAAQ,CACXhD,KAAMgD,EACNa,OAAQD,GAEd,GCnIH,IAAIE,EAAU,EAAQ,OA8LtB,YA5LA,cAA2BA,EACxBpS,cACGG,MAAM,GAAI,CAAC,GAKXE,KAAKoO,iBAAkB,EACvBpO,KAAKqO,QAAU,KAEfrO,KAAKgS,iBAAkB,EACvBhS,KAAKiS,eAAiB,CAAC,EACvBjS,KAAKkS,qBAAuB,CAAC,CAChC,CAEA7O,KAAKvB,GAWF,OARA9B,KAAK8B,GAAKA,EAEV9B,KAAKmS,OAASnS,KAAK8B,GAAG4M,OAAO0D,cAC7BpS,KAAKqS,WAAarS,KAAK8B,GAAG4M,OAAO4D,iBAEjCtS,KAAKuS,aAAe,CAAC,EAGdlD,QAAQ/P,SAClB,CAEAkT,kBACG,OAAOxS,KAAK8B,GAAG2Q,QAAQ5C,UAC1B,CAEA1O,MAAMiD,EAAKsO,EAAShN,EAAS,GAAIiN,GAAc,QAEtB,IAAXD,GAA0BtO,IAClCsO,EAAUtO,GAIW,GAApBwO,UAAU1M,QAAe8G,MAAMC,QAAQyF,KACxChN,EAASgN,EACTA,EAAUtO,GAKbsO,EAAUA,EAAQG,QAAQ,KAAM,OAChCzO,EAAMA,EAAIyO,QAAQ,KAAM,OAYxB,IAAIC,EAASJ,EACI,KAAbI,EAAO,KACRA,EAASA,EAAOC,MAAM,IAEzB,IAAI5R,EAAQnB,KAAKmS,OAAOW,GAaxB,OAZK3R,IACEwR,GACD3S,KAAKgT,iBAAiB5O,EAAKsO,GAE9BvR,EAAQuR,GAGXhN,EAAO1B,SAAQ,CAACiP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACd/R,EAAQA,EAAMiS,WAAWD,EAAKF,EAAE,IAEnC9R,EAAQA,EAAM0R,QAAQ,OAAQ,IAEjC,CAEAQ,YAAYC,EAAQZ,EAAShN,EAAS,IAEnC,IAAIvE,EAAQnB,KAAKmB,MAAMuR,EAASA,EAAShN,GAAQ,GAgBjD,OAfKvE,IAEFA,EAAQnB,KAAKuS,aAAae,GAAQZ,IAEhCvR,IAEFnB,KAAKkS,qBAAqBoB,GACvBtT,KAAKkS,qBAAqBoB,IAAW,CAAC,EACzCtT,KAAKkS,qBAAqBoB,GAAQZ,GAAWA,EAC7CvR,EAAQuR,GAEXhN,EAAO1B,SAAQ,CAACiP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACd/R,EAAQA,EAAMiS,WAAWD,EAAKF,EAAE,IAE5B9R,CACV,CAEAoS,YACG,OAAOvT,KAAKqS,UAMf,CAEAmB,iBAAiBpP,EAAK+N,GACnBnS,KAAKuS,aAAanO,GAAO+N,CAC5B,CACAsB,kBAAkBrP,GACfkE,QAAQC,KAAK,8BAA+BnE,GAC5CkE,QAAQC,KAAK,oBAAqBvI,KAAKwS,mBACvC,IAAIL,EAASuB,KAAKC,UAAU3T,KAAKkS,qBAAqB9N,GAAM,KAAM,GAClEkE,QAAQC,KAAK4J,EAChB,CAEAa,iBAAiB5O,EAAKsO,GACf1S,KAAKgS,iBACN4B,aAAa5T,KAAKgS,iBAErB,IACI6B,EAAY,KACb,IAAIC,EAAc,GAClB,IAAIC,EAAgB1U,OAAOD,KAAKY,KAAKiS,gBAAgBvT,KACjDsV,GAAMhU,KAAKiS,eAAe+B,KAE9B,GAAID,EAAc7N,QANH,GAOZ4N,EAAcC,EACd/T,KAAKiS,eAAiB,CAAC,OAEvB,IAAK,IAAIiB,EAAI,EAAGA,GAVJ,GAUsBA,IAAK,CACpC,IAAIe,EAAIF,EAAcG,QACtBJ,EAAYzP,KAAK4P,UACVjU,KAAKiS,eAAegC,EAAE7P,IAChC,CAEHpE,KAAK8B,GAAGmN,QAAQe,KAAK,CAClBC,IAAK,8BACLtG,KAAM,CAAEwI,OAAQuB,KAAKC,UAAUG,MAE9BK,MAAK,KACC9U,OAAOD,KAAKY,KAAKiS,gBAAgB/L,OAAS,GAC3C2N,GACH,IAEFO,OAAOlM,IACUA,EAAImM,WACRnH,QAAQ,kBAAoB,GACpC5E,QAAQ6G,MACL,8BAAgCnP,KAAKwS,kBAE3C,GACD,EAERxS,KAAKgS,gBAAkBsC,YAAW,KAC/BT,GAAW,GACX,KAEH7T,KAAKiS,eAAe7N,GAAO,CAAEA,MAAKsO,UACrC,CAOA6B,UAEG,OADAjM,QAAQ6G,MAAM,iDACPE,QAAQ/P,SAClB,CACAqI,OAEG,OADAW,QAAQ6G,MAAM,8CACPE,QAAQ/P,SAClB,CACAuG,QAEG,OADAyC,QAAQ6G,MAAM,+CACP,CAAC,CACX,CACAqF,eAEG,OADAlM,QAAQ6G,MAAM,sDACP,CAAC,CACX,GCtLH,IAAI,EAAe,qBAWnB,MAAMsF,EAAS,EAAQ,MAGvB,IAAI,EAAS,KAsWb,QAlWA,cAA0B,EACvB9U,YAAY+U,GAGT5U,MAAM,CACH6U,UAAU,EACVC,aAAa,EACbC,aAAc,IAGjB7U,KAAK8U,QAAU,KAIf9U,KAAK+U,WAAa,EAIlB/U,KAAKgV,SAAWN,EAKhB1U,KAAKiV,YAAa,CAGrB,CASA5R,KAAKvB,EAAII,GAUN,OATAlC,KAAK8B,GAAKA,EAEV,EAAS9B,KAAK8B,GAAG4M,OAAOwG,cACxBhT,EAAUA,GAAW,CAAC,KAEnBlC,KAAK8U,QAAU5S,EAAQ4S,SAAW,EAAOK,WAAWC,cACpDpV,KAAK+U,WACF7S,EAAQmT,mBAAqB,EAAOF,WAAWE,mBAE9ChG,QAAQ/P,SAClB,CAiBAgW,IAAIC,EAAQC,GACTD,EAAO5T,KAAO4T,EAAO5T,MAAQ,MAI7B,IAAIgI,EAAO4L,EAAO5L,MAAQ4L,EAAOA,OACjC,GAAI5L,EAAM,CACP,IAAI8L,EAAW,CAAC,SAAU,SAAU,WAChCC,EAASrW,OAAOD,KAAKuK,GACrBjL,KAAI,SAAU0F,GACZ,IAAIuR,EAAMhM,EAAKvF,GAIf,OAHqC,GAAjCqR,EAASvI,eAAeyI,KACzBA,EAAMjC,KAAKC,UAAUgC,IAEjBvR,EAAM,IAAMwR,mBAAmBD,EACzC,IACCzH,KAAK,KAELA,EAAO,IACPqH,EAAOtF,IAAI/C,QAAQ,MAAQ,IAC5BgB,EAAO,KAEVqH,EAAOtF,IAAM,CAACsF,EAAOtF,IAAKyF,GAAQxH,KAAKA,EAC1C,CAEA,OAAOlO,KAAK6V,SAASN,EAAQC,EAChC,CAcAxF,KAAKuF,EAAQC,GAEV,OADAD,EAAO5T,KAAO4T,EAAO5T,MAAQ,OACtB3B,KAAK6V,SAASN,EAAQC,EAChC,CAcAM,IAAIP,EAAQC,GAET,OADAD,EAAO5T,KAAO4T,EAAO5T,MAAQ,MACtB3B,KAAK6V,SAASN,EAAQC,EAChC,CAcAO,OAAOR,EAAQC,GAEZ,OADAD,EAAO5T,KAAO4T,EAAO5T,MAAQ,SACtB3B,KAAK6V,SAASN,EAAQC,EAChC,CAMAQ,qBACG,OAAOhW,KAAKgV,SAASgB,oBACxB,CAEAC,QAAQV,GACL,OAAOd,EAAOc,EAAOtF,IAAKsF,GAAQpB,MAAM+B,GAK9BA,EAAOvM,MAEpB,CASAkM,SAASN,EAAQC,GAGd,GADAD,EAAOY,OAASZ,EAAOY,QAAU,EAC7BZ,EAAOY,QAAUnW,KAAK+U,WAAY,CACnC,IAAI7M,EAAM,IAAIhJ,MACX,qBAAqBc,KAAK+U,mBAAmBQ,EAAOtF,OAWvD,OATA/H,EAAI/I,KAAO,kBACXa,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,2CAGRsG,GACDxV,KAAKgV,SAASoB,gBAAgBZ,EAAatN,GAGvCmH,QAAQgH,OAAOnO,EACzB,CAEA,OAAO,IAAImH,SAAQ,CAAC/P,EAAS+W,KAC1Bd,EAAOtF,IAAMsF,EAAOtF,KAAO,IACN,KAAjBsF,EAAOtF,IAAI,KACZsF,EAAOtF,IAAMjQ,KAAK8U,QAAUS,EAAOtF,KAGtCsF,EAAOe,QAAUf,EAAOe,SAAW,CAAC,EAChCtW,KAAK8B,GAAG2Q,QAAQ8D,YACjBhB,EAAOe,QAAQE,cAAgBxW,KAAK8B,GAAG2Q,QAAQ8D,WAElDhB,EAAOe,QAAQ,gBAAkB,mBAEjC,IAAIG,EAAWzW,KAAK8B,GAAGqO,OAAOtR,KAC1B4X,IACDlB,EAAOe,QAAQ,gBAAkBG,GAKhCzW,KAAKgW,sBACNT,EAAOmB,OAASnB,EAAOmB,QAAUnB,EAAO5T,KACxC4T,EAAO1D,QAAU,IACjB0D,EAAO5L,KAAO4L,EAAO5L,MAAQ4L,EAAOA,cAC7BA,EAAOA,OAEdvV,KAAKiW,QAAQV,GACTpB,MAAM+B,IAKJ,IAAIvM,EAAOuM,EACPV,GACDxV,KAAKgV,SAASoB,gBAAgBZ,EAAa,KAAM7L,GAEpDrK,EAAQqK,EAAK,IAEfyK,OAAOlM,IAQL,GACqB,mBAAlBA,EAAIyO,YACHzO,EAAI+I,SAAW/I,EAAI+I,QAAQ/D,QAAQ,iBAAmB,EA0BvD,OAvBAlN,KAAK8B,GAAG8U,UAAUC,IACf,0EAGHtB,EAAOY,cAGPnW,KAAK6V,SAASN,GACVpB,MAAMxK,IAEJ3J,KAAK8B,GAAGyG,KACL,wDAEHjJ,EAAQqK,EAAK,IAEfyK,OAAO0C,IACL9W,KAAK8B,GAAGqG,OAAOC,UAAU0O,EAAM,CAC5B7F,QACG,sDAENoF,EAAOS,EAAK,IAOA,KAAd5O,EAAI6O,OACL/W,KAAKoP,KAAK,gBAAiBlH,GACnBA,EAAI6O,QAAU,KAAO7O,EAAI6O,OAAS,IAC1C/W,KAAKoP,KAAK,mBAAoBlH,GACtBA,EAAI6O,QAAU,KACtB/W,KAAKoP,KAAK,kBAAmBlH,GAInC,IAAIgO,EAAS,KACb,GAAIhO,EAAI8O,aACL,IACGd,EAASxC,KAAKuD,MAAM/O,EAAI8O,aACd,CAAX,MAAO/X,GAAI,CAGhB,GAAIiX,GAA2B,SAAjBA,EAAOa,OAElB,OAAiB,GAAbb,EAAOrX,IAA0B,YAAfqX,EAAO/W,UAC1Ba,KAAKgV,SAAS5F,KAAK,WAItBpP,KAAK8B,GAAGqG,OAAOC,UAAU,IAAIlJ,MAAMgX,EAAOjF,SAAU,CACjD/B,QACG,mEACHvF,KAAMuM,EAAOvM,KACboN,OAAQb,EAAOa,SAIdvB,GACDxV,KAAKgV,SAASoB,gBACXZ,EACAU,EACA,MAGCG,EAAOH,EAAOvM,OAGrB,IAAIwF,EAAQ,IAAIjQ,MACb,GAAGgJ,EAAI6O,UAAU7O,EAAIyO,YAAczO,EAAI+I,YACpCsE,EAAOmB,UACNnB,EAAOtF,OAed,OAbAd,EAAM+H,SAAWhP,EAAI8O,aACrB7H,EAAMlB,KAAO/F,EAAIyO,WACjBxH,EAAMjH,IAAMA,EACZiH,EAAMc,IAAM,GAAGsF,EAAOmB,UAAUnB,EAAOtF,MACvCjQ,KAAK8B,GAAGqG,OAAOC,UAAU+G,EAAO,CAC7BD,QACG,4DAIFsG,GACDxV,KAAKgV,SAASoB,gBAAgBZ,EAAarG,GAEvCkH,EAAOlH,EACjB,MAINnP,KAAK8B,GAAG8U,UAAUC,IACf,gEAEH7W,KAAKgV,SACDmC,MAAM5B,EAAQC,GACdrB,MAAK,KACH7U,EAAQ,CAAEyX,OAAQ,UAAW,IAE/B3C,MAAMiC,GACb,GAEN,CAUAe,OAAO7B,EAAQC,GAEZ,OAAOxV,KAAK6V,SAASN,EAAQC,EAChC,GClXG6B,EAAmB,CAMtB,2BACA,2BACA,0BACA,2BACA,kBACA,mBAiJH,EA1IA,cAAgC,EAC7B1X,YAAY+U,GAGT5U,MAAM4U,GAEN1U,KAAKiV,YAAa,EAKlBoC,EAAiBrT,SAAS3B,IACvBiV,GAAGC,OAAOpV,GAAGE,GAAKsH,IAIf,GAAItH,EAAG6K,QAAQ,sBAAwB,GACvBvD,EAAKA,KACN,CACT,IAAI6N,EAAMxX,KAAK8B,GAAG2V,WAAW9N,EAAK+N,UAClC,GAAIF,EAAK,CACN,IAAIzP,EAAQyP,EAAIzP,QAChB,GAAU,4BAAN1F,EAAkC,CACnC,IAAIsV,EAAQ3X,KAAK8B,GAAG6V,QACpBC,EAAA,OAAiB,GAAGvV,kBAAoB,CACrCwV,GAAI,WACJlO,KAAM,CAAEgO,WAEX5P,EAAM+P,cAAcnO,EAAKA,MACzBiO,EAAA,UAAoB,GAAGvV,kBAC1B,CACH,CACH,CAEHrC,KAAK8B,GAAGsN,KAAK/M,EAAIsH,EAAK,GACvB,GAER,CAUAqM,qBACG,OAAOsB,GAAGC,OAAOQ,aACpB,CAEA9B,QAAQV,GACL,IAAIyC,EAAOC,EACX,KAEI,CAAED,EAAOC,GAAS1C,EAAOtF,IAAIiI,MAC3B,oCAEHF,EAAQA,EAAMnF,QAAQ,uBAAwB,OAC9C+E,EAAA,OAAiBI,EAAO,CACrBH,GAAI,mBACJlO,KAAM,CACHwO,KAAM,CACHF,MAAOA,QAASG,EAChB1B,OAAQnB,EAAOmB,QAElBzG,IAAKsF,EAAOtF,MAOrB,CAJE,MAAO/H,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,qCAEf,CAEA,OAAO,IAAIG,SAAQ,CAAC/P,EAAS+W,KAC1Bd,EAAOmB,OAASnB,EAAOmB,OAAO2B,cAE9Bf,GAAGC,OAAOe,QAAQ/C,GAAQ,CAAC5L,EAAM4O,KAU9B,GAAIA,EAAMC,YAAc,IAAK,CAM1B,IAAIC,EAASF,EAAMpJ,MAAQoJ,EAAMpJ,MAAMkF,WAAakE,EAAM/W,KAEtD0G,EAAM,IAAIhJ,MAAM,iBAAiBuZ,KACrCvQ,EAAI6O,OAASwB,EAAMC,WACnBtQ,EAAIyO,WAAa8B,EACjBvQ,EAAI8O,aAAeuB,EAAM/W,KAKzB6U,EAAOnO,EACV,KAAO,CAEJ,GAAIyB,aAAgBzK,MAEjB,YADAmX,EAAO1M,GAIS,iBAARA,IACRiO,EAAA,OAAiB,aAAc,CAAEC,GAAI,cACrClO,EAAO+J,KAAKuD,MAAMtN,GAClBiO,EAAA,UAAoB,eAKnBjO,EAAKoN,QAAyB,SAAfpN,EAAKoN,OAErBV,EAAO,CACJU,OAAQwB,EAAMC,WACdxB,aAActD,KAAKgF,UAAU/O,MAKhCiO,EAAA,UAAoBI,GACpB1Y,EAAQqK,GAEd,IACD,GAER,GC9JH,IAAI,EAAe,qBA+cnB,YA1cA,cAAsB,EACnBhK,cACGG,QAEAE,KAAK2Y,gBAAgB,GAGrB3Y,KAAK4Y,UAAY,KAIjB5Y,KAAKqO,QAAU,KACfrO,KAAKgV,SAAW,KAMhBhV,KAAK6Y,YAAc,CAItB,CAEAxV,KAAKvB,GAQF,GALA9B,KAAK8B,GAAKA,EAEV9B,KAAK4Y,UAAY,IAAI5Y,KAAK8B,GAAGgX,KAE7B9Y,KAAKqO,QAAUrO,KAAK8B,GAAG4M,OAAOwG,aAC1BlV,KAAKqO,QAAS,CACf,OAAQrO,KAAKqO,QAAQ8G,WAAW4D,aAC7B,IAAK,QAEF,MAEH,IAAK,SACF/Y,KAAKgV,SAAW,IAAI,EAAkBhV,MACtC,MAGH,QACGA,KAAKgV,SAAW,IAAI,EAAYhV,MAItC,OAAOA,KAAKgV,SAAS3R,KAAKvB,EAC7B,CAqBA,OApBGwG,QAAQ6G,MAAM,8BAMbmI,IAAMA,GAAGC,OAEVD,GAAGC,OAAOpV,GAAG,aAAa,KACvBnC,KAAKgZ,aACDhZ,KAAKiZ,oBACNrF,aAAa5T,KAAKiZ,mBAClBjZ,KAAKiZ,kBAAoB,KAC5B,KAGH3Q,QAAQ6G,MAAM,+CACd+J,OAAOC,iBAAiB,UAAU,IAAMnZ,KAAKgZ,gBAGzC3J,QAAQ/P,SAClB,CAWI2V,iBACD,OAAOjV,KAAKgV,SAASC,UACxB,CAcAK,OAAOC,GACJ,OAAOvV,KAAKgV,SAASM,OAAOC,GAAQpB,MAAMxK,GAChC3J,KAAK8X,cAAcnO,IAEhC,CAeAqG,QAAQuF,GACL,OAAOvV,KAAKgV,SAAShF,QAAQuF,GAAQpB,MAAMxK,GACjC3J,KAAK8X,cAAcnO,IAEhC,CAeAmM,OAAOP,GACJ,OAAOvV,KAAKgV,SAASc,OAAOP,GAAQpB,MAAMxK,GAChC3J,KAAK8X,cAAcnO,IAEhC,CAcAoM,UAAUR,GACP,OAAOvV,KAAKgV,SAASe,UAAUR,GAAQpB,MAAMxK,GACnC3J,KAAK8X,cAAcnO,IAEhC,CAMAyP,mBAEOpZ,KAAKgW,sBACNhW,KAAKgZ,aAAa5E,OAAM,KAErBpU,KAAKiZ,kBAAoB3E,YAAW,KACjCtU,KAAKoZ,kBAAkB,GACvB,IAAI,IAEVpZ,KAAKiZ,kBAAoB,MAEzBjZ,KAAKiZ,kBAAoB3E,YAAW,KACjCtU,KAAKoZ,kBAAkB,GACvB,IAGT,CAQAC,gBACG,OAAOC,UAAUC,WAAW5X,IAC/B,CAQAqU,qBAEG,OAAIsB,IAAMA,GAAGC,QAAUD,GAAGC,OAAOQ,YACvBT,GAAGC,OAAOQ,cAIK,oBAAdyB,WAGDF,UAAUG,OAIbzZ,KAAKqZ,iBAAmBG,WAAWE,IAC7C,CASAtD,gBAAgBZ,EAAarG,EAAOxF,GAC7BA,IACDA,EAAO3J,KAAK8X,cAAcnO,IAE7B3J,KAAKoP,KAAKoG,EAAYpR,IAAKoR,EAAYtG,QAASC,EAAOxF,EAC1D,CAEAmO,cAAcnO,GAmBX,MAAoB,UAAhBA,EAAKoN,OAECpN,EAKHA,EAAKA,MAAQA,CACvB,CAWAgQ,WACG,MAAO,cACV,CAOAC,aACG,OAAO5Z,KAAK6Y,WACf,CASA1B,MAAMxN,EAAM6L,GACT,IAAImE,EAAW3Z,KAAK2Z,WAEpB,OAAO,IAAItK,SAAQ,CAAC/P,EAAS+W,KAC1BrW,KAAK4Y,UACDiB,UACA1F,MAAK,IACInU,KAAK8B,GAAGgY,QAAQxE,IAAIqE,KAE7BxF,MAAMgD,KACJA,EAAQA,GAAS,IACX9S,KAAK,CAAEsF,OAAM6L,gBACnBxV,KAAK8B,GAAG+U,IACL,QAAQM,EAAMjR,iBACXiR,EAAMjR,OAAS,EAAI,IAAM,aAG/BlG,KAAK6Y,YAAc1B,EAAMjR,OAClBlG,KAAK8B,GAAGgY,QAAQC,IAAIJ,EAAUxC,MAEvChD,MAAK,KACHnU,KAAKoP,KAAK,UAELpP,KAAKiZ,mBACPjZ,KAAKoZ,mBAERpZ,KAAK4Y,UAAUoB,UACf1a,GAAS,IAEX8U,OAAOlM,IACLlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QAAS,8BAEZjR,KAAK8B,GAAG8U,UAAUqD,SAAS/R,GAC3BmO,EAAOnO,GAEPlI,KAAK4Y,UAAUoB,SAAS,GACzB,GAEX,CAMAhB,aACG,IAAIW,EAAW3Z,KAAK2Z,WAGpB,IAAK3Z,KAAKgW,qBAAsB,CAC7B,IAAI7G,EAAQ,IAAIjQ,MAAM,kCAEtB,OADAiQ,EAAMhQ,KAAO,iBACNkQ,QAAQgH,OAAOlH,EACzB,CAGA,OAAO,IAAIE,SAAQ,CAAC/P,EAAS+W,KAC1BrW,KAAK4Y,UACDiB,UAKA1F,MAAK,IACInU,KAAK8B,GAAGgY,QAAQxE,IAAIqE,KAM7BxF,MAAMgD,IAEJA,EAAQA,GAAS,GAGjB,IAAI+C,EAAkBC,IACnB,GAAoB,GAAhBhD,EAAMjR,OACPiU,QACI,CACJ,IAAIC,EAAQjD,EAAMjD,QACdqB,EAAS6E,EAAMzQ,KACf0Q,EAAMD,EAAM5E,YAChBxV,KAAKgV,SACDoC,OAAO7B,EAAQ8E,GACflG,MAAK,KACH+F,EAAeC,EAAG,IAEpB/F,OAAOlM,IAEDA,GAAmB,mBAAZA,EAAI/I,KACZgb,EAAGjS,GAINgS,EAAeC,EAAG,GAE3B,GAGH,OAAO,IAAI9K,SAAQ,CAACiL,EAAKC,KACtBL,GAAgBhS,IACTA,EACDqS,EAAIrS,GAEJoS,GACH,GACD,GACH,IAMJnG,MAAK,KACHnU,KAAK6Y,YAAc,EACZ7Y,KAAK8B,GAAGgY,QAAQC,IAAIJ,EAAU,OAIvCxF,MAAK,KACHnU,KAAKoP,KAAK,gBACHpP,KAAK4Y,UAAUoB,aAIxB7F,MAAK,KACH7U,GAAS,IAIX8U,OAAOlM,IACLlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QAAS,6BAEZjR,KAAK8B,GAAG8U,UAAUqD,SAAS/R,GAE3BlI,KAAK4Y,UAAUoB,UAAU7F,MAAK,KAC3BkC,EAAOnO,EAAI,GACZ,GACH,GAEX,CAMAsS,QACG,OAAOnL,QAAQ/P,SAClB,CAQAqC,OACG,OAAO3B,KAAKqO,QAAQ8G,WAAW4D,WAClC,CAMA0B,YAEG,MAAO,CAAC,CACX,GCrcH,IAAI,EAAe,qBA0DnB,YAxDA,cAA2B,EACxB9a,cACGG,QAEAE,KAAK0a,cAAgB,IAKxB,CAEArX,KAAKvB,GAGF9B,KAAK8B,GAAKA,EACV,IAAI2U,EAAWzW,KAAK8B,GAAGqO,OAAOtR,KAa9B,OAZK4X,IACFA,EAAW,UAKdzW,KAAK0a,cAAgB1a,KAAK8B,GAAG6Y,MAAMC,QAAQC,OACxCpE,EACAzW,KAAK8B,GAAG6Y,MAAMC,QAAQE,OAIlBzL,QAAQ/P,SAClB,CAEAya,IAAI3V,EAAK1B,GACN,OAAO2M,QAAQ/P,UAAU6U,MAAK,IACpBnU,KAAK0a,cAAc5E,IAAI1R,EAAK1B,IAEzC,CAEA4S,IAAIlR,GACD,OAAOiL,QAAQ/P,UAAU6U,MAAK,IACpBnU,KAAK0a,cAAcpF,IAAIlR,IAEpC,CAEAa,MAAMb,GACH,OAAOiL,QAAQ/P,UAAU6U,MAAK,IACpBnU,KAAK0a,cAAcK,OAAO3W,IAEvC,CAEA4W,WACG,OAAO3L,QAAQ/P,UAAU6U,MAAK,IACpBnU,KAAK0a,cAAczV,SAEhC,GClEH,IAAI,EAAe,qBAoDnB,YAhDA,cAAsB,EACnBtF,cACGG,QAEAE,KAAK0a,cAAgB,KACrB1a,KAAKqO,QAAU,KACfrO,KAAKib,SAAW,IACnB,CAEA5X,KAAKvB,GAGF9B,KAAK8B,GAAKA,EACV,IAAIE,EAAShC,KAAK8B,GAAG4M,OAAOwG,aAC5B,OAAIlT,GACGA,EAAO4Y,SAAW5Y,EAAO4Y,QAAQM,WAClC5S,QAAQ6G,MAAM,qCAEdnP,KAAKib,SAAW,GAEhBjb,KAAKib,SAAW,EAGZjb,KAAKib,SAAS5X,KAAKvB,KAE1BwG,QAAQ6G,MAAM,8BAGVE,QAAQ/P,UAClB,CAEAya,OAAOxE,GACJ,OAAOvV,KAAKib,SAASlB,OAAOxE,EAC/B,CAEAD,OAAOC,GACJ,OAAOvV,KAAKib,SAAS3F,OAAOC,EAC/B,CAEAtQ,SAASsQ,GACN,OAAOvV,KAAKib,SAAShW,SAASsQ,EACjC,CAEAyF,YAAYzF,GACT,OAAOvV,KAAKib,SAASD,YAAYzF,EACpC,2BCjDC,EAAe,qBAsDnB,YAlDA,cAAqB,EAClB5V,cACGG,QAEAE,KAAKiO,MAAO,EACZjO,KAAKqO,QAAU,KACfrO,KAAKmb,iBAAmB,IAC3B,CAEA9X,OACG,IAAIrB,EAAS0M,EAAA,iBACb,GAAI1M,EAAQ,CAET,GAC6B,iBAAnBA,EAAOE,SACdF,EAAOE,mBAAmBkZ,OAG1B,IACGpZ,EAAOE,QAAUwR,KAAKuD,MAAMjV,EAAOE,QAGtC,CAFE,MAAOiN,GACN7G,QAAQ6G,MAAMA,EACjB,CAEHnP,KAAKqO,QAAUrM,EACfhC,KAAKmb,iBAAmBnZ,EAAOE,QAAQiZ,gBAC1C,CAGA,OAAO9L,QAAQ/P,SAClB,CAEAT,KACG,OAAKmB,KAAKqO,SAA8B,MAAnBrO,KAAKqO,QAAQxP,GAG3BmB,KAAKqO,QAAQxP,GAFV,IAGb,CAEAuR,QAAQhM,EAAK1B,GACV,GAAI1C,KAAKqO,QACN,OAAI3L,OACD1C,KAAKqO,QAAQnM,QAAQkC,GAAO1B,GAGxB1C,KAAKqO,QAAQnM,QAAQkC,EAElC,GC5CH,GAEGiX,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBC,kBAAmB,IACnBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,aAAc,IACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,IACxBC,yBAA0B,IAC1BC,yBAA0B,IAC1BC,wBAAyB,GAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB9a,gBAAiB,IACjB+a,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEG/B,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClB9a,gBAAiB,IACjB+a,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGpb,OAAQ,WAEL,OAAIkX,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,mBC3uBN,MAAMC,EACH5d,YAAYmC,GACT9B,KAAK8B,GAAKA,EACV9B,KAAKwd,OAAS,EACjB,CAEAC,SAASvW,EAAM+J,GACZjR,KAAKwd,OAAOnZ,KAAK,CAAE6C,KAAMA,EAAM+J,QAASA,GAC3C,CAEAyM,OACG,OAA6B,GAAtB1d,KAAKwd,OAAOtX,MACtB,CAEAqB,OACG,OAAOvH,KAAKwd,OAAOtX,OAAS,CAC/B,CAEAyX,qBACG,IAAInG,EAAM,CACPrI,MAAO,eACPyO,kBAAmB,CAAC,GAGnBC,EAAOrG,EAAIoG,kBAOf,OALA5d,KAAKwd,OAAOxZ,SAAS/E,IAClB4e,EAAK5e,EAAEiI,MAAQ2W,EAAK5e,EAAEiI,OAAS,GAC/B2W,EAAK5e,EAAEiI,MAAM7C,KAAKpF,EAAE,IAGhBuY,CACV,CAEAhQ,WAAWwC,GACR,IAAI8T,EAAO9d,KAAK2d,qBAChB3d,KAAK8B,GAAGic,WAAWC,sBAAsBF,EAAM9T,EAClD,CAEAiU,WAAWC,EAAOC,GACf,IAAIL,EAAO9d,KAAK2d,qBAChB3d,KAAK8B,GAAGic,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH,MAAME,UAAkB,KACrB1e,YAAY2e,GACTxe,MAAMwe,GAGNte,KAAK0O,OAASA,EAAA,EAKd1O,KAAKyS,QAAU,EACfzS,KAAKue,OAASA,EACdve,KAAKgR,aAAe,EACpBhR,KAAKiP,QAAU,EACfjP,KAAK8Z,QAAU,EACf9Z,KAAKmQ,OAAS,EACdnQ,KAAK2a,MAAQnX,MAGbxD,KAAKwe,QAAUA,EAAA,EAGfxe,KAAKye,MAAMC,cAAgB,IAC3B1e,KAAKye,MAAME,cAAgB,IAG3B3e,KAAK4W,UAAY,CACdC,IAAK,OACLoD,SAAU,QAEbja,KAAK8Y,KAAO,MACTnZ,cAAe,CAEfka,UACG,OAAOxK,QAAQ/P,SAClB,CACA0a,UACG,OAAO3K,QAAQ/P,SAClB,GAGHU,KAAK+B,WAAa,EAElB/B,KAAK+d,WAAa,CACfzW,UAAW,IACD,IAAIiW,EAAYvd,MAG1B4e,kBAAmB,SAAUzP,GA8B1B,OA7BIA,IAMEA,EAAMA,OACS,aAAfA,EAAMA,OACNA,EAAM0P,KACN1P,EAAM0P,IAAI3Y,OAAS,IAEnBiJ,EAAQA,EAAM0P,IAAI,IAIjB1P,EAAMjH,MACPiH,EAAQA,EAAMjH,KAKdiH,EAAMxF,MACNwF,EAAMxF,KAAKwF,OACS,gBAApBA,EAAMxF,KAAKwF,QAEXA,EAAQA,EAAMxF,OAIbwF,CACV,EA+BA6O,sBAAuB,SAAU7O,EAAOnF,GACrC,IAAI8U,GAAa,EAIjB,GAAI3P,KAIDA,EAAQnP,KAAK4e,kBAAkBzP,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAMhQ,MAAsB,gBAAdgQ,EAAMhQ,MACtB,CACC,IAAI4f,EAAQ5P,EAAMyO,kBAClB,GAAImB,EAAO,CACR,IAAIC,GAAU,EACd,IAAK,IAAInB,KAAQkB,EAEd,GAAI/U,EAAKhB,SAAS6U,GAAO,CACtB,IAAIL,EAASuB,EAAMlB,GACfoB,EAAM,GACVzB,EAAOxZ,SAAQ,SAAUkE,GACtB+W,EAAI5a,KAAK6D,EAAI+I,QAChB,IAGAjH,EAAKkV,YAAYrB,EAAMoB,EAAI/Q,KAAK,OAG3B4Q,IACF9U,EAAKhB,SAAS6U,GAAMsB,QACpBL,GAAa,GAGhBE,GAAU,CACb,CAGH,GAAIA,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,EAgCAZ,sBAAuB,SAAUjP,EAAOiQ,EAAKC,GAE1C,GAAIlQ,KAIDA,EAAQnP,KAAK4e,kBAAkBzP,IAKrBA,OAAwB,gBAAfA,EAAMA,OACrBA,EAAMhQ,MAAsB,gBAAdgQ,EAAMhQ,MACtB,CACC,IAAI4f,EAAQ5P,EAAMyO,kBAClB,GAAImB,EAAO,CACR,IAAIO,GAAU,EACd,IAAK,IAAIzB,KAAQkB,EAAO,CACrBM,EAAKE,WAAWH,EAAKvB,EAAM,iBAC3BwB,EAAKE,WAAWH,EAAKvB,EAAM,sBAE3B,IAAIoB,EAAM,GACVF,EAAMlB,GAAM7Z,SAAS/E,IAClBggB,EAAI5a,KAAKpF,EAAEgS,QAAQ,IAGtBzN,MAAMsN,MAAM,CACT7C,KAAM4P,EAAO,KAAOoB,EAAI/Q,KAAK,QAGhCoR,GAAU,CACb,CAKA,GAHAD,EAAK5a,QAAQ2a,GACbC,EAAKG,iBAEDF,EACD,OAAO,CAEb,CACH,CAKH,OAAO,CACV,GAMHtf,KAAKyf,YAAc,CAAC,EAKpBzf,KAAKmC,GAAG,SAAU+F,IAEfI,QAAQ6G,MAAMjH,EAAI,IAGrBlI,KAAK0f,SAAW,GAGhB1f,KAAK2f,wBAA0B,CAAC,EAMhC3f,KAAKiP,QAAQ9M,GAAG,qBAAqB,CAAC+M,EAAShH,EAAK0X,KACjD,IAAIC,EAAU7f,KAAK2f,wBAAwBzQ,EAAQM,MACnD,GAAItH,EAGD,YADA2X,GAASxJ,OAAOnO,GAMnB,IAAI4X,EAAM,CACPjhB,GAAI+gB,EAAQ/gB,GACZ8K,KAAMiW,GAET5f,KAAKoP,KAAK,yBAA0B0Q,GAEpC,IAAIC,EAAS/f,KAAKggB,cAAcJ,GAChCC,GAASvgB,QAAQygB,EAAO,IAG3B/f,KAAKiP,QAAQ9M,GAAG,qBAAqB,CAAC+M,EAAShH,EAAK+X,KACjD,IAAIJ,EAAU7f,KAAK2f,wBAAwBzQ,EAAQM,MACnD,GAAItH,EACD,OAAIA,EAAImM,WAAWnH,QAAQ,cAAgB,EACjClN,KAAKkgB,iBAAiBhR,EAAQxJ,QACjCyO,KAAK0L,GAASvgB,SACd8U,MAAMyL,GAASxJ,aAItBwJ,GAASxJ,OAAOnO,GAInBlI,KAAKmgB,aAAajR,EAAQrQ,IAAMohB,EAIhC,IAAIH,EAAM,CACPjhB,GAAIohB,EAAUphB,GACd8K,KAAMsW,GAETjgB,KAAKoP,KAAK,yBAA0B0Q,GAEpCD,GAASvgB,QAAQ2gB,EAAU,IAG9BjgB,KAAKiP,QAAQ9M,GAAG,qBAAqB,CAAC+M,EAAShH,EAAK+X,KACjD,IAAIJ,EAAU7f,KAAK2f,wBAAwBzQ,EAAQM,MACnD,GAAItH,EAGD2X,GAASxJ,OAAOnO,OAHnB,QAOOlI,KAAKmgB,aAAajR,EAAQrQ,IAIjC,IAAIihB,EAAM,CACPjhB,GAAIqQ,EAAQrQ,GACZ8K,KAAMsW,GAETjgB,KAAKoP,KAAK,yBAA0B0Q,GAEpCD,GAASvgB,SAZT,CAYkB,IAMrB,MAAM8gB,EAAgB,CAWnBC,OAAQ,CAACC,EAAW,GAAIpe,EAAU,CAAC,KAChC,IAAKoe,EAAU,OAEXpe,EAAQqe,aAAYD,EAAWA,EAASzN,QAAQ,MAAO,KAE3D,IAAIlF,EAASzL,EAAQse,OAChB,IAAOF,EAAUpe,EAAQse,QACzB,IAAOF,GAgBZ,MAdqB,CAClB,aACA,aACA,aACA,aACA,aACA,cAGYtc,SAASwc,IAChB7S,GAAWA,EAAOrI,YACpBqI,EAAS,IAAO2S,EAAUE,GAAO,IAGhC,IAAIC,KAAK9S,EAAO,EAc1B+S,aAAc,CAACC,EAAMze,KAClB,IAAKye,EAAM,MAAO,GAElB,IAAIC,EAAY,IAAOD,GAIvB,OAFIze,EAAQ2e,YAAYD,EAAUE,OAAO5e,EAAQ2e,YAE1CD,EAAUJ,OAAOte,EAAQse,OAAO,EAY1CO,aAAc,CAACJ,EAAMK,EAAQC,IACnB,IAAON,GAAMO,SAASF,EAAQC,GAAMZ,SAY9Cc,QAAS,CAACR,EAAMK,EAAQC,IACd,IAAON,GAAMS,IAAIJ,EAAQC,GAAMZ,WAG3ChhB,OAAOD,KAAKghB,IAAkB,IAAIpc,SAASgQ,IACzChU,KAAKqhB,MAAMrN,GAAKoM,EAAcpM,EAAE,GAEtC,CAQA9O,aAIG,IAAIoc,EAAW,GAEfA,EAASjd,KAAKrE,KAAKyS,QAAQpP,KAAKrD,OAChCshB,EAASjd,KAAKrE,KAAKgR,aAAa3N,KAAKrD,OACrCshB,EAASjd,KAAKrE,KAAKiP,QAAQ5L,KAAKrD,OAChCshB,EAASjd,KAAKrE,KAAKmQ,OAAO9M,KAAKrD,aAEzBqP,QAAQkS,IAAID,SACZthB,KAAK8Z,QAAQzW,KAAKrD,MACxB,IAAI2J,QAAa3J,KAAK8Z,QAAQxE,IAAI,kBAqDlC,OApDAtV,KAAKwhB,eAAiB7X,GAAQ,CAAC,EAO/B3J,KAAKmC,GAAG,0BAA2B2d,IAIhC,GAA4B,iBAAjBA,EAAInW,KAAK8X,KACjB,IACG3B,EAAInW,KAAK8X,KAAO/N,KAAKuD,MAAM6I,EAAInW,KAAK8X,KAGvC,CAFE,MAAOxiB,GACNqJ,QAAQuO,IAAI5X,EACf,CAEHe,KAAKmgB,aAAaL,EAAIjhB,IAAMihB,EAAInW,KAChC3J,KAAK0hB,eAAe,UAAW5B,EAAIjhB,GAAIihB,EAAInW,KAAK,IAInD3J,KAAKmC,GAAG,0BAA2B2d,IAGhC,GAA4B,iBAAjBA,EAAInW,KAAK8X,KACjB,IACG3B,EAAInW,KAAK8X,KAAO/N,KAAKuD,MAAM6I,EAAInW,KAAK8X,KAGvC,CAFE,MAAOxiB,GACNqJ,QAAQuO,IAAI5X,EACf,CAEHe,KAAKmgB,aAAaL,EAAIjhB,IAAMihB,EAAInW,KAChC3J,KAAK0hB,eAAe,UAAW5B,EAAIjhB,GAAIihB,EAAInW,KAAK,IAInD3J,KAAKmC,GAAG,0BAA2B2d,IAGhC,GAA4B,iBAAjBA,EAAInW,KAAK8X,KACjB,IACG3B,EAAInW,KAAK8X,KAAO/N,KAAKuD,MAAM6I,EAAInW,KAAK8X,KAGvC,CAFE,MAAOxiB,GACNqJ,QAAQuO,IAAI5X,EACf,QAEIe,KAAKmgB,aAAaL,EAAIjhB,IAC7BmB,KAAK0hB,eAAe,YAAa5B,EAAIjhB,GAAIihB,EAAInW,KAAK,IAG9C7J,MAAMuD,MAiEhB,CAUA6B,uBAAuByc,GAOpB,YALqB,IAAVA,EAAI9iB,KACZ8iB,EAAI9iB,GAAKmB,KAAKwP,OACdmS,EAAIF,KAAK5iB,GAAK8iB,EAAI9iB,IAGd,IAAIwQ,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAI7G,EAAOxP,KAAKwP,OAChBxP,KAAK2f,wBAAwBnQ,GAAQ,CAAElQ,UAAS+W,UAChD,IAAIb,EAAc,CACfpR,IAAK,oBACL8K,QAAS,CACNM,SAGNxP,KAAKiP,QAAQe,KACV,CACGC,IAAK,qBACLtG,KAAMgY,GAETnM,GACDpB,OAAOlM,IACN,IAAI+I,EAAU,yCACE,YAAZ/I,EAAI/I,OACL8R,EAAU,sDAEbjR,KAAKmI,OAAOC,UAAUF,EAAK,CACxBgH,QAAS,+BACT+B,UACA0Q,OACD,GAKH,GAER,CASAzc,wBAAwBrG,GACrB,OAAO,IAAIwQ,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAI7G,EAAOxP,KAAKwP,OAChBxP,KAAK2f,wBAAwBnQ,GAAQ,CAAElQ,UAAS+W,UAChD,IAAIb,EAAc,CACfpR,IAAK,oBACL8K,QAAS,CACNrQ,KACA2Q,SAGNxP,KAAKiP,QAAQ8G,OACV,CACG9F,IAAK,eAAepR,KAEvB2W,GACDpB,OAAOlM,IACN,IAAI+I,EAAU,0CACE,YAAZ/I,EAAI/I,OACL8R,EAAU,sDAEbjR,KAAKmI,OAAOC,UAAUF,EAAK,CACxBgH,QAAS,gCACT+B,UACApS,MACD,GAKH,GAER,CAYAqG,uBAAuBrG,EAAI6G,GACxB,OAAO,IAAI2J,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAI7G,EAAOxP,KAAKwP,OAChBxP,KAAK2f,wBAAwBnQ,GAAQ,CAAElQ,UAAS+W,UAChD,IAAIb,EAAc,CACfpR,IAAK,oBACL8K,QAAS,CACNrQ,KACA2Q,OACA9J,WAGN1F,KAAKiP,QAAQ6G,IACV,CACG7F,IAAK,eAAepR,IACpB8K,KAAMjE,GAET8P,GACDpB,OAAOlM,IACN,IAAI+I,EAAU,yCACE,YAAZ/I,EAAI/I,OACL8R,EAAU,sDAEbjR,KAAKmI,OAAOC,UAAUF,EAAK,CACxBgH,QAAS,+BACT+B,WACD,GAKH,GAER,CAoCA9I,OAAOyZ,EAAQzS,EAAO0S,GACnBjK,EAAA,SAAmBgK,EAAQzS,EAAO0S,EACrC,CAEAC,UACG,OAAO9hB,KAAK0f,QACf,CACAqC,WAAWC,GACRhiB,KAAK0f,SAASrb,KAAK2d,EACtB,CAKAlR,MAAM5O,GACHlC,KAAK2a,MAAM7J,MAAM5O,EACpB,CAEAuD,UAAU/C,GACP,OAAO,cAAYA,EACtB,CAEAyM,MAAM8B,KAAYgR,GACf,IAAIC,EAAW,CACZjR,QAAS,aAAajR,KAAKmQ,OAAOtR,SAASoS,EAAQoD,cAGtD/L,QAAQ6G,MAAM+S,EAASjR,SACnBA,aAAmB/R,QACpBgjB,EAAS/S,MAAQ8B,EAEjB3I,QAAQ6G,MAAM8B,IAGbgR,GAAQA,EAAK/b,OAAS,GACvB+b,EAAKje,SAASuL,IAOX,GANIA,aAAarQ,QACdgjB,EAAS/S,MAAQI,EAEjBjH,QAAQ6G,MAAMI,IAGD,iBAALA,EACR,IAAK,IAAIyE,KAAKzE,EACX2S,EAASlO,GAAKzE,EAAEyE,GAChB1L,QAAQ6G,MAAM6E,EAAGzE,EAAEyE,GAEzB,IAGNhU,KAAKoP,KAAK,QAAS8S,EACtB,CAEAvK,QACG,OAAO,SACV,CAEA1X,QACG,MAAO,IAAIsV,IACDvV,KAAKgR,aAAa7P,SAASoU,EAExC,CAEA4M,cAAc/d,EAAK1B,GAChB,YAAoB,IAATA,EAED1C,KAAKwhB,eAAepd,IAG3BpE,KAAKwhB,eAAepd,GAAO1B,EACpB1C,KAAK8Z,QAAQC,IAAI,iBAAkB/Z,KAAKwhB,gBAErD,CAEA3K,IAAI5F,KAAYgR,GACb3Z,QAAQuO,IAAI5F,GACZgR,EAAKje,SAASuL,IACXjH,QAAQuO,IAAItH,EAAE,GAEpB,CAQA6S,OAAOhe,GAKJ,OAJcie,OACX,4EACA,KAEYC,KAAKle,EACvB,CAEAme,SAAShN,GACN,OAAO,aAAWA,EACrB,CAEAiN,WAAWjN,GACR,OAAO,eAAaA,EACvB,CAEAkN,QAAQlN,GACL,OAAO,YAAUA,EACpB,CAEAmN,aAAanN,GACV,OAAO,iBAAeA,EACzB,CAEAoN,SAASpN,GACN,OAAO,aAAWA,EACrB,CAEAqN,UAAUrN,GACP,OAAO,cAAYA,EACtB,CAEAsN,SAAStN,GACN,OAAO,aAAWA,EACrB,CAEAuN,SAASvN,GACN,OAAO,aAAWA,EACrB,CAEA/F,OACG,OAAO,QACV,CAEAjH,KAAK0I,KAAYgR,GACd3Z,QAAQC,KAAK0I,GACbgR,EAAKje,SAASuL,IACXjH,QAAQC,KAAKgH,EAAE,GAErB,CAEAwT,YAAYxN,GACT,OAAO,aAAWA,EACrB,EAGH,2BC76BA,MAAMoJ,EAAgB,EAAQ,OAC9B,IAAIqE,EAAY,EAAQ,OAkBxBzjB,EAAOC,QAAU,cAAgCwjB,EAC9CrjB,YAAYsjB,EAAYnhB,GAjB3B,IAAgB6T,EAkBV7V,MAAM,CAAC,QAAS,eAAgBgC,GAQhCmhB,EAAWxB,KAAOwB,EAAWxB,MAAQ,CAAC,EAGtCzhB,KAAKnB,GAAKokB,EAAWpkB,GAGrBmB,KAAK2B,KAAOshB,EAAWthB,MAAQ,cAI/B3B,KAAKyhB,KAAOwB,EAAWxB,KACC,iBAAbzhB,KAAKyhB,OAAkBzhB,KAAKyhB,KAAO/N,KAAKuD,MAAMjX,KAAKyhB,OAI9DzhB,KAAKyhB,KAAkB,YAAIwB,EAAWxB,MAAMyB,aAAe,CACxDC,cAAe,QACfC,UAAW,CACR,QAAS,CACNC,OAAQ,MACRC,QAAS,QACTC,YAAa,EACbC,cAAe,kBACfC,WAAW,IAAIhD,MAAOiD,iBAKK,iBAAzB1jB,KAAKyhB,KAAKyB,cAClBljB,KAAKyhB,KAAKyB,YAAcxP,KAAKuD,MAAMjX,KAAKyhB,KAAKyB,cAIhDljB,KAAKkH,KAAO+b,EAAW/b,MAAQlH,KAAKyhB,KAAKva,MAAQ,GAMjDlH,KAAKoL,KAAO6X,EAAW7X,MAAQ,YAO/BpL,KAAK2jB,oBAvEU,KADLhO,EAwEmBsN,EAAWU,iBAnE/B,KAARhO,GAAsB,UAARA,GAA2B,MAARA,IAIzB,SAARA,GAA0B,MAARA,GAIfA,GAkEJ3V,KAAK4jB,WAAaX,EAAWW,YAAc,GACtC5W,MAAMC,QAAQjN,KAAK4jB,cACrB5jB,KAAK4jB,WAAa,CAAC5jB,KAAK4jB,aAE3B5jB,KAAK4jB,WAAa5jB,KAAK4jB,WAAWhb,QAAQ2G,GAAMA,IAKhDvP,KAAK6jB,gBAAkBnQ,KAAKuD,MAAMgM,EAAWY,kBAAmB,GAShE7jB,KAAK8jB,eAAiBb,EAAWa,eACC,iBAAvB9jB,KAAK8jB,iBACb9jB,KAAK8jB,eAAiBpQ,KAAKuD,MAAMjX,KAAK8jB,iBAKzC9jB,KAAK+jB,qBAAuBrQ,KAAKuD,MAC9BgM,EAAWc,uBAAwB,GAEtC/jB,KAAKgkB,oBAAsBf,EAAWe,oBACC,iBAA5BhkB,KAAKgkB,sBACbhkB,KAAKgkB,oBAAsBtQ,KAAKuD,MAAMjX,KAAKgkB,sBAE9ChkB,KAAKikB,kBAAoBvQ,KAAKuD,MAC3BgM,EAAWgB,oBAAqB,GAEnCjkB,KAAKkkB,iBAAmBjB,EAAWiB,iBACC,iBAAzBlkB,KAAKkkB,mBACblkB,KAAKkkB,iBAAmBxQ,KAAKuD,MAAMjX,KAAKkkB,mBAE3ClkB,KAAKmkB,QAAUlB,EAAWxB,KAAK0C,SAAW,GAO1CnkB,KAAKokB,UAAYnB,EAAWxB,KAAK2C,WAAa,GAM9CpkB,KAAKqkB,SAAWpB,EAAWxB,KAAK4C,UAAY,GAO5CrkB,KAAKskB,kBAAoBrB,EAAWxB,KAAK6C,mBAAqB,GAQ9D,IAAIC,EAAW,IACdtB,EAAWxB,KAAK+C,SAAW,IAAIxgB,SAASnF,IACtC,IAAI8iB,EAAM3hB,KAAK8B,GAAG2iB,eAAe5lB,GAC7B8iB,EACD4C,EAASlgB,KAAKrE,KAAK0kB,QAAQ/C,IAE3B3hB,KAAKoP,KACF,UACA,OAAOpP,KAAKnB,uCAAuCA,KACnD,CACG8lB,MAAO3kB,KAAKnB,GACZ+lB,OAAQ/lB,GAMjB,IAEHmB,KAAK6kB,OAASN,GAObtB,EAAWxB,KAAKqD,YAAc,IAAI9gB,SAAS+gB,IACjC/kB,KAAK8B,GAAGkjB,YAAYD,IAEzB/kB,KAAKoP,KACF,UACA,iDACA,CAAEuV,MAAO3kB,KAAKnB,GAAIomB,UAAWF,GAEnC,IAGH/kB,KAAK8kB,WAAa7B,EAAWxB,KAAKqD,YAAc,GAKhD7B,EAAWxB,KAAKyD,mBACbjC,EAAWxB,KAAKyD,oBAAsB,CAAC,EAC1CllB,KAAKklB,mBAAqBllB,KAAKklB,oBAAsB,CAAC,EACtDllB,KAAKklB,mBAAmBC,OAASzR,KAAKuD,MACnCgM,EAAWxB,KAAKyD,mBAAmBC,SAAU,GAEhDnlB,KAAKklB,mBAAmBE,WACrBnC,EAAWxB,KAAKyD,mBAAmBE,YAAc,GACpDplB,KAAKklB,mBAAmBG,cACrBpC,EAAWxB,KAAKyD,mBAAmBG,eAAiB,MACvDrlB,KAAKklB,mBAAmBI,QAAU5R,KAAKuD,MACpCgM,EAAWxB,KAAKyD,mBAAmBI,UAAW,GAKjDrC,EAAWsC,aACRtC,EAAWsC,cAAgBtC,EAAWxB,KAAK8D,aAE9CzlB,MAAMkG,WAAWid,EACpB,CAsBAuC,qBAAqB1W,GAClB,IAAI2W,GAAY,EAGhB,OAAKzlB,KAAK6jB,iBAYN6B,SAAS1lB,KAAK8jB,eAAe6B,WAC7B7W,GAAS,IAAI9K,SAASuL,IAChBvP,KAAK8jB,eAAe8B,KAAK1Y,QAAQqC,EAAEC,MAAQD,IAAM,IAClDkW,GAAY,EACf,IAKFA,KAIHzlB,KAAK6lB,SAAW,IAAI7hB,SAASge,IAEvBA,EAAEwD,qBAAqB1W,KACxB2W,GAAY,EACf,IAEIA,MA9BH3W,GAAS,IAAI9K,SAASuL,IAChBvP,KAAK4jB,WAAW1W,QAAQqC,EAAEC,MAAQD,IAAM,IACzCkW,GAAY,EACf,IAEIA,EA0Bb,CAaA5f,QAEG,IAAIqd,EAAcljB,KAAKyhB,KAAKyB,YA6B5B,OA3BAljB,KAAKyhB,KAAO3hB,MAAM+F,QAElB7F,KAAKyhB,KAAKva,KAAOlH,KAAKkH,KAEtBlH,KAAKyhB,KAAKyB,YAAcA,EAExBljB,KAAKyhB,KAAK2C,UAAYpkB,KAAKokB,UAE3BpkB,KAAKyhB,KAAKyD,mBAAqBllB,KAAKklB,mBAEpCllB,KAAKyhB,KAAK0C,QAAUnkB,KAAKmkB,QAEzBnkB,KAAKyhB,KAAK4C,SAAWrkB,KAAKqkB,SAE1BrkB,KAAKyhB,KAAK6C,kBAAoBtkB,KAAKskB,kBAEnCtkB,KAAKyhB,KAAK+C,SAAWxkB,KAAK6kB,QAAU,IAAInmB,KAAKsjB,GAAMA,EAAEnjB,KAErDmB,KAAKyhB,KAAKqD,WAAa9kB,KAAK8kB,YAAc,GASnC,CACJjmB,GAAImB,KAAKnB,GACT8C,KAAM3B,KAAK2B,MAAQ,cACnBuF,KAAMlH,KAAKkH,KACXkE,KAAMpL,KAAKoL,KACXuY,eAAgB3jB,KAAK2jB,eACrBlC,KAAMzhB,KAAKyhB,KACXmC,WAAY5jB,KAAK4jB,WACjB2B,aAAcvlB,KAAKyhB,KAAK8D,aACxB1B,gBAAiB7jB,KAAK6jB,gBACtBE,qBAAsB/jB,KAAK+jB,qBAC3BE,kBAAmBjkB,KAAKikB,kBACxBH,eAAgB9jB,KAAK8jB,eACrBE,oBAAqBhkB,KAAKgkB,oBAC1BE,iBAAkBlkB,KAAKkkB,iBAE7B,CAeA4B,WAAWld,EAAS,MAAM,IACvB,OAAQ5I,KAAK+lB,aAAe,IAAInd,OAAOA,EAC1C,CAcAod,wBAAwBpd,EAAS,MAAM,IACpC,OAAO5I,KAAK8B,GAAGmkB,iBAAiBjnB,IACmB,GAAzCgB,KAAKskB,kBAAkBpX,QAAQlO,EAAEH,MACxC+J,OAAOA,EACb,CAEAsd,wBAAwBtd,EAAS,MAAM,GAAM4E,GAE1C,MAAM2Y,EAAS3Y,GAAQ,EAAEC,EAAGC,IAAMD,EAAEtM,MAAMilB,cAAc1Y,EAAEvM,QAC1D,OAAOnB,KAAK8B,GAAGmkB,iBAAiBjnB,GACtBgB,KAAKskB,kBAAkBpX,QAAQlO,EAAEH,KAAO,IAE9C+J,OAAOA,GACP4E,KAAK2Y,EACZ,CAMAE,gBAAgBzd,EAAS,MAAM,IAC5B,OAAO5I,KAAK8B,GAAGwkB,SAAStnB,IACmB,GAAjCgB,KAAKokB,UAAUlX,QAAQlO,EAAEH,MAChC+J,OAAOA,EACb,CAEA2d,gBAAgB3d,EAAS,MAAM,GAAM4E,GAElC,MAAM2Y,EAAS3Y,GAAQ,EAAEC,EAAGC,IAAMD,EAAEtM,MAAMilB,cAAc1Y,EAAEvM,QAC1D,OAAOnB,KAAK8B,GAAGwkB,SAAStnB,GACdgB,KAAKokB,UAAUlX,QAAQlO,EAAEH,KAAO,IAEtC+J,OAAOA,GACP4E,KAAK2Y,EACZ,CAMAK,cAAc5d,EAAS,MAAM,IAC1B,OAAO5I,KAAK8B,GAAG2kB,OAAOC,IACmB,GAA/B1mB,KAAKmkB,QAAQjX,QAAQwZ,EAAE7nB,MAC9B+J,OAAOA,EACb,CAEA+d,cAAc/d,EAAS,MAAM,GAAM4E,GAEhC,MAAM2Y,EAAS3Y,GAAQ,EAAEC,EAAGC,IAAMD,EAAEtM,MAAMilB,cAAc1Y,EAAEvM,QAC1D,OAAOnB,KAAK8B,GAAG2kB,OAAOC,GACZ1mB,KAAKmkB,QAAQjX,QAAQwZ,EAAE7nB,KAAO,IAEpC+J,OAAOA,GACP4E,KAAK2Y,EACZ,CAYAS,iBAAiB/nB,GAKd,GAJAyJ,QAAQ6G,MACL,8DAGO,IAANtQ,EAAU,MAAO,GAGrB,IAGIgoB,EAHQ7mB,KAAK8B,GAAG2V,WAAW5Y,GAGHioB,gBAExBC,EAAe,CAAC,EACpBF,EAAgB7iB,SAAS+C,IACtBggB,EAAahgB,EAAEZ,SAASO,YAAc1G,KAAK8B,GAAG2V,WAC3C1Q,EAAEZ,SAASO,WACb,IAGJ,IAAIsgB,EAAgB,GAQpB,OAPA3nB,OAAOD,KAAK2nB,GAAc/iB,SAAQ,SAAUI,GACzC4iB,EAAc3iB,KAAK,CAChBxF,GAAImB,KAAKoE,GAAKvF,GACd6D,MAAO1C,KAAKoE,GAAKjD,OAEvB,GAAG4lB,GAEIC,CACV,CAYAH,gBAAgBI,EAAWC,GACxB5e,QAAQ6G,MAAM,4BAGd,IAGI0X,EAHQ7mB,KAAK8B,GAAG2V,WAAWwP,GAGHH,eACxB/f,GAAMA,EAAEZ,SAASO,YAAcwgB,IAG/BC,EAAe,GAKnB,OAJAN,EAAgB7iB,SAAS+C,IACtBogB,EAAa9iB,KAAK,CAAExF,GAAIkI,EAAEF,WAAYnE,MAAOqE,EAAE5F,OAAQ,IAGnDgmB,CACV,CAiBAtB,MAAMjd,EAAS,MAAM,GAAMwe,GAAO,GAC/B,IAAIzZ,EAAS,GAEb,OAAK3N,KAAK6kB,QAAU7kB,KAAK6kB,OAAO3e,OAAS,IAGrC0C,GAAUwe,GACXzZ,EAAS3N,KAAK6kB,OAAOjc,OAAOA,IAEjB1C,OAAS,GACjBlG,KAAK6kB,OAAO7gB,SAASge,IAClB,IAAIqF,EAAWrF,EAAE6D,MAAMjd,EAAQwe,GAC3BC,GAAYA,EAASnhB,OAAS,IAC/ByH,EAAS0Z,EACZ,IAMN1Z,GAAU3N,KAAK6kB,QAAU,IAAIjc,OAAOA,IAjBY+E,CAqBtD,CAeA2Z,UAAU1e,EAAS,MAAM,IACtB,OAAO5I,KAAK8B,GAAGwlB,WAAWtF,GAChBhiB,KAAK8kB,WAAW5X,QAAQ8U,EAAEnjB,KAAO,IACxC+J,OAAOA,EACb,CAEA2e,WAAWC,GACR,SAAIA,IAAWA,EAAQ3oB,KACbmB,KAAK8kB,WAAW5X,QAAQsa,EAAQ3oB,KAAO,CAIpD,CAeA4oB,MAAM7e,GACH,IAAI+E,EAAS,GACT8Z,EAAQ,GACR5B,EAAQ,GAEZ,QACK7lB,KAAK6kB,QAAU7kB,KAAK6kB,OAAO3e,OAAS,MACpClG,KAAK0nB,QAAU1nB,KAAK0nB,OAAOxhB,OAAS,KA8BrC0C,GAEG5I,KAAK0nB,SACND,EAAQznB,KAAK0nB,OAAO9e,OAAOA,IAEjB1C,OAAS,GAChBlG,KAAK0nB,OAAO1jB,SAASiP,IAClB,IAAI0U,EAAW1U,EAAEwU,MAAM7e,GAAQ,GAC3B+e,GAAYA,EAASzhB,OAAS,IAC/BuhB,EAAQE,EACX,IAMLF,EAAMvhB,OACPyH,EAAS8Z,GAGT9Z,EAAS3N,KAAK6kB,OAAOjc,OAAOA,IAGjB1C,OAAS,GAjD1B,SAAS0hB,EAASlnB,GACXA,EAAKmkB,QAAUnkB,EAAKmkB,OAAO3e,QAC5BxF,EAAKmkB,OAAO7gB,SAASge,IAElB,IAAI6F,EAAY7F,EAAEyF,MAAM7e,GAAQ,GAMhC,GAJIif,GAAaA,EAAU3hB,OAAS,IACjCyH,EAASka,GAGRla,EAAOzH,OAAS,EAAG,CAEpB,IAAImhB,EAAWrF,EAAE6D,MAAMjd,GAAQ,GAE3Bye,GAAYA,EAASnhB,OAAS,IAC/ByH,EAAS0Z,GAER1Z,EAAOzH,OAAS,GACjB0hB,EAAS5F,EAEf,IAGT,CA4BS4F,CAAS5nB,QAOXA,KAAK0nB,SACND,EAAQznB,KAAK0nB,QACHxhB,QACPuhB,EAAMzjB,SAASiP,IACZ,IAAI0U,EAAW1U,EAAEwU,OAAM,KAAM,IAAM,GAC/BE,GAAYA,EAASzhB,SACtBuhB,EAAQA,EAAMK,OAAOH,GACxB,IAML3nB,KAAK6kB,SACNgB,EAAQ7lB,KAAK6kB,QACH3e,QACP2f,EAAM7hB,SAASge,IAEZ,IAAI6F,EAAY7F,EAAEyF,OAAM,KAAM,IAAM,GAChCI,GAAaA,EAAU3hB,SACxBuhB,EAAQA,EAAMK,OAAOD,IAGxB,IAAIR,EAAWrF,EAAE6D,OAAM,KAAM,IAAM,GAC/BwB,GAAYA,EAASnhB,SACtB2f,EAAQA,EAAMiC,OAAOT,GACrBA,EAASrjB,SAASmP,IACf,IAAIwU,EAAWxU,EAAIsU,OAAM,KAAM,IAAM,GACjCE,GAAYA,EAASzhB,SACtBuhB,EAAQA,EAAMK,OAAOH,GACxB,IAEN,IAKTha,EAASA,EAAOma,OAAOjC,EAAO4B,KAjGvB9Z,CAqGb,CAOAoa,QAAQ1X,EAAK,MAAM,IAChB,OAAOsO,EAAcqJ,SAAS3X,EACjC,CAcA4X,gBAAgBrf,EAAS,MAAM,IAC5B,OAAO5I,KAAK8B,GAAGomB,SAASC,IACkB,GAAhCnoB,KAAKqkB,SAASnX,QAAQib,EAAEtpB,MAC/B+J,OAAOA,EACb,CAWAwf,gBAAgBxf,EAAS,MAAM,GAAM4E,GAElC,MAAM2Y,EAAS3Y,GAAQ,EAAEC,EAAGC,IAAMD,EAAEtM,MAAMilB,cAAc1Y,EAAEvM,QAC1D,OAAOnB,KAAK8B,GAAGomB,SAASC,GACdnoB,KAAKqkB,SAASnX,QAAQib,EAAEtpB,KAAO,IAErC+J,OAAOA,GACP4E,KAAK2Y,EACZ,CAiCAkC,WAAWC,GACR,IAAIC,EAAQD,EAAQE,MAAM,KAEtBC,EAAY,CAACjR,EAAKkR,KAEnB,GAAoB,GAAhBA,EAAMxiB,OACP,OAAOsR,EAIV,IAAIpT,EAAMskB,EAAMxU,QAIhB,GAAW,KAAP9P,EACD,OAAOqkB,EAAUzoB,KAAM0oB,GAK1B,GAAI1b,MAAMC,QAAQuK,GAIf,OAHAA,EAAMA,EAAI5O,QAAO,SAAU5J,GACxB,OAAOA,EAAEH,IAAMuF,CAClB,IAAG,GACIqkB,EAAUjR,EAAKkR,GAIzB,GAAIlR,GAAOA,EAAIpT,GACZ,OAAOqkB,EAAUjR,EAAIpT,GAAMskB,GAG9B,GAAW,YAAPtkB,EAAmB,CACpBkE,QAAQ6G,MAAM,IAAIjQ,MAAM,0CAGxB,IAAIL,EAAK6pB,EAAMxU,QACf,OAAOuU,EAAUzoB,KAAK8B,GAAG2V,WAAW5Y,GAAK6pB,EAC5C,CAKA,OADApgB,QAAQ6G,MAAM,4BAA8BmZ,GACrC,IAAI,EAGd,OAAOG,EAAUzoB,KAAMuoB,EAC1B,CAUAI,WAAWC,GAGR,OAAIA,EAAkB,KAAO5oB,KAAKnB,GAAK,IAC3B,IACf,CAUAgqB,UAAUD,GACP,OAAO5oB,KAAK2oB,WAAWC,GAAa,WACvC,CAUAE,QAAQF,GACL,OAAO5oB,KAAK2oB,WAAWC,GAAa,SACvC,CAUAG,SAASH,GACN,OAAO5oB,KAAK2oB,WAAWC,GAAa,WACvC,CAKII,uBACD,OAAOhpB,KAAKklB,mBAAmBC,MAClC,CAEI6D,qBAAiB7D,GAClBnlB,KAAKklB,mBAAmBC,OAASA,CACpC,CAEI8D,2BACD,OAAOjpB,KAAKklB,mBAAmBE,UAClC,CAEI6D,yBAAqB7D,GACtBplB,KAAKklB,mBAAmBE,WAAaA,CACxC,CAEI8D,8BACD,OAAOlpB,KAAKklB,mBAAmBG,aAClC,CAEI6D,4BAAwB7D,GACzBrlB,KAAKklB,mBAAmBG,cAAgBA,CAC3C,CAEI8D,wBACD,OAAOnpB,KAAKklB,mBAAmBI,OAClC,CAEI6D,sBAAkB7D,GACnBtlB,KAAKklB,mBAAmBI,QAAUA,CACrC,CAiBAZ,QAAQhf,GAKL,OAFAA,EAAOtB,IAAM,OAENua,EAAcyK,QAAQ1jB,EAAQ1F,KAAM,KAC9C,CASAqpB,SAASxqB,GACN,OAAOmB,KAAK6lB,OAAO9e,GAAMA,EAAElI,IAAMA,IAAI,EACxC,CASAyqB,QAAQ5jB,EAAQZ,EAAa4P,GAC1B,OAAOiK,EAAcyK,QAAQ1jB,EAAQZ,EAAa4P,EACrD,CAMAjP,YAIG,MAHuB,IAAIvG,MACxB,2EAKN,mBCj8BH,MAAM8jB,EAAY,EAAQ,OAM1B,IAAIuG,EAAgB,CACjB1qB,GAAI,OACJsC,MAAO,GACP6D,OAAQ,CAAC,EACTiT,MAAO,CAAC,EACR9R,SAAU,CACPqjB,aAAc,GACdC,qBAAsB,GACtBC,YAAa,GACbC,uBAAwB,GACxBC,gBAAiB,CACdC,iBAAkB,CAEfC,KAAM,MACNzI,MAAO,IAEVjV,WAAY,IAEf2d,SAAS,EAEThhB,UAAU,EACVihB,SAAS,EAETC,UAAW,GAEXC,SAAU,IAgChB3qB,EAAOC,QAAU,cAAmCwjB,EACjDrjB,YAAYsjB,EAAYnhB,GACrBhC,MAAM,CAAC,SAAUgC,GAEjBmhB,EAAaA,GAAc,CAAC,EAI5BjjB,KAAKgG,WAAWid,GAEhBjjB,KAAKmqB,iBAAmBnqB,KAAKoqB,mBAAmB,IAOhDpqB,KAAKqqB,0BAELrqB,KAAKsqB,mBAAqB,GAC1BtqB,KAAKuqB,mBAAqB,GAM1BvqB,KAAKwqB,YAAcxqB,KAAKyqB,eAAeC,WAEvC1qB,KAAK2qB,aAAe,IAIvB,CAYAC,oBACG,MAAO,gBACV,CAQA5kB,WAAWN,GAkGR,GAjGA1F,KAAKnB,GAAK6G,EAAO7G,GAIjBmB,KAAKkH,KAAOxB,EAAOwB,MAAQ,KAI3BlH,KAAK2B,KAAO+D,EAAO/D,MAAQ,iBAI3B+D,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCnG,KAAKmG,SAAWnG,KAAKmG,UAAY,CAAC,EAIlCnG,KAAKmG,SAASsjB,qBACX/jB,EAAOS,SAASsjB,sBAChBF,EAAcpjB,SAASsjB,qBAK1BzpB,KAAKmG,SAASujB,YACXhkB,EAAOS,SAASujB,aAAeH,EAAcpjB,SAASujB,YAKzD1pB,KAAKmG,SAASwjB,uBACXjkB,EAAOS,SAASwjB,wBAChBJ,EAAcpjB,SAASwjB,uBAI1B3pB,KAAKmG,SAASyjB,gBAAkBlkB,EAAOS,SAASyjB,iBAAmB,CAChEC,iBACGN,EAAcpjB,SAASyjB,gBAAgBC,iBAC1Czd,WAAYmd,EAAcpjB,SAASyjB,gBAAgBxd,YAMtDpM,KAAKmG,SAAS8jB,UAAYvkB,EAAOS,SAAS8jB,UAG1CjqB,KAAKmG,SAAS4jB,QAAUrW,KAAKuD,MAC1BvR,EAAOS,SAAS4jB,SAAWR,EAAcpjB,SAAS4jB,SAKrD/pB,KAAKmG,SAAS6jB,QAAUtW,KAAKuD,MAC1BvR,EAAOS,SAAS6jB,SAAWT,EAAcpjB,SAAS6jB,SAMrDhqB,KAAKmG,SAAS4C,SAEqBqP,MAA5B1S,EAAOS,SAAS4C,SACVrD,EAAOS,SAAS4C,SAGY,GAAnCrD,EAAOS,SAAS0kB,iBACmB,KAAnCnlB,EAAOS,SAAS0kB,iBAGLtB,EAAcpjB,SAAS4C,SAQxC/I,KAAKmG,SAAS+jB,SAAWxE,SACtBhgB,EAAOS,SAAS+jB,UAAYX,EAAcpjB,SAAS+jB,UAMtDlqB,KAAK8qB,aAAe,KAKpB9qB,KAAKmG,SAASqjB,aACX9jB,EAAOS,SAASqjB,cAAgBD,EAAcpjB,SAASqjB,aAKtDxpB,KAAKmG,SAASqjB,aAAc,CAE7B,IAAIhS,EAAMxX,KAAK8B,GAAG2V,WAAWzX,KAAKmG,SAASqjB,cACtChS,IAEFA,EAAMxX,KAAK8B,GAAGipB,UAAU/qB,KAAKmG,SAASqjB,eAGrChS,GACDxX,KAAK8qB,aAAetT,EACpBxX,KAAKmG,SAAS6jB,QAAuB,UAAbxS,EAAI7V,KACxB3B,KAAKmG,SAAS6jB,SACXhqB,KAAK8qB,aAAaxF,UACdtlB,KAAKgrB,mBACPhrB,KAAKgrB,iBAAmBhrB,KAAKirB,sBAKhCjrB,KAAKkrB,WAAY,IAIvB5iB,QAAQ6G,MACL,oBAAoBnP,KAAKkH,SAASlH,KAAKnB,kCAAkCmB,KAAKmG,SAASqjB,gBAGhG,CAsBA1pB,MAAMkG,WAAWN,EACpB,CAaAG,QACG,IAAI2R,EAAM1X,MAAM+F,QAEhB,MAAO,CACJhH,GAAImB,KAAKnB,GACTqI,KAAMlH,KAAKkH,MAAQlH,KAAKmB,MACxBQ,KAAM3B,KAAK2B,MAAQ,iBACnBwE,SAAUnG,KAAK8B,GAAG2D,UAAUzF,KAAKmG,UAAY,CAAC,GAC9Cof,aAAc/N,EAAI+N,aAExB,CAWArgB,aAKG,OAJKlF,KAAKnB,KACPmB,KAAKmB,MAAQnB,KAAKmB,OAASnB,KAAKkH,YAE7BpH,MAAM6H,OACL3H,IACV,CAWAuU,UACG,IAAI4W,EAAyB,IACnB,IAAI9b,SAAQ,CAAC+b,EAAMljB,KAGvB,MAAMmjB,EAAOrrB,KAAK8B,GAAGwpB,eAGrB,IAAIC,EAAa,GASjB,OAPqBF,EAAKziB,QAAQ6E,GACxBA,EAAEyY,yBAAyBlnB,GAAMA,EAAEH,IAAMmB,KAAKnB,OAEzCmF,SAASwnB,IACrBD,EAAWlnB,KAAKmnB,EAAIC,qBAAqBzrB,MAAM,IAG3CqP,QAAQkS,IAAIgK,GAAYpX,KAAKiX,GAAMhX,MAAMlM,EAAI,IAK1D,OAAOmH,QAAQ/P,UACX6U,MAAK,IACIgX,MAEThX,MAAK,IACIrU,MAAMyU,YAEfJ,MAAK,KACHnU,KAAKoP,KAAK,YAAY,GAE/B,CAOIsc,UACD,OAAO1rB,KAAKmqB,gBACf,CAQIwB,iBACD,IAAK3rB,KAAK8qB,aAAc,CACrB,GAAI9qB,KAAKnB,IAAMmB,KAAKkH,KAAM,CAGvB,IAAIgB,EAAM,IAAIhJ,MACX,kBAAkBc,KAAKkH,SAASlH,KAAKnB,oCAExCmB,KAAK8B,GAAGqG,OAAO,UAAWD,EAAK,CAAE0jB,eAAgB5rB,KAAK6F,SACzD,CACA,OAAO,IACV,CACA,IAAI2R,EAAMxX,KAAK8B,GAAG2V,WAAWzX,KAAK8qB,aAAajsB,IAI/C,OAHK2Y,IACFA,EAAMxX,KAAK8B,GAAGipB,UAAU/qB,KAAK8qB,aAAajsB,KAEtC2Y,CACV,CAQImU,eAAW3mB,GACZhF,KAAK8qB,aAAe9lB,EAEpBhF,KAAKqqB,yBACR,CAQIwB,iBACD,OAAO7rB,KAAKmG,SAAS6jB,QAAU,QAAU,QAC5C,CAQI8B,yBACD,OAAK9rB,KAAK8B,GAEH9B,KAAK8B,GAAGiqB,mBAAmB/rB,KAAKmG,SAASsjB,sBAF3B,IAGxB,CAQIuC,gBACD,IAAIhnB,EAAShF,KAAK2rB,WAClB,OAAK3mB,EAEEA,EAAO4I,UAAU5N,KAAKmG,SAASujB,aAFlB,IAGvB,CAQI3hB,YACD,IAAI/C,EAAShF,KAAK2rB,WAElB,OAAO3mB,EAASA,EAAO+C,QAAU,IACpC,CAEI0iB,qBACD,MAAO,CACJC,WAAY,EACZuB,aAAc,EACdC,YAAa,EAEnB,CAEIC,iBACD,OAAOnsB,KAAKwqB,WACf,CAMA4B,UAAUC,GAEP,GACGrsB,KAAKmG,SAAS8jB,YACc,uBAA3BjqB,KAAKmG,SAAS8jB,WACZjqB,KAAKmG,SAAS8jB,WAAaoC,GAE9B,OAEH,GAAIrsB,KAAKgrB,iBAAkB,CAExBhrB,KAAKssB,cAAcD,GAGnB,IAAIE,EAAavsB,KAAKgrB,iBAAiBwB,YACvC,GAAID,EAAY,CACb,IAAIE,EAAezsB,KAAKgrB,iBAAiB0B,QAAQH,GAC7CE,IAAcJ,EAASI,EAAaE,QAC3C,CACH,CAEA,IAAIC,EAAK5sB,KAAKmqB,iBACVyC,IAED5sB,KAAK6sB,mBAAqBD,EAAGJ,YAGf,MAAVH,EACDO,EAAGR,UAAU,MAGPQ,EAAGJ,aAAeH,EACxBrsB,KAAKoP,KAAK,eAAgBpP,KAAKwsB,aAGzBI,EAAGE,OAAOT,IAChBO,EAAGR,UAAUC,GAGtB,CAMAC,cAAcD,GACX,IAAIU,EAAK/sB,KAAKgrB,iBACd,GAAI+B,GAAMA,EAAGP,aAAeH,EAGzB,GADiBU,EAAGC,KAAK,CAAEnuB,GAAIwtB,IAAU,GAEtCU,EAAGX,UAAUC,OAGX,CACF,IAAIY,EAAWF,EAAGC,KAAK,CAAEL,QAASN,EAAQa,QAAS,IAAK,GACpDD,EAAUF,EAAGX,UAAUa,EAASpuB,IAC/BkuB,EAAGX,UAAU,KACrB,CAEN,CAEAI,UAAUW,GAAa,GAEpB,GAAIA,GAAcntB,KAAKgrB,iBAAkB,CACtC,IAAIoC,EAASptB,KAAKgrB,iBAAiBwB,YACnC,GAAIY,EAAQ,CACT,IAAIC,EAAWrtB,KAAKgrB,iBAAiB0B,QAAQU,GAG7CptB,KAAKgrB,iBAAiBpiB,QAClBoF,GAASA,EAAK2e,SAAWU,EAASV,UAItC,IAAIW,EACDttB,KAAKgrB,iBAAiBuC,YAAY,IAAM,KAK3C,OAFAvtB,KAAKwtB,oBAEEF,CACV,CACH,CAEA,IAAIV,EAAK5sB,KAAKmqB,iBACd,GAAU,MAANyC,EAAY,OAAO,KAEvB,IAAIQ,EAASR,EAAGJ,YAGhB,OAFeI,EAAGF,QAAQU,EAG7B,CAEAK,iBACG,IAAIb,EAAK5sB,KAAKmqB,iBACd,GAAU,MAANyC,EAAY,OAAO,KAEvB,IAAIQ,EAASR,EAAGc,aAGhB,OAFed,EAAGF,QAAQU,EAG7B,CAEAO,cAAcC,GACX,IAAIhB,EAAK5sB,KAAKmqB,iBACd,GAAU,MAANyC,EAAY,OAAO,KAEvB,IAAIQ,EAASR,EAAGiB,UAAUD,EAAO/uB,IAGjC,OAFe+tB,EAAGF,QAAQU,EAG7B,CAQAI,oBAGG,IAAKxtB,KAAKmG,SAAS4jB,QAAS,OAS5B,IAAI+D,EACAC,EAAS/tB,KAAK8rB,mBACdiC,IACDD,EAAaC,EAAOvB,aAGvB,IAAIwB,EAAcC,GAKVH,EACO9tB,KAAKkuB,oBAAoBD,IADbF,EAIvB/tB,KAAKmqB,kBAAkBnqB,KAAKmqB,iBAAiBvhB,OAAOolB,GACpDhuB,KAAKgrB,kBAAkBhrB,KAAKgrB,iBAAiBpiB,OAAOolB,EAC3D,CAEAG,kBACG,GAAInuB,KAAKmG,SAAS8jB,UAEf,GAA+B,gBAA3BjqB,KAAKmG,SAAS8jB,UAA6B,CAC5C,IAAI1Z,EAAWvQ,KAAKouB,sBAChBC,EAAaruB,KAAK2rB,WAAW7kB,QAAQC,GAAe,QAATA,EAAE3C,MAG7Cgb,EAAMpf,KAAKmqB,iBAAiB6C,MAAMzd,IACnC,IAAI+e,GAAQ,EAeZ,OAbAD,EAAWrqB,SAAS+C,IACbunB,GAA4B,MAAnB/e,EAAExI,EAAEF,cAEb0I,EAAExI,EAAEF,YAAY+B,OAEjB0lB,EACG/e,EAAExI,EAAEF,YAAY+B,QAAQe,GAASA,EAAK9K,IAAM0R,IACxCrK,OAAS,EACRqJ,EAAExI,EAAEF,aAAe0J,IAC3B+d,GAAQ,GACX,IAGIA,CAAK,IACZ,GAGClP,IACDpf,KAAKmqB,iBAAiBiC,UAAUhN,EAAIvgB,IAEpCmB,KAAKssB,cAAclN,EAAIvgB,IAE7B,MAAO,GACuB,gBAA3BmB,KAAKmG,SAAS8jB,WACa,uBAA3BjqB,KAAKmG,SAAS8jB,UACf,CAgBC,IAAIsE,EAAYvuB,KAAKmqB,iBAAiBqC,YACtC,IACI+B,GACAA,IAAcvuB,KAAKmqB,iBAAiB2C,OAAOyB,GAC7C,CAIC,IAAIC,EAAQxuB,KAAKmqB,iBAAiBuD,aAElC1tB,KAAKmqB,iBAAiBiC,UAAUoC,GAAS,MAEzCxuB,KAAKssB,cAAckC,EAEtB,CACH,MACGxuB,KAAKmqB,iBAAiBiC,UAAUpsB,KAAKmG,SAAS8jB,WAE9CjqB,KAAKssB,cAActsB,KAAKmG,SAAS8jB,WAKvC,GAAIjqB,KAAKyuB,eAAgB,CACtB,MAAMD,EAAQxuB,KAAKmqB,iBAAiBuD,aACpC1tB,KAAKosB,UAAUoC,GAAS,MACxBxuB,KAAKssB,cAAckC,GAAS,MAG5B,MAAME,EAAW1uB,KAAK2uB,sBACjBH,GAASE,EAASlC,aACpBxsB,KAAK4uB,UAEX,CACH,CAaAC,gBAAgBC,EAAO,MACpB9uB,KAAK2qB,aAAemE,CACvB,CAEAzrB,OAEG,GAAIrD,KAAKksB,YAAa,OACtBlsB,KAAKksB,aAAc,EAEdlsB,KAAKmqB,iBAAiB4E,MAAMC,sBAC9BhvB,KAAKmqB,iBAAiB4E,MAAMC,oBACzBhvB,KAAKmqB,iBAAiB8E,YAAY,uBAAuB,KAEtD,IAAIC,EAAWlvB,KAAKwsB,YAEpBxsB,KAAKoP,KAAK,eAAgB8f,EAAS,KAK5C,IAAIC,EAAY,CAACC,EAAYZ,EAAOa,EAAK,OAClCriB,MAAMC,QAAQmiB,GACRA,EAAWxmB,QAAQqK,IAAOA,EAAEoc,IAAOpc,IAAMub,IAAOtoB,OAAS,EAEzDkpB,IAAeA,EAAWC,IAAOD,IAAeZ,EAK7DxuB,KAAKmC,GAAG,4BAA6BwH,IAElC,GAAI3J,KAAKyuB,eAAgB,OAEzB,IAAIjX,EAAMxX,KAAK2rB,WACf,IAAKnU,EAAK,OAEV,IAAK7N,IAASA,EAAKA,KAAM,OAEzB,IAAI2lB,GAAU,EACVC,EAAc,GAElBlgB,QAAQ/P,UACJ6U,MAAK,IACI,IAAI9E,SAAQ,CAAC+b,EAAMoE,KAEvB,GAAIhY,aAAexX,KAAK8B,GAAG2c,MAAMgR,cAAe,CAC7C,IAAIC,EACDlY,EAAI8O,SAAStnB,GAAMA,EAAEH,IAAM8K,EAAK+N,YAAa,GAIhD,GAFA4X,EAAUI,EAAQxpB,OAAS,GAEtBopB,EAAS,OAAOlE,IAErB,IAAIuE,EAAQ,CACT7F,KAAM,KACNzI,MAAO,IAGVqO,EAAQ1rB,SAAShF,IACd,IAAI4wB,EAAYjmB,EAAKA,KAAK,GAAG3K,EAAEqwB,QAC1BO,GAELD,EAAMtO,MAAMhd,KAAK,CACdD,IAAK,GAAGpF,EAAE6wB,OAASrY,EAAIsY,YAAY9wB,EAAEH,OAAOG,EAAEqwB,OAC9CU,KAAM,SACNrtB,MAAOktB,GACR,IAGLpY,EAAIzP,QACAioB,QAAQ,CACNL,MAAOA,IAETxb,MAAM8b,IACJV,EAAcU,EAAatmB,MAAQ,GACnC4lB,EAAYvrB,SAASiP,WACXA,EAAEpU,EAAE,IAGdusB,GAAM,IAERhX,MAAMob,EACb,MAGGF,EAAU9X,EAAI3Y,IAAM8K,EAAK+N,SACzB6X,EAAc,CAAC5lB,EAAKA,MACpByhB,GACH,MAGLjX,MAAK,KAsGH,GArGImb,IAEW9X,EAAIzP,SAMfwnB,GAAe,IAAIvrB,SAASksB,IAErBlwB,KAAKmwB,YAAYD,KAKlBlwB,KAAKmqB,iBAAiB2C,OACpBoD,EAAS,GAAG1Y,EAAI6X,UAElBrvB,KAAKowB,gBAMLpwB,KAAKmqB,iBAAiB2C,OACpBoD,EAAS,GAAG1Y,EAAI6X,UAEnBrvB,KAAKowB,gBAGDpwB,KAAKkuB,oBAAoBgC,IAGvBlwB,KAAKsqB,mBAAmBxC,OACrB9nB,KAAKuqB,oBAEQvmB,SAASqsB,IAEzB,GAAI3sB,GAAG2sB,EAAQ,eACZ,OAAO,EAIV,IAAIC,EAAM,EACN5b,EAAShR,GAAG2sB,GAAO/kB,gBACnB5H,GAAG2sB,GAAO/kB,gBAAgBM,MAC3B0kB,EAAM5sB,GAAG2sB,GACL/kB,gBACAM,MAAMlI,GAAG2sB,IAEb3sB,GAAG2sB,GAAO/kB,gBAAgBA,gBAAgBM,QAK1C8I,EAAShR,GAAG2sB,GACR/kB,gBACAA,gBACJglB,EAAM5sB,GAAG2sB,GACL/kB,gBACAA,gBACAM,MAAMlI,GAAG2sB,GAAO/kB,kBAIvB,IAAIilB,EAAKvwB,KAET,GAAI0U,EAAO5J,QAAS,CACjB,IAAI/K,EAAIC,KAAK8B,GAAG7B,QAChByU,EAAO5J,QACJ,CACGjM,GAAIwxB,EAAQ,cACZ3vB,KAAM,SACNgC,MAAO3C,EACJ,wCAEHkB,IAAK,2BACLK,MAAO,SAAUzC,EAAI2xB,GAClBD,EAAGE,aACH/sB,GAAG7E,GAAIyM,gBAAgBD,WAAWxM,EACrC,GAEHyxB,EAEN,MAhENtwB,KAAKmqB,iBAAiB/I,IAAI8O,EAAU,GACpClwB,KAAKoP,KAAK,SAAU8gB,IAmEvB,IAIAlwB,KAAKgrB,kBAELhrB,KAAK0wB,oBAAoB,CACtB/mB,KAAM4lB,OAMT/X,aAAexX,KAAK8B,GAAG2c,MAAMgR,eAAgB,CAEhD,IAAI5I,EAAkB7mB,KAAK2rB,WAAW7E,eAClC/f,GACEA,EAAEJ,gBAAkBI,EAAEJ,eAAe9H,IAAM8K,EAAK+N,WAOtD,GAHA6X,EAAcA,EAAY,GAIvBA,GACA1I,GACAA,EAAgB3gB,OAAS,EAC1B,CAEC,IAAImpB,EAAKxI,EAAgB,GAAG7hB,OAAOqqB,KAC9BE,EAAY1wB,IAAY,MAANwwB,IACpBE,EAAY1wB,GAAK0wB,EAAYF,IAEhCrvB,KAAKmqB,iBAAiB6C,KAAK,CAAC,GAAGhpB,SAAS2sB,IACrC,IAAIC,EAAiB,CAAC,EAEtB/J,EAAgB7iB,SAAS+C,IACtB,IAAI8pB,EAAkB,CAAC,EACnB9pB,GAAKA,EAAEilB,YACR6E,EACGtB,EAAYxoB,EAAEilB,UAAU8E,iBAAmB,CAAC,GAGlD,IAAIC,EAAeJ,EAAE5pB,EAAE+pB,iBAAmB,CAAC,EAEvCE,EAAe7B,EAChB0B,EACAF,EAAE9xB,GACFwwB,GAKAriB,MAAMC,QAAQ8jB,IACdA,EAAanoB,QACTqK,GACEA,GAAKsc,EAAY1wB,IACjBoU,EAAEpU,IAAM0wB,EAAY1wB,IACpBoU,EAAEoc,IAAOE,EAAY1wB,KACzBqH,OAAS,GACX8qB,GAEAD,EAAa1sB,KAAKkrB,GAElBqB,EAAe7pB,EAAE+pB,gBAAkBC,EACnCH,EAAe7pB,EAAEF,YAAc+pB,EAC5B7pB,EAAE+pB,gBACHpyB,KAAKuU,GAAMA,EAAEpU,IAAMoU,EAAEoc,IAAOpc,KAE7BjG,MAAMC,QAAQ8jB,IACdA,GAAgBxB,EAAY1wB,IAC1BkyB,EAAalyB,IAAM0wB,EAAY1wB,IAC/BkyB,EAAa1B,IAAOE,EAAY1wB,KACnCmyB,IAEAJ,EAAe7pB,EAAE+pB,gBAAkBvB,EACnCqB,EAAe7pB,EAAEF,YACd0oB,EAAY1wB,IAAM0wB,EACxB,IAIClwB,OAAOD,KAAKwxB,GAAgB1qB,OAAS,IAE1BsR,EAAIzP,QAMhB/H,KAAKmqB,iBAAiB8G,WACnBN,EAAE9xB,GACF+xB,GAGC5wB,KAAKgrB,kBACNhrB,KAAKgrB,iBAAiBiG,WACnBN,EAAE9xB,GACF+xB,GAGN5wB,KAAKoP,KACF,SACApP,KAAKmqB,iBAAiBuC,QAAQiE,EAAE9xB,KAEtC,GAEN,CACH,CAGAmB,KAAKwtB,oBACLxtB,KAAKmuB,iBAAiB,GACvB,IAGRnuB,KAAKmC,GAAG,4BAA6BwH,IAOlC,IAAI6N,EAAMxX,KAAK2rB,WACf,IAAKnU,EAAK,OAGV,IAAI9R,EAASiE,EAAKA,KAClB,IAAKjE,EAAQ,OAGb,GAAI1F,KAAKwsB,aAAa3tB,KAAO6G,EAAO8R,EAAI6X,OAAS3pB,EAAO7G,IACrD,OAEH,IAAIqyB,GAAa,EACbC,GAAW,EACXC,EAAa,GAKbC,EAAiB,GACjB9B,EAAc,CAAC,EAGnB,GAAI/X,aAAexX,KAAK8B,GAAG2c,MAAMgR,cAAe,CAC7C,IAAIC,EAAUlY,EAAI8O,SAAStnB,GAAMA,EAAEH,IAAM8K,EAAK+N,YAAa,GAC3DwZ,EAAaxB,EAAQxpB,OAAS,EAC1BgrB,KACAxB,GAAW,IAAI1rB,SAAShF,IACtBoyB,EAAaA,EAAWtJ,OACrB9nB,KAAKmqB,iBACD6C,MAAMhf,GAEDA,EACG,GAAGhO,KAAK2rB,WAAWmE,YAChB9wB,EAAEH,OACAG,EAAEqwB,UACJ3pB,EAAO1G,EAAEqwB,OAAS3pB,EAAO7G,MAGpCH,KAAKM,GAAMA,EAAEH,MAAO,IAIvBmB,KAAKgrB,mBACNqG,EAAiBA,EAAevJ,OAC7B9nB,KAAKgrB,iBACDgC,MAAMhf,GAEDA,EACG,GAAGhO,KAAK2rB,WAAWmE,YAChB9wB,EAAEH,OACAG,EAAEqwB,UACJ3pB,EAAO1G,EAAEqwB,OAAS3pB,EAAO7G,MAGpCH,KAAKM,GAAMA,EAAEH,MAAO,IAE9B,IAGHsyB,EAAWC,EAAWlrB,OAAS,EAE/BqpB,EAAcvvB,KAAKsxB,iBAAiB5B,EAAShqB,GAEnD,MAGGwrB,EAAa1Z,EAAI3Y,IAAM8K,EAAK+N,SACxBwZ,IAEIxrB,EAAO7G,IAAkB,MAAZ2Y,EAAI6X,OAAc3pB,EAAO7G,GAAK6G,EAAO8R,EAAI6X,OAE3D+B,EAAW/sB,KAAKqB,EAAO7G,IAEvBsyB,EAAWnxB,KAAKmqB,iBAAiB2C,OAAOpnB,EAAO7G,IAC/C0wB,EAAc7pB,GAKpB,GAAIwrB,EACD,GAAIC,EACD,GAAInxB,KAAKmwB,YAAYZ,GAAc,CAO5BvvB,KAAKmqB,mBACNiH,EAAapxB,KAAK8B,GAAG2gB,KAAK2O,GAC1BA,EAAWptB,SAASqoB,IACjBrsB,KAAKmqB,iBAAiB8G,WAAW5E,EAAQkD,EAAY,KAIvDvvB,KAAKgrB,mBAENqG,EAAiBrxB,KAAK8B,GAAG2gB,KAAK4O,GAC9BA,EAAertB,SAASqoB,IACrBrsB,KAAKgrB,iBAAiBiG,WAAW5E,EAAQkD,EAAY,KAI3DvvB,KAAKoP,KAAK,SAAUmgB,GAGpB,IAAIL,EAAWlvB,KAAKwsB,YAChB0C,GAAYA,EAASrwB,IAAM0wB,EAAY1wB,IACxCmB,KAAKoP,KAAK,eAAgB8f,EAEhC,MAKGkC,EAAWptB,SAASnF,IAEjB,IAAIqwB,EAAWlvB,KAAKwsB,YAChB0C,GAAYA,EAASrwB,IAAMA,GAC5BmB,KAAKoP,KAAK,eAAgB,MAE7BpP,KAAKmqB,iBAAiBpP,OAAOlc,GAO7BmB,KAAKoP,KAAK,SAAUvQ,EAAG,SAKvBmB,KAAKmwB,YAAYZ,KAGvBvvB,KAAKmqB,iBAAiB/I,IAAImO,EAAa,GAEnCvvB,KAAKgrB,kBACNhrB,KAAK0wB,oBAAoB,CACtB/mB,KAAM,CAAC4lB,KAGbvvB,KAAKoP,KAAK,SAAUmgB,IAK1B,IAAI1I,EAAkBrP,EAAIsP,eACtB/f,GAAMA,EAAEJ,gBAAkBI,EAAEJ,eAAe9H,IAAM8K,EAAK+N,WAI1D,GACGF,aAAexX,KAAK8B,GAAG2c,MAAM8S,UAC7B1K,GACAA,EAAgB3gB,OAAS,EAC1B,CAEC,IAAImpB,EAAKxI,EAAgB,GAAG7hB,OAAOqqB,KAC9B3pB,EAAO7G,IAAY,MAANwwB,IAAY3pB,EAAO7G,GAAK6G,EAAO2pB,IAE7CrvB,KAAKmqB,iBAAiBqH,QAAU,GACjCxxB,KAAKmqB,iBAAiB6C,KAAK,CAAC,GAAGhpB,SAAS2sB,IACrC,IAAIC,EAAiB,CAClB/xB,GAAI8xB,EAAE9xB,IAqFT,GAlFAgoB,EAAgB7iB,SAAS+C,IACtB,IAAKA,EAAG,OAER,IAAI8pB,EAAkB,CAAC,EACnBE,EAAeJ,EAAE5pB,EAAE+pB,iBAAmB,CAAC,EAEvC/pB,EAAEilB,YACH6E,EACGnrB,EAAOqB,EAAEilB,UAAU8E,iBAAmB,CAAC,GAE7C,IAAIE,EAAe7B,EAAU0B,EAAiBF,EAAE9xB,GAAIwwB,GAIjDriB,MAAMC,QAAQ8jB,IACdA,EAAanoB,QACTqK,GACEA,GAAKvN,EAAO7G,IACZoU,EAAEpU,IAAM6G,EAAO7G,IACfoU,EAAEoc,IAAO3pB,EAAO7G,KACpBqH,OAAS,IACV8qB,GAEDJ,EAAe7pB,EAAE+pB,gBAAkBC,EAAanoB,QAC5CqK,IAAOA,EAAEpU,IAAMoU,EAAEoc,IAAOpc,IAAMvN,EAAO7G,KAEzC+xB,EAAe7pB,EAAEF,YAAc+pB,EAC5B7pB,EAAE+pB,gBACHpyB,KAAKuU,GAAMA,EAAEpU,IAAMoU,EAAEoc,IAAOpc,KAE7BjG,MAAMC,QAAQ8jB,IACdA,GAAgBrrB,EAAO7G,IACrBkyB,EAAalyB,IAAM6G,EAAO7G,IAC1BkyB,EAAa1B,IAAO3pB,EAAO7G,IAC7BmyB,IAEDJ,EAAe7pB,EAAE+pB,gBAAkB,KACnCF,EAAe7pB,EAAEF,YAAc,MAI9BmG,MAAMC,QAAQ8jB,IAAiBC,GAG7BD,EAAanoB,QACTqK,GACEA,GAAKvN,EAAO7G,IACZoU,EAAEpU,IAAM6G,EAAO7G,IACfoU,EAAEoc,IAAO3pB,EAAO7G,KACpBqH,OAAS,EAEX6qB,EAAa/sB,SAAQ,CAACiP,EAAGrH,KAEnBqH,GAAKvN,EAAO7G,IACZoU,EAAEpU,IAAM6G,EAAO7G,IACfoU,EAAEoc,IAAO3pB,EAAO7G,KAEhBkyB,EAAanlB,GAASlG,EAAM,IAKlCqrB,EAAa1sB,KAAKqB,GAGrBkrB,EAAe7pB,EAAE+pB,gBAAkBC,EACnCH,EAAe7pB,EAAEF,YAAc+pB,EAC5B7pB,EAAE+pB,gBACHpyB,KAAKuU,GAAMA,EAAEpU,IAAMoU,EAAEoc,IAAOpc,KAE7BjG,MAAMC,QAAQ8jB,IACdA,GAAgBrrB,EAAO7G,IACrBkyB,EAAalyB,IAAM6G,EAAO7G,IAC1BkyB,EAAa1B,IAAO3pB,EAAO7G,KAC9BmyB,IAEAJ,EAAe7pB,EAAE+pB,gBAAkBprB,EACnCkrB,EAAe7pB,EAAEF,YAAcnB,EAAO7G,IAAM6G,EAC/C,IAICrG,OAAOD,KAAKwxB,GAAgB1qB,OAAS,EAAG,CAQzC,GAAIlG,KAAKgrB,kBAAkB8B,OAAO6D,EAAE9xB,IAAK,CACtC,MAAMouB,EAAW5tB,OAAOoyB,OACrBzxB,KAAKgrB,iBAAiB0B,QAAQiE,EAAE9xB,IAChC+xB,GAEH5wB,KAAKgrB,iBAAiBiG,WAAWN,EAAE9xB,GAAIouB,EAC1C,CAEA,GAAIjtB,KAAKmqB,kBAAkB2C,OAAO6D,EAAE9xB,IAAK,CACtC,MAAM6yB,EAASryB,OAAOoyB,OACnBzxB,KAAKmqB,iBAAiBuC,QAAQiE,EAAE9xB,IAChC+xB,GAEH5wB,KAAKmqB,iBAAiB8G,WAAWN,EAAE9xB,GAAI6yB,GACvC1xB,KAAKoP,KACF,SACApP,KAAKmqB,iBAAiBuC,QAAQiE,EAAE9xB,IAEtC,CACH,IAGT,CAEAmB,KAAKwtB,oBACLxtB,KAAKmuB,iBAAiB,IAKzBnuB,KAAKmC,GAAG,2BAA4BwH,IAIjC,GACI3J,KAAK2rB,YACL3rB,KAAK+H,OACN/H,KAAK2rB,WAAW9sB,IAAM8K,EAAK+N,SAH9B,CASA,IAAIhS,EAASiE,EAAKA,KAElB,GAAKjE,EAAL,CAGA,IAAI2pB,EAAKrvB,KAAK+H,MAAM/C,OAAOqqB,KAM3B,GALK3pB,EAAO2pB,KACTA,EAAK,OAKLrvB,KAAKyuB,gBACLzuB,KAAKwsB,cAAc6C,KAAQ3pB,EAAO2pB,IAAO3pB,EAAO7G,IAFnD,CAOA,GAAI6G,GACG1F,KAAKmqB,iBAAiB2C,OAAOpnB,EAAO2pB,IAAM,CAC3C,IAAIP,EAAO,CAAEa,MAAO,CAAC,GACrBb,EAAKa,MAAMN,GAAM3pB,EAAO2pB,GAExBrvB,KAAK+H,MAAM4pB,aAAa7C,GAAM3a,MAAMmG,IAEjC,GAAItN,MAAMC,QAAQqN,EAAI3Q,OAAS2Q,EAAI3Q,KAAKzD,OAAQ,CAG7C,IADUlG,KAAK2rB,WACL,OASN3rB,KAAKmqB,iBAAiB2C,OAAOpnB,EAAO2pB,KACrCrvB,KAAKmqB,iBAAiB8G,WACnBvrB,EAAO2pB,GACP/U,EAAI3Q,KAAK,IAKf,IAAIulB,EAAWlvB,KAAKwsB,YAChB0C,GAAYA,EAASG,IAAO3pB,EAAO2pB,IACpCrvB,KAAKoP,KAAK,eAAgB8f,EAEhC,MAGgBlvB,KAAKwsB,aACJ9mB,EAAO2pB,IAAKrvB,KAAKoP,KAAK,eAAgB,MAEpDpP,KAAKmqB,iBAAiBpP,OAAOrV,EAAO2pB,IACpCrvB,KAAKoP,KAAK,SAAU1J,EAAO2pB,GAC9B,GAEN,CAIHrvB,KAAKwtB,oBACLxtB,KAAKmuB,iBAhDL,CAdmB,CALnB,CAmEsB,IAGzBnuB,KAAKmC,GAAG,4BAA6BwH,IAElC,IAAI6N,EAAMxX,KAAK2rB,WACf,IAAKnU,EAAK,OAEV,IAAIoa,EAAWjoB,EAAKA,KAChBkoB,GAAa,EACbC,EAAa,GACbC,EAAiB,GAGrB,GAAIva,aAAexX,KAAK8B,GAAG2c,MAAMgR,cAAe,CAC7C,IAAIC,EAAUlY,EAAI8O,SAAStnB,GAAMA,EAAEH,IAAM8K,EAAK+N,YAAa,GAC3Dma,EAAanC,EAAQxpB,OAAS,EAC1B2rB,IACAnC,GAAW,IAAI1rB,SAAShF,IACtB8yB,EACG9xB,KAAKmqB,iBACD6C,MAAMhf,GACGA,EAAK,GAAGhP,EAAE6wB,SAAS7wB,EAAEqwB,SAAWuC,IAEzClzB,KAAKM,GAAMA,EAAEH,MAAO,GAGvBmB,KAAKgrB,mBACN+G,EACG/xB,KAAKgrB,iBACDgC,MAAMhf,GACGA,EAAK,GAAGhP,EAAE6wB,SAAS7wB,EAAEqwB,SAAWuC,IAEzClzB,KAAKM,GAAMA,EAAEH,MAAO,GAC9B,GAGT,MAGGgzB,EAAara,EAAI3Y,IAAM8K,EAAK+N,SACxBma,GACDC,EAAWztB,KAAKutB,GAKtB,GAAIC,EAAY,CAEb,IAAI3C,EAAWlvB,KAAKwsB,YAEpBsF,EAAW9tB,SAASguB,IACb9C,GAAYA,EAAS1X,EAAI6X,OAAS2C,GACnChyB,KAAKoP,KAAK,eAAgB,MAEzBpP,KAAKmqB,iBAAiB2C,OAAOkF,IAC9BhyB,KAAKmqB,iBAAiBpP,OAAOiX,EAAM,IAGrChyB,KAAKgrB,kBACN+G,EAAe/tB,SAASguB,IACjBhyB,KAAKgrB,iBAAiB8B,OAAOkF,IAC9BhyB,KAAKgrB,iBAAiBjQ,OAAOiX,EAAM,IAIxCF,EAAW,IAAI9xB,KAAKoP,KAAK,SAAU0iB,EAAW,GACrD,CAGA,IAAIjL,EAAkBrP,EAAIsP,eACtB/f,GAAMA,EAAEJ,gBAAkBI,EAAEJ,eAAe9H,IAAM8K,EAAK+N,WAI1D,GACGF,aAAexX,KAAK8B,GAAG2c,MAAM8S,UAC7B1K,GACAA,EAAgB3gB,OAAS,EAC1B,CAEC,IAAImpB,EAAKxI,EAAgB,GAAG7hB,OAAOqqB,KAEnCrvB,KAAKmqB,iBAAiB6C,KAAK,CAAC,GAAGhpB,SAAS2sB,IACrC,IAAIsB,EAAmB,CAAC,EAExBpL,EAAgB7iB,SAAS+C,IACtB,IAAImrB,EAAYvB,EAAE5pB,EAAE+pB,gBACH,MAAboB,IAGDllB,MAAMC,QAAQilB,IAWdD,EAAiBlrB,EAAE+pB,gBAAkBoB,EAAUtpB,QAC3CqK,IAAOA,EAAEpU,IAAMoU,EAAEoc,IAAOpc,IAAM2e,IAElCK,EAAiBlrB,EAAEF,YAAcorB,EAC9BlrB,EAAE+pB,gBACHpyB,KAAKuU,GAAMA,EAAEpU,IAAMoU,EAAEoc,IAAOpc,KAE9Bif,GAAaN,GACbM,EAAUrzB,IAAM+yB,GAChBM,EAAU7C,IAAOuC,IAEjBK,EAAiBlrB,EAAE+pB,gBAAkB,KACrCmB,EAAiBlrB,EAAEF,YAAc,MACpC,IAICxH,OAAOD,KAAK6yB,GAAkB/rB,OAAS,IAMxClG,KAAKmqB,iBAAiB8G,WAAWN,EAAE9xB,GAAIozB,GAEnCjyB,KAAKgrB,kBACNhrB,KAAKgrB,iBAAiBiG,WAAWN,EAAE9xB,GAAIozB,GAE1CjyB,KAAKoP,KAAK,SAAUpP,KAAKmqB,iBAAiBuC,QAAQiE,EAAE9xB,KACvD,GAEN,KAIH,MAAMszB,EAASnyB,KAAK8rB,mBAEhBqG,GACDnyB,KAAKoyB,SAAS,CACXC,QAASF,EACTG,UAAW,eACXC,SAAWC,IAEHxyB,KAAKmG,UAAU4jB,SAAWyI,GAAe3zB,IAAMszB,EAAOM,kBACxDzyB,KAAKgb,WAERhb,KAAKwtB,oBACLxtB,KAAKmuB,iBAAiB,IAM/B,MAAMuE,EAAW1yB,KAAK2uB,qBAClB+D,GACD1yB,KAAKoyB,SAAS,CACXC,QAASK,EACTJ,UAAW,eACXC,SAAU,KACP,MAAMI,EAAeD,EAASlG,YACxBgG,EAAgBxyB,KAAKwsB,YAGvBmG,IAAeD,EAAS/G,WAAW0D,OAASmD,IAAgBxyB,KAAK2rB,WAAW0D,QAGhFrvB,KAAKgb,WACLhb,KAAK4uB,WAAU,GAI3B,CAYA1pB,wCAAwCqrB,EAAItR,GAGzC,OAFAsR,EAAGltB,OAEI,IAAIgM,SAAQ,CAAC/P,EAAS+W,KAC1B,OAAQka,EAAGpE,YAER,KAAKoE,EAAG9F,eAAeC,WACpB6F,EAAG3B,WAAWxa,MAAMiC,GAKvB,KAAKka,EAAG9F,eAAewB,aAIpBjsB,KAAK4yB,YAAY,mBACjB5yB,KAAKoyB,SAAS,CACXC,QAAS9B,EACT+B,UAAW,kBACXC,SAAU,KAEPjzB,GAAS,IAGf,MAGH,KAAKixB,EAAG9F,eAAeyB,YAKvB,QACG5sB,IAEN,GAEN,CAEA4F,eAAe2tB,EAAOC,GAEf9yB,KAAKwqB,aAAexqB,KAAKyqB,eAAeC,aACzC1qB,KAAKwqB,YAAcxqB,KAAKyqB,eAAewB,aACvCjsB,KAAKoP,KAAK,mBAAoB,CAAC,IAGlC,IAAIoI,EAAMxX,KAAK2rB,WACf,GAAW,MAAPnU,EAED,OADAxX,KAAKwqB,YAAcxqB,KAAKyqB,eAAeyB,YAChC7c,QAAQ/P,QAAQ,IAG1B,IAAIyI,EAAQyP,EAAIzP,QAChB,GAAa,MAATA,EAED,OADA/H,KAAKwqB,YAAcxqB,KAAKyqB,eAAeyB,YAChC7c,QAAQ/P,QAAQ,IAI1B,IAAIkN,EAAQxM,KAAKmG,SAASyjB,gBAAgBxd,YAAc,GAGxD,IAAI2mB,EAAS/yB,KAAK8B,GAAG2D,UAClBzF,KAAKmG,SAASyjB,gBAAgBC,kBAAoB,MAGjD7pB,KAAKowB,iBACN2C,EAAS/yB,KAAKowB,gBAGjB,MAAM4C,EAAqB,CACxBlJ,KAAM,MACNzI,MAAO,IAGNrhB,KAAK2qB,cACNqI,EAAmB3R,MAAMhd,KAAKrE,KAAK2qB,cAItC,MAAMsI,EAAqBjzB,KAAK8rB,mBAC1BE,EAAYhsB,KAAKgsB,UACvB,IAAKhsB,KAAKmG,SAAS4jB,SAAWkJ,GAAsBjH,EAAW,CAC5D,MAAMkH,EAAeD,GAAoBzG,aAAa3tB,GAClDq0B,GACDF,EAAmB3R,MAAMhd,KAAK,CAC3BwrB,MAAO7D,EAAU6D,MACjBzrB,IAAK4nB,EAAUntB,GACfkxB,KAAM/D,EAAU6D,MAAQ,WAAa,SACrCntB,MAAOspB,EAAUmH,iBACdF,EAAmB9I,iBAAiBuC,QAAQwG,KAIxD,MAEK,GAAIlzB,KAAK2uB,qBAAsB,CACjC,MAAMgE,EAAe3yB,KAAK2uB,qBAAqBnC,YAE/C,IAAI6C,EAAKrvB,KAAK2rB,WAAW0D,KAIrBrvB,KAAK2uB,qBAAqBxoB,SAAS6jB,UACpCqF,EAAK,eAAiBA,GAErBsD,GACDE,EAAQ,EACRC,EAAQ,KACRC,EAAS,CACNjJ,KAAM,MACNzI,MAAO,CACJ,CACGjd,IAAKpE,KAAK2rB,WAAW0D,KACrBU,KAAM,SACNrtB,MAAOiwB,EAAatD,OAO7B0D,EAAS,CACNjJ,KAAM,MACNzI,MAAO,CACJ,CACGjd,IAAKpE,KAAK2rB,WAAW0D,KACrBU,KAAM,SACNrtB,MAAO,kBAKtB,CAGIswB,EAAmB3R,MAAMnb,SAC1B8sB,EAAmB3R,MAAM+R,QAAQL,GACjCA,EAASC,GAIRD,GAAQ1R,OAAOzY,SAAQmqB,EAAO1R,MAAQ0R,EAAO1R,MAAMzY,QAAQ2G,GAAMA,KAGrE,IAAIuf,EAAO,CACRa,MAAOoD,GAAU,CAAC,EAElBM,KAAMR,GAAS,EACfrlB,KAAMhB,EACNzD,SACG/I,KAAKmG,SAAS4C,WACb/I,KAAKmG,SAAS0kB,iBAKR,MAATiI,IACDhE,EAAKgE,MAAQA,GAIZ9yB,KAAKmG,SAAS4jB,UAAY/pB,KAAKyuB,uBACzBK,EAAKgE,MAOf,MAAMQ,EAAWtzB,KAAK8rB,oBAAsB9rB,KAAK2uB,qBAUjD,GARI2E,SACKtzB,KAAKuzB,kCAAkCD,GAO5CP,GAAQ1R,OAAOnb,OAAQ,CACxB,MAAMstB,EAAY,GAElBT,EAAO1R,MAAMrd,SAAS+rB,IAEnB,GACgB,sBAAbA,EAAKA,MACQ,0BAAbA,EAAKA,KACN,CACC,MAAM0D,EAAKzzB,KAAK8B,GAAGiqB,mBAAmBgE,EAAKrtB,OACvC+wB,GACDD,EAAUnvB,KAAKrE,KAAKuzB,kCAAkCE,GAE5D,WAGGpkB,QAAQkS,IAAIiS,EACrB,CAQA,OAAO,IAAInkB,SAAQ,CAAC/P,EAAS+W,KAC1BrW,KAAK0zB,wBAA0B,CAC5Bp0B,QAASA,EACT+W,OAAQA,GAGXrW,KAAK2zB,aAAa5rB,EAAO+mB,GAAM1a,OAAOlM,IACnCmO,EAAOnO,EAAI,GACZ,GAER,CAEAyrB,aAAa5rB,EAAO+mB,GAMjB,OAAO/mB,EAAMioB,QAAQlB,GAAM3a,MAAMxK,GACvB3J,KAAK4zB,oBAAoBjqB,IAEtC,CAWAzE,kBAAkB2uB,EAAc1Z,GAC7B,MAAMxQ,EAAOkqB,GAAclqB,MAAQkqB,EACnC,IAAKlqB,GAAMzD,OAER,OADAiU,MACO9K,QAAQ/P,UAGlB,MAAMw0B,EAAcD,EAAaC,YAEjC,IAAIC,EACJ,GAAIpqB,EAAKzD,OAAS,IAAK,CACpB,IAAIoqB,EAAMtwB,KAAKmqB,iBAAiBqH,QAC5BwC,EAASrqB,EAAKqC,OAAO,KACzB+nB,EAAW,CACRpqB,KAAMqqB,EACN1D,IAAKA,EAAM3mB,EAAKzD,OAChB4tB,cAEN,CAEA,MAAMG,EAAa,CAChBtqB,OACA2mB,IAAKuD,EAAavD,IAClBwD,eAIH,OAFA9zB,KAAKmqB,iBAAiBlT,MAAMgd,GAErB,IAAI5kB,SAAS/P,IACjBgV,YAAWpP,gBACFlF,KAAKk0B,YAAYH,GACvB5Z,MACA7a,GAAS,GACT,GAAG,GAEZ,CAcAs0B,oBAAoBjqB,GACjB,OAAO0F,QAAQ/P,UAAU6U,MAAK,KAE3BnU,KAAKm0B,aAAexqB,EAAKmqB,YAGpB9zB,KAAKmqB,iBAAiB6C,KAAK,CAAC,GAAG9mB,QACjClG,KAAKmqB,iBAAiBnP,WAIrBhb,KAAKo0B,oBAAoBxgB,aAAa5T,KAAKo0B,oBAC/Cp0B,KAAKo0B,mBAAqB9f,YAAWpP,gBAE5BlF,KAAKk0B,YAAYvqB,GAGvB3J,KAAKmqB,iBAAiBkK,MAAKnvB,UACxBoP,YAAW,KACRtU,KAAKwtB,mBAAmB,GACxB,KAEI,CAEJ7jB,KAAM,GACN2mB,IAAK3mB,EAAK2mB,IACVwD,YAAanqB,EAAKmqB,gBAKxB9zB,KAAK0wB,oBAAoB/mB,GAGZ3J,KAAK8rB,oBAGf9rB,KAAKwtB,oBACLxtB,KAAKmuB,mBAGLnuB,KAAKmuB,kBAIJnuB,KAAK0zB,0BACN1zB,KAAK0zB,wBAAwBp0B,UAG7BU,KAAK0zB,wBAA0B,MAK9B1zB,KAAKmG,SAAS4jB,SACf/pB,KAAKoP,KAAK,WAAY,CAAC,GAItBpP,KAAKwqB,aAAexqB,KAAKyqB,eAAeyB,cACzClsB,KAAKwqB,YAAcxqB,KAAKyqB,eAAeyB,YACvClsB,KAAKoP,KAAK,kBAAmB,CAAC,GACjC,GACA,IAAI,GAEb,CAWAqhB,WAAWoC,EAAOC,GAsCf,OAAOzjB,QAAQ/P,UAAU6U,MAAK,KAEvBnU,KAAKs0B,cAEN1gB,aAAa5T,KAAKs0B,oBACXt0B,KAAKs0B,aAIVt0B,KAAKu0B,gBACPv0B,KAAKu0B,cAAgB,IAAIllB,SAAQ,CAAC/P,EAAS+W,KACxCrW,KAAKw0B,uBAAyBl1B,EAC9BU,KAAKy0B,sBAAwBpe,CAAM,KAMzCrW,KAAKs0B,YAAchgB,YAAW,KAE3BtU,KAAKgb,WAEEhb,KAAK4uB,SAASiE,EAAOC,GACxB3e,MAAK,KACCnU,KAAKu0B,gBACNv0B,KAAKw0B,gCACEx0B,KAAKu0B,qBACLv0B,KAAKw0B,8BACLx0B,KAAKy0B,uBAIf7gB,aAAa5T,KAAKs0B,oBACXt0B,KAAKs0B,WAAW,IAEzBlgB,OAAOlM,IACDlI,KAAKu0B,gBACNv0B,KAAKy0B,sBAAsBvsB,UACpBlI,KAAKu0B,qBACLv0B,KAAKw0B,8BACLx0B,KAAKy0B,uBAGf7gB,aAAa5T,KAAKs0B,oBACXt0B,KAAKs0B,WAAW,MAE7B,IAIIt0B,KAAKu0B,gBAElB,CAuBAG,aAAa3B,GACV/yB,KAAKowB,eAAiB2C,CACzB,CAEA4B,QAAQ/rB,GACL,IAAIgkB,EAAK5sB,KAAKmqB,iBACd,OAAIyC,EACMA,EAAGI,MAAM5N,IACb,IAAI9Z,GAAU,EAiBd,OAVatF,KAAK8rB,oBACJ9rB,KAAKmG,SAAS4jB,SAAWzkB,IACpCA,EAAUtF,KAAKkuB,oBAAoB9O,IAIlC9Z,GAAWsD,IACZtD,EAAUsD,EAAOwW,IAGb9Z,CAAO,IAGV,EAEb,CAEA4oB,oBAAoBD,GAEjB,GAAe,MAAXA,EAAiB,OAAO,EAE5B,IAAI2G,EAAS50B,KAAK8rB,mBAClB,GAAc,MAAV8I,EAAgB,OAAO,EAE3B,MAAMC,EAAUD,EAAOjJ,WACvB,GAAe,MAAXkJ,EAAiB,OAAO,EAE5B,IAAI7I,EAAYhsB,KAAKgsB,UACrB,GAAiB,MAAbA,EAAmB,OAAO,EAI9B,IAAI8B,EAAa8G,EAAOpI,YACxB,GAAkB,MAAdsB,EACD,OAAO,EAGV,IAAIgH,EAAU7G,EAAQjC,EAAU8E,gBAChC,GAAe,MAAXgE,EAAiB,CAElB,IAAI7G,EAAQjC,EAAUnlB,YAGnB,OAAO,EAFPiuB,EAAU7G,EAAQjC,EAAUnlB,WAIlC,CAEA,IAAIwoB,EAAKrD,EAAUhnB,OAAOqqB,KAG1B,OAAIyF,EAAQlsB,OAENksB,EAAQlsB,QACJ+M,IACGA,EAAI0Z,IAAO1Z,EAAI9W,IAAM8W,KACrBmY,EAAW+G,EAAQxF,OAASvB,EAAWjvB,IAAMivB,KAClD5nB,OAAS,GAIV4uB,EAAQzF,IAAOyF,EAAQj2B,IAAMi2B,KAC7BhH,EAAW+G,EAAQxF,OAASvB,EAAWjvB,IAAMivB,EAGvD,CAEA9S,WACOhb,KAAKmqB,kBAAkBnqB,KAAKmqB,iBAAiBnP,WAE7Chb,KAAKgrB,kBAAkBhrB,KAAKgrB,iBAAiBhQ,WAEjDhb,KAAKwqB,YAAcxqB,KAAKyqB,eAAeC,UAC1C,CAEIqK,iBACD,OAAO/0B,KAAKm0B,cAAgB,CAC/B,CAUAa,OACG1sB,QAAQ6G,MAAM,mDACjB,CAEA8lB,SACG3sB,QAAQ6G,MAAM,qDACjB,CAEA+lB,gBAAgBC,GAEb,IAAIvpB,EAAQ5L,KAAKsqB,mBAAmBpd,QAAQioB,GAG5Cn1B,KAAKsqB,mBAAmBte,OAAOJ,EAAO,EACzC,CAcAye,wBAAwB0I,EAAS,MAY9B,GAL+B,MAA3B/yB,KAAKo1B,qBACNp1B,KAAKo1B,mBAAqBp1B,KAAK8B,GAAGuzB,iBAC/B,GAAGr1B,KAAKnB,wBAGVmB,KAAK2rB,WAAY,CAIlB,IAAI9B,EAFJ7pB,KAAKo1B,mBAAmBE,WAAWt1B,KAAK2rB,WAAW7kB,UAK/C9G,KAAK2rB,sBAAsB3rB,KAAK8B,GAAG2c,MAAMgR,gBAC1C5F,EAAmB7pB,KAAK2rB,WAAWgE,OAYlC9F,EACD7pB,KAAKo1B,mBAAmBxwB,SAASilB,GAC/B7pB,KAAKo1B,mBAAmBxwB,SAAS,CAAC,EAC1C,MACG5E,KAAKo1B,mBAAmBE,WAAW,IACnCt1B,KAAKo1B,mBAAmBxwB,SACrB2kB,EAAcpjB,SAASyjB,gBAAgBC,kBAwC7C,GAlCmC,MAA/B7pB,KAAKu1B,yBACNv1B,KAAKu1B,uBAAyBv1B,KAAK8B,GAAGuzB,iBACnC,GAAGr1B,KAAKnB,4BAMdmB,KAAKu1B,uBAAuBD,WACzBt1B,KAAK2rB,WAAa3rB,KAAK2rB,WAAW7kB,SAAW,IAG5CisB,IAAQ/yB,KAAKmG,SAASyjB,gBAAgBC,iBAAmBkJ,GAG1D/yB,KAAKmG,UACLnG,KAAKmG,SAASyjB,iBACd5pB,KAAKmG,SAASyjB,gBAAgBC,iBAE9B7pB,KAAKu1B,uBAAuB3wB,SACzB5E,KAAKmG,SAASyjB,gBAAgBC,kBAGjC7pB,KAAKu1B,uBAAuB3wB,SACzB2kB,EAAcpjB,SAASyjB,gBAAgBC,kBAKnB,MAAtB7pB,KAAKw1B,gBACNx1B,KAAKw1B,cAAgBx1B,KAAK8B,GAAGuzB,iBAC1B,GAAGr1B,KAAKnB,mBAGVmB,KAAK2rB,WAAY,CAClB,IAAI8J,GAAaz1B,KAAK01B,YAAc,IAAI9sB,QACpC6D,IACGA,EAAEkpB,WACFlpB,EAAEmpB,WAAa,IAAI1oB,QAAQlN,KAAK2rB,WAAW9sB,KAAO,IAEzD,GAAI42B,GAAaA,EAAUvvB,OAAS,EAAG,CAEpClG,KAAKw1B,cAAcF,WAAWt1B,KAAK2rB,WAAW7kB,UAAY,IAG1D,IAAI+uB,EAAa,GACjBJ,EACI7sB,QACG6D,GAAMA,EAAE7D,QAAU6D,EAAE7D,OAAOyY,OAAS5U,EAAE7D,OAAOyY,MAAMnb,SAEtDlC,SAASyI,IACP,IAAIqpB,GAAUrpB,EAAE7D,OAAOyY,OAAS,IAAIzY,QAChC2G,GACEvP,KAAK2rB,WAAW7kB,QAAQC,GAAMA,EAAElI,IAAM0Q,EAAEnL,MAAK8B,OAAS,IAG5D2vB,EAAaA,EAAW/N,OAAOgO,EAAO,IAG5C,IAAIC,EAAa,CACdjM,KAAM,KACNzI,MAAOwU,GAEV71B,KAAKw1B,cAAc5wB,SAASmxB,EAC/B,CACH,CACH,CAEIzQ,cACD,OAAOtlB,KAAKkrB,YAAa,CAC5B,CAMI8K,mBACD,MAAO,CACJC,OAAQ,EACRC,OAAQ,EAEd,CAEIhM,eACD,OAAOlqB,KAAKmG,SAAS+jB,UAAYX,EAAcW,QAClD,CAYAE,qBACG,IAAIjb,EAAQ,IAAIjQ,MACb,qGAGH,OADAoJ,QAAQ6G,MAAMA,GACP,IACV,CASA8b,qBAIG,OAHA3iB,QAAQ6G,MACL,qGAEI,IACV,CAEAuhB,oBAAoB/mB,EAAO,CAAC,GAErBA,IAAS,CAAC,GACXrB,QAAQuO,IACL,2DAGT,CAkGAya,iBAAiB5B,EAAShqB,GACvB,IAAI6pB,EAAc,CAAC,EAgCnB,OA7BAlwB,OAAOD,KAAKsG,GAAQ1B,SAASI,IAC1BsrB,EAAQ1rB,SAASmyB,IACd,IAAItG,EAAQ7vB,KAAK2rB,WAAWmE,YAAYqG,EAAMt3B,IAE9C0wB,EAAY,GAAGM,KAASzrB,KAASsB,EAAOtB,GAI9B,gBAAPA,GACAsB,EAAqB,cACrBA,EAAqB,aAAEQ,SAEvBqpB,EAAYhK,aAAe,GAE3B7f,EAAqB,aAAE1B,SAASoyB,IAC7B,IAAIC,EAAc,CAAC,EAEnBh3B,OAAOD,KAAKg3B,GAAMpyB,SAASsyB,IACT,iBAAXA,EACDD,EAA2B,cAAID,EAAoB,cACjDC,EAAY,GAAGxG,KAASyG,KAAaF,EAAKE,EAAQ,IAG1D/G,EAAYhK,aAAalhB,KAAKgyB,EAAY,IAEhD,GACD,IAGE9G,CACV,CAEAY,YAAYlC,GACT,IAAItgB,GAAS,EAab,OATI3N,KAAKo1B,qBACNznB,EAASA,GAAU3N,KAAKo1B,mBAAmB9vB,QAAQ2oB,IAElDjuB,KAAKu1B,yBACN5nB,EAASA,GAAU3N,KAAKu1B,uBAAuBjwB,QAAQ2oB,IAEtDtgB,GAAU3N,KAAKw1B,gBAChB7nB,EAASA,GAAU3N,KAAKw1B,cAAclwB,QAAQ2oB,IAE1CtgB,CACV,CAIA4oB,MAAMpwB,GACHA,EAAWA,GAAYnG,KAAK6F,QAC5B,IAAI2wB,EAAuB,IAAIx2B,KAAKL,YAAYwG,EAAUnG,KAAK8B,IAC/D00B,EAAqB1L,aAAe9qB,KAAK8qB,aACzC0L,EAAqBhM,YAAcxqB,KAAKwqB,YAGxCgM,EAAqBjB,uBAAuB3wB,SACzCuB,EAASA,SAASyjB,gBAAgBC,kBAGvB,MACP2M,EAAqBrM,kBACtBqM,EAAqBrM,iBAAiBlT,MACnCjX,KAAKmqB,iBACD6C,KAAK,CAAC,GACNpkB,QAAQwW,GACNoX,EAAqBjB,uBAAuBjwB,QAAQ8Z,MAI5DoX,EAAqBxL,kBACtBwL,EAAqBxL,iBAAiB/T,MACnCjX,KAAKgrB,iBACDgC,KAAK,CAAC,GACNpkB,QAAQwW,GACNoX,EAAqBjB,uBAAuBjwB,QAAQ8Z,KAGhE,EAGHqX,GASAD,EAAqBrI,kBAErB,IAAIuI,EAAW12B,KAAKwsB,YASpB,OARIkK,IAGGA,EAAS73B,KAAI63B,EAAWA,EAAS73B,IAErC23B,EAAqBpK,UAAUsK,IAG3BF,CAMV,CAEAG,cAAcC,GACX,IAAIpf,EAAMxX,KAAK6F,QAcf,OAXI+wB,GAASvV,OAAOnb,SACbsR,EAAIrR,SAASyjB,gBAAgBC,kBAAkBxI,OAAOnb,OACvDsR,EAAIrR,SAASyjB,gBAAgBC,iBAAiBxI,MAC3C7J,EAAIrR,SAASyjB,gBAAgBC,iBAAiBxI,MAAMyG,OACjD8O,EAAQvV,OAGd7J,EAAIrR,SAASyjB,gBAAgBC,iBAAmB+M,GAGvC52B,KAAKu2B,MAAM/e,EAE7B,CAiBA4a,SAASyE,GACN,IAAKA,IAAQA,EAAIxE,UAAYwE,EAAItE,SAAU,OAE3CvyB,KAAK82B,SAAW92B,KAAK82B,UAAY,GAEjC,IAAIhK,EAAS9sB,KAAK82B,SAAS9J,MAAM/tB,GACvBA,EAAEozB,SAAWwE,EAAIxE,SAAWpzB,EAAEqzB,WAAauE,EAAIvE,cAIpDxF,GAAUA,EAAO5mB,OAAS,KAE5BlG,KAAK82B,SAASzyB,KAAK,CAChBguB,QAASwE,EAAIxE,QACbC,UAAWuE,EAAIvE,UACfC,SAAUsE,EAAItE,WAIjBsE,EAAIxE,QAAQlwB,GAAG00B,EAAIvE,UAAWuE,EAAItE,UAExC,CAQAwE,aACO/2B,KAAK82B,UAAY92B,KAAK82B,SAAS5wB,OAAS,GACzClG,KAAK82B,SAAS9yB,SAAS/E,IACpBA,EAAEozB,QAAQ2E,eAAe/3B,EAAEqzB,UAAWrzB,EAAEszB,SAAS,GAG1D,CAOAK,YAAYN,GACLtyB,KAAK82B,UAAU5wB,OAAS,GAAKosB,IAC9BtyB,KAAK82B,SAAS9yB,SAAS/E,IAChBqzB,GAAarzB,EAAEqzB,WAChBrzB,EAAEozB,QAAQ2E,eAAe/3B,EAAEqzB,UAAWrzB,EAAEszB,SAAS,IAGvDvyB,KAAK82B,SAAW92B,KAAK82B,SAASluB,QAAQ3J,GAAMA,EAAEqzB,WAAaA,IAEjE,CAEIoD,iBACD,MAAO,EACV,CAEIjH,qBACD,OACGzuB,KAAKmG,SAASwjB,0BACZ3pB,KAAKmG,SAASsjB,uBAAyBzpB,KAAKmG,SAASujB,YAE7D,CAEIiF,2BACD,OAAK3uB,KAAKyuB,gBAEFzuB,KAAK8B,IAAMA,IAAIiqB,mBACpB/rB,KAAKmG,SAASwjB,wBAHgB,IAKpC,CAEI8I,uBACD,OAAOzyB,KAAK6sB,kBACf,cCzmFHttB,EAAOC,QAAU,MACdG,YAAYsjB,EAAYnhB,GACrB9B,KAAK8B,GAAKA,EACV9B,KAAKgG,WAAWid,EACnB,CASAjd,WAAWid,GASJA,EAAWpkB,KACZmB,KAAKnB,GAAKokB,EAAWpkB,IAExBmB,KAAKkH,KACF+b,GAAY/b,MACZ+b,GAAYxB,MAAMva,MAClB+b,GAAYxB,MAAMtgB,OAClB8hB,GAAYxB,MAAM8D,eAAe,IAAIpkB,OACrC,GACEnB,KAAKkH,MACPlH,KAAK8B,GAAGqG,OAAO8uB,QACZ,IAAI/3B,MAAM,2CACV,CACGgQ,QAAS,gCACT+T,eAITjjB,KAAK2B,KAAOshB,EAAWthB,MAAQshB,GAAYxB,MAAM9f,MAAQ,GACzD3B,KAAKyhB,KAAOwB,EAAWxB,MAAQ,IAClC,CAaA5b,QACG,MAAO,CACJhH,GAAImB,KAAKnB,GACTqI,KAAMlH,KAAKkH,KACXvF,KAAM3B,KAAK2B,KACX8f,KAAMzhB,KAAKyhB,KAEjB,CAQAlN,UACG,OAAOvU,KAAK8B,GAAGo1B,kBAAkBl3B,KAAKnB,GACzC,CAQAqG,aACG,OAAIlF,KAAKnB,GACCmB,KAAK8B,GAAGq1B,iBAAiBn3B,KAAKnB,GAAImB,KAAK6F,SAEvC7F,KAAK8B,GAAGoe,iBAAiBlgB,KAAK6F,QAE3C,oBC9EH,MAAMuxB,EAAgB,EAAQ,OACxBC,EAAe,EAAQ,OAEvB53B,EAAc,EAAQ,OAEtBC,EAAiB,EAAQ,OAEzB43B,EAAU,EAAQ,OAClB/F,EAAW,EAAQ,OACnBgG,EAAmB,EAAQ,MAC3BC,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,OACtBC,EAAmB,EAAQ,OAC3BjI,EAAgB,EAAQ,OAExBkI,EAAS,EAAQ,OACjBC,EAAY,EAAQ,OAEpBC,EAAuB,EAAQ,OAC/BC,EAAgB,EAAQ,OACxBC,EAAuB,EAAQ,OAE/BC,EAAS,EAAQ,OAEjBC,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OAMzBC,EAAY,EAAQ,OACpBzZ,EAAgB,EAAQ,OAExBsE,EAAY,EAAQ,OAEpB7U,EAAe,EAAQ,OA8hC7B5O,EAAOC,QA5hCP,cAAwB2O,EACrBxO,YAAY2e,GAaT,GANAxe,QACAE,KAAK2Y,gBAAgB,GAErB3Y,KAAKmgB,aAAe7B,GAAe,CAAC,EAGhCtR,MAAMC,QAAQqR,GAAc,CAC7B,IAAI8Z,EAAO,CAAC,EACZ9Z,EAAYta,SAAS2sB,IAClByH,EAAKzH,EAAE9xB,IAAM8xB,CAAC,IAEjB3wB,KAAKmgB,aAAeiY,CACvB,CAOAp4B,KAAKq4B,iBAAmB,GAGxBr4B,KAAKs4B,YAAc,GAGnBt4B,KAAKu4B,UAAY,GAGjBv4B,KAAKw4B,cAAgB,GAGrBx4B,KAAKy4B,YAAc,GAGnBz4B,KAAK04B,UAAY,GAGjB14B,KAAK24B,oBAAsB,GAM3B34B,KAAKye,MAAQ,CACV2Y,gBACA33B,cACA43B,eACA33B,iBACA43B,UACAtU,YACAuO,WACAgG,mBACAC,iBACAC,cACAhI,gBACAoI,uBAOAE,uBAEAE,mBACAC,kBAOHl4B,KAAKqhB,MAAQ,CAOVe,OAAQ,SAAUhe,GAKf,OAJcie,OACX,4EACA,KAEYC,KAAKle,EACvB,EASAw0B,WAAY,SAAU1xB,GACnB,OAAOkU,OAAOlU,GAAM2L,QAAQ,gBAAiB,GAChD,EASAgmB,wBAAyB,SAAU3xB,GAChC,MAAO,MAAQlH,KAAK44B,WAAW1xB,EAClC,EAUA4xB,sBAAuB,SAAUC,GAC9B,OAAO/4B,KAAK44B,WAAWG,GAAW,YACrC,EAWAC,kBAAmB,SAAUC,EAAYpyB,GACtC,IAAIqyB,EAASD,EAAa,IAAMpyB,EAIhC,OAFIqyB,EAAOhzB,OAAS,KAAIgzB,EAASA,EAAOC,UAAU,EAAG,KAE9CD,CACV,EAcAE,0BAA2B,SACxBC,EACAC,EACAC,EACAR,GAeA,OAZAM,EAAUr5B,KAAK64B,wBAAwBQ,IAC3BnzB,OAAS,KAAImzB,EAAUA,EAAQF,UAAU,EAAG,KAEpDG,EAAgBpzB,OAAS,KAC1BozB,EAAkBA,EAAgBH,UAAU,EAAG,KAE9CI,EAAgBrzB,OAAS,KAC1BqzB,EAAkBA,EAAgBJ,UAAU,EAAG,MAElDJ,EAAU/4B,KAAK44B,WAAWG,IACd7yB,OAAS,KAAI6yB,EAAUA,EAAQI,UAAU,EAAG,KAEjD,gDACHtmB,QAAQ,YAAawmB,GACrBxmB,QAAQ,eAAgBymB,GACxBzmB,QAAQ,eAAgB0mB,GACxB1mB,QAAQ,YAAakmB,EAC5B,EASAS,mBAAoB,SAAUP,GAC3B,MAAO,MAAMj5B,KAAK44B,WAAWK,IAChC,GAIHj5B,KAAKmI,OAAO8uB,QAAU,IAAI1hB,KACvBvV,KAAKmI,OAAO,aAAcoN,EAAO,EAGpCvV,KAAKmI,OAAOC,UAAY,IAAImN,KACzBvV,KAAKmI,OAAO,eAAgBoN,EAAO,CAEzC,CAQAkkB,gBAAgB9I,GACb,GAAqB,iBAAVA,EAAElP,KACV,IACGkP,EAAElP,KAAO/N,KAAKuD,MAAM0Z,EAAElP,KAIzB,CAHE,MAAOxiB,GACNqJ,QAAQuO,IAAI5X,GACZqJ,QAAQ6G,MAAM,2BAA2BwhB,EAAE9xB,MAC9C,CAEN,CAEAwE,OACG,IAAIq2B,EAAiBr6B,OAAOD,KAAKY,KAAKmgB,cAAczhB,KAChDsV,GAAMhU,KAAKmgB,aAAanM,KA6B5B,OAxBA0lB,EAAe11B,SAAS2sB,IACrB3wB,KAAKy5B,gBAAgB9I,EAAE,IAI1B,CACG,SACA,QACA,iBACA,UACA,OACA,OACA,eACD3sB,SAASrC,IACO+3B,EAAe9wB,QAAQ+nB,GAAMA,EAAEhvB,MAAQA,IAC7CqC,SAAS2d,IACf,IAAI,QAAEgY,EAAO,MAAEC,GAAU55B,KAAK65B,gBAAgBlY,GAC1CgY,GACD35B,KAAK25B,GAASt1B,KAAKrE,KAAK45B,GAAOjY,EAAIF,MACtC,GACD,IAGLzhB,KAAKoP,KAAK,sBACHC,QAAQ/P,SAClB,CAmBAu6B,gBAAgBlY,GACb,OAAQA,EAAIhgB,MACT,IAAK,cACF,MAAO,CAAEg4B,QAAS,mBAAoBC,MAAO,kBAEhD,IAAK,iBACF,MAAO,CACJD,QAAS,sBACTC,MAAO,qBAGb,IAAK,OACF,MAAO,CAAED,QAAS,YAAaC,MAAO,WAEzC,IAAK,QACF,MAAO,CAAED,QAAS,YAAaC,MAAO,WAEzC,IAAK,SACF,MAAO,CAAED,QAAS,cAAeC,MAAO,aAE3C,IAAK,UACF,MAAO,CAAED,QAAS,gBAAiBC,MAAO,cAE7C,IAAK,QACF,MAAO,CAAED,QAAS,cAAeC,MAAO,YAE3C,QAEG,MAAO,CAAED,QAAS,KAAMC,MAAO,MAExC,CAiBAnV,eAAe5lB,EAAIi7B,GAAQ,GACxB,OAAI95B,KAAKmgB,aAAathB,GACfi7B,EACM95B,KAAKmgB,aAAathB,GAElBmB,KAAKmgB,aAAathB,GAAI4iB,KAG5B,IACV,CASAzB,cAActa,GACX,OAAO,IAAI2xB,EAAa3xB,EAAQ1F,KACnC,CAUA+5B,iBAAiBC,EAAO,IAiBrB,OAhBKhtB,MAAMC,QAAQ+sB,KAChBA,EAAO,CAACA,IAKXA,EAAKh2B,SAAS2sB,IACX3wB,KAAKy5B,gBAAgB9I,GACrB3wB,KAAKmgB,aAAawQ,EAAE9xB,IAAM8xB,CAAC,IAI9BqJ,EAAKh2B,SAAS2sB,IACX3wB,KAAK0hB,eAAe,UAAWiP,EAAE9xB,GAAI8xB,EAAE,IAGnCthB,QAAQ/P,SAClB,CAaAoiB,eAAe7J,EAAIhZ,EAAI8iB,GACpB,IAEOsY,GAFH,QAAEN,EAAO,MAAEC,GAAU55B,KAAK65B,gBAAgBlY,GAC9C,GAAIgY,EAED,OAAQ9hB,GACL,IAAK,UACF7X,KAAK25B,GAASt1B,KAAKrE,KAAK45B,GAAOjY,EAAIF,OACnCzhB,KAAKoP,KAAK,qBAAsBuS,EAAIF,MACpC,MAEH,IAAK,UAEFwY,EAAOj6B,KAAK25B,GAAS3M,MAAM2D,GAAMA,EAAE9xB,IAAMA,IAGzCmB,KAAK25B,GAAW35B,KAAK25B,GAAS/wB,QAAQ+nB,GAAMA,EAAE9xB,IAAMA,IAEpDmB,KAAK25B,GAASt1B,KAAKrE,KAAK45B,GAAOjY,EAAIF,OAK/BwY,EACDA,EAAK7qB,KAAK,qBAAsBuS,EAAIF,MAEpCzhB,KAAKoP,KAAK,qBAAsBuS,EAAIF,MAEvC,MAEH,IAAK,aAEFwY,EAAOj6B,KAAK25B,GAAS3M,MAAM2D,GAAMA,EAAE9xB,IAAMA,OAGtCmB,KAAK25B,GAAW35B,KAAK25B,GAAS/wB,QAAQ+nB,GAAMA,EAAE9xB,IAAMA,IAGpDo7B,EAAK7qB,KAAK,qBAAsBuS,EAAIF,MAEpCzhB,KAAKoP,KAAK,qBAAsBuS,EAAIF,OAKnD,CAaA6J,aAAajb,EAAK,MAAM,IACrB,OAAQrQ,KAAKq4B,kBAAoB,IAAIzvB,OAAOyH,EAC/C,CAYA6pB,gBAAgBC,GACb,OAAOn6B,KAAKsrB,cAAc7d,GAAMA,EAAE5O,IAAMs7B,IAAI,EAC/C,CAUAC,eAAe10B,GACZ,OAAO,IAAI0xB,EAAc1xB,EAAQ1F,KACpC,CAWAimB,gBAAgBrd,EAAS,MAAM,IAC5B,OAAQ5I,KAAK24B,qBAAuB,IAAI/vB,OAAOA,EAClD,CAYAmjB,mBAAmBoO,GAEhB,OAAKA,EAEEn6B,KAAKimB,iBAAiB2G,GACnBA,EAAG/tB,IAAMs7B,GAAMvN,EAAG1lB,MAAQizB,GAAMvN,EAAGzrB,OAASg5B,IACnD,GAJa,IAKnB,CASAE,kBAAkB30B,GACf,IAAIknB,EAAK,IAAI8K,EAAiBhyB,EAAQ1F,MAOtC,OANA4sB,EAAGzqB,GAAG,aAAa,KAEhBnC,KAAK24B,oBAAsB34B,KAAK24B,oBAAoB/vB,QAChD+nB,GAAMA,EAAE9xB,IAAM+tB,EAAG/tB,IACpB,IAEG+tB,CACV,CAaA3mB,SAASP,EAAQV,GAEd,OAAOtF,EAAe46B,SAAS50B,EAAQV,EAC1C,CAOAu1B,SAAS70B,EAAQV,GACd,OAAO,IAAIsyB,EAAQ5xB,EAAQV,EAC9B,CAaA/E,QACG,MAAO,CAACmE,EAAKsO,EAAShN,EAAS,MAC5B,IAAIvE,EAAQiD,EAcZ,OAbIsO,IACG1F,MAAMC,QAAQyF,GACfhN,EAASgN,EAETvR,EAAQuR,GAIdhN,EAAO1B,SAAQ,CAACiP,EAAGC,KAChB,IAAIC,EAAM,IAAID,KACd/R,EAAQA,EAAMiS,WAAWD,EAAKF,EAAE,IAG5B9R,CAAK,CAElB,CAWAmlB,QAAQ1d,EAAS,MAAM,IACpB,OAAQ5I,KAAKs4B,aAAe,IAAI1vB,OAAOA,EAC1C,CAQA6O,WAAW0iB,GACR,OAAOn6B,KAAKsmB,SAAStnB,GACXA,EAAEH,IAAMs7B,GAAMn7B,EAAEkI,MAAQizB,GAAMn7B,EAAEmC,OAASg5B,IAChD,EACN,CAUAK,UAAU90B,GAkBP,OAfyB,GAArBA,EAAO+0B,WACC,IAAIlD,EAAiB7xB,EAAQ1F,MACX,GAArB0F,EAAOgD,WACJ,IAAI8uB,EAAe9xB,EAAQ1F,MACd,GAAhB0F,EAAOg1B,MAAwB,IAAIjD,EAAY/xB,EAAQ1F,MAClD,IAAIuxB,EAAS7rB,EAAQ1F,KAWtC,CAEA26B,aACG,OAAO36B,KAAKyX,WAAW,uCAC1B,CAEAmjB,iBACG,OAAO56B,KAAKyX,WAAW,uCAC1B,CAEAojB,oBACG,OAAO76B,KAAKyX,WAAW,uCAC1B,CAEAqjB,wBACG,OAAO96B,KAAKyX,WAAW,uCAC1B,CAEAsjB,aACG,OAAO/6B,KAAKyX,WAAW,uCAC1B,CAEAujB,cACG,OAAOh7B,KAAKyX,WAAW,uCAC1B,CAEAwjB,cACG,OAAOj7B,KAAKyX,WAAW,uCAC1B,CAEAyjB,aACG,OAAOl7B,KAAKyX,WAAW,uCAC1B,CAEA0jB,YACG,OAAOn7B,KAAKyX,WAAW,uCAC1B,CAEA2jB,eACG,OAAOp7B,KAAKyX,WAAW,uCAC1B,CAaAgP,MAAM7d,EAAS,MAAM,IAClB,OAAQ5I,KAAKu4B,WAAa,IAAI3vB,OAAOA,EACxC,CAQAyyB,OAAOlB,GACJ,OAAOn6B,KAAKymB,OAAOC,GACTA,EAAE7nB,IAAMs7B,GAAMzT,EAAExf,MAAQizB,GAAMzT,EAAEvlB,OAASg5B,IAChD,EACN,CAUAmB,QAAQ51B,GAGL,OAFc,IAAIiyB,EAAOjyB,EAAQ1F,KAGpC,CAaA0oB,MAAM9f,EAAS,MAAM,IAClB,OAAQ5I,KAAK04B,WAAa,IAAI9vB,OAAOA,EACxC,CAQA2yB,OAAOpB,GACJ,OAAOn6B,KAAK0oB,OAAOjc,GACTA,EAAE5N,IAAMs7B,GAAM1tB,EAAEvF,MAAQizB,GAAM1tB,EAAEtL,OAASg5B,IAChD,EACN,CAUAqB,QAAQ38B,EAAIw8B,GACT,IAAII,EAAUz7B,KAAKykB,eAAe5lB,GAClC,OACiB,IAAIm5B,EADjByD,GAIY,CACVt1B,SAAU,CACPu1B,KAAML,IALsBr7B,KAYxC,CAaAsnB,UAAU1e,EAAS,MAAM,IACtB,OAAQ5I,KAAKw4B,eAAiB,IAAI5vB,OAAOA,EAC5C,CAQAoc,YAAYmV,GACT,OAAOn6B,KAAKsnB,WAAWtF,GACbA,EAAEnjB,IAAMs7B,GAAMnY,EAAE9a,MAAQizB,GAAMnY,EAAE7gB,OAASg5B,IAChD,EACN,CAUAwB,WAAWj2B,GACR,OAAO,IAAIkyB,EAAUlyB,EAAQ1F,KAChC,CAYA47B,kBAAkB/8B,EAAI2oB,GACnB,IAAIqU,EAAU77B,KAAKykB,eAAe5lB,GAClC,GAAIg9B,EACD,OAAQA,EAAQl6B,MACb,KAAKk2B,EAAqB1zB,WAAWxC,KAClC,OAAO,IAAIk2B,EAAqBgE,EAASrU,EAASxnB,MAGrD,KAAK83B,EAAc3zB,WAAWxC,KAC3B,OAAO,IAAIm2B,EAAc+D,EAASrU,EAASxnB,MAG9C,QAEG,OAAO+3B,EAAqB+D,QAAQD,EAASrU,EAASxnB,MAI/D,OAAO,IACV,CAYA+7B,oCAAoCC,EAASxU,GAC1C,IAAIyU,EAAa,KAEjB,OAAQD,EAAQr6B,MACb,IAAK,mBACFs6B,EAAa,IAAIpE,EAAqB,CAAC,EAAGrQ,EAASxnB,MACnD,MAEH,IAAK,YACFi8B,EAAa,IAAInE,EAAc,CAAC,EAAGtQ,EAASxnB,MAC5C,MAEH,QACG,IAAIk8B,EAAanE,EAAqBoE,qBAAqBH,GACvDE,IACDD,EAAalE,EAAqB+D,QAC/BI,EACA1U,EACAxnB,OAWZ,OAHIi8B,GACDA,EAAWG,YAAYJ,GAEnBC,CACV,CAWA/T,QAAQtf,EAAS,MAAM,IACpB,OAAQ5I,KAAKy4B,aAAe,IAAI7vB,OAAOA,EAC1C,CAgBAmiB,UAAUoP,GACP,OAAOn6B,KAAKkoB,SAASC,GACXA,EAAEtpB,IAAMs7B,GAAMhS,EAAEjhB,MAAQizB,GAAMhS,EAAEhnB,OAASg5B,IAChD,EACN,CAQAkC,SAAS32B,GACN,OAAO,IAAI+pB,EAAc/pB,EAAQ1F,KACpC,CAQAs8B,aAAa18B,EAAKC,GAIf,OAHID,GACD0I,QAAQ6G,MAAM,uCAEV,IAAIgpB,EAAUv4B,GAAOI,KAAKu8B,KAAM18B,EAAQG,KAClD,CAQAq1B,iBAAiBx1B,EAAQqC,EAAU,CAAC,GACjC,OAAO,IAAIwc,EAAc7e,EAAQG,KAAMkC,EAC1C,CAOAs6B,iBAAiB92B,GAId,OAHK1F,KAAKy8B,WACPz8B,KAAKy8B,SAAWz8B,KAAKo6B,eAAe,CAAC,IAEjCp6B,KAAKy8B,SAASnT,QAAQ5jB,EAAQ1F,KAAKy8B,SAC7C,CAiBAt0B,SACGG,QAAQ6G,MACL,oEAEN,CASAutB,YAAY7a,GACT,IAAI8a,EAAW,CAAC,EAmEhB,OAjEI9a,GACDxiB,OAAOD,KAAKyiB,GAAM7d,SAASgQ,IACxB,OAAQA,GACL,IAAK,QACF2oB,EAASC,SAAW/a,EAAK7N,GAAGhP,QAAQnG,GACpC89B,EAAS1D,WAAapX,EAAK7N,GAAGhP,QAAQkC,KACtCy1B,EAASE,QAAUhb,EAAK7N,GAAGnV,GAC3B89B,EAASG,UAAYjb,EAAK7N,GAAG7S,OAAS0gB,EAAK7N,GAAG9M,KAC9C,MAEH,IAAK,SACFy1B,EAASC,SAAW/a,EAAK7N,GAAGnV,GAC5B89B,EAAS1D,WAAapX,EAAK7N,GAAG9M,KAC9B,MAEH,IAAK,iBACFy1B,EAASI,iBAAmBlb,EAAK7N,GAAGnV,GACpC89B,EAASK,mBAAqBnb,EAAK7N,GAAG7S,OAAS0gB,EAAK7N,GAAG9M,KACvD,IAAI+1B,EAAKpb,EAAK7N,GAAG2X,WACbsR,IACDN,EAASO,mBAAqBD,EAAGp+B,GACjC89B,EAASQ,qBAAuBF,EAAG/1B,MAEtC,MAEH,IAAK,UACFy1B,EAAS1X,UAAYpD,EAAK7N,GAAGnV,GAC7B89B,EAASS,YAAcvb,EAAK7N,GAAG7S,OAAS0gB,EAAK7N,GAAG9M,KAChD,MAEH,IAAK,MACFy1B,EAAS/9B,IAAM,CACZ+Y,MAAOkK,EAAK7N,GAAG2D,MACflB,SAAUoL,EAAK7N,GAAGqpB,UAClBC,KAAMzb,EAAK7N,GAAGupB,OAEjB,MAEH,IAAK,OACE1b,EAAK7N,GAAGwT,UACTmV,EAAS1X,UAAYpD,EAAK7N,GAAGwT,QAAQ3oB,GACrC89B,EAASS,YACNvb,EAAK7N,GAAGwT,QAAQrmB,OAAS0gB,EAAK7N,GAAGwT,QAAQtgB,MAE/Cy1B,EAASa,OAAS3b,EAAK7N,GAAGnV,GAC1B89B,EAASc,SAAW5b,EAAK7N,GAAG7S,OAAS0gB,EAAK7N,GAAG9M,KAC7C,MAEH,IAAK,OACE2a,EAAK7N,GAAGlP,cACT63B,EAASe,cAAgB7b,EAAK7N,GAAGlP,YAAYjG,GAC7C89B,EAASgB,gBACN9b,EAAK7N,GAAGlP,YAAY3D,OAAS0gB,EAAK7N,GAAGlP,YAAYoC,MAEvDy1B,EAASiB,OAAS/b,EAAK7N,GAAGnV,GAC1B89B,EAASkB,SAAWhc,EAAK7N,GAAG7S,OAAS0gB,EAAK7N,GAAG9M,KAC7Cy1B,EAASmB,QAAUjc,EAAK7N,GAAG5P,IAC3B,MACH,QACGu4B,EAAS3oB,GAAK6N,EAAK7N,GAEzB,IAIC2oB,CACV,oBC9jCH,IAAI/4B,EAAS,CAAC,EAEQ,CACnB,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,QAGKI,SAAS+5B,IACtBn6B,EAAOm6B,EAAM55B,WAAWC,KAAO25B,CAAK,IAGvCx+B,EAAOC,QAAU,MAMdorB,mBACG,IAAI9jB,EAAS,GACb,IAAK,IAAIC,KAAKnD,EACXkD,EAAOzC,KAAKT,EAAOmD,IAEtB,OAAOD,CACV,CASA8jB,kBAAkBxmB,GACf,OAAOR,EAAOQ,EACjB,CAOAwmB,gBAAgBllB,EAAQV,GACrB,IAAIU,EAAOtB,IAgBR,MAPAkE,QAAQuO,IAAI,WACZvO,QAAQuO,IAAI,WACZvO,QAAQ6G,MAAMzJ,GACd4C,QAAQuO,MACRvO,QAAQ6G,MAAM,WACd7G,QAAQ6G,MAAMnK,GACdsD,QAAQuO,IAAI,WACN,IAAI3X,MACP,iDAAiDwG,EAAOwB,SAASxB,EAAOtB,mBAAmBY,EAAOkC,SAhBrG,IACG,OAAO,IAAItD,EAAO8B,EAAOtB,KAAKsB,EAAQV,EAKzC,CAJE,MAAOkD,GACNI,QAAQuO,IAAI,QAAS3O,GACrBI,QAAQuO,IAAI,mBAAoBjT,GAChC0E,QAAQuO,IAAI,kBAAmBnR,EAAOtB,IACzC,CAcN,oBC1FH,IAAI4e,EAAY,EAAQ,OACR,EAAQ,OAExBzjB,EAAOC,QAAU,cAAyBwjB,EACvCrjB,YAAYsjB,EAAYnhB,GACrBhC,MAAM,CAAC,OAAQ,eAAgBgC,GAE/B9B,KAAKgG,WAAWid,EAMnB,CASAjd,WAAWid,GAaR,IAAI+a,EAAS/a,GAAY9c,SAAS83B,eAAe,UAC5Chb,GAAY9c,UAAU63B,OACtB,IAELh+B,KAAKnB,GAAKokB,GAAYpkB,IAAM,GAC5BmB,KAAKkH,KAAO+b,GAAY/b,MAAQ,eAChClH,KAAKk+B,YAAcjb,GAAYib,aAAe,GAC9Cl+B,KAAK2B,KAAOshB,GAAYthB,MAAQ,OAChC3B,KAAKmG,SAAW,CAAC,EACjBnG,KAAKmG,SAAS63B,OAASA,EACvBh+B,KAAKmG,SAASg4B,WAAalb,GAAY9c,UAAUg4B,WACjDn+B,KAAKmG,SAASi4B,cAAgBnb,GAAY9c,UAAUi4B,cACpDp+B,KAAKmG,SAASzF,KAAOuiB,GAAY9c,UAAUzF,MAAQ,GACnDV,KAAKq+B,QAAUpb,GAAYob,SAAW,GAEtBr+B,MAAMs+B,OACtBt+B,KAAKs+B,OAAS,CAAC,GACdrb,GAAYob,SAAW,IAAIr6B,SAASu6B,IAClC,GAAKA,EAAL,CACA,IAAIC,EAAMx+B,KAAK8B,GAAG05B,QAAQ+C,EAAKv+B,KAAKnB,IAChC2/B,IACDx+B,KAAKs+B,OAAOC,GAAOC,EAHN,CAIhB,IAECvb,GAAYnjB,MAAMkG,WAAWid,GAG5BjjB,KAAKmB,QACPnB,KAAKmB,MAAQnB,KAAKkH,KAExB,CAQArB,QAEQ7F,KAAKmB,QACPnB,KAAKmB,MAAQnB,KAAKkH,MAIrB,IAAIyC,EAAO7J,MAAM+F,QAOjB,MALmB,CAAC,OAAQ,WAAY,UAAW,KAAM,QAC5C7B,SAAS+C,IACnB4C,EAAK5C,GAAK/G,KAAK+G,EAAE,IAGb4C,CACV,CAUA+e,MAAMrY,EAAK,MAAM,IAId,OAHehR,OAAOD,KAAKY,KAAKs+B,QAAQ5/B,KAAKO,GACnCe,KAAKs+B,OAAOr/B,KAEN2J,OAAOyH,EAC1B,CAQAouB,QAAQC,GACL1+B,KAAKs+B,OAAOI,EAAK7/B,IAAM6/B,CAC1B,CAQAC,SAAS9/B,GACN,OAAOmB,KAAKs+B,OAAOz/B,IAAO,IAC7B,CASA+/B,WAAW//B,GAER,IAAIggC,EAAY7+B,KAAKq+B,QAAQnxB,QAAQrO,GACjCggC,GAAa,GACd7+B,KAAKq+B,QAAQryB,OAAO6yB,EAAW,UAG3B7+B,KAAKs+B,OAAOz/B,EACtB,oBC9IH,MAAMmkB,EAAY,EAAQ,OAE1BzjB,EAAOC,QAAU,cAA0BwjB,EACxCrjB,YAAYsjB,EAAYje,GACrBlF,MAAM,CAAC,SAAUkF,EAAOlD,IACxB9B,KAAKgF,OAASA,EAEdhF,KAAKgG,WAAWid,EACnB,CAEAjd,WAAWid,GAuCR,GA5BAjjB,KAAKnB,GAAKokB,EAAWpkB,GACrBmB,KAAK2B,KAAO,QACZ3B,KAAKkH,KAAO+b,EAAW/b,KACvBlH,KAAKI,OAASsT,KAAKuD,MAAMgM,EAAW7iB,SAAU,GAG1C6iB,EAAW6b,WAAa9xB,MAAMC,QAAQgW,EAAW6b,YAClD7b,EAAW6b,SAAW,CAAC7b,EAAW6b,WAGrC9+B,KAAK++B,iBAAmB,GACxB/+B,KAAK8G,QAAUmc,EAAW6b,UAAY,IAClCpgC,KAAKqI,IACH,IAAIpB,EAAQ3F,KAAKgF,OAAO4I,UAAU7G,GAClC,IAAKpB,EAAO,CACT3F,KAAK++B,iBAAiB16B,KAAK0C,GAC3B,IAAImB,EAAM,IAAIhJ,MACX,SAASc,KAAKkH,SAASlH,KAAKnB,uCAAuCkI,MAEtE/G,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B0D,MAAO5L,KAAKnB,GACZ8G,MAAOoB,GAEb,CACA,OAAOpB,CAAK,IAEdiD,QAAQo2B,GAAQA,IAEM,GAAtBh/B,KAAK8G,OAAOZ,OAAa,CAC1B,IAAIgC,EAAM,IAAIhJ,MACX,SAASc,KAAKkH,SAASlH,KAAKnB,qCAE/BmB,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B0D,MAAO5L,KAAKnB,GACZogC,kBAAmBhc,EAAW6b,UAAY,IAEhD,CAGAh/B,MAAMkG,WAAWid,EACpB,CAaApd,QACG,IAAI8H,EAAS7N,MAAM+F,QA0BnB,OAxBA8H,EAAO9O,GAAKmB,KAAKnB,GACjB8O,EAAOhM,KAAO,QACdgM,EAAOzG,KAAOlH,KAAKkH,KACnByG,EAAOvN,OAASJ,KAAKI,OAGjBJ,KAAK8G,SAAWkG,MAAMC,QAAQjN,KAAK8G,UACpC9G,KAAK8G,OAAS,CAAC9G,KAAK8G,SAGvB6G,EAAOmxB,UAAY9+B,KAAK8G,QAAU,IAC9BpI,KAAKqI,GAEIA,EAAElI,IAAMkI,IAEjB6B,QAAQo2B,GAAQA,IAKpBh/B,KAAK++B,iBAAiB/6B,SAAS+C,IAC5B4G,EAAOmxB,SAASz6B,KAAK0C,EAAE,IAGnB4G,CACV,CAEIuxB,gBAID,MAAO,GAHSl/B,KAAKgF,OAAOm6B,iBAGLn/B,KAAKkH,OAAO2L,QAAQ,KAAM,IAAIsmB,UAAU,EAAG,GACrE,CAEIiG,iBAGD,MAAO,GAFSp/B,KAAKk/B,UAAU/F,UAAU,EAAG,YAG/C,oBCzGH,IAAIkG,EAAY,EAAQ,OACxB9/B,EAAOC,QAAU,cAA4B6/B,EAC1C1/B,YAAY2/B,EAAWx9B,GACpBhC,QACAE,KAAKu/B,SAAWD,GAAa,CAAC,SAI9Bt/B,KAAK8B,GAAKA,CAGb,CAcAkE,WAAWid,GACRjjB,KAAKulB,aAAetC,EAAWsC,aAG3BvlB,KAAKulB,aAENvlB,KAAKw/B,aAKJx/B,KAAKu/B,UAAY,IAAIv7B,SAAS2B,IACxBsd,EAAWtd,KACZ3F,KAAK2F,GAASsd,EAAWtd,GAC5B,GAGT,CAUA85B,oBAAoB34B,EAAQpB,GACzBA,EAASA,GAAU,CAAC,EAEpB,IAAI0U,EAAQ,CAITslB,cAAe,MAOlB,OAJA54B,EAAO9C,SAAS+C,IACbqT,EAAMrT,GAAKrB,EAAOqB,IAAMA,CAAC,IAGrB,CAACqT,EACX,CAOAulB,kBACG,MAAO,IACV,CAOA95B,QAGG,OAFA7F,KAAK4/B,cAEE,CACJra,aAAcvlB,KAAKulB,aAEzB,CAOA/Q,eACG,OAAOxU,KAAK8B,GAAGke,cAAc,CAC1BnhB,GAAImB,KAAKnB,GACTqI,KAAMlH,KAAKkH,KACXvF,KAAM3B,KAAK2B,KACX8f,KAAMzhB,KAAK6F,SAEjB,CAiBA25B,UAAUhoB,EAAKiK,EAAM3a,EAAQgJ,EAAe,MACpC0H,IAAKA,EAAMxX,MACXyhB,IAAMA,EAAOzhB,MACb8G,IAAQA,EAAS9G,KAAKu/B,UAAY,IAElC9d,EAAK8D,eACP9D,EAAK8D,aAAe,IAGS,iBAArB9D,EAAK8D,eACb9D,EAAK8D,aAAe7R,KAAKuD,MAAMwK,EAAK8D,eAGvC,IAAIsa,EAAe/vB,GAAgB9P,KAAK2/B,kBAExC,GAAI74B,GAAUA,EAAOZ,OAAS,EAAG,CAG9B,IAAI45B,EAAQ,KACRxR,GAAQ,EAEZ7M,EAAK8D,aAAavhB,SAAQ,SAAU+7B,GAC5BD,IAAOA,EAAQC,GAGhBA,EAAEL,eAAiBG,IACpBvR,GAAQ,EAGRxnB,EAAO9C,SAAQ,SAAU+C,GACV,MAARg5B,EAAEh5B,KAAYyQ,EAAIzQ,GAAKg5B,EAAEh5B,IAE7ByQ,EAAIzQ,GAAKg5B,EAAEh5B,IAAM,EACpB,IAEN,KAIKunB,GAASwR,GAEXh5B,EAAO9C,SAAQ,SAAU+C,GACN,MAAZ+4B,EAAM/4B,IAA0B,IAAZ+4B,EAAM/4B,GAC3ByQ,EAAIzQ,GAAK,IAAI84B,KAAgBC,EAAM/4B,KACjCyQ,EAAIzQ,GAAK,EACjB,GAEN,CACH,CAiBA64B,YAAYpoB,EAAKiK,EAAM3a,GACf0Q,IAAKA,EAAMxX,MACXyhB,IAAMA,EAAOzhB,MACb8G,IAAQA,EAAS9G,KAAKu/B,UAAY,IAElC9d,EAAK8D,eACP9D,EAAK8D,aAAe,IAGvB,IAAIsa,EAAe7/B,KAAK2/B,kBAExB,GAAI74B,GAAUA,EAAOZ,OAAS,EAAG,CAC9B,IAAI85B,GAAW,EAmBf,GAjBAve,EAAK8D,aAAavhB,SAAQ,SAAU+7B,GAE7BA,EAAEL,eAAiBG,IAEpB/4B,EAAO9C,SAAQ,SAAU+C,GAGR,MAAVyQ,EAAIzQ,KACLg5B,EAAEh5B,GAAKyQ,EAAIzQ,GAEjB,IAEAi5B,GAAW,EAEjB,KAGKA,EAAU,CAEZ,IAAIC,EAAQ,CAAC,EAGbA,EAAMP,cAAgBG,EAEtB/4B,EAAO9C,SAAQ,SAAU2B,GACJ,MAAd6R,EAAI7R,KACLs6B,EAAMt6B,GAAS6R,EAAI7R,GAEzB,IAEA8b,EAAK8D,aAAalhB,KAAK47B,EAC1B,CACH,CACH,cCpOH1gC,EAAOC,QAAU,MACdG,YAAYqF,GAEThF,KAAKgF,OAASA,EACdhF,KAAK8B,GAAKkD,EAAOlD,GAEjB9B,KAAKkgC,OAAS,KACdlgC,KAAKmgC,MAAQ,KACbngC,KAAKogC,MAAQ,KACbpgC,KAAKqgC,OAAS,KAEdrgC,KAAKsgC,uBAAwB,EAC7BtgC,KAAKugC,gBAAkB,CAEvB,EACAvgC,KAAKwgC,oBAAsB,GAC3BxgC,KAAKygC,oBAAsB,KAG3BzgC,KAAK0gC,gBAAkB,CAAEt8B,IAAK,KAAM8K,QAAS,CAAC,EACjD,CAaAyxB,WAAWv8B,GACRpE,KAAK0gC,gBAAgBt8B,IAAMA,GAAO,IACrC,CAEAw8B,cAAcl7B,GACX1F,KAAK0gC,gBAAgBxxB,QAAUxJ,GAAU,CAAC,CAC7C,CAIAm7B,wBAAwBn7B,GAErB,IAAI65B,EAAWv/B,KAAKgF,OAAO87B,qBAEvBC,GAAkB,EAClBxB,EAASr5B,QACVq5B,EAASv7B,SAAQ,SAAU2B,GACH,MAAjBD,EAAOC,KACRo7B,GAAkB,EAExB,IAECA,IAEyB,MAAvBr7B,EAAO6f,mBACuB,IAAvB7f,EAAO6f,cACS,IAAvB7f,EAAO6f,eAEP7f,EAAO6f,aAAe,IAEzBvlB,KAAKgF,OAAO46B,YAAYl6B,EAAQA,EAAQ65B,GAE9C,CAEAjnB,QAAQ5B,EAAQnB,GAIb,OAHAjN,QAAQ6G,MACL,+DAEIE,QAAQ/P,SAClB,CA2FA0hC,gBAAgBt7B,GACb,MAAO,CACJuK,IAAKjQ,KAAKgF,OAAOi8B,UACjB1rB,OAAQ7P,EAEd,CAEAw7B,gBAAgBriC,GACb,MAAO,CACJoR,IAAKjQ,KAAKgF,OAAOm8B,YAAYtiC,GAEnC,CAEAuiC,cAActS,GACX,MAAO,CACJ7e,IAAKjQ,KAAKgF,OAAOi8B,UACjB1rB,OAAQuZ,GAAQ,CAAC,EAEvB,CAEAuS,gBAAgBxiC,EAAI6G,GACjB,MAAO,CACJuK,IAAKjQ,KAAKgF,OAAOm8B,YAAYtiC,GAC7B0W,OAAQ7P,EAEd,CAMA8rB,MAAM1C,GACHA,EAAOA,GAAQ,CAAC,EAEhB,IAAIvZ,EAAS,CACVtF,IAAKjQ,KAAKgF,OAAOs8B,eACjB/rB,OAAQuZ,GAEX,OAAO9uB,KAAKsY,QAAQ,MAAO/C,GACvBpB,MAAMotB,IACJjiC,QAAQiiC,EAAa,IAEvBntB,OAAOlM,IAMLI,QAAQ6G,MAAMjH,EAAI,GAE3B,CAYAypB,aAAa7C,GAEV,IAAIO,EAAKrvB,KAAKgF,OAAOqqB,KAEjBmS,EAAS1S,EAAKO,GAKlB,OAJIP,EAAKa,QACN6R,EAAS1S,EAAKa,MAAMN,IAGhB,IAAIhgB,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAKmrB,EAAQ,CACV,IAAIC,EAAM,IAAIviC,MACX,4CAA8CmwB,GAIjD,OAFAoS,EAAI3S,KAAOA,OACXzY,EAAOorB,EAEV,CAGA,IAAIrnB,EAAQ,CACT9a,QAASA,EACT+W,OAAQA,GAEX+D,EAAMiV,GAAMmS,EAGZxhC,KAAKwgC,oBAAoBn8B,KAAK+V,GAGzBpa,KAAKsgC,wBAEHtgC,KAAKygC,qBACN7sB,aAAa5T,KAAKygC,qBAErBzgC,KAAKygC,oBAAsBnsB,YAAW,KACnCtU,KAAK0hC,qBAAqB,GAC1B,KACN,GAEN,CAMAA,sBACG1hC,KAAKsgC,uBAAwB,EAC7B,IAAIqB,EAAiB3hC,KAAKwgC,oBAC1BxgC,KAAKwgC,oBAAsB,GAC3B,IAAInR,EAAKrvB,KAAKgF,OAAOqqB,KAEjBuS,EAAe,CAEnB,EACI9S,EAAO,CAAEa,MAAO,CAAC,GACrBb,EAAKa,MAAMN,GAAM,GAEjB/mB,QAAQuO,IACL,yCACG8qB,EAAez7B,OACf,aAENy7B,EAAe39B,SAAS/E,IACrB2iC,EAAa3iC,EAAEowB,IAAOuS,EAAa3iC,EAAEowB,KAAQ,GAC7CuS,EAAa3iC,EAAEowB,IAAKhrB,KAAKpF,EAAE,IAG9B6vB,EAAKa,MAAMN,GAAMhwB,OAAOD,KAAKwiC,GAE7B5hC,KAAKgwB,QAAQlB,GAAM3a,MAAMmG,IAElBtN,MAAMC,QAAQqN,EAAI3Q,OAAS2Q,EAAI3Q,KAAKzD,QACrCoU,EAAI3Q,KAAK3F,SAAS2F,IAEXi4B,EAAaj4B,EAAK0lB,KAGLuS,EAAaj4B,EAAK0lB,IACxBrrB,SAASoW,KAEd9a,EADc8a,EAAM9a,SACZ,CAAEqK,KAAM,CAACA,IAAQ,WAGrBi4B,EAAaj4B,EAAK0lB,KAEzB/mB,QAAQ6G,MACL,2EACAxF,EACAi4B,EAEN,IAMN,IAAIC,EAAUxiC,OAAOD,KAAKwiC,GACtBC,EAAQ37B,OAAS,GAClBoC,QAAQC,KACL,gCACGs5B,EAAQ37B,OACR,gCAGT27B,EAAQ79B,SAASI,KAEd9E,EADcsiC,EAAax9B,GAAK9E,SACxB,CAAEqK,KAAM,YACTi4B,EAAax9B,EAAI,IAIvBpE,KAAKwgC,oBAAoBt6B,OAAS,EAEnClG,KAAK0hC,sBAGL1hC,KAAKsgC,uBAAwB,CAChC,GAEN,CAsCAwB,cAAch7B,EAAQ6C,GAYnB,YAXmB,IAARA,IACHqD,MAAMC,QAAQnG,IAA4B,iBAAVA,IAClC6C,EAAO7C,EACPA,EAAS,KAIM,iBAAVA,IACRA,EAAS,CAACA,IAGN,IAAIuI,SAAQ,CAAC/P,EAAS+W,KAE1B,IAAK1M,EAAK9K,GAGP,YADAS,EAAQ,MAIX,IAAIwvB,EAAO,CAAC,EACZA,EAAK9uB,KAAKgF,OAAOqqB,MAAQ1lB,EAAK9K,GAC9BmB,KAAKgwB,QAAQ,CAAEL,MAAOb,EAAM/lB,UAAU,IAClCoL,MAAM4tB,IACJ,GACIA,EAAQp4B,MACRqD,MAAMC,QAAQ80B,EAAQp4B,OACA,GAAvBo4B,EAAQp4B,KAAKzD,OAHhB,CAUA,IAAI87B,EAAQD,EAAQp4B,KAAK,GAGzB,GAAqB,GAAjB7C,EAAOZ,OAAa,CACrB,IAAIyD,EACDq4B,EACGl7B,EAAO,GAAG+L,QAAQ,gBAAiB,IAAM,cAE/C,OAAKlJ,GAEAqD,MAAMC,QAAQtD,KAAOA,EAAO,CAACA,SAElCrK,EAAQqK,IAJUrK,EAAQ,GAM7B,CAGqB,GAAjBwH,EAAOZ,QACQlG,KAAKgF,OAAO8B,QAAQC,GAC1BA,EAAEZ,SAASa,WAEXhD,SAAS+C,IAChBD,EAAOzC,KAAK0C,EAAEF,WAAW,IAI/B,IAAIo7B,EAAa,CAAC,EAClBn7B,EAAO9C,SAAS+0B,IACbkJ,EAAWlJ,GACRiJ,EAAMjJ,EAAQlmB,QAAQ,gBAAiB,IAAM,aAAa,IAGhEvT,EAAQ2iC,EAnCR,MAFG3iC,EAAQ,GAqCQ,IAErB8U,OAAOlM,IACLI,QAAQ6G,MAAM,0CAA2CjH,GACzDmO,EAAOnO,EAAI,GACZ,GAEX,CA0JAg6B,OAAOx8B,GAIJ,IAAK,IAAItB,KAHTpE,KAAK6gC,wBAAwBn7B,GAGbA,EACM,MAAfA,EAAOtB,WAAqBsB,EAAOtB,GAG1C,IAAImR,EAAS,CACVtF,IAAKjQ,KAAKgF,OAAOi8B,UACjB1rB,OAAQ7P,GAEX,OAAO1F,KAAKsY,QAAQ,MAAO/C,GACvBpB,MAAMxK,IAGJ3J,KAAK8X,cAAcnO,GAEZA,KAMTyK,OAAOlM,IACLI,QAAQ6G,MAAMjH,EAAI,GAE3B,CAQAynB,MAAMb,GAEH,OADA9uB,KAAKkgC,OAASpR,EACP9uB,IACV,CAQAwN,KAAKshB,GAEF,OADA9uB,KAAKmgC,MAAQrR,EACN9uB,IACV,CAMAyE,UAEG,OADA6D,QAAQ6G,MAAM,qDACPE,QAAQ/P,SAMlB,CAEAwY,cAAcnO,GAELA,aAAgBqD,QAAQrD,EAAO,CAACA,IAGtC,IAAIkd,EAAkB7mB,KAAKgF,OAAO8hB,gBAG9ByY,EAAWv/B,KAAKgF,OAAO87B,qBAGvBqB,EACDniC,KAAKgF,OAAO8B,QAAO,SAAUC,GAC1B,MAAgB,QAATA,EAAE3C,KAA0B,YAAT2C,EAAE3C,GAC/B,KAAM,GAGLg+B,EAAmBpiC,KAAKgF,OAAO8B,QAAQC,GAAe,aAATA,EAAE3C,MAEnDuF,EAAK3F,SAAS2sB,IACF,MAALA,IAGCA,EAAE9xB,IAA0B,MAApBmB,KAAKgF,OAAOqqB,OAAcsB,EAAE9xB,GAAK8xB,EAAE3wB,KAAKgF,OAAOqqB,OAG5DxI,EAAgB7iB,SAASV,IAEtB,IAAIwtB,EAAextB,EAAEwtB,eAMrB,GAAuB,MAAnBH,EAAEG,GAAuB,OAIA,iBAAnBH,EAAEG,IACTH,EAAEG,GAAc5qB,OAAS,IAGzByqB,EAAEG,GAAgBpd,KAAKuD,MAAM0Z,EAAEG,KAI9B9jB,MAAMC,QAAQ0jB,EAAEG,IACjBH,EAAEG,GAAc9sB,SAASuL,IAElBA,EAAEgW,cAAyC,iBAAlBhW,EAAEgW,eAE5BhW,EAAEgW,aAAe7R,KAAKuD,MAAM1H,EAAEgW,cACjC,IAIHoL,EAAEG,GAAcvL,cACuB,iBAAhCoL,EAAEG,GAAcvL,eAGvBoL,EAAEG,GAAcvL,aAAe7R,KAAKuD,MACjC0Z,EAAEG,GAAcvL,eAKtB,IAAI8c,EAAa/+B,EAAEqD,eACf27B,EAAOD,EAAWhT,KACtB,IAAIkT,EAAkBF,EAAWvB,qBAEjC,GAAI9zB,MAAMC,QAAQ0jB,EAAEG,IACjBH,EAAEG,GAAc9sB,SAASw+B,IAGtB,MAAMC,EAAgBn/B,EAAE6vB,iBAAiBqP,GAC7B,MAARF,IAAcE,EAAQ3jC,GAAK4jC,GAG3BF,EAAgBr8B,QACjBm8B,EAAW7C,UAAUgD,EAASA,EAASD,EAC1C,QAEC,CAKJ,MAAME,EAAgBn/B,EAAE6vB,iBAAiBxC,EAAEG,IACvC2R,IACD9R,EAAEG,GAAcjyB,GAAK4jC,GAIpBF,EAAgBr8B,QACjBm8B,EAAW7C,UACR7O,EAAEG,GACFH,EAAEG,GACFyR,EAGT,CA4BA,IAAK5R,EAAErtB,EAAEuD,YACN,GAAoB,OAAhBvD,EAAE0D,WACC2pB,EAAEG,GAEHH,EAAErtB,EAAEuD,YAAcvD,EAAE6vB,iBAAiBxC,EAAEG,IAEvCH,EAAErtB,EAAEuD,YAAc,UAGrB,GAAI8pB,EAAEG,GACH,GAAI9jB,MAAMC,QAAQ0jB,EAAEG,IACjB,IACGH,EAAErtB,EAAEuD,aAAe8pB,EAAEG,IAAiB,IAAIpyB,KAEtCwU,GAAM5P,EAAE6vB,iBAAiBjgB,IAWhC,CATE,MAAOjU,GACNqJ,QAAQuO,IAAI,mBACZvO,QAAQuO,IAAI,OAAOvT,EAAEzE,OACrByJ,QAAQuO,IAAI,eAAevT,EAAEnC,UAC7BmH,QAAQuO,IAAI,iBAAiBia,MAC7BxoB,QAAQuO,IAAI,aAAavT,EAAE0D,eAC3BsB,QAAQuO,IAAI,SACZvO,QAAQuO,IAAInD,KAAKC,UAAUgd,EAAEG,KAC7BxoB,QAAQuO,IAAI,kBACf,MAIAvO,QAAQuO,IAAI,mBACZvO,QAAQuO,IAAI,OAAOvT,EAAEzE,OACrByJ,QAAQuO,IAAI,eAAevT,EAAEnC,UAC7BmH,QAAQuO,IAAI,iBAAiBia,MAC7BxoB,QAAQuO,IAAI,aAAavT,EAAE0D,eAC3BsB,QAAQuO,IAAI,SACZvO,QAAQuO,IAAInD,KAAKC,UAAUgd,EAAEG,KAC7BxoB,QAAQuO,IAAI,mBAEZ8Z,EAAErtB,EAAEuD,YAAc,CAACvD,EAAE6vB,iBAAiBxC,EAAEG,UAG3CH,EAAErtB,EAAEuD,YAAc,EAG3B,IAGC04B,EAASr5B,QACVlG,KAAKgF,OAAOw6B,UAAU7O,EAAGA,EAAG4O,GAI/B4C,EAAWn+B,SAAS2c,IACbgQ,GAA2B,MAAtBA,EAAEhQ,EAAK9Z,aAEoB,iBAAtB8pB,EAAEhQ,EAAK9Z,cACC,QAAZ8Z,EAAKvc,IAGNusB,EAAEhQ,EAAK9Z,YAAc7G,KAAK8B,GAAGuf,MAAMhB,OAChCsQ,EAAEhQ,EAAK9Z,YACP,CACG2Z,OAAQ,aACRD,YAAY,IAKlBoQ,EAAEhQ,EAAK9Z,YAAc7G,KAAK8B,GAAGuf,MAAMhB,OAChCsQ,EAAEhQ,EAAK9Z,aAKnB,IAGHu7B,EAAiBp+B,SAAS0+B,IACvB/R,EAAE+R,EAAS77B,YAAc67B,EAASliB,OAAOmQ,EAAE,IAC5C,GAER,oBCl4BH,MAAMY,EAAW,EAAQ,OACnBoR,EAAa,EAAQ,OAE3BpjC,EAAOC,QAAU,cAA8B+xB,EAC5C5xB,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,GAElB9B,KAAK06B,OAAQ,EAEb16B,KAAKgG,WAAWid,EACnB,CAQAjd,WAAWid,GACRnjB,MAAMkG,WAAWid,GAEjBjjB,KAAK4iC,SAAWld,SAASzC,EAAW2f,WAAa,EACjD5iC,KAAK6iC,QAAU5f,EAAW4f,SAAW,OACrC7iC,KAAKsY,QAAU2K,EAAW3K,SAAW,CAAC,EACtCtY,KAAKsY,QAAQhC,QAAU2M,EAAW3K,SAAShC,SAAW,GACtDtW,KAAKkX,SAAW+L,EAAW/L,UAAY,CAAC,EACxClX,KAAKkX,SAASpQ,OAASmc,EAAW/L,UAAUpQ,QAAU,GACtD9G,KAAK8iC,UAAY7f,EAAW6f,YAAa,CAC5C,CAUAj9B,QACG,MAAM8H,EAAS7N,MAAM+F,QAWrB,OATA8H,EAAO+sB,MAAQ16B,KAAK06B,MACpB/sB,EAAOi1B,SAAW5iC,KAAK4iC,SACvBj1B,EAAOk1B,QAAU7iC,KAAK6iC,QACtBl1B,EAAO2K,QAAUtY,KAAKsY,SAAW,CAAC,EAClC3K,EAAO2K,QAAQhC,QAAUtW,KAAKsY,SAAShC,SAAW,GAClD3I,EAAOuJ,SAAWlX,KAAKkX,UAAY,CAAC,EACpCvJ,EAAOuJ,SAASpQ,OAAS9G,KAAKkX,UAAUpQ,QAAU,GAClD6G,EAAOm1B,UAAY9iC,KAAK8iC,UAEjBn1B,CACV,CAOA5F,QACG,IAAIA,EAAQ,IAAI46B,EAAW3iC,MAM3B,OAHA+H,EAAM44B,WAAW3gC,KAAKL,YAAYghC,cAClC54B,EAAM64B,cAAc,CAAE/hC,GAAImB,KAAKnB,KAExBkJ,CACV,CAUAg7B,iBAAgB,KAAE1P,EAAI,MAAEP,IACrB,MAAMnlB,EAAS,CAAC,EACVq1B,EAAiBhjC,KAAKsY,SAAS2qB,QAAU,CAAC,EAShD,OAPID,EAAenQ,OAAiB,MAARQ,IACzB1lB,EAAOq1B,EAAenQ,OAASQ,GAE9B2P,EAAelQ,OAAkB,MAATA,IACzBnlB,EAAOq1B,EAAelQ,OAASA,GAG3BnlB,CACV,CAEAu1B,YAAYv5B,GACT,IAAIgE,EAAS,GAsBb,OApBKX,MAAMC,QAAQtD,KAAOA,EAAO,CAACA,IAElCA,EAAK3F,SAASgK,IAEX,IAAIm1B,EAAa,IAAKn1B,IAIrBhO,KAAKkX,SAASksB,SAAW,IAAI5a,MAAM,KAAKxkB,SAASI,IACpC,IAAPA,GAAoB,MAAPA,IACjB++B,EAAaA,IAAa/+B,GAAI,IAG7B4I,MAAMC,QAAQk2B,GACfx1B,EAASA,EAAOma,OAAOqb,GACfA,GACRx1B,EAAOtJ,KAAK8+B,EACf,IAGIx1B,CACV,CAEI2I,cACD,MAAMA,EAAU,CAAC,EAQjB,OANCtW,KAAKsY,QAAQhC,SAAW,IAAItS,SAASq/B,IACd,MAAjBA,GAAQ3gC,QAEZ4T,EAAQ+sB,EAAOj/B,KAAOi/B,EAAO3gC,MAAK,IAG9B4T,CACV,oBCvHH,IAAIgtB,EAAU,EAAQ,OAClBtgB,EAAY,EAAQ,OAExB,MAAMjjB,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAElDhW,EAAOC,QAAU,MAAM+jC,UAAqBvgB,EACzCrjB,YAAYsjB,EAAYnhB,GACrBhC,MAAM,CAAC,SAAUgC,GA6BjB9B,KAAKgG,WAAWid,EACnB,CASA2H,oBACG,MAAO,QACV,CAMA5kB,WAAWid,GA4BRjjB,KAAKnB,GAAKokB,EAAWpkB,GAIrBmB,KAAK2B,KAAOshB,EAAWthB,MAAQ,SAI/B3B,KAAKwjC,SAAWvgB,EAAWugB,eAAYprB,EAKvCpY,KAAKkH,KAAO+b,EAAW/b,MAAQ,GAK/BlH,KAAKyjC,YAAcxgB,EAAWwgB,aAAe,GAK7CzjC,KAAK0jC,cAAgBzgB,EAAWygB,eAAiB,CAAC,EAGlD1jC,KAAK0jC,cAAcC,iBAAmBje,SACnC1lB,KAAK0jC,cAAcC,kBAAoB,GAI1C3jC,KAAK0I,WAAagd,SAASzC,EAAWva,YAAc,GAMpD1I,KAAKy6B,WAAa/U,SAASzC,EAAWwX,YAAc,GAUpDz6B,KAAK4jC,UAAY3gB,EAAW2gB,WAAa,GAMzC5jC,KAAK4jC,UAAY5jC,KAAK4jC,UAAU/wB,QAAQ,mBAAoB,IAE5D7S,KAAK6jC,kBAAoB5gB,EAAW4gB,mBAAqB,GAMzD7jC,KAAK8jC,gBAAkB7gB,EAAW6gB,iBAAmB,GAIrD9jC,KAAK+jC,QAAU9gB,EAAW8gB,SAAW,GAIrC/jC,KAAK2jB,eAAiBV,EAAWU,oBAOA,IAAvB3jB,KAAK2jB,gBACW,SAAvB3jB,KAAK2jB,iBAEL3jB,KAAK2jB,gBAAiB,GAGzB3jB,KAAKgkC,eAAiB/gB,EAAW+gB,oBAMQ,IAA9B/gB,EAAW2G,uBACiC,IAAzC3G,EAAW2G,gBAAgBxd,aACnC6W,EAAW2G,gBAAgBxd,WAAa,SACe,IAA/C6W,EAAW2G,gBAAgBC,mBACnC5G,EAAW2G,gBAAgBC,iBAAmB,SACO,IAA7C5G,EAAW2G,gBAAgBqa,iBACnChhB,EAAW2G,gBAAgBqa,eAAiB,SACO,IAA3ChhB,EAAW2G,gBAAgBsa,eACnCjhB,EAAW2G,gBAAgBsa,aAAe,KAEhDlkC,KAAK4pB,gBAAkB3G,EAAW2G,iBAAmB,CAClDxd,WAAY,GACZyd,iBAAkB,GAClBoa,eAAgB,GAChBC,aAAc,IAQjB,IAAIp9B,EAAS,GACb9G,KAAK8+B,SAAW7b,EAAW6b,UAAY,GAMvC9+B,KAAKmkC,iBAAmBlhB,EAAWkhB,kBAAoB,GAKvDnkC,KAAK++B,iBAAmB,GACxB/+B,KAAK8+B,SAAS96B,SAASnF,IACpB,GAAKA,EAAL,CAEA,IAAI8iB,EAAM3hB,KAAK8B,GAAG2iB,eAAe5lB,GACjC,GAAI8iB,EACD7a,EAAOzC,KAAKrE,KAAK8B,GAAGmE,SAAS0b,EAAK3hB,WAC9B,CACJA,KAAK++B,iBAAiB16B,KAAKxF,GAC3B,IAAIqJ,EAAM,IAAIhJ,MACX,KAAKc,KAAKkH,6CAA6CrI,MAE1DmB,KAAK8B,GAAGqG,OAAO8uB,QAAQ/uB,EAAK,CACzBvC,MAAO,CAAE9G,KAAImG,OAAQ,CAAEnG,GAAImB,KAAKnB,GAAIqI,KAAMlH,KAAKkH,QAErD,CAbe,CAaf,IAEHlH,KAAKokC,QAAUt9B,EAGf9G,KAAKqkC,cAAcphB,EAAWqhB,UAG9BxkC,MAAMkG,WAAWid,EACpB,CAQAohB,cAAcC,GACXtkC,KAAKukC,cAAgB,GACrB,IAAIC,EAAU,IACbF,GAAY,IAAItgC,SAASnF,IACvB,IAAI8iB,EAAM3hB,KAAK8B,GAAG2iB,eAAe5lB,GACjC,GAAI8iB,EACD6iB,EAAQngC,KAAKrE,KAAK8B,GAAGy4B,SAAS5Y,EAAK3hB,WAC/B,CACJA,KAAKukC,cAAclgC,KAAKxF,GACxB,IAAIqJ,EAAM,IAAIhJ,MACX,KAAKc,KAAKkH,6CAA6CrI,MAE1DmB,KAAK8B,GAAGqG,OAAO8uB,QAAQ/uB,EAAK,CACzBvC,MAAO,CAAE9G,KAAImG,OAAQ,CAAEnG,GAAImB,KAAKnB,GAAIqI,KAAMlH,KAAKkH,QAErD,KAEHlH,KAAKykC,SAAWD,CACnB,CAuCA3+B,QAEG,IAAI2R,EAAM1X,MAAM+F,QAGZi5B,EAAW9+B,KAAK8G,SAASpI,KAAKqI,GAAMA,EAAElI,MACzCmB,KAAK++B,kBAAoB,IAAI/6B,SAASnF,IACpCigC,EAASz6B,KAAKxF,EAAG,IAOpB,IAAIylC,EAAWtkC,KAAKwkC,UAAU9lC,KAAKqI,GAAMA,EAAElI,KAK3C,OAJCmB,KAAKukC,eAAiB,IAAIvgC,SAASnF,IACjCylC,EAASjgC,KAAKxF,EAAG,IAGb,CACJA,GAAImB,KAAKnB,GACT8C,KAAM3B,KAAK2B,MAAQ,SACnB6hC,SAAUxjC,KAAKwjC,SACft8B,KAAMlH,KAAKkH,KACXu8B,YAAazjC,KAAKyjC,YAClBC,cAAe1jC,KAAK0jC,eAAiB,CAAC,EACtCh7B,WAAY1I,KAAK0I,WACjB+xB,WAAYz6B,KAAKy6B,WACjBmJ,UAAW5jC,KAAK4jC,UAEhBC,kBAAmB7jC,KAAK6jC,kBAExBC,gBAAiB9jC,KAAK8jC,gBAEtBC,QAAS/jC,KAAK+jC,QAEdna,gBAAiB5pB,KAAK4pB,gBACtBjG,eAAgB3jB,KAAK2jB,eAErB4B,aAAc/N,EAAI+N,aAClBuZ,SAAUA,EACVqF,iBAAkBnkC,KAAKmkC,iBACvBG,SAAUA,EACVN,eAAgBhkC,KAAKgkC,eAE3B,CAcAU,cAGG,OAFoB1kC,KAAK8mB,gBAEJpoB,KAAKqI,GAAMA,EAAEJ,gBACrC,CAcAG,OAAOuJ,EAAK,MAAM,IACf,OAAOrQ,KAAKokC,QAAQx7B,OAAOyH,EAC9B,CASAzC,UAAU/O,GACP,OAAOmB,KAAK8G,QAAQC,GAAMA,GAAGlI,IAAMA,IAAI,EAC1C,CAWAioB,cAAczW,EAAK,MAAM,IACtB,OAAOrQ,KAAK8G,QAAQC,GAAMA,GAAKA,EAAE49B,eAAc/7B,OAAOyH,EACzD,CAWAu0B,YAAY/lC,GACT,GAAKA,KAEqC,GAAtCmB,KAAKmkC,iBAAiBj3B,QAAQrO,IAC/BmB,KAAKmkC,iBAAiB9/B,KAAKxF,IAIhBmB,KAAKokC,QAAQpX,MAAMjmB,GAAMA,EAAElI,IAAMA,KACjC,CACX,IAAI8iB,EAAM3hB,KAAK8B,GAAG2iB,eAAe5lB,GACjC,GAAI8iB,EACD3hB,KAAKokC,QAAQ//B,KAAKrE,KAAK8B,GAAGmE,SAAS0b,EAAK3hB,WACpC,CACJA,KAAK++B,iBAAmB/+B,KAAK++B,kBAAoB,GACjD/+B,KAAK++B,iBAAiB16B,KAAKxF,GAC3B,IAAIqJ,EAAM,IAAIhJ,MACX,KAAKc,KAAKkH,0CAA0CrI,MAEvDmB,KAAK8B,GAAGqG,OAAO8uB,QAAQ/uB,EAAK,CACzBvC,MAAO,CAAE9G,KAAImG,OAAQ,CAAEnG,GAAImB,KAAKnB,GAAIqI,KAAMlH,KAAKkH,QAErD,CACH,CACH,CAaAjB,SAASP,GACN,OAAO1F,KAAK8B,GAAGmE,SAASP,EAAQ1F,KACnC,CAWA6kC,YAAYl/B,GACT,IAAIm/B,EAAU9kC,KAAKokC,QAAQl+B,OAW3B,OAVAlG,KAAKokC,QAAUpkC,KAAK8G,QAAO,SAAU9H,GAClC,OAAOA,EAAEH,IAAM8G,EAAM9G,EACxB,IAIAmB,KAAKmkC,iBAAmBnkC,KAAKmkC,iBAAiBv7B,QAC1Cm8B,GAAQA,GAAOp/B,EAAM9G,KAGrBmB,KAAKokC,QAAQl+B,OAAS4+B,EAChB9kC,KAAK2H,OAIR0H,QAAQ/P,SAClB,CAUA0lC,aAAaC,EAAUC,GAIpB,IAAIC,EAAY,KACZC,EAAO,EACX,IAAK,IAAIlyB,EAAI,EAAGA,EAAIlT,KAAKokC,QAAQl+B,OAAQgN,IACtC,GAAIlT,KAAKokC,QAAQlxB,GAAGrM,YAAco+B,EAAU,CACzCE,EAAYnlC,KAAKokC,QAAQlxB,GACzBlT,KAAKokC,QAAQp4B,OAAOkH,EAAG,GACvBkyB,EAAOlyB,EACP,KACH,CAKH,IAAK,IAAImyB,EAAI,EAAGA,EAAIrlC,KAAKokC,QAAQl+B,OAAQm/B,IACtC,GAAIrlC,KAAKokC,QAAQiB,GAAGx+B,YAAcq+B,EAAU,CAIrCE,GAAQC,GACTA,IAEHrlC,KAAKokC,QAAQp4B,OAAOq5B,EAAG,EAAGF,GAC1B,KACH,CAGH,OAAOnlC,KAAK2H,MACf,CAWA29B,UAAU3/B,GAEP,OADiB3F,KAAK4N,UAAUjI,EAAM9G,IAM/BwQ,QAAQ/P,WAJZU,KAAKokC,QAAQ//B,KAAKsB,GACX3F,KAAK2H,OAIlB,CAWA49B,SAAS5/B,GAEN,OADiB3F,KAAK4N,UAAUjI,EAAM9G,IAQ/BwQ,QAAQ/P,WALZU,KAAKokC,QAAQ//B,KAAKsB,GACX3F,KAAK2H,OAKlB,CAWA69B,YAAYn1B,EAAK,MAAM,IACpB,OAAOrQ,KAAK8G,QAAQC,GAAMA,GAAc,SAATA,EAAE3C,MAAgBwE,OAAOyH,EAC3D,CASAywB,qBACG,OAAO9gC,KAAK8G,QAAQC,GAAMA,GAAKA,EAAE0+B,iBAAgB/mC,KAAKqI,GAAMA,EAAEF,YACjE,CAWA29B,QAAQ57B,EAAS,MAAM,IACpB,OAAO5I,KAAKykC,SAAS77B,OAAOA,EAC/B,CASA88B,UAAU7mC,GACP,OAAOmB,KAAKwkC,SAASz9B,GAAMA,EAAElI,IAAMA,IAAI,EAC1C,CASA8mC,YAAY/5B,GACT,IAAIk5B,EAAU9kC,KAAKykC,SAASv+B,OAM5B,OALAlG,KAAKykC,SAAWzkC,KAAKwkC,SAAQ,SAAUoB,GACpC,OAAOA,EAAI/mC,IAAM+M,EAAM/M,EAC1B,IAGIimC,GAAW9kC,KAAKykC,SAASv+B,OACnBlG,KAAK2H,OAIR0H,QAAQ/P,SAClB,CASAumC,UAAUj6B,GAEP,OADiB5L,KAAK0lC,UAAU95B,EAAM/M,IAM/BwQ,QAAQ/P,WAJZU,KAAKykC,SAASpgC,KAAKuH,GACZ5L,KAAK2H,OAIlB,CAWAI,QACG,IAAIA,EAAQ,IAAIu7B,EAAQtjC,MAMxB,OAHA+H,EAAM44B,WAAW4C,EAAa5C,cAC9B54B,EAAM64B,cAAc,CAAE/hC,GAAImB,KAAKnB,KAExBkJ,CACV,CAWAk5B,UACG,MAAO,sBAAsBjhC,KAAKnB,IACrC,CAOAinC,eACG,MAAO,4BAA4B9lC,KAAKnB,IAC3C,CAOAsiC,YAAYtiC,GACT,MAAO,sBAAsBmB,KAAKnB,MAAMA,GAC3C,CAOAknC,aACG,MAAO,uBAAuB/lC,KAAKnB,UACtC,CAOAmnC,iBACG,MAAO,oCAAoChmC,KAAKnB,IACnD,CAOAyiC,eACG,MAAO,4BAA4BthC,KAAKnB,IAC3C,CAKIonC,0BAED,GAAIjmC,KAAKkmC,eAAgB,CACtB,IAAIC,EAAWnmC,KAAKkmC,eAAeE,iBACnC,OAAID,EAAiBA,EAAS/5B,WAClB,IACf,CAGG,OAAOpM,KAAK4pB,gBAAgBxd,UAElC,CAEI65B,wBAAoBn/B,GAErB,GAAI9G,KAAKkmC,eAAgB,CACtB,IAAIC,EAAWnmC,KAAKkmC,eAAeE,iBAC/BD,IAAUA,EAAS/5B,WAAatF,EACvC,MAGG9G,KAAK4pB,gBAAgBxd,WAAatF,CAExC,CAEIu/B,gCAED,GAAIrmC,KAAKkmC,eAAgB,CACtB,IAAIC,EAAWnmC,KAAKkmC,eAAeE,iBACnC,OAAID,EAAiBA,EAAStc,iBAClB,IACf,CAGG,OAAO7pB,KAAK4pB,gBAAgBC,gBAElC,CAEIwc,8BAA0Bxc,GAE3B,GAAI7pB,KAAKkmC,eAAgB,CACtB,IAAIC,EAAWnmC,KAAKkmC,eAAeE,iBAC/BD,IAAUA,EAAStc,iBAAmBA,EAC7C,MAGG7pB,KAAK4pB,gBAAgBC,iBAAmBA,CAE9C,CAEIyc,8BACD,OAAOtmC,KAAK4pB,gBAAgBqa,cAC/B,CAEIqC,4BAAwBznC,GACzBmB,KAAK4pB,gBAAgBqa,eAAiBplC,CACzC,CAEI0nC,4BACD,OAAOvmC,KAAK4pB,gBAAgBsa,cAAgB,EAC/C,CAEIqC,0BAAsBz/B,GACvB9G,KAAK4pB,gBAAgBsa,aAAep9B,CACvC,CAOI0/B,iBACD,OAAOxmC,KAAK0I,YAAc1I,KAAKy6B,YAAcz6B,KAAK4iC,QACrD,CASA6D,gBACG,IAAI/gC,EAAS,CAAC,EAKd,OAJA1F,KAAK8G,SAAS9C,SAAS+C,IACpBA,EAAE2/B,aAAahhC,EAAO,IAGlBA,CACV,CASAyqB,cAGG,OADA7nB,QAAQC,KAAK,4CACN,CACV,CAYAogB,WAAWC,GAGR,OAFAtgB,QAAQ6G,MAAM,wBAEU,MAApBnP,KAAK8E,YAA4B,KAE9B9E,KAAK8E,YAAY+jB,UAAUD,GAAa5oB,KAAKnB,EACvD,CAUA8nC,SAAS/d,GAGN,OAFAtgB,QAAQ6G,MAAM,wBAEPnP,KAAK2oB,WAAWC,GAAa,WACvC,CAQAyG,KACG,OAAOrvB,KAAK6jC,mBAAqB,MACpC,CAEA+C,aAAaj9B,GACVrB,QAAQuO,IACL,UAAY7W,KAAKkH,KAAO,yCACxByC,EAEN,CAQA4sB,QAGG,IAEIsQ,EAAWnzB,KAAKuD,MAAMvD,KAAKC,UAAU3T,OAMzC,MARkB,CAAC,cAAe,WAItBgE,SAAS8iC,IAClBD,EAASC,GAAQ9mC,KAAK8mC,EAAK,IAGvBD,CACV,CAQAE,kBACG,IAAIjgC,EAAS,CAAC9G,KAAKqvB,MAEfrvB,KAAK8gC,qBAAqB56B,OAAS,GACpCY,EAAOzC,KAAK,gBAGf,IAII2iC,GAJYhnC,KAAKyjC,aAAe,IAIbvrB,MAAM,cAmB7B,OAjBI8uB,GAAUA,EAAOhjC,SAClBgjC,EAAOhjC,SAASijC,IACb,IAAIC,EAAiBD,EAAMp0B,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDlN,EAAQ3F,KAAK4N,UAAUs5B,GACd,MAATvhC,GAEJmB,EAAOzC,KAAKsB,EAAMkB,WAAW,IAMnCC,EAASA,EAAOghB,OACb9nB,KAAK8G,QAAQC,GAAe,UAATA,EAAE3C,MAAiB1F,KAAKqI,GAAMA,EAAEF,aAIzD,CAGAsgC,YAAYlZ,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAIsR,EAAWv/B,KAAK8gC,qBACpB9gC,KAAKw/B,UAAUvR,EAASA,EAASsR,GAEjC,IAAI6H,EAAYpnC,KAAKyjC,aAAe,GAGpC,IAAK2D,GAAapnC,KAAK8G,SAASZ,OAAS,EAAG,CACzC,IAAImhC,EAAernC,KAAK8G,QAAQC,GAAMA,EAAEugC,oBAAmB,GAC3D,GAAID,EAAcD,EAAY,IAAMC,EAAaxoC,GAAK,SAGnD,IAAKuoC,EAAUG,OAAQ,CACpB,IAAI7D,EAAgB1jC,KAAK0jC,eAAiB,CAAC,EAExC0D,EADC1D,GAAiBA,EAAcC,iBACpB5jC,EAAE2jC,EAAc8D,aAAe,cAG/B,GACTxnC,KAAK8B,GAAGuf,MAAMe,OAAO6L,EAAQpvB,IAAM,OAAS,KAC5CovB,EAAQpvB,IAEjB,CAEN,CAIA,IAAImoC,EAASI,EAAUlvB,MAAM,cAc7B,GAZI8uB,GAAUA,EAAOhjC,SAClBgjC,EAAOhjC,SAASijC,IACb,IAAIC,EAAiBD,EAAMp0B,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDlN,EAAQ3F,KAAK4N,UAAUs5B,GACd,MAATvhC,IAEJyhC,EAAYA,EAAUv0B,QAAQo0B,EAAOthC,EAAM6a,OAAOyN,IAAY,IAAG,KAKlEmZ,EAAUG,OAAQ,CACpB,IAAI7D,EAAgB1jC,KAAK0jC,eAAiB,CAAC,EAExC0D,EADC1D,GAAiBA,EAAcC,iBACpB5jC,EAAE2jC,EAAc8D,aAAe,cAG/B,GAAGxnC,KAAK8B,GAAGuf,MAAMe,OAAO6L,EAAQpvB,IAAM,OAAS,KACxDovB,EAAQpvB,IAGjB,CAEA,OAAOuoC,CACV,mBC79BH,IAAI7V,EAAW,EAAQ,OACnBkW,EAAe,EAAQ,OAE3BloC,EAAOC,QAAU,cAAgC+xB,EAC9C5xB,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,GAgDlB9B,KAAKgqB,SAAU,EAIfhqB,KAAK0nC,gBAAkB1nC,KAAK0nC,iBAAmB,GAI/C1nC,KAAK2nC,gBAAkB3nC,KAAK2nC,iBAAmB,GAI/C3nC,KAAK4nC,aAAe,GAIpB5nC,KAAK6nC,kBAAoB,GAIzB7nC,KAAK8nC,eAAiB,EAGzB,CAeAld,oBACG,MAAO,OACV,CAQA5kB,WAAWid,GACRnjB,MAAMkG,WAAWid,GAEjBjjB,KAAK2B,KAAO,QAMZ3B,KAAK+nC,UAAY,CAAC,EAKlB/nC,KAAKokB,UAAY,GAKjBpkB,KAAK69B,SAAW5a,EAAW4a,UAAY,GAMvC79B,KAAKgoC,YAAY/kB,EAAWglB,OAAS,CAAC,GAGtCjoC,KAAKokC,QAAU,KACfpkC,KAAKkoC,aAAajlB,EAAWnc,QAAU,IASvC9G,KAAK2vB,MAAQ1M,EAAW0M,OAAS,CAAC,EAG/B3vB,KAAK2vB,QACJ3vB,KAAK2vB,MAAM7F,MACZ9pB,KAAK2vB,MAAMtO,OACXrhB,KAAK2vB,MAAMtO,MAAMnb,OAAS,IAE1BlG,KAAK2vB,MAAM7F,KAAO,OAErB9pB,KAAKmoC,sBAAwBllB,EAAWmlB,sBAAwB,CAAC,EAEjEpoC,KAAKmG,SAAWnG,KAAKmG,UAAY,CAAC,EAE9B8c,GAAcA,EAAW9c,WAE1BnG,KAAKmG,SAASkiC,SAAW30B,KAAKuD,MAC3BgM,EAAW9c,SAASkiC,WAAY,GAEnCroC,KAAKmG,SAASmiC,WAAa50B,KAAKuD,MAC7BgM,EAAW9c,SAASmiC,aAAc,GAG3C,CAUAziC,QACG,IAAI8H,EAAS7N,MAAM+F,QAUnB,OARA8H,EAAOkwB,SAAW79B,KAAK69B,SAEvBlwB,EAAOs6B,MAAQjoC,KAAKuoC,cACpB56B,EAAO7G,OAAS9G,KAAKwoC,eACrB76B,EAAOgiB,MAAQ3vB,KAAK2vB,MAEpBhiB,EAAOxH,SAAWnG,KAAKmG,SAEhBwH,CACV,CAaAu6B,aAAaO,GACV,IAAIC,EAAY,IACfD,GAAiB,IAAIzkC,SAAS2kC,IAC5B,GAAiB,MAAbA,EAAmB,OAGvB,IAAI3jC,EAAShF,KAAK4oC,cAAcD,EAAU9Y,OAa1C,IAVK7qB,GAAUhF,KAAK8B,KACjBkD,EAAShF,KAAK8B,GAAG2V,WAAWkxB,EAAU/L,UAGlC53B,IACDhF,KAAK6oC,SAAW7oC,KAAK6oC,UAAY,CAAC,EAClC7oC,KAAK6oC,SAASF,EAAU9Y,OAAS7qB,KAIlCA,EAGF,OAFAhF,KAAK0nC,gBAAkB1nC,KAAK0nC,iBAAmB,QAC/C1nC,KAAK0nC,gBAAgBrjC,KAAKskC,GAI7B,IAAIhjC,EAAQX,EAAO4I,UAAU+6B,EAAU9L,SACvC,IAAKl3B,EAOF,OANA3F,KAAK2nC,gBAAkB3nC,KAAK2nC,iBAAmB,QAC/C3nC,KAAK2nC,gBAAgBtjC,KAAK,CACvBykC,MAAO9jC,EAAOnG,GACdg+B,QAAS8L,EAAU9L,QACnB8L,cAKD3oC,KAAK+oC,eAAepjC,KACtB3F,KAAK4nC,aAAe5nC,KAAK4nC,cAAgB,GACzC5nC,KAAK4nC,aAAavjC,KAAK,CAAEsB,QAAOgjC,eAInC,IAAIK,EACDN,EAAU9/B,QACN7B,GACEA,EAAE8oB,OAAS8Y,EAAU9Y,OAAS9oB,EAAEpB,MAAM9G,IAAM8pC,EAAU9L,UAC1D32B,OAAS,EAQd,GANK8iC,IACFhpC,KAAK6nC,kBAAoB7nC,KAAK6nC,mBAAqB,GACnD7nC,KAAK6nC,kBAAkBxjC,KAAK,CAAEskC,eAI7BhjC,GAAS3F,KAAK+oC,eAAepjC,IAAUqjC,EAAO,CAG/C,IAAIrnB,EAAMhc,EAAME,QAChB,IAAIojC,EAAc,IAAItjC,EAAMhG,YAAYgiB,EAAKhc,EAAMX,QAEnDikC,EAAYpZ,MAAQ8Y,EAAU9Y,MAE9B,IAAIA,EAAQ8Y,EAAU9Y,MAClB7iB,MAAMC,QAAQjN,KAAKioC,WAEpBpY,EAAQlqB,EAAMX,OAAOkC,MAGxBwhC,EAAUrkC,KAAK,CACZwrB,MAAOA,EACPlqB,MAAOsjC,GAEb,KAEHjpC,KAAKokC,QAAUsE,CAClB,CAOAF,eACG,IAAIU,EAAa,GAmBjB,OAlBAlpC,KAAKokC,QAAQpgC,SAAS2kC,IACnBO,EAAW7kC,KAAK,CACbwrB,MAAO8Y,EAAU9Y,MACjB+M,SAAU+L,EAAUhjC,MAAMX,OAAOnG,GACjCg+B,QAAS8L,EAAUhjC,MAAM9G,IAC1B,KAKJmB,KAAK0nC,iBAAmB,IAAI1jC,SAAS+C,IACnCmiC,EAAW7kC,KAAK0C,EAAE,KAGpB/G,KAAK4nC,cAAgB,IAAI5jC,SAAS+C,IAChCmiC,EAAW7kC,KAAK0C,EAAE4hC,UAAU,IAGxBO,CACV,CAUApiC,OAAOuJ,EAAK,MAAM,IAEf,OADKA,IAAIA,EAAK,KAAM,GACbrQ,KAAKokC,QAAQ1lC,KAAKqI,GAAMA,EAAEpB,QAAOiD,OAAOyH,EAClD,CAaA43B,QACG,OAAOjoC,KAAKmpC,QAAU,CAAC,CAC1B,CASA7iB,QAAQjW,EAAK,MAAM,IAIhB,OAAOrQ,KAAK8B,GAAGwkB,SAAStnB,GAAMgB,KAAKokB,UAAUlX,QAAQlO,EAAEH,KAAO,IAAG+J,OAC9DyH,EAEN,CASAyf,YAAYpY,GACT,IAAI/J,EAAS,KAQb,OANAtO,OAAOD,KAAKY,KAAK+nC,WAAa,CAAC,GAAG/jC,SAAS6rB,IACnCliB,GAAU3N,KAAK+nC,UAAUlY,IAAUnY,IACrC/J,EAASkiB,EACZ,IAGIliB,CACV,CAQAy7B,aACG,OAAKppC,KAAKmpC,OAAOvM,UAEV58B,KAAK8B,GAAG2V,WAAWzX,KAAKmpC,OAAOvM,WAFJ,IAGrC,CASAgM,cAAc/Y,GACX,IAAIiZ,EAAQ9oC,KAAK+nC,UAAUlY,GAC3B,OAAIiZ,EACM9oC,KAAKsmB,SAAStnB,GAAMA,EAAEH,IAAMiqC,IAAO,GAEtC,IACV,CASArxB,WAAWqxB,GACR,OAAIA,EACM9oC,KAAKsmB,SAAStnB,GAAMA,EAAEH,IAAMiqC,IAAO,GAEtC,IACV,CASAO,MAAMzgC,EAAS,MAAM,IAClB,OAAQ5I,KAAKspC,QAAU,IAAI1gC,OAAOA,EACrC,CASAo/B,YAAY7hC,GAETnG,KAAKmpC,OAASnpC,KAAK8B,GAAG2D,UAAUU,GAEhC,IAAIojC,EAAkB,CAAC,EAKnBC,EAAW,GAIf,IAAIC,EAAc,CAACzkC,EAAQ6qB,KACnB7qB,IAMLhF,KAAK+nC,UAAUlY,GAAS7qB,EAAOnG,GAC/B0qC,EAAgBvkC,EAAOnG,IAAMmG,EAAOnG,GAAE,EAQrC6qC,EAAcL,KACdA,GAAS,IAAIrlC,SAAS2lC,IAGpBH,EAASnlC,KAAKslC,EAAK,GAEpB,EAGL3pC,KAAK8nC,eAAiB9nC,KAAK8nC,gBAAkB,GAE7C,IAAI8B,EAAc,CAACC,EAAY5B,KACvB4B,IAEJ5B,GAAS,IAAIjkC,SAAS2lC,IAkBpB,IAAIG,EAAYD,EAAWj8B,UAAU+7B,EAAK9M,SAC1C,GAAKiN,EAAL,CAWA,IAAIpjC,EAAa1G,KAAK8B,GAAG2V,WAAWqyB,EAAU3jC,SAASO,YAClDA,GAUL+iC,EAAY/iC,EAAYijC,EAAK9Z,OAE7B6Z,EAAWC,EAAKN,OAEhBO,EAAYljC,EAAYijC,EAAKN,QAb1BrpC,KAAK8nC,eAAezjC,KAAK,CACtB4M,QAAS,oDAAoD64B,EAAU3jC,SAASO,cAChFiD,KAAM,CACHggC,SART,MAPG3pC,KAAK8nC,eAAezjC,KAAK,CACtB4M,QAAS,mCAAmC04B,EAAK9M,WACjDlzB,KAAM,CACHggC,SAsB0B,GACpC,EAQL,IAAII,EAAa/pC,KAAKopC,aACjBW,GAWLN,EAAYM,EAAY,eAExBL,EAAWvjC,EAASkjC,OAEpBO,EAAYG,EAAY5jC,EAASkjC,OAGjCrpC,KAAKspC,OAASE,EACdxpC,KAAKokB,UAAY/kB,OAAOD,KAAKmqC,IAjB1BvpC,KAAK8nC,eAAezjC,KAAK,CACtB4M,QAAS,oCACTtH,KAAM,CACHizB,SAAU58B,KAAKmpC,QAAQvM,WAenC,CAOA2L,cACG,OAAOvoC,KAAK8B,GAAG2D,UAAUzF,KAAKmpC,QAAU,CAAC,EAC5C,CAWAphC,QACG,IAAIA,EAAQ,IAAI0/B,EAAaznC,MAM7B,OAHA+H,EAAM44B,WAAW3gC,KAAKL,YAAYghC,cAClC54B,EAAM64B,cAAc,CAAE/hC,GAAImB,KAAKnB,KAExBkJ,CACV,CASAiiC,gBAAgBhlC,GACb,QAAKA,GAIFhF,KAAKsmB,SAAS9O,GACJA,EAAI3Y,IAAMmG,EAAOnG,KACxBqH,OAAS,CAElB,CASA6iC,eAAepjC,GACZ,IAAKA,EAAO,OAAO,EAGnB,IAAIX,EAASW,EAAMX,OAKnB,IAAIilC,EAAetkC,EAAMgB,eAEzB,OAAO3G,KAAKgqC,gBAAgBhlC,IAAWhF,KAAKgqC,gBAAgBC,EAC/D,CAYAthB,WAAWC,GAIR,OAHAtgB,QAAQ6G,MACL,sEAEInP,KAAK8E,YAAYikB,SAASH,GAAa5oB,KAAKnB,EACtD,CAOIymB,cACD,OAAOtlB,KAAKmG,SAASkiC,WAAY,CACpC,CAOI7B,iBACD,OAAO,CACV,CAQA0D,aACG,OAAOlqC,KAAKmqC,WAAY,CAC3B,CAEI9D,gCACD,IAAIxc,EAAmB/pB,MAAMumC,0BAS7B,OAPuB,MAApBxc,GAC0B,MAA1BA,EAAiBxI,OAChBwI,EAAiBxI,MAAMnb,SAExB2jB,EAAmB7pB,KAAK2vB,OAGpB9F,CACV,oBCxqBH,IAAI7G,EAAY,EAAQ,OACxB,MAAMonB,EAAU,EAAQ,OAElBC,EAA0B,EAAQ,OAExC9qC,EAAOC,QAAU,cAA4BwjB,EAC1CrjB,YAAYsjB,EAAYnhB,GACrBhC,MAAM,CAAC,SAAUgC,GAEjB9B,KAAKgG,WAAWid,GAGhBjjB,KAAKgJ,WAAWhF,SAAS/E,IACtBA,EAAEqrC,gBAAgB,GAExB,CASAtkC,WAAWid,GASRjjB,KAAKnB,GAAKokB,EAAWpkB,GACrBmB,KAAKkH,KAAO+b,EAAW/b,MAAQ,GAC/BlH,KAAK2B,KAAOshB,EAAWthB,MAAQ,UAC/B3B,KAAKuqC,cAAgBtnB,EAAWsnB,eAAiB,KAGjD,IAAIC,EAAexqC,KAAKyqC,WAAa,CAAC,EACtCzqC,KAAKyqC,UAAY,CAAC,GACjBxnB,EAAWynB,YAAc,IAAI1mC,SAAS2mC,IACpC,IAAInM,EAAMx+B,KAAK8B,GAAG85B,kBAAkB+O,EAAK3qC,MACrCw+B,EACDx+B,KAAKyqC,UAAUE,GAAOnM,EAIlBgM,EAAaG,GACd3qC,KAAKyqC,UAAUE,GAAOH,EAAaG,GAEnC3qC,KAAKoP,KACF,UACA,KAAKpP,KAAKkH,sDAAsDyjC,KAChE,CAAEnjB,QAASxnB,KAAKnB,GAAI8rC,OAG7B,IAGH3qC,KAAK4qC,aAAe3nB,EAAW4nB,aAAe,CAAC,EAE/C/qC,MAAMkG,WAAWid,GAGZjjB,KAAKmB,QACPnB,KAAKmB,MAAQnB,KAAKkH,KAExB,CAQArB,QAEQ7F,KAAKmB,QACPnB,KAAKmB,MAAQnB,KAAKkH,MAIrB,IAAIyC,EAAO7J,MAAM+F,QAQjB,IAAK,IAAI5G,IANU,CAAC,KAAM,OAAQ,iBACrB+E,SAAS+C,IACnB4C,EAAK5C,GAAK/G,KAAK+G,EAAE,IAGpB4C,EAAK+gC,WAAa,GACJ1qC,KAAKyqC,UAGhB9gC,EAAK+gC,WAAWrmC,KACbrE,KAAKyqC,UAAUxrC,GAAGJ,IAAMmB,KAAKyqC,UAAUxrC,GAAG6rC,WAWhD,OAPAnhC,EAAKkhC,YAAc7qC,KAAK4qC,aAOjBjhC,CACV,CAWAohC,kBACG,OAAO/qC,KAAKuqC,aACf,CAOAS,WACGhrC,KAAKuqC,cAAgB,saACkWvqC,KAAKnB,8gBAc/X,CAQAosC,YAAYC,GACTlrC,KAAKuqC,cAAgBW,CACxB,CAcAL,YAAYx6B,EAAK,MAAM,IACpB,IAAI86B,EAAiB9rC,OAAOD,KAAKY,KAAK4qC,cAAclsC,KAAKO,GAC/Ce,KAAK4qC,aAAa3rC,KAQ5B,OAJIe,KAAKwnB,SAAwB,eAAbxnB,KAAKoE,MACtB+mC,EAAiBA,EAAerjB,OAAO9nB,KAAKwnB,QAAQqjB,gBAGhDM,EAAeviC,OAAOyH,EAChC,CAQA+6B,uBAAuBC,GACpB,OAAOrrC,KAAK6qC,aAAa9K,GACfA,EAAElhC,IAAMwsC,IACf,EACN,CAQAC,oBAAoBD,GACjB,OAAOrrC,KAAK6qC,aAAavnC,GACfA,EAAEioC,IAAMF,GAErB,CAQAG,oBAAoBH,GACjB,OAAOrrC,KAAK6qC,aAAavnC,GACfA,EAAEmoC,MAAQJ,GAEvB,CAQAK,iBAAiB1P,UACPh8B,KAAK4qC,aAAa5O,EAAQn9B,GACpC,CAcA8sC,wBAAwB3P,GACrB,IAAI4P,EAAK5P,EAAQ6P,eACbJ,EAAO,KACPG,EAAGE,YACJL,EAAOG,EAAGE,UAAUjtC,IAGvB,IAAI0sC,EAAK,KAWT,OAVIK,EAAGG,YACJR,EAAKK,EAAGG,UAAUltC,IAGJ,CACdA,GAAIm9B,EAAQn9B,GACZ8C,KAAMq6B,EAAQr6B,KACd8pC,KAAMA,EACNF,GAAIA,EAGV,CAQAS,iBAAiBhQ,GACd,IAAIiQ,EAAajsC,KAAK2rC,wBAAwB3P,GAC1CiQ,EAAWR,MAAQQ,EAAWV,IAAMvP,EAAQtnB,OAC7C1U,KAAK4qC,aAAaqB,EAAWptC,IAAMotC,EAInCjsC,KAAK0rC,iBAAiB1P,EAE5B,CAUAhzB,SAASqH,EAAK,MAAM,IAIjB,OAHkBhR,OAAOD,KAAKY,KAAKyqC,WAAW/rC,KAAKO,GACzCe,KAAKyqC,UAAUxrC,KAEN2J,OAAOyH,EAC7B,CAQA67B,WAAWlQ,GACRh8B,KAAKyqC,UAAUzO,EAAQn9B,IAAMm9B,EAAQ8O,WAAa9O,CACrD,CAQAmQ,YAAYttC,GACT,OAAOmB,KAAKyqC,UAAU5rC,IAAO,IAChC,CAQAutC,oBAAoBf,GACjB,OAAOrrC,KAAKgJ,UAAU+2B,GACZA,EAAE+K,WAAaO,IACtB,EACN,CASAgB,cAAc1qB,UACJ3hB,KAAKyqC,UAAU9oB,EAAI9iB,IAAM8iB,EAAImpB,UACvC,CASAwB,cAAcloC,GACX,OAAsC,MAA/BpE,KAAKusC,kBAAkBnoC,EACjC,CASAooC,mBAAmBC,GAChB,IAAIzjC,EAAW,GAYf,OAXsBhJ,KAAK6qC,aAAavnC,GAC9BA,EAAEmoC,MAAQgB,EAAY3B,YAEhB9mC,SAASV,IACtB,IAAI04B,EAAUh8B,KAAKgJ,UAAU/J,GACnBA,EAAE6rC,WAAaxnC,EAAEioC,KACxB,GACCvP,GACDhzB,EAAS3E,KAAK23B,EACjB,IAEIhzB,CACV,CASA0jC,uBAAuBD,GACpB,IAAIzjC,EAAW,GAYf,OAXsBhJ,KAAK6qC,aAAavnC,GAC9BA,EAAEioC,IAAMkB,EAAY3B,YAEd9mC,SAASV,IACtB,IAAI04B,EAAUh8B,KAAKgJ,UAAU/J,GACnBA,EAAE6rC,WAAaxnC,EAAEmoC,OACxB,GACCzP,GACDhzB,EAAS3E,KAAK23B,EACjB,IAEIhzB,CACV,CAUA2jC,YAAYF,EAAal3B,GAStB,IAAIq3B,EAAa5sC,KAAK6sC,iBAAiBJ,GACnC/mC,EAASonC,EAAmBF,EAAY,cAAer3B,EAAQvV,MACnE,OAAO0F,EAAOQ,OAAS,EAClBR,EAAOQ,OAAS,EACbR,EACAA,EAAO,GACV,IACR,CAYAqnC,kBAAkBN,GACf,IAAIG,EAAa5sC,KAAK6sC,iBAAiBJ,GAEnC3lC,EAASgmC,EACVF,EACA,oBACA,KACA5sC,MAEH,OAAO8G,EAAOZ,OAAS,EAAIY,EAAS,IACvC,CAWAkmC,oCAAoCC,EAAMC,GACjBltC,KAAK6qC,aAAavnC,GAC9BA,EAAEioC,IAAM0B,EAAKxB,OAGPznC,SAASV,IACjB4pC,EAAS5pC,EAAEzE,MACbquC,EAAS5pC,EAAEzE,IAAMyE,EACjBtD,KAAKgtC,oCAAoC1pC,EAAG4pC,GAC/C,GAEN,CACAC,iCAAiCV,GAC9B,IAAIW,EAAkBptC,KAAK6qC,aAAavnC,GAC9BA,EAAEioC,IAAMkB,EAAY3B,YAE1BoC,EAAW,CAEf,EAYA,OATAE,EAAgBppC,SAASV,IACtB4pC,EAAS5pC,EAAEzE,IAAMyE,EACjBtD,KAAKgtC,oCAAoC1pC,EAAG4pC,EAAS,IAOjD7tC,OAAOD,KAAK8tC,GAAUxuC,KAAKsV,GAAMk5B,EAASl5B,IACpD,CAEA64B,iBAAiBJ,GACd,IAGIY,EAHAC,EAAY,CAAC,EAiBjB,OAfGttC,KAAKmtC,iCAAiCV,GAElBzoC,SAASipC,KAE7BI,EAAOrtC,KAAKosC,oBAAoBa,EAAK1B,OAC3B+B,EAAUD,EAAKxuC,IAAMwuC,IAE/BA,EAAOrtC,KAAKosC,oBAAoBa,EAAKxB,SAC3B6B,EAAUD,EAAKxuC,IAAMwuC,EAAI,IAGrBhuC,OAAOD,KAAKkuC,GACzB5uC,KAAKsV,GAAMs5B,EAAUt5B,KACrBpL,QAAQm3B,GAAMA,EAAElhC,IAAM4tC,EAAY5tC,IAGzC,CAUA0uC,mBAAmBd,GAChB,IAAIG,EAAa5sC,KAAK0sC,uBAAuBD,GACzC3lC,EAASgmC,EACVF,EACA,qBACA,KACA5sC,MAEH,OAAO8G,EAAOZ,OAAS,EAAIY,EAAS,IACvC,CAQAylC,kBAAkBnoC,GAIf,OAHcpE,KAAKgJ,UAAU+2B,GACnBA,EAAEyN,YAAcppC,IACvB,IAIO,IAEb,GAsCH,IAAI0oC,EAAqB,CACtB/iC,EACA2M,EACA+2B,EACAjmB,EACAkmB,EACAC,KAUA,QANwB,IAAbD,IACRA,EAAY,SAEY,IAAhBC,IACRA,EAAe,IAEC,GAAf5jC,EAAK7D,OACN,OAAOwnC,EACH,CAEJ,MAAML,EAAOtjC,EAAKmK,QAGlB,IAA6C,GAAzCy5B,EAAazgC,QAAQmgC,EAAKvC,WAAkB,CAE7C6C,EAAatpC,KAAKgpC,EAAKvC,WAEvB,IAAIpoC,EAAQ,KAGN2qC,aAAgBhD,IACnB3nC,EAAQ2qC,EAAK32B,GAAQk3B,MAAMP,EAAMI,IAItB,OAAV/qC,IAAgBA,EAAQ,IAC5BgrC,EAAYtD,EAAQsD,EAAWhrC,GAG/BqH,EAAOqgC,EAAQrgC,EAAMyd,EAAQklB,uBAAuBW,GACvD,CAGA,OAAOP,EACJ/iC,EACA2M,EACA+2B,EACAjmB,EACAkmB,EACAC,EAEN,oBCjnBH,IAAI3qB,EAAY,EAAQ,OACR,EAAQ,OAExBzjB,EAAOC,QAAU,cAAyBwjB,EACvCrjB,YAAYsjB,EAAYnhB,GACrBhC,MAAM,CAAC,OAAQ,QAASgC,GAExB9B,KAAKgG,WAAWid,EAMnB,CASAjd,WAAWid,GASRjjB,KAAKnB,GAAKokB,EAAWpkB,GACrBmB,KAAKkH,KAAO+b,EAAW/b,MAAQ,WAC/BlH,KAAK2B,KAAOshB,EAAWthB,MAAQ,OAC/B3B,KAAKiO,KAAOgV,EAAWhV,MAAQ,GAC/BjO,KAAKmG,SAAW8c,EAAW9c,UAAY,CAAC,EACxCnG,KAAKmG,SAASqqB,MAAQvN,GAAY9c,UAAUqqB,OAAS,QACrDxwB,KAAKmG,SAASkG,GAAK4W,GAAY9c,UAAUkG,IAAM,GAG/CvM,MAAMkG,WAAWid,GAGZjjB,KAAKmB,QACPnB,KAAKmB,MAAQnB,KAAKkH,KAExB,CAQArB,QAGQ7F,KAAKmB,QACPnB,KAAKmB,MAAQnB,KAAKkH,MAIrB,IAAIyC,EAAO7J,MAAM+F,QAOjB,MALmB,CAAC,KAAM,OAAQ,WAAY,QACjC7B,SAAS+C,IACnB4C,EAAK5C,GAAK/G,KAAK+G,EAAE,IAGb4C,CACV,oBCjEH,IAAIkkC,EAAW,CACZ,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OAKR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OAKR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OAER,EAAQ,OACR,EAAQ,OAKR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAOPC,EAAQ,CAAC,EACbD,EAAS7pC,SAASiP,IACXA,EAAE86B,SAASC,SACZ/6B,EAAIA,EAAE86B,SAETD,EAAM76B,EAAE+6B,SAAS5pC,KAAO6O,CAAC,IAG5B1T,EAAOC,QAAU,MAMdorB,gBAAgBva,EAAK,MAAM,IACxB,IAAIoX,EAAQ,GACZ,IAAK,IAAIxU,KAAK66B,EAAO,CAClB,IAAIG,EAAIH,EAAM76B,GACV5C,EAAG49B,IACJxmB,EAAMpjB,KAAK4pC,EAEjB,CACA,OAAOxmB,CACV,CAOAmD,eAAellB,EAAQZ,EAAa4P,GAQjC,GAPAA,EAASA,GAAU,KAED,qBAAdhP,EAAOtB,MACRsB,EAAOtB,IAAM,iBAIZsB,EAAOtB,IACR,OAAK0pC,EAAMpoC,EAAOtB,KASX,IAAI0pC,EAAMpoC,EAAOtB,KAAKsB,EAAQZ,EAAa4P,IAR/CpM,QAAQ6G,MACL,WACGzJ,EAAOtB,IACP,+CAEC,IAAI0pC,EAAY,KAAEpoC,EAAQZ,EAAa4P,IAKjD,IAAIxM,EAAM,IAAIhJ,MAAM,qBAAqBwG,EAAOtB,QAOhD,OANAkE,QAAQ6G,MAAMjH,GACdI,QAAQ6G,MAAM,CACXA,MAAOjH,EACPxC,OAAQA,EACRZ,YAAaA,IAET,IAEb,CAEA8lB,iBAAiBxmB,GACd,GAAI0pC,EAAM1pC,GACP,OAAO0pC,EAAM1pC,GAEhBkE,QAAQ6G,MAAM,oBAAoB/K,KAErC,oBCjJH,MAAM3E,EAAc,EAAQ,OAM5B,SAASyuC,EAAYjgB,EAAStoB,GAC3B,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMkB,WAAY,OAAO,KAC9B,MAAMA,EAAalB,EAAMkB,WAEzB,IAAInE,EAAQ,KAEZ,GAAImE,EAAWqG,QAAQ,MAAQ,EAAG,CAC/B,IAAI6rB,EAAUlyB,EAAW2hB,MAAM,KAAK,GACpC9lB,EAAQurB,EAAQpnB,IAAeonB,EAAQ8K,EAC1C,MACGr2B,EAAQurB,EAAQpnB,GAGnB,GAAa,MAATnE,IAAkByrC,MAAMzrC,GACzB,OAAOA,EAKV,IAAK,MAAMsR,KAAKia,EAAS,CACtB,MAAM7pB,EAAM4P,EAAEwU,MAAM,KAAK,GACrBpkB,GAAOA,GAAOuB,EAAM9G,KACrB6D,EAAQurB,EAAQja,GAEtB,CAQA,OALa,MAATtR,GAAkC,iBAATA,GAAqByrC,MAAMzrC,KACrDiD,EAAM6a,SAEN9d,EAAQiD,EAAM6a,OAAOyN,IAEjBvrB,CACV,CA2BAnD,EAAOC,QAAU,cAAgCC,EAC9CE,YAAYE,EAAQiC,GACjBjC,EAASA,GAAU,yBAED,IAAPiC,GACRwG,QAAQ6G,MAAM,oDAGjBrP,MAAM,KAAMD,EAAQiC,GAEpB9B,KAAKyS,QAAU,CAAElC,SAAU,MAC3BvQ,KAAKkM,UAAY,CAAC,EAClBlM,KAAKouC,UAAY,CAAC,EAGlBpuC,KAAKquC,aAAe,GACpBruC,KAAKsuC,QAGWtuC,KAAKuB,OAAS,CAC3BgC,UAAW,CACRnB,SAAU,QAGbmsC,eAAgB,SAAUtgC,GACvB,IAAIN,EAAS,GACb,IACG,IAAI6gC,EAAMC,SAASC,cAAc,OACjCF,EAAIG,UAAY1gC,EAEhBN,EAAS6gC,EAAII,aAAeJ,EAAIK,WAAa,EAGhD,CAFE,MAAO3mC,GACNyF,GAAUM,GAAQ,IAAI4E,QAAQ,gBAAiB,GAClD,CAEA,OAAOlF,CACV,EAQN,CAEAtK,KAAKnB,EAAU,CAAC,GACblC,KAAKkM,UAAYhK,CACpB,CAYAoD,QAAQ2oB,EAASmgB,EAAYpuC,KAAKouC,WAE/B,GAAIA,GAAW/sB,OAAOnb,QAAqB,MAAX+nB,EAAiB,OAAO,EAGxD,IAAKmgB,GAAW/sB,OAAOnb,QAAqB,MAAX+nB,EAAiB,OAAO,EAEzD,IAAItgB,EAA4B,QAAnBygC,EAAUtkB,KA2FvB,OAzFAskB,EAAU/sB,MAAMrd,SAAS4E,IAEtB,GAAIA,GAAQyY,OAAOnb,OAIhB,YAFGyH,EADoB,OAAnBygC,EAAUtkB,KACFnc,GAAU3N,KAAKsF,QAAQ2oB,EAASrlB,GAC9B+E,GAAU3N,KAAKsF,QAAQ2oB,EAASrlB,IAI5C,IAAKA,EAAOxE,MAAQwE,EAAOmnB,KAAM,OAEtC,MAAM4Y,GAAa3oC,KAAKsuC,SAAW,IAAI1lC,QACnC7B,GAAMA,EAAElI,IAAM+J,EAAOxE,KAAO2C,EAAEF,YAAc+B,EAAOxE,MACrD,GAEF,IAAKukC,EAAW,OAEhB,IAAImG,EAAa,KAIbC,EAAgBpG,EAAUvkC,SAEF,IAAjBukC,EAAUvkC,MACE,eAAhBukC,EAAU9pC,IACX8pC,EAAUvkC,IAAM,eAChB2qC,EAAgBpG,EAAUvkC,KACtB2qC,EAAgB,eAG1B,IAAIrsC,EAAQ,KAQZ,OALGA,EADCimC,EAAU7X,aA9HvB,SAA8B7C,EAAStoB,GACpC,IAAIqpC,EAAe,GAEnB,GAAI/gB,EAAS,CACV,IAAI6C,EAAenrB,EAAMmrB,eACzB,GAAI7C,EAAQ6C,GACTke,GACIrpC,EAAMyB,WACF6mB,EAAQ6C,GAAcnrB,EAAMyB,WAAWP,YACvC,QACJlB,EAAM0B,YACF4mB,EAAQ6C,GAAcnrB,EAAM0B,YAAYR,YACxC,OACLonB,EAAQ6C,GAAcjyB,IACtBovB,EAAQ6C,OACP,CACJ,IAAIme,EAAWf,EAAYjgB,EAAStoB,GACpB,MAAZspC,IACDD,EAAeC,EAErB,CACH,CACA,OAAOD,CACV,CAwGoBE,CAAqBjhB,EAAS0a,GAE9BuF,EAAYjgB,EAAS0a,GAGxBoG,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACW,MAATrsC,IAAeA,EAAQ,IAE3BosC,EAAa9uC,KAAKmvC,UAAUzsC,EAAOkG,EAAOmnB,KAAMnnB,EAAOlG,OACvD,MACH,IAAK,OACL,IAAK,WACFosC,EAAa9uC,KAAKovC,UAAU1sC,EAAOkG,EAAOmnB,KAAMnnB,EAAOlG,OACvD,MACH,IAAK,SACL,IAAK,YACL,IAAK,UACFosC,EAAa9uC,KAAKqvC,YAAY3sC,EAAOkG,EAAOmnB,KAAMnnB,EAAOlG,OACzD,MACH,IAAK,OACFosC,EAAa9uC,KAAKsvC,UAAU5sC,EAAOkG,EAAOmnB,KAAMnnB,EAAOlG,OACvD,MACH,IAAK,UACFosC,EAAa9uC,KAAKuvC,aAAa7sC,EAAOkG,EAAOmnB,KAAMnnB,EAAOlG,OAC1D,MACH,IAAK,OACFosC,EAAa9uC,KAAKwvC,UAAU9sC,EAAOkG,EAAOmnB,KAAMnnB,EAAOlG,OACvD,MACH,IAAK,eACL,IAAK,gBACFosC,EAAa9uC,KAAKyvC,kBACfxhB,EACA0a,EACA//B,EAAOmnB,KACPnnB,EAAOlG,OAEV,MACH,IAAK,cACFosC,EAAa9uC,KAAK0vC,gBACfzhB,EACArlB,EAAOmnB,KACPnnB,EAAOlG,OAMbiL,EADoB,QAAnBygC,EAAUtkB,KACFnc,GAAUmhC,EAEVnhC,GAAUmhC,CACtB,IAGInhC,CACV,CAEAwhC,UAAUzsC,EAAOqtB,EAAM4f,GACpB,IAAIhiC,GAAS,EAEbjL,EAAQA,EAAM6kC,OAAOlvB,cACrB3V,EAAQ1C,KAAKuB,OAAOgtC,eAAe7rC,GAKnC,MAAMktC,GAHND,EAAeA,EAAapI,OAAOlvB,cAAcxF,QAAQ,OAAQ,MAG/B2V,MAAM,KAExC,OAAQuH,GACL,IAAK,WACF6f,EAAa5rC,SAAS2R,IACL,GAAVhI,IAEDA,EAASjL,EAAMwK,QAAQyI,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFhI,GAAS,EACTiiC,EAAa5rC,SAAS2R,IACL,GAAVhI,IAEDA,EAASjL,EAAMwK,QAAQyI,GAAO,EAAC,IAErC,MACH,IAAK,SACFi6B,EAAa5rC,SAAS2R,IACL,GAAVhI,IAEDA,EAASjL,GAASiT,EAAG,IAE3B,MACH,IAAK,YACFhI,GAAS,EACTiiC,EAAa5rC,SAAS2R,IACL,GAAVhI,IAEDA,EAASjL,GAASiT,EAAG,IAE3B,MACH,IAAK,WACFhI,EAAkB,IAATjL,GAAwB,MAATA,EACxB,MACH,IAAK,eACFiL,EAAkB,IAATjL,GAAwB,MAATA,EACxB,MACH,QACGiL,EAAS3N,KAAK6vC,gBAAgBntC,EAAOqtB,EAAM4f,GAIjD,OAAOhiC,CACV,CAEAyhC,UAAU1sC,EAAOqtB,EAAM4f,GACpB,IAAIhiC,GAAS,EAOb,OALMjL,aAAiB+d,OAAO/d,EAAQ,IAAI+d,KAAK/d,IAEzCitC,aAAwBlvB,OAC3BkvB,EAAe,IAAIlvB,KAAKkvB,IAEnB5f,GACL,IAAK,OACFpiB,EAASjL,EAAQitC,EACjB,MACH,IAAK,UACFhiC,EAASjL,EAAQitC,EACjB,MACH,IAAK,gBACFhiC,EAASjL,GAASitC,EAClB,MACH,IAAK,mBACFhiC,EAASjL,GAASitC,EAClB,MACH,QACGhiC,EAAS3N,KAAK6vC,gBAAgBntC,EAAOqtB,EAAM4f,GAIjD,OAAOhiC,CACV,CAEA0hC,YAAY3sC,EAAOqtB,EAAM4f,GACtB,IAAIhiC,GAAS,EAKb,OAHAjL,EAAQotC,OAAOptC,GACfitC,EAAeG,OAAOH,GAEd5f,GACL,IAAK,QACL,IAAK,SACFpiB,EAASjL,GAASitC,EAClB,MACH,IAAK,YACFhiC,EAASjL,GAASitC,EAClB,MACH,IAAK,OACFhiC,EAASjL,EAAQitC,EACjB,MACH,IAAK,UACFhiC,EAASjL,EAAQitC,EACjB,MACH,IAAK,gBACFhiC,EAASjL,GAASitC,EAClB,MACH,IAAK,mBACFhiC,EAASjL,GAASitC,EAClB,MACH,QACGhiC,EAAS3N,KAAK6vC,gBAAgBntC,EAAOqtB,EAAM4f,GAIjD,OAAOhiC,CACV,CAEA2hC,UAAU5sC,EAAOqtB,EAAM4f,GACpB,IAAIhiC,GAAS,EAMb,OAFKX,MAAMC,QAAQ0iC,KAAeA,EAAe,CAACA,IAE1C5f,GACL,IAAK,SACErtB,IAAOiL,EAASgiC,EAAaziC,QAAQxK,IAAU,GACnD,MACH,IAAK,YACSiL,GAAPjL,GAAgBitC,EAAaziC,QAAQxK,GAAS,EAElD,MACH,QACGiL,EAAS3N,KAAK6vC,gBAAgBntC,EAAOqtB,EAAM4f,GAIjD,OAAOhiC,CACV,CAEA4hC,aAAa7sC,EAAOqtB,EAAM4f,GACvB,IAAIhiC,GAAS,EAWb,OAPMA,EADE,WADAoiB,EAEOrtB,GAASitC,EAGT3vC,KAAK6vC,gBAAgBntC,EAAOqtB,EAAM4f,GAI1ChiC,CACV,CAEA6hC,UAAU9sC,EAAOqtB,EAAM4f,GACpB,IAAKjtC,EAAO,OAAO,EACnB,IAAIiL,GAAS,EAIb,OAAQoiB,GACL,IAAK,kBACFpiB,EAASjL,GAAS1C,KAAKyS,QAAQlC,SAC/B,MACH,IAAK,sBACF5C,EAASjL,GAAS1C,KAAKyS,QAAQlC,SAC/B,MACH,IAAK,uBACGvD,MAAMC,QAAQvK,KAAQA,EAAQ,CAACA,IAEpCiL,EACGjL,EAAMkG,QAAQqK,IAAOA,EAAE1C,UAAY0C,IAAMjT,KAAKyS,QAAQlC,WAClDrK,OAAS,EAChB,MACH,IAAK,2BACG8G,MAAMC,QAAQvK,KAAQA,EAAQ,CAACA,IAEpCiL,EACGjL,EAAMkG,QAAQqK,IAAOA,EAAE1C,UAAY0C,IAAMjT,KAAKyS,QAAQlC,WAClDrK,OAAS,EAChB,MACH,IAAK,SACFyH,GAAUjL,GAAS,IAAIwK,QAAQyiC,IAAiB,EAChD,MACH,IAAK,YACFhiC,GAAUjL,GAAS,IAAIwK,QAAQyiC,GAAgB,EAC/C,MACH,QACGhiC,EAAS3N,KAAK6vC,gBAAgBntC,EAAOqtB,EAAM4f,GAIjD,OAAOhiC,CACV,CAEAkiC,gBAAgB5hB,EAAS8B,EAAM4f,GAC5B,IAAIhiC,GAAS,EAEb,IAAKgiC,EAAc,OAAOhiC,EAG1B,MAAMoiC,EAAUJ,EAAannB,MAAM,KAAK,GACrCje,EAAUolC,EAAannB,MAAM,KAAK,GAG/BvQ,EAAQjY,KAAK8B,GAAGomB,SAASC,GAAMA,EAAEtpB,IAAMkxC,IAAS,GACtD,IAAK93B,EAAO,OAAOtK,EAInB,IADcsK,EAAMnR,QAAQC,GAAMA,EAAElI,IAAM0L,IAAS,GACvC,OAAOoD,EAEnB,IAAIqiC,EAAU,4BACPn9B,QAAQ,WAAY7S,KAAKH,QACzBgT,QAAQ,OAAQoF,EAAMpZ,IAC1BoxC,EAAqB,IAAIjwC,KAAKL,YAAYqwC,EAAShwC,KAAK8B,IAK3D,OAJAmuC,EAAmBx9B,QAAUzS,KAAKyS,QAClCw9B,EAAmB3a,WAAWrd,EAAMnR,UACpCmpC,EAAmBrrC,SAASqT,EAAMouB,2BAE1BtW,GACL,IAAK,iBACFpiB,EAASsiC,EAAmB3qC,QAAQ2oB,GACpC,MACH,IAAK,qBACFtgB,GAAUsiC,EAAmB3qC,QAAQ2oB,GAI3C,OAAOtgB,CACV,CAEAuiC,aAAajiB,EAAS8B,EAAM4f,GACzB,IAAIhiC,GAAS,EAEb,IAAKgiC,IAAiB3vC,KAAK8B,GAAI,OAAO6L,EAGtC,IAAIsK,EAAQjY,KAAK8B,GAAGomB,SAASC,GAAMA,EAAEtpB,IAAM8wC,IAAc,GACzD,IAAK13B,EAAO,OAAOtK,EAEnB,IAAIqiC,EAAU,sBACPn9B,QAAQ,WAAY7S,KAAKH,QACzBgT,QAAQ,OAAQoF,EAAMpZ,IAC1BsxC,EAAgB,IAAInwC,KAAKL,YAAYqwC,EAAShwC,KAAK8B,IAKtD,OAJAquC,EAAc19B,QAAUzS,KAAKyS,QAC7B09B,EAAc7a,WAAWrd,EAAMnR,UAC/BqpC,EAAcvrC,SAASqT,EAAMouB,2BAErBtW,GACL,IAAK,WACFpiB,EAASwiC,EAAc7qC,QAAQ2oB,GAC/B,MACH,IAAK,eACFtgB,GAAUwiC,EAAc7qC,QAAQ2oB,GAItC,OAAOtgB,CACV,CAEAyiC,oBAAoB1tC,EAAOqtB,EAAM4f,GAC9B,IAAIhiC,GAAS,EAEb,IAAKgiC,EAAc,OAAOhiC,EAE1B,IAAIif,EAAK5sB,KAAK8B,GAAGmkB,iBAAiB0K,GAAMA,EAAE9xB,IAAM8wC,IAAc,GAE9D,OAAQ5f,GACL,IAAK,qBACF,IAAKnD,EAAI,OAAO,EAEhBjf,EAASif,EAAG+H,SAAShE,GAAMA,EAAE9xB,IAAM6D,EAAM7D,KAAIqH,OAAS,EACtD,MACH,IAAK,yBACF,IAAK0mB,EAAI,OAAO,EAEhBjf,EAASif,EAAG+H,SAAShE,GAAMA,EAAE9xB,IAAM6D,EAAM7D,KAAIqH,OAAS,EAI5D,OAAOyH,CACV,CAEA8hC,kBAAkBxhB,EAAStoB,EAAOoqB,EAAM4f,GACrC,IAAI7e,EAAenrB,EAAMmrB,eAErBke,EAAe,GAEnB,GAAI/gB,EACD,GAAIA,EAAQ6C,GACTke,IACIrpC,EAAMyB,WACF6mB,EAAQ6C,GAAcnrB,EAAMyB,WAAWP,YACvC,QACJlB,EAAM0B,YACF4mB,EAAQ6C,GAAcnrB,EAAM0B,YAAYR,YACxC,OACLonB,EAAQ6C,GAAcjyB,IACtBovB,EAAQ6C,IAEPzc,WACAgE,kBACA,CACJ,IAAI42B,EAAWf,EAAYjgB,EAAStoB,GACpB,MAAZspC,IACDD,EAAeC,EAErB,CAIwB,iBAAhBD,IACRA,EACGA,EAAarpC,EAAMyB,WAAWP,aAC9BmoC,EAAarpC,EAAM0B,YAAYR,aAC/BmoC,EAAarpC,EAAMkB,aACnBmoC,GAGN,IAAIqB,GAAyBV,GAAgB,IAAIt3B,cAEjD,OAAQ0X,GACL,IAAK,WACF,OAAOif,EAAa36B,WAAWnH,QAAQmjC,IAA0B,EACpE,IAAK,eACF,OAAkE,GAA3DrB,EAAa36B,WAAWnH,QAAQmjC,GAC1C,IAAK,SACF,OAAOrB,GAAgBqB,EAC1B,IAAK,YACF,OAAOrB,GAAgBqB,EAC1B,IAAK,WACL,IAAK,eACF,OAAOrwC,KAAKkwC,aAAajiB,EAAQ6C,GAAef,EAAM4f,GACzD,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAO3vC,KAAKwvC,UAAUR,EAAcjf,EAAM4f,GAC7C,IAAK,WACF,OAC4B,MAAzB1hB,EAAQ6C,IACR7C,EAAQ6C,GAAc5qB,OAAS,GACN,IAAzB+nB,EAAQ6C,GAEd,IAAK,eACF,OAC4B,MAAzB7C,EAAQ6C,KACN9jB,MAAMC,QAAQghB,EAAQ6C,KACrB7C,EAAQ6C,GAAc5qB,OAAS,GACN,IAAzB+nB,EAAQ6C,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAO9wB,KAAKowC,oBAAoBpB,EAAcjf,EAAM4f,GAE7D,CAEAD,gBAAgBzhB,EAAS8B,EAAM4f,GAC5B,IACI13B,EAAQ,KACRq4B,EAAkB,KAClBzgB,EAAQ,KACR0gB,EAAa,KAEjB,OAAQxgB,GAEL,IAAK,WACL,IAAK,eACF,QAAK/vB,KAAKwwC,UAGVv4B,EAAQjY,KAAK8B,GAAGomB,SAASC,GAAMA,EAAEtpB,IAAM8wC,IAAc,KAEhD13B,IAELq4B,EAAkBr4B,EAAMqO,SAAStnB,GACvBA,EAAEH,IAAMmB,KAAKwwC,QAAQ3xC,KAG3ByxC,EAAgBpqC,OAAS,GAK1BoC,QAAQ6G,MACL,iFAGI,IAIV0gB,EAAQ5X,EAAM6X,YAAY9vB,KAAKwwC,QAAQ3xC,IAGvC0xC,EAAa,CAAC,EAEdlxC,OAAOD,KAAK6uB,GAASjqB,SAASI,IAC3BmsC,EAAW,GAAG1gB,KAASzrB,KAAS6pB,EAAQ7pB,EAAI,IAIxCpE,KAAKkwC,aAAaK,EAAYxgB,EAAM4f,MAG9C,IAAK,qBACL,IAAK,yBAEF,OAAO3vC,KAAKowC,oBAAoBniB,EAAS8B,EAAM4f,GAExD,CAEAc,kBAAkBC,EAAgB,IAC3BA,IAAkB1jC,MAAMC,QAAQyjC,KACjCA,EAAgB,CAACA,IAEpB1wC,KAAK2wC,eAAiBD,EAEtB1wC,KAAK4wC,QACR,CASAtb,WAAWxuB,EAAS,GAAI9B,EAAS,MAS9B,GARAhF,KAAKsuC,QAAUxnC,EAAO8B,QAClB7B,GAAMA,GAAKA,EAAE8pC,mBAAqB9pC,EAAE8pC,sBAExC7wC,KAAKquC,aAAeruC,KAAKsuC,QACpBtuC,KAAKsuC,QAAQ1lC,QAAQ7B,GAAMA,GAAKA,EAAE49B,cAAyB,QAAT59B,EAAE3C,MACpD,GAGDY,EAAQ,CACThF,KAAKwwC,QAAUxrC,EAGf,IAAI8rC,EAAgB,CACjBjyC,GAAI,cACJsC,MAAO6D,EAAO7D,MACdiD,IAAK,QAMJY,EAAO64B,WACRiT,EAAcjhB,MAAQ,eAGzB7vB,KAAKsuC,QAAQlb,QAAQ0d,EACxB,aACU9wC,KAAKwwC,OAElB,CAEAO,aAqNG,OAvLc/wC,KAAKsuC,SAAW,IAAI5vC,KAAKqI,IACpC,IAAI5F,EAAQ4F,EAAE5F,MACVnB,KAAKkM,UAAU8kC,gBAAkBjqC,EAAE/B,QAAU+B,EAAE/B,OAAO7D,QACvDA,EAAQ,GAAG4F,EAAE/B,OAAO7D,SAAS4F,EAAE5F,SAElC,IAAIQ,EAAO,OACPsvC,EAAa,GACbC,EAAmB,GACnBC,GAAgB,EAEpB,GAAKnxC,KAAKkM,UAAUklC,qBAiGjB,OAAQrqC,EAAE3C,KACP,IAAK,gBACL,IAAK,OACF+sC,GAAgB,OAnGtB,OAAQpqC,EAAE3C,KACP,IAAK,UACF6sC,EAAaA,EAAWnpB,OACrB9nB,KAAKqxC,wBAAwBtqC,IAEhCmqC,EAAmB,CAAC,WAEpB,MAEH,IAAK,gBACFD,EAAajxC,KAAKsxC,8BAA8BvqC,IAKrB,OAAvBA,EAAEZ,SAASa,UACiB,QAA1BD,EAAEZ,SAASc,aAEU,OAAvBF,EAAEZ,SAASa,UACiB,OAA1BD,EAAEZ,SAASc,aACXF,EAAEZ,SAASM,YAWdwqC,EATsBjxC,KAAKuxC,uBACxBxqC,GACD6B,QACE4oC,GACEzqC,EAAEZ,SAASgB,YAED,YAAVqqC,EAAI3yC,IACM,gBAAV2yC,EAAI3yC,KAEiBipB,OAAOmpB,IAGrCE,GAAgB,EAChBD,EAAmB,CAAC,iBAEpB,MAEH,IAAK,OACL,IAAK,WACFvvC,EAAO,OACPsvC,EAAaA,EAAWnpB,OAAO9nB,KAAKyxC,qBAAqB1qC,IACzDmqC,EAAmB,CAAC,OAAQ,YAE5B,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACFvvC,EAAO,SACPsvC,EAAaA,EAAWnpB,OACrB9nB,KAAK0xC,uBAAuB3qC,IAE/BmqC,EAAmB,CAAC,YAAa,UAAW,UAE5C,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACFD,EAAaA,EAAWnpB,OACrB9nB,KAAKuxC,uBAAuBxqC,IAE/BmqC,EAAmB,CAChB,SACA,WACA,QACA,aAGH,MAEH,IAAK,OACFD,EAAaA,EAAWnpB,OAAO9nB,KAAK2xC,qBAAqB5qC,IAEzD,MAEH,IAAK,OACFkqC,EAAaA,EAAWnpB,OAAO9nB,KAAK4xC,qBAAqB7qC,IACzDmqC,EAAmB,CAAC,QAEpB,MAEH,IAAK,OACFD,EAAaA,EAAWnpB,OACrB9nB,KAAK6xC,2BAA2B9qC,IAEnCoqC,GAAgB,EAuDzB,OAxCAF,EAAaA,EAAWnpB,OACrB9nB,KAAK8xC,sBAAsB/qC,EAAGoqC,IAG7BnxC,KAAKkM,UAAU6lC,eAChBd,EAAaA,EAAWnpB,OAAO9nB,KAAKgyC,2BAA2BjrC,MAI9D/G,KAAK2wC,gBAAkB,IAAI/nC,QAAQqpC,IACjC,IAAKA,EAAc,OAAO,EAE1B,GAAIA,EAAatsC,MACd,OAAOurC,EAAiBgB,SAASD,EAAatsC,MAAMvB,KAChD,GAAI6tC,EAAa7tC,IAAK,CAE1B,IAAI+tC,EAAiBF,EAAa7tC,IAAIokB,MAAM,KAAK4pB,MACjD,OAAOD,GAAkBprC,EAAElI,IAAMszC,GAAkBprC,EAAE3C,GACxD,KACA8B,OAAS,IAGZ+qC,EAAaA,EAAWnpB,OAAO9nB,KAAKqyC,wBAAwBtrC,KAG/DkqC,EAAaA,EAAWnpB,OAAO9nB,KAAKsyC,uBAAuBvrC,IAepD,CACJlI,GAAIkI,EAAElI,GACN6D,MAAOvB,EACPQ,KAAMA,EACNsvC,WAAYA,EAEd,GAuBP,CAEAQ,qBAAqB9rC,GAClB,IAAI4sC,EAAiB,CAClBC,KAAMxyC,KAAKmS,OAAOhS,UAAUsyC,gBAC5BC,QAAS1yC,KAAKmS,OAAOhS,UAAUwyC,eAC/BC,cAAe5yC,KAAKmS,OAAOhS,UAAU0yC,oBACrCC,iBAAkB9yC,KAAKmS,OAAOhS,UAAU4yC,mBACxCC,aAAchzC,KAAKmS,OAAOhS,UAAU8yC,uBACpCC,gBAAiBlzC,KAAKmS,OAAOhS,UAAUgzC,sBACvCC,sBACGpzC,KAAKmS,OAAOhS,UAAUkzC,2BACzBC,yBACGtzC,KAAKmS,OAAOhS,UAAUozC,0BACzBC,UAAWxzC,KAAKmS,OAAOhS,UAAUszC,oBACjCC,UAAW1zC,KAAKmS,OAAOhS,UAAUwzC,qBAGhChmC,EAAS,GAEb,IAAK,IAAIimC,KAAWrB,EACjB5kC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAO6vC,EAAeqB,GACtBC,MAAO,aACPC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAKovC,UAAU3hC,EAAGmmC,EAASlmC,KAIpD,OAAOC,CACV,CAEA4jC,uBAAuB5rC,GACpB,IAAIouC,EAAmB,CACpBC,SAAU,CACPH,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAU8zC,mBAEhCC,aAAc,CACXL,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUg0C,sBAEhCC,OAAQ,CACLP,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUk0C,aAEhCC,UAAW,CACRT,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUo0C,gBAEhCC,SAAU,CACPX,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUs0C,SAEhCC,aAAc,CACXb,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUw0C,aAI/BhnC,EAAS,GAEb,IAAK,IAAIimC,KAAWG,EACjBpmC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAOqxC,EAAiBH,GAASzyC,MACjC0yC,MAAOE,EAAiBH,GAASC,MACjCC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAKmvC,UAAU1hC,EAAGmmC,EAASlmC,KAIpD,OAAOC,CACV,CAEA+jC,uBAAuB/rC,GACpB,IAAIivC,EAAmB,CACpBR,OAAQp0C,KAAKmS,OAAOhS,UAAU00C,eAC9BP,UAAWt0C,KAAKmS,OAAOhS,UAAU20C,kBACjCtC,KAAMxyC,KAAKmS,OAAOhS,UAAU40C,kBAC5BrC,QAAS1yC,KAAKmS,OAAOhS,UAAU60C,kBAC/BpC,cAAe5yC,KAAKmS,OAAOhS,UAAU80C,yBACrCnC,iBAAkB9yC,KAAKmS,OAAOhS,UAAU+0C,0BAGvCvnC,EAAS,GAEb,IAAK,IAAIimC,KAAWgB,EACjBjnC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAOkyC,EAAiBhB,GACxBC,MAAO,OACPC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAKqvC,YAAY5hC,EAAGmmC,EAASlmC,KAItD,OAAOC,CACV,CAEAgkC,qBAAqBhsC,GAClB,IAAIwvC,EAAiB,CAClBf,OAAQp0C,KAAKmS,OAAOhS,UAAUi1C,mBAC9Bd,UAAWt0C,KAAKmS,OAAOhS,UAAUk1C,uBAGhC1nC,EAAS,GAEb,IAAK,IAAIimC,KAAWuB,EACjBxnC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAOyyC,EAAevB,GACtBC,MAAO,OACPC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAKsvC,UAAU7hC,EAAGmmC,EAASlmC,KAIpD,OAAOC,CACV,CAEA0jC,wBAAwB1rC,GACrB,IAAI2vC,EAAoB,CACrBlB,OAAQp0C,KAAKmS,OAAOhS,UAAUi1C,oBAG7BznC,EAAS,GAEb,IAAK,IAAIimC,KAAW0B,EACjB3nC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAO4yC,EAAkB1B,GACzBC,MAAO,UACPC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAKuvC,aAAa9hC,EAAGmmC,EAASlmC,KAIvD,OAAOC,CACV,CAEAikC,qBAAqBjsC,GAClB,IAAI4vC,EAAiB,CAClBC,gBAAiB,CACd3B,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUs1C,wBAEhCC,oBAAqB,CAClB7B,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUw1C,2BAEhCC,qBAAsB,CACnB/B,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAU01C,8BAEhCC,yBAA0B,CACvBjC,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAU41C,iCAEhC3B,OAAQ,CACLP,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUi1C,oBAEhCd,UAAW,CACRT,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUk1C,wBAI/B1nC,EAAS,GAEb,IAAK,IAAIimC,KAAW2B,EACjB5nC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAO6yC,EAAe3B,GAASzyC,MAC/B0yC,MAAO0B,EAAe3B,GAASC,MAC/BC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAKwvC,UAAU/hC,EAAGmmC,EAASlmC,KAIpD,OAAOC,CACV,CAEA2jC,8BAA8B3rC,GAC3B,MAAMqwC,EAAoB,CACvBC,aAAc,CACXpC,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAU+1C,WAC7BpC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAKwvC,UAAU/hC,EAAG,eAAgBC,IAExDyoC,iBAAkB,CACftC,MAAO,OACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUi2C,cAC7BtC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAKwvC,UAAU/hC,EAAG,mBAAoBC,IAE5D2oC,mBAAoB,CACjBxC,MAAO,iBACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUm2C,iBAC7BxC,QAAS,CAACrmC,EAAGC,IACV1N,KAAKowC,oBAAoB3iC,EAAG,qBAAsBC,IAExD6oC,uBAAwB,CACrB1C,MAAO,iBACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUq2C,oBAC7B1C,QAAS,CAACrmC,EAAGC,IACV1N,KAAKowC,oBAAoB3iC,EAAG,yBAA0BC,KASzDC,EAAS,GAEf,IAAK,IAAIimC,KAAWoC,EACjBroC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAOszC,EAAkBpC,GAASzyC,MAClC0yC,MAAOmC,EAAkBpC,GAASC,MAClCC,QAASkC,EAAkBpC,GAASE,UAI1C,OAAOnmC,CACV,CAEAmkC,sBAAsBnsC,EAAOwrC,GAAgB,GAC1C,MAAMsF,EAAkBtF,EACnB,CACGuF,eAAgB,CACbv1C,MAAOnB,KAAKmS,OAAOhS,UAAUw2C,aAC7B9C,MAAO,cAEV+C,mBAAoB,CACjBz1C,MAAOnB,KAAKmS,OAAOhS,UAAU02C,gBAC7BhD,MAAO,eAGb,CACGiD,SAAU,CACP31C,MAAOnB,KAAKmS,OAAOhS,UAAU42C,QAC7BlD,MAAO,SAEVmD,aAAc,CACX71C,MAAOnB,KAAKmS,OAAOhS,UAAU82C,WAC7BpD,MAAO,UAIZlmC,EAAS,GAEf,IAAK,MAAMimC,KAAW6C,EACnB9oC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAO+zC,EAAgB7C,GAASzyC,MAChC0yC,MAAO4C,EAAgB7C,GAASC,MAChCC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAK6vC,gBAAgBpiC,EAAGmmC,EAASlmC,KAI1D,OAAOC,CACV,CAEAkkC,2BAA2BlsC,GACxB,IAAIuxC,EAAuB,CACxBb,mBAAoB,CACjBxC,MAAO,iBACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUm2C,kBAEhCC,uBAAwB,CACrB1C,MAAO,iBACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUq2C,sBAI/B7oC,EAAS,GAEb,IAAK,IAAIimC,KAAWsD,EACjBvpC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAOw0C,EAAqBtD,GAASzyC,MACrC0yC,MAAOqD,EAAqBtD,GAASC,MACrCC,QAAS,CAACrmC,EAAGC,IAAM1N,KAAK0vC,gBAAgBjiC,EAAGmmC,EAASlmC,KAI1D,OAAOC,CACV,CAEAqkC,2BAA2BrsC,GACxB,IAAIwxC,EAAuB,CACxBC,cAAep3C,KAAKmS,OAAOhS,UAAUk3C,YACrCC,kBAAmBt3C,KAAKmS,OAAOhS,UAAUo3C,gBAGxC5pC,EAAS,GAEb,IAAK,IAAIimC,KAAWuD,EACjBxpC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAOy0C,EAAqBvD,GAC5BC,MAAO,aACPC,QAAS,CAACrmC,EAAGC,KAAM,IAIzB,OAAOC,CACV,CAEA0kC,wBAAwB1sC,GACrB,IAAI6xC,EAAoB,CACrBC,eAAgB,CACb5D,MAAO,UACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUu3C,mBAC7B5D,QAAS,CAACrmC,EAAGC,IAAMD,GAAKC,GAE3BiqC,kBAAmB,CAChB9D,MAAO,UACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAUy3C,+BAC7B9D,QAAS,CAACrmC,EAAGC,IAAMD,GAAKC,GAE3BmqC,WAAY,CACThE,MAAO,UACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAU23C,wBAC7BhE,QAAS,CAACrmC,EAAGC,IAAMD,EAAEP,QAAQQ,IAAM,GAEtCqqC,eAAgB,CACblE,MAAO,UACP1yC,MAAOnB,KAAKmS,OAAOhS,UAAU63C,2BAC7BlE,QAAS,CAACrmC,EAAGC,KAAuB,GAAjBD,EAAEP,QAAQQ,KAI/BC,EAAS,GAEb,IAAK,IAAIimC,KAAW4D,EACjB7pC,EAAOtJ,KAAK,CACTxF,GAAI+0C,EACJlxC,MAAO80C,EAAkB5D,GAASzyC,MAClC0yC,MAAO2D,EAAkB5D,GAASC,MAClCC,QAAS0D,EAAkB5D,GAASE,UAI1C,OAAOnmC,CACV,CAEA2kC,uBAAuB3sC,GAGpB,QAFsB3F,KAAKi4C,gBAAkB,CAAC,GAChBtyC,EAAM9G,IAAM8G,IAAU,CAAC,GACtCsrC,YAAc,EAChC,CAEAiH,YAAYhwB,EAAU,IACnBloB,KAAKm4C,SAAWjwB,CACnB,CAWAA,QAAQtf,EAAS,MAAM,IAGpB,OAFkB5I,KAAKm4C,UAAYn4C,KAAK8B,IAAIomB,aAAe,IAE1Ctf,QAAQuf,GAAMvf,EAAOuf,IACzC,CAEAvjB,SAASuB,GACNnG,KAAKouC,UAAYjoC,GAAY,CAAC,EAE9BnG,KAAKouC,UAAU/sB,MAAQrhB,KAAKouC,UAAU/sB,OAAS,EAClD,CAiBAvV,WAMG,YAHkC,IAAvB9L,KAAKouC,UAAUtkB,OACvB9pB,KAAKouC,UAAUtkB,KAAO,OAElB9pB,KAAKouC,SACf,CAEAgK,aACG,IAAIzqC,GAAS,EAEb,MAAM0qC,EAAe,CAClB,kBACA,sBACA,uBACA,2BACA,eACA,mBACA,WACA,gBAGGC,EAAkB,CAACj3B,EAAQ,MAChB,GAAV1T,GAEJ0T,EAAMrd,SAASuL,IACRA,GAAG8R,OAASrU,MAAMC,QAAQsC,GAAG8R,OAC9Bi3B,EAAgB/oC,GAAG8R,OAEnB1T,EACGA,GACU,MAAV4B,GAAGnL,KACO,IAAVmL,GAAGnL,KACQ,MAAXmL,GAAGwgB,MACQ,IAAXxgB,GAAGwgB,OACW,MAAZxgB,GAAG7M,OAA6B,IAAZ6M,GAAG7M,OACtB21C,EAAanrC,QAAQqC,GAAGwgB,OAAS,EAC1C,GACD,EAKL,OAFAuoB,EAAgBt4C,KAAKouC,WAAW/sB,OAEzB1T,CACV,oBC9zCH,MAAMlO,EAAc,EAAQ,OAK5B,SAASyuC,EAAYjgB,EAAStoB,EAAO4yC,GAAiB,GACnD,IAAK5yC,EAAO,OAAO,KACnB,IAAKA,EAAMkB,WAAY,OAAO,KAE1BonB,GAAWA,EAAQ,KAAIA,EAAUA,EAAQ,IAE7C,IAAIjjB,EAAWrF,EAAM9G,GACjBgI,EAAalB,EAAMkB,WAEnBnE,EAAQ,KACZ,GAAImE,EAAWqG,QAAQ,MAAQ,EAAG,CAC/B,IAAI6rB,EAAUlyB,EAAW2hB,MAAM,KAAK,GACpC9lB,EAAQurB,EAAQpnB,IAAeonB,EAAQ8K,IAAY9K,EAAQjjB,EAC9D,MACGtI,EAAQurB,EAAQpnB,IAAeonB,EAAQjjB,GAG1C,GAAItI,EACD,OAAOA,EAKV,IAAK,IAAIsR,KAAKia,EAAS,CACpB,IAAI7pB,EAAM4P,EAAEwU,MAAM,KAAK,IACnBpkB,GAAQA,GAAO4G,GAAY5G,GAAOyC,IACnCnE,EAAQurB,EAAQja,GAEtB,CAQA,OALItR,GAASsK,MAAMC,QAAQvK,KACxBA,EAAQA,EAAMkG,QAAQqK,GAAW,MAALA,IACxBslC,IAAgB71C,EAAQA,EAAM,KAG9BA,CACV,CAEAnD,EAAOC,QAAU,cAA4BC,EAC1CE,YAAYC,EAAKC,EAAQiC,GAGtBhC,MAAMF,EAFNC,EAASA,GAAU,gBAEAiC,GAEnB9B,KAAKyS,QAAU,CAAElC,SAAU,MAC3BvQ,KAAKkM,UAAY,CAAC,EAClBlM,KAAKw4C,gBAAkB,CAAC,EAGxBx4C,KAAKquC,aAAe,GACpBruC,KAAKsuC,QAGL,IAAI/sC,EAAUvB,KAAKuB,OAAS,CACzBgC,UAAW,CACRnB,SAAU,QAkBb0J,SAAU,IACA9L,KAAKw4C,gBAGfjK,eAAgB,SAAUtgC,GACvB,IAAIN,EAAS,GACb,IACG,IAAI6gC,EAAMC,SAASC,cAAc,OACjCF,EAAIG,UAAY1gC,EAEhBN,EAAS6gC,EAAII,aAAeJ,EAAIK,WAAa,EAGhD,CAFE,MAAO3mC,GACNyF,GAAUM,GAAQ,IAAI4E,QAAQ,gBAAiB,GAClD,CAEA,OAAOlF,CACV,EAEAwhC,UAAW,SAAUlhB,EAAStoB,EAAOoqB,EAAM4f,GACxC,IAAIhiC,GAAS,EAETjL,EAAQwrC,EAAYjgB,EAAStoB,GACpB,MAATjD,IAAeA,EAAQ,IAE3BA,EAAQA,EAAM2R,WAAWkzB,OAAOlvB,cAChC3V,EAAQnB,EAAOgtC,eAAe7rC,GAS9B,IAAIktC,GAPJD,EAAeA,EACXt7B,WACAkzB,OACAlvB,cACAxF,QAAQ,OAAQ,MAGY2V,MAAM,KAEtC,OAAQuH,GACL,IAAK,WACF6f,EAAa5rC,SAAS2R,IACL,GAAVhI,IAEDA,EAASjL,EAAMwK,QAAQyI,IAAQ,EAAC,IAEtC,MACH,IAAK,eACFhI,GAAS,EACTiiC,EAAa5rC,SAAS2R,IACL,GAAVhI,IAEDA,EAASjL,EAAMwK,QAAQyI,GAAO,EAAC,IAErC,MACH,IAAK,SACFi6B,EAAa5rC,SAAS2R,IACL,GAAVhI,IAEDA,EAASjL,GAASiT,EAAG,IAE3B,MACH,IAAK,YACFhI,GAAS,EACTiiC,EAAa5rC,SAAS2R,IACL,GAAVhI,IAEDA,EAASjL,GAASiT,EAAG,IAE3B,MACH,IAAK,WACFhI,EAAkB,MAATjL,GAA0B,IAATA,EAC1B,MACH,IAAK,eACFiL,EAAkB,MAATjL,GAA0B,IAATA,EAC1B,MACH,QACGiL,EAASpM,EAAOk3C,WAAWxqB,EAAS8B,EAAM4f,GAIhD,OAAOhiC,CACV,EAEAyhC,UAAW,SAAUnhB,EAAStoB,EAAOoqB,EAAM4f,GACxC,IAAIhiC,GAAS,EAETjL,EAAQwrC,EAAYjgB,EAAStoB,GAMjC,OALMjD,aAAiB+d,OAAO/d,EAAQ,IAAI+d,KAAK/d,IAEzCitC,aAAwBlvB,OAC3BkvB,EAAe,IAAIlvB,KAAKkvB,IAEnB5f,GACL,IAAK,SACFpiB,EAASjL,GAASitC,EAClB,MACH,IAAK,YACFhiC,EAASjL,GAASitC,EAClB,MACH,IAAK,OACFhiC,EAASjL,EAAQitC,EACjB,MACH,IAAK,UACFhiC,EAASjL,EAAQitC,EACjB,MACH,IAAK,gBACFhiC,EAASjL,GAASitC,EAClB,MACH,IAAK,mBACFhiC,EAASjL,GAASitC,EAClB,MACH,QACGhiC,EAASpM,EAAOk3C,WAAWxqB,EAAS8B,EAAM4f,GAIhD,OAAOhiC,CACV,EAEA0hC,YAAa,SAAUphB,EAAStoB,EAAOoqB,EAAM4f,GAC1C,IAAIhiC,GAAS,EAETjL,EAAQwrC,EAAYjgB,EAAStoB,GAIjC,OAHAjD,EAAQotC,OAAOptC,GACfitC,EAAeG,OAAOH,GAEd5f,GACL,IAAK,SACFpiB,EAASjL,GAASitC,EAClB,MACH,IAAK,YACFhiC,EAASjL,GAASitC,EAClB,MACH,IAAK,OACFhiC,EAASjL,EAAQitC,EACjB,MACH,IAAK,UACFhiC,EAASjL,EAAQitC,EACjB,MACH,IAAK,gBACFhiC,EAASjL,GAASitC,EAClB,MACH,IAAK,mBACFhiC,EAASjL,GAASitC,EAClB,MACH,QACGhiC,EAASpM,EAAOk3C,WAAWxqB,EAAS8B,EAAM4f,GAIhD,OAAOhiC,CACV,EAEA2hC,UAAW,SAAUrhB,EAAStoB,EAAOoqB,EAAM4f,GACxC,IAAIhiC,GAAS,EAETjL,EAAQwrC,EAAYjgB,EAAStoB,GAOjC,OANIjD,GAASA,EAAM2V,cAAa3V,EAAQA,EAAM2V,eAE9Cs3B,EAAeA,EAAat3B,cAEvBrL,MAAMC,QAAQ0iC,KAAeA,EAAe,CAACA,IAE1C5f,GACL,IAAK,SACErtB,IAAOiL,EAASgiC,EAAaziC,QAAQxK,IAAU,GACnD,MACH,IAAK,YACSiL,GAAPjL,GAAgBitC,EAAaziC,QAAQxK,GAAS,EAElD,MACH,QACGiL,EAASpM,EAAOk3C,WAAWxqB,EAAS8B,EAAM4f,GAIhD,OAAOhiC,CACV,EAEA4hC,aAAc,SAAUthB,EAAStoB,EAAOoqB,EAAM4f,GAC3C,IAAIhiC,GAAS,EAETjL,EAAQwrC,EAAYjgB,EAAStoB,GAKjC,OAFa,MAATjD,IAAeA,GAAQ,GAEnBqtB,GACL,IAAK,SACFpiB,EAASjL,GAASitC,EAClB,MACH,IAAK,YACFhiC,EAASjL,GAASitC,EAClB,MACH,QACGhiC,EAASpM,EAAOk3C,WAAWxqB,EAAS8B,EAAM4f,GAIhD,OAAOhiC,CACV,EAEA6hC,UAAW,CAACvhB,EAAStoB,EAAOoqB,EAAM4f,KAC/B,IAAIhiC,GAAS,EAETjL,EAAQwrC,EAAYjgB,EAAStoB,GAIjC,OAAQoqB,GACL,IAAK,kBACFpiB,EAASjL,GAAS1C,KAAKyS,QAAQlC,SAC/B,MACH,IAAK,sBACF5C,EAASjL,GAAS1C,KAAKyS,QAAQlC,SAC/B,MACH,IAAK,uBACF,IAAK7N,EAAO,CACTiL,GAAS,EACT,KACH,CACKX,MAAMC,QAAQvK,KAAQA,EAAQ,CAACA,IAEpCiL,GACIjL,GAAS,IAAIkG,QAAQqK,KACfA,IAEGA,EAAE1C,UAAY0C,EAAEpU,IAAMoU,EAAEhF,MAAQgF,IACjCjT,KAAKyS,QAAQlC,WAKnBrK,OAAS,EACf,MACH,IAAK,2BACF,IAAKxD,EAAO,CACTiL,GAAS,EACT,KACH,CACKX,MAAMC,QAAQvK,KAAQA,EAAQ,CAACA,IAEpCiL,EAUgB,IATZjL,GAAS,IAAIkG,QAAQqK,KACfA,IAEGA,EAAE1C,UAAY0C,EAAEpU,IAAMoU,EAAEhF,MAAQgF,IACjCjT,KAAKyS,QAAQlC,WAKnBrK,OACN,MACH,IAAK,SACFyH,EAASjL,EAAMwK,QAAQyiC,IAAiB,EACxC,MACH,IAAK,YACFhiC,EAASjL,EAAMwK,QAAQyiC,GAAgB,EACvC,MACH,QACGhiC,EAASpM,EAAOk3C,WAAWxqB,EAAS8B,EAAM4f,GAIhD,OAAOhiC,CAAM,EAGhB8qC,WAAY,CAACxqB,EAAS8B,EAAM4f,KACzB,IAAIhiC,GAAS,EAEb,IAAK3N,KAAK8B,KAAO6tC,EAAc,OAAOhiC,EAGtC,IAAIoiC,EAAUJ,EAAannB,MAAM,KAAK,GACnCje,EAAUolC,EAAannB,MAAM,KAAK,GAGjCvQ,EAAQjY,KAAKkoB,SAASC,GAAMA,EAAEtpB,IAAMkxC,IAAS,GACjD,IAAK93B,EAAO,OAAOtK,EAInB,IADYsK,EAAMnR,QAAQC,GAAMA,EAAElI,IAAM0L,IAAS,GACrC,OAAOoD,EAEnB,IAAIqiC,EAAU,4BACPn9B,QAAQ,WAAYhT,GACpBgT,QAAQ,OAAQoF,EAAMpZ,IAC1BoxC,EAAqB,IAAIjwC,KAAKL,YAAYK,KAAKJ,IAAKowC,GAMvD,OALAC,EAAmBx9B,QAAUzS,KAAKyS,QAElCw9B,EAAmB3a,WAAWrd,EAAMnR,UACpCmpC,EAAmBrrC,SAASqT,EAAMouB,2BAE1BtW,GACL,IAAK,iBACFpiB,EAASsiC,EAAmB3qC,QAAQ2oB,GACpC,MACH,IAAK,qBACFtgB,GAAUsiC,EAAmB3qC,QAAQ2oB,GAI3C,OAAOtgB,CAAM,EAGhBuiC,aAAc,CAACjiB,EAASpnB,EAAYkpB,EAAM4f,KACvC,IAAIhiC,GAAS,EAMb,GAJI9G,IACDonB,EAAUA,EAAQpnB,IAAe,CAAC,IAGhC8oC,IAAiB3vC,KAAK8B,GAAI,OAAO6L,EAGtC,IAAIsK,EAAQjY,KAAKkoB,SAASC,GAAMA,EAAEtpB,IAAM8wC,IAAc,GACtD,IAAK13B,EAAO,OAAOtK,EAEnB,IAAIqiC,EAAU,sBACPn9B,QAAQ,WAAYhT,GACpBgT,QAAQ,OAAQoF,EAAMpZ,IAC1BsxC,EAAgB,IAAInwC,KAAKL,YAAYK,KAAKJ,IAAKowC,GAMlD,OALAG,EAAc19B,QAAUzS,KAAKyS,QAE7B09B,EAAc7a,WAAWrd,EAAMnR,UAC/BqpC,EAAcvrC,SAASqT,EAAMouB,2BAErBtW,GACL,IAAK,WACFpiB,EAASwiC,EAAc7qC,QAAQ2oB,GAC/B,MACH,IAAK,eACFtgB,GAAUwiC,EAAc7qC,QAAQ2oB,GAItC,OAAOtgB,CAAM,EAGhByiC,oBAAqB,CAACniB,EAASpnB,EAAYkpB,EAAM4f,KAC9C,IAAIhiC,GAAS,EAEb,IAAKgiC,IAAiB3vC,KAAK8B,GAAI,OAAO6L,EAElC9G,IACDonB,EAAUA,EAAQpnB,IAAe,CAAC,GAGrC,IAAI+lB,EAAK5sB,KAAK8B,GAAGiqB,mBAAmB4jB,GAEpC,OAAQ5f,GACL,IAAK,qBACF,IAAKnD,EAAI,OAAO,EAEhBjf,EACGif,EAAG+H,SACChE,IAAOA,EAAE9xB,IAAM8xB,EAAEnhB,QAAUye,EAAQpvB,IAAMovB,EAAQze,QACnDtJ,OAAS,EACd,MACH,IAAK,yBACF,IAAK0mB,EAAI,OAAO,EAEhBjf,EACGif,EAAG+H,SACChE,IAAOA,EAAE9xB,IAAM8xB,EAAEnhB,QAAUye,EAAQpvB,IAAMovB,EAAQze,QACnDtJ,OAAS,EAIpB,OAAOyH,CAAM,EAGhB8hC,kBAAmB,SAAUxhB,EAAStoB,EAAOoqB,EAAM4f,GAChD,IAAI7e,EAAenrB,EAAMmrB,eAErBke,EAAe,GAEnB,GAAI/gB,EACD,GAAIA,EAAQ6C,GACTke,KACIrpC,EAAMyB,YACF6mB,EAAQ6C,GAAcnrB,EAAMyB,WAAWP,eAE3ClB,EAAM0B,aACF4mB,EAAQ6C,GAAcnrB,EAAM0B,YAAYR,aAE7ConB,EAAQ6C,GAAcjyB,IACtBovB,EAAQ6C,IAEPzc,WACAgE,kBACA,CACJ,IAAI42B,EAAWf,EAAYjgB,EAAStoB,GACpB,MAAZspC,IACDD,EAAeC,EAGY,iBAAhBD,IACRA,EACGrpC,EAAMgB,eAAewgC,YAAY6H,IAG7C,CAGH,IAAIqB,GAAyBV,GAAgB,IAAIt3B,cAEjD,OAAQ0X,GACL,IAAK,WACF,OACGif,EAAa36B,WAAWnH,QAAQmjC,IAA0B,EAEhE,IAAK,eACF,OAEI,GADDrB,EAAa36B,WAAWnH,QAAQmjC,GAGtC,IAAK,SACF,OAAOrB,GAAgBqB,EAC1B,IAAK,YACF,OAAOrB,GAAgBqB,EAC1B,IAAK,WACL,IAAK,eACF,OAAO9uC,EAAO2uC,aACXjiB,EACA6C,EACAf,EACA4f,GAEN,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACF,OAAOpuC,EAAOiuC,UAAUvhB,EAAStoB,EAAOoqB,EAAM4f,GACjD,IAAK,WACF,OAC4B,MAAzB1hB,EAAQ6C,IACR7C,EAAQ6C,GAAc5qB,OAAS,GACN,IAAzB+nB,EAAQ6C,GAEd,IAAK,eACF,OAC4B,MAAzB7C,EAAQ6C,KACN9jB,MAAMC,QAAQghB,EAAQ6C,KACrB7C,EAAQ6C,GAAc5qB,OAAS,GACN,IAAzB+nB,EAAQ6C,IAEjB,IAAK,qBACL,IAAK,yBACF,OAAOvvB,EAAO6uC,oBACXniB,EACA6C,EACAf,EACA4f,GAGZ,EAEAD,gBAAiB,CAACzhB,EAAS8B,EAAM4f,KAG9B,OAAQ5f,GAEL,IAAK,WACL,IAAK,eACF,IAAK/vB,KAAK8B,KAAO9B,KAAKwwC,QAAS,OANxB,EASP,IAAIv4B,EAAQjY,KAAKkoB,SAASC,GAAMA,EAAEtpB,IAAM8wC,IAAc,GACtD,IAAK13B,EAAO,OAVL,EAeP,GAHsBA,EAAMqO,SAAStnB,GAC3BA,EAAEH,IAAMmB,KAAKwwC,QAAQ3xC,KAEXqH,OAAS,EAQ1B,OAHAoC,QAAQ6G,MACL,iFAEI,EAIV,IAAI0gB,EAAQ5X,EAAM6X,YAAY9vB,KAAKwwC,QAAQ3xC,IAGvC0xC,EAAa,CAAC,EAMlB,OALAlxC,OAAOD,KAAK6uB,GAASjqB,SAASI,IAC3BmsC,EAAW,GAAG1gB,KAASzrB,KAAS6pB,EAAQ7pB,EAAI,IAIxC7C,EAAO2uC,aACXK,EACA,KACAxgB,EACA4f,GAKN,IAAK,qBACL,IAAK,yBAEF,OAAOpuC,EAAO6uC,oBACXniB,EACA,KACA8B,EACA4f,GAGT,GAON3vC,KAAK8L,SAAWvK,EAAOuK,QAG1B,CAEAzI,KAAKnB,GACEA,EAAQ8uC,iBACThxC,KAAKkM,UAAU8kC,eAAiB9uC,EAAQ8uC,eAE9C,CAQA1rC,QAAQ2oB,GACL,IAAIuqB,EAAkBx4C,KAAKw4C,gBACvBj3C,EAASvB,KAAKuB,OAGlB,GACsB,MAAnBi3C,GACyB,MAAzBA,EAAgBn3B,OACgB,GAAhCm3B,EAAgBn3B,MAAMnb,OAEtB,OAAO,EAEV,GAAe,MAAX+nB,EAAiB,OAAO,EAE5B,IAAItgB,EAAkC,QAAzB6qC,EAAgB1uB,KAkG7B,OAhGA0uB,EAAgBn3B,MAAMrd,SAAS4E,IAC5B,GAAKA,GAAQxE,KAAQwE,GAAQmnB,KAA7B,CAEA,IAAI4Y,EAAY3oC,KAAKsuC,QAAQ1lC,QAAQ7B,GAAMA,EAAElI,IAAM+J,EAAOxE,MAAK,GAC/D,GAAKukC,EAAL,CAEA,IAAImG,EAIAC,EAAgBpG,EAAUvkC,IAQ9B,YAP4B,IAAjBukC,EAAUvkC,MACE,eAAhBukC,EAAU9pC,IACX8pC,EAAUvkC,IAAM,eAChB2qC,EAAgBpG,EAAUvkC,KACtB2qC,EAAgB,eAGlBA,GACL,IAAK,SACL,IAAK,WACL,IAAK,QACFD,EAAavtC,EAAO4tC,UACjBlhB,EACA0a,EACA//B,EAAOmnB,KACPnnB,EAAOlG,OAEV,MACH,IAAK,OACL,IAAK,WACFosC,EAAavtC,EAAO6tC,UACjBnhB,EACA0a,EACA//B,EAAOmnB,KACPnnB,EAAOlG,OAEV,MACH,IAAK,SACL,IAAK,UACFosC,EAAavtC,EAAO8tC,YACjBphB,EACA0a,EACA//B,EAAOmnB,KACPnnB,EAAOlG,OAEV,MACH,IAAK,OACFosC,EAAavtC,EAAO+tC,UACjBrhB,EACA0a,EACA//B,EAAOmnB,KACPnnB,EAAOlG,OAEV,MACH,IAAK,UACFosC,EAAavtC,EAAOguC,aACjBthB,EACA0a,EACA//B,EAAOmnB,KACPnnB,EAAOlG,OAEV,MACH,IAAK,OACFosC,EAAavtC,EAAOiuC,UACjBvhB,EACA0a,EACA//B,EAAOmnB,KACPnnB,EAAOlG,OAEV,MACH,IAAK,eACL,IAAK,gBACFosC,EAAavtC,EAAOkuC,kBACjBxhB,EACA0a,EACA//B,EAAOmnB,KACPnnB,EAAOlG,OAEV,MACH,IAAK,cACFosC,EAAavtC,EAAOmuC,gBACjBzhB,EACArlB,EAAOmnB,KACPnnB,EAAOlG,OAMbiL,EAD0B,QAAzB6qC,EAAgB1uB,KACRnc,GAAUmhC,EAEVnhC,GAAUmhC,CAxFA,CAHmB,CA4FzC,IAGInhC,CACV,CAsBA2nB,WAAWxuB,EAAS,GAAI9B,EAAS,MAS9B,GARAhF,KAAKsuC,QAAUxnC,EAAO8B,QAAQ7B,GAAMA,GAAG8pC,wBAGvC7wC,KAAKquC,aAAeruC,KAAKsuC,QACpBtuC,KAAKsuC,QAAQ1lC,QAAQ7B,GAAMA,GAAKA,EAAE49B,cAAyB,QAAT59B,EAAE3C,MACpD,GAGDY,EAAQ,CACThF,KAAKwwC,QAAUxrC,EAEf,IAAI8rC,EAAgB,CACjBjyC,GAAI,cACJsC,MAAO6D,EAAO7D,OAIb6D,EAAO64B,WACRiT,EAAcjhB,MAAQ,eAGzB7vB,KAAKsuC,QAAQlb,QAAQ0d,EACxB,aACU9wC,KAAKwwC,OAElB,CAEA0H,YAAYhwB,EAAU,IACnBloB,KAAKm4C,SAAWjwB,CACnB,CAQAA,QAAQtf,EAAS,MAAM,IACpB,IAAI+E,EAAS,GAcb,OAZI3N,KAAK8B,KACN6L,EAASA,EAAOma,OAAO9nB,KAAK8B,GAAGomB,QAAQtf,KAGtC5I,KAAKm4C,WACNxqC,EAASA,EAAOma,QACZ9nB,KAAKm4C,UAAY,IAAIvvC,QAClBuf,GAAMvf,EAAOuf,IAAMxa,EAAO/E,QAAQ2G,GAAMA,EAAE1Q,IAAMspB,EAAEtpB,KAAIqH,OAAS,MAKlEyH,CACV,CAEA/I,SAASuB,GACNnG,KAAKw4C,gBAAkBryC,GAAY,CAAC,EACpCnG,KAAKw4C,gBAAgBn3B,MAAQrhB,KAAKw4C,gBAAgBn3B,OAAS,EAC9D,kBCnyBH,MAAMq3B,EAAU,EAAQ,OAExB,SAAS34C,EAAEqE,EAAKsO,GAEb,OAAOA,CACV,CAEA,MAAMimC,EAA2B,CAC9Bv0C,IAAK,YAGL85B,YAAa,uBAIb9yB,KAAM,MAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,aAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,UAAW,WAAY,YAAa,MAAO,YAO/DzS,EAAgB,CACnB5rB,OAAQ,GACRs+B,UAAW,OACXC,cAAe,EACfC,YAAa,QAGhB95C,EAAOC,QAAU,cAAmCk5C,EACjD/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQ2zC,EACzB,CAGA/tB,kBACG,OAAO+tB,CACV,CAEA/tB,uBACG,OAAO6b,CACV,CAEA7b,wBAAwB3c,GACrB,MAAMqrC,EAAgBt5C,KAAKu5C,gBAAgB3wC,QAAQoF,GACzCA,EAAKnP,IAAMoP,IAClB,GAEH,OAAOqrC,EAAgBA,EAAcE,KAAO,EAC/C,CAEA5uB,uBACG,MAAO,CACJ,CAAE/rB,GAAI,OAAQ6D,MAAO3C,IAAWy5C,KAAM,IACtC,CAAE36C,GAAI,QAAS6D,MAAO3C,IAAYy5C,KAAM,MACxC,CAAE36C,GAAI,QAAS6D,MAAO3C,IAAYy5C,KAAM,KACxC,CAAE36C,GAAI,QAAS6D,MAAO3C,IAAYy5C,KAAM,KACxC,CAAE36C,GAAI,OAAQ6D,MAAO3C,IAAWy5C,KAAM,KACtC,CAAE36C,GAAI,QAAS6D,MAAO3C,IAAYy5C,KAAM,KAE9C,CAEA5uB,uBAAuB/P,EAAQs+B,EAAWC,EAAeK,GAMtD,OAJG5+B,EACA7a,KAAK05C,iBAAiBP,IACrB,aAAeM,GAAe1mC,OAAO2S,SAAS0zB,GAGrD,CAEApzC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASizC,cAAgB1zB,SAAS1lB,KAAKmG,SAASizC,cACxD,CAQA1S,aAAahhC,UAEHA,EAAO1F,KAAK6G,WACtB,CAEA2Z,OAAOyN,GACJ,IAAKA,IAAUjuB,KAAK6G,YAAa,MAAO,GAExC,IAQG,OAPwB7G,KAAKL,YAAYg6C,gBACtC35C,KAAKmG,SAAS0U,OACd7a,KAAKmG,SAASgzC,UACdn5C,KAAKmG,SAASizC,cACdnrB,EAAQjuB,KAAK6G,YAMnB,CAFE,MAAOqB,GACN,MAAO,EACV,CACH,oBC/IH,MAAMwwC,EAAU,EAAQ,OAOlBkB,EAAyB,CAC5Bx1C,IAAK,UAGL85B,YAAa,sDAIb9yB,KAAM,iBAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,WAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAKrBC,qBAAsB,CAAC,OAAQ,YAM5BzS,EAAgB,CACnBsH,QAAS,GAGZxuC,EAAOC,QAAU,cAAiCk5C,EAC/C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQ40C,EACzB,CAGAhvB,kBACG,OAAOgvB,CACV,CAEAhvB,uBACG,OAAO6b,CACV,CAYAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAEY,MAAzB1F,KAAKmG,SAAS4nC,UACf/tC,KAAKmG,SAAS4nC,QAAUroB,SAAS1lB,KAAKmG,SAAS4nC,SACrD,CAQArH,aAAahhC,GACqB,MAA3BA,EAAO1F,KAAK6G,aAAgD,MAAzB7G,KAAKmG,SAAS4nC,UAClDroC,EAAO1F,KAAK6G,YAAc7G,KAAKmG,SAAS4nC,QAE9C,kECzGH,MAAM2K,QAAU,oBAAQ,OAExB,SAAS34C,EAAEqE,EAAKsO,GAEb,OAAOA,CACV,CAGA,SAASmnC,IAAIC,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIt5B,KAAKq5B,GAC1B,IAAKC,EAAU,OAAO,EAEtB,MAEMC,GAFQ,IAAIv5B,KAESs5B,GADX,QAGhB,OAAIC,EAAY,EAAU1zC,KAAK2zC,MAAkB,GAAZD,GAAkB,GAE3C1zC,KAAKC,MAAMyzC,EAc1B,CAEA,SAASE,KAAKJ,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIt5B,KAAKq5B,GAC1B,OAAKC,EAEEA,EAASI,cAFM,CAGzB,CAEA,SAASC,MAAMN,GAEZ,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIt5B,KAAKq5B,GAC1B,OAAKC,EAGEA,EAASM,WAHM,CAIzB,CAEA,SAASC,IAAIR,GAEV,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIt5B,KAAKq5B,GAC1B,OAAKC,EAEEA,EAASQ,UAFM,CAGzB,CAEA,SAASC,KAAKV,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIt5B,KAAKq5B,GAC1B,OAAKC,EAMEzzC,KAAK2zC,MAAMF,EAASU,UAHZ,OAHO,CAOzB,CAEA,SAASC,KAAKZ,GAEX,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIt5B,KAAKq5B,GAC1B,OAAKC,EAMEzzC,KAAK2zC,MAAMF,EAASU,UAHX,MAHM,CAOzB,CAEA,SAASE,OAAOb,GAEb,IAAKA,EAAY,OAAO,EACxB,MAAMC,EAAW,IAAIt5B,KAAKq5B,GAC1B,OAAKC,EAMEzzC,KAAK2zC,MAAMF,EAASU,UAHT,KAHI,CAOzB,CAEA,SAASG,eAAeC,GACrB,MAAMC,EAAQD,EAAO,GACfE,EAASz0C,KAAKC,MAAMu0C,GACpBE,EAA6B,IAAlBF,EAAQC,GACnBE,EAAW30C,KAAK2zC,MAAMe,GAE5B,OAAOE,WAAW,GAAGH,KAAUE,IAClC,CAEA,MAAME,yBAA2B,CAC9B/2C,IAAK,YAGL85B,YAAa,mDAIb9yB,KAAM,aAINwtC,aAAejzC,GAKiB,GAJD,CAAC,iBAAkB,OAAQ,OAAQ,UACvBiD,QAAQoF,GAC7CrI,EAAMQ,SAASi1C,QAAQlJ,SAASlkC,KAEhB9H,OAQtB2yC,YAAY,EAMZ30C,SAAU,YAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAzS,cAAgB,CACnB2U,QAAS,GACTC,YAAa,OACbC,cAAe,GAGlB/7C,OAAOC,QAAU,MAAM+7C,6BAA6B7C,QACjD/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQm2C,yBACzB,CAGAvwB,kBACG,OAAOuwB,wBACV,CAEAvwB,uBACG,OAAO6b,aACV,CAWA7b,mBAAmB5lB,OAAQo2C,QAASntB,QAASutB,MAAO3rB,MAAQ,MACzD,OAAKurB,SAGLA,QAAUA,QAAQvoC,QAAQ,eAAgB,gBAE1C7N,OAAO8B,SAAS9C,SAAS+C,IACtB,IAAIgyB,EAAUhyB,EAAEF,WAMhB,GALIkyB,EAAQ7rB,QAAQ,MAAQ,IAEzB6rB,EAAUA,EAAQvQ,MAAM,KAAK,IAG5B4yB,QAAQluC,QAAQ,IAAM6rB,EAAU,KAAO,EAAG,OAE9C,MAAMpvB,EACHskB,QAAQ,GAAGjpB,OAAO6qB,OAASA,SAAS9oB,EAAEF,eACtConB,QAAQlnB,EAAEF,YAGb,GAAa,UAATE,EAAE3C,IAAiB,CACpB,MAAMq3C,EAAY,IAAI9xC,GAAQ,KAC9ByxC,QAAUA,QAAQvoC,QACf,IAAIwP,OAAO,IAAM0W,EAAU,IAAK,KAChC0iB,EAEN,MAEK,GAAa,aAAT10C,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAAkB,CAClD,IAAIs3C,EAAS30C,EAAEyZ,OAAOyN,UAAY,EAGb,iBAAVytB,IACRA,EAASA,EAAO7oC,QAAQ,YAAa,KAExC6oC,EAAS,IAAIA,KAEbN,QAAUA,QAAQvoC,QACf,IAAIwP,OAAO,IAAM0W,EAAU,IAAK,KAChC2iB,EAEN,MAEK,GAAa,QAAT30C,EAAE3C,IAAe,CACvB,MAAMu3C,EAAU,IAAIhyC,GAAQ,MAC5ByxC,QAAUA,QAAQvoC,QACf,IAAIwP,OAAO,IAAM0W,EAAU,IAAK,KAChC4iB,EAEN,MAEK,GAAa,WAAT50C,EAAE3C,IAAkB,CAC1B,MAAMw3C,EAAa,IAAIjyC,GAAQ,KAC/ByxC,QAAUA,QAAQvoC,QACf,IAAIwP,OAAO,IAAM0W,EAAU,IAAK,KAChC6iB,EAEN,KAMIC,KAAKT,SAASU,QAAQN,OAAS,IA9DjB,EA+DxB,CAYA9U,aAAahhC,UAEHA,EAAO1F,KAAK6G,WACtB,CAEA2Z,OAAOyN,GACJ,IAAIutB,EAAQ,EACqB,QAA7Bx7C,KAAKmG,SAASk1C,cACfG,EAAQx7C,KAAKmG,SAASm1C,eAGzB,IACG,IAAI3tC,EAAS3N,KAAKL,YAAYo8C,YAC3B/7C,KAAKgF,OACLhF,KAAKmG,SAASi1C,QACdntB,EACAutB,EACAx7C,KAAK6vB,OAMR,OAHqB,iBAAVliB,IACRA,EAASA,EAAOkF,QAAQ,YAAa,KAEhC7S,KAAKmG,SAASk1C,aACnB,IAAK,QACF1tC,EAASA,EAAOkF,QAAQ,IAAK,KAC7B,MACH,IAAK,QACFlF,EAASA,EAAOkF,QAAQ,IAAK,KAInC,OAAOlF,CAGV,CAFE,MAAOzF,GACN,MAAO,EACV,CACH,oBCrUH,MAAMwwC,EAAU,EAAQ,OAOlBsD,EAA0B,CAC7B53C,IAAK,WAGL85B,YAAa,iBAIb9yB,KAAM,MAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,iBAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1CzS,EAAgB,CACnBwV,eAAgB,GAKhB9C,UAAW,QAGd55C,EAAOC,QAAU,cAAiCk5C,EAC/C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQg3C,EACzB,CAGApxB,kBACG,OAAOoxB,CACV,CAEApxB,uBACG,OAAO6b,CACV,CAEAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAASgzC,UACXzzC,EAAOS,SAASgzC,WAAa1S,EAAc0S,SACjD,CAQAzS,aAAahhC,UAEHA,EAAO1F,KAAK6G,WACtB,oBCpGH,IAAI6xC,EAAU,EAAQ,OAOtB,MAAMwD,EAAyB,CAC5B93C,IAAK,gBAGL85B,YAAa,oCAIb9yB,KAAM,gBAINwtC,cAAc,EAOdC,WAAalzC,GAEH,CAAC,WAAY,WAAWuH,QADd,GAAGvH,GAAOQ,UAAUa,YAAYrB,GAAOQ,UAAUc,gBACd,EAOvD/C,SAAU,4BAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCzS,EAAgB,CACnB//B,WAAY,GAGZM,SAAU,MAIVC,YAAa,OAIbe,WAAY,GAIZvB,SAAU,KAUVU,WAAY,EAKZC,WAAY,GASZC,YAAa,IAMhB9H,EAAOC,QAAU,cAAiCk5C,EAC/C/4C,YAAY+F,EAAQV,EAAQm3C,EAAgBD,GACzCp8C,MAAM4F,EAAQV,EAAQm3C,GAEtBn8C,KAAK2kC,cAAe,CAUvB,CAGA/Z,kBACG,OAAOsxB,CACV,CAEAtxB,uBACG,OAAO6b,CACV,CAMAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASM,SAAWif,SAAS1lB,KAAKmG,SAASM,UAAY,GAC5DzG,KAAKmG,SAASgB,WAAaue,SAAS1lB,KAAKmG,SAASgB,YAAc,EACnE,CAYAu/B,eAA4B,CAU5BvW,YAAYxmB,EAAMrC,GACfxH,MAAMqwB,YAAYxmB,EAAMrC,EAC3B,CAEAwpB,eAEG,GAAI9wB,KAAK6G,WAAWqG,QAAQ,MAAQ,EAAG,CACpC,MAAMkvC,EAAQp8C,KAAK6G,WAAW2hB,MAAM,KACpC,MAAO,GAAG4zB,EAAM,MAAMp8C,KAAK8B,GAAGuf,MAAMyX,sBAAsBsjB,EAAM,KACnE,CACG,OAAOp8C,KAAK8B,GAAGuf,MAAMyX,sBAAsB94B,KAAK6G,WAEtD,CAOIF,qBACD,MAAMkuB,EAAU70B,KAAK8B,GAAG2V,WAAWzX,KAAKmG,SAASO,YACjD,IAAKmuB,EAAS,CACX,MAAMwnB,EAAc,IAAIn9C,MACrB,gBAAgBc,KAAKmB,UAAUnB,KAAKnB,iCAAiCmB,KAAKmG,SAASO,eAEtF1G,KAAK8B,GAAGqG,OAAO8uB,QAAQolB,EAAa,CACjC12C,MAAO3F,KACP0G,WAAY1G,KAAKmG,SAASO,YAEhC,CACA,OAAOmuB,CACV,CAOI7I,gBACD,MAAMqW,EAAariC,KAAK2G,eACxB,IAAK07B,EAAY,OAAO,KAExB,MAAMr6B,EAAaq6B,EAAWz0B,UAAU5N,KAAKmG,SAAS6B,YACtD,IAAKA,EAAY,CACd,MAAMq0C,EAAc,IAAIn9C,MACrB,gBAAgBc,KAAKmB,UAAUnB,KAAKnB,iCAAiCmB,KAAKmG,SAAS6B,eAEtFhI,KAAK8B,GAAGqG,OAAO8uB,QAAQolB,EAAa,CACjC12C,MAAO3F,KACPgI,WAAYhI,KAAKmG,SAAS6B,YAEhC,CACA,OAAOA,CACV,CAQAs0C,mBAAmBl9B,GAChB,IAAIm9B,EAGJ,MAAMtS,EAAejqC,KAAK2G,eAE1B,IAAIgD,EAAO3J,KAAKw8C,UAAUp9B,GAC1B,GAAIzV,GAAQsgC,EAAc,CAEvB,GAAmB,iBAARtgC,EACR,IACGA,EAAO+J,KAAKuD,MAAMtN,EAKrB,CAJE,MAAO1K,GAGNs9C,EAAe5yC,CAClB,CAGH4yC,EAAe5yC,CAClB,CAEA,OAAO4yC,CACV,CAEAC,UAAUvuB,GACP,GAAe,MAAXA,EAAiB,MAAO,GAE5B,MAAMwuB,EAAW,GAAGz8C,KAAKgF,OAAOkC,QAAQlH,KAAK8wB,iBAE7C,OACG7C,EAAQjuB,KAAK8wB,iBACb7C,EAAQwuB,IACRxuB,EAAQjuB,KAAK6G,aACb,EAEN,CAEA2Z,OAAOyN,GACJ,MAAMtY,EAAM3V,KAAKs8C,mBAAmBruB,GAC9Bgc,EAAejqC,KAAK2G,eAG1B,OAAIqG,MAAMC,QAAQ0I,GACRA,EACHjX,KAAKuU,GACW,MAAVA,EAAEhF,KAAqBg8B,EAAa9C,YAAYl0B,IAAM,GAC9CA,EAAEhF,MAAQ,KAExBC,KAAK,MAEHyH,EACU,MAAZA,EAAI1H,KAAqBg8B,EAAa9C,YAAYlZ,IAAY,GACzDtY,EAAI1H,KAAa0H,EAAI1H,MAAQ,QAAjC,EAGI,EACf,CAOAjH,WACG,OAAOhH,KAAKmG,SAASa,QACxB,CAOAC,cACG,OAAOjH,KAAKmG,SAASc,WACxB,CAOAR,WACG,OAAOzG,KAAKmG,SAASM,QACxB,CAMIW,iBACD,IAAKpH,KAAKmG,SAASgB,aAAenH,KAAKmG,SAASiB,WAC7C,OAAO,KAEV,MAAMJ,EAAW,GAAGhH,KAAKmG,SAASa,YAAYhH,KAAKmG,SAASc,cAE5D,GAAiB,aAAbD,EACD,OAAOhH,KAAK2G,eAAeiH,UAAU5N,KAAKmG,SAASiB,YAGjD,GAAiB,YAAbJ,EACN,OAAIhH,KAAKmG,SAASM,SACRzG,KAAK2G,eAAeiH,UAAU5N,KAAKmG,SAASiB,YAE5CpH,KAAKgF,OAAO4I,UAAU5N,KAAKmG,SAASiB,YAI5C,GAAiB,aAAbJ,EACN,OAAOhH,KAAKgF,OAAO4I,UAAU5N,KAAKmG,SAASiB,YAGzC,GAAiB,cAAbJ,EAA0B,CAChC,IAAII,EAAapH,KAAKgF,OAAO4I,UAAU5N,KAAKmG,SAASiB,YAOrD,OALkB,MAAdA,IACDA,EAAapH,KAAK2G,eAAeiH,UAC9B5N,KAAKmG,SAASiB,aAGbA,CACV,CAEA,OAAO,IACV,CAMIC,kBACD,IAAKrH,KAAKmG,SAASgB,aAAenH,KAAKmG,SAASkB,YAC7C,OAAO,KAGV,IAAID,EAeJ,MAX6B,QAA1BpH,KAAKmG,SAASa,UACe,QAA7BhH,KAAKmG,SAASc,cAEdG,EAAapH,KAAKgF,OAAO4I,UAAU5N,KAAKmG,SAASkB,aAE/B,MAAdD,IACDA,EAAapH,KAAK2G,eAAeiH,UAC9B5N,KAAKmG,SAASkB,eAIhBD,CACV,CAWA+rB,iBAAiBlF,EAAS/rB,EAAU,CAAC,GAClC,GAAe,MAAX+rB,EAAiB,OACrB,IAAI8K,EACJ,MAAM3xB,EAAapH,KAAKoH,WAClBT,EAAiB3G,KAAK2G,eAEtBK,EAAW,GAAGhH,KAAKmG,SAASa,YAAYhH,KAAKmG,SAASc,cAI5D,GAAiB,cAAbD,EAA0B,CAC3B,MAAMK,EAAcrH,KAAKqH,YAErBD,GAAcA,EAAWpC,OAAOnG,IAAM8H,EAAe9H,GACtDk6B,EAAU3xB,EAAWP,WACbQ,GAAeA,EAAYrC,OAAOnG,IAAM8H,EAAe9H,KAC/Dk6B,EAAU1xB,EAAYR,WAE5B,MAGGO,IACc,aAAbJ,GACgB,YAAbA,GAA0BhH,KAAKmG,SAASM,UAE5CsyB,EAAU3xB,EAAWP,WAGF,aAAbG,EAMH+xB,EADC72B,EAAQw6C,UACC/1C,EAAe0oB,KAEfjoB,EACLA,EAAWP,WACX7G,KAAKgsB,UAAUnlB,WAIjBF,IACNoyB,EAAUpyB,EAAe0oB,MAG5B,IAAI1hB,EACDsgB,EAAQ8K,IACR9K,EAAQjuB,KAAKgF,QAAQqqB,OACrBpB,EAAQpvB,IACRovB,EAMH,MAJe,MAAX8K,IACDprB,EAAS+X,SAAS/X,IAGdA,CACV,oBC5bH,MAAMqV,EAAY,EAAQ,OAE1BzjB,EAAOC,QAAU,cAA0BwjB,EACxCrjB,YAAY+F,EAAQV,EAAQm3C,GACzBr8C,MAAM,CAAC,SAAUkF,EAAOlD,IAGxB9B,KAAKmE,SAAWg4C,GAAiB,CAAC,EAsBlCn8C,KAAKgF,OAASA,EAEdhF,KAAKgG,WAAWN,EACnB,CAQWi3C,2BACR,MAAO,CACJ,KACA,aACA,aACA,aACA,YACA,YAEN,CAEA/xB,uBACG,MAAO,CAAC,CACX,CAGAphB,WACG,OAAOxJ,KAAKmE,SAASC,GACxB,CAMAw4C,gBACG,OAAI58C,KAAKmE,SAAS80C,mBACXjsC,MAAMC,QAAQjN,KAAKmE,SAAS80C,oBACtBj5C,KAAKmE,SAAS80C,mBAEd,CAACj5C,KAAKmE,SAAS80C,oBAGlB,EAEb,CAMA4D,kBACG,OAAI78C,KAAKmE,SAAS+0C,qBACXlsC,MAAMC,QAAQjN,KAAKmE,SAAS+0C,sBACtBl5C,KAAKmE,SAAS+0C,qBAEd,CAACl5C,KAAKmE,SAAS+0C,sBAGlB,EAEb,CAGA4D,YACG,OAAO98C,KAAKmE,SAASiH,IACxB,CAGA2xC,gBACG,OAAO/8C,KAAKmE,SAASD,QACxB,CAGA84C,mBACG,OAAOh9C,KAAKmE,SAAS+5B,WACxB,CAGA2S,oBACG,OAAkC,MAA9B7wC,KAAKmE,SAASy0C,aAC2B,mBAA/B54C,KAAKmE,SAASy0C,aACf54C,KAAKmE,SAASy0C,aAAa54C,MAE3BA,KAAKmE,SAASy0C,aAIpB,CACV,CAGAntC,kBACG,OAAgC,MAA5BzL,KAAKmE,SAAS00C,WACyB,mBAA7B74C,KAAKmE,SAAS00C,WACf74C,KAAKmE,SAAS00C,WAAW74C,MAEzBA,KAAKmE,SAAS00C,WAIpB,CACV,CAGAvR,kBACG,OAAgC,MAA5BtnC,KAAKmE,SAAS60C,WACyB,mBAA7Bh5C,KAAKmE,SAAS60C,WACfh5C,KAAKmE,SAAS60C,WAAWh5C,MAEzBA,KAAKmE,SAAS60C,WAIpB,CACV,CAEAiE,sBACG,OAAIj9C,KAAKmE,SAAS20C,gBAAuB94C,KAAKmE,SAAS20C,cAG1D,CAEAoE,oBACG,OAAkC,MAA9Bl9C,KAAKmE,SAASg5C,eAC2B,mBAA/Bn9C,KAAKmE,SAASg5C,aACfn9C,KAAKmE,SAASg5C,aAAan9C,MAE3BA,KAAKmE,SAASg5C,aAK9B,CAgBAt3C,QACG,MAAM2R,EAAM1X,MAAM+F,QAElB,MAAO,CACJhH,GAAImB,KAAKnB,GACT8C,KAAM3B,KAAK2B,MAAQ,QACnByC,IAAKpE,KAAKoE,IACVgH,KAAMpL,KAAKoL,KACX1C,WAAY1I,KAAK0I,WACjB7B,WAAY7G,KAAK6G,WACjBV,SAAUnG,KAAKmG,SACfof,aAAc/N,EAAI+N,aAExB,CAEA63B,aAAaznC,EAAK0nC,GACf,IAAIC,EAAYD,EAIhB,YAHkB,IAAP1nC,IACR2nC,EAAY3nC,GAER2nC,CACV,CAQAt3C,WAAWN,GACH1F,KAAKnB,KAAImB,KAAKnB,GAAK6G,EAAO7G,IAC/BmB,KAAK2B,KAAQ+D,EAAO/D,KACpB3B,KAAKoE,IAAMsB,EAAOtB,KAAOpE,KAAKwJ,WAC9BxJ,KAAKoL,KAAO1F,EAAO0F,MAAQpL,KAAK88C,YAEhCp3C,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EAItCnG,KAAKmB,MAAQuE,EAAOvE,OAASuE,EAAOS,SAAShF,OAAS,UAEtDnB,KAAK6G,WAAanB,EAAOmB,YAAc,GAEvC7G,KAAK0I,WAAahD,EAAOgD,YAAc,EAEvC1I,KAAKmG,SAAWT,EAAOS,SACvBnG,KAAKmG,SAASC,SAAWpG,KAAKo9C,aAAa13C,EAAOS,SAASC,SAAU,KACrEpG,KAAKmG,SAASo3C,SAAWv9C,KAAKo9C,aAAa13C,EAAOS,SAASo3C,SAAU,KACrEv9C,KAAKmG,SAASpF,MAAQf,KAAKo9C,aAAa13C,EAAOS,SAASpF,MAAO,KAG/Df,KAAK0I,WAAagd,SAAS1lB,KAAK0I,YAChC1I,KAAKmG,SAASC,SAAWsf,SAAS1lB,KAAKmG,SAASC,UAChDpG,KAAKmG,SAASo3C,SAAW73B,SAAS1lB,KAAKmG,SAASo3C,UAChDv9C,KAAKmG,SAAS/F,OAASslB,SAAS1lB,KAAKmG,SAAS/F,QAAU,GACxDJ,KAAKmG,SAASpF,MAAQ2kB,SAAS1lB,KAAKmG,SAASpF,OAG7C,MAAM0lC,EAAgBzmC,KAAKL,YAAY8mC,iBAAmB,CAAC,EAC3D,IAAK,MAAMhT,KAAMgT,EACdzmC,KAAKmG,SAASstB,GAAMzzB,KAAKo9C,aACtB13C,EAAOS,SAASstB,GAChBgT,EAAchT,IAKpB3zB,MAAMkG,WAAWN,GAGjB1F,KAAK6G,WAAa7G,KAAK6G,YAAc7G,KAAKmB,MAI1CnB,KAAK6G,WAAa7G,KAAK6G,WAAWgM,QAAQ,mBAAoB,GACjE,CAQA8V,aACG,OAAO3oB,KAAKgF,OAAO2hC,WAAa3mC,KAAKnB,EACxC,CAQA6nC,aAAahhC,GACVA,EAAO1F,KAAK6G,YAAc,EAC7B,CAQAspB,YAAYxmB,EAAMrC,IAGZtH,KAAKmG,SAASo3C,UACY,MAAzB5zC,EAAK3J,KAAK6G,aAAgD,IAAzB8C,EAAK3J,KAAK6G,aACnB,GAAzB8C,EAAK3J,KAAK6G,aAEVS,EAAUmW,SAASzd,KAAK6G,WAAY,4BAE1C,CAOI4+B,qBACD,OAAO,CACV,CAEA+W,UAAUvuB,GACP,MAAMwuB,EAAW,GAAGz8C,KAAK6vB,OAAS7vB,KAAKgF,OAAOkC,QAAQlH,KAAK6G,aAE3D,IAAI8G,EAAS,GAOb,OANkC,MAA9BsgB,IAAUjuB,KAAK6G,YAChB8G,EAASsgB,EAAQjuB,KAAK6G,YACS,MAAvBonB,IAAUwuB,KAClB9uC,EAASsgB,EAAQwuB,IAGb9uC,CACV,CAQA6S,OAAOyN,GACJ,OAAIA,EACMjuB,KAAKw8C,UAAUvuB,GACX,EACjB,CASAzZ,eACG,MAAMgpC,EAAQ19C,MAAM0U,eAWpB,MAPkB,IAAdgpC,EAAMt2C,OACPs2C,EAAMt2C,KACHs2C,EAAM/7B,KAAKva,MAAQs2C,EAAM/7B,KAAKtgB,OAASq8C,EAAM/7B,KAAK5a,YAEpD7G,KAAKgF,QAAUhF,KAAKgF,OAAOkC,OAC5Bs2C,EAAMt2C,KAAO,GAAGlH,KAAKgF,OAAOkC,SAASs2C,EAAMt2C,QAEvCs2C,CACV,oBC5VH,MAAM9E,EAAU,EAAQ,OAExB,SAAS34C,EAAEqE,EAAKsO,GAEb,OAAOA,CACV,CAEA,MAAM+qC,EAAsB,CACzBr5C,IAAK,OAGL85B,YAAa,4BAIb9yB,KAAM,WAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,OAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpBzS,EAAgB,CACnBiX,WAAY,EACZC,YAAa,EACbC,iBAAkB,KAClBC,kBAAmB,OACnBC,kBAAmB,OACnBC,oBAAqB,EACrBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,MAGpB3+C,EAAOC,QAAU,cAA8Bk5C,EAC5C/4C,YAAY+F,EAAQV,EAAQyhC,EAAgBgX,GACzC39C,MAAM4F,EAAQV,EAAQyhC,EACzB,CAGA7b,kBACG,OAAO6yB,CACV,CAEA7yB,uBACG,OAAO6b,CACV,CAgBAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASu3C,WAAah4B,SAAS1lB,KAAKmG,SAASu3C,YAClD19C,KAAKmG,SAASw3C,YAAcj4B,SAAS1lB,KAAKmG,SAASw3C,YACtD,CAYAjX,aAAahhC,GACV,GAA+B,MAA3BA,EAAO1F,KAAK6G,YAAqB,OAErC,IAAIs3C,EAG6B,GAA7Bn+C,KAAKmG,SAASw3C,YACfQ,EAAa,IAAI19B,KAIY,GAA7BzgB,KAAKmG,SAASw3C,aACd39C,KAAKmG,SAASy3C,mBAEdO,EAAa,IAAI19B,KAAKzgB,KAAKmG,SAASy3C,mBAIrB,MAAdO,IACDz4C,EAAO1F,KAAK6G,YAAc7G,KAAK8B,GAAGuf,MAAMX,aAAay9B,EAAY,CAC9D39B,OAAQ,eAIjB,CASA2P,YAAYxmB,EAAMrC,GAGf,GAFAxH,MAAMqwB,YAAYxmB,EAAMrC,GAEpBqC,EAAK3J,KAAK6G,YAAa,CACxB,IAAInE,EAAQiH,EAAK3J,KAAK6G,YAQtB,GANMnE,aAAiB+d,OACpB/d,EAAQ1C,KAAK8B,GAAGuf,MAAMhB,OAAO3d,IAMa,kBAA1CrD,OAAO++C,UAAU/pC,SAASgqC,KAAK37C,IAC/B47C,SAAS57C,GACV,CACC,IAAI4C,GAAU,EAGd,GAAItF,KAAKmG,UAAYnG,KAAKmG,SAAS03C,kBAAmB,CACnD,MAAMU,EAAYv+C,KAAKmG,SAAS83C,kBACxB,IAAIx9B,KAAKzgB,KAAKmG,SAAS83C,mBACvB,KACLO,EAAUx+C,KAAKmG,SAAS+3C,gBACnB,IAAIz9B,KAAKzgB,KAAKmG,SAAS+3C,iBACvB,KACLO,EAAmBz+C,KAAK0+C,eAAeH,GACvCI,EAAiB3+C,KAAK0+C,eAAeF,GAClCI,EAAU5+C,KAAK8B,GAAGuf,MAAMN,aAC3B,IAAIN,KACJzgB,KAAKmG,SAAS43C,oBACd/9C,KAAKmG,SAAS23C,mBAEXe,EAAU7+C,KAAK8B,GAAGuf,MAAMF,QAC3B,IAAIV,KACJzgB,KAAKmG,SAAS63C,mBACdh+C,KAAKmG,SAAS23C,mBAEjB,OAAQ99C,KAAKmG,SAAS03C,mBACnB,IAAK,YACEe,EAAUl8C,GAASA,EAAQm8C,EAASv5C,GAAU,GAE/CA,GAAU,EACVgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAAoC,CACnCC,KAAK0+C,eAAeE,GACpB5+C,KAAK0+C,eAAeG,OAK7B,MACH,IAAK,UACEN,EAAY77C,GAASA,EAAQ87C,EAASl5C,GAAU,GAEjDA,GAAU,EACVgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAAoC,CACnC0+C,EACAE,MAIT,MACH,IAAK,aACEj8C,EAAQ67C,GAAaC,EAAU97C,EAAO4C,GAAU,GAEjDA,GAAU,EACVgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAAwC,CACvC0+C,EACAE,MAIT,MACH,IAAK,IACFr5C,EACG5C,EAAM+3C,SACN8D,EAAU9D,SACV/3C,EAAM+3C,WAAa8D,EAAU9D,UAC3Bn1C,GACFgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAAoB,CAAC0+C,KAE7B,MACH,IAAK,KACFn5C,EACG5C,EAAM+3C,SACN8D,EAAU9D,SACV/3C,EAAM+3C,WAAa8D,EAAU9D,UAC3Bn1C,GACFgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAAwB,CAAC0+C,KAEjC,MACH,IAAK,IACFn5C,EACG5C,EAAM+3C,SACN8D,EAAU9D,SACV/3C,EAAM+3C,UAAY8D,EAAU9D,UAC1Bn1C,GACFgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAAoB,CAAC0+C,KAE7B,MACH,IAAK,IACFn5C,EACG5C,EAAM+3C,SACN8D,EAAU9D,SACV/3C,EAAM+3C,UAAY8D,EAAU9D,UAC1Bn1C,GACFgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAAqB,CAAC0+C,KAE9B,MACH,IAAK,KACFn5C,EACG5C,EAAM+3C,SACN8D,EAAU9D,SACV/3C,EAAM+3C,WAAa8D,EAAU9D,UAC3Bn1C,GACFgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAA6B,CAAC0+C,KAEtC,MACH,IAAK,KACFn5C,EACG5C,EAAM+3C,SACN8D,EAAU9D,SACV/3C,EAAM+3C,WAAa8D,EAAU9D,UAC3Bn1C,GACFgC,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,EAA8B,CAAC0+C,KAIhD,CAEIn5C,IAGDqE,EAAK3J,KAAK6G,YAAc7G,KAAK8+C,YAAYp8C,GAE/C,MAEG4E,EAAUmW,SAASzd,KAAK6G,WAAY,oBAE1C,CACH,CAEA2Z,OAAOyN,GACJ,MAAM0C,EAAI3wB,KAAKw8C,UAAUvuB,GAEzB,GAAS,IAAL0C,GAAgB,MAALA,EACZ,MAAO,GAIV,MAAMouB,EAAU/+C,KAAK8B,GAAGuf,MAAMhB,OAAOsQ,GACrC,OAAO3wB,KAAK0+C,eAAeK,EAI9B,CAEAC,YACG,IAAIC,EAAmB,GAOvB,OAJGj/C,KAAKmG,UAAYnG,KAAKmG,SAASu3C,WAC1B19C,KAAKmG,SAASu3C,WACd,IAIL,KAAS,EAuBT,QAEMuB,EAAmB,WAEtB,MArBH,KAAK,EAECA,EAAmB,WAEtB,MAEH,KAAK,EAECA,EAAmB,YAEtB,MAEH,KAAK,EAECA,EAAmB,YAU5B,OAAOA,CACV,CAEAP,eAAeQ,GACZ,MAAMxB,EAAa19C,KAAKg/C,YAExB,OAAOh/C,KAAKm/C,aAAazB,EAAYwB,EACxC,CAmBAJ,YAAYp8C,GACT,OAAOA,EAAQ1C,KAAK8B,GAAGuf,MAAMX,aAAahe,EAAO,CAC9C8d,OAAQ,eACN,EAER,CAEA2+B,aAAazB,EAAYwB,GACtB,OAAIA,GAAYA,EAAS7qC,SAAiB6qC,EAAS7qC,WACvC,EACf,GAKH9U,EAAOC,QAAQ4/C,MAAQ,gDCvZvB,MAAMC,EAAkB,EAAQ,OAO1B5B,EAAsB,CACzBr5C,IAAK,WAGL85B,YAAa,6BAIb9yB,KAAM,UAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,cAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,YAKrBC,qBAAsB,CAAC,aAMpBzS,EAAgB,CACnB6Y,WAAY,EACZC,YAAa,EACbC,iBAAkB,MAGrBjgD,EAAOC,QAAU,cAAkC6/C,EAChD1/C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQy4C,EACzB,CAGA7yB,kBACG,OAAO6yB,CACV,CAEA7yB,uBACG,MAAM60B,EAAc3/C,MAAM2mC,gBAC1B,OAAOpnC,OAAOoyB,OAAOguB,EAAahZ,EACrC,CAgBAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASm5C,WAAa55B,SAAS1lB,KAAKmG,SAASm5C,YAClDt/C,KAAKmG,SAASo5C,YAAc75B,SAAS1lB,KAAKmG,SAASo5C,YACtD,CAYA7Y,aAAahhC,GACV,GAA+B,MAA3BA,EAAO1F,KAAK6G,YAAqB,OAIrC,IAAIs3C,EAYJ,GAdAr+C,MAAM4mC,aAAahhC,GAKfA,EAAO1F,KAAK6G,cACbs3C,EAAan+C,KAAK8B,GAAGuf,MAAMhB,OAAO3a,EAAO1F,KAAK6G,cAQhB,GAA7B7G,KAAKmG,SAASo5C,YAAkB,CACjC,MAAMG,EAAW,IAAIj/B,KAEH,MAAd09B,IAAoBA,EAAa,IAAI19B,MAEzC09B,EAAWwB,SAASD,EAASE,YAC7BzB,EAAW0B,WAAWH,EAASI,cAC/B3B,EAAW4B,WAAWL,EAASM,cAC/B7B,EAAW8B,gBAAgBP,EAASQ,kBACvC,MAEK,GAC2B,GAA7BlgD,KAAKmG,SAASo5C,aACdv/C,KAAKmG,SAASq5C,iBACf,CACC,MAAMD,EAAc,IAAI9+B,KAAKzgB,KAAKmG,SAASq5C,kBAEzB,MAAdrB,IAAoBA,EAAa,IAAI19B,MAEzC09B,EAAWwB,SAASJ,EAAYK,YAChCzB,EAAW0B,WAAWN,EAAYO,cAClC3B,EAAW4B,WAAWR,EAAYS,cAClC7B,EAAW8B,gBAAgBV,EAAYW,kBAC1C,CAGkB,MAAd/B,IACDz4C,EAAO1F,KAAK6G,YAAcs3C,EAAWz6B,cAC3C,CAEAs7B,YACG,MAAMM,EAAat/C,KAAKmgD,gBAIxB,OAFAngD,KAAKmG,SAAWnG,KAAKmG,UAAY,CAAC,EAEF,GAA5BnG,KAAKmG,SAASu3C,WACR4B,EAKH,GAFYx/C,MAAMk/C,eAEDM,GAC3B,CAEA9+B,OAAOyN,GACJ,MAAMmyB,EAAiBpgD,KAAKg/C,YACtBruB,EAAI3wB,KAAKw8C,UAAUvuB,GACnB8wB,EAAU/+C,KAAK8B,GAAGuf,MAAMhB,OAAOsQ,GAErC,MAAS,IAALA,GAAgB,MAALA,EACL,GAGHntB,MAAMid,KAAK4/B,UAAUD,EAArB58C,CAAqCu7C,EAC/C,CAEAoB,gBAEG,OADAngD,KAAKmG,SAAWnG,KAAKmG,UAAY,CAAC,EAC1BnG,KAAKmG,SAASm5C,YACnB,KAAK,EACF,MAAO,YACV,KAAK,EACF,MAAO,SACV,QACG,MAAO,GAEhB,CAOAR,YAAYn+B,GACT,OAAOA,GAAM+C,iBAAmB,EACnC,GAKHnkB,EAAOC,QAAQ4/C,MACZ,2ECnNH,MAAM1G,EAAU,EAAQ,OAOlB4H,EAAuB,CAC1Bl8C,IAAK,QAGL85B,YAAa,kDAIb9yB,KAAM,WAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,QAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCzS,EAAgB,CACnBsH,QAAS,GACTwS,gBAAiB,GAGpBhhD,EAAOC,QAAU,cAA+Bk5C,EAC7C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQs7C,EACzB,CAGA11B,kBACG,OAAO01B,CACV,CAEA11B,uBACG,OAAO6b,CACV,CAMAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS4nC,QAAUroC,EAAOS,SAAS4nC,SAAW,EACtD,CAYArH,aAAahhC,GAELA,EAAO1F,KAAK6G,aAEV7G,KAAKmG,SAAS4nC,UACfroC,EAAO1F,KAAK6G,YAAc7G,KAAKmG,SAAS4nC,QAGjD,CAUA5d,YAAYxmB,EAAMrC,GACf,GAAIqC,EAAK3J,KAAK6G,YAAa,CACxB,MAAM25C,EAAM,wJAEZ,IAAI99C,EAAQiH,EAAK3J,KAAK6G,YACtBnE,EAAQ0Y,OAAO1Y,GAAO2V,cACjBmoC,EAAIl+B,KAAK5f,IACX4E,EAAUmW,SAASzd,KAAK6G,WAAY,gBAE1C,CACH,oBC/HH,MAAM6xC,EAAU,EAAQ,OAOlB+H,EAAsB,CACzBr8C,IAAK,OAGL85B,YAAa,gCAIb9yB,KAAM,OAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,kBAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCzS,EAAgB,CACnBia,mBAAoB,EACpBC,SAAU,EACVC,SAAU,IAGbrhD,EAAOC,QAAU,cAA8Bk5C,EAC5C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQy7C,EACzB,CAGA71B,kBACG,OAAO61B,CACV,CAEA71B,uBACG,OAAO6b,CACV,CAMAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASw6C,SAAWj7B,SAAS1lB,KAAKmG,SAASw6C,UAChD3gD,KAAKmG,SAAS06C,cAAgBn7B,SAAS1lB,KAAKmG,SAAS06C,eACrD7gD,KAAKmG,SAAS26C,cAAgBp7B,SAAS1lB,KAAKmG,SAAS26C,eACrD9gD,KAAKmG,SAASu6C,mBAAqBh7B,SAChC1lB,KAAKmG,SAASu6C,mBAEpB,CAcAlE,UAAUvuB,GACP,MAAMwuB,EAAW,GAAGz8C,KAAK6vB,OAAS7vB,KAAKgF,OAAOkC,QAAQlH,KAAK6G,aAE3D,IAAI8G,EAASsgB,EAAQjuB,KAAK6G,aAAeonB,EAAQwuB,IAAa,CAAC,EAC/D,GAAqB,iBAAV9uC,EACR,IACGA,EAAS+F,KAAKuD,MAAMtJ,EAGvB,CAFE,MAAOzF,GAET,CAGH,OAAOyF,CACV,CAcA+4B,aAAahhC,GACVA,EAAO1F,KAAK6G,YAAc,IAC7B,CAEA2Z,OAAOyN,GACJ,IAAItgB,EAAS3N,KAAKw8C,UAAUvuB,GAC5B,GAAItgB,EAAQ,CACT,GAAqB,iBAAVA,EACR,IACGA,EAAS+F,KAAKuD,MAAMtJ,EAGvB,CAFE,MAAOzF,GAET,CAIH,OAAOyF,GAASA,EAAOozC,UAAiB,EAC3C,CACG,MAAO,EAEb,CAQAC,aAAaC,GACV,MAAMC,EAAcphD,MAAMkhD,aAAaC,GAQvC,MAJsC,MAAlCC,IAAclhD,KAAK6G,oBACbq6C,EAAYlhD,KAAK6G,YAGpBq6C,CACV,oBC5KH,MAAMxI,EAAU,EAAQ,OAMlByI,EAAyB,CAC5B/8C,IAAK,UAGL85B,YACG,qEAIH9yB,KAAM,iBAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,UAIVi5C,aAAex3C,IACZ,MAAMqmB,EAAYrmB,EAAMqmB,UACxB,OAAiB,MAAbA,GAGqB,cAAlBA,EAAU5nB,GAAmB,EAGvC00C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAzS,EAAgB,CACnB9gC,MAAO,GACP08B,WAAY,GACZrW,UAAW,GACXrqB,KAAM,MACNguB,MAAO,IAGVpwB,EAAOC,QAAU,cAAiCk5C,EAC/C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQm8C,EACzB,CAGAv2B,kBACG,OAAOu2B,CACV,CAEAv2B,uBACG,OAAO6b,CACV,CAYAC,aAAahhC,UAEHA,EAAO1F,KAAK6G,WACtB,CAWA2Z,OAAOyN,EAASmzB,GAAc,EAAOC,GAAY,GAC9C,MAAMr1B,EAAYhsB,KAAKgsB,UAEjBs1B,EAAYC,IAEf,GAAKv1B,GAA8B,aAAjBA,EAAU5nB,IAErB,CACJ,MAAMo9C,EAAgB,CAAC,EAEvB,OADAA,EAAcx1B,EAAUnlB,YAAc06C,EAC/Bv1B,EAAUxL,OAAOghC,EAC3B,CALG,OAAOD,CAKV,EAKH,GAAgC,MAA5BtzB,EAAQjuB,KAAK6G,cAAwBu6C,IAAgBC,EAEtD,OAAOC,EAASrzB,EAAQjuB,KAAK6G,aACzB,GACwB,MAA5BonB,EAAQjuB,KAAK6G,cACZu6C,GACDC,EAEA,OAAOpzB,EAAQjuB,KAAK6G,YAGvB,IAAKmlB,EAAW,OAAO,EAEvB,MAAMy1B,EAAYzhD,KAAKyhD,YACvB,IAAKA,EAAW,OAAO,EAEvB,IAAI93C,EACDskB,EAAQwzB,EAAU3wB,iBAClB7C,EAAQwzB,EAAU56C,aAClB,GACEmG,MAAMC,QAAQtD,KAAOA,EAAO,CAACA,IAI/BA,GACAA,EAAKzD,QACLlG,KAAKmG,UACLnG,KAAKmG,SAASwpB,OACd3vB,KAAKmG,SAASwpB,MAAMtO,OACpBrhB,KAAKmG,SAASwpB,MAAMtO,MAAMnb,SAE1BlG,KAAK0hD,aAAa98C,SAAS5E,KAAKmG,SAASwpB,OACzChmB,EAAOA,EAAKf,QAAQoF,GAAShO,KAAK0hD,aAAap8C,QAAQ0I,MAG1D,IAAI2zC,EAAa,GAGjB,OAAQ31B,EAAU5nB,KACf,IAAK,YACFuF,EAAK3F,SAAS2sB,IACXgxB,EAAWt9C,KAAK62C,WAAWlvB,EAAUxL,OAAOmQ,IAAM,GAAG,IAExD,MACH,IAAK,SACFgxB,EAAah4C,EAAKjL,KAAKiyB,GAAMA,EAAE3E,EAAUnlB,aAAe,IAI9D,IAAI8G,EAAS,EAGb,MAAMi0C,EAAc51B,EAAU61B,iBAG9B,OAAQ7hD,KAAKmG,SAASxE,MACnB,IAAK,MACF,GAAIggD,EAAWz7C,OAAS,EAAG,CAGxB,MAAM47C,EAAax7C,KAAKy7C,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAW39C,SAAS2R,IACjBqsC,GAAOrsC,EAAMmsC,GAAc,CAAC,IAG/Bn0C,EAASq0C,EAAMF,CAClB,CACA,MAEH,IAAK,UACF,GAAIH,EAAWz7C,OAAS,EAAG,CAGxB,MAAM47C,EAAax7C,KAAKy7C,IAAI,GAAIH,GAIhC,IAAII,EAAM,EACVL,EAAW39C,SAAS2R,IACjBqsC,GAAOrsC,EAAMmsC,GAAc,CAAC,IAI/Bn0C,EAASq0C,EAAMF,EAAaH,EAAWz7C,MAC1C,CACA,MAEH,IAAK,MACFyH,EAASrH,KAAK27C,OAAON,IAAe,EACpC,MACH,IAAK,MACFh0C,EAASrH,KAAK47C,OAAOP,IAAe,EACpC,MACH,IAAK,QACFh0C,EAASg0C,EAAWz7C,OAO1B,OAHA+nB,EAAQjuB,KAAK6G,YAAc8G,EAGN,aAAjBqe,EAAU5nB,IACJuJ,EAEA2zC,EAAS3zC,EAEtB,CAEA8zC,YACG,OAAOzhD,KAAKgF,OAAO4I,UAAU5N,KAAKmG,SAASR,MAC9C,CAEIqmB,gBACD,MAAMxU,EAAMxX,KAAK8B,GAAG2V,WAAWzX,KAAKmG,SAASnB,QAC7C,IAAKwS,EAAK,OAAO,KAGjB,OADcA,EAAI5J,UAAU5N,KAAKmG,SAAS6lB,YACvB,IAGtB,CAEI01B,mBAUD,OATuB,MAAnB1hD,KAAKmiD,aACNniD,KAAKmiD,WAAaniD,KAAK8B,GAAGuzB,iBAAiB,GAAGr1B,KAAKnB,oBAE/CmB,KAAKgsB,WAAahsB,KAAKgsB,UAAUhnB,SAClChF,KAAKmiD,WAAW7sB,WAAWt1B,KAAKgsB,UAAUhnB,OAAO8B,UACjD9G,KAAKmiD,WAAWv9C,SAAS5E,KAAKmG,SAASwpB,SAItC3vB,KAAKmiD,UACf,oBCzRH,MAAMzJ,EAAU,EAAQ,OAElB0J,EAAuB,CAC1Bh+C,IAAK,QAGL85B,YAAa,kCAIb9yB,KAAM,eAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,mBAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,aAMvCzS,EAAgB,CACnB4b,SAAU,EACVC,WAAY,GACZC,UAAW,EACXC,YAAa,GACb9B,mBAAoB,EACpB+B,iBAAiB,EACjBC,gBAAiB,IAGpBnjD,EAAOC,QAAU,cAA+Bk5C,EAC7C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQo9C,EAuBzB,CAGAx3B,kBACG,OAAOw3B,CACV,CAEAx3B,uBACG,OAAO6b,CACV,CAMAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASk8C,SAAW38B,SAAS1lB,KAAKmG,SAASk8C,UAChDriD,KAAKmG,SAASo8C,UAAY78B,SAAS1lB,KAAKmG,SAASo8C,WACjDviD,KAAKmG,SAASm8C,WAAa58B,SAAS1lB,KAAKmG,SAASm8C,YAClDtiD,KAAKmG,SAASq8C,YAAc98B,SAAS1lB,KAAKmG,SAASq8C,aACnDxiD,KAAKmG,SAASs8C,gBAAkB/8B,SAAS1lB,KAAKmG,SAASs8C,iBACvDziD,KAAKmG,SAASu6C,mBAAqBh7B,SAChC1lB,KAAKmG,SAASu6C,mBAEpB,CAUAvwB,YAAYxmB,EAAMrC,GACfxH,MAAMqwB,YAAYxmB,EAAMrC,EAC3B,oBCjIH,MAAMoxC,EAAU,EAAQ,OAElBiK,EAAsB,CACzBv+C,IAAK,OAGL85B,YAAa,aAIb9yB,KAAM,OAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,OAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,QAKrBC,qBAAsB,CAAC,SAMpBzS,EAAgB,CAAC,EAEvBlnC,EAAOC,QAAU,cAA8Bk5C,EAC5C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQ29C,EACzB,CAGA/3B,kBACG,OAAO+3B,CACV,CAEA/3B,uBACG,OAAO6b,CACV,CAQAC,aAAahhC,GAIb,oBChFH,MAAMgzC,EAAU,EAAQ,OAOlBkK,EAAsB,CACzBx+C,IAAK,OAGL85B,YACG,6EAIH9yB,KAAM,UAINwtC,aAAejzC,IACRA,EAAMQ,SAAS08C,WAYtBhK,WAAalzC,IACNA,EAAMQ,SAAS08C,WAWtB3+C,SAAU,cAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,OACA,UACA,YAMH4J,UAAYn9C,KACLA,EAAMQ,SAAS28C,WAQnBrc,EAAgB,CACnBoc,WAAY,EAIZC,UAAW,EAIX5gD,QAAS,GAST6rC,QAAS,OACTgV,gBAAiB,IAGpBxjD,EAAOC,QAAU,cAA8Bk5C,EAC5C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQ49C,GAEtB5iD,KAAKgjD,iBAAmB,EAI3B,CAGAp4B,kBACG,OAAOg4B,CACV,CAEAh4B,uBACG,OAAO6b,CACV,CAYAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGb1F,KAAKmG,SAASjE,SAAWlC,KAAKmG,SAASjE,QAAQgE,OAAS,GACzDlG,KAAKmG,SAASjE,QAAQ8B,SAASwtC,IAC5BxxC,KAAKw/B,UAAUgS,EAAKA,EAAK,CAAC,QAAQ,IAIxCxxC,KAAKmG,SAAS08C,WAAan9B,SAAS1lB,KAAKmG,SAAS08C,YAClD7iD,KAAKmG,SAAS28C,UAAYp9B,SAAS1lB,KAAKmG,SAAS28C,UACpD,CAaAj9C,QACG,MAAM2R,EAAM1X,MAAM+F,QAOlB,OAJA2R,EAAIrR,SAASjE,QAAQ8B,SAASwtC,IAC3BxxC,KAAK4/B,YAAY4R,EAAKA,EAAK,CAAC,QAAQ,IAGhCh6B,CACV,CAYAkvB,aAAahhC,GAEV,GAAgC,GAA5B1F,KAAKmG,SAAS08C,WAAoB,CACnC,IAAII,EAAc,GAClBjjD,KAAKmG,SAAS48C,gBAAgB/+C,SAAS2d,IACpC3hB,KAAKmG,SAASjE,QAAQ8B,SAASwtC,IACxBA,EAAI3yC,IAAM8iB,EAAI1T,MACfg1C,EAAY5+C,KAAKmtC,EACpB,GACD,IAEL9rC,EAAO1F,KAAK6G,YAAco8C,GAAe,EAC5C,MAESjjD,KAAKmG,SAAS4nC,SAAoC,IAAzB/tC,KAAKmG,SAAS4nC,UAC7CroC,EAAO1F,KAAK6G,YAAc7G,KAAKmG,SAAS4nC,QAE9C,CAUA5d,YAAYxmB,EAAMrC,GACfxH,MAAMqwB,YAAYxmB,EAAMrC,EAC3B,CAOApF,UACG,OAAOlC,KAAKmG,SAASjE,QAAQxD,KAAK8yC,IACxB,CACJ3yC,GAAI2yC,EAAI3yC,GACRoP,KAAMujC,EAAIvjC,KACVi1C,IAAK1R,EAAI0R,IAAM1R,EAAI0R,IAAM,GACzB39B,aAAcisB,EAAIjsB,aAAeisB,EAAIjsB,aAAe,MAG7D,CAEA/E,OAAOyN,EAAS/rB,EAAU,CAAC,GACxB,IAAIyT,EAAM3V,KAAKw8C,UAAUvuB,IAAY,GAErC,GAAkB,iBAAPtY,EACR,IACGA,EAAMjC,KAAKuD,MAAMtB,EAGpB,CAFE,MAAO1W,GAET,CAqBH,OAjBK+N,MAAMC,QAAQ0I,KAAMA,EAAM,CAACA,IAEZ3V,KAAKmG,SAASjE,QAC9B0G,QAAQ4oC,GAAQ77B,EAAI/M,QAAQqK,IAAOA,EAAEpU,IAAMoU,IAAMu+B,EAAI3yC,KAAIqH,OAAS,IAClExH,KAAK8yC,IACH,IAAIvjC,EAAOujC,EAAIvjC,KACf,MAAM6B,EAAe5N,EAAQ4N,cAAgB,KAGvCqzC,GAAW3R,EAAIjsB,cAAgB,IAAI3c,QACrC5J,GAAMA,EAAE0gC,eAAiB5vB,IAC3B,GAGF,OAFIqzC,IAASl1C,EAAOk1C,EAAQl1C,MAErBA,CAAI,IAGEC,KAAK,KAC3B,oBCpQH,MAAMwqC,EAAU,EAAQ,OASlB0K,EAA0B,CAC7Bh/C,IAAK,WAEL85B,YAAa,yBAIb9yB,KAAM,cAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,YAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,WAAY,aAAc,QAK/CC,qBAAsB,CAAC,OAAQ,aAAc,YAK7CmK,gBA1DqB,KAgElB5c,EAAgB,CACnBsH,QAAS,GACTuV,oBAAqB,GAGxB/jD,EAAOC,QAAU,cAA8Bk5C,EAC5C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQo+C,EAUzB,CAGAx4B,kBACG,OAAOw4B,CACV,CAEAx4B,uBACG,OAAO6b,CACV,CAYAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS4nC,QAAUroC,EAAOS,SAAS4nC,SAAW,GAGnD/tC,KAAKmG,SAASm9C,oBACX59C,EAAOS,SAASm9C,oBAAsB,IACtC7c,EAAc6c,oBAGjBtjD,KAAKmG,SAASm9C,oBAAsB59B,SACjC1lB,KAAKmG,SAASm9C,qBAGbtjD,KAAKmG,SAASm9C,oBACXtjD,KAAKgF,QACNhF,KAAKgF,OAAOw6B,UAAUx/B,KAAKmG,SAAUnG,KAAKmG,SAAU,CAAC,YACpDnG,KAAKmG,SAAS4nC,QAAUroC,EAAOS,SAAS4nC,SAAW,EAC7D,CAaAloC,QACG,MAAM2R,EAAM1X,MAAM+F,QAOlB,OALI7F,KAAKmG,SAASm9C,sBACXtjD,KAAKgF,OACNhF,KAAKgF,OAAO46B,YAAYpoB,EAAIrR,SAAUqR,EAAIrR,SAAU,CAAC,YACnDqR,EAAIrR,SAAS4nC,QAAU/tC,KAAKmG,SAAS4nC,SAEtCv2B,CACV,CAOIiuB,qBACD,OAA4C,GAArCzlC,KAAKmG,SAASm9C,mBACxB,CAQA5c,aAAahhC,GACqB,MAA3BA,EAAO1F,KAAK6G,cACuB,iBAAzB7G,KAAKmG,SAAS4nC,QACtBroC,EAAO1F,KAAK6G,YAAc7G,KAAKmG,SAAS4nC,QAExCroC,EAAO1F,KAAK6G,YAAc,GAGnC,CAUAspB,YAAYxmB,EAAMrC,GACfxH,MAAMqwB,YAAYxmB,EAAMrC,GAGrBqC,GACAA,EAAK3J,KAAK6G,aACV8C,EAAK3J,KAAK6G,YAAYX,OAxLP,KA0LfoB,EAAUmW,SACPzd,KAAK6G,WACL,4CAGT,oBCjMH,MAAM6xC,EAAU,EAAQ,OAElB6K,EAAwB,CAC3Bn/C,IAAK,SAGL85B,YAAa,2BAIb9yB,KAAM,UAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,SAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CACnB,UACA,WACA,YACA,MACA,UACA,SACA,UACA,MACA,UACA,QACA,QACA,SAOAzS,EAAgB,CAEnBsH,QAAS,GACTyV,WAAY,OACZC,aAAc,OACdC,kBAAmB,EACnBC,aAAc,OACdC,cAAe,OACfC,WAAY,EACZC,gBAAiB,GACjBC,gBAAiB,IAGpB,IAAIhkD,EAAI,KAERR,EAAOC,QAAU,cAAgCk5C,EAC9C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQu+C,GAkBjBxjD,IACFA,EAAIC,KAAK8B,GAAG7B,QAElB,CAGA2qB,kBACG,OAAO24B,CACV,CAEA34B,uBACG,OAAO6b,CACV,CAEA7b,kBAAkBo5B,GAEf,OADIA,IAAOjkD,IAAGA,EAAIikD,GACX,CACJ,CAAEnlD,GAAI,OAAQ6D,MAAO3C,EAAE,SACvB,CACGlB,GAAI,SACJ6D,MAAO3C,EAAE,KACTy5C,KAAM,IACN74C,SAAU,UAEb,CACG9B,GAAI,MACJ6D,MAAO3C,EAAE,KACTy5C,KAAM,IACN74C,SAAU,UAEb,CACG9B,GAAI,QACJ6D,MAAO3C,EAAE,KACTy5C,KAAM,IACN74C,SAAU,UAEb,CACG9B,GAAI,aACJ6D,MAAO3C,EAAE,cACTy5C,KAAM,IACN74C,SAAU,UAEb,CACG9B,GAAI,YACJ6D,MAAO3C,EAAE,aACTy5C,KAAM,IACN74C,SAAU,WAEb,CACG9B,GAAI,UACJ6D,MAAO3C,EAAE,KACTy5C,KAAM,IACN74C,SAAU,WAGnB,CAEAiqB,uBACG,MAAO,CACJ,CAAE/rB,GAAI,OAAQ6D,MAAO3C,EAAE,SACvB,CACGlB,GAAI,QACJ6D,MAAO3C,EAAE,SACTy5C,KAAM,KAET,CACG36C,GAAI,SACJ6D,MAAO3C,EAAE,UACTy5C,KAAM,KAET,CACG36C,GAAI,QACJ6D,MAAO3C,EAAE,SACTy5C,KAAM,KAGf,CAMAxzC,WAAWN,GACR5F,MAAMkG,WAAWN,GAIjB1F,KAAKmG,SAAS09C,WAAan+B,SAAS1lB,KAAKmG,SAAS09C,WACrD,CAYAnd,aAAahhC,GAEmB,IAAzB1F,KAAKmG,SAAS4nC,UACfroC,EAAO1F,KAAK6G,YAAc7G,KAAKmG,SAAS4nC,QAE9C,CAUA5d,YAAYxmB,EAAMrC,GAKf,GAJAxH,MAAMqwB,YAAYxmB,EAAMrC,GAIK,MAAzBqC,EAAK3J,KAAK6G,aAAgD,IAAzB8C,EAAK3J,KAAK6G,YAAmB,CAC/D,IAAInE,EAAQiH,EAAK3J,KAAK6G,YAGtB,GAAkC,QAA9B7G,KAAKmG,SAASs9C,aACf/gD,EAAQgjB,SAAShjB,OACb,CACJ,MAAMuhD,EAASv+B,SAAS1lB,KAAKmG,SAASu9C,oBAAsB,EAC5DhhD,EAAQw4C,WAAWA,WAAWx4C,GAAOo5C,QAAQmI,GAChD,CAUA,GARmBC,EAGJxhD,GAFJotC,OAAO3B,MAAM+M,WAAWgJ,KAAOpU,OAAOwO,SAAS4F,IAGvD58C,EAAUmW,SAASzd,KAAK6G,WAAY9G,EAAE,mBAKV,GAA5BC,KAAKmG,SAAS09C,YACmB,MAAjC7jD,KAAKmG,SAAS29C,iBACd9jD,KAAKmG,SAAS29C,gBAAkBphD,EACjC,CACC,MAAMyhD,EAAapkD,EAAE,6BAA8B,CAChDC,KAAKmG,SAAS29C,kBAGjBx8C,EAAUmW,SAASzd,KAAK6G,WAAYs9C,EACvC,CAGA,GAC+B,GAA5BnkD,KAAKmG,SAAS09C,YACmB,MAAjC7jD,KAAKmG,SAAS49C,iBACd/jD,KAAKmG,SAAS49C,gBAAkBrhD,EACjC,CACC,MAAMyhD,EAAapkD,EAAE,0BAA2B,CAC7CC,KAAKmG,SAAS49C,kBAGjBz8C,EAAUmW,SAASzd,KAAK6G,WAAYs9C,EACvC,CACH,CAhCqB,IAACD,CAiCzB,CAEA1jC,OAAOyN,GACJ,GAC0B,MAA9BA,IAAUjuB,KAAK6G,aACqB,GAA5BonB,EAAQjuB,KAAK6G,aAAgD,IAA5BonB,EAAQjuB,KAAK6G,YAE/C,MAAO,GAEV,IAAI8C,EAAOskB,EAAQjuB,KAAK6G,aAAe,EAEpB,iBAAR8C,IACRA,EAAOA,EAAKkJ,QAAQ,KAAM,KAIzBs7B,MAAM+M,WAAWvxC,MAAQA,EAAO,GAEpC,MAAMy6C,EAAapkD,KAAKL,YACpB0kD,aACAz7C,QAAQoF,GAASA,EAAKnP,IAAMmB,KAAKmG,SAASq9C,aAAY,GACpDlI,EACgC,QAAnCt7C,KAAKmG,SAASu9C,kBACTh+B,SAAS1lB,KAAKmG,SAASu9C,mBACvB,EAER,IAAIY,EAAgBtkD,KAAKL,YACrB45C,gBACA3wC,QAAQoF,GAASA,EAAKnP,IAAMmB,KAAKmG,SAASy9C,gBAAe,GACzDvI,EAAcr7C,KAAKL,YACnB45C,gBACA3wC,QAAQoF,GAASA,EAAKnP,IAAMmB,KAAKmG,SAASs9C,eAAc,GACxD5oC,EAAS,GACT0pC,EAAU,GAEd,GAAIH,GAAcA,EAAW5K,KAC1B,OAAQ4K,EAAWzjD,UAChB,IAAK,SACFka,EAASupC,EAAW5K,KACpB,MACH,IAAK,UACF+K,EAAUH,EAAW5K,KAS9B,GAJA6B,EAAcA,EAAY7B,MAAQ,GAClC8K,EAAgBA,EAAc9K,MAAQ,GAGJ,aAA9Bx5C,KAAKmG,SAASw9C,aAA6B,CAC5C,MAAMa,EAAQl+C,KAAKy7C,IAAI,GAAIzG,GAC3B3xC,EAAOrD,KAAKC,MAAMoD,EAAO66C,GAASA,CACrC,CASA,MAAO,GAAG3pC,KAPK7a,KAAKykD,aAAa96C,EAAM,CACpC+6C,eAAgBJ,EAChBK,UAAW,EACXC,iBAAkBvJ,EAClBuG,YAAatG,OAGciJ,GACjC,CAEAE,aAAa96C,EAAMzH,EAAU,CAAC,GAC3B,GAAa,KAATyH,GAAuB,MAARA,EAAc,OAAOA,EAGxC,MAAMk7C,GADNl7C,EAAOuxC,WAAWvxC,IACU,EAAI,IAAM,GAGhCm7C,GAFNn7C,EAAOrD,KAAKy+C,IAAIp7C,IAEK0K,WACf2wC,EAAaF,EAAQt8B,MAAM,KAAK,GAChCy8B,EAAaH,EAAQt8B,MAAM,KAAK,GAEtC,IAAI08B,EAAe,GAGnB,GAAIhjD,EAAQwiD,eAAgB,CACzB,MAAMhmB,EAAO,EACb,IAAIxrB,EAAI8xC,EAAW9+C,OAEnB,GACGgN,GAAKwrB,EAKLwmB,EAAe,GAHZhyC,EAAI,EACC8xC,EAAWG,OAAOjyC,EAAGwrB,GACrBsmB,EAAWG,OAAO,EAAGzmB,EAAOxrB,KAEjCgyC,EAAehjD,EAAQwiD,eAAiBQ,EAAe,WAEpDhyC,EAAI,EAChB,MACGgyC,EAAeF,EAGlB,IAAIr3C,EAAS,GAgBb,OAZGA,EADCzL,EAAQ0iD,kBAAoB1iD,EAAQ0/C,YAC5B,GAAGiD,IAAeK,IACxBD,EACK/iD,EAAQ0iD,iBACRK,EAAW5wC,WAAW8wC,OAAO,EAAGjjD,EAAQ0/C,aACxC,KAKC,GAAGiD,IAAeK,IAGvBv3C,CACV,CAEAk0C,iBACG,MAAuC,QAAnC7hD,KAAKmG,SAASu9C,kBACRh+B,SAAS1lB,KAAKmG,SAASu9C,mBAEvB,CAEb,mBCrYH,MAAMhL,EAAU,EAAQ,OAIlB0M,EAAwB,CAC3BhhD,IAAK,SAGL85B,YAAa,qBAIb9yB,KAAM,OAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,mBAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1CmK,gBAtDqB,KA2DlB5c,EAAgB,CACnBsH,QAAS,GACTuV,oBAAqB,GAGxB/jD,EAAOC,QAAU,cAAgCk5C,EAC9C/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQogD,EAUzB,CAGAx6B,kBACG,OAAOw6B,CACV,CAEAx6B,uBACG,OAAO6b,CACV,CAYAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAAS4nC,QAAUroC,EAAOS,SAAS4nC,SAAWtH,EAAcsH,QACjE/tC,KAAKmG,SAASm9C,oBACX59C,EAAOS,SAASm9C,oBAAsB,IACtC7c,EAAc6c,oBAGjBtjD,KAAKmG,SAASm9C,oBAAsB59B,SACjC1lB,KAAKmG,SAASm9C,qBAGbtjD,KAAKmG,SAASm9C,oBACftjD,KAAKw/B,UAAUx/B,KAAKmG,SAAUnG,KAAKmG,SAAU,CAAC,YAC1CnG,KAAKmG,SAAS4nC,QAAUroC,EAAOS,SAAS4nC,SAAW,EAC7D,CAaAloC,QACG,MAAM2R,EAAM1X,MAAM+F,QAMlB,OAJI7F,KAAKmG,SAASm9C,oBACftjD,KAAK4/B,YAAYpoB,EAAIrR,SAAUqR,EAAIrR,SAAU,CAAC,YAC1CqR,EAAIrR,SAAS4nC,QAAU/tC,KAAKmG,SAAS4nC,QAErCv2B,CACV,CAYAkvB,aAAahhC,GAELA,EAAO1F,KAAK6G,aAEV7G,KAAKmG,SAAS4nC,UACX/tC,KAAKmG,SAAS4nC,QAAQ7gC,QAAQ,WAAa,EAC5CxH,EAAO1F,KAAK6G,YAAc7G,KAAK8B,GAAG0N,OAElC9J,EAAO1F,KAAK6G,YAAc7G,KAAKmG,SAAS4nC,QAIpD,CAUA5d,YAAYxmB,EAAMrC,GACfxH,MAAMqwB,YAAYxmB,EAAMrC,GAExB,MAAMvH,EAAIC,KAAK8B,GAAG7B,QAGf0J,GACAA,EAAK3J,KAAK6G,aACV8C,EAAK3J,KAAK6G,YAAYX,OAjLP,KAmLfoB,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,2CAA4C,CArLlC,MAwLrB,CAOI0lC,qBACD,OAA4C,GAArCzlC,KAAKmG,SAASm9C,mBACxB,kECnMH,MAAM5K,QAAU,oBAAQ,OAExB,SAAS34C,EAAEqE,EAAKsO,GAEb,OAAOA,CACV,CAEA,MAAM2yC,2BAA6B,CAChCjhD,IAAK,cAGL85B,YAAa,eAIb9yB,KAAM,WAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,eAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAO1CzS,cAAgB,CACnB6e,YAAa,IAoBhB,SAASC,kBAAkBvgD,OAAQwgD,cAAev3B,SAC/C,IAAKu3B,cAAe,OAEpB,MAAMC,YAAc,aACdC,oBAAsBF,cAActtC,MAAMutC,aA8BhD,OA7BAC,oBAAoB1hD,SAASg4B,UAC1B,MAAMn1B,WAAam1B,QAAQnpB,QAAQ,SAAU,IAC7C7N,OAAO8B,SAAS9C,SAAS2B,QACtB,GAAIA,MAAMkB,YAAcA,WACrB,GAAiB,aAAblB,MAAMvB,IAAoB,CAE3B,MAAMuhD,EAAehgD,MAAM6a,OAAOyN,UAAY,EAC9Cu3B,cAAgBA,cAAc3yC,QAAQmpB,QAAS2pB,EAClD,MAAO,GAAiB,aAAbhgD,MAAMvB,IAAoB,CAElC,MAAMs3C,OAAS,IAAI/1C,MAAM6a,OAAOyN,UAAY,KAC5Cu3B,cAAgBA,cAAc3yC,QAAQmpB,QAAS6f,KAAKH,QACvD,MACG8J,cADqB,QAAb7/C,MAAMvB,IACEohD,cAAc3yC,QAC3BmpB,QACA/N,QAAQpnB,YACHlB,MAAMm5C,YAAY7wB,QAAQpnB,aAC1B,IAGQ2+C,cAAc3yC,QAC3BmpB,QACA/N,QAAQpnB,YAAclB,MAAM6a,OAAOyN,SAAW,GAGvD,GACD,IAGEu3B,aACV,CASA,SAASI,yBAAyB9jD,EAAI0jD,GACnC,MACMK,EAAwBL,EAActtC,MADtB,gBAEtB,GAAI2tC,EAAuB,CACxB,MAAMC,EAAcC,qBACpBF,EAAsB7hD,SAASg4B,IAC5B,MAAMgqB,EAAgBhqB,EAAQxT,MAAM,SAC9By9B,EACHD,EAAc9/C,OAAS,GAAyB,IAApB8/C,EAAc,GACvCE,EAAeF,EAAc,GAC7BG,EAAmBH,EAAc,GAAGx9B,MAAM,KAChD,IAAI49B,GAAU,EACd,IAAK,IAAIlzC,EAAI,EAAGA,EAAI4yC,EAAY5/C,OAAQgN,IAAK,CAC1C,IAAImzC,EAAmBrqB,EACvB,GAAIkqB,GAAgBJ,EAAY5yC,GAAGrU,GAAI,CACpC,GAAIsnD,EAAiBjgD,QAAU4/C,EAAY5yC,GAAGozC,eAAgB,CAC3D,OAAQJ,GACL,IAAK,OACFG,EAAmBE,QAChBJ,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,QACFE,EAAmBG,SAChBL,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,MACFE,EAAmBI,OAChBN,EAAiB,GACjBA,EAAiB,GACjBA,EAAiB,IAEpB,MACH,IAAK,OACFE,EAAmBK,QAAQP,EAAiB,IAC5C,MACH,IAAK,WACFE,EAAmBM,YAAYR,EAAiB,IAChD,MACH,IAAK,YACFE,EAAmBO,aAAaT,EAAiB,IACjD,MACH,IAAK,SACFE,EAAmBQ,UAAUV,EAAiB,IAC9C,MACH,IAAK,eACFE,EAAmBS,iBAChBX,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,eACFV,EAAmBW,gBAChBb,EAAiB,GACjBA,EAAiB,GAAGY,YAEvB,MACH,IAAK,UACFV,EAAmBY,WAChBd,EAAiB,GACjBA,EAAiB,GAAGY,WACpBZ,EAAiB,GAAGY,YAEvB,MACH,IAAK,QACFV,EAAmBa,SAASf,EAAiB,IAC7C,MACH,IAAK,QACFE,EAAmBc,SAAShB,EAAiB,IAC7C,MACH,IAAK,aACFE,EAAmBe,cAAcjB,EAAiB,IAClD,MACH,IAAK,SACFE,EAAmBgB,UAAUlB,EAAiB,IAC9C,MACH,IAAK,gBACFE,EAAmBiB,iBAChBnB,EAAiB,IAEpB,MACH,IAAK,uBACEF,IACDjqB,GAAoB,KAEvBqqB,EAAmBkB,qBAChBzlD,EACAqkD,EAAiB,IAEpB,MACH,IAAK,yBACEF,IACDjqB,GAAoB,KAEvBqqB,EAAmBmB,uBAChB1lD,EACAqkD,EAAiB,IAEpB,MACH,IAAK,aACFE,EAAmBoB,cAChBtB,EAAiB,GACjBA,EAAiB,GAAGY,YAW7B,OALAX,GAAU,OACVZ,EAAgBA,EAAc3yC,QAC3BmpB,EACAqqB,GAGN,CACGA,EAAmBH,EAAe,kBAClCV,EAAgBA,EAAc3yC,QAC3BmpB,EACAqqB,EAGT,CACH,IAEN,CACA,OAAOb,CACV,CAEA,SAASO,qBA0GN,MAzGqB,CAClB,CACGlnD,GAAI,OACJ6D,MAAO,yBACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,QACJ6D,MAAO,0BACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,MACJ6D,MAAO,2BACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,OACJ6D,MAAO,sBACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,WACJ6D,MAAO,0BACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,YACJ6D,MAAO,2BACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,SACJ6D,MAAO,wBACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,eACJ6D,MAAO,kDACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,eACJ6D,MAAO,mCACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,UACJ6D,MAAO,sDACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,QACJ6D,MAAO,uBACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,QACJ6D,MAAO,uBACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,aACJ6D,MAAO,4BACPf,KAAM,WACN2kD,eAAgB,GAEnB,CAAEznD,GAAI,SAAU6D,MAAO,YAAaf,KAAM,WAAY2kD,eAAgB,GACtE,CACGznD,GAAI,gBACJ6D,MAAO,2CACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,uBACJ6D,MAAO,sCACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,yBACJ6D,MAAO,wCACPf,KAAM,WACN2kD,eAAgB,GAEnB,CACGznD,GAAI,aACJ6D,MAAO,2CACPf,KAAM,WACN2kD,eAAgB,GAIzB,CAEA,SAASC,QAAQmB,EAAQC,GACtB,OAAOD,EAAOvuB,UAAU,EAAGzT,SAASiiC,GACvC,CAEA,SAASnB,SAASkB,EAAQE,GACvB,MAAMC,EAAaC,cAAcJ,GAAQvuB,UAAU,EAAGzT,SAASkiC,IAC/D,OAAOE,cAAcD,EACxB,CAEA,SAASC,cAAcJ,GACpB,OAAOA,EAAOl/B,MAAM,KAAKu/B,UAAU75C,KAAK,IAC3C,CAEA,SAASu4C,OAAOiB,EAAQM,EAAe9hD,GACpC,OAAIwhD,EAAOxhD,OAAS8hD,EAAsB,qBACnCN,EAAOvuB,UACXzT,SAASsiC,GACTtiC,SAASsiC,GAAiBtiC,SAASxf,GAEzC,CAEA,SAASwgD,QAAQgB,GACd,OAAOA,EAAOngB,MACjB,CAEA,SAASof,YAAYe,GAClB,OAAOA,EAAOX,UACjB,CAEA,SAASH,aAAac,GACnB,OAAOA,EAAOO,WACjB,CAEA,SAASpB,UAAUa,GAChB,OAAOA,EAAOxhD,MACjB,CAEA,SAAS4gD,iBAAiBY,EAAQQ,EAAQC,GACvC,OAAOT,EAAO70C,QAAQq1C,EAAQC,EACjC,CAEA,SAASnB,gBAAgBU,EAAQQ,GAC9B,MAAME,EAAgBV,EAAOxvC,MAAMgwC,GACnC,OAAIl7C,MAAMC,QAAQm7C,GACRA,EAAc,GAEjBA,CACV,CAEA,SAASnB,WAAWS,EAAQW,EAAaC,GACtC,OAAOZ,EAAO70C,QAAQw1C,EAAaC,EACtC,CAEA,SAASpB,SAASQ,GACf,OAAOA,EAAOrvC,aACjB,CAEA,SAAS8uC,SAASO,GACf,OAAOA,EAAOa,aACjB,CAEA,SAASnB,cAAcM,GACpB,OAAOA,EACHrvC,cACAmQ,MAAM,KACN9pB,KAAK+N,GAAMA,EAAE+7C,OAAO,GAAGD,cAAgB97C,EAAE0sB,UAAU,KACnDjrB,KAAK,IACZ,CAEA,SAASm5C,UAAUpF,GAChB,OAAO37C,KAAKC,MAAMD,KAAKE,UAAYy7C,EAAM,GAC5C,CAEA,SAASqF,iBAAiBtmC,GACvB,MAAM0mC,EAAS1mC,EAAOumB,KAAK,KAAKlzB,WAEhC,IAAIo0C,EACDC,EACAC,EACA91B,EACA+1B,EACAC,EACAC,EACAC,EACAC,EACA91C,EACA+1C,EACAC,EAKH,GAAyB,IAArBxjC,SAASgiC,GACV,MAAO,OAuEV,IAnEAe,EAAQ,CACL,GACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,UACA,UACA,YACA,WACA,YAIHC,EAAO,CACJ,GACA,GACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,UAIHC,EAAS,CACN,GACA,WACA,UACA,UACA,WACA,cACA,cACA,aACA,aACA,YACA,YACA,YACA,cACA,eACA,eACA,sBACA,gBACA,eACA,mBACA,gBACA,iBACA,eACA,cAIH91B,EAAQ60B,EAAOxhD,OACf2iD,EAAS,GACFh2B,EAAQ,GACZ+1B,EAAM/1B,EACNg2B,EAAOxkD,KAAKqjD,EAAO30C,MAAO8f,EAAQvsB,KAAK27C,IAAI,EAAGpvB,EAAQ,GAAK+1B,IAK9D,GADAE,EAAYD,EAAO3iD,OACf4iD,EAAYH,EAAOziD,OACpB,MAAO,GAKV,IADAgjD,EAAQ,GACHh2C,EAAI,EAAGA,EAAI41C,EAAW51C,IACxB61C,EAAQrjC,SAASmjC,EAAO31C,IAEpB61C,IAEDC,EAAOH,EAAO31C,GAAGsV,MAAM,IAAIu/B,UAAUrpD,IAAIw8C,YAGzB,IAAZ8N,EAAK,KACNA,EAAK,IAAM,KAITC,EAAON,EAAOz1C,KAChBg2C,EAAM7kD,KAAK4kD,IAITA,EAAOR,EAAMO,EAAK,MACpBE,EAAM7kD,KAAK4kD,IAITA,EAAOP,EAAKM,EAAK,MACnBE,EAAM7kD,KAAK4kD,IAIVD,EAAK,IAAMA,EAAK,MAEbA,EAAK,KAAQ91C,GAAK41C,IACnBI,EAAM7kD,KAvHN,KA4HD4kD,EAAOR,EAAMO,EAAK,MACpBE,EAAM7kD,KAAK4kD,EAAO,aAK3B,OAAOC,EAAMnB,UAAU75C,KAAK,IAC/B,CAEA,SAASq5C,qBAAqBzlD,EAAI6e,GAK/B,OAAO7e,EAAGuf,MAAMX,aAAaC,EAAM,CAChCH,OAAQ,OACRK,WAAY/e,EAAG2Q,QAAQ5C,YAE7B,CAEA,SAAS23C,uBAAuB1lD,EAAI6e,GAKjC,OAAO7e,EAAGuf,MAAMX,aAAaC,EAAM,CAChCH,OAAQ,OACRK,WAAY/e,EAAG2Q,QAAQ5C,YAE7B,CAEA,SAAS43C,cAAc9mC,EAAMH,GAE1B,OADW,IAAIC,KAAKE,GACVtM,SAASmM,EACtB,CAEAjhB,OAAOC,QAAU,cAAqCk5C,QACnD/4C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQqgD,2BAazB,CAGAz6B,kBACG,OAAOy6B,0BACV,CAEAz6B,uBACG,OAAO6b,aACV,CAEA7b,4BACG,OAAOm7B,oBACV,CAYArf,aAAahhC,GAELA,EAAO1F,KAAK6G,WAIpB,CAUAspB,YAAYxmB,EAAMrC,GAKf,OAJYxH,MAAMwF,SAKrB,CAOImgC,qBAED,OAAO,CACV,CAEAjlB,OAAOyN,GACJ,IACG,IAAKjuB,KAAKmG,SAASm/C,YAAa,MAAO,GAEvC,IAAI6D,EAAgBnpD,KAAKmG,SAASm/C,YAQlC,OALA6D,EAAgB5D,kBAAkBvlD,KAAKgF,OAAQmkD,EAAel7B,GAG9Dk7B,EAAgBvD,yBAAyB5lD,KAAK8B,GAAIqnD,GAE3CA,CAGV,CAFE,MAAOjhD,GACN,MAAO,EACV,CACH,mBClsBH,MAAMkhD,EAAqB,EAAQ,OAO7BC,EAAsB,CACzBjlD,IAAK,OAGL85B,YACG,2GAIH9yB,KAAM,UAINwtC,cAAc,EAOdC,YAAY,EAMZ30C,SAAU,YAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,aAAc,aAM1CzS,EAAgB,CACnBvkC,QAAS,IAGZ3C,EAAOC,QAAU,cAA8B4pD,EAC5CzpD,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQqkD,EACzB,CAGAz+B,kBACG,OAAOy+B,CACV,CAEAz+B,uBACG,OAAO6b,CACV,CAYAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGb1F,KAAKmG,SAASjE,SAAWlC,KAAKmG,SAASjE,QAAQgE,OAAS,GACzDlG,KAAKmG,SAASjE,QAAQ8B,SAASwtC,IAC5BxxC,KAAKw/B,UAAUgS,EAAKA,EAAK,CAAC,QAAQ,GAG3C,CAaA3rC,QACG,MAAM2R,EAAM1X,MAAM+F,QASlB,OANI2R,EAAIrR,SAASjE,SAAWsV,EAAIrR,SAASjE,QAAQgE,OAAS,GACvDsR,EAAIrR,SAASjE,QAAQ8B,SAASwtC,IAC3BxxC,KAAK4/B,YAAY4R,EAAKA,EAAK,CAAC,QAAQ,IAInCh6B,CACV,CAYAkvB,aAAahhC,GAAS,CAUtByqB,YAAYxmB,EAAMrC,GACfxH,MAAMqwB,YAAYxmB,EAAMrC,EAC3B,oBClJH,MAAMgiD,EAAiB,EAAQ,OAOzBC,EAAsB,CACzBnlD,IAAK,OAGL85B,YAAa,yBAIb9yB,KAAM,SAINwtC,cAAc,EAOdC,WAAalzC,IACNA,EAAMQ,SAAS08C,WAWtB3+C,SAAU,OAIV40C,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAKZC,mBAAoB,CAAC,UAKrBC,qBAAsB,CAAC,OAAQ,UAAW,YAK1CsQ,kBAAmB,wCAMhB/iB,EAAgB,CACnBgjB,SAAU,EACV5G,WAAY,EACZ6G,cAAe,EACfC,mBAAoB,EACpBC,eAAgB,GAGnBrqD,EAAOC,QAAU,cAA8B8pD,EAC5C3pD,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAAQukD,EACzB,CAGA3+B,kBACG,OAAO2+B,CACV,CAEA3+B,uBACG,OAAO6b,CACV,CAMAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAASsjD,SAAW/jC,SAAS1lB,KAAKmG,SAASsjD,UAChDzpD,KAAKmG,SAAS08C,WAAan9B,SAAS1lB,KAAKmG,SAAS08C,YAClD7iD,KAAKmG,SAASujD,cAAgBhkC,SAAS1lB,KAAKmG,SAASujD,eACrD1pD,KAAKmG,SAASwjD,mBAAqBjkC,SAChC1lB,KAAKmG,SAASwjD,oBAEjB3pD,KAAKmG,SAASyjD,eAAiBlkC,SAAS1lB,KAAKmG,SAASyjD,eACzD,CAMAppC,OAAOyN,GACJ,IAAItY,EAAM3V,KAAKw8C,UAAUvuB,IAAY,GAKrC,OAHItY,IAAQ3I,MAAMC,QAAQ0I,KAAMA,EAAM,CAACA,IAClCA,IAAKA,EAAM,IAETA,EAAIjX,KAAKuU,GAAMA,EAAE1C,UAAY0C,IAAG/E,KAAK,KAC/C,oBCzHH,MAAM2pB,EAAuB,EAAQ,OAE/BgyB,EAAwB,CAC3BloD,KAAM,gBASTpC,EAAOC,QAAU,cAAgCq4B,EAC9Cl4B,YAAYsjB,EAAYuE,EAAS1lB,GAC9BhC,MAAMmjB,EAAYuE,EAAS1lB,EAK9B,CAEA8oB,kBACG,OAAOi/B,CACV,CAEA7jD,WAAWid,GASRnjB,MAAMkG,WAAWid,GAEjBjjB,KAAK2B,KAAOshB,EAAWthB,MAAQkoD,EAAsBloD,IACxD,oBCrCH,MAAMqhB,EAAY,EAAQ,OAEpB8mC,EAA+B,CAClCnoD,KAAM,uBAOTpC,EAAOC,QAAU,cAAuCwjB,EACrDrjB,YAAYsjB,EAAYuE,EAAS1lB,GAC9BhC,MAAM,CAAC,SAAUgC,GAEjB9B,KAAKwnB,QAAUA,EACVxnB,KAAKilB,YACPjlB,KAAKilB,UAAYuC,EAAQ3oB,IAG5BmB,KAAKgG,WAAWid,EAKnB,CAEA2H,kBACG,OAAOk/B,CACV,CAEA9jD,WAAWid,GAwBR,SAAS8mC,EAAaC,GACnB,YAA2B,IAAbA,GAAyC,MAAbA,CAC7C,CAhBAhqD,KAAKnB,GAAKokB,EAAWpkB,GACrBmB,KAAKkH,KAAO+b,EAAW/b,MAAQ,GAC/BlH,KAAK2B,KAAOshB,EAAWthB,MAAQmoD,EAA6BnoD,KAC5D3B,KAAKoE,IAAM6e,EAAW7e,KAAO0lD,EAA6BnoD,KAG1D3B,KAAKilB,UAAYhC,EAAWgC,WAAa,KACzCjlB,KAAK8qC,UAAY7nB,EAAW6nB,WAAa,cACzC9qC,KAAKiqD,QAAUhnC,EAAWgnC,SAAW,GACrCjqD,KAAKkqD,SAAU,EACXjnC,EAAWinC,SAAiC,IAAtBjnC,EAAWinC,UAClClqD,KAAKkqD,QAAUjnC,EAAWinC,SAO7BlqD,KAAK2lB,QAAU,EACXokC,EAAa9mC,EAAW0C,WACzB3lB,KAAK2lB,QAAUD,SAASzC,EAAW0C,UAGtC3lB,KAAK4lB,KAAO,EACRmkC,EAAa9mC,EAAW2C,QACzB5lB,KAAK4lB,KAAO3C,EAAW2C,MAG1B5lB,KAAKmqD,WAAa,EACdJ,EAAa9mC,EAAWknC,cACzBnqD,KAAKmqD,WAAazkC,SAASzC,EAAWknC,aAGzCnqD,KAAKoqD,QAAU,EACXL,EAAa9mC,EAAWmnC,WACzBpqD,KAAKoqD,QAAUnnC,EAAWmnC,SAG7BpqD,KAAKqqD,SAAW,EACZN,EAAa9mC,EAAWonC,YACzBrqD,KAAKqqD,SAAW3kC,SAASzC,EAAWonC,WAGvCrqD,KAAKsqD,UAAY,GACbP,EAAa9mC,EAAWqnC,aACzBtqD,KAAKsqD,UAAYrnC,EAAWqnC,WAI/BtqD,KAAK8G,OAAS,GACVijD,EAAa9mC,EAAWnc,UACzB9G,KAAK8G,OAASmc,EAAWnc,QAG5BhH,MAAMkG,WAAWid,GAGZjjB,KAAKmB,QACPnB,KAAKmB,MAAQnB,KAAKkH,KAExB,CAaArB,SAEQ7F,KAAKmB,OAASnB,KAAKkH,MAAqB,IAAblH,KAAKkH,OAClClH,KAAKmB,MAAQnB,KAAKkH,MAIrB,IAAIyC,EAAO7J,MAAM+F,QAuBjB,MArBmB,CAChB,KACA,OACA,OACA,YACA,YACA,UACA,QACA,UACA,OACA,aACA,UACA,WACA,YACA,SACA,WAEU7B,SAAS+C,IACnB4C,EAAK5C,GAAK/G,KAAK+G,EAAE,IAGb4C,CACV,CAOA2gC,iBAAkB,oBClJrB,IAAIigB,EAAQ,CAAC,EAWTC,EAAkB,CAAC,EAEnBC,EAAqB,CACtB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,MACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAGXA,EAAmBzmD,SAAS0mD,IAGzB,OAFAH,EAAMG,EAAQvmD,WAAWC,KAAOsmD,EAExBA,EAAQvmD,WAAWwmD,UACxB,IAAK,QACL,IAAK,MACFH,EACGE,EAAQE,iBAAiBC,OAAOC,qBAC/BJ,EAAQvmD,WACZ,MAEH,IAAK,UACL,IAAK,OACFqmD,EACGE,EAAQE,iBAAiBC,OAAOlpD,MAC/B+oD,EAAQvmD,WAElB,IAGH5E,EAAOC,QAAU,CAMdurD,SAAU,WACP,IAAIC,EAAQ,GACZ,IAAK,IAAIjrB,KAAKwqB,EACXS,EAAM3mD,KAAKkmD,EAAMxqB,IAEpB,OAAOirB,CACV,EAOAlvB,QAAS,SAAUp2B,EAAQ8hB,EAAS1lB,GACjC,GAAI4D,EAAOtB,IACR,OAAO,IAAImmD,EAAM7kD,EAAOtB,KAAKsB,EAAQ8hB,EAAS1lB,EAIpD,EAEAmpD,iCAAkC,SAAUtpD,GAMzC,OALkB8oD,EAAmB7hD,QAAQ3J,GACnCA,EAAEkF,WAAWwmD,UAAYhpD,IAChCjD,KAAKO,GACEA,EAAE2rD,kBAGf,EAEAM,YAAa,WACV,OAAOlrD,KAAKirD,iCAAiC,QAChD,EAEAE,SAAU,WACP,OAAOnrD,KAAKirD,iCAAiC,UAChD,EAEAV,MAAO,WACJ,OAAOvqD,KAAKirD,iCAAiC,OAChD,EAEAG,UAAW,WACR,OAAOprD,KAAKirD,iCAAiC,MAChD,EAEA9uB,qBAAsB,SAAUH,GAG7B,IAAI53B,EAAM,KACV,GAAI43B,EAAQ6P,eAAewf,iBAAkB,CAC1C,IAAI1pC,EAAMqa,EAAQ6P,eAAewf,iBAAiB,GAC9C1pC,IACDvd,EAAMud,EAAI2pC,MAEhB,CAOA,OAJKlnD,IACFA,EAAM43B,EAAQr6B,MAGV6oD,EAAgBpmD,EAC1B,oBCvIH,IAAI4e,EAAY,EAAQ,OAExBzjB,EAAOC,QAAU,cAAgCwjB,EAC9CrjB,YAAYsjB,EAAYuE,EAAS1lB,EAAI2kC,GAClC3mC,MAAM,CAAC,SAAUgC,GAEjB9B,KAAKmE,SAAWsiC,GAAiB,CAAEriC,IAAK,OAAQgH,KAAM,QAKtDpL,KAAKgG,WAAWid,GAEhBjjB,KAAKwnB,QAAUA,EACVxnB,KAAKilB,YACPjlB,KAAKilB,UAAYuC,EAAQ3oB,IAQ5BmB,KAAKurD,MAAQ,IAChB,CAMAvlD,WAAWid,GAURjjB,KAAKnB,GAAKokB,EAAWpkB,GACrBmB,KAAKkH,KAAO+b,EAAW/b,MAAQ,GAC/BlH,KAAK2B,KAAOshB,EAAWthB,MAAQ,uBAG/B3B,KAAKoE,IAAM6e,EAAW7e,KAAOpE,KAAKmE,SAASC,KAAO,QAClDpE,KAAKilB,UAAYhC,EAAWgC,WAAa,KACzCjlB,KAAK8qC,UAAY7nB,EAAW6nB,WAAa,cACzC9qC,KAAKwrD,cAAgBvoC,EAAWuoC,eAAiB,WAU7CxrD,KAAKmE,UAAYnE,KAAKmE,SAASgC,UAChCnG,KAAKmE,SAASgC,SAASnC,SAASyI,SACD,IAAjBwW,EAAWxW,GAAmBzM,KAAKyM,GAAK,KAC9CzM,KAAKyM,GAAKwW,EAAWxW,EAAE,IAIlC3M,MAAMkG,WAAWid,GAGZjjB,KAAKmB,QACPnB,KAAKmB,MAAQnB,KAAKkH,KAExB,CAaArB,SAEQ7F,KAAKmB,OAASnB,KAAKkH,MAAqB,IAAblH,KAAKkH,OAClClH,KAAKmB,MAAQnB,KAAKkH,MAIrB,IAAIyC,EAAO7J,MAAM+F,QAsBjB,MApBmB,CAChB,KACA,OACA,OACA,YACA,YACA,gBACA,OAEU7B,SAAS+C,IACnB4C,EAAK5C,GAAK/G,KAAK+G,EAAE,IAIhB/G,KAAKmE,UAAYnE,KAAKmE,SAASgC,UAChCnG,KAAKmE,SAASgC,SAASnC,SAASyI,IAC7B9C,EAAK8C,GAAKzM,KAAKyM,EAAE,IAIhB9C,CACV,CAmBA8hD,YAAYC,EAAUzsC,EAAKnY,EAAS,IACjC9G,KAAK6W,IAAI60C,EAAUzsC,GACnB,IAAI9P,EAAQ,IAAIjQ,MAAM,GAAGc,KAAK2B,SAASsd,KACnC4C,EAAO,CAAEwrB,KAAMrtC,MAMnB,OALKgN,MAAMC,QAAQnG,KAASA,EAAS,CAACA,IACtCA,EAAO9C,SAAS2B,IACbkc,EAAKlc,GAAS3F,KAAK2F,EAAM,IAE5B3F,KAAK8B,GAAGqG,OAAO8uB,QAAQ9nB,EAAO0S,GACvBxS,QAAQgH,OAAOlH,EACzB,CAYAw8C,UAAUz8C,EAAS/K,EAAUwR,GAiB1B,GAhBAxR,EAAWA,GAAY,CAAC,EACnBwR,IACFA,EAAMxR,EACNA,EAAW,CAAC,EAGRnE,KAAKmE,UAAYnE,KAAKmE,SAASynD,gBAChC5rD,KAAKmE,SAASynD,eAAe5nD,SAASiP,IACnC9O,EAAS8O,GAAK,IAAI,KAK3B/D,EAAQ28C,UAAY38C,EAAQ28C,WAAa,CAAC,GAGrC38C,EAAQ28C,UAAU7rD,KAAK8qC,WAAY,CAKrC,IAAK,IAAIna,KAJTzhB,EAAQ28C,UAAU7rD,KAAK8qC,WAAa,CACjC5e,aAAa,EACbnV,OAAQ,eAEG5S,EACX+K,EAAQ28C,UAAU7rD,KAAK8qC,WAAWna,GAAKxsB,EAASwsB,GAEnD,IAAK,IAAI1d,KAAK0C,EACXzG,EAAQ28C,UAAU7rD,KAAK8qC,WAAW73B,GAAK0C,EAAI1C,EAEjD,CACH,CAOA64C,YACG,OAAO,CACV,CAQAj1C,IAAI60C,KAAaK,GACd,IAAI99C,EAAO,GAAGjO,KAAK8qC,eAChB9qC,KAAKkH,KAAOlH,KAAKkH,KAAOlH,KAAKoE,SAC1B2nD,EAAQ79C,KAAK,OACnBw9C,EAAS70C,IAAIxS,KAAK4J,EACrB,CAQA+9C,SACG,OAAOhsD,KAAKwnB,QAAQ4kB,oBAAoBpsC,KAAKwrD,cAChD,CAQAS,QAAQP,GACL,OAAOA,EAASx8C,QAAQ28C,UAAU7rD,KAAK8qC,UAC1C,CASAohB,UAAUR,GACP,IAAIQ,EAAY,GAEZC,EAAeT,EAASU,mBAAmBpsD,KAAK8qC,WACpD,IAAKqhB,EAAc,CAChB,IAAIh9C,EAAQ,IAAIjQ,MACb,2DAA2Dc,KAAK8qC,cAGnE,OADA9qC,KAAKqsD,QAAQX,EAAUv8C,GAChB,IACV,CAUA,IAAIm9C,EAAYH,EAAa,kBAC7B,IAAKG,EAMF,OALIn9C,EAAQ,IAAIjQ,MACb,gEAAgEc,KAAK8qC,cAExE9qC,KAAK8B,GAAGqG,OAAO8uB,QAAQ9nB,EAAO,CAAEk+B,KAAMrtC,OACtCA,KAAKqsD,QAAQX,EAAUv8C,GAChB,KAGLnC,MAAMC,QAAQq/C,KAChBA,EAAY,CAACA,IAGhB,IAAIC,EAAiBC,IAIlB,IAAIC,EAAUf,EAASU,mBAAmBI,EAAY,OACtD,GAAKC,EAAL,CAEA,IAAIC,EAAYD,EAAqB,YAAa,UAC7CC,IAEA1/C,MAAMC,QAAQy/C,KAChBA,EAAY,CAACA,IAGhBA,EAAU1oD,SAAS2oD,IAChB,IAAIC,EAAa5sD,KAAKwnB,QAAQ4kB,oBAAoBugB,GAClD,GAAIC,EACGV,GACDA,EAAU7nD,KAAKuoD,OAEd,CACJ,IAAIz9C,EAAQ,IAAIjQ,MACb,8DAA8DytD,MAEjE3sD,KAAK8B,GAAGqG,OAAO8uB,QAAQ9nB,EAAO,CAAEk+B,KAAMrtC,OACtCA,KAAKqsD,QAAQX,EAAUv8C,GACvB+8C,EAAY,IACf,KAtBiB,CAuBlB,EAOL,OAJAI,EAAUtoD,SAAS+C,IAChBwlD,EAAcxlD,EAAE,IAGZmlD,CACV,CAQAG,QAAQX,EAAUv8C,GACf,GAAIA,EAAO,CACR,IAAIlB,EAAO,GAAGkB,EAAMkF,aACpBrU,KAAK6W,IAAI60C,EAAUz9C,EACtB,CACcjO,KAAKisD,QAAQP,GACnB30C,OAAS,OACpB,CAUAg2B,oBACG,OAAO,IACV,CAQAJ,YAAY+e,EAAUtnD,GACnB,OAAO,IACV,CAQAmpC,qBACG,OAAO,IACV,CAQAsf,sBAAsBnB,GACnB,IAAIoB,EAAiB9sD,KAAKwnB,QAAQulB,kBAAkB/sC,MAChD+sD,EAAuB,CAAC,EAO5B,OANAD,EAAe9oD,SAAS+C,IACrBgmD,EAAqBhmD,EAAE3C,KAAOpE,KAAKwnB,QAAQmlB,YAAY3sC,KAAM,CAC1D0rD,EACA3kD,EAAE3C,KACH,IAEE2oD,CACV,CAWAvyC,MAAMkxC,GAEH,IAAIO,EAAUjsD,KAAKisD,QAAQP,GAItBO,EAKoB,aAAlBA,EAAQl1C,QAA2C,SAAlBk1C,EAAQl1C,gBAEnC20C,EAASx8C,QAAQ28C,UAAU7rD,KAAK8qC,WAGvC9qC,KAAK2rD,UAAUD,EAASx8C,SAGTlP,KAAKisD,QAAQP,GACnBsB,WAAaf,EACtBjsD,KAAK6W,IAAI60C,EAAU,qCAdtB1rD,KAAK2rD,UAAUD,EAASx8C,QAiB9B,CAOA+9C,eAAevB,GACE1rD,KAAKisD,QAAQP,GACnB30C,OAAS,WACpB,CAQAm2C,YAAYxB,EAAUhmD,GACnBA,EAASA,GAAU,CAAC,EACpB,IAAIumD,EAAUjsD,KAAKisD,QAAQP,GAC3B,IAAK,IAAIz4C,KAAKvN,EACXumD,EAAQh5C,GAAKvN,EAAOuN,EAE1B,CAQAk6C,kBAAkBzB,GACf,IAAIH,EAAQvrD,KAAKisD,QAAQP,GACzB,OAAIH,EACsB,aAAhBA,EAAMx0C,QAAyC,SAAhBw0C,EAAMx0C,QAG5CzO,QAAQC,KACL,4FACAmjD,GAGH1rD,KAAK2rD,UAAUD,EAASx8C,SACjBlP,KAAKmtD,kBAAkBzB,GAEpC,CAMAphB,iBAAkB,CAEd8iB,oBAMD,OAJGptD,KAAKwnB,QAAQxe,UACTE,GACEA,GAAQA,EAAK/E,UAAuC,UAA3B+E,EAAK/E,SAASwmD,YACxC,EAEX,CAEI0C,uBACD,OAAOrtD,KAAKwnB,QAAQklB,uBAAuB1sC,KAC9C,CAEIstD,2BACD,MAAMC,EAAYvtD,KAAKotD,cAAc,GACrC,OAAKG,EAEEvtD,KAAK8B,GAAG2V,WAAW81C,EAAU3wB,UAFb,IAG1B,CAEI4wB,0BACD,IAGI5wB,EAHA6wB,EAAWztD,KAAKqtD,iBAAiB,GACrC,OAAKI,GAKC7wB,EADE,+BADA6wB,EAAS9rD,KAEA8rD,EAASC,MAAQD,EAASC,MAAM9wB,SAAW,KAI3C6wB,EAAS7wB,SAInB58B,KAAK8B,GAAG2V,WAAWmlB,IAbJ,IAczB,oBC/eH,MAAM+wB,EAAmB,EAAQ,OAEjC,IAAIC,EAA2B,CAC5BjD,SAAU,MAQV7jD,OAAQ,GAIRsE,KAAM,OAKNhH,IAAK,OAKR7E,EAAOC,QAAU,cAAmCmuD,EACjDhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,mBACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI8rD,EAGlC,CAGAhjC,kBACG,OAAOgjC,CACV,CAEAhjC,wBACG,MAAO,CACJzpB,MAAO,sBACP0sD,WAAY,6BACZC,UAAW,gCACXjD,OAAQ,CACLlpD,KAAM,gBACNmpD,oBAAqB,iCAG9B,CA4BAa,UAAUz8C,EAASyG,GAKhB7V,MAAM6rD,UAAUz8C,EAJC,CACd6+C,WAAW,GAGuBp4C,EACxC,CAOAm2C,YACG,OAAO,CACV,CASAI,UAAUR,GAEP,MAAO,EACV,mBCvGH,MAAMiC,EAAmB,EAAQ,OAEjC,IAAIK,EAAoC,CACrCrD,SAAU,UAQVv/C,KAAM,eAKNwgD,eAAgB,GAIhBxnD,IAAK,mBAIL+B,SAAU,CAAC,eAMd5G,EAAOC,QAAU,cAA4CmuD,EAC1DhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,4BACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAIksD,EAGlC,CAGApjC,kBACG,OAAOojC,CACV,CAEApjC,wBACG,MAAO,CACJzpB,MAAO,oBACP0sD,WAAY,iCACZC,UAAW,wBACXjD,OAAQ,CACLlpD,KAAM,yBAGf,CAEAqE,WAAWid,GASRnjB,MAAMkG,WAAWid,GAEjBjjB,KAAKixC,WAAajxC,KAAKixC,YAAc,CAAC,CACzC,oBChEH,MAAM0c,EAAmB,EAAQ,OAEjC,IAAIM,EAA6B,CAC9BtD,SAAU,OAQV7jD,OAAQ,CACL,KACA,OACA,UACA,UACA,WACA,aACA,UACA,YACA,iBACA,oBAKHsE,KAAM,QAINhH,IAAK,SAKR7E,EAAOC,QAAU,cAAqCmuD,EACnDhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,qBACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAImsD,EAGlC,CAGArjC,kBACG,OAAOqjC,CACV,CAEArjC,wBACG,MAAO,CACJzpB,MAAO,YACP0sD,WAAY,yBACZC,UAAW,iBACXjD,OAAQ,CACLlpD,KAAM,iBAGf,CAEAqE,WAAWid,GASRnjB,MAAMkG,WAAWid,GAEjBgrC,EAA2BnnD,OAAO9C,SAAS+C,IACxC/G,KAAK+G,GAAKkc,EAAWlc,EAAE,GAE7B,CAkBAlB,QACG,IAAI8D,EAAO7J,MAAM+F,QAMjB,OAJAooD,EAA2BnnD,OAAO9C,SAAS+C,IACxC4C,EAAK5C,GAAK/G,KAAK+G,EAAE,IAGb4C,CACV,CA8BAgiD,UAAUz8C,EAASyG,GAChB,IAAIu4C,EAAa,CACd3iB,GAAI,GACJE,KAAM,GACN0iB,QAASnuD,KAAKmuD,QACdl9C,QAASjR,KAAKiR,SAGjBnR,MAAM6rD,UAAUz8C,EAASg/C,EAAYv4C,EACxC,oBC5IH,MAAMg4C,EAAmB,EAAQ,OAEjC,IAAIS,EAAoC,CACrCzD,SAAU,KAQVv/C,KAAM,eAINwgD,eAAgB,GAIhBxnD,IAAK,4BAIL+B,SAAU,CACP,cACA,oBACA,oBACA,4BACA,WACA,iBACA,YACA,gBACA,wBACA,WACA,yBACA,iBACA,YACA,mBAON5G,EAAOC,QAAU,cAA4CmuD,EAC1DhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,kDACtB7B,MAAMmjB,EAAYuE,EAAS1lB,EAAIssD,EAGlC,CAGAxjC,kBACG,OAAOwjC,CACV,CAEAxjC,wBACG,OAAO,IACV,oBC5DH,MAAM+iC,EAAmB,EAAQ,OAEjC,IAAIU,EAA4B,CAC7B1D,SAAU,KAQVv/C,KAAM,eAINwgD,eAAgB,GAIhBxnD,IAAK,oBAIL+B,SAAU,CACP,iBACA,WACA,WACA,YACA,eACA,cACA,gBACA,gBACA,kBACA,iBACA,iBACA,YACA,eACA,gBACA,eACA,gBACA,kBACA,sBACA,iBACA,mBAON5G,EAAOC,QAAU,cAAoCmuD,EAClDhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,0CACtB7B,MAAMmjB,EAAYuE,EAAS1lB,EAAIusD,EAGlC,CAGAzjC,kBACG,OAAOyjC,CACV,CAEAzjC,wBACG,OAAO,IACV,oBClEH,MAAM+iC,EAAmB,EAAQ,OAEjC,IAAIW,EAAgC,CACjC3D,SAAU,KAQVv/C,KAAM,eAINwgD,eAAgB,GAIhBxnD,IAAK,wBAIL+B,SAAU,CACP,qBACA,eACA,gBACA,WACA,gBACA,oBACA,iBACA,mBACA,iBACA,oBACA,oBACA,oBACA,kBACA,sBACA,wBACA,YACA,iBACA,eACA,qBACA,sBACA,uBAON5G,EAAOC,QAAU,cAAwCmuD,EACtDhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,8CACtB7B,MAAMmjB,EAAYuE,EAAS1lB,EAAIwsD,EAGlC,CAGA1jC,kBACG,OAAO0jC,CACV,CAEA1jC,wBACG,OAAO,IACV,kBCnEH,MAAM+iC,EAAmB,EAAQ,OAEjC,IAAIY,EAA8B,CAC/B5D,SAAU,KAQVv/C,KAAM,UAINwgD,eAAgB,GAIhBxnD,IAAK,sBAIL+B,SAAU,CACP,oBACA,cACA,gBACA,WACA,kBAEA,wBACA,iBACA,YACA,wBACA,qBACA,iBACA,YACA,gBAON5G,EAAOC,QAAU,cAAsCmuD,EACpDhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,4CACtB7B,MAAMmjB,EAAYuE,EAAS1lB,EAAIysD,EAGlC,CAGA3jC,kBACG,OAAO2jC,CACV,CAEA3jC,wBACG,OAAO,IACV,mBC5DH,MAAM+iC,EAAmB,EAAQ,OAEjC,IAAIa,EAAoB,CACrB7D,SAAU,KAQVv/C,KAAM,aAINwgD,eAAgB,GAIhBxnD,IAAK,YAIL+B,SAAU,CAAC,gBAGd5G,EAAOC,QAAU,cAAgCmuD,EAC9ChuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,iCACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI0sD,EAGlC,CAGA5jC,kBACG,OAAO4jC,CACV,CAEA5jC,wBACG,OAAO,IACV,CAUAmiB,oBACG,MAAM5rC,EAAQ,GAAGnB,KAAKmB,eAWtB,OAPKnB,KAAKyuD,WACPzuD,KAAK0uD,SAAW1uD,KAAK8B,GAAG04B,UAAU,CAAC,GACnCx6B,KAAKyuD,SAAWzuD,KAAK8B,GAAGmE,SACrB,CAAE7B,IAAK,SAAU8C,KAAM/F,EAAOA,SAC9BnB,KAAK0uD,WAGJ,CACJtqD,IAAK,GAAGpE,KAAKnB,WACbsC,QACAwE,MAAO3F,KAAKyuD,SAElB,oBCzDH,MAAMd,EAAmB,EAAQ,OAEjC,IAAIgB,EAA+B,CAChChE,SAAU,OAQVv/C,KAAM,eAINwgD,eAAgB,GAIhBxnD,IAAK,cAIL+B,SAAU,IAMb5G,EAAOC,QAAU,cAAuCmuD,EACrDhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,uBACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI6sD,EAGlC,CAGA/jC,kBACG,OAAO+jC,CACV,CAEA/jC,wBACG,MAAO,CACJzpB,MAAO,eACP0sD,WAAY,4BACZC,UAAW,oBACXjD,OAAQ,CACLlpD,KAAM,oBAGf,oBC5DH,MAAMgsD,EAAmB,EAAQ,OAE3BiB,EAA2C,CAC9CjE,SAAU,KAQVv/C,KAAM,cAINwgD,eAAgB,GAIhBxnD,IAAK,sBAIL+B,SAAU,CAAC,UAMd5G,EAAOC,QAAU,cAAmD,EAGjEG,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KACRshB,EAAWthB,MAAQ,2CACtB7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI8sD,EAGlC,CAGAhkC,kBACG,OAAOgkC,CACV,CAEAhkC,wBACG,OAAO,IACV,CAUAmiB,oBACG,MAAO,CACJ3oC,IAAK,GAAGpE,KAAKnB,SACbsC,MAAO,GAAGnB,KAAKmB,aAErB,mBChEH,MAAMwsD,EAAmB,EAAQ,OAEjC,IAAIkB,EAAuB,CACxBlE,SAAU,KAQVv/C,KAAM,cAINwgD,eAAgB,GAIhBxnD,IAAK,eAIL+B,SAAU,CACP,WACA,cACA,WACA,aACA,iBAIN5G,EAAOC,QAAU,cAA+BmuD,EAC7ChuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,oCACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI+sD,GAE/B7uD,KAAK+hC,QAAU,EAGlB,CAGAnX,kBACG,OAAOikC,CACV,CAEAjkC,wBACG,OAAO,IACV,CAEA5kB,WAAWid,GACRnjB,MAAMkG,WAAWid,GAEjBjjB,KAAK8uD,SAAWp7C,KAAKuD,MAAMgM,EAAW6rC,WAAY,EACrD,CAEIC,mBACD,IAAIxB,EAAY,KACZyB,EAAchvD,KAAKwnB,QAGvB,MAAQ+lC,GAAayB,GAClBzB,EAAYyB,EAAYhmD,UACpBE,GAAqC,SAA5BA,GAAM/E,UAAUwmD,WAC3B,GAGFqE,EAAcA,EAAYxnC,QAG7B,OAAO+lC,CACV,CAEI0B,sBACD,OAAOjvD,KAAKwnB,QAAQklB,uBAAuB1sC,MAAM,EACpD,CAEIstD,2BACD,IAAIC,EAAYvtD,KAAK+uD,aACrB,OAAKxB,EAEcvtD,KAAK8B,GAAG2V,WAAW81C,EAAU3wB,UAFzB,IAI1B,CAEI4wB,0BACD,IAGI5wB,EAHA6wB,EAAWztD,KAAKivD,gBACpB,OAAKxB,GAKC7wB,EADE,+BADA6wB,EAAS9rD,KAEA8rD,EAASC,MAAQD,EAASC,MAAM9wB,SAAW,KAI3C6wB,EAAS7wB,SAInB58B,KAAK8B,GAAG2V,WAAWmlB,IAbJ,IAczB,CAEIsyB,kBACD,IAAI13C,EAAMxX,KAAKstD,qBACf,OAAK91C,EAEEA,EAAI1Q,QAAQC,GAAMA,EAAElI,IAAMmB,KAAKmvD,eAAc,GAFnC,IAGpB,CAUApiB,oBACG,MAAO,CACJ,CACG3oC,IAAK,GAAGpE,KAAKnB,UACbsC,MAAO,GAAGnB,KAAKmB,+BACfwE,MAAO,CACJ9G,GAAImB,KAAKnB,GACTmG,OAAQ,CAAEnG,GAAImB,KAAK48B,UACnBx4B,IAAK,iBACLyC,WAAY,QAEf7B,OAAQhF,KAAK48B,SACb7iB,KAAK,GAGd,oBCtIH,MAAM4zC,EAAmB,EAAQ,OAE3ByB,EAAc,EAAQ,OAEtBC,EAAoC,CACvC1E,SAAU,KAQVv/C,KAAM,eAINwgD,eAAgB,GAIhBxnD,IAAK,mBAIL+B,SAAU,CAAC,UAMd5G,EAAOC,QAAU,cAA4CmuD,EAC1DhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,6BACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAIutD,EAGlC,CAGAzkC,kBACG,OAAOykC,CACV,CAEAzkC,wBACG,OAAO,IACV,CAEA5kB,WAAWid,GACRnjB,MAAMkG,WAAWid,GAGjBjjB,KAAKsvD,aAAe,GAGhBtvD,KAAK0tD,QACN1tD,KAAK0tD,MAAQ0B,EAAYG,eAAevvD,KAAK0tD,MAAO1tD,KAAMA,KAAK8B,IAErE,CAQA+D,QACG,MAAM8D,EAAO7J,MAAM+F,QAKnB,OAFI7F,KAAK0tD,QAAO/jD,EAAK+jD,MAAQ1tD,KAAK0tD,MAAM7nD,SAEjC8D,CACV,CAEA6lD,mBAAmBh4C,GAChBxX,KAAKsvD,aAAajrD,KAAKmT,EAC1B,CA+BAu1B,oBAEG,IAAIjmC,EAAS,KAcb,OAZI9G,KAAKsvD,aAAappD,OAAS,IAC5BY,EAAS,GAET9G,KAAKsvD,aAAatrD,SAASyI,IACxB,MAAMghC,EAAQhhC,EAAEgjD,iBAAiBzvD,KAAKnB,GAAImB,KAAKmB,OAE3CssC,GACD3mC,EAAOzC,KAAKopC,EACf,KAIC3mC,CACV,CAQA6lC,YAAY+e,EAAUtnD,GACnB,MAAMmkB,EAAQnkB,EAAIokB,MAAM,KAExB,OAAID,EAAM,KAAOvoB,KAAKnB,GACHmB,KAAKisD,QAAQP,GAEdnjC,EAAM,IAGjB,IACV,oBC/IH,MAAMolC,EAAmB,EAAQ,OAEjC,IAAI+B,EAAqB,CACtB/E,SAAU,OAQVv/C,KAAM,eAINwgD,eAAgB,GAIhBxnD,IAAK,aAIL+B,SAAU,CACP,WACA,cACA,kBACA,aACA,aAIN,MAAMwpD,EAAS,CAEf,EAGApwD,EAAOC,QAAU,cAA6BmuD,EAC3ChuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,kCACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI4tD,EAGlC,CAGA9kC,kBACG,OAAO8kC,CACV,CAEA9kC,wBAEG,MAAO,CACJzpB,MAAO,cACP0sD,WAAY,0BACZC,UAAW,gCACXjD,OAAQ,CACLlpD,KAAM,kBACNiuD,YAAY,GAGrB,CAEA5pD,WAAWid,GACRnjB,MAAMkG,WAAWid,GAGjBjjB,KAAK6vD,SAA4B,MAAjB7vD,KAAK6vD,UAA0Bn8C,KAAKuD,MAAMjX,KAAK6vD,UAE/D,IAAIrlB,EAAexqC,KAAKyqC,WAAa,CAAC,EACtCzqC,KAAK8vD,mBAAqB,GAC1B9vD,KAAKyqC,UAAY,CAAC,GACjBxnB,EAAWynB,YAAc,IAAI1mC,SAAS2mC,IACpC,IAAInM,EAAMx+B,KAAK8B,GAAG85B,kBAAkB+O,EAAK3qC,MACrCw+B,EACDx+B,KAAKyqC,UAAUE,GAAOnM,EAIlBgM,EAAaG,GACd3qC,KAAKyqC,UAAUE,GAAOH,EAAaG,GAEnC3qC,KAAK8vD,mBAAmBzrD,KAAKsmC,EAEnC,IAGH3qC,KAAK8vD,mBAAmB9rD,SAAS2mC,IAC9B,IAAIvmC,EAAM,WAAWpE,KAAKilB,mBAAmBjlB,KAAKmB,gDAAgDwpC,KAClG,IAAKglB,EAAOvrD,GAAM,CACf,IAAI8D,EAAM,IAAIhJ,MAAMkF,GACpBpE,KAAK8B,GAAGqG,OAAO8uB,QAAQ/uB,EAAK,CAAE6nD,YAAa/vD,KAAKnB,GAAI8rC,QACpDglB,EAAOvrD,IAAO,CACjB,KAGHpE,KAAK4qC,aAAe3nB,EAAW+sC,iBAAmB,CAAC,CACtD,CAaAnqD,QACG,IAAI8D,EAAO7J,MAAM+F,QAEjB8D,EAAK+gC,WAAa,GAClB,IAAK,IAAIzrC,KAAKe,KAAKyqC,UAChB9gC,EAAK+gC,WAAWrmC,KAAKrE,KAAKyqC,UAAUxrC,GAAGJ,IAK1C,OAFA8K,EAAKqmD,gBAAkBhwD,KAAK4qC,aAErBjhC,CACV,CAYAojC,kBAAkBN,GACf,GAAwB,MAApBzsC,KAAKiwD,YAAqB,MAAO,GAGrC,IAAIC,EAAgBlwD,KAAKwnB,QAAQulB,kBAAkB/sC,OAAS,GAGxDmwD,EAAeD,EAActnD,QAC7B4oC,GAAQA,EAAIptC,MAAQpE,KAAKiwD,cAC3B,GAGEG,EAAwBF,EAActnD,QACtC4oC,GAA4C,oBAAnCA,GAAK7rC,OAAOvB,KAAOotC,GAAK7rC,SAGrC,GAAoB,MAAhBwqD,EAAsB,MAAO,GAEjC,IAAIxiD,EAAS,GAIVwiD,EAAaxqD,OACa,iBAA1BwqD,EAAaxqD,MAAMvB,KACnB+rD,EAAaxqD,MAAMgB,gBACnBwpD,EAAaxqD,MAAMgB,eAAeG,QAElC6G,EAAOtJ,KAAK,CACTD,IAAK,GAAGpE,KAAKnB,UACbsC,MAAO,GAAGnB,KAAKmB,wBACf6D,OAAQmrD,EAAaxqD,MAAMgB,iBAG9BwpD,EAAaxqD,MAAMgB,eAAeG,SAAS9C,SAAS+C,IACjD4G,EAAOtJ,KAAK,CACTD,IAAK,GAAGpE,KAAKnB,MAAMkI,EAAElI,KACrBsC,MAAO,GAAGnB,KAAKmB,sBAAsB4F,EAAE5F,QACvCwE,MAAOoB,EACP/B,OAAQ+B,EAAE/B,QACX,KAKL2I,EAAOtJ,KAAK,CACTD,IAAK+rD,EAAaxqD,MACb,GAAG3F,KAAKnB,MAAMsxD,EAAaxqD,MAAM9G,KACjC,GAAGmB,KAAKnB,gBACbsC,MAAO,GAAGnB,KAAKmB,qBACfwE,MAAOwqD,EAAaxqD,MACpBX,OAAQmrD,EAAanrD,SAI3BorD,EAAsBpsD,SAASwtC,IAC5B7jC,EAAOtJ,KAAK,CACTD,IAAK,GAAGotC,EAAIptC,KAAOotC,EAAI3yC,KACvBsC,MAAO,wBAAwBqwC,EAAIrwC,QACnCwE,MAAO6rC,EAAI7rC,MACXX,OAAQwsC,EAAIxsC,QACb,IAIL,IAAIqrD,EAAiBrwD,KAAKwnB,QAAQulB,kBAAkBsR,KACjDr+C,KACAysC,GAMH,OAJI4jB,GAAkBA,EAAenqD,OAAS,IAC3CyH,EAASA,EAAOma,OAAOuoC,IAGnB1iD,CACV,CAUAg/B,YAAYF,EAAal3B,GACtB,IAEI5L,EAFA+hD,EAAWn2C,EAAO,GAClBnR,EAAMmR,EAAO,GAGjB,GAAIm2C,GAAYtnD,GAAKksD,aAAatwD,KAAKnB,IAAK,CACzC,IAAI0L,EAAUnG,EAAIokB,MAAM,KAAK,GACzByjC,EAAUjsD,KAAKisD,QAAQP,GACvB6E,EAAYtE,EAAUA,EAAQtiD,KAAO,KAGzC,GAFAA,EAAO4mD,EAEHA,GAAahmD,EAAS,CACvB,IAAI4lD,GACDnwD,KAAKwnB,QAAQulB,kBAAkB/sC,OAAS,IACzC4I,QAAQ4oC,GAAQA,EAAIptC,KAAOpE,KAAKiwD,cAAa,GAEf,iBAA5BE,GAAcxqD,OAAOvB,MACjB4I,MAAMC,QAAQsjD,KAAYA,EAAY,CAACA,IAG5C5mD,EAAO4mD,EAAU7xD,KAAKsP,IACnB,GAAe,QAAXzD,GAAgC,MAAXA,EACtB,OAAOyD,EAAKwB,MAAQxB,EAAKnP,IAAMmP,EAC3B,GAAImiD,EAAaxqD,MAAMgB,eAAgB,CAC3C,IAAI6pD,EAAcL,EAAaxqD,MAAMgB,eAAeG,QAChDC,GAAMA,EAAElI,IAAM0L,IAChB,GACF,OAAIimD,EAAoBxiD,EAAKwiD,EAAY3pD,YAC7BmH,CACf,KAGT,CACH,CAWA,OARIhB,MAAMC,QAAQtD,KAAOA,EAAOA,EAAKf,QAAQ+nB,GAAW,MAALA,KAEvC,MAARhnB,GAAiBA,EAAKzD,SACvByD,EAAO3J,KAAKwnB,QAAQmlB,YAAY0R,KAAKr+C,KAAMysC,EAAal3B,IAE/C,MAAR5L,GAAiBA,EAAKzD,SACvByD,EAAO3J,KAAKwnB,QAAQmlB,YAAY3sC,KAAMuV,IAElC5L,CACV,CAEAkjC,oBAAoBt3B,GACjB,OAAOvV,KAAKwnB,QAAQqlB,iBAAiBwR,KAAKr+C,QAASuV,EACtD,CAEA43B,oCAAoC53B,GACjC,OAAOvV,KAAKwnB,QAAQ2lB,iCAAiCkR,KAClDr+C,QACGuV,EAET,CAEAy3B,uCAAuCz3B,GACpC,OAAOvV,KAAKwnB,QAAQwlB,oCAAoCqR,KACrDr+C,QACGuV,EAET,CAcAs1B,YAAYx6B,GACT,OAAOrQ,KAAKwnB,QAAQqjB,YAAYwT,KAAKr+C,KAAMqQ,EAC9C,CAQA+6B,uBAAuBC,GACpB,GAAKA,EAEL,OAAOrrC,KAAKwnB,QAAQ4jB,uBAAuBiT,KAAKr+C,KAAMqrC,EACzD,CAQAC,oBAAoBD,GACjB,GAAKA,EAEL,OAAOrrC,KAAKwnB,QAAQ8jB,oBAAoB+S,KAAKr+C,KAAMqrC,EACtD,CAQAG,oBAAoBH,GACjB,GAAKA,EAEL,OAAOrrC,KAAKwnB,QAAQgkB,oBAAoB6S,KAAKr+C,KAAMqrC,EACtD,CAQAK,iBAAiB1P,GACTA,GAELh8B,KAAKwnB,QAAQkkB,iBAAiB2S,KAAKr+C,KAAMg8B,EAC5C,CAcA2P,wBAAwB3P,GACrB,GAAKA,EAEL,OAAOh8B,KAAKwnB,QAAQmkB,wBAAwB0S,KAAKr+C,KAAMg8B,EAC1D,CAQAgQ,iBAAiBhQ,GACTA,GAELh8B,KAAKwnB,QAAQwkB,iBAAiBqS,KAAKr+C,KAAMg8B,EAC5C,CASA0Q,uBAAuBD,GACpB,GAAKA,EAEL,OAAOzsC,KAAKwnB,QAAQklB,uBAAuB2R,KAAKr+C,KAAMysC,EACzD,CAUAzjC,SAASqH,EAAK,MAAM,IACjB,OAAOrQ,KAAKwnB,QAAQxe,SAASq1C,KAAKr+C,KAAMqQ,EAC3C,CAQA67B,WAAWlQ,GACHA,GAELh8B,KAAKwnB,QAAQ0kB,WAAWmS,KAAKr+C,KAAMg8B,EACtC,CAQAoQ,oBAAoBf,GACjB,OAAKA,EAEErrC,KAAKwnB,QAAQ4kB,oBAAoBiS,KAAKr+C,KAAMqrC,GAFlC,IAGpB,CASAgB,cAAc1qB,GACNA,GAEL3hB,KAAKwnB,QAAQ6kB,cAAcgS,KAAKr+C,KAAM2hB,EACzC,oBCnbH,MAAMgsC,EAAmB,EAAQ,OAE3B8C,EAAc,EAAQ,OAE5B,IAAIC,EAAgC,CACjC/F,SAAU,KAQVv/C,KAAM,eAINwgD,eAAgB,CAAC,aAAc,oBAI/BxnD,IAAK,WAIL+B,SAAU,CAAC,MAAO,UAAW,gBAMhC5G,EAAOC,QAAU,cAA4CmuD,EAC1DhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,6BACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI4uD,EAGlC,CAGA9lC,kBACG,OAAO8lC,CACV,CAEA9lC,wBACG,OAAO,IACV,CAEA5kB,WAAWid,GASRnjB,MAAMkG,WAAWid,GAEjB,SAAS0tC,EAAWn5C,GACbA,GACDnY,OAAOD,KAAKoY,GAAKxT,SAASgQ,IACT,SAAVwD,EAAIxD,GACLwD,EAAIxD,IAAK,EACS,QAAVwD,EAAIxD,GACZwD,EAAIxD,IAAK,EACgB,iBAAVwD,EAAIxD,IACnB28C,EAAWn5C,EAAIxD,GAClB,GAGT,CACA28C,CAAW3wD,KAAK4wD,YACnB,CA8CAC,6BACG,IAAI/pD,EAAS9G,KAAKwnB,QAAQulB,kBAAkB/sC,MAmD5C,OAlDI8G,GAAU9G,KAAK4wD,aAAe5wD,KAAK4wD,YAAYE,YAChD9wD,KAAK4wD,YAAYE,WAAW9sD,SAASV,IAC9BA,EAAEytD,UACHjqD,EAAO8B,QAAQwR,IACZ,GAAIA,EAAMzU,OAAO9G,IAAMyE,EAAEytD,YACtBztD,EAAEnC,MAAQiZ,EAAMzU,MAAMxE,MACtBmC,EAAEc,IAAMgW,EAAMhW,IACVd,EAAEqG,MAAMjE,QAAU0U,EAAMzU,MAAMQ,SAASjE,SAAS,CACjD,IAAIsD,EAAO,GACX4U,EAAMzU,MAAMQ,SAASjE,QAAQ8B,SAASwtC,IACnChsC,EAAKnB,KAAK,CACPlD,MAAOqwC,EAAIvjC,KACXvL,MAAO8uC,EAAI3yC,IACZ,IAELyE,EAAEqG,KAAKjE,OAASF,CACnB,CACH,IAEKlC,EAAEwtD,YAAcxtD,EAAEwtD,WAAW5qD,SACrC5C,EAAEc,IAAMd,EAAE0tD,KACV1tD,EAAEwtD,WAAW9sD,SAAShF,IACnB,GAAIA,EAAE+xD,UAAW,CAGd,IAAIE,EAAQnqD,EAAO8B,QAAQ7B,GACjBA,EAAE3C,KAAOd,EAAE0tD,OAClB,GACH,IAAKC,EAAO,OACZA,EAAMjsD,OAAO8B,SAAS8B,QAAQwR,IAC3B,GAAIA,GAAOvb,IAAMG,EAAE+xD,YAChB/xD,EAAEmC,MAAQiZ,EAAMjZ,MAChBnC,EAAEoF,IAAMgW,EAAMvT,WACV7H,EAAE2K,MAAMjE,QAAU0U,EAAMjU,SAASjE,SAAS,CAC3C,IAAIsD,EAAO,GACX4U,EAAMjU,SAASjE,QAAQ8B,SAASwtC,IAC7BhsC,EAAKnB,KAAK,CACPlD,MAAOqwC,EAAIvjC,KACXvL,MAAO8uC,EAAI3yC,IACZ,IAELG,EAAE2K,KAAKjE,OAASF,CACnB,CACH,GAEN,KAEN,IAGCxF,KAAK4wD,WACf,CAUA7jB,oBAEG,IAAI7qC,EAAU,GACdlC,KAAK4wD,YAAYE,WAAW9sD,SAASktD,IACjB,UAAbA,EAAKvvD,MAAmC,SAAfuvD,EAAKC,QAAqBD,EAAK1gC,OACzDtuB,EAAQmC,KAAK,CACVxF,GAAIqyD,EAAK1gC,MACTviB,KAAMijD,EAAK/vD,OAEjB,IAMH,IAAIiwD,EAAOpxD,KAAK8qC,UAKZ9I,EAAQhiC,KAAK8B,GAAG04B,UAAU,CAAC,GAC3B62B,EAAY,IAAIZ,EACjB,CACG5xD,GAAI,GAAGuyD,qBACPjwD,MAAO,GAAGnB,KAAKmB,kBACf0F,WAAY,GAAGuqD,qBACfjrD,SAAU,CACPjE,QAASA,IAGf8/B,GAGH,MAAO,CACJ,CACG59B,IAAK,GAAGgtD,qBACRjwD,MAAO,GAAGnB,KAAKmB,kBACfwE,MAAO0rD,EACPrsD,OAAQ,MAGjB,CAQA2nC,YAAY+e,EAAUtnD,GACnB,GAAIA,EAAK,CACN,IAAImkB,EAAQnkB,EAAIokB,MAAM,KACtB,GAAID,EAAM,IAAMvoB,KAAK8qC,UAElB,OADc9qC,KAAKisD,QAAQP,GACZnjC,EAAM,GAE3B,CACA,OAAO,IACV,oBCjOH,MAAMolC,EAAmB,EAAQ,OAEjC,IAAI2D,EAA4B,CAC7B3G,SAAU,OAQVv/C,KAAM,OAINwgD,eAAgB,GAIhBxnD,IAAK,WAIL+B,SAAU,IAMb5G,EAAOC,QAAU,cAAoCmuD,EAClDhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,oBACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAIwvD,EAGlC,CAGA1mC,kBACG,OAAO0mC,CACV,CAEA1mC,wBAEG,MAAO,CACJzpB,MAAO,YACP0sD,WAAY,yBACZC,UAAW,iBACXjD,OAAQ,CACLlpD,KAAM,iBAGf,CA8BAgqD,UAAUz8C,EAASyG,GAMhB7V,MAAM6rD,UAAUz8C,EALC,CACdJ,MAAO,GACPrO,GAAI,MAG8BkV,EACxC,oBCtGH,MAAMg4C,EAAmB,EAAQ,OAE3B4D,EAAoC,CACvC5G,SAAU,KAQVv/C,KAAM,cAINwgD,eAAgB,CAAC,aAAc,oBAI/BxnD,IAAK,WAIL+B,SAAU,CAAC,MAAO,UAAW,QAM1BA,EAAW,CACdqrD,IAAK,EACLC,QAAS,KACTxhD,IAAK,IAGR1Q,EAAOC,QAAU,cAA4CmuD,EAC1DhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9B,IAAK,MAAMsC,KAAO+B,EACf8c,EAAW7e,GAAO6e,EAAW7e,IAAQ+B,EAAS/B,GACjDtE,MACGT,OAAOoyB,OACJ,CACG9vB,KAAM,iCAETshB,GAEHuE,EACA1lB,EACAyvD,EAIN,CAGA3mC,kBACG,OAAO2mC,CACV,CAEA3mC,wBACG,OAAO,IACV,CAUAmiB,oBACG,MAAO,CACJ,CACG3oC,IAAK,GAAGpE,KAAKnB,sBACbsC,MAAO,GAAGnB,KAAKmB,mBAGxB,oBChFH,MAAMwsD,EAAmB,EAAQ,OAEjC,IAAI+D,EAA2B,CAC5B/G,SAAU,QAQV7jD,OAAQ,GAIRsE,KAAM,MAINhH,IAAK,WAKR7E,EAAOC,QAAU,cAAmCmuD,EACjDhuD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,UACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI4vD,EAGlC,CAGA9mC,kBACG,OAAO8mC,CACV,CAEA9mC,wBACG,MAAO,CACJzpB,MAAO,qBACP0sD,WAAY,4BACZC,UAAW,+BACXjD,OAAQ,CACLlpD,KAAM,kBAGNmpD,oBAAqB,8BAG9B,CAEA9kD,WAAWid,GACRnjB,MAAMkG,WAAWid,GAEjBjjB,KAAKwtC,WAAavqB,EAAWuqB,YAAc,eAC9C,CAaA3nC,QACG,IAAI8D,EAAO7J,MAAM+F,QAIjB,OAFA8D,EAAK6jC,WAAaxtC,KAAKwtC,WAEhB7jC,CACV,oBCxEH,MAAMgoD,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzCjH,SAAU,QAQV7jD,OAAQ,CACL,WACA,gBAKHsE,KAAM,MAINhH,IAAK,oBAKR7E,EAAOC,QAAU,cAAwCmyD,EACtDhyD,YAAYsjB,EAAYuE,EAAS1lB,GAC9BmhB,EAAWthB,KAAOshB,EAAWthB,MAAQ,UACrC7B,MAAMmjB,EAAYuE,EAAS1lB,EAAI8vD,EAGlC,CAGAhnC,kBACG,OAAOgnC,CACV,CAEAhnC,wBACG,MAAO,CACJzpB,MAAO,2BACP0sD,WAAY,sCAEZC,UAAW,+BACXjD,OAAQ,CACLlpD,KAAM,kBAGNmpD,oBAAqB,sBAG9B,CAEA9kD,WAAWid,GACRnjB,MAAMkG,WAAWid,GAEjBjjB,KAAK48B,SAAW3Z,EAAW2Z,UAAY,WACvC58B,KAAK6xD,aAAe5uC,EAAW4uC,cAAgB,iBAClD,CAaAhsD,QACG,IAAI8D,EAAO7J,MAAM+F,QAIjB,OAFA8D,EAAKizB,SAAW58B,KAAK48B,SACrBjzB,EAAKkoD,aAAe7xD,KAAK6xD,aAClBloD,CACV,CAUAojC,oBACG,IAAIjmC,EAAS,KACb,GAAI9G,KAAK48B,SAAU,CAChB91B,EAAS,GACT,IAAI9B,EAAShF,KAAK8B,GAAG2V,WAAWzX,KAAK48B,UACrC,GAAI53B,EAAQ,CACT,IAAIosD,EAAOpxD,KAAK8qC,UAChB9lC,EAAO8B,SAAS9C,SAAS2B,IACtBmB,EAAOzC,KAAK,CACTD,IAAK,GAAGgtD,KAAQzrD,EAAM9G,KACtBsC,MAAO,GAAGnB,KAAKmB,UAAU6D,EAAO7D,UAAUwE,EAAMxE,QAChDwE,QACAX,UACD,IAEL8B,EAAOzC,KAAK,CACTD,IAAK,GAAGgtD,SACRjwD,MAAO,GAAGnB,KAAKmB,UAAU6D,EAAO7D,QAChCwE,MAAO,KACPX,UAEN,KAAO,CAGJ,IAAImK,EAAQ,IAAIjQ,MACb,4DAA4Dc,KAAKnB,gDAAgDmB,KAAK48B,aAEzH58B,KAAK8B,GAAGqG,OAAO8uB,QAAQ9nB,EAAO,CAC3Bk+B,KAAMrtC,KAAKnB,GACXiqC,MAAO9oC,KAAK48B,UAElB,CACH,CACA,OAAO91B,CACV,CAQA6lC,YAAY+e,EAAUtnD,GACnB,IAAImkB,EAAQnkB,EAAIokB,MAAM,KACtB,GAAID,EAAM,IAAMvoB,KAAK8qC,UAAW,CAC7B,IAAImhB,EAAUjsD,KAAKisD,QAAQP,GAC3B,GAAIO,EAAc,KAAG,CAClB,IA8BOtmD,EA1BP,GAHIA,EADS3F,KAAK8B,GAAG2V,WAAWzX,KAAK48B,UAClB91B,QAAQC,GACjBA,EAAElI,IAAM0pB,EAAM,KACrB,GAEA,OAAIA,EAAM,GACA5iB,EAAM4iB,EAAM,IAAI81B,KAAK14C,EAAOsmD,EAAc,OAKO,GAApD,CAAC,YAAa,eAAe/+C,QAAQvH,EAAMvB,KACrCuB,EAAM6a,OAAOyrC,EAAc,OAErB,iBAAbtmD,EAAMvB,KACO,QAAbuB,EAAMvB,MAGH6nD,EAAc,KAAEtmD,EAAMmrB,iBAIlBm7B,EAAc,KAAEtmD,EAAMkB,YAG/B,GAAgB,QAAZ0hB,EAAM,GACd,OAAO0jC,EAAc,KAAQ,KAO7B,GAHItmD,EADS3F,KAAK8B,GAAG2V,WAAWzX,KAAK48B,UAClB91B,QAAQC,GACjBA,EAAElI,IAAM0pB,EAAM,KACrB,GAEA,OAAIA,EAAM,GACA5iB,EAAM4iB,EAAM,IAAI81B,KAAK14C,EAAOsmD,EAAc,MAG1CA,EAAc,KAAEtmD,EAAMkB,WAIzC,CACH,CACA,OAAO,IACV,CAQA0mC,qBACG,IAAIjnB,EAAU,KAId,OAHItmB,KAAK48B,WACNtW,EAAU,CAACtmB,KAAK8B,GAAG2V,WAAWzX,KAAK48B,YAE/BtW,CACV,oBCrMH,MAAMqrC,EAAmB,EAAQ,OAEjC,IAAIC,EAAwC,CACzCjH,SAAU,QAQV7jD,OAAQ,CACL,cACA,aACA,cACA,eACA,gBACA,aAKHsE,KAAM,UAINhH,IAAK,kBAIL0tD,YAAa,QACbC,WAAY,QACZC,YAAa,MACbC,aAAc,MACdC,cAAe,OACfC,WAAW,GAGd5yD,EAAOC,QAAU,cAAoCmyD,EAClDhyD,YAAYsjB,EAAYuE,EAAS1iB,GAC9Bme,EAAWthB,KAAOshB,EAAWthB,MAAQ,UACrC7B,MACGmjB,EACAuE,EACA1iB,EACA8sD,EAEN,CAGAhnC,kBACG,OAAOgnC,CACV,CAEAhnC,wBACG,MAAO,CACJzpB,MAAO,oBACP0sD,WAAY,kCAEZC,UAAW,8BACXjD,OAAQ,CACLlpD,KAAM,kBAGNmpD,oBAAqB,yBAG9B,CAEA9kD,WAAWid,GAoBR,GAnBAnjB,MAAMkG,WAAWid,GAEjBjjB,KAAK8xD,YACF7uC,EAAW6uC,aACXF,EAAsCE,YAEzC9xD,KAAKgyD,YACF/uC,EAAW+uC,aACXJ,EAAsCI,YAEzChyD,KAAKiyD,aACFhvC,EAAWgvC,cACXL,EAAsCK,aAEzCjyD,KAAKkyD,cACFjvC,EAAWivC,eACXN,EAAsCM,cAGrCjvC,EAAW8uC,WAAY,CACxB,IAAIK,EAAWnvC,EAAW8uC,WAAWvpC,MAAM,KACvCk3B,EAAW,IAAIj/B,KACnBi/B,EAAS2S,YAAYD,EAAS,IAC9B1S,EAAS4S,cAAcF,EAAS,IAChCpyD,KAAK+xD,WAAa,GAAGrS,EAASE,cAAcF,EAASI,cACxD,MACG9/C,KAAK+xD,WAAaH,EAAsCG,gBAGxB,IAAxB9uC,EAAWkvC,UACnBnyD,KAAKmyD,UAAYz+C,KAAKuD,MAAMgM,EAAWkvC,WAEvCnyD,KAAKmyD,UAAYP,EAAsCO,SAE7D,CAaAtsD,QACG,IAAI8D,EAAO7J,MAAM+F,QAejB,OAbA8D,EAAKmoD,YAAc9xD,KAAK8xD,YACxBnoD,EAAKqoD,YAAchyD,KAAKgyD,YACxBroD,EAAKsoD,aAAejyD,KAAKiyD,aACzBtoD,EAAKuoD,cAAgBlyD,KAAKkyD,cAG1BvoD,EAAKooD,WAAa/xD,KAAK+xD,WACnBpoD,EAAKooD,YAAcpoD,EAAKooD,sBAAsBtxC,OAC/C9W,EAAKooD,WAAa,GAAGpoD,EAAKooD,WAAWQ,iBAAiB5oD,EAAKooD,WAAWjS,gBAGzEn2C,EAAKwoD,UAAYnyD,KAAKmyD,UAEfxoD,CACV,CAEA6oD,oBACG,IAIIC,EACAC,EACAC,EANAP,EAAWpyD,KAAK+xD,WAAWvpC,MAAM,KAEjCoqC,EAASR,EAAS,GAClBS,EAAOT,EAAS,GAMpB,OAAQpyD,KAAK8xD,aACV,IAAK,QACFW,EAAM,IACNC,EAAQ,IACRC,EAA8B,WAApB3yD,KAAKgyD,YAA2B,MAAQ,IAClD,MACH,IAAK,SACFS,EAAM,IACNC,EAAQ,IACRC,EAAU3yD,KAAKiyD,aACf,MACH,IAAK,UACFQ,EAAMzyD,KAAKkyD,cACXQ,EAAQ,IACRC,EAAU,IAIhB,MAAO,KAAaC,KAAUC,KAAQJ,KAAOC,KAASC,KACzD,oBC5JH,IAAItzB,EAAY,EAAQ,OAwKxB9/B,EAAOC,QAvKP,cAAuB6/B,EACpB1/B,YAAYsjB,EAAY6vC,EAAsBC,EAAQ1lB,EAAMvrC,GACzDhC,QAGKkN,MAAMC,QAAQ6lD,KAChBA,EAAuB,CAACA,IAG3B9yD,KAAK8yD,qBAAuBA,EAE5B9yD,KAAKgF,OAAS+tD,EAASA,EAAO/tD,OAAS,KAOnC+tD,GAAUA,EAAOC,YAAWhzD,KAAKgF,OAAS+tD,EAAOC,WAErDhzD,KAAK+yD,OAASA,EACd/yD,KAAKqtC,KAAOA,EAMZrtC,KAAK8B,GAAKA,EACV9B,KAAKorB,KAAO,KAEZprB,KAAKuvD,eAAetsC,EACvB,CAKAgwC,WAAWhwC,GAAa,CAExBssC,eAAetsC,GAsCZ,GA3BAjjB,KAAKoE,IAAMpE,KAAKL,YAAYyE,KAAO,KAGnCpE,KAAKuV,OAAS0N,EAAW1N,QAAU,CAAC,EAKpCvV,KAAK48B,SAAW3Z,EAAW2Z,UAAY,KAGnC58B,KAAK48B,WAAU58B,KAAKgF,OAAShF,KAAKkzD,aAAalzD,KAAK48B,WAExD58B,KAAKizD,WAAWhwC,GAGZjjB,KAAK48B,WAAa58B,KAAKgF,QACxBhF,KAAK8B,GAAGqG,OAAOC,UACZ,IAAIlJ,MACD,6DAA6Dc,KAAK48B,aAErE,CACG3Z,aACA2Z,SAAU58B,KAAK48B,WAIpB3Z,EAAWmI,KAAM,CAClB,IAAI+nC,EAAS,KAMb,IAJCnzD,KAAKozD,WAAapzD,KAAKL,YAAYyzD,WAAWpvD,SAASqvD,IACjDA,EAAGjvD,MAAQ6e,EAAWmI,KAAKhnB,MAAK+uD,EAASE,EAAE,IAG9CF,EAAQ,CAET,MAAMG,EAAO,IAAIH,EAAOlwC,EAAWmI,KAAMprB,KAAMA,KAAKqtC,KAAMrtC,KAAK8B,IAE/D9B,KAAKorB,KAAOkoC,CACf,CACH,CACH,CAUAJ,aAAapqB,GACV,OAAO9oC,KAAK8B,GAAGwkB,SAAStnB,IACrB,MAAMu0D,EAAc,IAAIv0D,EAAEmC,SAE1B,OAEGnC,EAAEH,KAAOiqC,GAAwC,IAA/ByqB,EAAYrmD,QAAQ47B,EACxC,IACD,EACN,CAQA0qB,iCACG,MAAMC,EACHzzD,KAAKqtC,KAAK7lB,QAAQulB,kBAAkB/sC,KAAKqtC,OAAS,GAC/CqmB,EAAe,CAAC,EAUtB,OARAD,EAA2BzvD,SAAS+C,IAC7BA,EAAEpB,MACH+tD,EAAa3sD,EAAEpB,MAAM9G,IAAMkI,EAE3B2sD,EAAa3sD,EAAE3C,KAAO2C,CACzB,IAGI2sD,CACV,CAUAC,aAAaC,GAAO,CAQpB/tD,QACG,MAAM2R,EAAM,CACTpT,IAAKpE,KAAKL,YAAYyE,IAEtBmR,OAAQvV,KAAKuV,OAGbqnB,SAAU58B,KAAKgF,QAAQnG,IAAM,MAOhC,OAJImB,KAAKorB,OACN5T,EAAI4T,KAAOprB,KAAKorB,KAAKvlB,SAGjB2R,CACV,oBCtKH,MAAMq8C,EAAO,EAAQ,OACfT,EAAY,EAAQ,OAMpBU,EAAuB,CAC1B,CACGnyD,KAAM,mBACNuF,KAAM,SAIZ,MAAM6sD,UAAqBF,EACxBl0D,YAAYsjB,EAAY8vC,EAAQ1lB,EAAMvrC,GACnChC,MAAMmjB,EAAY6wC,EAAsBf,EAAQ1lB,EAAMvrC,EACzD,EAOHiyD,EAAa3vD,IAAM,OACnB2vD,EAAa5yD,MAAQ,OACrB4yD,EAAaX,UAAYA,EAEzB7zD,EAAOC,QAAUu0D,mBC5BjB,MAGMC,EAAkB,CAarBzE,eAAgB,SAAUtsC,EAAYoqB,EAAMvrC,GACzC,IAAKmhB,EAAY,OAAO,KAExB,MAAMgxC,EAAc,GAMpB,OAJAD,EAAgBE,MAAMlwD,SAASmwD,IACxBA,EAAG/vD,MAAQ6e,EAAW7e,KAAK6vD,EAAY5vD,KAAK8vD,EAAG,IAG3B,IAAvBF,EAAY/tD,OAGA,IAAI+tD,EAAY,GAAGhxC,EAAYoqB,EAAMvrC,GAGvC,IACjB,EAMAoyD,MArCW,CADG,EAAQ,SAwCzB30D,EAAOC,QAAUw0D,mBCtCjB,MAAMH,EAAO,EAAQ,OAMfT,EAAY,CADH,EAAQ,QAGjBU,EAAuB,CAC1B,CACGnyD,KAAM,aACNuF,KAAM,SAIZ,MAAMktD,UAAuBP,EAC1Bl0D,YAAYsjB,EAAYoqB,EAAMvrC,GAE3BhC,MAAMmjB,EAAY6wC,EAAsB,KAAMzmB,EAAMvrC,EACvD,CAKAmxD,WAAWhwC,GACR,IAAKjjB,KAAKgF,QAAUhF,KAAKuV,OAAQ,CAC9B,MAAM8+C,EAAar0D,KAAK8yD,qBAAqB9lC,MAAM4mC,GAC3B,eAAdA,EAAKjyD,OAGX0yD,IACDr0D,KAAK48B,SAAW58B,KAAKuV,OAAO8+C,EAAWntD,MACvClH,KAAKgF,OAAShF,KAAKkzD,aAAalzD,KAAK48B,WAGnC58B,KAAKgF,QACPhF,KAAKs0D,eAAe,qBAAsB,CACvC13B,SAAU58B,KAAK48B,UAGxB,CACH,CAEA/2B,QACG,MAAM2R,EAAM1X,MAAM+F,QAIlB,IAAK2R,EAAIolB,UAAY58B,KAAKuV,OAAQ,CAC/B,MAAM8+C,EAAar0D,KAAK8yD,qBAAqB9lC,MAAM4mC,GAC3B,eAAdA,EAAKjyD,OAGX0yD,IAAY78C,EAAIolB,SAAW58B,KAAKuV,OAAO8+C,EAAWntD,MACzD,CAEA,OAAOsQ,CACV,EAGH48C,EAAehwD,IAAM,SACrBgwD,EAAejzD,MAAQ,SACvBizD,EAAehB,UAAYA,EAE3B7zD,EAAOC,QAAU40D,kBClEjB,MAAMG,EAAW,EAAQ,OACnBC,EAAS,EAAQ,OACjBC,EAAU,EAAQ,OAExBl1D,EAAOC,QAAU,CAAC+0D,EAAUC,EAAQC,oBCDpC,MAAMC,EAAe,EAAQ,MACvBC,EAAgB,EAAQ,OACxBC,EAAc,EAAQ,OAE5B,MAAMC,UAAyBH,EAExBtB,gBACD,IAAI0B,EAAY,GAEhB,MAAMnvD,EAAQ3F,KAAK2F,OAAS3F,KAAKgF,OAAO4I,UAAU5N,KAAK68B,UAAY,KAGnE,OAAQl3B,GAAOvB,KAEZ,IAAK,gBACF,GAAgC,SAA5BuB,EAAMQ,SAASa,SAAqB,CAIrC8tD,EAFgB,EAAQ,OAIxB,KACH,CAGAA,EAAY90D,KAAK+yD,OAAOpzD,YAAYyzD,UAAUxqD,QAC1CmsD,GACEA,EAAS3wD,MAAQpE,KAAKL,YAAYyE,KAClC2wD,EAAS3wD,MAAQuwD,EAAcvwD,MAGrC,MAEH,IAAK,OAEF,GAC+B,SAA5BuB,EAAMQ,SAASa,UACfrB,EAAMQ,SAAS08C,WAChB,CAICiS,EAFgB,EAAQ,OAIxB,KACH,CAGAA,EAAY90D,KAAK+yD,OAAOpzD,YAAYyzD,UAAUxqD,QAC1CmsD,GACEA,EAAS3wD,MAAQpE,KAAKL,YAAYyE,KAClC2wD,EAAS3wD,MAAQuwD,EAAcvwD,KAC/B2wD,EAAS3wD,MAAQwwD,EAAYxwD,MAGnC,MAEH,QAEG0wD,EAAY90D,KAAK+yD,OAAOpzD,YAAYyzD,UAAUxqD,QAC1CmsD,GAAaA,EAAS3wD,MAAQwwD,EAAYxwD,MAMpD,OAAO0wD,CACV,EAGHD,EAAiBzwD,IAAM,YACvBywD,EAAiB1zD,MAAQ,gCACzB0zD,EAAiBzB,UAAY,GAE7B7zD,EAAOC,QAAUq1D,mBC5EjB,MAAMG,EAAc,EAAQ,OAE5B,MAAMC,UAAwBD,GAE9BC,EAAgB7wD,IAAM,WACtB6wD,EAAgB9zD,MAAQ,oBACxB8zD,EAAgB7B,UAAY,GAG5B7zD,EAAOC,QAAUy1D,mBCVjB,MAAMpB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACGnyD,KAAM,eACNuF,KAAM,WAIZ,MAAMguD,UAA0BrB,EAC7Bl0D,YAAYsjB,EAAY8vC,EAAQ1lB,EAAMvrC,GACnChC,MAAMmjB,EAAY6wC,EAAsBf,EAAQ1lB,EAAMvrC,GAKtD9B,KAAKL,YAAYyzD,UAAYL,EAAOpzD,YAAYyzD,SACnD,EAOH8B,EAAkB9wD,IAAM,SACxB8wD,EAAkB/zD,MAAQ,qBAC1B+zD,EAAkB9B,UAAY,GAG9B7zD,EAAOC,QAAU01D,mBC9BjB31D,EAAOC,QAAU,CACd,EAAQ,OACR,EAAQ,MACR,EAAQ,wBCFX,MAAMq0D,EAAO,EAAQ,OACfsB,EAAU,EAAQ,MAMxB,MAAMC,UAAyBvB,EAC5Bl0D,YAAYsjB,EAAY8vC,EAAQ1lB,EAAMvrC,GACnChC,MAAMmjB,EAAY,GAAI8vC,EAAQ1lB,EAAMvrC,EACvC,EAOHszD,EAAiBhxD,IAAM,QACvBgxD,EAAiBj0D,MAAQ,0BACzBi0D,EAAiBhC,UAAY+B,EAE7B51D,EAAOC,QAAU41D,mBCrBjB,MAAMvB,EAAO,EAAQ,OAGfC,EAAuB,CAC1B,CACGnyD,KAAM,eACNuF,KAAM,YAIZ,MAAMmuD,UAAyBxB,EAC5Bl0D,YAAYsjB,EAAY8vC,EAAQ1lB,EAAMvrC,GACnChC,MAAMmjB,EAAY6wC,EAAsBf,EAAQ1lB,EAAMvrC,EACzD,CAMAytD,eAAetsC,GAIZjjB,KAAKL,YAAYyzD,UAAYpzD,KAAK+yD,OAAOpzD,YAAYyzD,UAKrDpzD,KAAK68B,QAAU5Z,EAAW4Z,QAC1B78B,KAAK2F,MAAQ3F,KAAKgF,QAAQ4I,UAAU5N,KAAK68B,SAkBrC5Z,EAAWqyC,cACZt1D,KAAKgzD,UAAYhzD,KAAKkzD,aAAajwC,EAAWqyC,cAEjDx1D,MAAMyvD,eAAetsC,EACxB,CAEApd,QACG,MAAM2R,EAAM1X,MAAM+F,QAElB,GAAI7F,KAAK68B,QACNrlB,EAAIqlB,QAAU78B,KAAK68B,QAEf78B,KAAKgzD,YAAWx7C,EAAI89C,YAAct1D,KAAKgzD,UAAUn0D,QACjD,CACJ2Y,EAAIqlB,QAAU78B,KAAKuV,OAAO5P,OAAS,KAEnC,MAAMA,EAAQ3F,KAAKgF,OAAO4I,UAAU4J,EAAIqlB,SAEpCl3B,GAAOg/B,eAAcntB,EAAI89C,YAAc3vD,EAAMgB,eAAe9H,GACnE,CAEA,OAAO2Y,CACV,EAGH69C,EAAiBjxD,IAAM,YACvBixD,EAAiBl0D,MAAQ,gCACzBk0D,EAAiBjC,UAAY,GAE7B7zD,EAAOC,QAAU61D,mBC5EjB,MAAMxB,EAAO,EAAQ,OAEfC,EAAuB,CAC1B,CACGnyD,KAAM,YACNuF,KAAM,eAIZ,MAAMquD,UAAwB1B,EAC3Bl0D,YAAYsjB,EAAY8vC,EAAQ1lB,EAAMvrC,GACnChC,MAAMmjB,EAAY6wC,EAAsBf,EAAQ1lB,EAAMvrC,GAGlD9B,KAAKw1D,YACNnoB,EAAKmiB,mBAAmBxvD,MACxBA,KAAKy1D,YAAa,EAExB,CAMAlG,eAAetsC,GAIZjjB,KAAKL,YAAYyzD,UAAYpzD,KAAK+yD,OAAOpzD,YAAYyzD,UAErDtzD,MAAMyvD,eAAetsC,GAErBjjB,KAAKw1D,UAAYvyC,EAAWuyC,WAAax1D,KAAKuV,OAAOmgD,UACxD,CAEA7vD,QACG,MAAM2R,EAAM1X,MAAM+F,QAIlB,OAFA2R,EAAIg+C,UAAYx1D,KAAKw1D,WAAax1D,KAAKuV,OAAOmgD,WAEvCl+C,CACV,CAEAi4C,iBAAiB5wD,EAAIsC,GAQlB,IAAIwE,EAAQ,KAUZ,MAHgC,kBAA5B3F,KAAK+yD,QAAQptD,OAAOvB,MACrBuB,EAAQ3F,MAAM+yD,QAAQptD,OAElB,CACJvB,IAAK,GAAGvF,KAAMmB,KAAKw1D,WAAax1D,KAAKuV,OAAOmgD,aAC5Cv0D,MAAO,GAAGA,MAAUnB,KAAKw1D,WAAax1D,KAAKuV,OAAOmgD,aAClD/vD,MAAOA,EACPX,OAAQhF,KAAKgF,OACb+U,KAAK,EAEX,EAGHw7C,EAAgBnxD,IAAM,WACtBmxD,EAAgBp0D,MAAQ,oBACxBo0D,EAAgBnC,UAAY,GAG5B7zD,EAAOC,QAAU+1D,mBCrFjB,MAAMI,EAAe,EAAQ,MAEvBC,EAA4B,CAC/BxxD,IAAK,cACLgH,KAAM,WACNyqD,SAAU,gBAGPC,EAA6C,CAChDC,WAAY,KACZpmC,MAAO,KACPqmC,YAAa,aACbjV,SAAU,YACVkV,WAAW,EACXl1D,MAAO,KAGVxB,EAAOC,QAAU,cAAoCm2D,EAClDh2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBmvB,EAEvB,CAEAhrC,gBACG,OAAOgrC,CACV,CAEAhrC,uBACG,OAAOkrC,CACV,CAYA9vD,WAAWN,GACR5F,MAAMkG,WAAWN,GAGuB,iBAA7BA,EAAOS,SAAS8vD,YACxBj2D,KAAKmG,SAAS8vD,UAAYviD,KAAKuD,MAAMvR,EAAOS,SAAS8vD,YAEzB,MAA3Bj2D,KAAKmG,SAAS8vD,YACfj2D,KAAKmG,SAAS8vD,UACXH,EAA2CG,WAGjDj2D,KAAKmG,SAASpF,MAAQ2kB,SACnBhgB,EAAOS,SAASpF,OACb+0D,EAA2C/0D,MAEpD,oBC7DH,MAAM40D,EAAe,EAAQ,MAEvBO,EAAe,EAAQ,OAEvBC,EAA4B,CAC/B/xD,IAAK,cAILgH,KAAM,SAINyqD,SAAU,gBAMPO,EAA6C,CAChDL,WAAY,KAKZM,kBAAmB,GAInBL,YAAa,aAIbj1D,MAAO,EAIPu1D,YAAa,IAuBhB/2D,EAAOC,QAAU,cAAoCm2D,EAClDh2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiB0vB,EAEvB,CAOAvrC,gBACG,OAAOurC,CACV,CAQAvrC,uBACG,OAAOwrC,CACV,CAYApwD,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASpF,MAAQ2kB,SACnB1lB,KAAKmG,SAASpF,OAASq1D,EAA2Cr1D,MAExE,CAEIw1D,iBACD,IAAIvxD,EAAShF,KAAK4rB,gBAAgBD,WAClC,GAAK3mB,EAUL,OARwB,MAApBhF,KAAKw2D,cACNx2D,KAAKw2D,YAAc,IAAIN,GAG1Bl2D,KAAKw2D,YAAYC,SAASz2D,MAC1BA,KAAKw2D,YAAYE,aAAa12D,KAAKmG,SAASmwD,aAC5Ct2D,KAAKw2D,YAAYzxD,WAAWC,GAErBhF,KAAKw2D,WACf,CAEAG,iBAAiBC,GACVA,IAAa5pD,MAAMC,QAAQ2pD,KAC5BA,EAAW,CAACA,IAGfA,EAAS5yD,SAASob,IACfpf,KAAKu2D,YAAYM,WAAW,CAAEltD,KAAMyV,EAAIzV,MAAQyV,EAAKpV,KAAMhK,MAAO,GAExE,CAEA82D,cAAcF,GAKX,GAJIA,IAAa5pD,MAAMC,QAAQ2pD,KAC5BA,EAAW,CAACA,KAGV52D,KAAKu2D,WAAY,OAAOlnD,QAAQ/P,UAErC,IAAI0rD,EAAQ,GAQZ,OANA4L,EAAS5yD,SAASob,IACf4rC,EAAM3mD,KACHrE,KAAKu2D,WAAW/uC,QAAQ,CAAE7d,KAAMyV,EAAIzV,MAAQyV,EAAKpV,KAAMhK,OACzD,IAGGqP,QAAQkS,IAAIypC,EACtB,kBCrJH,MAAM2K,EAAe,EAAQ,MAEvBoB,EAA0C,CAC7ChB,WAAY,KACZpwD,MAAO,KAEP5E,MAAO,IACPD,OAAQ,IACRk2D,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,eAAgB,SAChBC,gBAAgB,EAEhBC,YAAa,KACbC,WAAY,KACZC,SAAU,KACVC,QAAS,MAGNC,EAAiB,CACpBrzD,IAAK,WACLgH,KAAM,QACNyqD,SAAU,YAGb,SAAS6B,EAAkBC,EAAOvzD,QACG,IAAvBuzD,EAAMxxD,SAAS/B,GACvBuzD,EAAMxxD,SAAS/B,GAAOshB,SAASiyC,EAAMxxD,SAAS/B,IAE9CuzD,EAAMxxD,SAAS/B,GAAO2yD,EAAwC3yD,EAEpE,CAEA,SAASwzD,EAAeD,EAAOvzD,GAC5B,IACGuzD,EAAMxxD,SAAS/B,GAAOsP,KAAKuD,MAAM0gD,EAAMxxD,SAAS/B,GAGnD,CAFE,MAAOnF,GACN04D,EAAMxxD,SAAS/B,GAAO2yD,EAAwC3yD,EACjE,CACH,CAEA7E,EAAOC,QAAU,cAAiCm2D,EAC/Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOmsC,CACV,CAYA/wD,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjBgyD,EAAkB13D,KAAM,SACxB03D,EAAkB13D,KAAM,UAGxB43D,EAAe53D,KAAM,aACrB43D,EAAe53D,KAAM,YACrB43D,EAAe53D,KAAM,cAErBA,KAAKmG,SAASgxD,eACXn3D,KAAKmG,SAASgxD,gBACdJ,EAAwCI,eAE3CS,EAAe53D,KAAM,iBACxB,CAMA63D,gBACG,MAAO,EACV,CAEIC,iBACD,IAAIlrC,EAAK5sB,KAAK4rB,eACd,IAAKgB,EAAI,OAAO,KAEhB,IAAIpV,EAAMoV,EAAGjB,WACb,OAAKnU,EAEEA,EAAI5J,UAAU5N,KAAKmG,SAASR,OAFlB,IAGpB,oBCpGH,MAAMoyD,EAAuB,EAAQ,OAE/BC,EAA2C,CAC9CC,SAAU,OACVC,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPb,EAAiB,CACpBrzD,IAAK,OACLgH,KAAM,aACNyqD,SAAU,QAGbt2D,EAAOC,QAAU,cAAkCu4D,EAChDp4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOotC,CACV,CAYAhyD,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS8xD,SACXj4D,KAAKmG,SAAS8xD,UACdD,EAAyCC,SAE5Cj4D,KAAKmG,SAAS+xD,SAAWxyC,SACtB1lB,KAAKmG,SAAS+xD,UACXF,EAAyCE,UAI/Cl4D,KAAKmG,SAASgyD,YAAczyC,SACzB1lB,KAAKmG,SAASgyD,aACXH,EAAyCG,aAG/Cn4D,KAAKmG,SAASiyD,cAAgB1yC,SAC3B1lB,KAAKmG,SAASiyD,eACXJ,EAAyCI,eAE/Cp4D,KAAKmG,SAASkyD,UAAY3yC,SACvB1lB,KAAKmG,SAASkyD,WACXL,EAAyCK,WAE/Cr4D,KAAKmG,SAASmyD,SAAW5yC,SACtB1lB,KAAKmG,SAASmyD,UACXN,EAAyCM,UAG/Ct4D,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,aAC/B,CAMA63D,gBACG,MAAO,EACV,mBCjFH,MAAME,EAAuB,EAAQ,OAE/BQ,EAA0C,CAC7CC,QAAS,MACTC,UAAW,SACXP,SAAU,EAEVp3D,OAAQ,IACRs3D,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPb,EAAiB,CACpBrzD,IAAK,MACLgH,KAAM,YACNyqD,SAAU,OAGbt2D,EAAOC,QAAU,cAAiCu4D,EAC/Cp4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO2tC,CACV,CAYAvyD,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAASqyD,QACXx4D,KAAKmG,SAASqyD,SACdD,EAAwCC,QAE3Cx4D,KAAKmG,SAASsyD,UACXz4D,KAAKmG,SAASsyD,WACdF,EAAwCE,UAE3Cz4D,KAAKmG,SAAS+xD,SAAWxyC,SACtB1lB,KAAKmG,SAAS+xD,UACXK,EAAwCL,UAI9Cl4D,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QAAUy3D,EAAwCz3D,QAGnEd,KAAKmG,SAASiyD,cAAgB1yC,SAC3B1lB,KAAKmG,SAASiyD,eACXG,EAAwCH,eAE9Cp4D,KAAKmG,SAASkyD,UAAY3yC,SACvB1lB,KAAKmG,SAASkyD,WACXE,EAAwCF,WAE9Cr4D,KAAKmG,SAASmyD,SAAW5yC,SACtB1lB,KAAKmG,SAASmyD,UACXC,EAAwCD,UAG9Ct4D,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,YAC/B,CAMA63D,gBACG,MAAO,EACV,oBCrFH,MAAMa,EAAkB,EAAQ,OAE1BC,EAAuC,CAC1C5C,WAAY,GACZ6C,YAAa,GACbC,YAAa,GACbC,aAAc,GACdC,aAAc,EACd/B,UAAW,EACXgC,cAAe,OACfn3D,WAAY,IACZf,OAAQ,IACRm4D,eAAgB,GAGbC,EAAsB,CACzB90D,IAAK,QACLgH,KAAM,YACNyqD,SAAU,SAGbt2D,EAAOC,QAAU,cAA8Bk5D,EAC5C/4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiByyB,EACvD,CAEAtuC,gBACG,OAAOsuC,CACV,CAEAtuC,uBACG,OAAO+tC,CACV,CAYA3yD,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS4vD,WACX/1D,KAAKmG,SAAS4vD,YACd4C,EAAqC5C,WAExC/1D,KAAKmG,SAASyyD,YACX54D,KAAKmG,SAASyyD,aACdD,EAAqCC,YAExC54D,KAAKmG,SAAS0yD,YACX74D,KAAKmG,SAAS0yD,aACdF,EAAqCE,YAExC74D,KAAKmG,SAAS2yD,aACX94D,KAAKmG,SAAS2yD,cACdH,EAAqCG,aAExC94D,KAAKmG,SAAS4yD,aAAerzC,SAC1B1lB,KAAKmG,SAAS4yD,cACXJ,EAAqCI,cAG3C/4D,KAAKmG,SAAS6wD,UAAYtxC,SACvB1lB,KAAKmG,SAAS6wD,WACX2B,EAAqC3B,WAG3Ch3D,KAAKmG,SAAS6yD,cACXh5D,KAAKmG,SAAS6yD,eACdL,EAAqCK,cAExCh5D,KAAKmG,SAAStE,WAAa6jB,SACxB1lB,KAAKmG,SAAStE,YACX82D,EAAqC92D,YAG3C7B,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QAAU63D,EAAqC73D,QAGhEd,KAAKmG,SAAS8yD,eAAiBvzC,SAC5B1lB,KAAKmG,SAAS8yD,gBACXN,EAAqCM,gBAG3Cj5D,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,cAC/B,CAMA63D,gBACG,MAAMsB,EAAe,CAAC,QAAS,MAAO,MAAO,OAAQ,QACrD,OAAOn5D,KAAK8E,YAAYijB,SAASzkB,GACvB61D,EAAajsD,QAAQ5J,EAAE0qC,SAAS5pC,MAAQ,GAErD,CAEAg1D,aACG,MAAMxsC,EAAK5sB,KAAK4rB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMpV,EAAMoV,EAAGjB,WACf,OAAKnU,EAEEA,EAAI5J,UAAU5N,KAAKmG,SAAS0yD,aAFlB,IAGpB,CAEAQ,aACG,MAAMzsC,EAAK5sB,KAAK4rB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMpV,EAAMoV,EAAGjB,WACf,OAAKnU,EAEEA,EAAI5J,UAAU5N,KAAKmG,SAASyyD,aAFlB,IAGpB,CAEAU,cACG,MAAM1sC,EAAK5sB,KAAK4rB,eAChB,IAAKgB,EAAI,OAAO,KAEhB,MAAMpV,EAAMoV,EAAGjB,WACf,OAAKnU,EAEEA,EAAI5J,UAAU5N,KAAKmG,SAAS2yD,cAFlB,IAGpB,oBCrIH,MAAMf,EAAuB,EAAQ,OAE/BwB,EAA2C,CAC9CC,SAAU,OACVC,WAAY,OACZvB,SAAU,EAEVC,YAAa,IACbC,cAAe,GACfC,UAAW,GACXC,SAAU,KAGPb,EAAiB,CACpBrzD,IAAK,OACLgH,KAAM,aACNyqD,SAAU,QAGbt2D,EAAOC,QAAU,cAAkCu4D,EAChDp4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO2uC,CACV,CAYAvzD,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAASqzD,SACXx5D,KAAKmG,SAASqzD,UACdD,EAAyCC,SAE5Cx5D,KAAKmG,SAASszD,WACXz5D,KAAKmG,SAASszD,YACdF,EAAyCE,WAE5Cz5D,KAAKmG,SAAS+xD,SAAWxyC,SACtB1lB,KAAKmG,SAAS+xD,UACXqB,EAAyCrB,UAI/Cl4D,KAAKmG,SAASgyD,YAAczyC,SACzB1lB,KAAKmG,SAASgyD,aACXoB,EAAyCpB,aAG/Cn4D,KAAKmG,SAASiyD,cAAgB1yC,SAC3B1lB,KAAKmG,SAASiyD,eACXmB,EAAyCnB,eAE/Cp4D,KAAKmG,SAASkyD,UAAY3yC,SACvB1lB,KAAKmG,SAASkyD,WACXkB,EAAyClB,WAE/Cr4D,KAAKmG,SAASmyD,SAAW5yC,SACtB1lB,KAAKmG,SAASmyD,UACXiB,EAAyCjB,UAG/Ct4D,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,aAC/B,CAMA63D,gBACG,MAAO,EACV,oBCtFH,MAAME,EAAuB,EAAQ,OAE/B2B,EAA0C,CAC7CC,QAAS,MACTzB,SAAU,EAEVp3D,OAAQ,IACR84D,cAAe,GACfxB,cAAe,IAGZX,EAAiB,CACpBrzD,IAAK,MACLgH,KAAM,YACNyqD,SAAU,OAGbt2D,EAAOC,QAAU,cAAiCu4D,EAC/Cp4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO8uC,CACV,CAYA1zD,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAASwzD,QACX35D,KAAKmG,SAASwzD,SACdD,EAAwCC,QAE3C35D,KAAKmG,SAAS+xD,SAAWxyC,SACtB1lB,KAAKmG,SAAS+xD,UACXwB,EAAwCxB,UAI9Cl4D,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QAAU44D,EAAwC54D,QAGnEd,KAAKmG,SAASyzD,cAAgBl0C,SAC3B1lB,KAAKmG,SAASyzD,eACXF,EAAwCE,eAE9C55D,KAAKmG,SAASiyD,cAAgB1yC,SAC3B1lB,KAAKmG,SAASiyD,eACXsB,EAAwCtB,eAG9Cp4D,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,YAC/B,CAMA63D,gBACG,MAAO,EACV,oBC3EH,MAAMlC,EAAe,EAAQ,MAEvBkE,EAAyC,CAC5C9D,WAAY,KACZ+D,WAAY,KACZC,cAAe,KACfC,WAAY,KACZl5D,OAAQ,IACRK,MAAO,IAIJs2D,EAAiB,CACpBrzD,IAAK,UACLgH,KAAM,WACNyqD,SAAU,WAGbt2D,EAAOC,QAAU,cAAgCm2D,EAC9Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOivC,CACV,CAYA7zD,WAAWN,GACR5F,MAAMkG,WAAWN,GAKjB1F,KAAKmG,SAASrF,OAAS4kB,SAAS1lB,KAAKmG,SAASrF,QAAU,EAC3D,CAMA+2D,gBACG,MAAO,EACV,CAEAoC,mBACG,MAAMC,EAAal6D,KAAKm6D,WAClBC,EAAcp6D,KAAK8B,GAAG2Q,QAAQlC,WAGpC,GAAK2pD,EAEL,OAAOA,EAAWG,WAAWp7D,GAAMA,EAAEyD,QAAU03D,IAAe,CACjE,CAEAD,WACG,OAAOn6D,KAAK8B,GAAG2Q,QAAQjC,WAAW9R,KAAKO,IAC7B,CACJJ,GAAII,EAAEsR,SACN7N,MAAOzD,EAAEsR,SACT+pD,MAAOr7D,EAAEyR,YAGlB,CAEA6pD,eACG,IAAI9mC,EAAKzzB,KAAK4rB,eACd,IAAK6H,EAAI,OAAO,KAEhB,IAAIjc,EAAMic,EAAG9H,WACb,OAAKnU,EAEEA,EAAI5J,UAAU5N,KAAKmG,SAAS2zD,YAFlB,IAGpB,CAEAU,kBACG,IAAI/mC,EAAKzzB,KAAK4rB,eACd,IAAK6H,EAAI,OAAO,KAEhB,IAAIjc,EAAMic,EAAG9H,WACb,OAAKnU,EAEEA,EAAI5J,UAAU5N,KAAKmG,SAAS4zD,eAFlB,IAGpB,CAEAU,eACG,IAAIhnC,EAAKzzB,KAAK4rB,eACd,IAAK6H,EAAI,OAAO,KAEhB,IAAIjc,EAAMic,EAAG9H,WACb,OAAKnU,EAEEA,EAAI5J,UAAU5N,KAAKmG,SAAS6zD,YAFlB,IAGpB,CAEAU,cACG,IAAIC,EAAiB36D,KAAK8B,GAAGo5B,aAAattB,UACvC,wCAGH,IAAIssD,EAAal6D,KAAKm6D,WAClB3pD,EAAW,GAEf,GAAK0pD,EAUL,OARAA,EAAWl2D,SAAQ,CAACgK,EAAMpC,KACvB,IAAIgvD,EAAW,GACX5sD,EAAKssD,QACNM,EAAWD,EAAeE,SAAS7sD,EAAKssD,QAE3C,IAAIh9B,EAAO,CAAEz+B,GAAI+M,EAAQ,EAAGlJ,MAAOsL,EAAKtL,MAAO43D,MAAOM,GACtDpqD,EAASnM,KAAKi5B,EAAK,IAEf9sB,CACV,CAEAzI,QACG,IAAI0rB,EAAKzzB,KAAK4rB,eACd,OAAK6H,GAGOA,EAAG1rB,OAHC,IAOnB,oBC1IH,MAAM2wD,EAAkB,EAAQ,OAE1BoC,EAAyB,CAC5B/E,WAAY,KACZlsC,iBAAkB,CAAC,GAGhB4tC,EAAiB,CACpBrzD,IAAK,uBACLgH,KAAM,SACNyqD,SAAU,yBAGbt2D,EAAOC,QAAU,cAA6Ck5D,EAC3D/4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,GAEpD,MAAM13D,EAAI,IAAIwV,IAAWvV,KAAK8B,GAAGkP,aAAa7P,SAASoU,GAGvD,GAAIvV,KAAKynB,OAAOxU,GAAMA,aAAaylD,IAAiBxyD,OAAS,EAAG,CAC7DlG,KAAK0nB,OAAS,GAGd,MAAMqzC,EAAUj2D,EAAYwkB,QACzB,CACGllB,IAAKs0D,EAAgB1qB,SAAS5pC,IAC9BjD,MAAOpB,EAAE,MACTmH,KAAM,KACNf,SAAU,CACP60D,WAAW,IAGjBl2D,EACA9E,MAGHA,KAAK0nB,OAAOrjB,KAAK02D,GAGjB,MAAME,EAAYn2D,EAAYwkB,QAC3B,CACGllB,IAAKs0D,EAAgB1qB,SAAS5pC,IAC9BjD,MAAOpB,EAAE,QACTmH,KAAM,OACNf,SAAU,CACP60D,WAAW,IAGjBl2D,EACA9E,MAGHA,KAAK0nB,OAAOrjB,KAAK42D,EACpB,CACH,CAEArwC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOkwC,CACV,CAOAjD,gBACG,MAAO,EACV,oBCxEH,MAAMlC,EAAe,EAAQ,MAEvBuF,EAAmD,CACtDnF,WAAY,KACZpwD,MAAO,MAGJ8xD,EAAiB,CACpBrzD,IAAK,sBACLgH,KAAM,SACNyqD,SAAU,yBAGbt2D,EAAOC,QAAU,cAA0Cm2D,EACxDh2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOswC,CACV,CAUArD,gBACG,MAAO,EACV,oBC3BH,MAAMsD,EAAS,EAAQ,OAMjB1D,EAAiB,CACpBrzD,IAAK,gBACLgH,KAAM,UACNyqD,SAAU,aAGPuF,EAA8B,CACjCC,QAAS,EACTC,QAAS,EACTC,SAAS,EACTP,WAAW,GAGdz7D,EAAOC,QAAU,cAAkC27D,EAOhDx7D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOwwC,CACV,CAQAp1D,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASk1D,QAAU31C,SACrB1lB,KAAKmG,SAASk1D,SAAWD,EAA4BC,cAGpB,IAAzBr7D,KAAKmG,SAASm1D,SACtBt7D,KAAKmG,SAASm1D,QAAQ58D,KAAI,SAAU48D,GACjC,OAAO51C,SAAS41C,EACnB,IAG4B,MAA3Bt7D,KAAKmG,SAAS60D,UACfh7D,KAAKmG,SAAS60D,UAAYtnD,KAAKuD,MAAMjX,KAAKmG,SAAS60D,WAEnDh7D,KAAKmG,SAAS60D,UAAYI,EAA4BJ,UAG5B,MAAzBh7D,KAAKmG,SAASo1D,QACfv7D,KAAKmG,SAASo1D,QAAU7nD,KAAKuD,MAAMjX,KAAKmG,SAASo1D,SAEjDv7D,KAAKmG,SAASo1D,QAAUH,EAA4BG,OAE1D,CAEAC,sBAEG,OAAOx7D,KAAKynB,QAAQja,MAAK,CAACC,EAAGC,IACtBD,EAAE9M,SAAS86D,GAAK/tD,EAAE/M,SAAS86D,EAAUhuD,EAAE9M,SAASoM,EAAIW,EAAE/M,SAASoM,EACvDU,EAAE9M,SAAS86D,EAAI/tD,EAAE/M,SAAS86D,GAE5C,mBC7EH,IAAIz4C,EAAY,EAAQ,OAExB,MAAMy0C,EAAiB,CACpBrzD,IAAK,OACLgH,KAAM,kBACNyqD,SAAU,qBACV6F,QAAS,IAGNC,EAAkC,CACrCx6D,MAAO,IAGV5B,EAAOC,QAAU,cAAyBwjB,EAMvCrjB,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM,CAAC,SAAUgF,EAAYhD,IAE7B9B,KAAK82B,SAAW,GAGhB92B,KAAKmE,SAAWsiC,GAAiBgxB,EAEjCz3D,KAAK8E,YAAcA,EAEnB9E,KAAK0U,OAASA,GAAU,KAExB1U,KAAK47D,gBAAiB,EAItB57D,KAAK67D,eAAiB,GAItB77D,KAAKgG,WAAWN,EACnB,CAEAklB,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO+wC,CACV,CAUA/wC,mBAAmB9lB,EAAa4P,GAE7B,OAAO5P,EAAYwkB,QAChB,CAAEllB,IAAKpE,KAAKguC,SAAS5pC,KACrBU,EACA4P,EAEN,CAEAopB,UACG,OAAO99B,KAAKmE,SAASC,GACxB,CAEA03D,WACG,OAAO97D,KAAKmE,SAASiH,IACxB,CAEA2wD,UACG,OAAO/7D,KAAKmE,SAASu3D,OACxB,CAUA71D,QASG,IAAI2R,EAAM1X,MAAM+F,QAEZ8H,EAAS,CACV9O,GAAImB,KAAKnB,GACT8C,KAAM3B,KAAK2B,MAAQ,OACnByC,IAAKpE,KAAKoE,IACVgH,KAAMpL,KAAKoL,KACXswD,QAAS17D,KAAK07D,QACdx0D,KAAMlH,KAAKkH,KACXf,SAAUnG,KAAK8B,GAAG2D,UAAUzF,KAAKmG,UAAY,CAAC,GAC9C61D,aAAch8D,KAAKg8D,aACnBz2C,aAAc/N,EAAI+N,cAerB,OAXA5X,EAAOsuD,SAAWj8D,KAAK0nB,QAAU,IAAIhpB,KAAKuU,GAAMA,EAAEpU,KAAI+J,QAAQ/J,GAAOA,IACrE8O,EAAOsuD,QAAUtuD,EAAOsuD,QAAQn0C,OAAO9nB,KAAK67D,gBAExC77D,KAAKW,WAAUgN,EAAOhN,SAAWX,KAAKW,UAM1CgN,EAAOuuD,OAASl8D,KAAKk8D,SAEdvuD,CACV,CAQA3H,WAAWN,GAkDR,GAjDA1F,KAAKnB,GAAK6G,EAAO7G,GAIjBmB,KAAK2B,KAAO+D,EAAO/D,MAAQ,OAI3B3B,KAAKoE,IAAMsB,EAAOtB,KAAOpE,KAAK89B,UAK9B99B,KAAKoL,KAAO1F,EAAO0F,MAAQpL,KAAK87D,WAKhC97D,KAAK07D,QAAUh2D,EAAOg2D,SAAW17D,KAAK+7D,UAEtC/7D,KAAKkH,KAAOxB,EAAOwB,KAOnBxB,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCnG,KAAKmB,MAAQuE,EAAOvE,OAASuE,EAAOS,SAAShF,OAAS,UAEtDnB,KAAKmG,SAAWT,EAAOS,UAAY,CAAC,EAKpCnG,KAAKmG,SAASrF,OAAS4kB,SAAS1lB,KAAKmG,SAASrF,QAAU,GAExDd,KAAKg8D,aAAet2D,EAAOs2D,cAAgB,CAAC,EAQ5Cl8D,MAAMkG,WAAWN,IAIZ1F,KAAKkH,MAAQ8F,MAAMC,QAAQjN,KAAKulB,cAClC,IAAK,IAAIrS,EAAI,EAAGA,EAAIlT,KAAKulB,aAAarf,OAAQgN,IAK3C,GAJS,GAALA,IAEDlT,KAAKkH,KAAOlH,KAAKulB,aAAarS,GAAG/R,OAEM,MAAtCnB,KAAKulB,aAAarS,GAAGwsB,cAAuB,CAE7C1/B,KAAKkH,KAAOlH,KAAKulB,aAAarS,GAAG/R,MACjC,KACH,CAKY,WAAdnB,KAAKmB,OACFnB,KAAK0U,SACN1U,KAAKmB,MAAQnB,KAAK0U,OAAOvT,MAAQ,IAAMnB,KAAKmE,SAASC,KAI3D,IAAIqjB,EAAQ,GACZznB,KAAK67D,eAAiB77D,KAAK67D,gBAAkB,IAC5Cn2D,EAAOu2D,SAAW,IAAIj4D,SAASnF,IAC7B,IAAI8iB,EAAM3hB,KAAK8B,GAAG2iB,eAAe5lB,GAC7B8iB,EACD8F,EAAMpjB,KAAKrE,KAAK8E,YAAYwkB,QAAQ3H,EAAK3hB,KAAK8E,YAAa9E,OAE3DA,KAAK67D,eAAex3D,KAAKxF,EAC5B,IAEHmB,KAAK0nB,OAASD,EAGdznB,KAAKW,SAAW+E,EAAO/E,UAAY,CAAC,EAEb,MAAnBX,KAAKW,SAASoM,IAAW/M,KAAKW,SAASoM,EAAI2Y,SAAS1lB,KAAKW,SAASoM,IAC/C,MAAnB/M,KAAKW,SAAS86D,IAAWz7D,KAAKW,SAAS86D,EAAI/1C,SAAS1lB,KAAKW,SAAS86D,IAEtEz7D,KAAKW,SAASw7D,GAAKz2C,SAAS1lB,KAAKW,SAASw7D,IAAM,GAChDn8D,KAAKW,SAASy7D,GAAK12C,SAAS1lB,KAAKW,SAASy7D,IAAM,EACnD,CAEAF,SACG,OAAsB,MAAfl8D,KAAK0U,QAAkB1U,KAAK0U,QAAU1U,KAAK8E,WACrD,CAOAu3D,aACG,IAAIC,EAAU,GACVC,EAAUv8D,KAKd,IAFAs8D,EAAQlpC,QAAQmpC,IAERA,EAAQL,UAAYK,EAAQ7nD,QACjC4nD,EAAQlpC,QAAQmpC,EAAQ7nD,QAExB6nD,EAAUA,EAAQ7nD,OAGrB,OAAO4nD,CACV,CAUA92C,qBAAqB1W,GAClB,IAAI2W,GAAY,EAEZ+2C,EAAkBn9D,OAAOD,KAAKY,KAAKg8D,eAAiB,GAOxD,OANCltD,GAAS,IAAI9K,SAASuL,IAChBitD,EAAgBtvD,QAAQqC,EAAEC,MAAQD,IAAM,IACzCkW,GAAY,EACf,IAGIA,CACV,CASAg3C,gBAEG,IAAIC,EAAc,EAElB,GAAI18D,KAAK8E,YAAY+e,gBAAiB,CAEnC,IAAI84C,GAAkB,EAEmC,GAArDj3C,SAAS1lB,KAAK8E,YAAYgf,eAAe6B,UAE1C3lB,KAAK8B,GAAG2Q,QAAQ3D,QAAQ9K,SAAS4hB,IAE3B5lB,KAAK8E,YAAYgf,eAAe8B,KAAK1Y,QAClC0Y,EAAK/mB,IAAM+mB,EAAKpW,OACd,IAGLmtD,GAAkB,EAClBD,EAAc,EACjB,IAKFC,GACuD,GAAxDj3C,SAAS1lB,KAAK8E,YAAYgf,eAAeqmC,aAItCnqD,KAAK8E,YAAYgf,eAAesmC,QAAQl9C,QACrClN,KAAK8B,GAAG2Q,QAAQjD,OAAS,KACvB,IAGLmtD,GAAkB,EAClBD,EAAc,GAMjB18D,KAAKg8D,cACL38D,OAAOD,KAAKY,KAAKg8D,cAAc91D,OAAS,IACvCy2D,GAGD38D,KAAK8B,GAAG2Q,QAAQ3D,QAAQ9K,SAAS4hB,IAC9B,IAAIg3C,EAAc58D,KAAKg8D,aAAap2C,EAAK/mB,IAAM+mB,EAAKpW,MAChDotD,GAAel3C,SAASk3C,GAAeF,IAExCA,EAAch3C,SAASk3C,GAAY,GAG/C,MACGF,EAAc,EAGjB,OAAOA,CACV,CAMAG,sBAIG,IAHA,IAAI7yD,EAAO,KAEPiwB,EAAOj6B,KACQ,QAAZi6B,EAAK71B,MAAkB61B,EAAKiiC,UAAYjiC,EAAKvlB,QACjDulB,EAAOA,EAAKvlB,OAOf,MAJgB,QAAZulB,EAAK71B,MACN4F,EAAOiwB,GAGHjwB,CACV,CAOA8yD,wBAIG,IAHA,IAAIC,EAAS,KAET9iC,EAAOj6B,KACQ,UAAZi6B,EAAK71B,MAAoB61B,EAAKiiC,UAAYjiC,EAAKvlB,QACnDulB,EAAOA,EAAKvlB,OAOf,MAJgB,UAAZulB,EAAK71B,MACN24D,EAAS9iC,GAGL8iC,CACV,CAEAC,WAAWC,GAIR,GAHgB,MAAZA,IAAkBA,EAAW,KAAM,GAGnCj9D,KAAKk8D,SACN,OAAOl8D,KAIV,IADA,IAAIk9D,EAAal9D,KAAK0U,OAEnBwoD,IACmB,QAAlBA,EAAW94D,MAAkB64D,EAASC,KAEvCA,EAAaA,EAAWxoD,OAG3B,OAAOwoD,CACV,CAEAC,WAGG,IAFA,IAAIC,EAAWp9D,KAAKg9D,cAEZI,EAASlB,UACdkB,EAAWA,EAASJ,aAGvB,OAAOI,CACV,CASAz0C,aACG,OAAI3oB,KAAK0U,OACC1U,KAAK0U,OAAO2oD,UAAYr9D,KAAKnB,GAE7BmB,KAAK8E,YAAYgkB,UAAY9oB,KAAKnB,EAE/C,CAOAw+D,UACG,OAAOr9D,KAAK2oB,aAAe,UAC9B,CAQIiD,qBACD,IAAImqC,GAAc/1D,KAAKmG,UAAY,CAAC,GAAG4vD,WACvC,IAAKA,EAAY,CACd,GACG,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,QAAS,UAAU7oD,QACxDlN,KAAKoE,MACH,EACN,CAEC,GAAgB,QAAZpE,KAAKoE,KAAiBpE,KAAKiD,eAAgB,OAAO,KAEtD,GAAIjD,KAAK47D,eAAgB,OAAO,KAEhC,IAAI0B,EAAY,IAAIp+D,MACjB,yCAAyCc,KAAKoE,oCAEjDpE,KAAK8B,GAAGqG,OAAO8uB,QAAQqmC,EAAW,CAC/B58D,KAAMV,KACNmG,SAAUnG,KAAKmG,UAErB,MAKY,GAFN,CAAC,SAAU,QAAS,OAAQ,MAAO,iBAAiB+G,QACjDlN,KAAKoE,MAGRkE,QAAQC,KACL,yDAAyDvI,KAAKoE,QAIvE,OAAO,IACV,CAEA,IAAIwoB,EAAK5sB,KAAK8B,GAAGiqB,mBAAmBgqC,GACpC,IAAKnpC,EAAI,CACN,IAAI2wC,EAAU,IAAIr+D,MACf,QAAQc,KAAKmB,UAAUnB,KAAKnB,mDAE/BmB,KAAK8B,GAAGqG,OAAO8uB,QAAQsmC,EAAS,CAC7B78D,KAAMV,KACN+1D,cAEN,CACA,OAAOnpC,CACV,CAiBA4wC,mBAAmBC,EAAQf,GAOxB,OAN6B,GAAzBh3C,SAASg3C,GACN18D,KAAKg8D,aAAayB,WAAgBz9D,KAAKg8D,aAAayB,GAExDz9D,KAAKg8D,aAAayB,GAAUf,EAGxB18D,KAAK2H,MAAK,GAAO,EAC3B,CAiBA8f,MAAM7e,EAAS,MAAM,GAAMwe,GAAO,GAC/B,IAAIzZ,EAAS,GAEb,OAAK3N,KAAK0nB,QAAU1nB,KAAK0nB,OAAOxhB,OAAS,IAGrC0C,GAAUwe,GACXzZ,EAASA,EAAOma,OAAO9nB,KAAK0nB,OAAO9e,OAAOA,IAE1C5I,KAAK0nB,OAAO1jB,SAASiP,IAClB,IAAI0U,EAAW1U,EAAEwU,MAAM7e,EAAQwe,GAC3BO,GAAYA,EAASzhB,OAAS,IAC/ByH,EAASA,EAAOma,OAAOH,GAC1B,KAGHha,EAAS3N,KAAK0nB,OAAO9e,OAAOA,IAboB+E,CAiBtD,CAQA2b,QAAQ5jB,EAAQZ,EAAa4P,GAC1B,OAAO1U,KAAK8E,YAAYwkB,QACrB5jB,EACAZ,GAAe9E,KAAK8E,YACpB4P,GAAU1U,KAEhB,CAUA09D,YAAYh9D,GAET,OADA4H,QAAQ6G,MAAM,sCACPnP,KAAK29D,WAAWj9D,EAC1B,CAUAi9D,WAAWj9D,GACR,IAAIokC,EAAU9kC,KAAK0nB,OAAOxhB,OAK1B,OAJAlG,KAAK0nB,OAAS1nB,KAAKynB,OAAM,SAAUxU,GAChC,OAAOA,EAAEpU,IAAM6B,EAAK7B,EACvB,IAEImB,KAAK0nB,OAAOxhB,OAAS4+B,EACf9kC,KAAK2H,OAGR0H,QAAQ/P,SAClB,CAUAs+D,WAAWl9D,GAKR,OAHGV,KAAKynB,OAAM,SAAUxU,GAClB,OAAOA,EAAEpU,IAAM6B,EAAK7B,EACvB,IAAGqH,OAAS,EAMRmJ,QAAQ/P,WAJZU,KAAK0nB,OAAOrjB,KAAK3D,GACVV,KAAK2H,OAIlB,CAWAk2D,YAAYC,EAAQC,GACjB,IAAItyB,EAAOzrC,KAAK0nB,OAAO2yC,WAAWpnD,GAAMA,EAAEpU,IAAMi/D,IAChD,KAAIryB,EAAO,GAMX,OAHAzrC,KAAK0nB,OAAO1b,OAAO+xD,EAAY,EAAG/9D,KAAK0nB,OAAO1b,OAAOy/B,EAAM,GAAG,IAGvDzrC,KAAK2H,MAAK,EACpB,CAaA4M,UAIG,OAFAvU,KAAK+2B,YAAW,GAET1nB,QAAQ/P,UACX6U,MAAK,KAKH,IAAI6pD,EAAiB,GACjBh2C,EAAWhoB,KAAKynB,QAQpB,OAPAznB,KAAK0nB,OAAS,GAIdM,EAAShkB,SAASiP,IACf+qD,EAAe35D,KAAK4O,EAAEsB,UAAU,IAE5BlF,QAAQkS,IAAIy8C,EAAe,IAEpC7pD,MAAK,KAEH,GAAInU,KAAK0U,SAAW1U,KAAK6lB,MACtB,OAAO7lB,KAAK0U,OAAOipD,WAAW39D,KACjC,IAEFmU,MAAK,IACIrU,MAAMyU,YAEfJ,MAAK,KACHnU,KAAKoP,KAAK,YAAY,GAE/B,CAQAzH,OACG,OAAO0H,QAAQ/P,UACX6U,MAAK,IAEIrU,MAAM6H,SAEfwM,MAAK,KAEH,GAAInU,KAAK0U,SAAW1U,KAAK6lB,MAGtB,OAAO7lB,KAAK0U,OAAOkpD,WAAW59D,KACjC,IAEFmU,MAAK,IACInU,MAEhB,CAiBAoyB,SAASyE,GACN,GAAKA,GAAQA,EAAIxE,SAAYwE,EAAItE,SAAjC,CAEA,IAAIzF,EAAS9sB,KAAK82B,SAAS9J,MAAM/tB,GACvBA,EAAEozB,SAAWwE,EAAIxE,SAAWpzB,EAAEqzB,WAAauE,EAAIvE,cAIpDxF,GAAUA,EAAO5mB,OAAS,KAE5BlG,KAAK82B,SAASzyB,KAAK,CAChBguB,QAASwE,EAAIxE,QACbC,UAAWuE,EAAIvE,UACfC,SAAUsE,EAAItE,WAIjBsE,EAAIxE,QAAQlwB,GAAG00B,EAAIvE,UAAWuE,EAAItE,UAhBY,CAkBpD,CASAwE,WAAW3P,GACJA,GACDpnB,KAAKynB,QAAQzjB,SAASiP,IACnBA,EAAE8jB,WAAW3P,EAAK,IAIpBpnB,KAAK82B,UAAY92B,KAAK82B,SAAS5wB,OAAS,GACzClG,KAAK82B,SAAS9yB,SAAS/E,IACpBA,EAAEozB,QAAQ2E,eAAe/3B,EAAEqzB,UAAWrzB,EAAEszB,SAAS,GAG1D,CAkBAgE,MAAM0nC,EAAWvpD,EAAQxS,EAAU,CAAC,GACjC+7D,EAAYA,GAAa,CAAC,EAG1B,IAAIj8D,EAAShC,KAAK6F,QAGlB,CAAC,QAAS,SAAS7B,SAAS8iC,WAClB9kC,EAAO8kC,EAAK,IAIlB9mC,KAAKk+D,wBACLl+D,KAAKk+D,yBAA2B,IAAIl6D,SAAS8iC,IACvC9kC,GAAUA,EAAOmE,WAClBnE,EAAOmE,SAAS2gC,GAAQm3B,EAAUj8D,EAAOmE,SAAS2gC,IAAM,IAKjE,IAAIn5B,EAAS3N,KAAKspB,QAAQtnB,EAAQhC,KAAK8E,YAAa4P,GA+BpD,OA1BG/G,EAAO9O,GAFI,MAAV6V,EAEW,KAEAupD,EAAUtwD,EAAO9O,KAAOmB,KAAK8B,GAAG0N,OAI3CxP,KAAK6lB,QAAU3jB,EAAQi8D,iBACxBxwD,EAAOkX,OAAS,GAChB7kB,KAAK6lB,QAAQ7hB,SAASge,IACnB,IAAIo8C,EAAgBp8C,EAAEuU,MAAM0nC,EAAWtwD,EAAQzL,GAC/Ck8D,EAAc1pD,OAAS/G,EAEvBA,EAAOkX,OAAOxgB,KAAK+5D,EAAc,KAKnCp+D,KAAKynB,QAAUvlB,EAAQm8D,iBACxB1wD,EAAO+Z,OAAS,GAChB1nB,KAAKynB,QAAQzjB,SAASiP,IACnB,IAAIqrD,EAAarrD,EAAEsjB,MAAM0nC,EAAWtwD,EAAQzL,GAE5CyL,EAAO+Z,OAAOrjB,KAAKi6D,EAAW,KAI7B3wD,CACV,CAsBA4wD,KAAKN,EAAWvpD,EAAQxS,EAAU,CAAC,GAChC+7D,EAAYA,GAAa,CAAC,EAG1B,IAAIj8D,EAAShC,KAAK6F,QAGlB,CAAC,UAAW,WAAW7B,SAAS8iC,WACtB9kC,EAAO8kC,EAAK,IAIlB9mC,KAAKk+D,wBACLl+D,KAAKk+D,yBAA2B,IAAIl6D,SAAS8iC,IACvC9kC,GAAUA,EAAOmE,WAClBnE,EAAOmE,SAAS2gC,GAAQm3B,EAAUj8D,EAAOmE,SAAS2gC,IAAM,IAKjE,IAAIn5B,EAAS3N,KAAK8E,YAAYwkB,QAAQtnB,EAAQhC,KAAK8E,YAAa4P,GAuBhE,OApBA/G,EAAO+G,OAASA,GAAU1U,KAAK0U,OAM5B/G,EAAO9O,GAHI,MAAV6V,EAGW,KAEAupD,EAAUtwD,EAAO9O,KAAOmB,KAAK8B,GAAG0N,OAI/B,QAAZxP,KAAKoE,MACNuJ,EAAOzG,KACJhF,GAASs8D,SACT,GAAG7wD,EAAOzG,eAAelH,KAAK8B,GAAG0N,OAAOuD,MAAM,EAAG,KAEpDpF,EAAOxM,MAAQe,GAASs8D,SAAW,GAAG7wD,EAAOxM,kBAGzCkO,QAAQ/P,UACX6U,MAAK,KAEH,IAAIsqD,EAAW,GA4Bf,OA1BIz+D,KAAK6kB,SAAW3iB,EAAQi8D,iBACzBxwD,EAAOkX,OAAS,GAChB7kB,KAAK6lB,QAAQ7hB,SAASge,IAGfA,EAAEk6C,UACHl8D,KAAK8E,YAAY+f,OAAOxgB,KAAK,CAAExF,GAAIo/D,EAAUj8C,EAAEnjB,MAElD4/D,EAASp6D,KACN2d,EACIu8C,KAAKN,EAAWtwD,EAAQzL,GACxBiS,MAAMiqD,IACJA,EAAc1pD,OAAS/G,EAEvB3N,KAAK8E,YAAY+f,OACd7kB,KAAK8E,YAAY+f,OAAOjc,QACpB81D,GAAOA,EAAG7/D,IAAMo/D,EAAUj8C,EAAEnjB,MAInC8O,EAAOkX,OAAOxgB,KAAK+5D,EAAc,IAEzC,KAIA/uD,QAAQkS,IAAIk9C,EAAS,IAE9BtqD,MAAK,KAEH,IAAIsqD,EAAW,GAsBf,OApBIz+D,KAAK0nB,SAAWxlB,EAAQm8D,iBACzB1wD,EAAO+Z,OAAS,GAChB1nB,KAAKynB,QAAQzjB,SAASiP,IACnBwrD,EAASp6D,KAGN4O,EAAEsrD,KAAKN,EAAWtwD,EAAQzL,GAASiS,MAAMmqD,IAInC3wD,EAAO+Z,OAAO9e,QAAQ+1D,GAAOA,EAAG9/D,IAAMy/D,EAAWz/D,KAC7CqH,OAAS,GAEbyH,EAAO+Z,OAAOrjB,KAAKi6D,EACtB,IAEL,KAIAjvD,QAAQkS,IAAIk9C,EAAS,IAE9BtqD,MAAK,IAEIxG,EAAOhG,SAEhBwM,MAAK,IACIxG,GAEhB,oBC18BH,MAAMgoD,EAAe,EAAQ,MAEvBiJ,EAA4C,CAC/C7I,WAAY,KACZpwD,MAAO,KACPk5D,SAAU,WACVC,WAAY,EACZC,SAAU,GAGPtH,EAAiB,CACpBrzD,IAAK,cACLgH,KAAM,SACNyqD,SAAU,eAGbt2D,EAAOC,QAAU,cAAmCm2D,EACjDh2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOg0C,CACV,CAYA54D,WAAWN,GACR5F,MAAMkG,WAAWN,EACpB,CAMAmyD,gBACG,MAAO,EACV,oBCjDH,MAAMmH,EAAe,EAAQ,OAEvBC,EAA0C,CAC7CC,OAAQ,EACR7H,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,QAAS,IAGN2H,EAAyB,CAC5B/6D,IAAK,WACLgH,KAAM,KACNyqD,SAAU,aAGbt2D,EAAOC,QAAU,cAAiCw/D,EAM/Cr/D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiB04B,EAEvB,CAEAv0C,gBACG,OAAOu0C,CACV,CAEAv0C,uBACG,OAAOq0C,CACV,CAYAj5D,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS+4D,OAASx5C,SACpB1lB,KAAKmG,SAAS+4D,QAAUD,EAAwCC,QAEnEl/D,KAAKmG,SAASkxD,YACXr3D,KAAKmG,SAASkxD,aACd4H,EAAwC5H,YAC3Cr3D,KAAKmG,SAASoxD,SACXv3D,KAAKmG,SAASoxD,UACd0H,EAAwC1H,SAC3Cv3D,KAAKmG,SAASmxD,WACXt3D,KAAKmG,SAASmxD,YACd2H,EAAwC3H,WAC3Ct3D,KAAKmG,SAASqxD,QACXx3D,KAAKmG,SAASqxD,SACdyH,EAAwCzH,OAC9C,CAEAsF,wBACG,IAAIsC,EAAW,KAEXnlC,EAAOj6B,KACX,KAAmB,YAAZi6B,EAAK71B,MAAsB61B,EAAKiiC,UAAYjiC,EAAKvlB,QACrDulB,EAAOA,EAAKvlB,OAOf,MAJgB,YAAZulB,EAAK71B,MACNg7D,EAAWnlC,GAGPmlC,CACV,oBClFH,MAAMnnC,EAAmB,EAAQ,OAE3BonC,EAAgD,CAAC,EAEjDC,EAA+B,CAClCl7D,IAAK,iBACLgH,KAAM,iBACNyqD,SAAU,iCAGbt2D,EAAOC,QAAU,cAAuCy4B,EAMrDt4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiB64B,EAEvB,CAEA10C,gBACG,OAAO00C,CACV,CAEA10C,uBACG,OAAOy0C,CACV,oBC9BH,MAAMpnC,EAAmB,EAAQ,OAE3BsnC,EAAwC,CAC3CC,SAAU,IAGP/H,EAAiB,CACpBrzD,IAAK,gBACLgH,KAAM,UACNyqD,SAAU,gCAGbt2D,EAAOC,QAAU,cAAsCy4B,EAMpDt4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO20C,CACV,oBC7BH,MAAM7G,EAAkB,EAAQ,OAE1B+G,EAAuB,CAC1Br7D,IAAK,SACLgH,KAAM,cACNyqD,SAAU,UAGP0J,EAAwC,CAC3CxJ,WAAY,KACZiB,WAAW,EACXgC,cAAe,OACfn3D,WAAY,IACZf,OAAQ,GAGXvB,EAAOC,QAAU,cAA+Bk5D,EAM7C/4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBg5B,EACvD,CAEA70C,gBACG,OAAO60C,CACV,CAEA70C,uBACG,OAAO20C,CACV,CAQAv5D,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS6yD,cACXh5D,KAAKmG,SAAS6yD,eACduG,EAAsCvG,cAGzCh5D,KAAKmG,SAAS6wD,UAAYtjD,KAAKuD,MACD,MAA3BjX,KAAKmG,SAAS6wD,UACTh3D,KAAKmG,SAAS6wD,UACduI,EAAsCvI,WAI9Ch3D,KAAKmG,SAAStE,WAAa6jB,SACxB1lB,KAAKmG,SAAStE,YACX09D,EAAsC19D,YAE5C7B,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QAAUy+D,EAAsCz+D,OAEpE,CAMA+2D,gBACG,IAAIsB,EAAe,CAAC,QAAS,QAG7B,OAFmBn5D,KAAK8E,YAAYijB,UAEfnf,QAAQtF,GACnB61D,EAAajsD,QAAQ5J,EAAE0qC,SAAS5pC,MAAQ,GAErD,CAEAs7D,iBAAiB/5D,EAAOg6D,GACrB,GAAa,MAATh6D,EAAe,OAEnB,IAAIyjB,EAAUzjB,EAAMi6D,kBAAkBC,YAAY7/D,KAAK8E,YAAa9E,MACpE,OAAe,MAAXopB,GAGJA,EAAQjjB,SAAWijB,EAAQjjB,UAAY,CAAC,EACxCijB,EAAQjjB,SAASoE,QAAU5E,EAAM9G,GACjCuqB,EAAQjjB,SAAStE,WACd7B,KAAKmG,SAAStE,YACd09D,EAAsC19D,WAIzCunB,EAAQjjB,SAAS0pB,MAAQlqB,EAAMkqB,MAI/BzG,EAAQzoB,SAAS86D,EAAIkE,EAGrB3/D,KAAK0nB,OAAOrjB,KAAK+kB,GAEVA,QApBP,CAqBH,oBCtGH,MAAM6O,EAAmB,EAAQ,OAE3B6nC,EAA8C,CAAC,EAE/CC,EAA6B,CAChC37D,IAAK,eACLgH,KAAM,eACNyqD,SAAU,+BAGbt2D,EAAOC,QAAU,cAAqCy4B,EAMnDt4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBs5B,EAEvB,CAEAn1C,gBACG,OAAOm1C,CACV,CAEAn1C,uBACG,OAAOk1C,CACV,oBC/BH,MAAM7nC,EAAmB,EAAQ,OAE3B+nC,EAA6C,CAChDl/D,OAAQ,GACRC,MAAO,KAGJk/D,EAA4B,CAC/B77D,IAAK,cACLgH,KAAM,QACNyqD,SAAU,8BAGbt2D,EAAOC,QAAU,cAAoCy4B,EAMlDt4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBw5B,EAEvB,CAEAr1C,gBACG,OAAOq1C,CACV,CAEAr1C,uBACG,OAAOo1C,CACV,CAYAh6D,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QACXk/D,EAA2Cl/D,QAEjDd,KAAKmG,SAASpF,MAAQ2kB,SACnB1lB,KAAKmG,SAASpF,OAASi/D,EAA2Cj/D,MAExE,oBCzDH,MAAM40D,EAAe,EAAQ,MAE7Bp2D,EAAOC,QAAU,cAAmCm2D,EAKjDiK,kBACG,IAAIM,EAAa,KAEbjmC,EAAOj6B,KACX,MACIi6B,EAAKiiC,UACNjiC,EAAKvlB,QACO,UAAZulB,EAAK71B,KACO,YAAZ61B,EAAK71B,KAEL61B,EAAOA,EAAKvlB,OAOf,MAJgB,UAAZulB,EAAK71B,KAA+B,YAAZ61B,EAAK71B,MAC9B87D,EAAajmC,GAGTimC,CACV,CAEAv6D,QACG,IAAIi6D,EAAkB5/D,KAAK4/D,kBAC3B,GAAuB,MAAnBA,EAAyB,OAAO,KAEpC,IAAIh0C,EAAiBg0C,EAAgBh0C,eACrC,GAAsB,MAAlBA,EAAwB,OAAO,KAEnC,IAAI5mB,EAAS4mB,EAAeD,WAC5B,GAAc,MAAV3mB,EAAgB,OAAO,KAE3B,IAAIW,EAAQX,EAAO8B,QAAQmM,GAAMA,EAAEpU,IAAMmB,KAAKmG,SAASoE,UAAS,GAQhE,OAJI5E,GAAS3F,KAAKmG,SAAS0pB,QACxBlqB,EAAMkqB,MAAQ7vB,KAAKmG,SAAS0pB,OAGxBlqB,CACV,CAEAw6D,iBACG,IAAIC,EAAYpgE,KAAK4/D,kBACrB,IAAKQ,EAAW,OAAO,KAEvB,IAAI3sC,EAAK2sC,EAAUx0C,eACnB,IAAK6H,EAAI,OAAO,KAEhB,IAAI9tB,EAAQ3F,KAAK2F,QACjB,IAAKA,EAAO,OAAO,KAEnB,IAAIupB,EAAWuE,EAAGjH,YAClB,OAAI0C,EAAiBA,EAASvpB,EAAMkB,YACxB,IACf,CAMAgxD,gBACG,MAAO,EACV,CAQIjsC,qBACD,OAAO,IACV,oBC/EH,MAAMqM,EAAmB,EAAQ,OAE3BooC,EAA4C,CAC/Cv/D,OAAQ,GAGLw/D,EAA2B,CAC9Bl8D,IAAK,aACLgH,KAAM,OACNyqD,SAAU,6BAGbt2D,EAAOC,QAAU,cAAmCy4B,EAMjDt4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiB65B,EAEvB,CAEA11C,gBACG,OAAO01C,CACV,CAEA11C,uBACG,OAAOy1C,CACV,CAYAr6D,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QACXu/D,EAA0Cv/D,OAEnD,oBCrDH,MAAMm3B,EAAmB,EAAQ,OAE3BsnC,EAAwC,CAAC,EAEzCgB,EAA2B,CAC9Bn8D,IAAK,aACLgH,KAAM,UACNyqD,SAAU,6BAGbt2D,EAAOC,QAAU,cAAmCy4B,EAMjDt4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiB85B,EAEvB,CAEA31C,gBACG,OAAO21C,CACV,CAEA31C,uBACG,OAAO20C,CACV,oBC/BH,MAAM5J,EAAe,EAAQ,MAEvB6K,EAA6C,CAChDC,YAAa,gBACb1K,WAAY,KACZh1D,MAAO,EACPggD,SAAU,GACV2f,UAAW,cACX7wD,SAAU,KACV8wD,kBAAmB,wBACnBC,eAAgB,QAGbnJ,EAAiB,CACpBrzD,IAAK,cACLgH,KAAM,cACNyqD,SAAU,gBAGbt2D,EAAOC,QAAU,cAAoCm2D,EAClDh2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO41C,CACV,CAcA36D,QACG7F,KAAK4/B,YAAY5/B,KAAMA,KAAM,CAAC,YAAa,gBAE3C,IAAIwX,EAAM1X,MAAM+F,QAEhB,OADA2R,EAAIykD,QAAU,GACPzkD,CACV,CAQAxR,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASpF,MAAQ2kB,SACnB1lB,KAAKmG,SAASpF,OAASy/D,EAA2Cz/D,OAGrEf,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,YAAa,eAC5C,CAEA6gE,YAIG,MAAM77D,EAAShF,KAAK4rB,eAAeD,WAG7BhmB,EAAQX,EAASA,EAAO8B,SAAS,GAAK,KAE5C,MAAO,gBAAgB9B,GAAQnG,MAAM8G,GAAO9G,MAC/C,CAEAiiE,cACG,MAAO,SAAS9gE,KAAKmG,SAAS46C,UACjC,CAEIjxC,mBACD,OACG9P,KAAKmG,SAAS0J,UACd2wD,EAA2C3wD,QAEjD,CAEIoW,sBACD,IAAI8vC,GAAc/1D,KAAKmG,UAAY,CAAC,GAAG4vD,WACvC,IAAKA,EAAY,MAAO,GAExB,IAAIgL,EAAShL,EAAWvtC,MAAM,MAAQ,GAEtC,OAAOxoB,KAAK8B,GAAGmkB,iBAAiBwN,GAAOstC,EAAO7zD,QAAQumB,EAAG50B,KAAO,KAAM,EACzE,oBCnGH,MAAMs8D,EAAS,EAAQ,OAEjB6F,EAA4C,CAC/CC,aAAa,EACbC,UAAW,GACXC,eAAe,EACfC,YAAa,GACbC,cAAc,EACdC,WAAY,GACZC,YAAa,KACbC,UAAW,QACXC,WAAW,GAGRC,EAA2B,CAC9Bt9D,IAAK,SAGLgH,KAAM,SAGNyqD,SAAU,wBAIbt2D,EAAOC,QAAU,cAAmC27D,EACjDx7D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBi7B,EAEvB,CAEA92C,gBACG,OAAO82C,CACV,CAEA92C,uBACG,OAAOo2C,CACV,CAMAn7D,QAEG,IAAIsM,EAAS,GAYb,OAVInS,KAAKmG,SAAS+6D,WAAW/uD,EAAO9N,KAAK,aAErCrE,KAAKmG,SAASi7D,aAAajvD,EAAO9N,KAAK,eAEvCrE,KAAKmG,SAASm7D,YAAYnvD,EAAO9N,KAAK,cAE1CrE,KAAK4/B,YAAY5/B,KAAKmG,SAAUnG,KAAKmG,SAAUgM,GAElCrS,MAAM+F,OAGtB,CAQI+lB,qBACD,OAAO,IACV,CAEA5lB,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB,IAAIyM,EAAS,GAETnS,KAAKmG,SAAS+6D,WAAW/uD,EAAO9N,KAAK,aAErCrE,KAAKmG,SAASi7D,aAAajvD,EAAO9N,KAAK,eAEvCrE,KAAKmG,SAASm7D,YAAYnvD,EAAO9N,KAAK,cAE1CrE,KAAK4/B,YAAY5/B,KAAKmG,SAAUnG,KAAKmG,SAAUgM,GAE/CnS,KAAKmG,SAAS86D,YAAcvtD,KAAKuD,MAC9BjX,KAAKmG,SAAS86D,aACXD,EAA0CC,aAEhDjhE,KAAKmG,SAASg7D,cAAgBztD,KAAKuD,MAChCjX,KAAKmG,SAASg7D,eACXH,EAA0CG,eAEhDnhE,KAAKmG,SAASk7D,aAAe3tD,KAAKuD,MAC/BjX,KAAKmG,SAASk7D,cACXL,EAA0CK,cAGhDrhE,KAAKmG,SAASs7D,UAAY/tD,KAAKuD,MAC5BjX,KAAKmG,SAASs7D,WACXT,EAA0CS,UAEnD,CAMA5J,gBACG,MAAO,EACV,oBCjHH,MAAM3/B,EAAiB,EAAQ,OAEzBypC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCx9D,IAAK,WACLgH,KAAM,iBACNyqD,SAAU,0BAGbt2D,EAAOC,QAAU,cAAqC04B,EACnDv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBm7B,EAEvB,CAEAh3C,gBACG,OAAOg3C,CACV,CAEAh3C,uBACG,OAAO+2C,CACV,CAMA9J,gBACG,MAAO,EACV,oBClCH,MAAM3/B,EAAiB,EAAQ,OAEzB2pC,EAA6C,CAChDrC,SAAU,GACV31C,iBAAkB,CAEfC,KAAM,MACNzI,MAAO,IAEVjV,WAAY,GAQZ01D,WAAY,IACZC,YAAa,KAGVC,EAA4B,CAC/B59D,IAAK,UACLgH,KAAM,UACNyqD,SAAU,WAGbt2D,EAAOC,QAAU,cAAoC04B,EAClDv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBu7B,EAEvB,CAEAp3C,gBACG,OAAOo3C,CACV,CAEAp3C,uBACG,OAAOi3C,CACV,CAYA77D,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS0jB,iBACX7pB,KAAKmG,SAAS0jB,kBACdg4C,EAA2Ch4C,gBACjD,CAMAguC,gBACG,MAAO,EACV,oBCrEH,MAAMa,EAAkB,EAAQ,OAC1BxgC,EAAiB,EAAQ,OAEzBg+B,EAAe,EAAQ,OACvB+L,EAAe,EAAQ,OAEvBC,EAAqB,CACxB99D,IAAK,OACLgH,KAAM,WACNyqD,SAAU,QAGPsM,EAAsC,CACzCpM,WAAY,KACZiB,WAAW,EACXgC,cAAe,OACfn3D,WAAY,IACZf,OAAQ,IACRshE,aAAa,EACbC,aAAa,EACbC,aAAc,GACdC,SAAU,OAkBVjM,YAAa,GAabkM,YAAa,IAGhBjjE,EAAOC,QAAU,cAA6Bk5D,EAC3C/4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBy7B,EACvD,CAEAt3C,gBACG,OAAOs3C,CACV,CAEAt3C,uBACG,OAAOu3C,CACV,CAYAn8D,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS6yD,cACXh5D,KAAKmG,SAAS6yD,eACdmJ,EAAoCnJ,cAGvCh5D,KAAKmG,SAAS6wD,UAAYtjD,KAAKuD,MACD,MAA3BjX,KAAKmG,SAAS6wD,UACTh3D,KAAKmG,SAAS6wD,UACdmL,EAAoCnL,WAE5Ch3D,KAAKmG,SAASi8D,YAAc1uD,KAAKuD,MACD,MAA7BjX,KAAKmG,SAASi8D,YACTpiE,KAAKmG,SAASi8D,YACdD,EAAoCC,aAE5CpiE,KAAKmG,SAASk8D,YAAc3uD,KAAKuD,MACD,MAA7BjX,KAAKmG,SAASk8D,YACTriE,KAAKmG,SAASk8D,YACdF,EAAoCE,aAI5CriE,KAAKmG,SAAStE,WAAa6jB,SACI,MAA5B1lB,KAAKmG,SAAStE,WACTsgE,EAAoCtgE,WACpC7B,KAAKmG,SAAStE,YAEtB7B,KAAKmG,SAASrF,OAAS4kB,SACI,MAAxB1lB,KAAKmG,SAASrF,OACTqhE,EAAoCrhE,OACpCd,KAAKmG,SAASrF,OAEzB,CAGAiE,WAAWC,GACRhF,KAAKiD,eAAiB+B,CACzB,CAMA6yD,gBACG,IAAIsB,EAAe,CAAC,QAAS,SAAU,SAAU,QAGjD,OAFmBn5D,KAAK8E,YAAYijB,UAEfnf,QAAQtF,GACnB61D,EAAajsD,QAAQ5J,EAAE0qC,SAAS5pC,MAAQ,GAErD,CAWAq+D,gBAAgB75D,GACb,MAAM85D,EAAqBj7C,IACxB,IAAIqpC,EAAa,GAYjB,OAVArpC,EAAMzjB,SAASiP,IACH,MAALA,IAEJ69C,EAAWzsD,KAAK4O,GAEZA,EAAEyU,QAAQxhB,SACX4qD,EAAaA,EAAWhpC,OAAO46C,EAAkBzvD,EAAEyU,UACtD,IAGIopC,CAAU,EAGpB,OAAI9wD,KAAK0nB,QAAQxhB,QAGA,MAAV0C,IACDA,EAAUsoD,GAASA,aAAgBh5B,GAHhBwqC,EAAkB1iE,KAAK0nB,QAMxB9e,OAAOA,IAErB,EAEb,CAEA+5D,eAAeh9D,EAAOg6D,GACnB,GAAa,MAATh6D,EAAJ,CAEA,IAAIi9D,EAAiBj9D,EAAMk9D,gBAC3B,GAAsB,MAAlBD,EAAJ,CAEA,IAAIx5C,EAAUw5C,EAAe/C,YAAY7/D,KAAK8E,YAAa9E,MAC3D,GAAe,MAAXopB,EAYJ,OATAA,EAAQjjB,SAAWijB,EAAQjjB,UAAY,CAAC,EACxCijB,EAAQjjB,SAASoE,QAAU5E,EAAM9G,GAGhB,MAAb8gE,IAAmBv2C,EAAQzoB,SAAS86D,EAAIkE,GAG5C3/D,KAAK0nB,OAAOrjB,KAAK+kB,GAEVA,CAf2B,CAHT,CAmB5B,CAEImtC,iBACD,IAAIvxD,EAAShF,KAAK4rB,eAAeD,WAUjC,OARwB,MAApB3rB,KAAKw2D,cACNx2D,KAAKw2D,YAAc,IAAIN,GAG1Bl2D,KAAKw2D,YAAYC,SAASz2D,MAC1BA,KAAKw2D,YAAYE,aAAa12D,KAAKmG,SAASmwD,aAC5Ct2D,KAAKw2D,YAAYzxD,WAAWC,GAErBhF,KAAKw2D,WACf,CAEAG,iBAAiB1oC,GACd,OAAOjuB,KAAKu2D,WAAWM,WAAW,CAAEltD,KAAMskB,EAASjkB,KAAMhK,MAC5D,CAEA82D,cAAc7oC,GAEX,OAAIA,IACYjuB,KAAK4rB,eAAeD,WACNwE,YAAYlC,GACAvQ,QAEpCpV,QAAQ6G,MAAM,2BAA4B,CAAE8e,QAASA,IAC9C5e,QAAQgH,OAAO,IAAInX,MAAM,8BAI/Bc,KAAKu2D,WAAW/uC,QAAQ,CAAE7d,KAAMskB,EAASjkB,KAAMhK,MACzD,CAEA8iE,cAAc70C,GACX,IAAIjpB,EAAShF,KAAK4rB,eAAeD,WAE7Bo3C,EAAc,IAAId,EAKtB,OAJAc,EAAYtM,SAASz2D,MACrB+iE,EAAYrM,aAAa12D,KAAKmG,SAASq8D,aACvCO,EAAYh+D,WAAWC,GAEhB+9D,EAAYv7C,QAAQ,CAAE7d,KAAMskB,EAASjkB,KAAMhK,MACrD,oBC5OH,MAAMk4B,EAAiB,EAAQ,OAEzB8qC,EAA4C,CAAC,EAE7CC,EAA2B,CAC9B7+D,IAAK,cAELgH,KAAM,eAENyqD,SAAU,wBAIbt2D,EAAOC,QAAU,cAA+B04B,EAC7Cv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBw8B,EAEvB,CAEAr4C,gBACG,OAAOq4C,CACV,CAEAr4C,uBACG,OAAOo4C,CACV,CAMAnL,gBACG,MAAO,EACV,oBCrCH,MAAM3/B,EAAiB,EAAQ,OAEzBgrC,EAAgD,CACnDC,YAAY,GAGTC,EAA+B,CAClCh/D,IAAK,aACLgH,KAAM,WACNyqD,SAAU,4BAGbt2D,EAAOC,QAAU,cAAuC04B,EACrDv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiB28B,EAEvB,CAEAx4C,gBACG,OAAOw4C,CACV,CAEAx4C,uBACG,OAAOs4C,CACV,CAUArL,gBACG,MAAO,EACV,oBCxCH,MAAMsD,EAAS,EAAQ,OAEjBkI,EAA2C,CAC9C9lB,SAAU,EACVp4C,QAAS,GAGZ5F,EAAOC,QAAU,cAAsC27D,EAKpDvwC,uBACG,OAAOy4C,CACV,CAQIz3C,qBACD,IAAI5hB,EAAOhK,KAAK68D,sBAChB,GAAY,MAAR7yD,EAAc,OAAO,KAEzB,IAAI4hB,EAAiB5hB,EAAK4hB,eAC1B,OAAsB,MAAlBA,EAA+B,KAE5BA,CACV,CAEAjmB,QACG,GAAI3F,KAAKmG,SAASuR,SAAU,CACzB,IAAI1S,EAAShF,KAAK8B,GAAG2V,WAAWzX,KAAKmG,SAASuR,UAC9C,OAAK1S,EAEEA,EAAO4I,UAAU5N,KAAKmG,SAASoE,SAFlB,IAGvB,CAAO,CACJ,IAGIvF,EAHAgF,EAAOhK,KAAK68D,sBAChB,GAAY,MAAR7yD,EAAc,OAAO,KAGzB,GAAIA,EAAK/G,eACN+B,EAASgF,EAAK/G,mBACV,CACJ,IAAI2oB,EAAiB5hB,EAAK4hB,eAC1B,GAAsB,MAAlBA,EAAwB,OAAO,KAEnC5mB,EAAS4mB,EAAeD,UAC3B,CAEA,OAAc,MAAV3mB,EAAuB,KAEfA,EAAO4I,UAAU5N,KAAKmG,SAASoE,QAE9C,CACH,oBCzDH,MAAM2tB,EAAiB,EAAQ,OAEzBorC,EAA0C,CAC7C3hE,KAAM,UAGH4hE,EAAyB,CAC5Bn/D,IAAK,OACLgH,KAAM,iBACNyqD,SAAU,sBAGbt2D,EAAOC,QAAU,cAAiC04B,EAC/Cv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiB88B,EAEvB,CAEA34C,gBACG,OAAO24C,CACV,CAEA34C,uBACG,OAAO04C,CACV,CAMAzL,gBACG,MAAO,EACV,mBCpCH,MAAM3/B,EAAiB,EAAQ,OAEzBsrC,EAA4C,CAC/CC,UAAW,GAGRC,EAA2B,CAC9Bt/D,IAAK,YACLgH,KAAM,UACNyqD,SAAU,wBAGbt2D,EAAOC,QAAU,cAAmC04B,EACjDv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBi9B,EAEvB,CAEA94C,gBACG,OAAO84C,CACV,CAEA94C,uBACG,OAAO44C,CACV,CAcA39D,QACG7F,KAAK4/B,YAAY5/B,KAAMA,KAAM,CAAC,QAAS,cAEvC,IAAIwX,EAAM1X,MAAM+F,QAEhB,OADA2R,EAAIiQ,MAAQ,GACLjQ,CACV,CAQAxR,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASs9D,UACXzjE,KAAKmG,SAASs9D,WACdD,EAA0CC,UAG7CzjE,KAAKmG,SAASs9D,UAAY/9C,SAAS1lB,KAAKmG,SAASs9D,UACpD,CAMA5L,gBACG,MAAO,EACV,oBC1EH,MAAM8L,EAAmB,EAAQ,OAE3BC,EAA8C,CAAC,EAE/CC,EAA6B,CAChCz/D,IAAK,gBACLgH,KAAM,aACNyqD,SAAU,0BAGbt2D,EAAOC,QAAU,cAAiCmkE,EAC/ChkE,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBo9B,EAEvB,CAEAj5C,gBACG,OAAOi5C,CACV,CAEAj5C,uBACG,OAAOg5C,CACV,CAMA/L,gBACG,MAAO,EACV,oBClCH,MAAM3/B,EAAiB,EAAQ,OAEzB4rC,EAAoD,CACvDniE,KAAM,cAGHoiE,EAA2B,CAC9B3/D,IAAK,iBACLgH,KAAM,UACNyqD,SAAU,gCAGbt2D,EAAOC,QAAU,cAA2C04B,EACzDv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBs9B,EAEvB,CAEAn5C,gBACG,OAAOm5C,CACV,CAEAn5C,uBACG,OAAOk5C,CACV,CAMAjM,gBACG,MAAO,EACV,oBCpCH,MAAM3/B,EAAiB,EAAQ,OAEzB8rC,EAAkD,CACrDriE,KAAM,cAGHsiE,EAAyB,CAC5B7/D,IAAK,eACLgH,KAAM,UACNyqD,SAAU,8BAGbt2D,EAAOC,QAAU,cAAyC04B,EACvDv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiBw9B,EAEvB,CAEAr5C,gBACG,OAAOq5C,CACV,CAEAr5C,uBACG,OAAOo5C,CACV,CAMAnM,gBACG,MAAO,EACV,oBCpCH,MAAM3/B,EAAiB,EAAQ,OAEzBgsC,EAA6C,CAChDviE,KAAM,UAGHwiE,EAA4B,CAC/B//D,IAAK,UACLgH,KAAM,WACNyqD,SAAU,yBAGbt2D,EAAOC,QAAU,cAAoC04B,EAClDv4B,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MACG4F,EACAZ,EACA4P,EACA+xB,GAAiB09B,EAEvB,CAEAv5C,gBACG,OAAOu5C,CACV,CAEAv5C,uBACG,OAAOs5C,CACV,CAMArM,gBACG,MAAO,EACV,oBCpCH,MAAM8L,EAAmB,EAAQ,OAE3BS,EAA0C,CAAC,EAE3CC,EAAiB,CACpBjgE,IAAK,WACLgH,KAAM,UACNyqD,SAAU,sBAGbt2D,EAAOC,QAAU,cAAiCmkE,EAC/ChkE,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiB49B,EACvD,CAEAz5C,gBACG,OAAOy5C,CACV,CAEAz5C,uBACG,OAAOw5C,CACV,CAMAvM,gBACG,MAAO,EACV,oBC7BH,MAAMlC,EAAe,EAAQ,MAEvB2O,EAAuC,CAC1CvO,WAAY,GAKZwO,aAAc,GAKdC,iBAAkB,GAIlBC,eAAgB,GAIhBC,gBAAiB,GAIjBC,gBAAiB,GAIjBC,aAAc,IAMXnN,EAAiB,CACpBrzD,IAAK,QACLgH,KAAM,QACNyqD,SAAU,SAGbt2D,EAAOC,QAAU,cAA8Bm2D,EAM5Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO05C,CACV,CAQAt+D,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjBrG,OAAOD,KAAKklE,GAAsCtgE,SAASgQ,IACxDhU,KAAKmG,SAAS6N,GACXhU,KAAKmG,SAAS6N,IAAMswD,EAAqCtwD,EAAE,GAEpE,CAMA6jD,gBACG,MAAO,EACV,mBChFH,MAAMlC,EAAe,EAAQ,MAEvBkP,EAAsC,CACzC1jE,MAAO,GAKP40D,WAAY,GAIZxzD,QAAS,GAITuiE,YAAa,EAIbC,WAAY,EAIZC,WAAY,EAKZC,YAAa,EAMbpsB,WAAY,EAIZqsB,aAAc,EAWd7N,YAAa,GAIbC,WAAY,GAMZC,SAAU,GAIVC,QAAS,GAMT2N,UAAW,EAIXlhC,eAAgB,GAIhBC,aAAc,GAIdkhC,eAAgB,GAIhBC,aAAc,GAKdz7C,gBAAiB,CAGdqa,eAAgB,GAChBC,aAAc,GACdkhC,eAAgB,GAChBC,aAAc,IAEjBC,WAAY,CACTC,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAKpB3kE,OAAQ,EAKR4kE,WAAY,EACZC,aAAc,EACdC,YAAa,EACbC,QAAS,GAGTv5D,aAAc,GAiBdw5D,UAAW,GAMRrO,EAAiB,CACpBrzD,IAAK,OACLgH,KAAM,QACNyqD,SAAU,QAcb,SAASkQ,EAAgBC,EAAMrgE,QACF,IAAfqgE,EAAKrgE,GAIhBqgE,EAAKrgE,GAASqgE,EAAKrgE,IAAUk/D,EAAoCl/D,GAH9DqgE,EAAKrgE,GAASk/D,EAAoCl/D,EAIxD,CAYA,SAASsgE,EAAoBD,EAAMrgE,GAChC,IACGqgE,EAAKrgE,GAAS+N,KAAKuD,MAAM+uD,EAAKrgE,GAGjC,CAFE,MAAO1G,GACN+mE,EAAKrgE,GAASk/D,EAAoCl/D,EACrD,CACH,CAEApG,EAAOC,QAAU,cAA6Bm2D,EAM3Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOi6C,CACV,CAYA7+D,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjBqgE,EAAgB/lE,KAAKmG,SAAU,cAM/B8/D,EAAoBjmE,KAAKmG,SAAU,WACnC8/D,EAAoBjmE,KAAKmG,SAAU,eACnC8/D,EAAoBjmE,KAAKmG,SAAU,cACnC8/D,EAAoBjmE,KAAKmG,SAAU,cACnC8/D,EAAoBjmE,KAAKmG,SAAU,eAEnC8/D,EAAoBjmE,KAAKmG,SAAU,cACnC8/D,EAAoBjmE,KAAKmG,SAAU,gBACnC8/D,EAAoBjmE,KAAKmG,SAAU,cACnC8/D,EAAoBjmE,KAAKmG,SAAU,gBACnC8/D,EAAoBjmE,KAAKmG,SAAU,eACnC8/D,EAAoBjmE,KAAKmG,SAAU,gBACnC8/D,EAAoBjmE,KAAKmG,SAAU,aAEnCnG,KAAKmG,SAASm/D,WACXtlE,KAAKmG,SAASm/D,YACdT,EAAoCS,WAEvC,IACGtlE,KAAKmG,SAASm/D,WAAWC,aAAe7xD,KAAKuD,MAC1CjX,KAAKmG,SAASm/D,WAAWC,aAK/B,CAHE,MAAOtmE,GACNe,KAAKmG,SAASm/D,WAAWC,aACtBV,EAAoCS,WAAWC,YACrD,CAEA,IACGvlE,KAAKmG,SAASm/D,WAAWG,gBAAkB/xD,KAAKuD,MAC7CjX,KAAKmG,SAASm/D,WAAWG,gBAK/B,CAHE,MAAOxmE,GACNe,KAAKmG,SAASm/D,WAAWG,gBACtBZ,EAAoCS,WAAWG,eACrD,CASAM,EAAgB/lE,KAAKmG,SAAU,eAC/B4/D,EAAgB/lE,KAAKmG,SAAU,YAC/B4/D,EAAgB/lE,KAAKmG,SAAU,cAC/B4/D,EAAgB/lE,KAAKmG,SAAU,WAC/B8/D,EAAoBjmE,KAAKmG,SAAU,aAwBnC,IAAI+/D,EAAW,CACZ,aACA,mBACA,iBACA,eACA,iBACA,gBAGClmE,KAAKmG,SAASyjB,iBACfs8C,EAASliE,SAAS+C,IACV/G,KAAKmG,SAASY,KAChB/G,KAAKmG,SAASY,GAAK/G,KAAKmG,SAASyjB,gBAAgB7iB,GAAE,IAK5Dm/D,EAASliE,SAAS+C,IACfg/D,EAAgB/lE,KAAKmG,SAAUY,EAAE,IAIpC/G,KAAK0nB,OAAS,EACjB,CAMAmwC,gBACG,MAAO,EACV,CAEAsO,YAAYxgE,EAAOwU,GAChB,IAAIisD,GAAa,EAYjB,GARIpmE,KAAKmG,UAAU89B,gBAAkBt+B,EAAMkB,aAExC7G,KAAKmG,SAAS89B,eAAiB,GAE/BmiC,GAAa,GAIZpmE,KAAKmG,SAAS+9B,cAAch+B,OAAQ,CAErC,IAAI0F,EAAQ5L,KAAKmG,SAAS+9B,aAAah3B,QAAQvH,EAAMkB,YAEjD+E,GAAS,IACV5L,KAAKmG,SAAS+9B,aAAal4B,OAAOJ,EAAO,GAEzCw6D,GAAa,EAEnB,CAGA,GAAIpmE,KAAKmG,SAASi/D,gBAAgBl/D,OAAQ,CAEvC,IAAI0F,EAAQ5L,KAAKmG,SAASi/D,eAAel4D,QAAQvH,EAAM9G,IAEnD+M,GAAS,IACV5L,KAAKmG,SAASi/D,eAAep5D,OAAOJ,EAAO,GAE3Cw6D,GAAa,EAEnB,CAGA,GAAIpmE,KAAKmG,SAASk/D,cAAcn/D,OAAQ,CAErC,IAAI0F,EAAQ5L,KAAKmG,SAASk/D,aAAan4D,QAAQvH,EAAM9G,IAEjD+M,GAAS,IACV5L,KAAKmG,SAASk/D,aAAar5D,OAAOJ,EAAO,GAEzCw6D,GAAa,EAEnB,CAGAjsD,EAAG,KAAMisD,EACZ,CAEAlI,wBACG,MAAO,CAAC,cAAe,aAAc,WAAY,UACpD,oBC5XH,MAAMvI,EAAe,EAAQ,MAEvB0Q,EAAuC,CAC1CtlB,SAAU,GACVhgD,MAAO,IACPD,OAAQ,KAGL22D,EAAiB,CACpBrzD,IAAK,QACLgH,KAAM,YACNyqD,SAAU,SAGbt2D,EAAOC,QAAU,cAA8Bm2D,EAC5Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOy7C,CACV,CAUAxO,gBACG,MAAO,EACV,CAQIjsC,qBACD,OAAO,IACV,CAQA5lB,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASpF,MAAQ2kB,SACnB1lB,KAAKmG,SAASpF,OAASslE,EAAqCtlE,OAE/Df,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QAAUulE,EAAqCvlE,OAEnE,oBCjEH,MAAM60D,EAAe,EAAQ,MAEvB2Q,EAAwC,CAC3CvQ,WAAY,KAKZwQ,WAAY,GAKZC,sBAAuB,GAKvBC,wBAAyB,GAKzBC,WAAY,GAKZC,SAAU,IAWPlP,EAAiB,CACpBrzD,IAAK,SAILgH,KAAM,UAINyqD,SAAU,UAMbt2D,EAAOC,QAAU,cAA+Bm2D,EAC7Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEAzxD,WAAWN,GACR5F,MAAMkG,WAAWN,GAGZ1F,KAAKmG,SAASwgE,WAChB3mE,KAAKmG,SAASwgE,SAAW,CAAE9nE,GAAI,GAAGmB,KAAKnB,cAAeuF,IAAK,QAC3DpE,KAAKmG,SAASwgE,SAAS14D,KAAOjO,KAAKmG,SAASygE,cAG/C5mE,KAAK6mE,aAAe7mE,KAAK8B,GAAG06B,iBAAiBx8B,KAAKmG,SAASwgE,SAC9D,CAEA9gE,QACG,IAAI2R,EAAM1X,MAAM+F,QAKhB,OAJA2R,EAAIrR,SAASwgE,SAAW3mE,KAAK6mE,aAAahhE,QAG1C2R,EAAIrR,SAASwgE,SAAS9nE,GAAK,GAAGmB,KAAKnB,cAC5B2Y,CACV,CAEAoT,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO07C,CACV,oBCtFH,MAAM3Q,EAAe,EAAQ,MAEvBmR,EAAuC,CAC1C74D,KAAM,GACNuS,OAAQ,EACRghD,UAAW,QAGR/J,EAAiB,CACpBrzD,IAAK,QACLgH,KAAM,OACNyqD,SAAU,SAGbt2D,EAAOC,QAAU,cAA8Bm2D,EAM5Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOk8C,CACV,CAcAjhE,QACG7F,KAAK4/B,YAAY5/B,KAAMA,KAAM,CAAC,QAAS,SAEvC,IAAIwX,EAAM1X,MAAM+F,QAEhB,OADA2R,EAAIykD,QAAU,GACPzkD,CACV,CAQAxR,WAAWN,GACR5F,MAAMkG,WAAWN,GAIjB1F,KAAKiO,KAAOvI,EAAOuI,MAAQvI,EAAOS,SAAS8H,MAAQ,QAEnDjO,KAAKmG,SAASqa,OACXxgB,KAAKmG,SAASqa,QAAUsmD,EAAqCtmD,OAChExgB,KAAKmG,SAASq7D,UACXxhE,KAAKmG,SAASq7D,WACdsF,EAAqCtF,UAGxCxhE,KAAK0nB,OAAS,GAGd1nB,KAAKmG,SAASqa,OAASkF,SAAS1lB,KAAKmG,SAASqa,QAE9CxgB,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,QAAS,QACxC,CAMA63D,gBACG,MAAO,EACV,CAQAkP,eACG/mE,KAAKmG,SAASqa,OAAS,CAC1B,CAMAwmD,cACGhnE,KAAKmG,SAASqa,OAAS,CAC1B,CAMAymD,oBACGjnE,KAAKmG,SAASqa,OAAS,CAC1B,oBChHH,MAAMk4C,EAAkB,EAAQ,OAC1B/C,EAAe,EAAQ,MAEvBuR,EAA4B,CAC/B/lE,MAAO,GACPgmE,WAAY,GAGT1P,EAAiB,CACpBrzD,IAAK,SACLgH,KAAM,UACNyqD,SAAU,UAGbt2D,EAAOC,QAAU,cAA+Bm2D,EAM7Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOs8C,CACV,CAOAE,YACGpnE,KAAK0nB,OAAOrjB,KACTrE,KAAK8E,YAAYwkB,QACd,CACGllB,IAAKs0D,EAAgB1qB,SAAS5pC,KAEjCpE,KAAK8E,YACL9E,MAGT,CAQA63D,cAAcwP,GACX,OAAIA,EAGM,GAKHrnE,KAAK0U,OACC1U,KAAK0U,OAAOmjD,eAAc,GAE1B,EAGhB,CAQIjsC,qBACD,OAAO,IACV,oBChFH,MAAM+pC,EAAe,EAAQ,MAEvB2R,EAAsC,CACzCvR,WAAY,KACZpwD,MAAO,KACP7E,OAAQ,GAGL22D,EAAiB,CACpBrzD,IAAK,OACLgH,KAAM,UACNyqD,SAAU,QAGbt2D,EAAOC,QAAU,cAA8Bm2D,EAC5Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO08C,CACV,CAMAzP,gBACG,MAAO,EACV,CAEAlyD,QACG,IAAI8tB,EAAKzzB,KAAK4rB,eACd,IAAK6H,EAAI,OAAO,KAEhB,IAAIzuB,EAASyuB,EAAG9H,WAChB,OAAK3mB,EAEEA,EAAO4I,UAAU5N,KAAKmG,SAASR,OAFlB,IAGvB,oBC3CH,MAAMgwD,EAAe,EAAQ,MAEvB4R,EAAsC,CACzCC,YAAa,IACbC,YAAa,kBACbC,cAAe,eACfC,cAAe,EACfC,YAAa,GACbC,UAAW,UACXC,aAAc,OACdC,aAAc,GACdC,cAAe,GACfC,eAAgB,GAWhBpiD,MAAO,GACPqiD,MAAO,IAGJC,EAAiB,CACpB/jE,IAAK,OACLgH,KAAM,WACNyqD,SAAU,QAGbt2D,EAAOC,QAAU,cAA6Bm2D,EAM3Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiB0hC,EACvD,CAEAv9C,gBACG,OAAOu9C,CACV,CAEAv9C,uBACG,OAAO28C,CACV,CAcA1hE,QACG7F,KAAK4/B,YAAY5/B,KAAMA,KAAM,CAC1B,eACA,iBACA,kBAECA,KAAKmG,SAAS0f,OACf7lB,KAAKmG,SAAS0f,MAAM7hB,SAASokE,IAC1BpoE,KAAK4/B,YAAYwoC,EAAMA,EAAM,CAAC,aAAa,IAIjD,IAAI5wD,EAAM1X,MAAM+F,QAEhB,OADA2R,EAAIykD,QAAU,GACPzkD,CACV,CAQAxR,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKw/B,UAAUx/B,KAAMA,KAAM,CACxB,eACA,iBACA,kBAGHA,KAAKmG,SAAS0f,MACX7lB,KAAKmG,SAAS0f,OAAS0hD,EAAoC1hD,MAE9D,IAAK,IAAI3S,EAAI,EAAGA,EAAIlT,KAAKmG,SAAS0f,MAAM3f,OAAQgN,IAAK,CAClD,IAAIk1D,EAAOpoE,KAAKmG,SAAS0f,MAAM3S,GAC3Bk1D,aAAgB/oE,QACjB+oE,EAAKC,UAAY30D,KAAKuD,MAAMmxD,EAAKC,YAAa,GAE9CroE,KAAKw/B,UAAU4oC,EAAMA,EAAM,CAAC,eAGP,iBAARA,IACbpoE,KAAKmG,SAAS0f,MAAM3S,GAAK,CACtBo1D,OAAQF,EACRC,WAAW,GAGpB,CACH,CAMAxQ,gBACG,MAAO,EACV,CAEA0Q,iBAAiB7nE,GAEVA,GAAQA,EAAK8wB,QAAU,GACxB9wB,EAAKssB,KAAK,CAAC,GAAGhpB,SAASgK,IACpBtN,EAAKqa,OAAO/M,EAAKnP,GAAG,GAG7B,CAQI+sB,qBACD,OAAO,IACV,CAEA48C,eAAe9nE,EAAMmlB,GACbnlB,GAASmlB,IAEbA,GAAS,IAAI7hB,SAASykE,IACpB,GAAIA,EAAYJ,UAAW,CACxB,IAAIK,EAAa1oE,KAAK8E,YAAY+gB,OAC9B7D,GAAMA,EAAEnjB,IAAM4pE,EAAYH,SAC3B,GACD,GACF,IAAKI,EAAY,OAGjB,GAAuB,GADDA,EAAWjM,gBACP,OAE1B,GAAIgM,EAAYE,MAAO,CACpB,IAAIC,EAAY5oE,KAAK8E,YAAY2iB,OAC7BxU,GAAMA,EAAEpU,IAAM4pE,EAAYE,QAC3B,GACD,GACF,IAAKC,EAAW,OAGhB,GAAsB,GADDA,EAAUnM,gBACN,MAC5B,CAEA,IAAIt7D,EAAQnB,KAAK6oE,aAAaJ,GAE9B,IAAIK,EAoBJ,GAVgB,OANbA,EAFCL,EAAY/zD,QAAgC,KAAtB+zD,EAAY/zD,OAExBhU,EAAKmJ,WAAW4+D,EAAY/zD,QAG5BhU,KAKGA,EAAKqoE,YAAYN,EAAY/zD,QAEnC9K,QAAU,GAElBlJ,EAAK+D,QAAQgkE,EAAY/zD,QAEzBo0D,EAAWpoE,EAAKmJ,WAAW4+D,EAAY/zD,SAEtCo0D,EAASh8C,OAAO27C,EAAYE,OAASF,EAAYH,QAClD,OAEHQ,EAAS1nD,IACN,CACGviB,GAAI4pE,EAAYE,OAASF,EAAYH,OACrC5lE,MAAOvB,EACPQ,KAAM8mE,EAAY9mE,KAClB2mE,OAAQG,EAAYH,OACpBl9D,KAAMq9D,EAAYr9D,KACb,eAAiBq9D,EAAYr9D,KAC7B,IAERq9D,EAAY9nE,SAAW+kB,SAAS+iD,EAAY9nE,UAAY,EAE9D,IAEN,CAgBAkoE,aAAaG,GACV,IAAIC,EAAOjpE,KAAK8B,GAAGkP,aAAawB,kBAC5B02D,EAAcF,EAASzjD,aAAa3c,QAAQm3B,GACtCA,EAAEL,eAAiBupC,IAGzB9nE,EAAQ,GAgBZ,GAdI+nE,EAAYhjE,SACTgjE,EAAY,GAAGC,UAChBhoE,EAAQ+nE,EAAY,GAAGC,UACfD,EAAY,GAAG/nE,QACvBA,EAAQ+nE,EAAY,GAAG/nE,SAKxBA,GAAS6nE,EAASG,YACpBhoE,EAAQ6nE,EAASG,YAKhBhoE,IAEAA,EAAM0R,QAAQ,aAAc,IAC9B,CAGC,IAAIy1D,EAEDA,EADCU,EAASV,OACDU,EAASV,OAETtoE,KAAKopE,gBAAgBJ,GAGjC,IAAIZ,EAAOpoE,KAAK8E,YAAY+gB,OAAO7D,GAAMA,EAAEnjB,IAAMypE,IAAQ,GAAM,GAC/D,GAAIF,EAED,GAAqB,OAAjBY,EAASrnE,MAAiC,iBAAhBqnE,EAAS5kE,IAAwB,CAC5D,IAAIilE,EAAUjB,EAAK3gD,OACfxU,GAAMA,EAAEpU,IAAMmqE,EAASL,OAAS11D,EAAEpU,IAAMmqE,EAASnqE,KAClD,GACD,GACEwqE,IACDloE,EAAQkoE,EAAQloE,MAEtB,MACGA,EAAQinE,EAAKjnE,KAGtB,CAEA,OAAOA,CACV,CAEAioE,gBAAgBE,GACb,MAAuB,QAAnBA,EAAYllE,IACNpE,KAAKopE,gBAAgBE,EAAY50D,QAEjC40D,EAAYzqE,EAEzB,CAEA0/D,KAAKN,EAAWvpD,GACb,OAAO5U,MAAMy+D,KAAKN,EAAWvpD,GAAQP,MAAMxG,KAEvCA,EAAOxH,SAAS0f,OAAS,IAAI7hB,SAAQ,CAACge,EAAG9O,KACvC,IAAIk1D,EAAOz6D,EAAOxH,SAAS0f,MAAM3S,GAGd,iBAARk1D,EACRz6D,EAAOxH,SAAS0f,MAAM3S,GAAK+qD,EAAUmK,IAErCA,EAAKE,OAASrK,EAAUmK,EAAKE,QAC7BF,EAAKO,MAAQ1K,EAAUmK,EAAKO,OAC/B,IAGIh7D,EAAOhG,OAAOwM,MAAK,IAChBxG,MAGhB,oBCjTH,MAAMgoD,EAAe,EAAQ,MAEvBsM,EAAe,EAAQ,OAEvBsH,EAA6C,CAChDxT,WAAY,KACZl5B,QAAS,KAaT2lC,YAAa,IAGV/K,EAAiB,CACpBrzD,IAAK,cACLgH,KAAM,aACNyqD,SAAU,gBAGbt2D,EAAOC,QAAU,cAAoCm2D,EAClDh2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO2+C,CACV,CAYAvjE,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAS4vD,WACX/1D,KAAKmG,SAAS4vD,YACdwT,EAA2CxT,WAE9C/1D,KAAKmG,SAAS02B,QACX78B,KAAKmG,SAAS02B,SACd0sC,EAA2C1sC,OACjD,CAUAh3B,QACG,IAAI2R,EAAM1X,MAAM+F,QAIhB,OAFA2R,EAAIrR,SAAWqR,EAAIrR,UAAY,CAAC,EAEzBqR,CACV,CAMAqgD,gBACG,MAAO,EACV,CAEAiL,cAAclM,GACX,MAAM5xD,EAAShF,KAAK4rB,eAAeD,WAE7Bo3C,EAAc,IAAId,EACxBc,EAAYtM,SAASz2D,MACrB+iE,EAAYrM,aAAa12D,KAAKmG,SAASq8D,aACvCO,EAAYh+D,WAAWC,GAEnB4xD,IAAa5pD,MAAMC,QAAQ2pD,KAAWA,EAAW,CAACA,IAEtDA,GAAU5yD,SAASiqB,IAChB80C,EAAYv7C,QAAQ,CAAE7d,KAAMskB,EAASjkB,KAAMhK,MAAO,GAExD,oBCxFH,MAAM04D,EAAkB,EAAQ,OAO1BjB,EAAiB,CACpBrzD,IAAK,OACLgH,KAAM,QAGHgwD,EAA8B,CACjCz5D,KAAM,OACNmgE,WAAY,IACZC,YAAa,IACbyH,UAAW,KACXC,eAAgB,EAChBC,eAAgB,yBAGnBnqE,EAAOC,QAAU,cAA6Bk5D,EAC3C/4D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,GAiBpDz3D,KAAK0U,OAAS,IAMjB,CAEAkW,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOwwC,CACV,CAEAxwC,wBAAwBlqB,GACrB,MAAO,CACJ,WACA,MAAQ0a,OAAO1a,EAAKoE,YAAYoC,MAAM2L,QAAQ,cAAe,IAC7DuI,OAAO1a,EAAKwG,MACR2L,QAAQ,cAAe,IACvBwF,cACJ,QACDnK,KAAK,IACV,CAUArI,QACG,IAAI2R,EAAM1X,MAAM+F,QAehB,OAbA2R,EAAItQ,KAAOlH,KAAKkH,KAEhBsQ,EAAImyD,QAAU3pE,KAAK2pE,QAGO,SAAtB3pE,KAAKmG,SAASxE,OAAiB6V,EAAIpM,KAAO,SAGzCpL,KAAKmB,OAAuB,WAAdnB,KAAKmB,QAAoBqW,EAAIrW,MAAQqW,EAAItQ,MAG5DsQ,EAAIgN,SAAWxkB,KAAK6kB,QAAU,IAAInmB,KAAKsjB,GAAMA,EAAEnjB,KAExC2Y,CACV,CAQAxR,WAAWN,GACR5F,MAAMkG,WAAWN,GAGW,SAAxBA,EAAOS,SAASxE,OAAiB3B,KAAKoL,KAAO,SAG5CpL,KAAKmB,OAAuB,WAAdnB,KAAKmB,QAAoBnB,KAAKmB,MAAQnB,KAAKkH,MAG9DlH,KAAK2pE,QAAUjkE,EAAOikE,SACjB3pE,KAAK2pE,SAAW3pE,KAAK8E,cACvB9E,KAAK2pE,QAAU3pE,KAAK8E,YAAYjG,IAInC,IAAIgnB,EAAQ,IACXngB,EAAO8e,SAAW,IAAIxgB,SAASnF,IAC7B,IAAI8iB,EAAM3hB,KAAK8B,GAAG2iB,eAAe5lB,GAC7B8iB,EACDkE,EAAMxhB,KAAKrE,KAAK0kB,QAAQ/C,IAExB3hB,KAAK8B,GAAGqN,MACL,OAAOnP,KAAK8E,YAAYoC,SAASlH,KAAK8E,YAAYjG,aAAamB,KAAKkH,SAASlH,KAAKnB,kCAAkCA,KAE1H,IAEHmB,KAAK6kB,OAASgB,EAGd7lB,KAAKmG,SAASk1D,QAAUr7D,KAAKmG,SAASk1D,SAAW,EACjDr7D,KAAKmG,SAASm1D,QAAUt7D,KAAKmG,SAASm1D,SAAW,CAAC,EAGrD,CAWA/mD,UACG,OAAOlF,QAAQ/P,UACX6U,MAAK,KAMH,IAAIy1D,EAAiB,GACjBC,EAAW7pE,KAAK6lB,QAQpB,OAPA7lB,KAAK6kB,OAAS,GAIdglD,EAAS7lE,SAASge,IACf4nD,EAAevlE,KAAK2d,EAAEzN,UAAU,IAE5BlF,QAAQkS,IAAIqoD,EAAe,IAEpCz1D,MAAK,KACUnU,KAAK0U,QAAU1U,KAAK8E,aAEnBglE,WAAW9pE,QAE3BmU,MAAK,IACIrU,MAAMyU,WAuBtB,CAQA5M,OACG,OAAO0H,QAAQ/P,UACX6U,MAAK,IAEIrU,MAAM6H,SAEfwM,MAAK,KAEUnU,KAAK0U,QAAU1U,KAAK8E,aAEnBilE,WAAW/pE,QAE3BmU,MAAK,IACInU,MAEhB,CAiBA6lB,MAAMjd,EAAS,MAAM,GAAMwe,GAAO,GAC/B,IAAIzZ,EAAS,GAsBb,OAnBI/E,GAAUwe,EACPpnB,KAAK6kB,QAAU7kB,KAAK6kB,OAAO3e,OAAS,IACrCyH,EAAS3N,KAAK6kB,OAAOjc,OAAOA,IAEjB1C,OAAS,GACjBlG,KAAK6kB,OAAO7gB,SAASge,IAClB,IAAIqF,EAAWrF,EAAE6D,MAAMjd,EAAQwe,GAC3BC,GAAYA,EAASnhB,OAAS,IAC/ByH,EAAS0Z,EACZ,IAOT1Z,EAAS3N,KAAK6kB,OAAOjc,OAAOA,GAGxB+E,CACV,CAWAo8D,WAAW3B,GAER,OADiBpoE,KAAK6lB,OAAO7mB,GAAMA,EAAEH,KAAOupE,EAAKvpE,KAAIqH,OAAS,EAQvDmJ,QAAQ/P,WALZU,KAAK6kB,OAAOxgB,KAAK+jE,GACVpoE,KAAK2H,OAKlB,CAaA+c,QAAQhf,GAELA,EAAOtB,IAAMqzD,EAAerzD,IAK5B,IAAIgkE,EAAOpoE,KAAK8E,YAAYwkB,QAAQ5jB,EAAQ1F,KAAK8E,YAAa,MAE9D,OADAsjE,EAAK1zD,OAAS1U,KACPooE,CACV,CAWA0B,WAAW1B,GACR,IAAItjC,EAAU9kC,KAAK6kB,OAAO3e,OAK1B,OAJAlG,KAAK6kB,OAAS7kB,KAAK6lB,OAAM,SAAU7D,GAChC,OAAOA,EAAEnjB,IAAMupE,EAAKvpE,EACvB,IAEImB,KAAK6kB,OAAO3e,OAAS4+B,EACf9kC,KAAK2H,OAIR0H,QAAQ/P,SAClB,CAOAwpB,UACG,OAAO9oB,KAAK2oB,aAAe,UAC9B,CASAA,aACG,OAAI3oB,KAAK0U,OACC1U,KAAK0U,OAAOoU,UAAY9oB,KAAKnB,GAE7BmB,KAAK8E,YAAYgkB,UAAY9oB,KAAKnB,EAE/C,CAEAmrE,WAAWxyD,GAOR,MALyB,SAArBA,EAAIrR,SAASxE,KACd6V,EAAIpM,KAAO,QAEXoM,EAAIpM,KAAOqsD,EAAersD,KAEtBoM,CACV,CAcA+e,MAAM0nC,EAAWvpD,GAEd,GAAiB,MAAbupD,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAIgM,EAAc9jC,IACV83B,EAAU93B,EAAStnC,MACrBo/D,EAAU93B,EAAStnC,IAAMmB,KAAK8B,GAAG0N,QAEhC22B,EAAStgB,OACVsgB,EAAStgB,QAAQ7hB,SAASge,GAAMioD,EAAWjoD,KAG1CmkB,EAAS1e,OACV0e,EAAS1e,QAAQzjB,SAASiP,GAAMg3D,EAAWh3D,IAC9C,EAIHg3D,EAAWjqE,KACd,CAGA,IAAI2N,EAAS7N,MAAMy2B,MAAM0nC,EAAWvpD,GAKpC,OAFA/G,EAAOzG,KAAO,KAEPyG,CACV,CAgBA4wD,KAAKN,EAAWvpD,EAAQxS,GAErB,GAAiB,MAAb+7D,EAAmB,CAEpBA,EAAY,CAAC,EAEb,IAAIgM,EAAc9jC,IACV83B,EAAU93B,EAAStnC,MACrBo/D,EAAU93B,EAAStnC,IAAMmB,KAAK8B,GAAG0N,QAEhC22B,EAAStgB,OACVsgB,EAAStgB,QAAQ7hB,SAASge,GAAMioD,EAAWjoD,KAG1CmkB,EAAS1e,OACV0e,EAAS1e,QAAQzjB,SAASiP,GAAMg3D,EAAWh3D,IAC9C,EAIHg3D,EAAWjqE,KACd,CAGA,OAAOF,MAAMy+D,KAAKN,EAAWvpD,EAAQxS,EACxC,oBCvcH,MAAMyzD,EAAe,EAAQ,MAEvBuU,EAAuC,CAC1CnU,WAAY,KACZoU,aAAc,EACdC,YAAa,EACbC,cAAe,EACfnoB,IAAK,EACLD,IAAK,EACLnhD,OAAQ,GAGL22D,EAAiB,CACpBrzD,IAAK,QACLgH,KAAM,OACNyqD,SAAU,SAGbt2D,EAAOC,QAAU,cAA8Bm2D,EAC5Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOs/C,CACV,CAYAlkE,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASgkE,aAAez2D,KAAKuD,MAC/BjX,KAAKmG,SAASgkE,cACXD,EAAqCC,cAE3CnqE,KAAKmG,SAASikE,YAAc12D,KAAKuD,MAC9BjX,KAAKmG,SAASikE,aACXF,EAAqCE,aAE3CpqE,KAAKmG,SAASkkE,cAAgB32D,KAAKuD,MAChCjX,KAAKmG,SAASkkE,eACXH,EAAqCG,eAE3CrqE,KAAKmG,SAAS+7C,IAAMxuC,KAAKuD,MACtBjX,KAAKmG,SAAS+7C,KAAOgoB,EAAqChoB,KAE7DliD,KAAKmG,SAAS87C,IAAMvuC,KAAKuD,MACtBjX,KAAKmG,SAAS87C,KAAOioB,EAAqCjoB,KAGzDjiD,KAAKmG,SAASmkE,WAA+C,iBAA3BtqE,KAAKmG,SAASmkE,YACjDtqE,KAAKmG,SAASmkE,UAAY52D,KAAKuD,MAAMjX,KAAKmG,SAASmkE,YAGtDtqE,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QAAUopE,EAAqCppE,OAEnE,CAUA+E,QACG,IAAI2R,EAAM1X,MAAM+F,QAQhB,OANA2R,EAAIiQ,MAAQ,GACZjQ,EAAIrR,SAAWqR,EAAIrR,UAAY,CAAC,EAE5BnG,KAAKmG,SAASmkE,YACf9yD,EAAIrR,SAASmkE,UAAY52D,KAAKC,UAAU3T,KAAKmG,SAASmkE,YAElD9yD,CACV,CAMAqgD,gBACG,MAAO,EACV,oBCnGH,MAAMlC,EAAe,EAAQ,MAEvB4U,EAA+C,CAClDxU,WAAY,GACZyU,eAAgB,CACbtjE,KAAM,GACN+G,KAAM,GACNia,QAAS,IAEZ5D,kBAAmB,GACnBmmD,SAAU,EACVC,cAAe,EACfC,YAAa,EACbC,YAAa,GAGVnT,EAAiB,CACpBrzD,IAAK,iBACLgH,KAAM,UACNyqD,SAAU,mBAGbt2D,EAAOC,QAAU,cAAuCm2D,EACrDh2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAO2/C,CACV,CAYAvkE,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB,MAAMmlE,EAAiB,CAAC,EAExBxrE,OAAOD,KAAKmrE,GAA8CvmE,SACtD8mE,IACE,GAEM,iBADIP,EAA6CO,KAEnD99D,MAAMC,QACJs9D,EAA6CO,IAahD,OAVAD,EAAeC,GAAQ,CAAC,OAExBzrE,OAAOD,KACJmrE,EAA6CO,IAC9C9mE,SAAS+mE,IACRF,EAAeC,GAAMC,GAClB/qE,KAAKmG,SAAS2kE,KAAQC,IACtBR,EAA6CO,GAAMC,EAAK,IAMjEF,EAAeC,GACZ9qE,KAAKmG,SAAS2kE,IACdP,EAA6CO,EAAK,IAI3D9qE,KAAKmG,SAAW0kE,CACnB,CAUAhlE,QACG,IAAI2R,EAAM1X,MAAM+F,QAIhB,OAFA2R,EAAIrR,SAAWqR,EAAIrR,UAAY,CAAC,EAEzBqR,CACV,CAMAqgD,gBACG,MAAO,EACV,oBCvGH,MAAMlC,EAAe,EAAQ,MAEvBqV,EAA2C,CAC9CpoC,SAAU,EACVmzB,WAAY,GACZyU,eAAgB,CACbtjE,KAAM,GACN2rB,MAAO,GACP+1B,IAAK,GACLqiB,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,OAAQ,GACRC,MAAO,GACPC,SAAU,IAEbC,mBAAoB,GACpBC,uBAAwB,CACrB36D,MAAO,GACPq6D,MAAO,GACPptC,OAAQ,IAEX2tC,SAAU,CACPlZ,IAAK,EACLmZ,KAAM,EACNlZ,MAAO,EACPmZ,KAAM,EACNC,OAAQ,EACRH,SAAU,EACVljB,MAAO,GAEVsjB,oBAAqB,GACrBC,SAAU,GACVC,OAAQ,CACLC,MAAO,EACPC,IAAK,EACLC,IAAK,IAIL3U,EAAiB,CACpBrzD,IAAK,YAILgH,KAAM,WAINyqD,SAAU,aAKbt2D,EAAOC,QAAU,cAAkCm2D,EAChDh2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,GAEpDz3D,KAAKqsE,QAAU,IAClB,CAEAzhD,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOogD,CACV,CAcAnlE,QAGG7F,KAAK4/B,YAAY5/B,KAAMA,KAAM,CAAC,cAE9B,MAAMwX,EAAM1X,MAAM+F,QAIlB,OAFA2R,EAAIiQ,MAAQ,GAELjQ,CACV,CAQAxR,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAWnG,KAAKmG,UAAY,CAAC,EAClCnG,KAAKmG,SAASqkE,eAAiBxqE,KAAKmG,SAASqkE,gBAAkB,CAAC,EAChExqE,KAAKmG,SAASulE,uBACX1rE,KAAKmG,SAASulE,wBAA0B,CAAC,EAC5C1rE,KAAKmG,SAASwlE,SAAW3rE,KAAKmG,SAASwlE,UAAY,CAAC,EACpD3rE,KAAKmG,SAAS8lE,OAASjsE,KAAKmG,SAAS8lE,QAAU,CAAC,EAEhD,MAAMpB,EAAiB,CAAC,EAExBxrE,OAAOD,KAAK4rE,GAA0ChnE,SAAS8mE,IAC5D,GAC6D,iBAAnDE,EAAyCF,GAYhD,OAVAD,EAAeC,GAAQ,CAAC,OAExBzrE,OAAOD,KAAK4rE,EAAyCF,IAAO9mE,SACxD+mE,IACEF,EAAeC,GAAMC,GAClB/qE,KAAKmG,SAAS2kE,GAAMC,IACpBC,EAAyCF,GAAMC,EAAK,IAOhEF,EAAeC,GACZ9qE,KAAKmG,SAAS2kE,IACdE,EAAyCF,EAAK,IAGpD9qE,KAAKmG,SAAW0kE,EAGhB7qE,KAAKssE,UACF5mE,EAAO4mE,WAAatB,EAAyCsB,UAIhEtsE,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,aAC/B,CAMA63D,gBACG,MAAO,EACV,oBCxJH,MAAMlC,EAAe,EAAQ,MACvB+C,EAAkB,EAAQ,OAE1B6T,EAAqC,CACxCzrE,OAAQ,EACR0rE,SAAU,EACVC,UAAW,EACXC,UAAW,EACXC,aAAc,IACdC,WAAY,OACZC,UAAW,EACXxxC,OAAQ,MAGLyxC,EAAoB,CACvB1oE,IAAK,MACLgH,KAAM,kBACNyqD,SAAU,OAGbt2D,EAAOC,QAAU,cAA4Bm2D,EAM1Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBqmC,EACvD,CAEAliD,gBACG,OAAOkiD,CACV,CAEAliD,uBACG,OAAO2hD,CACV,CAYAvmE,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASrF,OAAS4kB,SAAS1lB,KAAKmG,SAASrF,QAC9Cd,KAAKmG,SAASqmE,SAAW9mD,SAAS1lB,KAAKmG,SAASqmE,UAAY,GAC5DxsE,KAAKmG,SAASsmE,UAAY/mD,SAAS1lB,KAAKmG,SAASsmE,WACjDzsE,KAAKmG,SAASumE,UAAYhnD,SAAS1lB,KAAKmG,SAASumE,WACjD1sE,KAAKmG,SAASwmE,aAAejnD,SAAS1lB,KAAKmG,SAASwmE,cACpD3sE,KAAKmG,SAASymE,WAAa5sE,KAAKmG,SAASymE,WACzC5sE,KAAKmG,SAAS0mE,UAAYnnD,SAAS1lB,KAAKmG,SAAS0mE,UACpD,CAEAE,OAAOC,EAASjR,GACb,OAAO/7D,KAAK8E,YACRwkB,QACE,CACGllB,IAAKs0D,EAAgB1qB,SAAS5pC,IAC9BjD,MAAO6rE,EACPtR,QAASK,GAEZ/7D,KAAK8E,YACL9E,MAEF2H,MACP,CAMAkwD,gBACG,MAAO,EACV,oBCjFH,MAAMlC,EAAe,EAAQ,MAEvBsX,EAAsC,CACzCh/D,KAAM,GAKNnN,OAAQ,EAIRi1D,WAAY,MAST0B,EAAiB,CACpBrzD,IAAK,OAILgH,KAAM,OAINyqD,SAAU,QAKbt2D,EAAOC,QAAU,cAA6Bm2D,EAC3Ch2D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,GAEpDz3D,KAAKqsE,QAAU,IAClB,CAEAzhD,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOqiD,CACV,CAcApnE,QAGG7F,KAAK4/B,YAAY5/B,KAAMA,KAAM,CAAC,SAE9B,IAAIwX,EAAM1X,MAAM+F,QAEhB,OADA2R,EAAIiQ,MAAQ,GACLjQ,CACV,CAQAxR,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAAWnG,KAAKmG,UAAY,CAAC,EAGlCnG,KAAKmG,SAASrF,OAAS4kB,SACpB1lB,KAAKmG,SAASrF,QAAUmsE,EAAoCnsE,QAI/Dd,KAAKiO,KAAOvI,EAAOuI,MAAQg/D,EAAoCh/D,KAI/DjO,KAAKw/B,UAAUx/B,KAAMA,KAAM,CAAC,QAC/B,CAMA63D,gBACG,MAAO,EACV,CAQIjsC,qBACD,MAAwB,YAApB5rB,KAAK0U,QAAQtQ,IACPpE,KAAK8B,GAAGiqB,mBAAmB/rB,KAAK0U,OAAOvO,SAAS4vD,YAEhD/1D,KAAK8B,GAAGiqB,mBAAmB/rB,KAAKmG,SAAS4vD,WAEtD,CAEAvsD,SAAS7D,GACN,IAAIxE,EAAQwE,EAAMxE,OAAS,GAG3B,OAFAA,EAAQA,EAAM0R,QAAQ,MAAO,OAC7B1R,EAAQA,EAAM0R,QAAQ,MAAO,OACtB1R,CACV,CAEA+rE,YAAYv3D,EAAKw3D,GACd,IAAIx/D,EAAS3N,KAAKiO,KAMdwlB,EAAKzzB,KAAK4rB,eAGV5mB,EAASyuB,GAAI9H,YAAc3rB,KAAKqsE,QACpC,IAAKrnE,EAAQ,MARY,CAAC2I,GAChBA,EAAOkF,QAAQ,WAAY,IAOjBu6D,CAAmBz/D,GAEvC,MAAMsgB,EAAUtY,GAAO8d,EAAGjH,aAAe,CAAC,EAqE1C,OAnEAxnB,EAAO8B,SAAS9C,SAAS+C,IAKtB,IAAI5F,EAAQnB,KAAKwJ,SAASzC,GAE1B,IAAI4/D,EAAW,IAAItkD,OAAO,IAAMlhB,EAAQ,IAAK,KAMzCwI,EAAO5C,EAAEyZ,OAAOyN,GACpB,GAAa,SAATlnB,EAAE3C,IAAgB,CACnB,IAAIipE,EAAQ1jE,EACZA,EAAO5C,EAAE8zD,SAASwS,IAMdA,GACDtmE,EAAEZ,SAASu8C,iBACX37C,EAAEZ,SAASs8C,gBAEX94C,EAAO5C,EAAE8zD,SAAS9zD,EAAEZ,SAASu8C,iBA4B7B/0C,EAASA,EAAOkF,QACb,MACA,oDAGT,CAEAlF,EAASA,EAAOkF,QAAQ8zD,EAAUh9D,EAAK,IAI1CgE,EAASA,EAAOkF,QAAQ,QAASob,EAAQjpB,EAAOqqB,MAGnD,CAEAtqB,WAAWC,GACRhF,KAAKqsE,QAAUrnE,CAClB,mBCpNH,MAAMm2D,EAAS,EAAQ,OAEjB1D,EAAiB,CACpBrzD,IAAK,aACLgH,KAAM,kBACNyqD,SAAU,wBAGPuF,EAA8B,CACjCkS,WAAY,EACZC,QAAS,GAGZhuE,EAAOC,QAAU,cAA+B27D,EAO7Cx7D,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAAiBgxB,EACvD,CAEA7sC,gBACG,OAAO6sC,CACV,CAEA7sC,uBACG,OAAOwwC,CACV,CAQAp1D,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAKmG,SAASmnE,WAAa5nD,SACxB1lB,KAAKmG,SAASmnE,YAAclS,EAA4BkS,YAE3DttE,KAAKmG,SAASonE,QAAU7nD,SACrB1lB,KAAKmG,SAASonE,SAAWnS,EAA4BmS,QAE3D,oBChDO,EAAQ,OAAlB,MAGMC,EAAoB,EAAQ,OAE5BC,EAAa,EAAQ,MACL,EAAQ,OAE9BluE,EAAOC,QAAU,cAAiCguE,EAC/C7tE,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,GAGlB9B,KAAK0tE,sBAAyBC,IAC3B,IAAIC,EAAW5tE,KAAK6kB,OAAOmI,MAAMhL,GAAMA,EAAEnjB,KAAO8uE,EAAW9uE,KACvD+uE,IACD5tE,KAAK6kB,OAAS7kB,KAAK6kB,OAAOjc,QAAQoZ,GAAMA,EAAEnjB,IAAM+uE,EAAS/uE,KACzDmB,KAAK6kB,OAAOxgB,KAAKupE,EAASC,mBAC7B,EAEH7tE,KAAK6kB,OAAO7gB,SAASge,IAClBA,EAAE7f,GAAG,qBAAsBnC,KAAK0tE,sBAAsB,GAE5D,CAEA9iD,sBAIG,OAHAtiB,QAAQ6G,MACL,qEAEI,IACV,CACAyb,0BACG,IAAIkjD,EAAiB,IAAI5uE,MACtB,qEAGH,OADAoJ,QAAQ6G,MAAM2+D,GACP,IACV,CAEAljD,yBACG,IAAIkjD,EAAiB,IAAI5uE,MACtB,oEAGH,OADAoJ,QAAQ6G,MAAM2+D,GACP,IACV,CAEAC,UACG,OAAO/tE,KAAK8B,GAAG4gB,UAAU,MAAM1iB,KAAKkH,OACvC,CASA2mE,kBACG,IAAIG,EAAShuE,KAAK8B,GAAGo4B,gBAAgBl6B,KAAKnB,IAO1C,OAJAmB,KAAK6kB,OAAO7gB,SAASge,IAClBA,EAAEgV,eAAe,qBAAsBh3B,KAAK0tE,sBAAsB,IAG9DM,CACV,CAcA9oE,kBAAkB+oE,EAAQ7pE,IAC2B,GAAjCpE,KAAKoE,GAAK8I,QAAQ+gE,EAAOpvE,MAEvCmB,KAAKoE,GAAKC,KAAK4pE,EAAOpvE,UAChBmB,KAAK2H,OAEjB,CAEAzC,kBAAkB+oE,EAAQ7pE,GACvB,IAAI8pE,EAASluE,KAAKoE,GAAK8B,OACvBlG,KAAKoE,GAAOpE,KAAKoE,GAAKwE,QAAQ/J,GACpBA,GAAMovE,EAAOpvE,KAGnBqvE,GAAUluE,KAAKoE,GAAK8B,cACflG,KAAK2H,MAEjB,CAQAwmE,qBAAqBvhD,GAClB,OAAO5sB,KAAKouE,YAAYxhD,EAAI,oBAC/B,CAQAnB,qBAAqBmB,GAClB,OAAO5sB,KAAKquE,YAAYzhD,EAAI,oBAC/B,CAQA0hD,aAAatpE,GACV,OAAOhF,KAAKouE,YAAYppE,EAAQ,YACnC,CASAupE,aAAavpE,GACV,OAAOhF,KAAKquE,YAAYrpE,EAAQ,YACnC,CAQAwpE,cAAchnD,GACX,OAAOxnB,KAAKouE,YAAY5mD,EAAS,aACpC,CASAinD,cAAcjnD,GACX,OAAOxnB,KAAKquE,YAAY7mD,EAAS,aACpC,CAQAknD,YAAYz2D,GACT,OAAOjY,KAAKouE,YAAYn2D,EAAO,WAClC,CASA02D,YAAY12D,GACT,OAAOjY,KAAKquE,YAAYp2D,EAAO,WAClC,CAQA22D,UAAU1uE,GAEP,KAAIA,EAAIgN,QAAQlN,KAAKnB,KAAO,GAA5B,CAEAqB,EAAImE,KAAKrE,KAAKnB,IAGdmB,KAAKumB,kBAAkBviB,SAAShF,IAC7BA,EAAE4vE,UAAU1uE,EAAI,IAInBF,KAAK2mB,gBAAgB3iB,SAAS0iB,IAC3BA,EAAEkoD,UAAU1uE,EAAI,IAInBF,KAAKooB,kBAAkBpkB,SAASmkB,IAC7BA,EAAEymD,UAAU1uE,EAAI,IAMnBF,KAAKskB,kBAAkBtgB,SAASqnC,IAC7B,KAAInrC,EAAIgN,QAAQm+B,IAAQ,GAAxB,CAEA,IAAI1pB,EAAM3hB,KAAK8B,GAAG2iB,eAAe4mB,GACjC,GAAI1pB,IACDzhB,EAAImE,KAAKgnC,GACL1pB,EAAIxb,SAASqjB,cAAc,CAC5B,IAAIxkB,EAAShF,KAAK8B,GAAG2V,WAAWkK,EAAIxb,SAASqjB,cACzCxkB,GACDA,EAAO4pE,UAAU1uE,EAEvB,CAV8B,CAWjC,IAIHF,KAAKsnB,YAAYtjB,SAASge,IACvBA,EAAE4sD,UAAU1uE,EAAI,IAMnB,IAAI2uE,EAAanuE,IACVR,EAAIgN,QAAQxM,EAAK7B,KAAO,IAC5BqB,EAAImE,KAAK3D,EAAK7B,KACb6B,EAAK8jB,SAAW,IAAIxgB,SAAS8qE,IAC3B,IAAIC,EAAO/uE,KAAK8B,GAAG2iB,eAAeqqD,GAC9BC,GACDF,EAAUE,EACb,KAGFruE,EAAKu7D,SAAW,IAAIj4D,SAASgrE,IAC3B,IAAIC,EAAOjvE,KAAK8B,GAAG2iB,eAAeuqD,GAC9BC,GACDJ,EAAUI,EACb,IACD,GAGSjvE,KAAK6kB,OAAOnmB,KAAKsjB,GAAMA,EAAEnjB,MAC3B,IAAImF,SAAS8qE,IACtB,IAAIC,EAAO/uE,KAAK8B,GAAG2iB,eAAeqqD,GAC9BC,GACDF,EAAUE,EACb,IAIH7uE,EAAMF,KAAK8B,GAAG2gB,KAAKviB,EAxEkB,CAyExC,CASAwkB,QAAQhf,GACL,OAAO,IAAI+nE,EAAW/nE,EAAQ1F,KACjC,CASAkF,iBAAiBkjE,GAGd,IADiBpoE,KAAK6kB,OAAOjc,QAAQoZ,GAAMA,EAAEnjB,IAAMupE,EAAKvpE,KAAI,GAIzD,OAFAmB,KAAK6kB,OAAOxgB,KAAK+jE,GAEVpoE,KAAK2H,MAElB,CAQAzC,iBAAiBkjE,GACd,IAAItjC,EAAU9kC,KAAK6kB,OAAO3e,OAK1B,GAJAlG,KAAK6kB,OAAS7kB,KAAK6lB,OAAM,SAAU7D,GAChC,OAAOA,EAAEnjB,IAAMupE,EAAKvpE,EACvB,IAEImB,KAAK6kB,OAAO3e,OAAS4+B,EACtB,OAAO9kC,KAAK2H,MAIlB,CAEAA,OAMG,OAHI3H,KAAKkH,MAAQlH,KAAKmB,QACnBnB,KAAKkH,KAAOlH,KAAKmB,OAEbrB,MAAM6H,MAChB,CAEAunE,eACGpvE,MAAMovE,eAKN,IAAIC,EAAS,CACV/qD,UAAW,SACXC,SAAU,QACVC,kBAAmB,kBAGtBjlB,OAAOD,KAAK+vE,GAAQnrE,SAASgQ,IAC1BhU,KAAKgU,GAAGhQ,SAASnF,IACJmB,KAAK8B,GAAG2iB,eAAe5lB,IAE9BmB,KAAKovE,gBAAgB,6BAA6BD,EAAOn7D,KAAM,CAC5D2Q,MAAO3kB,KAAKnB,GACZA,MAEN,GACD,IAMyB,GAA1BmB,KAAK4jB,WAAW1d,QAAgBlG,KAAK6jB,iBACtC7jB,KAAKovE,gBAAgB,+CAIxB,IAAIC,EAAWrvE,KAAK8B,GAAG2Q,QAAQnC,WAAW5R,KAAK6Q,GAAMA,EAAE1Q,KACvDmB,KAAK4jB,WAAW5f,SAASuL,KACM,GAAxB8/D,EAASniE,QAAQqC,IAClBvP,KAAKovE,gBACF,0BAA0B7/D,mCAC1B,CAAEqW,KAAMrW,GAEd,IAIHvP,KAAK6lB,QAAQ7hB,SAASge,IACnBA,EAAEktD,cAAc,GAEtB,CAEAI,cACG,IAAIC,EAAW,GAAGznD,OAAO9nB,KAAKwvE,WAc9B,MAbA,CACG,kBACA,kBACA,0BACA,YACA,QACA,SACDxrE,SAASgQ,IACRhU,KAAKgU,KAAKhQ,SAAShF,IAChBuwE,EAAWA,EAASznD,OAAO9oB,EAAEswE,cAAc,GAC5C,IAGEC,CACV,CAEAH,gBAAgBnwD,EAAKtV,EAAO,CAAC,GAC1B,IAAIsH,EAAU,eAAejR,KAAKmB,WAAW8d,IAC7Cjf,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAClC,oBCvYH,MAAM01B,EAAY,EAAQ,OAEpBowC,EAAyB,EAAQ,OAEvC,IAAI1vE,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAA0B6/B,EAOxC1/B,YAAYC,EAAKC,EAAQiC,GACtBhC,QAIIF,GAAOA,EAAIkC,KACZ9B,KAAK8B,GAAKlC,EAAIkC,IAIbA,IACD9B,KAAK8B,GAAKA,GAIRlC,IACEkC,EAAGy6B,KACJ38B,EAAMkC,EAAGy6B,MAET38B,EAAM,CACH4P,KAAM1N,EAAG6Y,MAAM5P,MAMfjJ,GAAIA,EAQJgI,QAAS,CAAC,EAMV9H,OAAQF,EAAGC,WAAWC,SAMtB0tE,OAAQ,KAMRpyD,MAAOxb,EAAGC,WAAWub,MAErBrd,MAAOF,EAMPoS,OAAQ,CACLiP,IAAKrhB,EAAE,OACP4vE,OAAQ5vE,EAAE,UACVgW,OAAQhW,EAAE,UACV6vE,KAAM7vE,EAAE,QACRksE,OAAQlsE,EAAE,UACV8vE,SAAU9vE,EAAE,QACZ+vE,OAAQ/vE,EAAE,UACVgwE,OAAQhwE,EAAE,UACVmR,GAAInR,EAAE,MAENuR,OAAQvR,EAAE,UACV4H,KAAM5H,EAAE,QAERiwE,IAAKjwE,EAAE,OACPkwE,GAAIlwE,EAAE,MAENmwE,KAAMnwE,EAAE,QACRowE,MAAOpwE,EAAE,SAETguC,QAAShuC,EAAE,WACXqwE,mBAAoBrwE,EAAE,uBAEtBoF,QAASpF,EAAE,WAEXw9C,SAAUx9C,EAAE,YACZK,OAAQL,EAAE,UAEVswE,eAAgB,CACb9yB,SAAUx9C,EAAE,2BAGfuwE,mBAAoBvwE,EAAE,uCACtBwwE,qBAAsBxwE,EAAE,0BAExBywE,mBAAoBzwE,EAAE,uCACtB0wE,oBAAqB1wE,EAAE,0BAEvB2wE,mBAAoB3wE,EAAE,uCACtB4wE,qBAAsB5wE,EAAE,0BAExB6wE,mBAAoB7wE,EAAE,uCACtB8wE,qBAAsB9wE,EAAE,0BAGxB+wE,qBAAsB/wE,EAAE,iBACxBgxE,gCAAiChxE,EAAE,gBAEnCixE,eAAgBjxE,EAAE,SAClBkxE,0BAA2BlxE,EAAE,SAE7BmxE,oBAAqBnxE,EAAE,cACvBoxE,+BAAgCpxE,EAAE,uBAElCqxE,kBAAmBrxE,EAAE,cAErBsxE,kBAAmBtxE,EAAE,qBASxBK,OAAQ,SAAUgE,GACf,MAAO,GAAGA,IAAMpE,KAAKwP,MACxB,GAEH1N,EAAGy6B,KAAO38B,IAIXA,EAAI8vE,SACD5tE,EAAG4tE,OAIL9vE,EAAI8vE,OAAS5tE,EAAG4tE,QAHO,IAAID,GACV6B,eAAe1xE,IAMtCI,KAAKJ,IAAMA,EAEXI,KAAKH,OAASA,GAAU,UAC3B,CAEAiK,QAAQynE,GAEL,GADAjpE,QAAQ6G,MAAM,+BACVoiE,EACD,IAAK,IAAI9jE,KAAK8jE,EACXvxE,KAAKJ,IAAIkK,QAAQ2D,GAAK8jE,EAAS9jE,EAGxC,CAEAxN,QACG,MAAO,IAAIsV,IAEDvV,KAAK8B,GAAGkP,aAAa7P,SAASoU,EAE3C,CAEAnV,OAAOgE,GACJ,OAAOpE,KAAKJ,IAAIQ,OAAO,GAAGJ,KAAKH,UAAUuE,IAC5C,oBClLH,MAAMqrB,EAAgB,EAAQ,OACxB+hD,EAAuB,EAAQ,MAErCjyE,EAAOC,QAAU,cAA+BgyE,EAC7C7xE,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,GAClB9B,KAAK2Y,gBAAgB,EACxB,CAWAzT,aAQG,OAPKlF,KAAKnB,KACPmB,KAAKmB,MAAQnB,KAAKmB,OAASnB,KAAKkH,YAE7BpH,MAAM6H,OACZ3H,KAAK8B,GAAGsN,KAAK,2BAA4B,CACtCqiE,iBAAkBzxE,KAAKnB,KAEnBmB,IACV,CAEAsF,UACG,IAAIgC,EAAYtH,KAAK8B,GAAGic,WAAWzW,YAC/BvH,EAAIC,KAAK8B,GAAG7B,QAiBhB,OARgB,GALbD,KAAK8B,GAAGmkB,iBAAiBjnB,GAEnBA,EAAEH,IAAMmB,KAAKnB,IACbG,EAAEkI,KAAKmR,eAAiBrY,KAAKkH,KAAKmR,gBAErCnS,QAEHoB,EAAUmW,SACP,OACA1d,EAAE,6CAA8C,CAACC,KAAKkH,QAIrDI,CACV,CAaA8mB,sBACG,OAAOpuB,KAAK8B,GAAG2Q,QAAQlC,UAC1B,CAMAlN,OAEOrD,KAAKksB,cAGTpsB,MAAMuD,OAKNrD,KAAK8B,GAAGK,GAAG,4BAA6BwH,IAErC3J,KAAKoP,KAAK,2BAA4BzF,EAAK,IAG9C3J,KAAK8B,GAAGK,GAAG,4BAA6BwH,IAErC3J,KAAKoP,KAAK,2BAA4BzF,EAAK,IAO9C3J,KAAK8B,GAAGK,GAAG,2BAA4BwH,IAEpC3J,KAAKoP,KAAK,0BAA2BzF,EAAK,IAG7C3J,KAAK8B,GAAGK,GAAG,4BAA6BwH,IAErC3J,KAAKoP,KAAK,2BAA4BzF,EAAK,IAG9C3J,KAAK0xE,eACR,CAEAA,eAIG,IAAIz+C,EAAqBjzB,KAAK8rB,mBAC1BE,EAAYhsB,KAAKgsB,UACrB,IAAKhsB,KAAKmG,SAAS4jB,SAAWkJ,GAAsBjH,EAAW,CAC5D,IAAIY,EAAK5sB,KAAKmqB,iBAEdyC,EAAGoI,KAAK/B,EAAmB9I,iBAAkB6B,EAAUntB,IAEvD+tB,EAAGpoB,OAAO,YAAY,CAAC9B,EAAO6S,KAC3B,IAAIo8D,GAAgB,EAEhB/kD,EAAGglD,oBAAsBlvE,IAC1BivE,GAAgB,GAGnB/kD,EAAGglD,mBAAqB5xE,MAAM8rB,oBAAoBU,aAAa3tB,GAI5DmB,KAAK8rB,oBACI,MAATppB,GACyB,MAAzBkqB,EAAGglD,mBAEH5xE,KAAKgb,WAGC22D,GAMN3xE,KAAKywB,WAAW,EAAG,GACtB,GAEN,CACH,CAEA7B,SAASiE,EAAOC,EAAQ,IACrB,OAAOhzB,MAAM8uB,SAASiE,EAAOC,GAAO1e,OAAOlM,IAMxC,GAJAlI,KAAK6xE,2BACL7xE,KAAKoP,KAAK,WAAY,CAAC,GAGnBlH,EACD,MAAMA,CACT,GAEN,CAcA0rB,oBAAoBjqB,GAkDjB,OA9CIA,EAAKA,OAASqD,MAAMC,QAAQtD,EAAKA,QAClCA,EAAKA,KAAO,CAACA,EAAKA,OA6Cd7J,MAAM8zB,oBAAoBjqB,GAAMwK,MAAK,KAGzCnU,KAAK6xE,0BAA0B,GAErC,CAYAC,iBAAiB3xE,GACLH,KAAKmqB,iBAGVnqB,KAAKuqB,mBAAmBrd,QAAQ/M,EAAU6B,OAAOnD,KAAO,GAIzDmB,KAAKuqB,mBAAmBlmB,KAAKlE,EAAU6B,OAAOnD,GAEpD,CAQAm2B,KAAK70B,GACF,IAAIysB,EAAK5sB,KAAKmqB,kBAIgD,IAA1DnqB,KAAKsqB,mBAAmBpd,QAAQ/M,EAAU6B,OAAOnD,KAClDmB,KAAKsqB,mBAAmBjmB,KAAKlE,EAAU6B,OAAOnD,IAE7C6E,GAAGvD,EAAU6B,OAAOnD,IAAI8K,MAAMqjB,OAAO,CAAC,GAAG9mB,OAAS,IAG1B,aAAzB/F,EAAU6B,OAAOtB,MACQ,YAAzBP,EAAU6B,OAAOtB,MACQ,aAAzBP,EAAU6B,OAAOtB,MACQ,UAAzBP,EAAU6B,OAAOtB,KAEbksB,GAGW,GAFAA,EAAG4E,SAGXxxB,KAAKwqB,aAAexqB,KAAKyqB,eAAeC,YACtC1qB,KAAKwqB,aAAexqB,KAAKyqB,eAAewB,eAC3C9rB,EAAUiF,cAEVjF,EAAUiF,aAAa,CAAEzD,KAAM,SAGlCxB,EAAUqE,OAAO,YAAa,IAC9BrE,EAAUqE,OAAO,eAAgB,KAGJ,aAAzBrE,EAAU6B,OAAOtB,KAEfV,KAAK2rB,YACL3rB,KAAK2rB,WAAWrG,SAChBtlB,KAAKgrB,kBAEL7qB,EAAUqE,OAAO,OAAQxE,KAAKgrB,kBAC9B7qB,EAAUsE,YAIVtE,EAAUqE,OAAO,OAAQ,IACzBrE,EAAU8W,MAAM2V,EAAGI,KAAK,CAAC,KAG5B7sB,EAAUwJ,KAAKooE,KAAKnlD,GAIlB5sB,KAAKmG,SAAS4jB,UAChB5pB,EAAU4uB,MAAQ5uB,EAAU4uB,OAAS,CAAC,EAEjC5uB,EAAU4uB,MAAMijD,qBAClB7xE,EAAU4uB,MAAMijD,mBAAqB7xE,EAAU8uB,YAC5C,iBACA,CAAC4D,EAAOrB,KACDrxB,EAAUiF,cACXjF,EAAUiF,aAAa,CAAEzD,KAAM,SAGlCirB,EAAGqlD,SAASzgD,EAAOqB,IAEZ,QAsBnB1yB,EAAUwJ,KAAKuoE,SAEV/xE,EAAU60B,OACdpI,EAEDzsB,EAAU60B,KAAKpI,GAEfzsB,EAAU80B,SAGT90B,EAAUsE,SAAStE,EAAUsE,WAEvC,CAEAwwB,OAAO90B,GACCA,IAELA,EAAUgyE,YAAY,iBAClBhyE,EAAU4uB,QACP5uB,EAAU4uB,MAAMijD,2BACV7xE,EAAU4uB,MAAMijD,mBAEtB7xE,EAAU4uB,MAAMqjD,eACbpyE,KAAKqyE,KAAKryE,KAAKqyE,IAAI,WAAYlyE,EAAU4uB,MAAMqjD,qBAC5CjyE,EAAU4uB,MAAMqjD,eAIzBjyE,EAAUwJ,MAAQxJ,EAAUwJ,KAAKuoE,SAClC/xE,EAAUwJ,KAAKuoE,SACf/xE,EAAUqE,OAAO,OAAQ,KAGxBrE,EAAU80B,QAAQ90B,EAAU80B,SAE5B90B,EAAUsE,SAAStE,EAAUsE,UAGjCzE,KAAKsqB,oBAAsBtqB,KAAKsqB,oBAAsB,IAAI1hB,QACtD/J,GAAOA,GAAMsB,EAAU6B,OAAOnD,KAErC,CAEAgzE,2BACG7xE,KAAKsqB,mBAAmBtmB,SAASmxB,IAC1BzxB,GAAGyxB,IAAUzxB,GAAGyxB,GAAOztB,cAAchE,GAAGyxB,GAAOztB,cAAc,GAEvE,CAYA0iB,mBAAmBzgB,GAEhB,IAAIijB,EAAK,IAAIppB,MAAM8uE,eAAe,CAC/B3oE,KAAMA,GAAQ,KAKjB,OAFA3J,KAAKuyE,kBAAkB3lD,GAEhBA,CACV,CASA3B,qBAEG,IAAIunD,EAAY,IAAIhvE,MAAMivE,eAI1B,OAFAzyE,KAAKuyE,kBAAkBC,GAEhBA,CACV,CAEAD,kBAAkBG,GAGflvE,MAAMC,OAAOivE,EAAWlvE,MAAMmvE,gBAE9BD,EAAU3jD,MAAQ2jD,EAAU3jD,OAAS,CAAC,EAGjC/uB,KAAKmG,SAAS4jB,UACX2oD,EAAU3jD,MAAMijD,qBAClBU,EAAU3jD,MAAMijD,mBAAqBU,EAAUzjD,YAC5C,iBACA,CAAC4D,EAAOrB,KACDqB,EAAQ,IAAGA,EAAQ,GAGvB7yB,KAAK4uB,SAASiE,EAAOrB,IAEd,MAKXkhD,EAAU3jD,MAAM6jD,mBAClBF,EAAU3jD,MAAM6jD,iBAAmBF,EAAUzjD,YAC1C,eACA,KACGjvB,KAAKoP,KAAK,WAAY,CAAC,EAAE,MAOrCsjE,EAAUG,OAAS,WAAa,EAChCH,EAAUI,UAAY,WAAa,EACnCJ,EAAUK,OAAS,WAAa,EAE3BL,EAAU3jD,MAAMikD,cAClBN,EAAU3jD,MAAMikD,YAAcN,EAAUzjD,YACrC,eACA,KACGjvB,KAAK6xE,0BAA0B,IAI3C,CAEAnhD,oBAAoB/mB,EAAO,CAAC,GACzB,KACK3J,KAAK8qB,wBAAwB2E,GAC9BzvB,KAAK8qB,aAAaxF,SAClBtlB,KAAKgrB,kBAEN,OAEH,IAAIioD,EAAe,CAAC/kE,EAAO,CAAC,EAAGglE,EAAc,QAC1C,IAAIrjD,EAAQ3hB,EAAK2hB,OAEhBlmB,EAAKA,MAAQ,IAAI3F,SAASob,IACxB,IAAI+zD,EAAS/zD,EAAI,GAAGyQ,WAAiBzQ,EAAI,GAAGyQ,QAC5C,IAAKsjD,EAAQ,OAGb,IAAIC,EAAgB,GAChBC,EACDj0D,EAAI,GAAG8zD,WAAuB9zD,EAAI,GAAG8zD,QAmBxC,GAlBIG,IACDD,EAAgBpzE,KAAKgrB,iBACjBgC,MACGhf,GACEA,EAAKslE,QAAUJ,GAAellE,EAAKulE,SAAWF,IAEnD30E,KAAKsP,GAASA,EAAKnP,MAIbmB,KAAKgrB,iBAAiBgC,MAAMhf,GAEnCA,EAAKslE,QAAUzjD,GACf7hB,EAAKulE,SAAWJ,IACS,GAAxBC,EAAcltE,QACZktE,EAAclmE,QAAQc,EAAKkf,UAAY,KAE7C,GACS,OAEZ,IAAIsmD,EAAW,CAAC,EAChBA,EAASF,OAASzjD,EAClB2jD,EAASD,QAAUJ,EACnBK,EAAS7mD,QAAUvN,EAAIvgB,GAEvBQ,OAAOD,KAAKggB,GAAKpb,SAASy4C,IAEc,GAAjCA,EAASvvC,QAAQ,GAAG2iB,QACrB2jD,EAAS/2B,GAAYr9B,EAAIq9B,GAC5B,IAGCr9B,EAAImG,eAAciuD,EAASjuD,aAAenG,EAAImG,cAG9C6tD,EAAcltE,OAAS,EACxBktE,EAAcpvE,SAASyvE,IACpBzzE,KAAKgrB,iBAAiB5J,IAAIoyD,EAAU,KAAMC,EAAa,IAGxDzzE,KAAKgrB,iBAAiB5J,IAAIoyD,EAAU,KAAK,KAIhDtlE,EAAKm7B,OAAS,IAAIrlC,SAAS2lC,IACzBspC,EAAatpC,EAAM9Z,EAAM,GAC1B,GAIJ7vB,KAAKsqB,oBAAsB,IAAItmB,SAASmxB,IAEtC,IAAIu+C,EAAYhwE,GAAGyxB,GACfu+C,GAAaA,EAAUtuE,cACxBsuE,EAAUtuE,aAAa,CAAEzD,KAAM,SAE9B+xE,EAAU/pE,MAAQ+pE,EAAU/pE,KAAKuoE,QAAQwB,EAAU/pE,KAAKuoE,QAAQ,IAGvEe,EAAajzE,KAAK8qB,aAAamd,UAG9BjoC,KAAKsqB,oBAAsB,IAAItmB,SAASmxB,IACtC,IAAIu+C,EAAYhwE,GAAGyxB,GACfu+C,GAAaA,EAAUhsE,cAAcgsE,EAAUhsE,eACnDgsE,EAAUlvE,OAAO,OAAQxE,KAAKgrB,iBAAiB,GAErD,CAEAkkD,eACGpvE,MAAMovE,eAEDlvE,KAAK2rB,WAEC3rB,KAAKypB,uBACEzpB,KAAK8B,GAAG6xE,mBAAmB3zE,KAAKypB,uBAG5CzpB,KAAKovE,gBACF,sCAAsCpvE,KAAKypB,0BANjDzpB,KAAKovE,gBAAgB,6BAS3B,CAEAA,gBAAgBnwD,EAAKtV,EAAO,CAAC,GAC1B,IAAIsH,EAAU,kBAAkBjR,KAAKmB,WAAW8d,IAChDjf,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAClC,CAEI+rB,iBACD,OAAO11B,KAAK8B,GAAG2Q,QAAQ1D,QAC1B,oBC3kBH,IAAI6kE,EAAmB,EAAQ,OAE/Br0E,EAAOC,QAAU,cAA2Bo0E,qBCK5C,IAAIzlE,EAAe,qBAEnB5O,EAAOC,QAAU,cAAwB2O,EACtCxO,cACGG,OACH,oBCZH,MAAM+zE,EAAa,EAAQ,OAE3B,IAAI9zE,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAAqBq0E,EACnCl0E,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,EAMrB,CAWAyS,QAAQ3U,GAGL,IAAIk0E,EAAW9zE,KAAK0oB,QAChBqrD,EAAa,GACjBD,EAAS9vE,SAAS/E,IACf80E,EAAW1vE,KAAKpF,EAAEsV,UAAU,IAG/B,IAAIy/D,EAAYp0E,EAAIukB,QAAQjX,QAAQlN,KAAKnB,IACrCm1E,GAAa,IACdp0E,EAAIukB,QAAQnY,OAAOgoE,EAAW,GAC9Bp0E,EAAI+H,QAGP,IAAIjH,EAAOd,EAAI6nB,OAAOxU,GACZA,EAAEpU,IAAMmB,KAAKmG,SAASzF,OAC7B,GAOH,OALIA,WACMA,EAAKyF,SAASk1B,OACrB36B,EAAKiH,QAGD0H,QAAQkS,IAAIwyD,GAAY5/D,MAAK,IAE1B,IAAI9E,SAAQ,CAAC/P,EAAS+W,KAC1BrW,KAAKwU,eACDD,UACAJ,MAAK,KACH3Q,MAAMyN,QAAQ,CACXhD,KAAMlO,EAAE,oBACR4B,KAAM,UACNmQ,OAAQ,MAEXxS,GAAS,IAEX8U,OAAOlM,IACLmO,EAAOnO,EAAI,GACZ,KAGd,CAWAP,OACG,OAAO3H,KAAKwU,eACR7M,OACAwM,MAAMxK,IAIC3J,KAAKnB,KACPmB,KAAKnB,GAAK8K,EAAK9K,IAEXmB,OAEhB,CAEAsF,UAEG,OAAO,CAgBV,CAQAgqE,cA+DA,CAEA2E,eAEG,GAAIvwE,GAAG1D,KAAKnB,IAAK,OAEjB,IAAI6pB,EAAQ,GACR0C,EAAO,EAEX,GADc5nB,MAAMoX,QAAQs5D,OAAO5+D,IAAItV,KAAKnB,KAC/B6F,KAAM,OACnB,IAAIyvE,EAAW,2JAEMn0E,KAAKnB,iDAENkB,EAAE,2DAEtBC,KAAKq+B,QAAQr6B,SAAS06B,IACnBtT,IACA,IAAIgpD,EAAU,CAAC,EACfA,EAAQv1E,GAAKmB,KAAKs+B,OAAOI,GAAM7/B,GAC/Bu1E,EAAQ/nE,GAAKrM,KAAKs+B,OAAOI,GAAMv4B,SAASkG,GACxC+nE,EAAQ5jD,MAAQxwB,KAAKs+B,OAAOI,GAAMv4B,SAASqqB,MAC3C4jD,EAAQrjE,MAAQ/Q,KAAKs+B,OAAOI,GAAMx3B,KAClCktE,EAAQnmE,KAAOjO,KAAKs+B,OAAOI,GAAMzwB,KAAOkmE,EACpCn0E,KAAKq+B,QAAQjT,KACdgpD,EAAQC,OAASr0E,KAAKs+B,OAAOt+B,KAAKq+B,QAAQjT,IAAOjlB,SAASkG,GACtD+nE,EAAQC,SACTD,EAAQE,OAASt0E,KAAKnB,GACtBu1E,EAAQG,QAAU,SAClBH,EAAQhpD,KAAO,SAAUoF,GACtB,IAAI6jD,EAASr0E,KAAKq0E,OACdG,EAAY/lC,SAASgmC,cAAcJ,GACvC,OAAIG,GAAaA,EAAUE,mBAGxBjmC,SAASgmC,cAAcz0E,KAAKqM,IAAI/K,SAFzB,CAKb,IAGF8yE,EAAQ/nE,IAAIqc,EAAMrkB,KAAK+vE,EAAQ,IAGtC,IAAI3zE,EAAK,CACNC,KAAM,OACN7B,GAAImB,KAAKnB,GACT6pB,MAAOA,EACPvmB,GAAI,CACDwyE,OAASj2C,IACNpqB,YAAW,KACR,MAAMsgE,EAAQnmC,SAASomC,iBACpB,uBAAyB70E,KAAKnB,GAAK,MAEtC,IAAIi2E,EAAUtxE,MAAMoX,QAAQs5D,OAAO5+D,IAAItV,KAAKnB,IAC5C+1E,EAAM5wE,SAAS0J,IACZA,EAAEqnE,QAAUD,GAASpwE,OAAQ,CAAK,GACnC,GACF,IAAI,EAEVswE,WAAat2C,IACVpqB,YAAW,KACR,MAAMsgE,EAAQnmC,SAASomC,iBACpB,uBAAyB70E,KAAKnB,GAAK,MAEtC,IAAIi2E,EAAUtxE,MAAMoX,QAAQs5D,OAAO5+D,IAAItV,KAAKnB,IAC5C+1E,EAAM5wE,SAAS0J,IACZA,EAAEqnE,QAAUD,GAASpwE,OAAQ,CAAK,GACnC,GACF,IAAI,IAKhBlB,MAAMyxE,OACH,KACG,IACGzxE,MAAM/C,GAAGA,GAAIoyB,OAOhB,CANE,MAAO3qB,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,2DACHzO,MAEN,IAEH,KACA,KACA,IAIN,oBC/QH,MAAMy0E,EAAc,EAAQ,OAE5B31E,EAAOC,QAAU,cAAsB01E,EAUpCvtE,OACG,OAAO7H,MACH6H,OACAwM,MAAK,IAAMnU,KAAKgF,OAAO6gC,UAAU7lC,QACjCmU,MAAK,IAAMnU,KAAKiI,iBACvB,CAQAsM,UACG,OAAO,IAAIlF,SAAQ,CAAC/P,EAAS+W,KACtBrW,KAAKnB,GACNmB,KAAKm1E,cACDhhE,MAAK,IACIrU,MAAMyU,YAEfJ,MAAK,IAAMnU,KAAKgF,OAAO2gC,YAAY3lC,QACnCmU,KAAK7U,GACL8U,MAAMiC,GAEV/W,GACH,GAEN,CAEA4vE,eACGpvE,MAAMovE,gBAELlvE,KAAK++B,kBAAoB,IAAI/6B,SAASnF,IACpCmB,KAAKovE,gBAAgB,sCAAsCvwE,KAAM,IAG1C,GAAtBmB,KAAK8G,OAAOZ,QACblG,KAAKovE,gBAAgB,gCAE3B,CAYAA,gBAAgBnwD,EAAKtV,EAAO,CAAC,GAC1B,IAAIsH,EAAU,SAASjR,KAAKmB,WAAW8d,IACvCjf,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAClC,CAMA1B,gBACG,OAAOjI,KAAK8B,GAAGmN,QAAQe,KAAK,CACzBC,IAAK,8BAA8BjQ,KAAKgF,OAAOnG,YAAYmB,KAAKnB,MAGtE,CAEAs2E,cACG,OAAOn1E,KAAK8B,GAAGmN,QAAgB,OAAE,CAC9BgB,IAAK,8BAA8BjQ,KAAKgF,OAAOnG,YAAYmB,KAAKnB,MAEtE,oBCzEH,IAAIu2E,EAAgB,EAAQ,OAE5B71E,EAAOC,QAAU,cAAwB41E,EACtCz1E,YAAY2/B,EAAWx9B,GACpBhC,MAAMw/B,EAAWx9B,GAEjB9B,KAAKwvE,UAAY,EAQpB,CAWAD,WACG,OAAOvvE,KAAKwvE,SACf,CAOAN,eACGlvE,KAAKwvE,UAAY,EACpB,CASAF,cACG,OAAOtvE,KAAKuvE,UACf,CAOA5vC,kBACG,OAAO3/B,KAAK8B,GAAG2Q,QAAQ5C,YAAc,IACxC,CAOA3K,gBACG,IAAIyc,EAAM3hB,KAAKwU,eACf,OAAImN,EAAI9iB,GACE8iB,EAAIpN,UAAUH,OAAOlM,IACzB,GAAIA,EAAImM,WAAWnH,QAAQ,oBAAsB,EAM9C,OAJA5E,QAAQuO,IACL,qDAAqD8K,EAAI9iB,YAE5DyJ,QAAQuO,IAAI8K,GAGf,MAAMzZ,CAAG,IAGRmH,QAAQ/P,SAClB,CAOA4F,aACG,IAAIyc,EAAM3hB,KAAKwU,eAEfmN,EAAIza,KAAOya,EAAIza,MAAQlH,KAAKkH,MAAQlH,KAAKmB,OAAS,OAClD,IAAIwI,QAAagY,EAAIha,OAChB3H,KAAKnB,KACPmB,KAAKnB,GAAK8K,EAAK9K,GAErB,oBCxGH,MAAMw2E,EAAc,EAAQ,OAuB5B,SAASC,EAAWnmE,GAEbA,GAASA,EAAMxF,MAA4B,YAApBwF,EAAMxF,KAAKwF,OACnC3L,MAAMsN,MAAM,CACTC,MAAO,yBACPG,GAAI,KACJjD,KAAMkB,EAAMxF,KAAKsH,SAAW,GAC5BtP,KAAM,iBAGf,CA0BApC,EAAOC,QAAU,cAAsB61E,EACpC11E,YAAYqF,GACTlF,MAAMkF,GAENhF,KAAKu1E,eAAiB,IAAIhgE,KACvBvV,KAAKw1E,eAAe,8BAA+BjgE,EAAO,EAG7DvV,KAAKy1E,eAAiB,IAAIlgE,KACvBvV,KAAKw1E,eAAe,8BAA+BjgE,EAAO,EAG7DvV,KAAK01E,gBAAkB,IAAIngE,KACxBvV,KAAKw1E,eAAe,QAASjgE,EAAO,EAGvCvV,KAAK21E,aAAe,CAACzmE,EAAShH,EAAKyB,KAC5BzB,EACDgH,EAAQmH,SAASnO,GAGpBgH,EAAQ5P,UAAUqK,EAAK,EAG1B3J,KAAK41E,eAAiB,IAAIrgE,KACvBvV,KAAKw1E,eAAe,8BAA+BjgE,EAAO,EAG7DvV,KAAKw1E,eAAiB,CAACpxE,EAAK8K,EAAShH,EAAKyB,KAQnCzB,EACDgH,EAAQmH,SAASnO,IAIRlI,KAAK8B,GAAG6V,QAGhBvT,GAE6B,GAA1BA,EAAI8I,QAAQ,WACblN,KAAK8X,cAAcnO,GAItB3J,KAAK8X,cAAcnO,EAAKA,MAK3BuF,EAAQ5P,UAAUqK,GAEdvF,GArEb,SAA2B2D,EAAO3D,EAAKuF,GAGL,UAA3B5B,EAAMjG,GAAGmN,QAAQtN,QAClBoG,EAAMjG,GAAGsN,KAAKhL,EAAK,CAChBsT,SAAU3P,EAAM/C,OAAOnG,GACvB8K,QAGT,CA6DYksE,CAAkB71E,KAAMoE,EAAKuF,GAChC,CAEN,CAeAk3B,wBAAwBn7B,GAErB,IAAI65B,EAAWv/B,KAAKgF,OAAO87B,qBAEvBC,GAAkB,EAClBxB,EAASr5B,QACVq5B,EAASv7B,SAAQ,SAAU2B,GACH,MAAjBD,EAAOC,KACRo7B,GAAkB,EAExB,IAECA,IAEyB,MAAvBr7B,EAAO6f,mBACuB,IAAvB7f,EAAO6f,cACS,IAAvB7f,EAAO6f,eAEP7f,EAAO6f,aAAe,IAEzBvlB,KAAKgF,OAAO46B,YAAYl6B,EAAQA,EAAQ65B,GAE9C,CAEAjnB,QAAQ5B,EAAQnB,GACb,OAAOvV,KAAK8B,GAAGmN,QAAQyH,GAAQnB,EAClC,CAMAugE,YAAYpwE,GAKT,OAJAA,EAAOmuC,MAAMn1C,KAAK8G,GACRxF,KAAK6gC,wBAAwBr7B,EAAKmE,QAGrC,IAAI0F,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIsB,EAAQ3X,KAAK8B,GAAG6V,QACpB3X,KAAK8B,GAAGmN,QAAQ8mE,KAAKp+D,GAAO,CAACzI,EAAShH,EAAKyB,KACpCzB,EACDmO,EAAOnO,IAGVlI,KAAK8X,cAAcnO,GACnBrK,EAAQqK,GAAK,IAMhB3J,KAAK8B,GAAGmN,QAAQe,KACb,CACGC,IAAKjQ,KAAKgF,OAAO8gC,eACjBvwB,OAAQ7P,GAEX,CACGtB,IAAKuT,EACLzI,QAAS,CAAC,IAYZkF,MAAMiC,EAAO,GAEvB,CAMAs5D,OAAOjqE,GAUJ,OATA1F,KAAK6gC,wBAAwBn7B,GAG7B1F,KAAKgF,OAAO8B,SAAS9C,SAAS+C,SACEqR,IAAzB1S,EAAOqB,EAAEF,aACVE,EAAE2/B,aAAahhC,EAClB,IAGI,IAAI2J,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIsB,EAAQ3X,KAAK8B,GAAG6V,QACpB3X,KAAK8B,GAAGmN,QAAQ8mE,KAAKp+D,EAAO3X,KAAKu1E,gBACjCv1E,KAAK8B,GAAGmN,QAAQe,KACb,CACGC,IAAKjQ,KAAKgF,OAAOi8B,UACjB1rB,OAAQ7P,GAEX,CACGtB,IAAKuT,EACLzI,QAAS,CAAE5P,UAAS+W,YAExBjC,OAAOlM,IACNotE,EAAWptE,GACXmO,EAAOnO,EAAI,GACZ,GAER,CAQA6N,OAAOlX,GACJ,OAAO,IAAIwQ,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIsB,EAAQ3X,KAAK8B,GAAG6V,QACpB3X,KAAK8B,GAAGmN,QAAQ8mE,KAAKp+D,EAAO3X,KAAKy1E,gBACjCz1E,KAAK8B,GAAGmN,QAAgB,OACrB,CACGgB,IAAKjQ,KAAKgF,OAAOm8B,YAAYtiC,IAEhC,CACGuF,IAAKuT,EACLzI,QAAS,CAAE5P,UAAS+W,YAExBjC,OAAOlM,IACNotE,EAAWptE,GACXmO,EAAOnO,EAAI,GACZ,GAER,CAMAhD,cAAc4pB,GAqBX,OApBAA,EAAOA,GAAQ,CAAC,EAoBT,IAAIzf,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIsB,EAAQ3X,KAAK8B,GAAG6V,QACpB3X,KAAK8B,GAAGmN,QAAQ8mE,KAAKp+D,EAAO3X,KAAK01E,iBACjC11E,KAAK8B,GAAGmN,QAAQqG,IACb,CACGrF,IAAKjQ,KAAKgF,OAAOi8B,UACjB1rB,OAAQuZ,GAGX,CACG1qB,IAAKuT,EACLzI,QAAS,CAAE5P,UAAS+W,YAQtBjC,OAAOlM,IACDA,GAAOA,EAAI/I,OAEJ,mBADA+I,EAAI/I,KAENa,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QACG,oEACHm9B,UAAWtf,IAKd9uB,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QACG,sEACHm9B,UAAWtf,KAKvBzY,EAAOnO,EAAI,GACZ,GAEX,CAOA8tE,SAASC,GAEFj2E,KAAKqgC,SACN41C,EAAGzxE,OAAO,YAAaxE,KAAKqgC,QAC5B41C,EAAGzxE,OAAO,eAAgB,KAQ1ByxE,EAAGlnD,MAAQknD,EAAGlnD,OAAS,CAAC,EACpBknD,EAAGlnD,MAAMijD,oBACViE,EAAG9D,YAAY8D,EAAGlnD,MAAMijD,oBAE3BiE,EAAGlnD,MAAMijD,mBAAqBiE,EAAGhnD,YAC9B,iBACA,CAAC4D,EAAOrB,KACL,IAAI1C,EAAO,CACRa,MAAO3vB,KAAKkgC,OACZ1yB,KAAMxN,KAAKmgC,MACXrN,MAAOtB,EACP6B,KAAMR,GA2BT,OAxBIojD,EAAG7wE,cAAc6wE,EAAG7wE,aAAa,CAAEzD,KAAM,SAE7C3B,KAAKgwB,QAAQlB,GAAM3a,MAAMxK,IAiBtBssE,EAAGh/D,MAAMtN,GAELssE,EAAGvuE,cAAcuuE,EAAGvuE,cAAc,KAGlC,CAAK,IAIlBuuE,EAAGxxE,WAIN,IAAIqqB,EAAO,CAAC,EACR9uB,KAAKkgC,SAAQpR,EAAKa,MAAQ3vB,KAAKkgC,QAC/BlgC,KAAKmgC,QAAOrR,EAAKthB,KAAOxN,KAAKmgC,OACd,MAAfngC,KAAKqgC,SAAgBvR,EAAKgE,MAAQ9yB,KAAKqgC,QACzB,MAAdrgC,KAAKogC,QAAetR,EAAKuE,KAAOrzB,KAAKogC,OAErC61C,EAAG7wE,cAAc6wE,EAAG7wE,aAAa,CAAEzD,KAAM,SAE7C3B,KAAKgwB,QAAQlB,GACT3a,MAAMxK,IAgBJssE,EAAGh/D,MAAMtN,GAELssE,EAAGvuE,cAAcuuE,EAAGvuE,cAAc,IAExC0M,OAAOlM,IACLI,QAAQ6G,MAAM,QAASjH,EAAI,GAEpC,CAgBAguE,KAAKh0E,GACF,OAAO,IAAImN,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIsB,EAAQ3X,KAAK8B,GAAG6V,QACpB3X,KAAK8B,GAAGmN,QAAQ8mE,KAAKp+D,EAAO3X,KAAK21E,cACjC31E,KAAK8B,GAAGmN,QAAQqG,IACb,CACGrF,IAAKjQ,KAAKgF,OAAO+gC,aACjBxwB,OAAQrT,GAGX,CACGkC,IAAKuT,EACLzI,QAAS,CAAE5P,UAAS+W,YAExBjC,OAAOlM,IACFA,GAAOA,EAAI/I,MACZa,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,mCACThN,YAGNmU,EAAOnO,EAAI,GACZ,GAER,CAQA4qB,MAAMA,GAEH,OADA9yB,KAAKqgC,OAASvN,EACP9yB,IACV,CAQAqzB,KAAKA,GAEF,OADArzB,KAAKogC,MAAQ/M,EACNrzB,IACV,CAMAm2E,OAAOt3E,EAAI6G,GAIR,IAAK,IAAItB,KAHTpE,KAAK6gC,wBAAwBn7B,GAGbA,EACM,MAAfA,EAAOtB,WAAqBsB,EAAOtB,GAG1C,OAAO,IAAIiL,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIsB,EAAQ3X,KAAK8B,GAAG6V,QACpB3X,KAAK8B,GAAGmN,QAAQ8mE,KAAKp+D,EAAO3X,KAAK41E,gBACjC51E,KAAK8B,GAAGmN,QAAQ6G,IACb,CACG7F,IAAKjQ,KAAKgF,OAAOm8B,YAAYtiC,GAC7B0W,OAAQ7P,GAEX,CAAEtB,IAAKuT,EAAOzI,QAAS,CAAE5P,UAAS+W,YAgBjCjC,OAAOlM,IACLotE,EAAWptE,GACXmO,EAAOnO,EAAI,GACZ,GAEX,CAMAkuE,aAAY,OAAEC,EAAM,OAAE3wE,IACnB,OAAO,IAAI2J,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIsB,EAAQ3X,KAAK8B,GAAG6V,QACpB3X,KAAK8B,GAAGmN,QAAQ8mE,KAAKp+D,GAAO,CAACzI,EAAShH,KAC/BA,EACDmO,EAAOnO,GAIV5I,GAAQ,EAAK,IAGhBU,KAAK8B,GAAGmN,QAAQ6G,IACb,CACG7F,IAAKjQ,KAAKgF,OAAO8gC,eACjBvwB,OAAQ,CACL8gE,SACA3wE,WAGN,CAAEtB,IAAKuT,EAAOzI,QAAS,CAAC,IAKvBkF,MAAMiC,EAAO,GAEvB,oBCrjBH,MAAMitB,EAAU,EAAQ,OAExB/jC,EAAOC,QAAU,cAAyB8jC,EASvCp+B,cAAc4pB,EAAO,CAAC,GAInB,OAHAA,EAAK4L,OAAQ,EACb5L,EAAK7e,IAAMjQ,KAAKgF,QAAQsT,SAASrI,IAE1BnQ,MAAMkwB,QAAQlB,EACxB,CAMAgnD,YAAYpwE,GACT,MAAMyJ,EAAQ,IAAIjQ,MACf,iEAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,CAMAjK,aAAaQ,GACV,MAAMyJ,EAAQ,IAAIjQ,MACf,4DAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,CAQA4G,OAAOlX,GACJ,MAAMsQ,EAAQ,IAAIjQ,MACf,4DAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,CAMAgnE,OAAOt3E,EAAI6G,GACR,MAAMyJ,EAAQ,IAAIjQ,MACf,4DAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,CAMAinE,aAAY,OAAEC,EAAM,OAAE3wE,IACnB,MAAMyJ,EAAQ,IAAIjQ,MACf,iEAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,oBCzEH,MAAMm0B,EAAU,EAAQ,OAExB/jC,EAAOC,QAAU,cAA2B8jC,EASzCwyC,YAAYpwE,GACT,IAAIyJ,EAAQ,IAAIjQ,MACb,kEAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,CAMAwgE,OAAOjqE,GACJ,IAAIyJ,EAAQ,IAAIjQ,MACb,6DAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,CAQA4G,OAAOlX,GACJ,IAAIsQ,EAAQ,IAAIjQ,MACb,6DAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,CAMAgnE,OAAOt3E,EAAI6G,GACR,IAAIyJ,EAAQ,IAAIjQ,MACb,6DAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,CAMAinE,aAAY,OAAEC,EAAM,OAAE3wE,IACnB,IAAIyJ,EAAQ,IAAIjQ,MACb,kEAEH,OAAOmQ,QAAQgH,OAAOlH,EACzB,oBCnEH,MAAMo0B,EAAe,EAAQ,OACvB+yC,EAAkC,EAAQ,MAEhD,IAAIv2E,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAmBhDhW,EAAOC,QAAU,cAAuB+jC,EACrC5jC,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,GAElB9B,KAAKkmC,eAAiB,IAAIowC,EACvBrzD,EACAjjB,KACA8B,GAIH9B,KAAK8G,SAAS9C,SAAS+C,IACpBA,EAAE5E,GAAG,sBAAuBwD,IAEzB,IAAIgc,EAAM3hB,KAAK8B,GAAG2iB,eAAe9e,EAAM9G,IACvC,GAAK8iB,EAAL,CAEA,IAAI2Y,EAAWt6B,KAAK8B,GAAGmE,SAAS0b,EAAK3hB,MAGjC0oC,EAAY,GAChB1oC,KAAK8G,SAAS9C,SAAS+C,IAChBA,EAAElI,KAAO8G,EAAM9G,GAInB6pC,EAAUrkC,KAAK0C,GAHZ2hC,EAAUrkC,KAAKi2B,EAGD,IAGpBt6B,KAAKokC,QAAUsE,CAdC,CAcQ,GACzB,IAQL1oC,KAAK2f,wBAA0B,CAAC,EAMhC3f,KAAKu2E,wBAA0B,CAACrnE,EAAShH,EAAKgP,KAE3C,IAAI2I,EAAU7f,KAAK2f,0BAA0BzQ,EAAQM,MACjDtH,EACD2X,GAASxJ,OAAOnO,GAGnB2X,GAASvgB,QAAQ4X,EAAS,EAE7BlX,KAAK8B,GAAGmN,QAAQ9M,GAAG,iBAAkBnC,KAAKu2E,wBAC7C,CASA1I,kBACG,IAAIG,EAAShuE,KAAK8B,GAAG2V,WAAWzX,KAAKnB,IAerC,OAZImB,KAAK2f,0BAEN3f,KAAK8B,GAAGmN,QAAQ+nB,eACb,iBACAh3B,KAAKu2E,yBAIRvI,EAAOruD,wBAA0B3f,KAAK2f,wBACtC3f,KAAK2f,wBAA0B,MAG3BquD,CACV,CASAhoE,WAAWid,GAoBRnjB,MAAMkG,WAAWid,GAEbjjB,KAAKkmC,gBAAgBlmC,KAAKkmC,eAAeswC,QAAQvzD,EACxD,CAIA3d,UACG,IAAIgC,EAAYtH,KAAK8B,GAAGic,WAAWzW,YAwBnC,OAfgB,GALbtH,KAAK8B,GAAGwkB,SAAStnB,GAEXA,EAAEH,IAAMmB,KAAKnB,IACbG,EAAEkI,KAAKmR,eAAiBrY,KAAKkH,KAAKmR,gBAErCnS,QAEHoB,EAAUmW,SACP,OACA1d,EAAE,oDAAqD,CAACC,KAAKkH,QAW5DI,CACV,CASA6oB,YAAYxmB,GACT,IAAIrC,EAAYtH,KAAK8B,GAAGic,WAAWzW,YAMnC,OALAtH,KAAK8G,SAAS9C,SAAS+C,IAEhB4C,EAAKs0B,eAAel3B,EAAEF,aAAaE,EAAEopB,YAAYxmB,EAAMrC,EAAU,IAGjEA,CACV,CAmCApC,gBAuFG,IASG,QA/B0B,MAC1B,IAAIqmB,EAAa,GAIjB,OAHAvrB,KAAK8B,GAAGwpB,eAAetnB,SAASwnB,IAC7BD,EAAWlnB,KAAKmnB,EAAI+iD,aAAavuE,MAAM,IAEnCqP,QAAQkS,IAAIgK,EAAW,EAmBxBJ,QAhBmB,KAClB,IAAI9b,SAAS+b,IACjBprB,KAAK8B,GAAGomB,SACJC,GAAMA,EAAE7B,SAAStnB,GAAMA,EAAEH,IAAMmB,KAAKnB,KAAIqH,OAAS,IACnDlC,SAASmkB,IAGRA,EAAEgiB,UAAW,CAAI,IAGpB/e,GAAM,IASHqrD,GAIFz2E,KAAK0I,WACN,OAAO2G,QAAQ/P,gBAOZU,KAAKm1E,cAKX,IAAIuB,EAAa,GAIjB,GAAiB,UAAb12E,KAAK2B,KAAkB,CACxB,IAAIkC,EAAY7D,KAAK8G,SACrB9G,KAAKokC,QAAU,GAGfvgC,EAAUG,SAAS+C,IAChB2vE,EAAWryE,KAAK0C,EAAEwN,UAAU,GAElC,OACMlF,QAAQkS,IAAIm1D,SAEZ52E,MAAMyU,UACZvU,KAAKoP,KAAK,YAKb,CAJE,MAAOlH,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,gDAEf,CAmDH,CAWAhK,WAAWyxE,GAAc,GACtB,IAAIC,GAAQ,EAGP52E,KAAKnB,KACPmB,KAAKmB,MAAQnB,KAAKmB,OAASnB,KAAKkH,KAChC0vE,GAAQ,GAGX,IAKG,aAJM92E,MAAM6H,OACRivE,IAAUD,SACL32E,KAAKiI,gBAEPjI,IAOV,CANE,MAAOkI,GAKN,MAJAlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,kBACTsI,IAAKxX,KAAK6F,UAEPqC,CACT,CACH,CAaArC,QACG,IAAI8H,EAAS7N,MAAM+F,QAInB,OAFA8H,EAAOy6B,qBAAuBpoC,KAAKkmC,eAAergC,QAE3C8H,CACV,CAMA1F,gBACG,OAAO,IAAIoH,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAI7G,EAAOxP,KAAK8B,GAAG0N,OACnBxP,KAAK2f,wBAAwBnQ,GAAQ,CAAElQ,UAAS+W,UAChD,IAAIb,EAAc,CACfpR,IAAK,iBACL8K,QAAS,CAAEM,OAAM3Q,GAAImB,KAAKnB,KAE7BmB,KAAK8B,GAAGmN,QAAQe,KACb,CACGC,IAAK,8BAA8BjQ,KAAKnB,MAE3C2W,EACF,GAEP,CAEA2/D,cACG,OAAO,IAAI9lE,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAI7G,EAAOxP,KAAK8B,GAAG0N,OACnBxP,KAAK2f,wBAAwBnQ,GAAQ,CAAElQ,UAAS+W,UAChD,IAAIb,EAAc,CACfpR,IAAK,iBACL8K,QAAS,CAAEM,OAAM3Q,GAAImB,KAAKnB,KAE7BmB,KAAK8B,GAAGmN,QAAgB,OACrB,CACGgB,IAAK,8BAA8BjQ,KAAKnB,MAE3C2W,EACF,GAEP,CAgBAqhE,aAAahwE,EAAYiwE,GAEtB,IADA,IAAIj6C,EAAU,KACL3pB,EAAI,EAAGA,EAAIlT,KAAKokC,QAAQl+B,OAAQgN,IACtC,GAAIlT,KAAKokC,QAAQlxB,GAAGrM,YAAcA,EAAY,CAC3Cg2B,EAAU78B,KAAKokC,QAAQlxB,GAAGrU,GAC1B,KAEH,CASH,IAAI4pC,EAAgBzoC,KAAK8B,GAAGqgB,cAAc0a,GAI1C,OAHA4L,EAAgBA,GAAiB,CAAC,GACpB1nC,MAAQ+1E,EAEf92E,KAAK8B,GAAGqgB,cAAc0a,EAAS4L,EAEzC,CAIAsuC,cACGC,EACAjS,EACAK,EACAC,EACA4R,GAEA7R,EAAiBA,GAAkB,GACnCC,EAAeA,GAAgB,GAE/B,IAAI/uD,EAAU,GA6Ed,OAzEAtW,KAAK8G,SAAS9C,SAAS+C,IACpB,IAAIs8B,EAASt8B,EAAEmwE,aAAa,CACzBF,kBAAmBA,EACnBvtB,SAAUsb,IAGTA,IACD1hC,EAAO8zC,gBAAkBpwE,EAAEZ,SAASgxE,iBAGvC9zC,EAAOxT,MAAQ9oB,EAAE8oB,YAASzX,EAC1BirB,EAAOxG,QAAU91B,EAAElI,GAIK,GAApBkI,EAAEZ,SAASpF,QACZsiC,EAAOtiC,MAAQgG,EAAEZ,SAASpF,OAI7B,IAAI0nC,EAAgBzoC,KAAK8B,GAAGqgB,cAAcpb,EAAElI,IACxC4pC,GAAiBA,EAAc1nC,SAC3BsiC,EAAOtiC,OAAS0nC,EAAc1nC,MAAQsiC,EAAOtiC,SAE/CsiC,EAAOtiC,MAAQ0nC,EAAc1nC,OAI9BsiC,EAAOtiC,QAETsiC,EAAO+zC,QAAS,GAIfhS,EAAel4D,QAAQnG,EAAElI,KAAO,EACpB,aAATkI,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAC3Bi/B,EAAOg0C,OAAS,CAAEC,QAAS,cAAe3xE,MAAOoB,GAEjDs8B,EAAOg0C,OAAS,CAAEC,QAAS,cAIxBjS,EAAan4D,QAAQnG,EAAElI,KAAO,IACpCwkC,EAAOg0C,OAAS,CAAEC,QAAS,gBAE9BhhE,EAAQjS,KAAKg/B,EAAO,IA4BhB/sB,CACV,CAMAihE,eAAe5tE,EAAM/J,EAAK43E,EAAWnB,EAAQtR,GAC1C,IAAKp7D,IAASA,EAAK+jB,WAAY,OAG/B,IAAI5mB,EAAS,GAMb,GALA0wE,EAAUC,YAAY5wE,IACnB,IAAIlB,EAAQ3F,KAAK8G,QAAQC,GAAMA,EAAEF,YAAcA,IAAY,GACvDlB,GAAOmB,EAAOzC,KAAKsB,EAAM,IAGlB,MAAV0wE,EACDA,EAAOryE,SAASnF,IACb,IAAIugB,EAAMzV,EAAK+iB,QAAQ7tB,GACnBugB,GACDtY,EAAO9C,SAAS+C,IACb,IAAIzE,EAAOk1E,EAAUE,YAAY,CAC9Bt4D,IAAKA,EAAIvgB,GACT84E,OAAQ5wE,EAAEF,aAEbE,EAAE6wE,cAAcx4D,EAAKxf,EAAK0C,EAAM,CAC7BmnD,SAAUsb,GACX,GAER,QAEC,CACJ,IAAIlmE,EAAK8K,EAAK+jB,aACd,KAAO7uB,GAAI,CACR,IAAIugB,EAAMzV,EAAK+iB,QAAQ7tB,GACnBugB,GACDtY,EAAO9C,SAAS+C,IACb,IAAIzE,EAAOk1E,EAAUE,YAAY,CAC9Bt4D,IAAKA,EAAIvgB,GACT84E,OAAQ5wE,EAAEF,aAEbE,EAAE6wE,cAAcx4D,EAAKxf,EAAK0C,EAAM,CAC7BmnD,SAAUsb,GACX,IAGRlmE,EAAK8K,EAAKkkB,UAAUhvB,EACvB,CACH,CACH,CAGAsoC,YAAYlZ,GACT,GAAe,MAAXA,EAAiB,MAAO,GAI5B,IAAIsR,EAAWv/B,KAAK8gC,qBACpB9gC,KAAKw/B,UAAUvR,EAASA,EAASsR,GAEjC,IAAI6H,EAAYpnC,KAAKyjC,aAAe,GAGpC,IAAK2D,GAAapnC,KAAK8G,SAASZ,OAAS,EAAG,CACzC,IAAImhC,EAAernC,KAAK8G,QAAQC,GAAMA,EAAEugC,oBAAmB,GACzCF,EAAdC,EAA0B,IAAIA,EAAaxoC,MAEhC,GAAGmB,KAAK8B,GAAGsgB,OAAO6L,EAAQpvB,IAAM,OAAS,KAClDovB,EAAQpvB,IAEjB,CAIA,IAAImoC,EAASI,EAAUlvB,MAAM,cAc7B,GAZI8uB,GAAUA,EAAOhjC,SAClBgjC,EAAOhjC,SAASijC,IACb,IAAIC,EAAiBD,EAAMp0B,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAErDlN,EAAQ3F,KAAK4N,UAAUs5B,GACd,MAATvhC,IAEJyhC,EAAYA,EAAUv0B,QAAQo0B,EAAOthC,EAAM6a,OAAOyN,IAAY,IAAG,KAKlEmZ,EAAUG,OAAQ,CACpB,IAAI7D,EAAgB1jC,KAAK0jC,eAAiB,CAAC,EAExC0D,EADC1D,GAAiBA,EAAcC,iBACpB5jC,EAAE2jC,EAAc8D,aAAe,cAG/B,GAAGxnC,KAAK8B,GAAGsgB,OAAO6L,EAAQpvB,IAAM,OAAS,KAClDovB,EAAQpvB,IAGjB,CAEA,OAAOuoC,CACV,CAEAkiC,cACG,OAAOtpE,KAAKkmC,eAAeE,gBAC9B,CAEAkpC,cAEG,IAAIuI,EAAc/3E,MAAMwvE,cASxB,OARAtvE,KAAK8G,SAAS9C,SAAS+C,IACpB8wE,EAAcA,EAAY/vD,OAAO/gB,EAAEwoE,WAAW,IAGjDvvE,KAAKwkC,UAAUxgC,SAASkP,IACrB2kE,EAAcA,EAAY/vD,OAAO5U,EAAEq8D,WAAW,IAG1CsI,EAAYjvE,QAAQkvE,GAAMA,GACpC,CAEA5I,eACGpvE,MAAMovE,eAEN,IAAIrrE,EAAY7D,KAAK8G,SAEG,GAApBjD,EAAUqC,QACXlG,KAAKovE,gBAAgB,kBAGvBpvE,KAAK++B,kBAAoB,IAAI/6B,SAASnF,IACpCmB,KAAKovE,gBAAgB,sCAAsCvwE,KAAM,KAGnEmB,KAAKukC,eAAiB,IAAIvgC,SAASnF,IACjCmB,KAAKovE,gBAAgB,sCAAsCvwE,KAAM,IAGpEgF,EAAUG,SAAS+C,IAChBA,EAAEmoE,cAAc,IAGnBlvE,KAAKwkC,UAAUxgC,SAASkP,IACrBA,EAAEg8D,cAAc,GAEtB,CAEAE,gBAAgBnwD,EAAKtV,EAAO,CAAC,GAC1B,IAAIsH,EAAU,UAAUjR,KAAKmB,WAAW8d,IACxCjf,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAElC,CAEAouE,OAAO9pE,GAIJ,OAHA3F,QAAQ6G,MACL,qFAEInP,KAAK8B,GAAGsgB,OAAOnU,EACzB,oBCvwBH,MAAM+pE,EAAW,EAAQ,MACnBC,EAAkB,EAAQ,OAEhC14E,EAAOC,QAAU,cAA0By4E,EACxCt4E,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,EACrB,CAEAoD,gBAAgBgzE,EAAgB,IAC7B,GAAIl4E,KAAK8iC,UAAW,OAEpB,MAAMxsB,EAAUtW,KAAKsW,QAEfY,QAAiB8gE,EAASh4E,KAAKsY,QAAQrI,IAAK,CAC/CyG,OAAQ1W,KAAKsY,QAAQ6/D,KACrB7hE,UACA3M,KAAM,CAAC,EACPkI,QAAS,KACTumE,iBAAiB,IAGpB,IAAIC,EAAiBr4E,KAAKkjC,YAAYhsB,GAEtC,MAAMnP,EAAQ/H,KAAK+H,QAEnB,GAA6B,MAAzBswE,EAAenyE,QAA4C,IAA1BmyE,EAAenyE,OAAc,CAC/D,MAAMyD,EAAO,CAAC,EAQd,OANA3J,KAAKkX,SAASpQ,OAAO9C,SAAS+C,IAC3B4C,EAAK5C,EAAEF,YAAcwxE,EAAetxE,EAAEF,WAAW,eAG9CkB,EAAM4nE,OAAOhmE,EAGtB,CAEA,IAAI2uE,EAAqB,GAEzB,IAAK,IAAIplE,EAAI,EAAGA,EAAImlE,EAAenyE,OAAQgN,IAAK,CAC7C,MAAMvJ,EAAO,CAAC,EAEd3J,KAAKkX,SAASpQ,OAAO9C,SAAS+C,IAC3B4C,EAAK5C,EAAEF,YAAcwxE,EAAenlE,GAAGnM,EAAEF,WAAW,IAGvDyxE,EAAmBj0E,KAAK0D,EAAM4nE,OAAOhmE,IAEjC2uE,EAAqBJ,GAAkB,SAClC7oE,QAAQkS,IAAI+2D,EACxB,CAEIA,EAAmBpyE,OAAS,SAASmJ,QAAQkS,IAAI+2D,GAErDt4E,KAAK8iC,WAAY,QAEX9iC,KAAK2H,MACd,CAWAzC,aACG,aAAapF,MAAM6H,MAAK,EAC3B,mBCtEH,MAAM4pB,EAAW,EAAQ,OAOzBhyB,EAAOC,QAAU,cAA+B+xB,qBCPhD,MAAMA,EAAW,EAAQ,OASzBhyB,EAAOC,QAAU,cAA6B+xB,qBCM9C,MAAMgnD,EAAoB,EAAQ,MAElC,IAAIl6D,EAAY,KACC,oBAAN/G,GACRA,GAAGC,OAAOpV,GAAG,mBAAmB,SAAU8c,GACnCZ,EACDA,EAAUjP,KAAK,kBAAmB,CAC/B2gC,QAAS9wB,EAAI8wB,QACbpmC,KAAMsV,EAAItV,QAGbrB,QAAQ6G,MACL,sEAEH7G,QAAQ6G,MAAM,iCAEpB,IAEA7G,QAAQ6G,MAAM,qDAMjB5P,EAAOC,QAAU,cAA4B+4E,EAC1C54E,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,GAEbuc,IACFA,EAAYvc,GAGf9B,KAAK8B,GAAGK,GAAG,mBAAoBwH,IACxB3J,KAAKnB,IAAM8K,EAAKomC,SAAS/vC,KAAKgG,WAAW2D,EAAKA,KAAK,IAW1D3J,KAAKw4E,cAAcx4E,KAAK2vB,MAC3B,CAmEAuY,aAAaO,GACV3oC,MAAMooC,aAAaO,GAEnBzoC,KAAKokC,QAAQpgC,SAASy0E,IAGnBA,EAAW9yE,MAAMkB,WAAa,GAAG4xE,EAAW5oD,SAAS4oD,EAAW9yE,MAAMkB,YAAY,GAExF,CAYAgwE,aAAahwE,EAAYiwE,EAAU4B,GAChC,IAAI/yE,EAAQ3F,KAAK8G,QAAQC,GAAMA,EAAEF,YAAcA,IAAY,GAC3D,OAAIlB,GACDA,EAAMQ,SAASpF,MAAQ+1E,EAEhB92E,KAAK2H,QAEL0H,QAAQ/P,SAErB,CAQAy3E,cACGC,EACAjS,EACAK,EACAC,EACA4R,GAEA,IAAI3gE,EAAUxW,MAAMi3E,cACjBC,EACAjS,EACAK,EACAC,EACA4R,GAyDH,OAtDA3gE,EAAQtS,SAAS0iB,IAEd,IAAI1hB,EAAShF,KAAK4oC,cAAcliB,EAAEmJ,OAClC,IAAK7qB,EAAQ,OAEb,IAAIW,EAAQX,EAAO4I,UAAU8Y,EAAEmW,SAC/B,IAAKl3B,EAAO,OAGZ,IAAIkqB,EAAQ,GA0BZ,GAxBGA,EADC7iB,MAAMC,QAAQjN,KAAKioC,SACZtiC,EAAMX,OAAOkC,KAEbwf,EAAEmJ,MAKbnJ,EAAE7nB,GAAK,GAAGgxB,KAASlqB,EAAMkB,aAGrB7G,KAAKmG,UAAYnG,KAAKmG,SAASmiC,WAChC5hB,EAAE2c,OAAS,GAAG19B,EAAMxE,OAAS,KAE7BulB,EAAE2c,OAAS,GAAG19B,EAAMX,OAAO7D,OAAS,MAAMwE,EAAMxE,OAAS,KAIxDwE,EAAMQ,UAAYR,EAAMQ,SAASC,WAClCsgB,EAAE2c,OAAS,iCAAiC19B,EAAMm3C,uBAC/Cp2B,EAAE2c,UAKJrjC,KAAKslB,QAAS,CACf,IAAIqzD,EAAiBjyD,EAAEigD,SAEvBjgD,EAAEigD,SAAW,CAAC34D,EAAMggC,IACbhgC,EAAK0Y,EAAE7nB,IAELmvC,EAAO5iC,KAAK4C,EAAMggC,IACjB2qC,EACIA,EAAe3qE,EAAMggC,EAAQhgC,EAAK0Y,EAAE7nB,KACpCmP,EAAK0Y,EAAE7nB,KAEN,EAElB,CAEA6nB,EAAE0wD,QAAS,EACX1wD,EAAE8lD,SAAW,GAAG,IAGZl2D,CACV,CAWAkiE,cAAczoD,GACNA,IAIDA,EAAKjG,MACLiG,EAAK1O,OAAS,IAAIrd,SAASuL,IACzBvP,KAAKw4E,cAAcjpE,EAAE,KAMfvP,KAAK4N,UAAUmiB,EAAK3rB,MACN,eAAZ2rB,EAAK3rB,KAChBpE,KAAKovE,gBACF,iDACA,CACGr/C,SAMJ/vB,KAAK44E,kBACP54E,KAAK44E,gBAAkB54E,KAAK8B,GAAGuzB,iBAC5B,GAAGr1B,KAAKnB,sBAKTmB,KAAK44E,gBAAgBC,oBAAoB9oD,IAC3C/vB,KAAKovE,gBAAgB,kCAAmC,CACrDr/C,UAGT,CAEAm/C,eACGpvE,MAAMovE,eAENlvE,KAAKw4E,cAAcx4E,KAAK2vB,OAGxB3vB,KAAK0nC,gBAAgB1jC,SAAS+C,IAC3B/G,KAAKovE,gBACF,2CACGroE,EAAE61B,8BACiBlpB,KAAKC,UAAU5M,KACrC,CACG4hC,UAAW5hC,GAEhB,IAGJ/G,KAAK2nC,gBAAgB3jC,SAAS+C,IAC3B/G,KAAKovE,gBACF,yBAAyBroE,EAAE+hC,+BACxB/hC,EAAE81B,6BACiBnpB,KAAKC,UAAU5M,EAAE4hC,aACvC,CACG3jC,OAAQ+B,EAAE+hC,MACVH,UAAW5hC,EAAE4hC,WAElB,IAGJ3oC,KAAK4nC,aAAa5jC,SAAS+C,IACxB/G,KAAKovE,gBACF,SAASroE,EAAEpB,MAAM9G,kCAAkC6U,KAAKC,UACrD5M,EAAE4hC,2CAEL,CACGhjC,MAAOoB,EAAEpB,MAAME,QACf8iC,UAAW5hC,EAAE4hC,WAElB,IAGJ3oC,KAAK6nC,kBAAkB7jC,SAAS+C,IAC7B/G,KAAKovE,gBACF,SACGroE,EAAE4hC,UAAU9L,uCACiBnpB,KAAKC,UAClC5M,EAAE4hC,6BAEL,CACGA,UAAW5hC,EAAE4hC,WAElB,IAGJ3oC,KAAK8nC,eAAe9jC,SAAS+C,IAC1B/G,KAAKovE,gBAAgBroE,EAAEkK,QAASlK,EAAE4C,KAAK,GAE7C,CAEAylE,gBAAgBnwD,EAAKtV,EAAO,CAAC,GAC1B,IAAIsH,EAAU,SAASjR,KAAKmB,WAAW8d,IACvCjf,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAClC,CAEAouE,OAAO9pE,GAIJ,OAHA3F,QAAQ6G,MACL,qFAEInP,KAAK8B,GAAGsgB,OAAOnU,EACzB,oBChWH,MAAM6qE,EAAgB,EAAQ,OAI9Bv5E,EAAOC,QAAU,cAAwBs5E,EACtCn5E,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,GAElB9B,KAAK+4E,eAAiB,GAMtB/4E,KAAK8B,GAAGK,GAAG,uBAAwBwH,IAC5B3J,KAAKnB,IAAM8K,EAAK+N,UAAU1X,KAAKgG,WAAW2D,EAAKA,KAAK,GAE9D,CAWA4K,UAEG,IAAIykE,EAAch5E,KAAKgJ,WACnB+qE,EAAa,GAKjB,OAJAiF,EAAYh1E,SAAS/E,IAClB80E,EAAW1vE,KAAKpF,EAAEsV,UAAU,IAGxBlF,QAAQkS,IAAIwyD,GAAY5/D,MAAK,IAE1B,IAAI9E,SAAQ,CAAC/P,EAAS+W,KAC1BrW,KAAKwU,eACDD,UACAJ,MAAK,KAEH7U,GAAS,IAEX6U,MAAK,KAIH7L,QAAQ6G,MACL,kGAEH,IAAI8pE,EAAkBj5E,KAAK8B,GAAGwpB,eAAe0B,MAAMvf,GACzCA,EAAE8Z,WAAWvnB,QAEnBi5E,EAAgB/yE,OAAS,GAC1B+yE,EAAgBj1E,SAASyJ,IACtBA,EAAEghE,cAAczuE,KAAK,GAE3B,IAEFoU,OAAOlM,IACLmO,EAAOnO,EAAI,GACZ,KAGd,CAWAP,OAUG,IAAI82D,EAAW,GAKf,OAJez+D,KAAKgJ,WACXhF,SAAS+7B,IACf0+B,EAASp6D,KAAK07B,EAAEp4B,OAAO,IAEnB0H,QAAQkS,IAAIk9C,GAAUtqD,MAAK,IAExBnU,KAAKwU,eACR7M,OACAwM,MAAMxK,IAIC3J,KAAKnB,KACPmB,KAAKnB,GAAK8K,EAAK9K,IAMlB,IAAIq6E,EAAO,CAAC,EACZ,IAAIC,EAAOn5E,KAAKyqC,UAChBprC,OAAOD,KAAKY,KAAKyqC,WAAWzmC,SAASgQ,IAClCklE,EAAKl5E,KAAKyqC,UAAUz2B,GAAGnV,IAAMmB,KAAKyqC,UAAUz2B,EAAE,IAEjDhU,KAAKyqC,UAAYyuC,EAIjB,IAAIE,GAAW,EAOf,GANA/5E,OAAOD,KAAK85E,GAAMl1E,SAASgQ,IACnBmlE,EAAKnlE,KACPolE,GAAW,EACd,IAGCA,EACD,OAAOp5E,KAAK2H,MACf,KAGZ,CAEArC,UACG,IAAIgC,EAAYtH,KAAK8B,GAAGic,WAAWzW,YAcnC,OARgB,GAFbtH,KAAK8B,GAAGwlB,WAAWtoB,GACTA,EAAEkI,KAAKmR,eAAiBrY,KAAKkH,KAAKmR,gBACzCnS,QAEHoB,EAAUmW,SACP,OA1IJ,KAAIlI,IAAWzT,GAAGkP,aAAa7P,SAASoU,GA2IpCxV,CAAE,qDAAsD,CAACC,KAAKkH,QAI7DI,CACV,CAaA+xE,6BAA6Br9C,GAC1B,IAAIqR,EAAOrtC,KAAK8B,GAAGi6B,oCAAoCC,EAASh8B,MAIhE,OAHIqtC,GACDrtC,KAAKksC,WAAWmB,GAEZA,CACV,CAQAisC,aAAaC,GACVv5E,KAAKw5E,mBAAmBD,GACxBv5E,KAAK+4E,eAAe10E,KAAKk1E,EAC5B,CAOAC,mBAAmBD,GAChBv5E,KAAK+4E,eAAiB/4E,KAAK+4E,eAAenwE,QAAQ6D,GAAMA,EAAE5N,IAAM06E,EAAM16E,IACzE,CAQAywE,cAEG,IAAIuI,EAAc,GAAG/vD,OAAO9nB,KAAKwvE,WAYjC,GAXAxvE,KAAKgJ,WAAWhF,SAAS/E,IACtBA,EAAEiwE,eACF2I,EAAcA,EAAY/vD,OAAO7oB,EAAEswE,WAAW,IAGnB,GAA1BvvE,KAAKgJ,WAAW9C,QACjB2xE,EAAYxzE,KAAK,CAAE4M,QAAS,4BAA6BtH,KAAM,CAAC,KAK9D3J,KAAKy5E,WACP,GAAIvgE,OAAOwgE,UAER15E,KAAKy5E,WAAa,SAAUE,GACzB,OAAO,IAAIzgE,OAAOwgE,WAAYE,gBAC3BD,EACA,WAEN,MACI,SAC2B,IAAxBzgE,OAAO2gE,gBACd,IAAI3gE,OAAO2gE,cAAc,oBASzB,MAAM,IAAI36E,MAAM,uBAPhBc,KAAKy5E,WAAa,SAAUE,GACzB,IAAIG,EAAS,IAAI5gE,OAAO2gE,cAAc,oBAGtC,OAFAC,EAAO50E,MAAQ,QACf40E,EAAOC,QAAQJ,GACRG,CACV,CAGH,CAIH,IAAI5uC,EAAMlrC,KAAKy5E,WAAWz5E,KAAKuqC,eA0B/B,MAzBsB,CACnB,mBACA,aACA,kBAEWvmC,SAASyI,IACpB,IAAIusE,EAAc9tC,EAAI8uC,qBAAqBvtE,GAC3C,IAAK,IAAIM,EAAI,EAAGA,EAAIisE,EAAY9yE,OAAQ6G,IAE3BisE,EAAYjsE,GACV/M,KAAKosC,oBAAoB4sC,EAAYjsE,GAAGlO,KAEjDmB,KAAKs5E,aAAaN,EAAYjsE,GAEpC,IAIC/M,KAAK+4E,eAAe7yE,QACrB2xE,EAAYxzE,KAAK,CACd4M,QAAS,iCACTtH,KAAM,CAAC,IAINkuE,CACV,oBCnQH,MAAMoC,EAAa,EAAQ,OAI3B16E,EAAOC,QAAU,cAAqBy6E,EACnCt6E,YAAYsjB,EAAYnhB,GACrBhC,MAAMmjB,EAAYnhB,EAMrB,CAWAyS,UAGG,OAAO,IAAIlF,SAAQ,CAAC/P,EAAS+W,KAC1BrW,KAAKwU,eACDD,UACAJ,MAAK,KACH7U,GAAS,IAEX8U,OAAOlM,IACLmO,EAAOnO,EAAI,GACZ,GAwCX,CAWAP,OAEG,OAAO3H,KAAKwU,eACR7M,OACAwM,MAAMxK,IAIC3J,KAAKnB,KACPmB,KAAKnB,GAAK8K,EAAK9K,IAEXmB,OAEhB,CAEAsF,UAEG,OAAO,CAgBV,CAQAgqE,cA+DA,oBC7LH,MAAM4K,EAAoB,EAAQ,OAElC36E,EAAOC,QAAU,cAA4B06E,eCF7C,IAAIn6E,EAAI,KAGRR,EAAOC,QAAU,MACdG,YAAYM,GAGJF,IACFA,EAAIE,EAGAA,EAAMA,QACPF,EAAIE,EAAMA,OAGnB,CAOAk6E,mBACG,MAAO,CACJ,CAAEt7E,GAAI,IAAK6D,MAAO3C,EAAE,cACpB,CAAElB,GAAI,KAAM6D,MAAO3C,EAAE,+CACrB,CAAElB,GAAI,IAAK6D,MAAO3C,EAAE,kBACpB,CAAElB,GAAI,IAAK6D,MAAO3C,EAAE,cAE1B,CASAq6E,aAAaC,GACV,IAAKA,IAAaA,EAASC,OAASD,EAASC,KAAK34E,KAAM,OAAO,EAG/D,IAAI44E,EAAgBF,EAASC,KAAK34E,KAAK0W,cACvC,MACoB,YAAjBkiE,GACiB,4BAAjBA,CAMN,CAcAC,YAAYH,EAAUI,GACnB,OAAKz6E,KAAKo6E,aAAaC,GAEhB,IAAIhrE,SAAQ,CAAC/P,EAAS+W,KAE1B,IAAIqkE,EAAS,IAAIxhE,OAAOyhE,WACxBD,EAAOE,OAAU37E,IACd,IAAI0O,EAAS,IAGE+sE,EAAO/sE,OAClB6a,MAAM,cACN5f,QAAQwW,GAAQA,GAAOA,EAAIlZ,OAAS,KAG3B,IAAIlC,SAASob,IACvB,IAAIy7D,EAAW,GAMZA,EALgB,KAAfJ,GAEDr7D,EAAMA,EAAIvM,QAAQ,MAAO,QAGVqF,MAAM,gCAEVkH,EAAIoJ,MAAMiyD,GAGxB9sE,EAAOtJ,KAAKw2E,EAASn8E,KAAKo8E,GAAS96E,KAAKshD,SAASw5B,KAAO,IAG3Dx7E,EAAQqO,EAAO,EAElB+sE,EAAOK,WAAWV,EAASC,KAAK,IA/BMjrE,QAAQgH,QAiCpD,CAcA2kE,iBAAiBC,EAAUC,GAOxB,IANA,IAAIvxE,EAMKuJ,EAAI,EAAGA,GAJD,GAIiBA,IAAK,CAClC,IAAIioE,EAAOF,EAAS/nE,GACpB,IAAKioE,EAAM,MAIX,GAAY,OAFZxxE,EAAOwxE,EAAKD,KAEQvxE,EAAKzD,OAAS,EAAG,KACxC,CAEA,OAAY,MAARyD,GAAwB,IAARA,EACV,SAEC,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,GAARA,GACQ,WAARA,GACQ,aAARA,EAEO,UACEwkC,MAAMxkC,GAEP8W,KAAKxJ,MAAMtN,GACZ,OAGHA,EAAKzD,OAAS,IAAY,WAClB,SANL,QAQb,CAMAo7C,SAAS85B,GACN,OAAKA,EAEEA,EAAI7zC,OAAO10B,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAFjC,EAGpB,oBC/JH,MAAMwoE,EAAoB,EAAQ,OAElC,IAAIt7E,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAkBhD,SAAS+lE,EAAYxsD,EAAMhoB,EAAS,IACjC,GAAKgoB,EAAL,CACA,GAAIA,EAAK1qB,IAAK,CAWX,MAAMuB,EAAQmB,EAAO8B,QAAQ7B,GAAMA,EAAElI,IAAMiwB,EAAK1qB,MAAK,GACrD0qB,EAAKnpB,MAAQA,GAAO9G,GAEpBiwB,EAAKsf,UAAY,CACdzsC,KAAMmtB,EAAKiB,KACXnnB,OAAQkmB,EAAKpsB,OAGZsK,MAAMC,QAAQ6hB,EAAKpsB,OAAQosB,EAAKojB,SAAWpjB,EAAKpsB,MAC/CosB,EAAKojB,UAAYpjB,EAAKpsB,OAAS,IAAI8lB,MAAM,KAE5B,QAAd7iB,GAAOvB,KAA+B,YAAduB,GAAOvB,MAChC0qB,EAAKsf,UAAUxlC,OAASkmB,EAAKsf,UAAUxlC,OAClC9G,GAAGuf,MAAMhB,OAAOyO,EAAKsf,UAAUxlC,QAC/B,KAELkmB,EAAKojB,SAAWpjB,EAAKojB,SAASxzC,KAAKuU,GAAMnR,GAAGuf,MAAMhB,OAAOpN,aAGrD6b,EAAK1qB,WACL0qB,EAAKiB,YACLjB,EAAKpsB,KACf,CAEIosB,EAAKzN,OAASyN,EAAKzN,MAAMnb,SACzB4oB,EAAKzN,OAAS,IAAIrd,SAASuL,IACzB+rE,EAAY/rE,EAAGzI,EAAO,GAtCX,CAyCpB,CAiBA,SAASy0E,EAAYzsD,EAAMhoB,EAAS,IACjC,GAAKgoB,EAAL,CACA,GAAIA,EAAKnpB,MAAO,CACb,IAAIA,EAAQmB,EAAO8B,QAAQ7B,GAAMA,EAAElI,IAAMiwB,EAAKnpB,QAAO,GAErDmpB,EAAK1qB,IAAMuB,GAAO9G,IAAMiwB,EAAKnpB,MAC7BmpB,EAAKsf,UAAYtf,EAAKsf,WAAa,CAAC,EACpCtf,EAAKiB,KAAOjB,EAAKsf,UAAUzsC,KAE3B,IAAI+D,EACDopB,EAAKojB,SAASxzC,KAAKuU,GAAOA,aAAawN,KAAOxN,EAAEyQ,cAAgBzQ,KAChE,GAGC6b,EAAKsf,UAAUxlC,SACZkmB,EAAKsf,UAAUxlC,kBAAkB6X,KAC9B/a,EAAOwH,QAAQ4hB,EAAKsf,UAAUxlC,OAAO8a,eAAiB,GACvDhe,EAAOrB,KAAKyqB,EAAKsf,UAAUxlC,QAEtBlD,EAAOwH,QAAQ4hB,EAAKsf,UAAUxlC,QAAU,GAChDlD,EAAOrB,KAAKyqB,EAAKsf,UAAUxlC,SAGjCkmB,EAAKpsB,MAAQgD,EACThH,KAAKuU,IAECtN,GAAuB,QAAbA,EAAMvB,KAA8B,YAAbuB,EAAMvB,IAGpC6O,EAFGtN,EAAMm5C,YAAY,IAAIr+B,KAAKxN,MAIvC/E,KAAK,YAEF4gB,EAAKnpB,aACLmpB,EAAKntB,YACLmtB,EAAKojB,gBACLpjB,EAAKsf,SACf,CAEItf,EAAKzN,OAASyN,EAAKzN,MAAMnb,SACzB4oB,EAAKzN,OAAS,IAAIrd,SAASuL,IACzBgsE,EAAYhsE,EAAGzI,EAAO,GAxCX,CA2CpB,CAEAvH,EAAOC,QAAU,cAA4B67E,EAC1C17E,YAAYE,EAAQiC,EAAII,EAAU,CAAC,GAGhCpC,MAFAD,EAASA,GAAU,mBAELiC,GAEd9B,KAAKw7E,SAAWt5E,GAAW,CAAC,EAE5BlC,KAAKy7E,eAAgB,EAKrBz7E,KAAK07E,WAAY,EAKH17E,KAAKmS,OAAS,CACzB67B,QAASlsC,EAAGy6B,MAAQ,CAAC,GAAGpqB,OACxBhS,UAAW,CACRw7E,IAAK57E,EAAE,OACP67E,GAAI77E,EAAE,MAEN87E,WAAY97E,EAAE,eACdg3C,QAASh3C,EAAE,YACXk3C,WAAYl3C,EAAE,gBACd42C,aAAc52C,EAAE,kBAChB82C,gBAAiB92C,EAAE,sBAEnB+7E,6BAA8B/7E,EAAE,kBAChCg8E,6BAA8Bh8E,EAAE,kBAEhCm2C,WAAYn2C,EAAE,gBACdq2C,cAAer2C,EAAE,oBAEjBs3C,YAAat3C,EAAE,iBACfw3C,eAAgBx3C,EAAE,aAElBu2C,iBAAkBv2C,EAAE,sBACpBy2C,oBAAqBz2C,EAAE,0BAEvBk0C,kBAAmBl0C,EAAE,YACrBo0C,qBAAsBp0C,EAAE,mBACxBs0C,YAAat0C,EAAE,MACfw0C,eAAgBx0C,EAAE,UAClB00C,QAAS10C,EAAE,YACX40C,WAAY50C,EAAE,gBAEd0yC,gBAAiB1yC,EAAE,aACnB4yC,eAAgB5yC,EAAE,YAClB8yC,oBAAqB9yC,EAAE,mBACvBgzC,mBAAoBhzC,EAAE,kBACtBkzC,uBAAwBlzC,EAAE,0BAC1BozC,sBAAuBpzC,EAAE,yBACzBszC,2BAA4BtzC,EAAE,gCAC9BwzC,0BAA2BxzC,EAAE,+BAC7B0zC,oBAAqB1zC,EAAE,iBACvB4zC,oBAAqB5zC,EAAE,iBAEvB80C,eAAgB90C,EAAE,KAClB+0C,kBAAmB/0C,EAAE,KACrBg1C,kBAAmBh1C,EAAE,KACrBi1C,kBAAmBj1C,EAAE,KACrBk1C,yBAA0Bl1C,EAAE,KAC5Bm1C,yBAA0Bn1C,EAAE,KAE5Bq1C,mBAAoBr1C,EAAE,UACtBs1C,sBAAuBt1C,EAAE,kBAEzBi8E,iBAAkBj8E,EAAE,cACpBk8E,oBAAqBl8E,EAAE,kBAEvB01C,uBAAwB11C,EAAE,mBAC1B41C,0BAA2B51C,EAAE,uBAC7B81C,6BAA8B91C,EAAE,yBAChCg2C,gCAAiCh2C,EAAE,iCAEnCm8E,qBAAsBn8E,EAAE,iBACxB23C,mBAAoB33C,EAAE,wBACtB63C,+BAAgC73C,EAAE,4BAClC+3C,wBAAyB/3C,EAAE,oBAC3Bi4C,2BAA4Bj4C,EAAE,0BAhEpC,IAqEIG,EAAOF,KAAKE,IAAM,CACnBi8E,MAAOn8E,KAAKI,OAAO,GAAGP,WACtBu8E,aAAcp8E,KAAKI,OAAO,GAAGP,kBAC7B8H,KAAM3H,KAAKI,OAAO,GAAGP,WAIxBG,KAAKyS,QAAQlC,SAAWvQ,KAAK8B,GAAG2Q,QAAQlC,WAExCvQ,KAAKkM,UAAUmwE,uBAAyB,GAGxCr8E,KAAKS,GAAK,CACPmB,KAAM,CACH,CACGlB,KAAM,SACNiB,KAAM,QACND,WAAY1B,KAAKw7E,SAAS95E,aAAc,EACxCE,KAAM,CACH,CACG/C,GAAIqB,EAAIk8E,aACR17E,KAAM,QACNiJ,KAAM,IAAM,GAEZ7C,OAAQ,GACRqjC,UAAU,EACVrpC,OAAQd,KAAKw7E,SAAS16E,UAI/B,CACGjC,GAAIqB,EAAIyH,KACRjH,KAAM,SACNO,IAAK,gBACLyB,MAAO3C,EAAE,QACTu8E,OAAQt8E,KAAKw7E,SAASe,eAAgB,EACtCj7E,MAAO,KACAtB,KAAKw8E,SAASx8E,KAAKw8E,QAAQ93E,OAC/B1E,KAAKoP,KAAK,OAAQpP,KAAK8L,WAAW,IAKjD,CAGAzI,KAAKnB,GACF,GAAIlC,KAAKy7E,cAAe,OAExB37E,MAAMuD,KAAKnB,GAEX,MAAMmK,EAAK3I,GAAG1D,KAAKE,IAAIk8E,cAEvB,GAAI/vE,EAAI,CACL,IAAKrM,KAAK07E,UAAW,CAClB17E,KAAKy8E,iBAAkB,EACvBpwE,EAAGqwE,WAAWC,SAAS,SAAU1pE,IAC9B,GAAIjT,KAAKy8E,gBAAiB,OAAO,EAEjCz8E,KAAKoP,KAAK,UAAWpP,KAAK8L,WAAW,IAExC9L,KAAKy8E,iBAAkB,EAMvB,IAAIG,EAAQ58E,KAAKouC,UACjBpuC,KAAKouC,UAAYwuC,EACjB58E,KAAK07E,WAAY,CACpB,CACA17E,KAAKy7E,eAAgB,CACxB,CACH,CAYAn2E,QAAQ2oB,EAASmgB,EAAYpuC,KAAKouC,WAC/B,IAAIyuC,EAAS,KAAM,EAEfC,EAASp5E,GAAG1D,KAAKE,IAAIk8E,cACzB,OAAIU,GACDD,EAASC,EAAOC,oBACTF,EAAO5uD,IAEPnuB,MAAMwF,QAAQ2oB,EAASmgB,EAEpC,CAeAyqC,oBAAoB/pD,GACjB,IAAKA,EAAM,OAAO,EAElB,IAAIspB,GAAa,EAGjB,GAAItpB,EAAKhF,MACLgF,EAAKzN,OAAS,IAAIrd,SAASuL,IACzB6oC,EAAaA,GAAcp4C,KAAK64E,oBAAoBtpE,EAAE,SAYzD,GARKuf,EAAK1qB,KAAmB,IAAZ0qB,EAAK1qB,MACnBg0C,GAAa,GAGXtpB,EAAKiB,MAAqB,IAAbjB,EAAKiB,OACpBqoB,GAAa,GAGZA,EACD,OAAQtpB,EAAKiB,MACV,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eAGF,MAEH,QAEQjB,EAAKpsB,OAAuB,IAAdosB,EAAKpsB,QACrB01C,GAAa,GAO5B,OAAOA,CACV,CAEAxzC,SAASuB,GACNrG,MAAM8E,SAASuB,GACfnG,KAAKouC,UAAYjoC,EAEjB,MAAMkG,EAAK3I,GAAG1D,KAAKE,IAAIk8E,cACvB,GAAI/vE,EAAI,CACL,IAAKlG,EAMF,YAJAkG,EAAG7H,OAAO,QAAS,CAChBslB,KAAM,MACNzI,MAAO,KAKb,IAAI27D,EAAah9E,KAAK8B,GAAG2D,UAAUU,GAmBnCm1E,EAAY0B,EAAYh9E,KAAKsuC,SAE7BtuC,KAAKy8E,iBAAkB,EACvBpwE,EAAG7H,OAAO,QAASw4E,GACnBh9E,KAAKy8E,iBAAkB,CAC1B,CACH,CAEA3wE,WACG,GAAIpI,GAAG1D,KAAKE,IAAIk8E,cAAe,CAC5B,IAAIj2E,EAAWnG,KAAK8B,GAAG2D,UACpB/B,GAAG1D,KAAKE,IAAIk8E,cAAcM,WAAWh6E,OAAS,CAAC,GAOlD64E,EAAYp1E,EAAUnG,KAAKsuC,SAC3BtuC,KAAKouC,UAAYjoC,CACpB,CAEA,OAAOrG,MAAMgM,UAChB,CAEAwpB,WAAWxuB,EAAS,GAAI9B,EAAS,MAC9BlF,MAAMw1B,WAAWxuB,EAAQ9B,GACzBhF,KAAK4wC,QACR,CAEAqsC,cACG,MAAO,aACV,CAEArsC,SACG5wC,KAAKk9E,qBAEL,IAAI7wE,EAAK3I,GAAG1D,KAAKE,IAAIk8E,cACrB,GAAI/vE,EAAI,CAEL,KAAOA,EAAGrK,OAAO8E,OAAOZ,OAAS,GAC9BmG,EAAGrK,OAAO8E,OAAOsrC,OAGnBpyC,KAAK+wC,cAAgB,IAAI/sC,SAAS+C,IAChCsF,EAAGrK,OAAO8E,OAAOzC,KAAK0C,EAAE,IAEvBsF,EAAGrK,OAAO8E,OAAOZ,OAClBmG,EAAG5E,UAEHzH,KAAK4E,SAAS,IACdyH,EAAGlH,UAET,CACH,CAIA+3E,qBACG,MAAMC,EAAMz5E,GAAG1D,KAAKE,IAAIk8E,cACnBe,IAGLA,EAAIC,KAAKC,QAAQ,YAAa,UAAUj/B,UAAUk/B,aAAe,CAC9D33E,EACAhE,EACA6e,EACAywB,EACAuK,KAEA,IAAI+hC,EAASv9E,KAAKw9E,QAAQ73E,GAEtBlF,EAAK,CACN5B,GAAI28C,EAAMx5C,OAAOnD,GACjB6B,KAAM,SACN+8E,QAAS,SACTxsC,WAAYA,EACZtrC,MAAOA,EACP+3E,KAAM/7E,EACNglE,SAAU,SAAU3nE,GACjB,IAAIo8E,EAAMp8E,EAAE2G,GACRg4E,EACDn9D,IAAmB,QAAR7e,EAAiB6B,MAAMo6E,KAAKC,cAAgB,MAE1D,OADIF,IAAQvC,EAAMuC,EAAOvC,IAClBA,CACV,EACAmC,OAAQA,EACRO,OAAQ,GAYX,OATat6E,MAAM/C,GAAGA,EAAI+6C,EASb,EAEnB,CAEAgiC,QAAQO,GACL,IAAIpwE,EAGJ,GAAuB,eAAnBowE,EACD,MAAO,GACHj2D,OAAO9nB,KAAKg+E,aAAa,gBACzBl2D,OAAO9nB,KAAKi+E,sBAAsB,gBAClCn2D,OAAO9nB,KAAKk+E,cAAc,gBAC1Bp2D,OAAO9nB,KAAKm+E,eAAe,cAAe,SAGjD,IAAIx4E,GAAS3F,KAAKsuC,SAAW,IAAI1lC,QAC7B7B,GAAMA,EAAElI,IAAMk/E,IAChB,GAEF,OAAQp4E,GAAOvB,KACZ,IAAK,UACFuJ,EAAS3N,KAAKo+E,eAAez4E,GAC7B,MACH,IAAK,gBACFgI,EAAS,GACLma,OAAO9nB,KAAKg+E,aAAar4E,IACzBmiB,OAAO9nB,KAAKq+E,YAAY14E,IACxBmiB,OAAO9nB,KAAKi+E,sBAAsBt4E,IAClCmiB,OAAO9nB,KAAKm+E,eAAex4E,IAC3BmiB,OAAO9nB,KAAKs+E,eAChB,MACH,IAAK,OACL,IAAK,WACF3wE,EAAS,CAAC,aAAc,mBACxB,MACH,IAAK,OACFA,EAAS3N,KAAKu+E,YAAY54E,GAC1B,MACH,IAAK,OACFgI,EAAS,GACLma,OAAO9nB,KAAKs+E,eACZx2D,OAAO9nB,KAAKq+E,YAAY14E,IAC5B,MAIH,IAAK,SACL,IAAK,WACL,IAAK,QACFgI,EAAS3N,KAAKs+E,cAKpB,MAAME,EAAW,GAAG74E,GAAOQ,UAAUa,YAAYrB,GAAOQ,UAAUc,cA2BlE,OAzBGtB,GAAOQ,UAAUgB,aAEJ,YAAZq3E,GAEe,WAAZA,GAAyB74E,GAAOQ,UAAUM,UAE9CkH,GAAUA,GAAU,IAAIma,OAAO9nB,KAAKy+E,YAAY94E,IAC1B,iBAAdA,GAAOvB,IACfuJ,GAAUA,GAAU,IAChBma,OAAO9nB,KAAKy+E,YAAY94E,IACxBmiB,OAAO9nB,KAAK0+E,kBAAkB/4E,IAC9BmiB,OAAO9nB,KAAKm+E,eAAex4E,IAIzBo4E,EAAgB7wE,QAAQ,SAAW,IACzCS,EAAS3N,KAAKm+E,eAAe,KAAMJ,IAGlC/9E,KAAKkM,UAAU6lC,eAChBpkC,GAAUA,GAAU,IAAIma,OAAO9nB,KAAK2+E,kBAAkBh5E,KAGzDgI,GAAUA,GAAU,IAAIma,OAAO9nB,KAAKk+E,cAAcv4E,IAE3CgI,CACV,CAEA2wE,cACG,MAAO,CACJ,CACGzqC,MAAO,OACPnyC,YAAY,EACZhB,KAAM,WACNimE,SAAU,IAGnB,CAEAyX,eAAez4E,GACZ,MAAO,CACJ,CACGkuC,MAAO,UACPnzC,KAAM,YAGf,CAEA+9E,YAAY94E,GACT,MAAO,CACJ,CACGkuC,MAAO,OACPnzC,KAAM,OACNyB,GAAI,CACDy8E,cAAe,YAKT5+E,KAAK6+E,WAAU,SAAUpxE,GACtB,OAAQA,EAAEnC,eACb,GAAG,WAAatL,MACXuN,MAAMuxE,MAAMC,OAAS,GAChC,IAIZ,CAEAf,aAAar4E,GACV,IAAIzD,EAAU,GAEV88E,EACDh/E,KAAKquC,cAAczlC,QAAQ7B,GAAMA,EAAElI,IAAM8G,EAAM9G,KAAIqH,OAAS,EAsB/D,MAnBa,eAATP,GAA0B3F,KAAKwwC,QAChCtuC,EAAUlC,KAAKkoB,SAASC,GAAMA,EAAE6hB,gBAAgBhqC,KAAKwwC,WAG/CwuC,IACN98E,EAAUlC,KAAKkoB,SACXC,IACGnoB,KAAKwwC,QAAUxwC,KAAKwwC,QAAQ3xC,GAAK,KAAOspB,EAAEtpB,IAC3CspB,EAAE6hB,gBAAgBrkC,EAAMgB,mBAIjCzE,GAAS8B,SAASmkB,IACfjmB,EAAQmC,KAAK,CACVxF,GAAIspB,EAAEtpB,GACN6D,MAAOylB,EAAEhnB,OACV,IAGE,CACJ,CACG0yC,MAAO,QACPnzC,KAAM,QACNwB,QAASA,GAAW,IAG7B,CAEAq8E,YAAY54E,GACT,MAAO,CACJ,CACGkuC,MAAO,OACPnzC,KAAM,QACNwB,QAASyD,GAAOQ,UAAUjE,SAASxD,KAAI,SAAUqO,GAC9C,MAAO,CACJlO,GAAIkO,EAAElO,GACN6D,MAAOqK,EAAEkB,KAEf,KAGT,CAEAowE,YAAY14E,GACT,MAAO,CACJ,CACGkuC,MAAO,OACPnzC,KAAM,QACNwB,QAASlC,KAAK8B,GAAG2Q,QAAQjC,WAAW9R,KAAKugF,IAC/B,CACJpgF,GAAIogF,EAAE1uE,SACN7N,MAAOu8E,EAAE1uE,cAKxB,CAEA0tE,sBAAsBt4E,GACnB,IAAIu5E,EAOJ,OALGA,EADU,eAATv5E,GAA0B3F,KAAKwwC,QACjBxwC,KAAKwwC,QAAQ3xC,GAEb8G,GAAOQ,UAAUO,WAG5B,CACJ,CACGmtC,MAAO,iBACPnzC,KAAM,QACNwB,QAASg9E,EACJl/E,KAAK8B,GAAGmkB,iBACJ2G,GAAOA,GAAIjB,YAAY9sB,IAAMqgF,IAC/BxgF,KAAKkuB,IACG,CACJ/tB,GAAI+tB,EAAG/tB,GACP6D,MAAOkqB,EAAGzrB,UAGhB,IAGd,CAEAu9E,kBAAkB/4E,GACf,MAAO,CACJ,CACGkuC,MAAO,aACPnzC,KAAM,QACNy+E,YAAan/E,KAAKmS,OAAOhS,UAAU27E,6BACnC55E,QAASlC,KAAKkoB,SACVC,GAAsB,MAAhBnoB,KAAKwwC,SAAmBroB,EAAEtpB,IAAMmB,KAAKwwC,QAAQ3xC,KACrDH,KAAKypB,IACG,CACJtpB,GAAIspB,EAAEtpB,GACN6D,MAAOylB,EAAEhnB,WAKxB,CAEAw9E,kBAAkBh5E,GACf,MAAO,CACJ,CACGkuC,MAAO,aACPnzC,KAAM,SACNwB,QAASlC,KAAKkM,UAAUmwE,wBAA0B,IAG3D,CAEA8B,eAAex4E,EAAOy5E,EAAkB,MACrC,MAAM1uC,GAAiB1wC,KAAK2wC,gBAAkB,IAC1C/nC,QAAQy2E,IACN,IAAKA,EAAQ,OAAO,EAEpB,IAAI1xE,GAAS,EACb,GACQ,gBADAhI,EAEFgI,EACG3N,KAAKwwC,QAAQ3xC,KAAOwgF,EAAOr6E,QAAQnG,KAAOwgF,EAAO15E,WAKpD,OAAQA,EAAMvB,KACX,IAAK,UACFuJ,EAAS,CAAC,WAAWukC,SAASmtC,EAAO15E,OAAOvB,KAE5C,MAEH,IAAK,gBAKF,GAJAuJ,EACGhI,EAAMQ,SAASO,cACd24E,EAAO15E,OAAOX,OAAOnG,IAAMwgF,EAAOr6E,OAAOnG,KAExC8G,EAAMQ,SAASgB,WAAY,CAC7BwG,EAASA,IAAW0xE,EAAO15E,MAE3B,KACH,CAEAgI,EACGA,IACChI,EAAMQ,SAASiB,YACbzB,EAAMQ,SAASkB,eAAiBg4E,EAAO15E,OAAO9G,GAEpD,MAEH,IAAK,OACL,IAAK,WACF8O,EAAS,CAAC,OAAQ,YAAYukC,SAC3BmtC,EAAO15E,OAAOvB,KAGjB,MAEH,IAAK,YACL,IAAK,UACL,IAAK,SACFuJ,EAAS,CAAC,YAAa,UAAW,UAAUukC,SACzCmtC,EAAO15E,OAAOvB,KAGjB,MAEH,IAAK,SACL,IAAK,WACL,IAAK,QACL,IAAK,YACL,IAAK,OACFuJ,EAAS,CACN,SACA,WACA,QACA,YACA,QACDukC,SAASmtC,EAAO15E,OAAOvB,KAEzB,MAEH,IAAK,OACFuJ,EAAS,CAAC,QAAQukC,SAASmtC,EAAO15E,OAAOvB,KAEzC,MAEH,QACG,GAAIi7E,EAAOj7E,IAAK,CAEb,MAAM+tC,EAAiBktC,EAAOj7E,IAAIokB,MAAM,KAAK4pB,MAE7CzkC,EACGwkC,IAAmBxsC,EAAM9G,IACzBszC,IAAmBxsC,EAAMvB,KACzB+tC,IAAmBitC,GACnBC,EAAOj7E,MAAQg7E,CACrB,EAQZ,OAAOzxE,CAAM,IAEfjP,KAAKO,IACI,CACJJ,GAAII,EAAEmF,IACN1B,MAAO3C,EAAE,eAAgB,CAACd,EAAEkC,YAIrC,OAAKuvC,EAEE,CACJ,CACGmD,MAAO,UACPnzC,KAAM,SACNwB,QAAS,CACN,CACGrD,GAAI,QACJ6D,MAAO1C,KAAKmS,OAAOhS,UAAU+7E,yBAE7BxrC,KAXe,EAe9B,CAEAwtC,cAAcv4E,GACX,OAAKA,IAEiB3F,KAAKi4C,gBAAkB,CAAC,GAChBtyC,EAAM9G,IAAM8G,IAAU,CAAC,GACtCD,QAAU,GAJN,EAKtB,CAEA45E,SAASp9E,GACN,MAAMksC,EAAY/uC,OAAOoyB,OAAO,CAAC,EAAGzxB,KAAKouC,WAEzC,GAAKpuC,KAAKw8E,QA6BPx8E,KAAKw8E,QAAQ73E,QAAQzC,OA7BL,CAChB,IAAIzB,EAAK,CACN5B,GAAImB,KAAKE,IAAIi8E,MACbz7E,KAAM,QACNI,OAAQ,IACRC,MAAO,IACPS,KAAMxB,KAAKS,IAGTiD,GAAG1D,KAAKE,IAAIi8E,OAiBdz4E,GAAG1D,KAAKE,IAAIi8E,OAAOx3E,QAAQzC,IAhB3BlC,KAAKw8E,QAAUh5E,MAAM/C,GAAGA,GACxBT,KAAKqD,KAAKrD,KAAKkM,WACXlM,KAAKsuC,SACNtuC,KAAKs1B,WAAWt1B,KAAKsuC,QAAStuC,KAAKwwC,SAOlCpC,GACDpuC,KAAK4E,SAASwpC,GAGjBpuC,KAAKw8E,QAAQ73E,QAAQzC,GAI3B,CAGH,CAWAq9E,gBAAgBh1E,EAASrI,EAAU,CAAC,GACjClC,KAAKi4C,eAAiBj4C,KAAKi4C,gBAAkB,CAAC,EAC9Cj4C,KAAKi4C,eAAe1tC,GAAWrI,CAClC,oBC95BH,MAAMs9E,EAAgB,EAAQ,OAE9B,IAAIz/E,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAAwBggF,EACtC7/E,YAAYC,EAAKC,EAAQiC,GACtBhC,MAAMF,EAAKC,EAAQiC,GAEnBwG,QAAQ6G,MAAM,2CAGd,IAAIjP,EAAOF,KAAKE,IAAM,CACnBC,UAAWH,KAAKI,OAAO,GAAGP,eAC1B4/E,WAAYz/E,KAAKI,OAAO,GAAGP,oBAC3B6/E,aAAc1/E,KAAKI,OAAO,GAAGP,4BAE7BiqB,KAAM9pB,KAAKI,OAAO,GAAGP,oBACrB8F,MAAO3F,KAAKI,OAAO,GAAGP,qBACtBkwB,KAAM/vB,KAAKI,OAAO,GAAGP,oBACrB8/E,WAAY3/E,KAAKI,OAAO,GAAGP,0BAE3B+/E,WAAY5/E,KAAKI,OAAO,GAAGP,0BAC3BggF,gBAAiB7/E,KAAKI,OAAO,GAAGP,+BAChCigF,qBAAsB9/E,KAAKI,OACxB,GAAGP,oCAENkgF,qBAAsB//E,KAAKI,OACxB,GAAGP,oCAENmgF,WAAYhgF,KAAKI,OAAO,GAAGP,+BAE3BogF,eAAgBjgF,KAAKI,OAAO,GAAGP,8BAE/BqgF,YAAalgF,KAAKI,OAAO,GAAGP,2BAE5BsgF,WAAYngF,KAAKI,OAAO,GAAGP,2BAM9B,IAAIugF,EAGJpgF,KAAKqgF,kBAAoB,CACtB,CACG39E,MAAO3C,EAAE,kBACTlB,GAAI,kBAEP,CACG6D,MAAO3C,EAAE,gBACTlB,GAAI,uBAIVmB,KAAKsgF,kBAAoB,GACzBtgF,KAAKq8E,uBAAyB,GAE9B,IAAI96E,EAASvB,KAAKuB,QAAU,CAAC,EAM7BA,EAAOsJ,aAAe,KACX7K,KAAKsuC,SAAW,IAAI5vC,KAAKqI,IAC9B,IAAI5F,EAAQ4F,EAAE5F,MAOd,OAJInB,KAAKkM,UAAU8kC,gBAAkBjqC,EAAE/B,SACpC7D,EAAQ4F,EAAE/B,OAAO7D,MAAQ,IAAM4F,EAAE5F,OAG7B,CACJtC,GAAIkI,EAAElI,GACN6D,MAAOvB,EACP0uB,MAAO9oB,EAAE8oB,YAASzX,EACpB,IAIP7W,EAAOg/E,YAAc,KAClB,IAAI70B,EAAW1rD,KACXw4C,EAAkBx4C,KAAKw4C,iBAAmB,CAAC,EAE/C,MAAO,CACJ35C,GAAI,IAAM2E,MAAMuH,MAChBy1E,SAAS,EACTt/E,KAAM,CACH,CAEGR,KAAM,QACN7B,GAAIqB,EAAI4pB,KACR/oB,MAAO,GACP2B,MAAO81C,EAAgB1uB,MAAQ,MAC/B5nB,QAAS,CACN,CACGQ,MAAO3C,EAAE,OACTlB,GAAI,OAEP,CACG6D,MAAO3C,EAAE,MACTlB,GAAI,OAGVsD,GAAI,CACDC,SAAU,SAAUq+E,EAAQC,GACzBn/E,EAAOo/E,uBAAuBF,EACjC,IAGN,CAEG//E,KAAM,QACN7B,GAAIqB,EAAIyF,MACRi7E,QAAS,CACNz+E,GAAI,CACD0+E,aAAc,WACX7gF,KAAKwE,OAAO,QAAS,KACrBxE,KAAKY,QACR,GAEH+I,KAAMpI,EAAOsJ,gBAEhB1I,GAAI,CACDC,SAAU,SAAU4I,GACjB,IAAI81E,EAAY9gF,KAAKsL,gBACrB/J,EAAOw/E,YAAY/1E,EAAU81E,EAChC,IAIN,CACGjiF,GAAIqB,EAAI6vB,KACRhvB,MAAO,IACPyB,MAAO,CACJ,CAAC,EAED,CACGqxC,MAAO,QACPnzC,KAAM,QACNgC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO3C,EAAE,YACTlB,GAAI,YAEP,CACG6D,MAAO3C,EAAE,gBACTlB,GAAI,gBAEP,CACG6D,MAAO3C,EAAE,YACTlB,GAAI,YAEP,CACG6D,MAAO3C,EAAE,mBACTlB,GAAI,gBAEP,CACG6D,MAAO3C,EAAE,MACTlB,GAAI,UAEP,CACG6D,MAAO3C,EAAE,UACTlB,GAAI,aAEP,CACG6D,MAAO3C,EAAE,YACTlB,GAAI,YAEP,CACG6D,MAAO3C,EAAE,gBACTlB,GAAI,gBAEP,CACG6D,MAAO3C,EAAE,gBACTlB,GAAI,gBAEP,CACG6D,MAAO3C,EAAE,oBACTlB,GAAI,oBAEP,CACG6D,MAAO3C,EAAE,sBACTlB,GAAI,sBAEP,CACG6D,MAAO3C,EAAE,0BACTlB,GAAI,2BAERipB,OAAO4jC,EAAS40B,mBAClBn+E,GAAI,CACDC,SAAU,SAAUgsC,EAAW4yC,GAC5B,IACIF,EADgB9gF,KAAKsL,gBACKA,gBAC9B/J,EAAO0/E,aAAa7yC,EAAW0yC,GAC/Bv/E,EAAOa,UACV,IAKN,CACGyxC,MAAO,OACPnzC,KAAM,QACNgC,MAAO,OACPR,QAAS,CACN,CACGQ,MAAO3C,EAAE,UACTlB,GAAI,UAEP,CACG6D,MAAO3C,EAAE,kBACTlB,GAAI,aAEP,CACG6D,MAAO3C,EAAE,aACTlB,GAAI,QAEP,CACG6D,MAAO3C,EAAE,YACTlB,GAAI,WAEP,CACG6D,MAAO3C,EAAE,mBACTlB,GAAI,iBAEP,CACG6D,MAAO3C,EAAE,kBACTlB,GAAI,oBAEP,CACG6D,MAAO3C,EAAE,0BACTlB,GAAI,gBAEP,CACG6D,MAAO3C,EAAE,yBACTlB,GAAI,mBAEP,CACG6D,MAAO3C,EAAE,gCACTlB,GAAI,yBAEP,CACG6D,MAAO3C,EAAE,+BACTlB,GAAI,4BAEP,CACG6D,MAAO3C,EAAE,iBACTlB,GAAI,aAEP,CACG6D,MAAO3C,EAAE,iBACTlB,GAAI,cAGNipB,OAAO4jC,EAAS20B,mBAChBv4D,OAAO4jC,EAAS40B,mBACpBn+E,GAAI,CACDC,SAAU,SAAUgsC,GACjB,IACI0yC,EADgB9gF,KAAKsL,gBACKA,gBAC9B/J,EAAO0/E,aAAa7yC,EAAW0yC,GAC/Bv/E,EAAOa,UACV,IAIN,CACGyxC,MAAO,SACPnzC,KAAM,QACNgC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO3C,EAAE,KACTlB,GAAI,UAEP,CACG6D,MAAO3C,EAAE,KACTlB,GAAI,aAEP,CACG6D,MAAO3C,EAAE,KACTlB,GAAI,QAEP,CACG6D,MAAO3C,EAAE,KACTlB,GAAI,WAEP,CACG6D,MAAO3C,EAAE,KACTlB,GAAI,iBAEP,CACG6D,MAAO3C,EAAE,KACTlB,GAAI,qBAGNipB,OAAO4jC,EAAS20B,mBAChBv4D,OAAO4jC,EAAS40B,mBACpBn+E,GAAI,CACDC,SAAU,SAAUgsC,GACjB,IACI0yC,EADgB9gF,KAAKsL,gBACKA,gBAC9B/J,EAAO0/E,aAAa7yC,EAAW0yC,GAC/Bv/E,EAAOa,UACV,IAIN,CACGyxC,MAAO,OACPnzC,KAAM,QACNgC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO3C,EAAE,UACTlB,GAAI,UAEP,CACG6D,MAAO3C,EAAE,kBACTlB,GAAI,aAEP,CACG6D,MAAO3C,EAAE,gBACTlB,GAAI,gBAEP,CACG6D,MAAO3C,EAAE,oBACTlB,GAAI,qBAGNipB,OAAO4jC,EAAS20B,mBAChBv4D,OAAO4jC,EAAS40B,mBACpBn+E,GAAI,CACDC,SAAU,SAAUgsC,EAAW4yC,GAC5B,IACIF,EADgB9gF,KAAKsL,gBACKA,gBAC9B/J,EAAO0/E,aAAa7yC,EAAW0yC,GAC/Bv/E,EAAOa,UACV,IAIN,CACGyxC,MAAO,UACPnzC,KAAM,QACNgC,MAAO,SACPR,QAAS,CACN,CACGQ,MAAO3C,EAAE,UACTlB,GAAI,UAEP,CACG6D,MAAO3C,EAAE,kBACTlB,GAAI,cAGNipB,OAAO4jC,EAAS20B,mBAChBv4D,OAAO4jC,EAAS40B,mBACpBn+E,GAAI,CACDC,SAAU,SAAUgsC,GACjB,IACI0yC,EADgB9gF,KAAKsL,gBACKA,gBAC9B/J,EAAO0/E,aAAa7yC,EAAW0yC,GAC/Bv/E,EAAOa,UACV,IAIN,CACGyxC,MAAO,OACPnzC,KAAM,QACNgC,MAAO,kBACPR,QAAS,CACN,CACGQ,MAAO3C,EAAE,mBACTlB,GAAI,mBAEP,CACG6D,MAAO3C,EAAE,uBACTlB,GAAI,uBAEP,CACG6D,MAAO3C,EAAE,yBACTlB,GAAI,wBAEP,CACG6D,MAAO3C,EAAE,iCACTlB,GAAI,4BAEP,CACG6D,MAAO3C,EAAE,UACTlB,GAAI,UAEP,CACG6D,MAAO3C,EAAE,kBACTlB,GAAI,cAGNipB,OAAO4jC,EAAS20B,mBAChBv4D,OAAO4jC,EAAS40B,mBACpBn+E,GAAI,CACDC,SAAU,SAAUgsC,GACjB,IACI0yC,EADgB9gF,KAAKsL,gBACKA,gBAC9B/J,EAAO0/E,aAAa7yC,EAAW0yC,GAC/Bv/E,EAAOa,UACV,IAIN,CACGyxC,MAAO,SACPnzC,KAAM,QACNgC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO3C,EAAE,YACTlB,GAAI,YAEP,CACG6D,MAAO3C,EAAE,mBACTlB,GAAI,gBAEP,CACG6D,MAAO3C,EAAE,MACTlB,GAAI,UAEP,CACG6D,MAAO3C,EAAE,UACTlB,GAAI,cAGNipB,OAAO4jC,EAAS20B,mBAChBv4D,OAAO4jC,EAAS40B,mBACpBn+E,GAAI,CACDC,SAAU,SAAUgsC,GACjB,IACI0yC,EADgB9gF,KAAKsL,gBACKA,gBAC9B/J,EAAO0/E,aAAa7yC,EAAW0yC,GAC/Bv/E,EAAOa,UACV,IAIN,CACGyxC,MAAO,QACPnzC,KAAM,QACNgC,MAAO,WACPR,QAAS,CACN,CACGQ,MAAO3C,EAAE,YACTlB,GAAI,YAEP,CACG6D,MAAO3C,EAAE,mBACTlB,GAAI,gBAEP,CACG6D,MAAO3C,EAAE,MACTlB,GAAI,UAEP,CACG6D,MAAO3C,EAAE,UACTlB,GAAI,cAGNipB,OAAO4jC,EAAS20B,mBAChBv4D,OAAO4jC,EAAS40B,mBACpBn+E,GAAI,CACDC,SAAU,SAAUgsC,GACjB,IACI0yC,EADgB9gF,KAAKsL,gBACKA,gBAC9B/J,EAAO0/E,aAAa7yC,EAAW0yC,GAC/Bv/E,EAAOa,UACV,MAMZ,CACGvD,GAAIqB,EAAIy/E,WACRa,SAAS,EACTh+E,MAAO,CACJ,CACGqxC,MAAO,SAIV,CACGh1C,GAAIqB,EAAI0/E,WAER/rC,MAAO,QACPnzC,KAAM,QACNwB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CACGvD,GAAIqB,EAAI2/E,gBACRhsC,MAAO,aACPjyC,KAAM,CACH,CACG/C,GAAIqB,EAAI4/E,qBACRp/E,KAAM,QACNwB,QAAS,GACTi9E,YAAap/E,EAAE,kBACfoC,GAAI,CACDC,SAAU,SAAUM,GACjB,IACIo+E,EADgB9gF,KAAKsL,gBAErBA,gBACAA,gBACJ/J,EAAO2/E,wBACJx+E,EACAo+E,GAGHv/E,EAAOa,UACV,IAGN,CACGvD,GAAIqB,EAAI6/E,qBACRr/E,KAAM,QACNwB,QAAS,GACTi9E,YAAap/E,EAAE,kBACfoC,GAAI,CACDC,SAAUb,EAAOa,aAO7B,CACGvD,GAAIqB,EAAI8/E,WACRnsC,MAAO,aACPnzC,KAAM,QACNwB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CACGvD,GAAIqB,EAAI+/E,eACRpsC,MAAO,iBACPnzC,KAAM,aACNwB,QAAS,GACTC,GAAI,CACDC,SAAUb,EAAOa,WAKvB,CAEGyxC,MAAO,OACPh1C,GAAIqB,EAAIigF,WACRz/E,KAAM,aACNyB,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGyxC,MAAO,SACPnzC,KAAM,OACNygF,SAAU39E,MAAM6d,MAAM+/D,SACtBj/E,GAAI,CACDk/E,gBAAiB,WACVrhF,KAAKmhF,YAAY5/E,EAAOa,UAC/B,IAIN,CACGyxC,MAAO,OACPh1C,GAAIqB,EAAIggF,YACRx/E,KAAM,QACNwB,QAAS,GACTC,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGyxC,MAAO,UACPnzC,KAAM,WACNyB,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGyxC,MAAO,OACPnzC,KAAM,QACNwB,QAASlC,KAAK8B,GAAG2Q,QAAQjC,WAAW9R,KAAKugF,IAC/B,CACJpgF,GAAIogF,EAAE1uE,SACN7N,MAAOu8E,EAAE1uE,aAGfpO,GAAI,CACDC,SAAU,WACPb,EAAOa,UACV,IAIN,CACGyxC,MAAO,SACPnzC,KAAM,OACNyB,GAAI,CACDk/E,gBAAiB,WACd9/E,EAAOa,UACV,IAIN,CACGyxC,MAAO,QACPnzC,KAAM,OACNyB,GAAI,CACDk/E,gBAAiB,WACd9/E,EAAOa,UACV,MAKZ,CACG1B,KAAM,SACNO,IAAK,gBACLmK,KAAM,aACNzJ,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,IAEIggF,EAFYthF,KAAKuhF,cAEK31E,MAAM5L,KAAKsL,iBAErC/J,EAAOm+E,aAAa4B,EAAY,EACnC,GAEH,CACG5gF,KAAM,SACNO,IAAK,eACLmK,KAAM,cACNzJ,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,IAAIw/E,EAAY9gF,KAAKsL,gBAErB/J,EAAOigF,gBAAgBV,EAC1B,IAGR,EAGJv/E,EAAOkgF,eAAiB,KACd,CACJ/gF,KAAM,SACN7B,GAAIqB,EAAIw/E,aACRz+E,IAAK,gBACLU,KAAM,OACNR,MAAOpB,EAAE,gBACTuB,MAAO,KACJC,EAAOm+E,cAAc,IAK9Bn+E,EAAOm+E,aAAe,CAAC9zE,EAAOrB,KAC3B,IAAIuzD,EACAr9D,EAAKc,EAAOg/E,cAEZmB,EAAYh+E,GAAGxD,EAAIu/E,YAUvB,OATIiC,IACD5jB,EAAS4jB,EAAU52E,QAAQrK,EAAImL,GAE/BrK,EAAOogF,qBAGHp3E,GAAShJ,EAAOw/E,YAAYx2E,EAAS7G,GAAGo6D,IAAS,IAGjDA,CAAM,EAGhBv8D,EAAOigF,gBAAkB,SAAUV,GAChBp9E,GAAGxD,EAAIu/E,YAEbp0E,WAAWy1E,GAErBv/E,EAAOogF,qBAEPpgF,EAAOa,UACV,EAEAb,EAAOogF,mBAAqB,WACpBj+E,GAAGxD,EAAIu/E,cAGR/7E,GAAGxD,EAAIu/E,YAAY90E,gBAAgBzE,OAAS,GAC7CxC,GAAGxD,EAAIu/E,YAAY/6E,OACnBhB,GAAGxD,EAAIw/E,cAAc/6E,SAIrBjB,GAAGxD,EAAIu/E,YAAY96E,OACnBjB,GAAGxD,EAAIw/E,cAAch7E,QAE3B,EAEAnD,EAAOo/E,uBAAyB,CAAChrE,EAAKisE,KAEnC5hF,KAAKw4C,gBAAgB1uB,KAAOnU,EAGXjS,GAAGxD,EAAIu/E,YAAY90E,gBACzB3G,SAASiP,IACbA,EAAEvP,IAAMuP,EAAEvP,GAAGxD,EAAI4pB,OAAO7W,EAAEvP,GAAGxD,EAAI4pB,MAAMllB,SAAS+Q,EAAI,IAGtDisE,GAAcrgF,EAAOa,UAAU,EAGvCb,EAAOw/E,YAAc,CAAC/1E,EAAU81E,EAAWc,KACxC,IAAK5hF,KAAKsuC,QAAS,OAEnB,IAAI3oC,EAAQ3F,KAAKsuC,QAAQ1lC,QAAQ7B,GAAMA,EAAElI,IAAMmM,IAAU,GACzD,IAAKrF,EAAO,OAGZy6E,EAAYz6E,EAAMvB,IACF,eAAZuB,EAAM9G,GAAqBuhF,EAAY,QAErB,YAAbA,GAAwC,YAAbA,EACjCA,EAAY,SACO,WAAbz6E,EAAMvB,MAAkBg8E,EAAY,UAC7C,IAAIpB,EACDh/E,KAAKquC,aAAazlC,QAAQ7B,GAChBA,EAAElI,IAAM8G,EAAM9G,KACrBqH,OAAS,EACX84E,IAEDoB,EAAY,SAEfU,EAAUp9E,GAAGxD,EAAI6vB,MAAM8xD,UAAUzB,GACjCU,EAAUp9E,GAAGxD,EAAIy/E,YAAYkC,UAAUzB,GAEvC,IAAIl+E,EAAU,GACV4/E,EAAU,GA6Bd,GA1BgB,eAAZn8E,EAAM9G,IAAuBmB,KAAKwwC,QACnCsxC,EAAU9hF,KAAKkoB,SAASC,GAAMA,EAAE6hB,gBAAgBhqC,KAAKwwC,WAG/CwuC,IACN8C,EAAU9hF,KAAKkoB,SAASC,IAEjBnoB,KAAKwwC,QAAUxwC,KAAKwwC,QAAQ3xC,GAAK,KAAOspB,EAAEtpB,IAC3CspB,EAAE6hB,gBAAgBrkC,EAAMgB,mBAKjCm7E,EAAQ99E,SAASmkB,IACdjmB,EAAQmC,KAAK,CACVxF,GAAIspB,EAAEtpB,GACN6D,MAAOylB,EAAEhnB,OACV,IAEL2/E,EACIp9E,GAAGxD,EAAIy/E,YACPj8E,GAAGxD,EAAI0/E,YACPp7E,OAAO,UAAWtC,GACtB4+E,EAAUp9E,GAAGxD,EAAIy/E,YAAYj8E,GAAGxD,EAAI0/E,YAAYn7E,UAG/B,QAAbkB,EAAMvB,IAAe,CACtB,IAAI87E,EAAcv6E,EAAMQ,SAASjE,QAAQxD,KAAI,SAAUqO,GACpD,MAAO,CACJlO,GAAIkO,EAAElO,GACN6D,MAAOqK,EAAEkB,KAEf,IAEA6yE,EACIp9E,GAAGxD,EAAIy/E,YACPj8E,GAAGxD,EAAIggF,aACP17E,OAAO,UAAW07E,GACtBY,EAAUp9E,GAAGxD,EAAIy/E,YAAYj8E,GAAGxD,EAAIggF,aAAaz7E,SACpD,KAEsB,QAAbkB,EAAMvB,MACZ08E,EACIp9E,GAAGxD,EAAIy/E,YACPj8E,GAAGxD,EAAIigF,YACP37E,OAAO,SAAUmB,EAAMq5C,aAC3B8hC,EAAUp9E,GAAGxD,EAAIy/E,YAAYj8E,GAAGxD,EAAIigF,YAAY17E,WAGnD,IACGs9E,EAAajB,EAAUp9E,GAAGxD,EAAI6vB,MAAMiyD,cACpCC,EAAgBnB,EACZp9E,GAAGxD,EAAI6vB,MACP8uD,UAAU,CAAEhgF,GAAIkjF,IACvB,GAAIE,GAAiBA,EAAcC,QAAS,CACzC,IAAIC,GAAcF,EAAcC,UAAUlgF,OAAO2H,MAAQ,IAAI,GACzDw4E,GACDF,EAAcr9E,SAASu9E,EAAWtjF,GAWxC,CAEK+iF,GAAcrgF,EAAOa,UAAU,EAGvCb,EAAO0/E,aAAe,CAAClxD,EAAM+wD,EAAW34E,GAAS,KAC9C,OAAQ4nB,GACL,IAAK,WACL,IAAK,eACL,IAAK,SACL,IAAK,YAEe,SAAbqwD,GACDU,EAAUp9E,GAAGxD,EAAIy/E,YAAYkC,UAAU,UAI1C,MAEH,IAAK,kBACL,IAAK,sBACL,IAAK,uBACL,IAAK,2BACL,IAAK,eACL,IAAK,mBACL,IAAK,eACL,IAAK,kBACL,IAAK,wBACL,IAAK,2BACL,IAAK,WACL,IAAK,eAEFf,EAAUp9E,GAAGxD,EAAIy/E,YAAYkC,UAAU,SACvCtgF,EAAOa,WACP,MAEH,IAAK,YACL,IAAK,YAEF0+E,EAAUp9E,GAAGxD,EAAIy/E,YAAYkC,UAAU,UACvC,MAEH,IAAK,iBACL,IAAK,qBAEF,IAAI3/E,EAAU,GAGdlC,KAAKkoB,SACDC,GAAsB,MAAhBnoB,KAAKwwC,SAAmBroB,EAAEtpB,IAAMmB,KAAKwwC,QAAQ3xC,KACrDmF,SAASmkB,IACRjmB,EAAQmC,KAAK,CACVxF,GAAIspB,EAAEtpB,GACN6D,MAAOylB,EAAEhnB,OACV,IAGL2/E,EACIp9E,GAAGxD,EAAIy/E,YACPj8E,GAAGxD,EAAI4/E,sBACPt7E,OAAO,UAAWtC,GACtB4+E,EACIp9E,GAAGxD,EAAIy/E,YACPj8E,GAAGxD,EAAI4/E,sBACPr7E,UAGJq8E,EAAUp9E,GAAGxD,EAAIy/E,YAAYkC,UAAU,cACvC,MAEH,IAAK,gBACL,IAAK,oBACFf,EACIp9E,GAAGxD,EAAIy/E,YACPj8E,GAAGxD,EAAI8/E,YACPx7E,OAAO,UAAWxE,KAAKq8E,wBAC3ByE,EAAUp9E,GAAGxD,EAAIy/E,YAAYj8E,GAAGxD,EAAI8/E,YAAYv7E,UAGhDq8E,EAAUp9E,GAAGxD,EAAIy/E,YAAYkC,UAAU,cACvC,MAEH,IAAK,qBACL,IAAK,yBAA0B,CAC5B,IAKI3C,EALAkD,EAAY,GAMbp3E,EAAW81E,EAAUp9E,GAAGxD,EAAIyF,OAAOmG,WACtC,GAAgB,eAAZd,GAA6BhL,KAAKwwC,QACnC0uC,EAAel/E,KAAKwwC,QAAQ3xC,OACxB,CACJ,IAAI8G,EAAQ3F,KAAKsuC,QAAQ1lC,QAAQ7B,GAAMA,EAAElI,IAAMmM,IAAU,GACrDrF,IAAOu5E,EAAev5E,EAAMQ,SAASO,WAC5C,CAEI1G,KAAKqiF,cAAgBnD,GACtBl/E,KAAKqiF,aACDp8D,iBACG2G,GACEA,EAAGjB,YAAciB,EAAGjB,WAAW9sB,IAAMqgF,IAE1Cl7E,SAAS4oB,IACPw1D,EAAU/9E,KAAK,CACZxF,GAAI+tB,EAAG/tB,GACP6D,MAAOkqB,EAAGzrB,OACX,IAIX2/E,EACIp9E,GAAGxD,EAAIy/E,YACPj8E,GAAGxD,EAAI+/E,gBACPz7E,OAAO,UAAW49E,GACtBtB,EAAUp9E,GAAGxD,EAAIy/E,YAAYj8E,GAAGxD,EAAI+/E,gBAAgBx7E,UAGpDq8E,EAAUp9E,GAAGxD,EAAIy/E,YAAYkC,UAAU,kBACvC,KACH,CAEA,QAEGf,EAAUp9E,GAAGxD,EAAIy/E,YAAYkC,UAAUzB,GAEnCj4E,GAAQ5G,EAAOa,WAGzB,EAGHb,EAAO2/E,wBAA0B,CAACx+E,EAAOo+E,KAEtC,IAAI5+E,EAAU,GAEVogF,EAAQtiF,KAAKkoB,SAASC,GAChBA,EAAEtpB,IAAM6D,IACf,GACC4/E,IACDA,EAAMx7E,QAAQC,IACHA,EAAE49B,eACV3gC,SAASmkB,IACTjmB,EAAQmC,KAAK,CACVxF,GAAIspB,EAAEtpB,GACN6D,MAAOylB,EAAEnjB,OAAO7D,MAAQ,IAAMgnB,EAAEhnB,OACjC,IAGL2/E,EACIp9E,GAAGxD,EAAIy/E,YACPj8E,GAAGxD,EAAI6/E,sBACPv7E,OAAO,UAAWtC,GACtB4+E,EAAUp9E,GAAGxD,EAAIy/E,YAAYj8E,GAAGxD,EAAI6/E,sBAAsBt7E,UAC7D,EAKHlD,EAAOa,SAAW,KACVpC,KAAKy8E,kBAEPl7E,EAAOuK,WAEPxD,QAAQC,KAAK,oDACbhH,EAAOgC,UAAUnB,WACjBpC,KAAKoP,KAAK,YAGN,GAGV7N,EAAO8L,cAAgB,KACpBrN,KAAKy8E,iBAAkB,CAAI,EAG9Bl7E,EAAO+L,gBAAkB,KACtBtN,KAAKy8E,iBAAkB,CAAK,EAkB/Bl7E,EAAOuK,SAAW,KACf,IAAI0sC,EAAkB,CACnB1uB,KAAM,MACNzI,MAAO,IAGV,IAAIqgE,EAAYh+E,GAAGxD,EAAIu/E,YAyEvB,OAxEIiC,GACDA,EAAU/2E,gBAAgB3G,SAAQ,CAAC88E,EAAWl1E,KAC9B,GAATA,IACD4sC,EAAgB1uB,KAAOg3D,EAAUp9E,GAAGxD,EAAI4pB,MAAMhe,YAGjD,IAAIy2E,EAAazB,EAAUp9E,GAAGxD,EAAIyF,OAClC,GAAK48E,EAAL,CAGA,IAAIh4E,EAAUg4E,EAAWz2E,WACzB,GAAKvB,EAAL,CAGA,IAAIslB,EACA2yD,EAAc1B,EACdp9E,GAAGxD,EAAIyF,OACP88E,WACAzgF,OAAOR,KAAKmI,KAAKf,QAAQ4oC,GAAQA,EAAI3yC,IAAM0L,IAAS,GACpDi4E,IAAa3yD,EAAQ2yD,EAAY3yD,YAASzX,GAG9C,IAAI2X,EAAO,KACRgyD,EAAajB,EAAUp9E,GAAGxD,EAAI6vB,MAAMiyD,cACpCC,EAAgBnB,EACZp9E,GAAGxD,EAAI6vB,MACP8uD,UAAU,CAAEhgF,GAAIkjF,IACnBE,GAAiBA,EAAcn2E,WAChCikB,EAAOkyD,EAAcn2E,YAGxB,IAAIpJ,EAAQ,KACTggF,EAAc5B,EAAUp9E,GAAGxD,EAAIy/E,YAAYqC,cAC3CW,EAAsB7B,EAClBp9E,GAAGxD,EAAIy/E,YACPd,UAAU,CAAEhgF,GAAI6jF,IACvB,GAAIC,GAAuBA,EAAoB72E,SAC5CpJ,EAAQigF,EAAoB72E,gBACxB,GACJ62E,GACAA,EAAoBh4E,gBACrB,CACC,IAAInF,EAAO,GACXm9E,EAAoBh4E,gBAAgB3G,SAASg4B,IAC1Cx2B,EAAKnB,KAAKX,GAAGs4B,GAASlwB,WAAW,IAEpCpJ,EAAQ8C,EAAK0I,KAAK,IACrB,CAGA,GAAIxL,aAAiB+d,KAAM,CACxB,IAAImiE,EAAY5iF,KAAKsuC,QAAQ1lC,QACzB7B,GAAMA,EAAElI,IAAM0L,IAChB,GAEC7H,EADCkgF,EACOA,EAAU9jC,YAAYp8C,GAEtBA,EAAMghB,aAEpB,CAEA80B,EAAgBn3B,MAAMhd,KAAK,CACxBwrB,MAAOA,QAASzX,EAChBhU,IAAKmG,EACLwlB,KAAMA,EACNrtB,MAAOA,GAtDU,CAJG,CA2DrB,IAIR1C,KAAKw4C,gBAAkBA,EAEhBx4C,KAAKw4C,eAAe,EAI9Bx4C,KAAKS,GAAK,CACP5B,GAAIqB,EAAIC,UACRyB,KAAM,CACH,CACGlB,KAAM,OACN7B,GAAIqB,EAAIu/E,WACRnD,QAAQ,EACRtzE,SAAU,IAEbzH,EAAOkgF,kBAGhB,CAGAp+E,KAAKnB,EAAU,CAAC,GAIb,IAAK,IAAIoB,KAHTxD,MAAMuD,KAAKnB,GAGGlC,KAAKuB,OAAOgC,UACvBvD,KAAKuB,OAAOgC,UAAUD,GAAKpB,EAAQoB,IAAMtD,KAAKuB,OAAOgC,UAAUD,GAG9DpB,EAAQ8uC,iBACThxC,KAAKkM,UAAU8kC,eAAiB9uC,EAAQ8uC,gBAEvC9uC,EAAQ6vC,eACT/xC,KAAKsgF,kBAAoB,CACtB,CACG59E,MAAO3C,EAAE,iBACTlB,GAAI,iBAEP,CACG6D,MAAO3C,EAAE,aACTlB,GAAI,sBAGVmB,KAAKq8E,uBAAyBn6E,EAAQ2gF,aAE5C,CAEAj+E,SAASuB,GACNA,EAAWA,GAAY,CAAC,EAExBrG,MAAM8E,SAASuB,GAEf,IAAIjG,EAAMF,KAAKE,IACX4iF,EAAQ9iF,KAAKuB,OAGjBuhF,EAAMz1E,gBAEN,IAAImrC,EAAkBx4C,KAAK8B,GAAG2D,UAAUU,GACxCqyC,EAAgBn3B,MAAQm3B,EAAgBn3B,OAAS,GAGjD,IAAIqgE,EAAYh+E,GAAGxD,EAAIu/E,YACnBiC,GAAWl+E,MAAM/C,GAAG,GAAIihF,GAGQ,GAAhClpC,EAAgBn3B,MAAMnb,QACvB48E,EAAMnB,qBAGTnpC,EAAgBn3B,MAAMrd,SAAS+C,IAC5B,IAAI+2D,EAASglB,EAAMpD,eAChBoB,EAAYp9E,GAAGo6D,GAElB,GAAiB,MAAbgjB,EAAJ,CAEA,IAAIn7E,EAAQ3F,KAAKsuC,QAAQ1lC,QAAQm6E,GAAQA,EAAIlkF,IAAMkI,EAAE3C,MAAK,GAG1D08E,EAAUp9E,GAAGxD,EAAI4pB,MAAMtlB,OAAO,QAASg0C,EAAgB1uB,MACvDg3D,EAAUp9E,GAAGxD,EAAI4pB,MAAMrlB,UAGvBq8E,EAAUp9E,GAAGxD,EAAIyF,OAAOnB,OAAO,QAASuC,EAAE3C,KAC1C08E,EAAUp9E,GAAGxD,EAAIyF,OAAOlB,UACxBq+E,EAAM/B,YAAYh6E,EAAE3C,IAAK08E,GAAW,GAGpC,IAAIiB,EAAajB,EAAUp9E,GAAGxD,EAAI6vB,MAAMiyD,cACrCC,EAAgBnB,EACZp9E,GAAGxD,EAAI6vB,MACP8uD,UAAU,CAAEhgF,GAAIkjF,IACnBE,GAAiBA,EAAcr9E,WAChCq9E,EAAcz9E,OAAO,QAASuC,EAAEgpB,MAChCkyD,EAAcx9E,WAIjBq8E,EAAUkC,aACVF,EAAM7B,aAAal6E,EAAEgpB,KAAM+wD,GAC3BA,EAAUmC,eAIV,IAAIP,EAAc5B,EAAUp9E,GAAGxD,EAAIy/E,YAAYqC,cAC5CW,EAAsB7B,EAClBp9E,GAAGxD,EAAIy/E,YACPd,UAAU,CAAEhgF,GAAI6jF,IACvB,GAAIC,GAAuBA,EAAoB/9E,SAGzCe,GACa,QAAbA,EAAMvB,KACN2C,EAAErE,QACS,QAAVqE,EAAEgpB,MACU,WAAVhpB,EAAEgpB,MACQ,iBAAVhpB,EAAEgpB,MACQ,oBAAVhpB,EAAEgpB,MAEL4yD,EAAoBn+E,OAAO,QAAS,IAAIic,KAAK1Z,EAAErE,QAE/CigF,EAAoBn+E,OAAO,QAASuC,EAAErE,OAGzCigF,EAAoBl+E,eAChB,GACJk+E,GACAA,EAAoBh4E,gBACrB,CACC,IAAInF,GAAQuB,EAAErE,OAAS,IAAI8lB,MAAM,KAC7B5c,EAAQ,EACZ+2E,EAAoBh4E,gBAAgB3G,SAASg4B,IAC1Ct4B,GAAGs4B,GAASgnD,aACZt/E,GAAGs4B,GAASp3B,SAASY,EAAKoG,IACb,GAATA,GACDk3E,EAAM5B,wBAAwB17E,EAAKoG,GAAQk1E,GAE9Cp9E,GAAGs4B,GAASinD,eAEZr3E,GAAO,GAEb,CAEIjG,GAAsB,QAAbA,EAAMvB,MAChB08E,EAAUkC,aACVF,EAAM7B,aAAal6E,EAAEgpB,KAAM+wD,GAC3BA,EAAUkC,aAxEgB,CAyE7B,IAIHF,EAAMx1E,iBACT,CASA8qC,aAOG,OANKp4C,KAAKkjF,sBACPljF,KAAKkjF,oBAAsBljF,KAAK8B,GAAGuzB,iBAChC,GAAGr1B,KAAKE,IAAIC,yBAIXH,KAAKkjF,oBAAoBrK,oBAAoB74E,KAAK8L,WAC5D,gEC/vCH,MAAMq3E,EAAa,EAAQ,OAE3B,IAAIpjF,EAAI,KAER,MAAMqjF,UAAmB,IACtBzjF,YAAYE,EAAQiC,GACjBhC,MAAMD,EAAQ,CACXmK,KAAM,GAAGnK,mBACTwjF,OAAQ,GAAGxjF,qBACX8F,MAAO,GAAG9F,sBAGbG,KAAKH,OAASA,EAEdG,KAAKwwC,QAAU,KAIfxwC,KAAKsjF,gBAAkB,KAKvBtjF,KAAK8B,GAAKA,EAEL/B,IACFA,EAAI,IAAIwV,IACEvV,KAAK8B,GAAGkP,aAAa7P,SAASoU,GAG9C,CAOAguE,SACG,MAAMC,EAAOxjF,KAEb,MAAO,CACJ4B,KAAM,CACH,CACGlB,KAAM,SACN8/E,SAAS,EACTt/E,KAAM,CACH,CAEGR,KAAM,QACNK,MAAO,GACPI,MAAOpB,EAAE,QAEZ,CAEGW,KAAM,QACN7B,GAAImB,KAAKE,IAAIyF,MACbzD,QAASlC,KAAK6K,cAAa,GAC3B1I,GAAI,CACDC,SAAU8C,eAAgB8F,GACvB,MAAMy4E,EAAYzjF,KAAKsL,sBAEjBk4E,EAAKzC,YAAY/1E,EAAUy4E,EACpC,IAGN,CAEG/iF,KAAM,QACNK,MAAO,GACPI,MAAOpB,EAAE,OAEZ,CACGW,KAAM,YACNgC,MAAO,SACP5B,OAAQ,GACR4iF,SAAU,IACVxhF,QAAS,CACN,CAAErD,GAAI,SAAU6D,MAAO3C,EAAE,WACzB,CAAElB,GAAI,UAAW6D,MAAO3C,EAAE,aAE7Bu8E,OAC4B,MAAzBt8E,KAAK2jF,mBACJ3jF,KAAK2jF,iBAAiBz9E,OAC1B/D,GAAI,CACDC,SAAU,SAAUuT,GACjB,MAAM8tE,EAAYzjF,KAAKsL,gBAEvBk4E,EAAKI,0BACFH,EACO,WAAP9tE,EAEN,IAIN,CAAC,EAED,CACG2mE,QAAQ,GAEX,CAEG57E,KAAM,SACNO,IAAK,eACLmK,KAAM,cACNzJ,KAAM,OACNN,WAAW,EAEXC,MAAO,WACJ,MAAMw/E,EAAY9gF,KAAKsL,gBAAgBA,gBAEvCk4E,EAAKK,WAAW/C,EACnB,MAMlB,CAOArgF,KAEG,MAAO,CACJmB,KAAM,CACH,CACGlB,KAAM,OACN7B,GAAImB,KAAKE,IAAI8J,KACbsyE,QAAQ,EACR56E,YAAY,EACZsH,SAAU,IAEb,CACGtI,KAAM,SACN7B,GAAImB,KAAKE,IAAImjF,OACbj4E,KAAM,aACNzJ,KAAM,aACNR,MAAOpB,EAAE,qBACTuB,MAAO,KACJtB,KAAK8jF,SAAS,IAK7B,CAEAzgF,KAAKvB,GACF,MAAMiiF,EAAQrgF,GAAG1D,KAAKE,IAAI8J,MAG1B,OAFI+5E,GAAOjiF,EAAG6Y,MAAMlX,OAAOsgF,EAAOjiF,EAAG6Y,MAAMhX,aAEpC0L,QAAQ/P,SAClB,CAUAwkF,QAAQl4E,GACL,MAAMm4E,EAAQrgF,GAAG1D,KAAKE,IAAI8J,MAG1B,GAFqBhK,KAAK6K,cAAa,GAEtB3E,OAAS,EAAG,OAE7B,MAAMzF,EAAKT,KAAKujF,SACVzlB,EAASimB,EAAMj5E,QAAQrK,EAAImL,GAIjC,OAFA5L,KAAKgkF,aAEElmB,CACV,CAaAjzD,aAAaW,GACV,IAAItJ,GAAWlC,KAAKwwC,QAAQ1pC,UAAY,IAAIpI,KAAKqI,IACvC,CACJlI,GAAIkI,EAAElI,GACN6D,MAAOqE,EAAE5F,UAsBf,OAlBIqK,GACa9H,GAAG1D,KAAKE,IAAI8J,MAEpBW,gBAAgB3G,SAAS88E,IAE5B,IAAKA,IAAcA,EAAUp9E,GAAI,OAEjC,MAAM6+E,EAAazB,EAAUp9E,GAAG1D,KAAKE,IAAIyF,OAEzC,IAAK48E,EAAY,OAEjB,MAAMh4E,EAAUg4E,EAAWz2E,WAEtBvB,IAELrI,EAAUA,EAAQ0G,QAAQ4oC,GAAQA,EAAI3yC,IAAM0L,IAAQ,IAGnDrI,CACV,CAgBA4J,WACG,MAAM6B,EAAS,GACTo2E,EAAQrgF,GAAG1D,KAAKE,IAAI8J,MAkE1B,OAhEI+5E,GACDA,EAAMp5E,gBAAgB3G,SAASigF,IAC5B,MAAMR,EAAYQ,EAAet5E,gBAAgB,GAGjD,IAAK84E,IAAcA,EAAU//E,GAAI,OAEjC,MAAM6+E,EAAakB,EAAU//E,GAAG1D,KAAKE,IAAIyF,OAEzC,IAAK48E,EAAY,OAEjB,MAAMh4E,EAAUg4E,EAAWz2E,WAE3B,IAAKvB,EAAS,OAEd,IAAI25E,EAAmBT,EAAU94E,gBAAgB,GACjDu5E,EAAmBlkF,KAAKmkF,kBAAkBD,GAE1C,MAAME,EAAoBX,EAAU94E,gBAAgB,GAEpD,IAAKu5E,IAAqBE,EAAmB,OAE7C,MAAMz7C,EAAY3oC,KAAKwwC,QAAQ5iC,UAAUrD,GACnCoL,EAAM,CACTpL,QAASA,GAIZ,GAAI25E,GAAoBA,EAAiBG,YACtC,GACqB,kBAAlB17C,EAAUvkC,KACQ,SAAlBukC,EAAUvkC,IAEVuR,EAAIjT,MAAQimC,EAAU78B,SAASo4E,QAC7B,GACgB,SAAlBv7C,EAAUvkC,KACQ,aAAlBukC,EAAUvkC,IAKV,GAAmC,IAFhC8/E,EAAiBv5E,gBAAgB,IAAMu5E,GAErBp4E,WAClB6J,EAAIjT,MAAQ,sBACV,CACF,MAAMy9E,EACH+D,EAAiBv5E,gBAAgB,IAAMu5E,EAE1CvuE,EAAIjT,MAAQimC,EAAU78B,SAASq0E,EAClC,MAGExqE,EAAIjT,MAAQimC,EAAU78B,SAASo4E,QAG9BE,GAAqBA,EAAkBC,cAC7C1uE,EAAI2uE,gBAAiB,EACrB3uE,EAAIjT,MAAQ0hF,EAAkBt4E,YAIjC6B,EAAOtJ,KAAKsR,EAAI,IAIfhI,CACV,CAOA5I,WAAWC,GACRhF,KAAKwwC,QAAUxrC,EAEfhF,KAAKy8B,SAAWz8B,KAAK8B,GAAGs4B,eAAe,CAAC,GACxCp6B,KAAKsjF,gBAAkB,IAAIH,EACxB,CACGh9E,SAAU,CACP6wD,WAAW,EACXn1D,WAAY,IAGlB7B,KAAKy8B,UAERz8B,KAAKsjF,gBAAgBv+E,WAAWC,GAEhChF,KAAK4E,SAAS,KACjB,CASAi/E,WAAW/C,GACMp9E,GAAG1D,KAAKE,IAAI8J,MAEpBqB,WAAWy1E,GACjB9gF,KAAKgkF,YACR,CAYA9+E,kBAAkB8F,EAAUy4E,GACzB,MAAM99E,EAAQ3F,KAAKwwC,QAAQ5iC,UAAU5C,GAErC,IAAKrF,EASF,YARA3F,KAAK8B,GAAGqG,OAAO8uB,QACZ,IAAI/3B,MAAM,+BAA+B8L,MACzC,CACGkE,QAAS,kDACT2tB,QAAS7xB,IAOlB,MAKGu5E,EALoB5+E,EAAMk9D,gBACOhD,YAC9B7/D,KAAKy8B,SACLz8B,KAAKsjF,iBAE6BnjF,UAClCH,KAAK8B,GAAGy6B,KACRv8B,KAAKH,QAEL6L,EAAa+3E,EAAU94E,gBAE7B,IAAI65E,EAC+B,mBAAzBD,EAAmB9jF,GACrB8jF,EAAmB9jF,KACnB8jF,EAAmB9jF,GAyB3B,OAtBAgjF,EAAUp4E,WAAWK,EAAW,IAE5B1L,KAAK2jF,kBAAkBz9E,OACxBu9E,EAAU34E,QACP,CACGpK,KAAM,aACNwB,QAASlC,KAAK2jF,iBACdrH,QAAQ,GAEX,GAGHmH,EAAU34E,QACP,CACGwxE,QAAQ,GAEX,SAGAt8E,KAAKykF,OAGH9+E,EAAMvB,KACX,IAAK,gBACL,IAAK,OACFogF,EAAYA,EAAU5iF,KAAK,GAAGA,KAAK,GACnC4iF,EAAU5D,QAAQp/E,KAAKmI,YACbhE,EAAM++E,cAAchmF,KAAKO,IACtB,CACJJ,GAAI8G,EAAMwtB,iBAAiBl0B,GAC3ByD,MAAOzD,EAAEgP,UAET,GAES,SAAdtI,EAAMvB,KACPogF,EAAU5D,QAAQp/E,KAAKmI,KAAKypB,QAAQ,CACjCv0B,GAAI,kBACJ6D,MAAO,oBAKb,MAEH,IAAK,OACL,IAAK,WACF8hF,EAAY,CACT9jF,KAAM,SACNkB,KAAM,CACH,CACGlB,KAAM,WACNmB,WAAY,EACZ8iF,WAAY5kF,EAAE,qBACdoC,GAAI,CACDC,SAAU,SAAUq+E,GACjB,MAAMmE,EAAS5kF,KAAKsL,gBAEpB,IAAKs5E,EAAQ,OAEb,MAAMzE,EAAayE,EAAOj6E,gBAAgB,GAErCw1E,IAELM,EAASN,EAAWz7E,OAASy7E,EAAWx7E,OAC3C,IAGN6/E,IAQZf,EAAUp4E,WAAWK,EAAW,IAChC+3E,EAAU34E,QAAQ05E,EAAW,GAE7BD,EAAmBlhF,OAGfsC,EAAMiyE,eACPjyE,EAAMiyE,cAAc,CAAC,EAAG53E,KAAK8B,GAAGy6B,KAAM7wB,EAAW,GAAG6B,OAEvDvN,KAAK4jF,0BACFH,EAC6B,YAA7B/3E,EAAW,GAAGI,YAEjBpI,GAAG+/E,GAAWrM,SACdqM,EAAUlC,cAAcnK,SAExBp3E,KAAK6kF,OACR,CAcAjgF,SAASuB,GACN,MAAM49E,EAAQrgF,GAAG1D,KAAKE,IAAI8J,MAErB+5E,IAGLvgF,MAAM/C,GAAG,GAAIsjF,IAEb59E,EAAWA,GAAY,IACVD,OAAS,IAEtBC,EAASnC,SAAQkB,MAAO8I,IACrB,MACMy1E,EADiB//E,GAAG1D,KAAK8jF,WACEn5E,gBAAgB,GACxB84E,EAAU5E,UAChC,CAAEn+E,KAAM,aACR,QAGckE,SAASoJ,EAAKs2E,eAAiB,UAAY,UAE5D,MAAMQ,EAASrB,EAAU//E,GAAG1D,KAAKE,IAAIyF,OAErCm/E,EAAOtgF,OAAO,QAASwJ,EAAKzD,SAC5Bu6E,EAAOrgF,gBAEDzE,KAAK+gF,YAAY/yE,EAAKzD,QAASk5E,GAErC,MAAM96C,EAAY3oC,KAAKwwC,QAAQ5iC,UAAUI,EAAKzD,SAE9C,IAAKo+B,EAAW,OAGhB,GAAI36B,EAAKs2E,eAKN,YAJ0Bb,EAAU94E,gBAAgB,GAElC/F,WAAWoJ,EAAKtL,OAMrC,IAAIwhF,EAAmBT,EAAU94E,gBAAgB,GACjDu5E,EAAmBlkF,KAAKmkF,kBAAkBD,GAC1C,MAAMj2D,EAAU,CAAC,EAEjBA,EAAQ0a,EAAU9hC,YAAcmH,EAAKtL,OAAOA,OAASsL,EAAKtL,MAC1DimC,EAAU/jC,SAASs/E,EAAkBj2D,GAIhB,QAAjB0a,EAAUvkC,KAAkC,YAAjBukC,EAAUvkC,KACL,mBAAjC6pB,EAAQ0a,EAAU9hC,aACc,YAAhCq9E,EAAiBliF,OAAOtB,MAExBwjF,EAAiBt/E,UAAS,EAC7B,IAGH5E,KAAKgkF,cACR,CAMAA,aACG,MAAMD,EAAQrgF,GAAG1D,KAAKE,IAAI8J,MAE1B,GAAI+5E,EAAO,CACR,MAAMr4E,EAAaq4E,EAAMp5E,gBAErBe,GAAcA,EAAWxF,OAAQ69E,EAAMp/E,OACtCo/E,EAAMr/E,OACXq/E,EAAM3M,QACT,CACH,CAEA2N,mBAAmB7iF,GAChBlC,KAAK2jF,iBAAmBzhF,CAC3B,CAEA0hF,0BAA0BH,EAAWuB,GAClC,MAAMC,EAAgBxB,EAAU94E,gBAAgB,GAC1Cu6E,EAAiBzB,EAAU94E,gBAAgB,GAE7Cq6E,GACDC,EAAcvgF,OACdwgF,EAAevgF,SAEfsgF,EAActgF,OACdugF,EAAexgF,OAErB,CAEAQ,aACGxB,GAAG1D,KAAKE,IAAImjF,QAAQl+E,UAEpB,MAAM4+E,EAAQrgF,GAAG1D,KAAKE,IAAI8J,MAErB+5E,IAEAA,EAAM3+E,oBAAoBpF,KAAKqD,KAAKrD,KAAK8B,IAE9CiiF,EAAM3+E,aAAa,CAAEzD,KAAM,SAC9B,CAEAkjF,QACGnhF,GAAG1D,KAAKE,IAAImjF,QAAQ57E,SACpB/D,GAAG1D,KAAKE,IAAI8J,MAAMtC,cACrB,CAEAy8E,kBAAkBgB,GACf,OAAKA,GAAOr5E,UAAYq5E,GAAOx6E,cAEzBw6E,EACIx6E,gBACA/B,QAAQw8E,GAAcA,EAAUt5E,WAAU,IAAMq5E,EAGhDA,CAEb,EAGH,2BCjmBA,MAAME,EAAc,EAAQ,OAEtBtlF,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAElDhW,EAAOC,QAAU,cAAsB6lF,EACpC1lF,YAAY+F,EAAQV,EAAQm3C,GACzBr8C,MAAM4F,EAAQV,EAAQm3C,GAEtBn8C,KAAK8B,GAAGK,GAAG,0BAA2Bwf,IAC/BA,EAAI9iB,IAAMmB,KAAKnB,IAChBmB,KAAKoP,KAAK,qBAAsBpP,KACnC,GA0BN,CASA4qB,oBAAoBzkB,GACjB,MAAMqR,EAAM,CACTrW,MAAOgF,EAAShF,MAChB0F,WAAYV,EAASU,WACrBV,SAAUA,GAMb,cAHOA,EAAShF,aACTgF,EAASU,WAET2Q,CACV,CAEA8tE,cAAcplF,EAAKiG,GACJnG,KAAKgF,OAAOF,YAAYlF,IAApC,MACM2lF,EAASvlF,KAAK8B,GAAGuzB,iBACpB,GAAGr1B,KAAKnB,6BAEX6E,GAAGxD,EAAIslF,eAAe16E,QAAQ,CAC3BpK,KAAM,OACNO,IAAK,mBACLC,KAAM,CACH,CACGU,KAAM,CACH,CACGlB,KAAM,OACNwG,KAAM,iBACNrF,WAAY7B,KAAK8B,GAAGC,WAAWC,SAASC,gBACxCS,MACGyD,GAAYA,EAASkqE,eAChBlqE,EAASkqE,eACT,GACRlvE,MAAOpB,EAAE,oBAEZwlF,EAAO9kF,KAGb,CACGC,KAAM,SACNO,IAAK,eACLmK,KAAM,cACNzJ,KAAM,OACNN,WAAW,EACXC,MAAO,WACJ,MAAMw/E,EAAY9gF,KAAKsL,gBACvB5H,GAAGxD,EAAIslF,eAAen6E,WAAWy1E,EACpC,MAITp9E,GAAG6hF,EAAOrlF,IAAIyH,MAAMjD,OAEpB6gF,EAAOjwD,WAAWt1B,KAAKgF,OAAO8B,UAC1BX,GAAYA,EAASkb,OAAOkkE,EAAO3gF,SAASuB,EAASkb,MAC5D,CASA/b,UACG,MAAMgC,EAAYtH,KAAK8B,GAAGic,WAAWzW,YAoBrC,OAXgB,GALbtH,KAAKgF,OAAO8B,QAAQC,GAEdA,EAAElI,IAAMmB,KAAKnB,IACbkI,EAAEF,WAAWwR,eAAiBrY,KAAK6G,WAAWwR,gBAEjDnS,QAEHoB,EAAUmW,SACP,aACA1d,EACG,oEACA,CAACC,KAAK6G,cAKRS,CACV,CAiBApC,gBAEQlF,KAAKnB,WAKJmB,KAAKm1E,oBAKLr1E,MAAMyU,gBAENvU,KAAKgF,OAAO6/B,YAAY7kC,MACjC,CAWAkF,WAAWyxE,GAAc,GACtB,IAAIC,GAAQ,EASZ,GAPK52E,KAAKnB,KACP+3E,GAAQ,IAMNA,GAAS52E,KAAKmG,SAASo3C,UAAYv9C,KAAKmG,SAAS4nC,QAAS,CAC5D,MAAMhmC,EAAQ/H,KAAKgF,OAAO+C,QAGpB4F,QAAe5F,EAAMioB,QAAQ,CAChCL,MAAO,CACJ7F,KAAM,MACNzI,MAAO,CACJ,CACGjd,IAAKpE,KAAKnB,GACVkxB,KAAM,eAMZi7B,EAAQ,GAGdr9C,EAAOhE,KAAK3F,SAAS2sB,IACbA,EAAE3wB,KAAK6G,cAAa8pB,EAAE3wB,KAAK6G,YAAc7G,KAAKmG,SAAS4nC,SAE5Did,EAAM3mD,KAAK0D,EAAMouE,OAAOxlD,EAAE9xB,GAAI8xB,GAAG,UAG9BthB,QAAQkS,IAAIypC,EACrB,CAgBA,SAZMlrD,MAAM6H,aAKN3H,KAAKgF,OAAOugC,SAASvlC,OAOtBA,KAAK2kC,eAAiBgyC,EAAa,CACrC,MAAM8O,EAAY7O,EAAQ52E,KAAKiI,gBAAkBjI,KAAK0lF,sBAChDD,CACT,CAEA,OAAOzlF,IACV,CAMAiI,gBACG,OAAOjI,KAAK8B,GAAGmN,QAAQe,KAAK,CACzBC,IAAK,8BAA8BjQ,KAAKgF,OAAOnG,YAAYmB,KAAKnB,MAEtE,CAEA6mF,gBACG,OAAO1lF,KAAK8B,GAAGmN,QAAQ6G,IAAI,CACxB7F,IAAK,8BAA8BjQ,KAAKgF,OAAOnG,YAAYmB,KAAKnB,MAEtE,CAEAs2E,cACG,OAAOn1E,KAAK8B,GAAGmN,QAAgB,OAAE,CAC9BgB,IAAK,8BAA8BjQ,KAAKgF,OAAOnG,YAAYmB,KAAKnB,MAEtE,CAmBAq4E,aAAah1E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAAS,CACZnD,GAAImB,KAAK6G,WACTw8B,OAAQrjC,KAAKmB,OAShB,OANIe,EAAQ80E,mBAAqBh3E,KAAKmG,SAASC,WAC5CpE,EAAOqhC,OAAS,iCAAiCrjC,KAAK88C,uBACnD96C,EAAOqhC,UAINrhC,CACV,CAiBA41E,cAAcx4D,EAAKxf,EAAK0C,EAAMJ,GAAU,CAYxCyjF,WAAWvmE,EAAKxf,EAAK0C,GAClB,OAAO,CACV,CAYAwJ,SAASkC,EAAMigB,GACZ,OAAOjgB,EAAKlC,UACf,CAWAlH,SAASoJ,EAAMigB,EAASyY,GACrB,IAAK14B,EAAM,OAEX,IAAI2H,EAQDA,EALY,MAAXsY,GAA+C,MAA5BA,EAAQjuB,KAAK6G,aACjB,MAAhB6/B,EAGQzY,GAAuC,MAA5BA,EAAQjuB,KAAK6G,YAC1BonB,EAAQjuB,KAAK6G,YAEbonB,EAJAyY,EAOT14B,EAAKpJ,SAAS+Q,EACjB,CAWAktD,cAAc+iB,GAIX,MAAO,CAEJ53C,OAAQ,KACE,CACJ5pC,IAAKwhF,IAWX/lB,YAAa,CAAC/6D,EAAa4P,KACxB5P,EAAcA,GAAe9E,KAAK8B,GAAG26B,SAQrC,MAAM/2B,EAAS1F,KAAK6iE,gBAAgB70B,SAapC,OAZAtoC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCT,EAAOS,SAASuR,SAAW1X,KAAKgF,OAAOnG,GACvC6G,EAAOS,SAASoE,QAAUvK,KAAKnB,GAEJiG,EAAYwkB,QACpC5jB,EACAZ,EACA4P,EAKsB,EAGlC,CAKAkrD,kBACG,MAAO,CACJ5xB,OAAQ,KACE,CACJ5iC,KAAM,WAMZy0D,YAAa,CAAC/6D,EAAa4P,KACxB5P,EAAcA,GAAe9E,KAAK8B,GAAG26B,SAGrC,MAAM/2B,EAAS1F,KAAK4/D,kBAAkB5xB,SAWtC,OAVAtoC,EAAOS,SAAWT,EAAOS,UAAY,CAAC,EACtCT,EAAOS,SAASuR,SAAW1X,KAAKgF,OAAOnG,GACvC6G,EAAOS,SAASoE,QAAUvK,KAAKnB,GAEJiG,EAAYwkB,QACpC5jB,EACAZ,EACA4P,EAGsB,EAGlC,CAOAvI,cACG,OAAO9M,OAAOoyB,OAAO,CAAC,EAAGzxB,KAAKmG,SACjC,CAYAipE,gBAAgBnwD,EAAKtV,EAAO,CAAC,GAC1B,IAAIsH,EAAU,GAAGjR,KAAKwJ,cAAcxJ,KAAKmB,WAAW8d,IACpDjf,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAClC,oBCheH,MAAMk8E,EAAuB,EAAQ,KAErCtmF,EAAOC,QAAU,cAA+BqmF,EAS7CvgF,UAKG,OAJkBxF,MAAMwF,SAK3B,CAOA4xE,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAO2kE,SAAY14C,GAEXA,EAAQ63D,OAGH,GAFA9lF,KAAKwgB,OAAOyN,GAMlBjsB,CACV,CAWA6gE,gBACG,OAAO/iE,MAAM+iE,cAAc,gBAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,mBChEH,MAAMC,EAAqB,EAAQ,OAEnCzmF,EAAOC,QAAU,cAA6BwmF,EAC3CrmF,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EACjB,CAMAM,UAKG,OAJkBxF,MAAMwF,SAK3B,CAOA4xE,aAAah1E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAyBlC,OAvBAF,EAAOqD,OAAS,WAChBrD,EAAOf,IAAM,SACbe,EAAO2kE,SAAW,CAACvnD,EAAK4uB,EAAQtrC,EAAOV,IAEhCod,EAAI0mE,OAAe1mE,EAAIpf,KAAK6G,YAG5B3E,EAAQunD,SAEN,mCACAzb,EAAOi4C,SAAS7mE,EAAK4uB,EAAQtrC,EAAOV,GACpC,SAMCU,EACM,sDACE,gDAIXV,CACV,CAWA6gE,gBACG,OAAO/iE,MAAM+iE,cAAc,WAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,mBAIJ2hF,CACV,oBC9EH,MAAMxqC,EAAuB,EAAQ,OAErCh8C,EAAOC,QAAU,cAA+B+7C,EAC7C57C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EACjB,CAMAM,UAKG,OAJkBxF,MAAMwF,SAK3B,CAOA4xE,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAUlC,OARAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAO2kE,SAAY14C,GACZA,EAAQ63D,OAAe73D,EAAQjuB,KAAK6G,YAEjC7G,KAAKwgB,OAAOyN,GAGfjsB,CACV,CAWA6gE,gBACG,OAAO/iE,MAAM+iE,cAAc,gBAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,oBC7DH,MAAMG,EAAqB,EAAQ,OAEnC3mF,EAAOC,QAAU,cAA6B0mF,EAC3CvmF,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EACjB,CAMAM,UAKG,OAJkBxF,MAAMwF,SAK3B,CAOA4xE,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAO2kE,SAAY14C,GAEXA,EAAQ63D,OAGH,GAFA9lF,KAAKwgB,OAAOyN,GAMlBjsB,CACV,CAWA6gE,gBACG,OAAO/iE,MAAM+iE,cAAc,gBAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,CAEA7W,eACGpvE,MAAMovE,gBAELlvE,KAAKmG,SAAS81C,eAAezzB,MAAM,MAAQ,IAAIxkB,SAASnF,IAC1CmB,KAAKgF,OAAO4I,UAAU/O,IAE/BmB,KAAKovE,gBAAgB,mBAAmBvwE,gBAAkB,CACvDg+B,QAASh+B,EACTo9C,eAAgBj8C,KAAKmG,SAAS81C,gBAEpC,GAEN,oBC9EH,MAAMkqC,EAAqB,EAAQ,OAInC5mF,EAAOC,QAAU,cAA6B2mF,EAC3CxmF,YAAY+F,EAAQV,EAAQm3C,GACzBr8C,MAAM4F,EAAQV,EAAQm3C,EACzB,CAWAj3C,gBAEG,IAAKlF,KAAKnB,GAAI,OAAOwQ,QAAQ/P,UAsB7B,SALMQ,MAAMyU,WAIOvU,KAAK2G,eACP,OAAO0I,QAAQ/P,UAEhC,MAAMwqC,EAAY9pC,KAAKgsB,UACvB,OAAK8d,EAGEA,EAAUv1B,UAHMlF,QAAQ/P,SAIlC,CAeAg9C,mBAAmBl9B,GAChB,IAAIm9B,EAAe,GAEnB,MAAM5yC,EAAO7J,MAAMw8C,mBAAmBl9B,GAChC6qB,EAAejqC,KAAK2G,eAwB1B,OAtBIgD,GAAQsgC,IAELj9B,MAAMC,QAAQtD,GACf4yC,EAAe5yC,EAAKjL,KAAI,SAAUiyB,GAO/B,OALIA,IACDA,EAAE1iB,KAAO0iB,EAAE1iB,MAAQg8B,EAAa9C,YAAYxW,GAC5CA,EAAEjuB,MAAQiuB,EAAE1iB,MAGR0iB,CACV,IACQhnB,EAAK9K,IAAM8K,EAAK6F,MACxB+sC,EAAe5yC,EACf4yC,EAAatuC,KACVsuC,EAAatuC,MAAQg8B,EAAa9C,YAAYoV,GACjDA,EAAa75C,MAAQ65C,EAAatuC,MACX,iBAARtE,IACf4yC,EAAe,CAAEtuC,KAAMtE,KAItB4yC,CACV,CAEA26B,aAAah1E,GACVA,EAAUA,GAAW,CAAC,EACtB,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAC5ByD,EAAQ3F,KACF2F,EAAM7D,GAAGy6B,KAEE,MAAnBr6B,EAAQ00B,UACT10B,EAAQ00B,QAAU,CAAC,GAGtB,IAAIwvD,EAAwC,QAA1BpmF,KAAKmG,SAASa,SA4DhC,OA1DAhF,EAAOqD,OAAS+gF,EAAc,cAAgB,QAC9CpkF,EAAOqkF,WAAc3jF,GACX1C,KAAKqmF,WAAW3jF,GAE1BV,EAAOskF,UAAa5jF,GACV1C,KAAKsmF,UAAU5jF,GAEzBV,EAAO2kE,SAAYvnD,IAChB,IAAIm9B,EAAe52C,EAAM22C,mBAAmBl9B,GACxC1Z,EAAS,GAEb,GADAA,EAAOrB,KAAK,gCAETk4C,GACAvvC,MAAMC,QAAQsvC,IACdA,EAAar2C,OAEbq2C,EAAav4C,SAAS2R,IACnBjQ,EAAOrB,KACJ,6CAA6CsR,EAAIjT,uCAAoCiT,EAAI9W,iGAC3F,IAEA09C,EAAar2C,OAAS,GACvBR,EAAOrB,KACJ,8CAA8Ck4C,EAAar2C,qBAG7D,KAAIq2C,EAAa75C,MASrB,MAAO,GATqB,CAC5B,IAAIuC,EAAQ,GACR/C,EAAQunD,WACTxkD,EAAQ,0GAEXS,EAAOrB,KACJ,uCAAuCY,wBAA4Bs3C,EAAa75C,qBAEtF,CAEA,CAEA,OADAgD,EAAOrB,KAAK,UACLqB,EAAOwI,KAAK,GAAG,EAGzBlM,EAAO4+E,QAAU,CACdz+E,GAAI,CACD0+E,aAAc,WACXl7E,EAAM4gF,YAAYvmF,KACrB,GAIH4I,OAAQ,EAAGlG,SAASgT,KAChBhT,GAAS,IAAI2V,cAAc65B,UAAUx8B,GAAU,IAAI2C,gBAGtD+tE,IACDpkF,EAAO4+E,QAAQlgF,KAAO,eACtBsB,EAAO4+E,QAAQ4F,QAAS,GAGpBxkF,CACV,CAEAukF,YAAYE,GAGT,MAAMC,EAAQD,EAASvE,UACU,OAA7BliF,KAAKmG,SAASc,cACVy/E,GAAO15D,KAAK,CAAC,IAAM,IAAI9mB,SAI/B,CAAC,SAAU,UAAUlC,SAASI,IACvBpE,KAAK,OAAOoE,aAEhBpE,KAAK,OAAOoE,WAAepE,KAAK8B,GAAGK,GAChC,qBAAqBiC,KACpBkW,IACMta,KAAK2G,eAAe9H,IAAMyb,EAAI5C,UAAUgvE,EAAM1rE,UAAU,IAEjE,IAGJhb,KAAK2mF,sBAAsBF,EAAU,KAAMzmF,MAC9C,CAcA2lF,WAAWvmE,EAAc9c,GAGzB,CAWAugE,gBACG,OAAO/iE,MAAM+iE,cAAc,UAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,kBAIJ2hF,CACV,CAQA7gF,iBAAiB0hF,EAAaC,EAAMr5E,EAAMnI,GACvC,MAAMyhF,EAAYzhF,EAElB,IAAIyhF,IAEGA,EAAUC,sBACXnzE,aAAakzE,EAAUC,4BAGhBD,EAAUE,uBACVF,EAAUG,oBAEpBH,EAAUE,sBAAwB,IAAI33E,SAAS/P,IAC5CwnF,EAAUG,mBAAqB3nF,EAC/BwnF,EAAUC,oBAAsBzyE,YAAW,KACxChV,GAAQ,EAAK,GACb,IAAI,IAELwnF,EAAUE,iBAGlB,OAAO,IAAI33E,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAI6wE,GAAe,EAInB,MAAMC,EAAWjlF,IAEdA,EAAUA,EAAQ0G,QAAQoF,IACvB,GAAIA,EAAKC,KAAKoK,cAAc65B,SAAS20C,EAAKxuE,eACvC,OAAO,CACV,IAGE6uE,EAMFlnF,KAAKoP,KAAK,cAAelN,IALzBglF,GAAe,EACf5nF,EAAQ4C,GAKX,EAKGytB,EAAQ3vB,KAAK8B,GAAG2D,UAAUmhF,GAAe,CAAC,GAUhD,GATAp5E,EAAOA,GAAQ,GAEVmiB,EAAM7F,OAAM6F,EAAM7F,KAAO,OAEzB6F,EAAMtO,QAAOsO,EAAMtO,MAAQ,IAEhCwlE,EAAOA,GAAQ,IAGV7mF,KAAKmG,SAASO,WAAY,MAAO,GAKtC,MAAM0gF,EAAYpnF,KAAK2G,eAGvB,GAAiB,MAAbygF,EAAmB,MAAM,IAAIloF,MAAM,oBAEvC,MAAMmoF,EAAYrnF,KAAKgsB,UAGvB,GAAiB,MAAbq7D,EAAmB,MAAM,IAAInoF,MAAM,oBAGvC,MAAMooF,EAAcF,EAAUr/E,QAID,QAA1B/H,KAAKmG,SAASa,UACe,OAA7BhH,KAAKmG,SAASc,aACoB,GAAlC5B,GAAQrD,QAAQulF,eAEhB53D,EAAMtO,MAAMhd,KAAK,CACdD,IAAKijF,EAAUxoF,GACfkxB,KAAM,YAMiB,OAA1B/vB,KAAKmG,SAASa,UACe,OAA7BhH,KAAKmG,SAASc,aACoB,GAAlC5B,GAAQrD,QAAQulF,iBAGc,GAA1BvnF,KAAKmG,SAASM,SAIfkpB,EAAMtO,MAAMhd,KAAK,CACdD,IAAKijF,EAAUxoF,GACfkxB,KAAM,qBAKTJ,EAAMtO,MAAMhd,KAAK,CACdD,IAAKijF,EAAUxoF,GACfkxB,KAAM,aAOG/vB,KAAKwnF,aAAa73D,GAEpCtgB,QAAQ/P,UACJ6U,MAAKjP,UAII,IAQTiP,MAAKjP,MAAOuiF,IACV,GAAIA,EAGD,OADAznF,KAAKw7E,SAAWiM,EACTN,EAAQnnF,KAAKw7E,UAGvB,IASIkM,EAAW,WACZ,OAAO,IAAIr4E,SAAQ,CAAC/P,EAAS+W,KAE1B/W,EAAQ,CAAEqK,KAAM,IAAK,GAE3B,EAKA,GACkC,OAA/B3J,MAAMmG,UAAUc,cACfjH,MAAM2nF,kBAAoBb,GAAW9kF,QAAQU,OAC/C,CACC,IAAIgD,EAAS,GAGkB,cAA3BohF,GAAW9kF,QAAQtB,MACU,SAA3BomF,GAAW9kF,QAAQtB,OACtBV,MAAM2nF,iBAGEb,GAAW9kF,QAAQU,QAExBgD,EADCsH,MAAMC,QAAQ65E,EAAU9kF,OAAOU,OACvBokF,GAAW9kF,QAAQU,MAAMwL,OAEzB44E,GAAW9kF,QAAQU,OAL/BgD,EAAS1F,MAAM2nF,iBAQlB,IAAIC,EAAY,CAAC,EACbC,EAAW,GAEfD,EAAU99D,KAAO,KACjB89D,EAAUvmE,MAAQ,GAElB3b,EAAO8iB,MAAM,KAAKxkB,SAASiP,IACxB20E,EAAUvmE,MAAMhd,KAAK,CAClBD,IAAK,OACL2rB,KAAM,SACNrtB,MAAOuQ,GACR,IAELy0E,EAAW,WACR,OAAOJ,EAAYt3D,QAAQ,CACxBL,MAAOi4D,EACPp6E,KAAMq6E,EACN9+E,UAAU,GAEhB,CACH,CACA,IACG,MAAMg5B,QAAgB1yB,QAAQkS,IAAI,CA3D3B+lE,EAAYt3D,QAAQ,CACxBL,MAAOA,EACPniB,KAAMA,EACNzE,UAAU,IAwDiC2+E,MAIxC/5E,EAASo0B,EAAQ,GAAGp4B,KAAKme,OAAOia,EAAQ,GAAGp4B,MAiBjD,OAdA3J,KAAKw7E,SAAW7tE,EAAOhE,MAAQgE,GAAU,IAGxC3N,KAAKw7E,UAAY,IAAIx3E,SAASwtC,IAC5BA,EAAIvjC,KAAOm5E,EAAUjgD,YAAYqK,GACjCA,EAAI9uC,MAAQ8uC,EAAIvjC,IAAI,IAShBk5E,EAAQnnF,KAAKw7E,SAWvB,CAVE,MAAOtzE,GASN,MARAlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,sEACHvJ,MAAO3F,KAAK6F,QACZ8pB,UAGHu3D,GAAe,EACTh/E,CACT,IACD,GAEX,CAEAs/E,aAAa73D,GACV,MAAO,GAAG3vB,KAAKnB,MAAM6U,KAAKC,UAAUgc,IACvC,CAEAzqB,mBAAmByqB,GAChB,MAAMm4D,EAAY9nF,KAAKwnF,aAAa73D,SAC9B3vB,KAAK8B,GAAGgY,QAAQC,IAAI+tE,EAAW,KACxC,CAEAzB,WAAW3jF,GACR,IAAKA,EAAO,MAAO,GACnB,IAAI8C,EAAO,GACX,GAAIwH,MAAMC,QAAQvK,GACfA,EAAMsB,SAAS2R,IACZ,GAAkB,iBAAPA,EACRnQ,EAAKnB,KAAKsR,EAAI9W,QACV,CACJ,IAAIkpF,EAAU/nF,KAAKgoF,eAAeryE,GAC9BoyE,GAAWA,EAAQlpF,GACpB2G,EAAKnB,KAAK0jF,EAAQlpF,IAElB2G,EAAKnB,KAAKsR,EAEhB,UAGH,GAAoB,iBAATjT,EACR8C,EAAKnB,KAAK3B,EAAM7D,QACZ,CACJ,IAAIkpF,EAAU/nF,KAAKgoF,eAAetlF,GAC9BqlF,GAAWA,EAAQlpF,GACpB2G,EAAKnB,KAAK0jF,EAAQlpF,IAElB2G,EAAKnB,KAAK3B,EAEhB,CAEH,OAAO8C,EAAK0I,MACf,CAEAo4E,UAAU5jF,GAEP,GAD4C,QAA1B1C,KAAKmG,SAASa,SACf,CACd,GAAKtE,EAEE,CACJ,IAAIulF,EAAa,GAKjB,OAJWvlF,EAAM8lB,MAAM,KAClBxkB,SAAS2R,IACXsyE,EAAW5jF,KAAKrE,KAAKgoF,eAAeryE,GAAK,IAErCsyE,CACV,CARG,MAAO,EASb,CAEG,OADWjoF,KAAKgoF,eAAetlF,EAGrC,CAEAikF,sBAAsBthF,EAAQnD,EAASyD,EAAOqE,GAC3C,MAAM88E,EAAYzhF,EAGgB,OAA/BrF,MAAMmG,UAAUc,aAChB6/E,EAAUh7E,aACTnG,EAAMgiF,mBAEPhiF,EAAMgiF,iBAAmBb,EAAUh7E,YAMtC,MAAMo8E,EAAiBhmF,GAAS00B,QAC3Bv3B,OAAOoyB,OAAO,CAAC,EAAGvvB,EAAQ00B,SAC1B,CAAE9M,KAAM,MAAOzI,MAAO,IAE3B,GAAInf,GAASimF,sBAAuB,CACjC,MAAMC,EAA6B,CAACn3C,EAAYvrC,EAAQ2iF,EAAQ,KAC7D,MAAMC,EAAgB5iF,EAAOkD,QAAQ3J,GAAMA,GAAGopF,QAAUA,IAExD,MAAO,IACDp3C,EAAW5vB,MAAM3iB,KAAKO,IACtB,GAAIA,EAAE6qB,KACH,MAAO,CACJA,KAAM7qB,EAAE6qB,KACRzI,MAAO+mE,EAA2BnpF,EAAGyG,EAAQ2iF,EAAQ,IAG3D,MAAM3lF,EAAQ4lF,EAAc1/E,QACxB2/E,GAAOA,EAAGnkF,MAAQnF,EAAEmF,KAAOmkF,EAAG7lF,QAAUzD,EAAEyD,QAC5C,GAEF,IAAKA,EAAO,OAAOzD,EAEnB,MAAMupF,EAAe9lF,GAAO+lF,aAAazmF,OAAOnD,GAC3C6E,GAAGhB,EAAM+lF,YAAYzmF,OAAOnD,IAC5B,KAEL,IAAK2pF,EACF,MAAMtpF,MACH,mDAGN,MAAMwpF,EAAchmF,GAAO+lF,YACtBD,EAAa18E,YAAc,GAC3B,GAEL,IAAI20E,EAAS,GAEb,GAAIiI,EACD,GAAIhmF,EAAMimF,aAAc,CACrB,MAAMC,EAAcjjF,EAAMX,OAAO4I,UAC9BlL,EAAM+lF,YAAYzmF,OAAO6mF,aAE5B,IAAIC,EAGJ,GAAKF,EAAYpN,UAAUt1E,OAiBxB4iF,EAAUF,EAAYZ,eAAeU,OAjBL,CAChC,MAAMK,GACF/+E,EAAK4hB,eAAeD,YAAY7kB,QAC7BC,GACEA,EAAElI,IAAM6D,EAAMA,OACdqE,EAAEF,YAAcnE,EAAMA,SACvB,IAAI,GAEZ,GAAIqmF,EAAa,CAEd,MAAMC,EAAWh/E,EAAK4hB,gBAAgBY,YAEtCs8D,EACGE,EAASD,EAAYj4D,iBACrBk4D,EAAStmF,EAAMA,MACrB,CACH,CAKG+9E,EADCqI,EACQA,EAAQpmF,EAAMimF,cAEdD,CAEf,MACGjI,EAASiI,EAIf,MAAO,CACJtkF,IAAKnF,EAAEmF,IACP2rB,KAAM,SACNrtB,MAAO+9E,EACT,IAEN,EAGJyH,EAAe7mE,MAAQ+mE,EACpBF,EACAhmF,EAAQimF,sBAEd,CAEA,MAAMc,EAAqBt/E,IACpBm9E,EAAUoC,YACXlpF,KAAKg3B,eAAe,cAAeiyD,GAGtCjpF,KAAKmpF,gBAAgBrC,EAAWn9E,EAAMhE,EAAOqE,GAAM,EAAK,EAS3D,OALAhK,KAAKg3B,eAAe,cAAeiyD,GAAmBlT,KACnD,cACAkT,GAGI,IAAI55E,SAAQ,CAAC/P,EAAS+W,KAC1BrW,KAAK0kF,WACFwD,EACA,GACAhmF,GAASsL,MAAQ,GACjBs5E,GACD3yE,MAAMxK,IACL3J,KAAKmpF,gBAAgBrC,EAAWn9E,EAAMhE,EAAOqE,GAAM,GACnD1K,EAAQqK,EAAK,GACd,GAER,CAEAw/E,gBAAgBrC,EAAWn9E,EAAMhE,EAAOqE,EAAMo/E,GAC3C,GAAiB,MAAbtC,IAAqBA,EAAUoC,YAAnC,CAQA,GANApC,EAAU9D,aACV8D,EAAU5E,UAAUlnE,WACpB8rE,EAAU5E,UAAU19E,OAAO,OAAQmF,GAC/By/E,GACDppF,KAAKqpF,sBAAsBvC,EAAWnhF,EAAOqE,GAE5C88E,EAAUh7E,cAAgBnC,GAAMzD,OAAQ,CACzC,IAAIojF,EAAcxC,EAAUh7E,WAM5B,IAHiBnC,EAAK4/E,MAAM54D,GAAMA,EAAE9xB,IAAMyqF,KAKvC3jF,EAAMg/B,eACLh/B,EAAMyB,YAAczB,EAAM0B,aAC5B,CACC,MAAMmiF,EAAe7/E,EAAKf,QACtB+nB,GACEA,EAAEhrB,EAAMyB,YAAYP,YAAc,KAAOyiF,GACzC34D,EAAEhrB,EAAM0B,aAAaR,YAAc,KAAOyiF,IAC9C,GAEEE,IAAcF,EAAcE,EAAa3qF,GAChD,CAEAioF,EAAUliF,SAAS0kF,EACtB,CACAxC,EAAU7D,cA/B4C,CAgCzD,CAEAoG,sBAAsBvC,EAAWnhF,EAAOqE,GACrC,IAAI88E,GAAWoC,aAGXpC,GAAW5E,QAAS,CACrB,IAAK4E,EAAUrE,SAAU,OACzB,IAAItG,EAAQ2K,EAAUrE,WACtB,IAAKtG,EAAO,OACZ2K,EAAU5E,UAAUv4E,KAAK8/E,MAAMC,IAC5B,GAAKA,EAAL,CACA,IAAIpnF,EAAO65E,EAAM5uE,MAAMknE,cACpB,gBAAkBiV,EAAO7qF,GAAK,MAE5ByD,GACLA,EAAKqnF,aACF,UACA,GAAGhkF,EAAMvB,eAAeslF,EAAO7qF,MAAM8G,EAAM9G,MAAMmL,GAAMnL,KAPvC,CAQlB,GAEP,CACH,CAEAmpF,eAAeryE,GACZ,IAAI3H,EACA9L,EAAUlC,KAAKw7E,UAAY,GAC/B,GAAIt5E,EAAQgE,OAAS,EAAG,CACrB,IAAK,IAAIgN,EAAI,EAAGA,EAAIhR,EAAQgE,OAAQgN,IAAK,CACtC,GACGlT,KAAKoH,YACLlF,EAAQgR,GAAGlT,KAAKoH,WAAWpC,OAAOqqB,OAAS1Z,EAC5C,CACC3H,EAAO9L,EAAQgR,GACf,KACH,CAAO,GACJlT,KAAKqH,aACLnF,EAAQgR,GAAGlT,KAAKqH,YAAYrC,OAAOqqB,OAAS1Z,EAC7C,CACC3H,EAAO9L,EAAQgR,GACf,KACH,CACG,GACGhR,EAAQgR,GAAGrU,IAAM8W,GACjBzT,EAAQgR,GAAGxQ,OAASiT,GACpBzT,EAAQgR,GAAGlT,KAAKoH,YAAYP,YAAc,KAAO8O,GACjDzT,EAAQgR,GAAGlT,KAAKqH,aAAaR,YAAc,KAAO8O,EACnD,CACC3H,EAAO9L,EAAQgR,GACf,KACH,CAEN,CACA,OAAOlF,CACV,CACG,MAAO,EAEb,CAEAlC,SAASkC,GAEN,GAD4C,QAA1BhO,KAAKmG,SAASa,SACf,CACd,IAAIxB,EAAO,GAOX,OANIwI,EAAKlC,YACIkC,EAAKlC,WAAW0c,MAAM,KAC5BxkB,SAAS4pB,IACVpoB,EAAKnB,KAAK2J,EAAKk0E,UAAUx1D,QAAQkB,GAAQ,IAGxCpoB,CACV,CACG,OAAIwI,EAAKlC,WACCkC,EAAKk0E,UAAUx1D,QAAQ1e,EAAKlC,YAE5B,EAGhB,CAEAlH,SAASoJ,EAAMigB,GACZ,IAAKjgB,EAAM,OAGX,IAAI2H,EAAM3V,KAAKs8C,mBAAmBruB,GAGlC,GAAIjgB,EAAKk0E,SAAqC,GAA1Bl0E,EAAKk0E,UAAU1wD,QAAc,CACf,QAA3BxxB,KAAKmG,SAASa,UAAuBgG,MAAMC,QAAQ0I,KACpDA,EAAM,CAACA,IAGV,MAAM+wE,EAAQ14E,EAAKk0E,UAEnBwE,EAAMliF,OAAO,OAAQmR,GACrB+wE,EAAMjiF,SACT,CAEAuJ,EAAKpJ,SACFoI,MAAMC,QAAQ0I,GACTA,EAAIjX,KAAKO,GAAMA,EAAEJ,IAAMI,EAAEuQ,MAAQvQ,IAAGiP,KAAK,KACzCyH,EAAI9W,IAAM8W,EAAInG,MAAQmG,EAEjC,CAWAi0E,yBAAyBh8D,GACtB,IAAI2uB,EAAe,GAEf5yC,EAAOikB,EACPqc,EAAejqC,KAAK2G,eAsBxB,OApBIgD,GAAQsgC,IAELj9B,MAAMC,QAAQtD,GACf4yC,EAAe5yC,EAAKjL,KAAI,SAAUiyB,GAO/B,OALIA,IACDA,EAAE1iB,KAAO0iB,EAAE1iB,MAAQg8B,EAAa9C,YAAYxW,GAC5CA,EAAEjuB,MAAQiuB,EAAE1iB,MAGR0iB,CACV,KACQhnB,EAAK9K,IAAM8K,EAAK6F,SACxB+sC,EAAe5yC,GACFsE,KACVsuC,EAAatuC,MAAQg8B,EAAa9C,YAAYoV,GACjDA,EAAa75C,MAAQ65C,EAAatuC,OAIjCsuC,CACV,CAEA2yB,eACGpvE,MAAMovE,eAEUlvE,KAAKgsB,WAElBhsB,KAAKovE,gBACF,kCAAkCpvE,KAAKmG,SAAS6B,cAChD,CACGA,WAAYhI,KAAKmG,SAAS6B,aAKrBhI,KAAK2G,gBAEhB3G,KAAKovE,gBACF,mCAAmCpvE,KAAKmG,SAASO,cACjD,CACGA,WAAY1G,KAAKmG,SAASO,YAItC,mBC11BH,MAAM24C,EAAkB,EAAQ,OAEhC9/C,EAAOC,QAAU,cAA0B6/C,EACxC1/C,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EACjB,CAMAM,UAKG,OAJkBxF,MAAMwF,SAK3B,CAOA4xE,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAwClC,OAnCAF,EAAOqD,OACsC,MAA1CrF,KAAK8B,GAAG2Q,SAASpE,SAASyB,aAAuB,WAAa,OAGjE9N,EAAOynD,UAAW,EAOlBznD,EAAO2kE,SAAYvnD,GACZA,EAAI0mE,OAAe1mE,EAAIpf,KAAK6G,YAEzB7G,KAAKwgB,OAAOpB,GAGtBpd,EAAOwe,OAAUmQ,IACd,MAAM1C,EAAU,CAAC,EAGjB,OAFAA,EAAQjuB,KAAK6G,YAAc8pB,EAEpB3wB,KAAKwgB,OAAOyN,EAAQ,EAG9BjsB,EAAOqkF,WAAc11D,GAGT,IAALA,GAAgB,MAALA,EACL,GAIH3wB,KAAK8B,GAAGuf,MAAMhB,OAAOsQ,GAGxB3uB,CACV,CAWA6gE,gBAGG,MAAMgnB,EAAuB/pF,MAAM+iE,cAAc,cASjD,OANAgnB,EAAqB77C,OAAS,KACpB,CACJ5pC,IAAK,eAIJylF,CACV,CAEAjqB,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,CAEA5mC,aAAazB,EAAYwB,GACtB,OAAO17C,MAAMid,KAAK4/B,UAAU3C,EAArBl6C,CAAiC07C,EAC3C,CAGA1+B,OAAOyN,GACJ,IAAK/U,OAAO4wE,YAAa,OAAOhqF,MAAM0gB,OAAOyN,GAC7C,MAAM0C,EAAI3wB,KAAKw8C,UAAUvuB,GAEzB,GAAS,IAAL0C,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMouB,EAAU/+C,KAAK8B,GAAGuf,MAAMhB,OAAOsQ,GAOrC,OALmB3wB,KAAKmG,SAASu3C,YAKf,EACRl6C,MAAMo6E,KAAKmM,kBAAkBhrC,GAE7Bv7C,MAAMo6E,KAAKC,cAAc9+B,EAEtC,oBChIH,MAAMirC,EAAsB,EAAQ,OAEpCzqF,EAAOC,QAAU,cAA8BwqF,EAC5CrqF,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EACjB,CAmBAkyE,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GA4ClC,OAzCgC,GAA5BlC,KAAKmG,SAASu3C,WACf17C,EAAOqD,OAAS,OAEhBrD,EAAOqD,OACsC,MAA1CrF,KAAK8B,GAAG2Q,SAASpE,SAASyB,aACrB,eACA,WAIX9N,EAAOynD,UAAW,EAOlBznD,EAAO2kE,SAAYvnD,GACZA,EAAI0mE,OAAe1mE,EAAIpf,KAAK6G,YAEzB7G,KAAKwgB,OAAOpB,GAGtBpd,EAAOwe,OAAUmQ,IACd,MAAM1C,EAAU,CAAC,EAGjB,OAFAA,EAAQjuB,KAAK6G,YAAc8pB,EAEpB3wB,KAAKwgB,OAAOyN,EAAQ,EAG9BjsB,EAAOqkF,WAAc11D,GAGT,IAALA,GAAgB,MAALA,EACL,GAIH3wB,KAAK8B,GAAGuf,MAAMhB,OAAOsQ,GAGxB3uB,CACV,CAWA6gE,gBAGG,MAAMgnB,EAAuB/pF,MAAM+iE,cAAc,cASjD,OANAgnB,EAAqB77C,OAAS,KACpB,CACJ5pC,IAAK,eAIJylF,CACV,CAEAjqB,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,CAGAvlE,OAAOyN,GACJ,IAAK/U,OAAO4wE,YAAa,OAAOhqF,MAAM0gB,OAAOyN,GAC7C,MAAM0C,EAAI3wB,KAAKw8C,UAAUvuB,GAEzB,GAAS,IAAL0C,GAAgB,MAALA,EACZ,MAAO,GAEV,MAAMouB,EAAU/+C,KAAK8B,GAAGuf,MAAMhB,OAAOsQ,GAE/B+sB,EAAa19C,KAAKmG,SAASu3C,WAG3BusC,EAAYzmF,MAAMid,KAAK4/B,UAAUrgD,KAAKmgD,iBAE5C,OAAIzC,GAAc,EACR,GAAGl6C,MAAMo6E,KAAKmM,kBAAkBhrC,MAAYkrC,EAChDlrC,KAGI,GAAGv7C,MAAMo6E,KAAKC,cAAc9+B,MAAYkrC,EAAUlrC,IAE/D,oBClIH,MAAMmrC,EAAmB,EAAQ,OAEjC3qF,EAAOC,QAAU,cAA2B0qF,EAsBzChT,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAIlC,OAFAF,EAAOqD,OAAS,OAETrD,CACV,CAWA6gE,gBAGG,MAAMgnB,EAAuB/pF,MAAM+iE,gBAYnC,OATAgnB,EAAqB77C,OAAS,KACpB,CACJ5pC,IAAK,UACL+B,SAAU,CACPxE,KAAM,YAKRkoF,CACV,CAEAjqB,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,oBCrEH,MAAMoE,EAAkB,EAAQ,OAE1BpqF,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAElDhW,EAAOC,QAAU,cAA0B2qF,EACxCxqF,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EACjB,CAMAM,UAKG,OAJkBxF,MAAMwF,SAK3B,CAMAJ,gBACG,OAAO,IAAImK,SAAQ,CAAC/P,EAAS+W,KAErBrW,KAAKnB,GAMV2E,MAAM+N,QAAQ,CACXR,MAAOhR,EAAE,eACTkR,QAASlR,EAAE,mDAAoD,CAC5DC,KAAKmB,QAERqQ,SAAUtM,MAAOyI,IAGd3N,KAAKmG,SAASu6C,mBAAqB/yC,EAAS,EAAI,EAEhD,UACS3N,KAAK2H,OAGXnE,MAAMsN,MAAM,CACTC,MAAO,aACP9C,KAAM,8DAIHnO,MAAMyU,UAEZjV,GAGH,CAFE,MAAO4I,GACNmO,EAAOnO,EACV,KA9BH5I,GAgCD,GAER,CAOA43E,aAAah1E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAElCF,EAAOqD,QAAS,EAEhB,MAAMokD,EAAWvnD,EAAQunD,SAmBzB,OAhBAznD,EAAO2kE,SAAYnvD,GACZA,EAAIsuE,OAAe9lF,KAAKw8C,UAAUhlC,GAEtB,CACb,wDACA,0CACA,+BACAxX,KAAKoqF,aAAa5yE,EAAKiyC,GACvB,SACA,SACA,UACDv7C,KAAK,IAKHlM,CACV,CAUA41E,cAAcx4D,EAAKxf,EAAK0C,EAAMJ,GAE3B,IAAKI,EACF,OAEHJ,EAAUA,GAAW,CAAC,EAEtB,IAAImoF,EAAY,GACZC,EAAc,EAEdtqF,KAAKmG,SAAS26C,eAAiB9gD,KAAKmG,SAASy6C,WAC9CypC,EAAYrqF,KAAKmG,SAASy6C,SAASp4B,MAAM,MAGxCxoB,KAAKmG,SAAS06C,eAAiB7gD,KAAKmG,SAASw6C,WAC9C2pC,EAActqF,KAAKmG,SAASw6C,UAM/B,MAAM4pC,EAAkBjoF,EAAKmyE,cAAc,mBAC3C,GAAI8V,EAAiB,CAClBA,EAAgB57C,UAAY,GAM5B,MAAM67C,EAAiBhnF,MAAM/C,GAAG,CAC7BC,KAAM,WACN+pF,UAAWF,EAEX5jB,SAAU3mE,KAAKoqF,aAAahrE,EAAKld,EAAQunD,UAEzC/nD,YAAY,EACZX,MAAO,IACPD,OAAQ,KAQX,GANA0C,MAAMC,OAAO+mF,EAAgBhnF,MAAMG,cAM9BzB,EAAQunD,SAAU,CACpB,MAAMihC,EAAUH,EAAgB9V,cAAc,iBAG9C,YAFIiW,IAASA,EAAQ5L,MAAMhK,QAAU,QAGxC,CAEA,MAAM7kE,EAAMjQ,KAAK2qF,WAAU,GAErBC,EAAWpnF,MAAM/C,GAAG,CACvBC,KAAM,WACNmqF,SAAS,EACTC,OAAQ76E,EACR86E,UAAW,OACXC,UAAU,EACV7oF,GAAI,CAED8oF,gBAAiB,SAAUj9E,GACxB1L,EAAK4oF,UAAUnwE,OAAO,iBACtBzY,EAAK4oF,UAAUnwE,OAAO,sBAGtB,MAAMowE,EAAkBd,EACxB,GAAIc,GAAsC,IAAnBA,EAAuB,CAC3C,MAAMxpF,EAAOqM,EAAKrM,KAAK0W,cACvB,IAAsC,GAAlC8yE,EAAgBj+E,QAAQvL,GAMzB,OALA6B,MAAMyN,QACHlR,EAAE,iCAAkC,CACjCorF,EAAgBj9E,KAAK,UAGpB,CAEb,CAIA,GAAIo8E,EAAc,EAAG,CAClB,MAAMc,EAAgC,IAAdd,EACxB,GAAIt8E,EAAKq9E,KAAOD,EAIb,OAHA5nF,MAAMyN,QACHlR,EAAE,6BAA8B,CAACuqF,MAE7B,CAEb,CAGAE,EAAeplF,aAAa,CACzBzD,KAAM,OACNszE,MAAO,KAEb,EAGAqW,aAAcpmF,MAAO8I,EAAMkJ,KACxBszE,EAAe9iF,eAGf,MAAMhC,EAAS,CAAC,EAMhB,GALAA,EAAO1F,KAAK6G,YAAc,CAAC,EAC3BnB,EAAO1F,KAAK6G,YAAY2I,KAAO0H,EAASvN,KAAK6F,KAC7C9J,EAAO1F,KAAK6G,YAAYk6C,SAAW/yC,EAAK9G,KAGpCkY,EAAIvgB,GACL,UACSmB,KAAKgF,OAAO+C,QAAQouE,OAAO/2D,EAAIvgB,GAAI6G,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM2uB,YACtBvtB,GAAGpB,GAAM2uB,WAAW7R,EAAIvgB,GAAI6G,EAWlC,CAVE,MAAOwC,GACN5F,EAAK4oF,UAAU9pE,IAAI,iBACnB9e,EAAK4oF,UAAU9pE,IAAI,sBAEnBphB,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,wDACHkQ,IAAKA,EACL1Z,OAAQA,GAEd,CAIH1F,KAAK4E,SAASlB,GAAGpB,GAAOoD,EAAO,EAIlC6lF,kBAAmB,CAACv9E,EAAMkJ,KACvBlX,KAAK8B,GAAGqG,OAAOC,UAAU,IAAIlJ,MAAM,sBAAuB,CACvD+R,QAAS,qBACTiG,aAEHszE,EAAe9iF,cAAc,KAItCkjF,EAASY,YAAYhB,EAAej9E,OAGpCjL,EAAKmpF,QAAoB,WAAIb,EAAS5oF,OAAOnD,GAG7CyD,EAAK6W,iBAAiB,SAAUla,IACzBA,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,iBAAmB,IAC/ClN,KAAK0rF,YAAa,EACrB,GAEN,CACH,CAUA/F,WAAWvmE,EAAKxf,EAAK0C,GAClB,GAAuB,GAAnBtC,KAAK0rF,kBAEC1rF,KAAK0rF,WAGZloF,MAAM+N,QAAQ,CACXR,MAAO,GACP9C,KAAMlO,EAAE,8CACRyR,SAAUtM,MAAOyI,IAEd,KADsBA,EACH,CAEhB,MAAMjI,EAAS,CAAC,EAIhB,GAFAA,EAAO1F,KAAK6G,YAAc,CAAC,EAEvBuY,EAAIvgB,GACL,UACSmB,KAAKgF,OAAO+C,QAAQouE,OAAO/2D,EAAIvgB,GAAI6G,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM2uB,YACtBvtB,GAAGpB,GAAM2uB,WAAW7R,EAAIvgB,GAAI6G,EAUlC,CATE,MAAOwC,GACN5F,EAAK4oF,UAAU9pE,IAAI,iBACnB9e,EAAK4oF,UAAU9pE,IAAI,sBAEnBphB,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QAAS,4BACTmO,IAAKA,EACL1Z,OAAQA,GAEd,MAIA1F,KAAK4E,SAASlB,GAAGpB,GAAOoD,EAE9B,SAGF,CACJ,MAAMuoB,EAAUjuB,KAAKw8C,UAAUp9B,GAC/B,IAAK6O,IAAYA,EAAQze,KAAM,CAC5B,MAAMm8E,EAAarpF,EAAKmpF,QAAoB,WACzCb,EAAWlnF,GAAGioF,GAEbf,GAAYA,EAASgB,YACtBhB,EAASgB,WAAW,CAAEC,MAAOzsE,EAAIvgB,IACvC,CACH,CAEA,OAAO,CACV,CAWAgkE,gBACG,OAAO/iE,MAAM+iE,cAAc,cAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,iBAIJ2hF,CACV,CAIAqE,aAAa5yE,EAAKiyC,GACf,IAAIqiC,EAAc,GACdC,EAAc,gBACdC,EAAU,GAEVtpF,EAAQ,GACRwE,EAAO,GAEX,MAAM+mB,EAAUjuB,KAAKw8C,UAAUhlC,GAyB/B,OAxBIyW,IACDvrB,EAAQurB,EAAQze,KAChBtI,EAAO+mB,EAAQ8yB,UAGdr+C,GAASwE,IACV4kF,EAAc,gBACdC,EAAc,GACdC,EAAU,SAAWtpF,GAGX,CACV,mPAAmPopF,kHAChPriC,EAAW,QAAQ1pD,EAAE,iCAAmC,WAE3D,oHAAoHisF,MACjH9kF,GAAQ,SAERuiD,EACK,aAAasiC,qGACb,YAET79E,KAAK,GAGV,CAEApC,SAASkC,EAAMigB,GACZ,MAAMqsD,EAAOtsE,EAAKT,MAAMknE,cAAc,yBAChCwX,EAAW3R,EAAK7F,cAAc,KAEpC,MAAO,CACJjlE,KAAM8qE,EAAK4R,aAAa,aACxBnrC,SAAUkrC,EAASt9C,UAEzB,CAEA/pC,SAASoJ,EAAMigB,GACZ,IAAKjgB,EAAM,OAEX,MAAM08E,EAAU18E,EAAKT,MACrB,IAAKm9E,EAAS,OAEd,IAAI/0E,EAAM,KACNsY,IACDtY,EAAM3V,KAAKw8C,UAAUvuB,IAQxB,MAAMk+D,EAAWzB,EAAQjW,cAAc,yBACnC0X,IAAUA,EAASrN,MAAMhK,QAAUn/D,GAAOA,EAAInG,KAAO,OAAS,SAElE,MAAM8qE,EAAOoQ,EAAQjW,cAAc,yBACnC,GAAI6F,EAAM,CACP,MAAM8R,EAAiB9R,EAAK7F,cAAc,oBACtC2X,IACDA,EAAetN,MAAMhK,QAAUn/D,GAAOA,EAAInG,KAAO,QAAU,QAE9D8qE,EAAKwE,MAAMhK,QAAUn/D,GAAOA,EAAInG,KAAO,QAAU,OAC7CmG,GAAOA,EAAInG,KAAM8qE,EAAKqP,aAAa,YAAah0E,EAAInG,MACnD8qE,EAAK+R,gBAAgB,aAE1B,MAAMJ,EAAW3R,EAAK7F,cAAc,KAC9BuX,EAAU,UAAYr2E,EAAMA,EAAInG,KAAO,IAC7Cy8E,EAASK,KAAON,EAChBC,EAASt9C,UAAYh5B,EAAMA,EAAIorC,SAAW,EAC7C,CACH,CAYA4pC,UAAU4B,GAAU,GACjB,MAAO,gBAAgBvsF,KAAKgF,OAAOnG,MAAMmB,KAAKnB,MAAM0tF,EAAU,IAAM,KACvE,CAQAC,QAAQ3tF,GACL,MAAO,SAASA,GACnB,oBC5cH,MAAM4tF,EAAqB,EAAQ,OAEnCltF,EAAOC,QAAU,cAA6BitF,EAsB3CvV,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAUlC,OARAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAO2kE,SAAY14C,GACZA,EAAQ63D,OAAe73D,EAAQjuB,KAAK6G,YAEjC7G,KAAKwgB,OAAOyN,GAGfjsB,CACV,CAWA6gE,gBAEG,OAAO/iE,MAAM+iE,cAAc,gBAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,oBC9DH,MAAM2G,EAAmB,EAAQ,OAE3B3sF,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAElDhW,EAAOC,QAAU,cAA2BktF,EACzC/sF,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EACjB,CAUAE,gBACG,OAAO,IAAImK,SAAQ,CAAC/P,EAAS+W,KAEtBrW,KAAKnB,GAEN2E,MAAM+N,QAAQ,CACXR,MAAOhR,EAAE,gBACTkR,QAASlR,EAAE,oDAAqD,CAC7DC,KAAKmB,QAERqQ,SAAUtM,MAAOyI,IAGd3N,KAAKmG,SAASu6C,mBAAqB/yC,EAAS,EAAI,EAEhD,UACS3N,KAAK2H,OAGXnE,MAAMsN,MAAM,CACTC,MAAO,aACP9C,KAAM,sFAGHnO,MAAMyU,UAEZjV,GAGH,CAFE,MAAO4I,GACNmO,EAAOnO,EACV,KAIN5I,GACH,GAEN,CAMAqtF,kBAAkBn1E,EAAKo1E,GAIpB,OAAIA,EACM,GAAG5sF,KAAK6G,WAAWgM,QAAQ,KAAM,QAAQ+5E,UAEzC,GAAG5sF,KAAK6G,WAAWgM,QAAQ,KAAM,QAAQ2E,EAAI3Y,UAE1D,CAGAq4E,aAAah1E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAC5ByD,EAAQ3F,KAEdgC,EAAOqD,QAAS,EAGhB,IAAIwnF,EAAkB,OAClBrqC,EAAc,OACdzhD,EAAQ,OACR+rF,EAAiB,OACrB,GAAInnF,EAAMQ,SAASk8C,SAAU,CAC1BrgD,EAAOjB,MAAQ4E,EAAMQ,SAASm8C,YAAc,IAC5C,MAAMyqC,EACHpnF,EAAMQ,SAASo8C,WAAa58C,EAAMQ,SAASq8C,YACtC78C,EAAMQ,SAASq8C,YAAc,GAC7B,GACRqqC,EAAkB,GAAGE,MACrBhsF,EAAQ,GAAG4E,EAAMQ,SAASm8C,YAAc,QACxCE,EACG78C,EAAMQ,SAASo8C,WAAa58C,EAAMQ,SAASq8C,YACtC78C,EAAMQ,SAASq8C,YACf,GACRA,EAAc,GAAGA,MACjBsqC,EACGnnF,EAAMQ,SAASo8C,WAAa58C,EAAMQ,SAASq8C,YACtC78C,EAAMQ,SAASq8C,YACf,GACRsqC,EAAiB,GAAGA,KACvB,MAAW5qF,EAAQnB,QAChBiB,EAAOjB,MAAQmB,EAAQnB,OAAS,IAChCA,EAAQ,GAAGmB,EAAQnB,OAAS,QAC5ByhD,EAActgD,EAAQnB,MACtByhD,EAAc,GAAGA,MACjBsqC,EAAiB5qF,EAAQnB,MACzB+rF,EAAiB,GAAGA,OAGpBnnF,EAAMQ,SAASo8C,WACf58C,EAAMQ,SAASq8C,aACe,OAA9B78C,EAAMQ,SAASq8C,cAEfxgD,EAAOlB,OAAS6E,EAAMQ,SAASq8C,aAAe,EAC9CqqC,EAAkBnnE,SAAS1jB,EAAOlB,QAAU,GAC5C+rF,EAAkB,GAAGA,MACrBrqC,EAAc98B,SAAS1jB,EAAOlB,QAC9B0hD,EAAc,GAAGA,MACjBsqC,EAAiBpnE,SAAS1jB,EAAOlB,QACjCgsF,EAAiB,GAAGA,OAGvB,MAAMrjC,EAAWvnD,EAAQunD,SA4BzB,OAxBAznD,EAAO2kE,SAAYnvD,GACZA,EAAIsuE,OAAetuE,EAAIxX,KAAK6G,YAMjB,CACZ,+DAL0B9F,cAAkB8rF,MAM5C,yDAJ0B9rF,cAAkByhD,MAK5C,+BACAxiD,KAAKgtF,cAAcx1E,EAAK,CACrBiyC,SAAUA,EACV3oD,OAAQgsF,EACR/rF,MAAOA,IAEV,SACA,SACA,UACDmN,KAAK,IAKHlM,CACV,CAcA41E,cAAcx4D,EAAKxf,EAAK0C,EAAMJ,GAE3B,IAAKI,EACF,OAGHJ,EAAUA,GAAW,CAAC,EAKtB,MAAMqoF,EAAkBjoF,EAAKmyE,cAAc,oBAC3C,GAAI8V,EAAiB,CAClBA,EAAgB57C,UAAY,GAG5B,IAAIs+C,EAAY,EACZjtF,KAAKmG,SAASo8C,YACf0qC,EAAYvnE,SAAS1lB,KAAKmG,SAASq8C,cAAgByqC,GAGtD,IAAIC,EAAW,EACXltF,KAAKmG,SAASk8C,WACf6qC,EAAWxnE,SAAS1lB,KAAKmG,SAASm8C,aAAe4qC,GAGhDhrF,EAAQpB,SAAQmsF,EAAY/qF,EAAQpB,QAEpCoB,EAAQnB,QAAOmsF,EAAWhrF,EAAQnB,OAMtC,MAAMypF,EAAiBhnF,MAAM/C,GAAG,CAC7BC,KAAM,WACNO,IAAK,kBAELwpF,UAAWF,EAEX5jB,SAAU3mE,KAAKgtF,cAAc5tE,EAAK,CAC/BqqC,SAAUvnD,EAAQunD,SAClB3oD,OAAQmsF,EAAYA,EAAY,KAAO,EACvClsF,MAAOmsF,EAAWA,EAAW,KAAO,IAGvCxrF,YAAY,EACZZ,OAAQmsF,EACRlsF,MAAOmsF,IAQV,GANA1pF,MAAMC,OAAO+mF,EAAgBhnF,MAAMG,cAM9BzB,EAAQunD,SAAU,CACpB,MAAMihC,EAAUH,EAAgB9V,cAAc,iBAE9C,YADIiW,IAASA,EAAQ5L,MAAMhK,QAAU,QAExC,CAEA,MAAM7kE,EAAMjQ,KAAK2qF,YAEXC,EAAWpnF,MAAM/C,GAAG,CACvBC,KAAM,WAENmqF,SAAS,EACTC,OAAQ76E,EACR86E,UAAW,OACXC,UAAU,EACVj0E,OAAShQ,IACFA,EAAEomF,UACH3C,EAAe9iF,eACf8iF,EAAeplF,aAAa,CACzBzD,KAAM,MACNhB,SAAUoG,EAAEomF,QAAU,MAE5B,EAQHhrF,GAAI,CAED8oF,gBAAkBj9E,IACf1L,EAAK4oF,UAAUnwE,OAAO,iBACtBzY,EAAK4oF,UAAUnwE,OAAO,sBAGtB,MAAMowE,EAAkB,CACrB,MACA,OACA,MACA,MACA,MACA,QAEGxpF,EAAOqM,EAAKrM,KAAK0W,cACvB,IAAsC,GAAlC8yE,EAAgBj+E,QAAQvL,GAMzB,OALA6B,MAAMyN,QACHlR,EAAE,kCAAmC,CAClCorF,EAAgBj9E,KAAK,UAGpB,EAEVlO,KAAKotF,kBAAmB,EAExB,IAAI1S,EAAS,IAAIC,WACjBD,EAAOE,OAAU37E,IACde,KAAKqtF,UAAU,KAAM/qF,EAAMrD,EAAE4rD,OAAOl9C,QACpC68E,EAAeplF,aAAa,CACzBzD,KAAM,MACNszE,MAAO,KACR,EAELyF,EAAO4S,cAAct/E,EAAKssE,KAAK,EAIlCgR,aAAcpmF,MAAO8I,EAAMkJ,KACxBszE,EAAe9iF,eACf1H,KAAKqtF,UAAUn2E,EAASvN,KAAK6F,KAAMlN,GACnCtC,KAAKotF,kBAAmB,EAExB,MAAM1nF,EAAS,CAAC,EAIhB,GAHAA,EAAO1F,KAAK6G,YAAcqQ,EAASvN,KAAK6F,KAGpC4P,EAAIvgB,GACL,IAIG,SAHMmB,KAAKgF,OAAO+C,QAAQouE,OAAO/2D,EAAIvgB,GAAI6G,GAItChC,GAAGpB,IACHoB,GAAGpB,GAAMoqB,SACThpB,GAAGpB,GAAMoqB,QAAQtN,EAAIvgB,IAErB6E,GAAGpB,GAAM2uB,WAAW7R,EAAIvgB,GAAI6G,OACxB,CAEJ,MAAM6nF,EACH9+C,SAASgmC,cAAc,iBACtB/wE,GAAG6pF,IAAc7pF,GAAG6pF,GAAW7gE,QAAQtN,EAAIvgB,KAC5C6E,GAAG6pF,GAAWt8D,WAAW7R,EAAIvgB,GAAI6G,EACvC,CAYH,CAXE,MAAOwC,GACN5F,EAAK4oF,UAAU9pE,IAAI,iBACnB9e,EAAK4oF,UAAU9pE,IAAI,sBAEnBphB,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,wEACHvJ,MAAO3F,KACPof,MACA1Z,UAEN,CAIH1F,KAAK4E,SAASlB,GAAGpB,GAAOoD,EAAO,EAIlC6lF,kBAAmB,CAACv9E,EAAMkJ,KACvBlX,KAAK8B,GAAGqG,OAAOC,UAAU,IAAIlJ,MAAM,yBAA0B,CAC1DgQ,QAAS,+CACTvJ,MAAO3F,KACPkX,aAEHszE,EAAe9iF,cAAc,KAItCkjF,EAASY,YAAYhB,EAAej9E,OAGpCjL,EAAKmpF,QAAoB,WAAIb,EAAS5oF,OAAOnD,GAIvB,cAAlByD,EAAKwrD,WACNxrD,EAAK6W,iBAAiB,SAAUla,IACzBA,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,iBAAmB,IAC/ClN,KAAKwtF,aAAc,EACtB,GAGT,CACH,CAUA7H,WAAWvmE,EAAKxf,EAAK0C,EAAMzD,EAAIg4B,GAC5B,GACIA,GAAOA,EAAIg0B,OAAOiD,UAAU5gD,QAAQ,iBAAmB,GACxDlN,KAAKwtF,mBAEExtF,KAAKwtF,YACPpuE,EAAIquE,qBACNruE,EAAIquE,mBAAqB,IAE5BruE,EAAIquE,mBAAmBztF,KAAK6G,aAAc,EAG1CrD,MAAM+N,QAAQ,CACXR,MAAOhR,EAAE,+CACTyR,SAAUtM,MAAOyI,IAEd,KADsBA,EACH,CAEhB,MAAMjI,EAAS,CAAC,EAChBA,EAAO1F,KAAK6G,YAAc,GAE1B,UACS7G,KAAKgF,OAAO+C,QAAQouE,OAAO/2D,EAAIvgB,GAAI6G,GAGrChC,GAAGpB,IAASoB,GAAGpB,GAAM2uB,YACtBvtB,GAAGpB,GAAM2uB,WAAW7R,EAAIvgB,GAAI6G,GAG/B1F,KAAK4E,SAASlB,GAAGpB,GAAOoD,EAY3B,CAXE,MAAOwC,GACN5F,EAAK4oF,UAAU9pE,IAAI,iBACnB9e,EAAK4oF,UAAU9pE,IAAI,sBAEnBphB,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,uDACHvJ,MAAO3F,KACPof,IAAKA,EACL1Z,OAAQA,GAEd,CACH,SAGF,CACJ,MAAMimF,EAAarpF,EAAKmpF,QAAoB,WACzCb,EAAWlnF,GAAGioF,GAEbf,GAAYA,EAASgB,YACtBhB,EAASgB,WAAW,CAAEC,MAAOzsE,EAAIvgB,IACvC,CAEA,OAAO,CACV,CAWAgkE,gBACG,OAAO/iE,MAAM+iE,cAAc,cAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,gBAIJ2hF,CACV,CAEAiH,cAAcx1E,EAAKtV,IAChBA,EAAUA,GAAW,CAAC,GACdpB,OAASoB,EAAQpB,QAAU,OACnCoB,EAAQnB,MAAQmB,EAAQnB,OAAS,OAGjC,IAAI+qF,EAAc,GACd4B,EAAe,gBACf9yB,EAAW,GAEXl4D,EAAQ,GACRirF,GAAuB,EACvBn2E,EAAIxX,KAAK6G,cACVnE,EAAQ8U,EAAIxX,KAAK6G,aAEhB2Q,EAAIi2E,oBACDj2E,EAAIi2E,mBAAmBztF,KAAK6G,cAC7B8mF,EAAuBn2E,EAAIi2E,mBAAmBztF,KAAK6G,aAIrDnE,GACDopF,EAAc,gBACd4B,EAAe,GACf9yB,EAAW,yBAAyB56D,KAAK66D,SAASn4D,SAE9C1C,KAAKmG,SAASs8C,kBAAoBkrC,IACnC7B,EAAc,gBACd4B,EAAe,GACf9yB,EAAW,yBAAyB56D,KAAK66D,SACtC76D,KAAKmG,SAASu8C,uBAKvB,IAAIkrC,EAAO,CACR,6CAA6C9B,6DACI4B,YAAuBxrF,EAAQpB,WAAW85D,qBAC5F1sD,KAAK,IAeP,OAbA0/E,EAAOA,EAAK/6E,QACT,SACA3Q,EAAQunD,SACH,QAAQ1pD,EAAE,uCACV,IAER6tF,EAAOA,EAAK/6E,QACT,WACA3Q,EAAQunD,SACH,aAAaikC,qGACb,IAGDE,CACV,CAEAP,UAAU79E,EAAMlN,EAAM2N,GACnB,MAAMs6E,EAAkBjoF,EAAKmyE,cAAc,oBAC3C,GAAI8V,EAAiB,CAClBA,EAAgB9V,cAAc,0BAA0BqK,MAAMhK,QAC3D,OACH,MAAMxa,EAAQiwB,EAAgB9V,cAAc,2BAC5Cna,EAAMwkB,MAAMhK,QAAU,GACtBxa,EAAMwkB,MAAM+O,gBAAkB,QAAQ59E,GAAOjQ,KAAK66D,SAASrrD,OAC3D8qD,EAAMqvB,aAAa,aAAcn6E,EACpC,CACH,CAEA1D,SAASkC,EAAMigB,GAEZ,OADcjgB,EAAKT,MAAMknE,cAAc,2BAC1ByX,aAAa,aAC7B,CAEAtnF,SAASoJ,EAAMigB,GACZ,IAAKjgB,EAAM,OAEX,MAAM08E,EAAU18E,EAAKT,MACrB,IAAKm9E,EAAS,OAEd,IAAI/0E,EAAM,KACNsY,IACDtY,EAAM3V,KAAKw8C,UAAUvuB,IAQxB,MAAM6/D,EAAYpD,EAAQjW,cAAc,0BACpCqZ,IAAWA,EAAUhP,MAAMhK,QAAUn/D,EAAM,OAAS,IAExD,MAAM2kD,EAAQowB,EAAQjW,cAAc,2BACpC,GAAIna,EAAO,CACR,MAAMyzB,EAAkBzzB,EAAMma,cAAc,oBACxCsZ,IACDA,EAAgBjP,MAAMhK,QAAUn/D,EAAM,QAAU,QAEnD2kD,EAAMwkB,MAAMhK,QAAUn/D,EAAM,QAAU,OAElCA,GACD2kD,EAAMwkB,MAAM+O,gBAAkB,QAAQ7tF,KAAK66D,SAASllD,OACpD2kD,EAAMqvB,aAAa,aAAch0E,IAEjC2kD,EAAM+xB,gBAAgB,aAE5B,CACH,CAaA2B,SAAS//D,GACN,OAAO,IAAI5e,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAK4X,EAAQjuB,KAAK6G,YAAa,OAAOvH,EAAQ,MAE9C,MAAM2uF,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIG,QAAU,SAAUlmF,GACrBmO,EAAOnO,EACV,EACA+lF,EAAIrT,OAAS,WACV,MAAMyT,EAAS5/C,SAASC,cAAc,UACtC2/C,EAAOttF,MAAQktF,EAAIltF,MACnBstF,EAAOvtF,OAASmtF,EAAIntF,OACRutF,EAAOC,WAAW,MAC1BC,UAAUN,EAAK,EAAG,GACtB,MACMO,EAAY,CACf7kF,KAFa0kF,EAAOI,YAGpB1tF,MAAOktF,EAAIltF,MACXD,OAAQmtF,EAAIntF,QAEfxB,EAAQkvF,EACX,EAEAP,EAAIS,IAAM1uF,KAAK66D,SAAS5sC,EAAQjuB,KAAK6G,YAAY,GAEvD,CASAg0D,SAASh8D,GACN,MAAO,SAASA,GACnB,CAYA8rF,UAAU4B,GAAU,GACjB,MAAO,gBAAgBvsF,KAAKgF,OAAOnG,MAAMmB,KAAKnB,MAAM0tF,EAAU,IAAM,KACvE,CAUAp8D,YAAYxmB,EAAMrC,GACfxH,MAAMqwB,YAAYxmB,EAAMrC,GACpBtH,KAAKotF,kBACN9lF,EAAUmW,SAASzd,KAAK6G,WAAY9G,EAAE,yBAC5C,mBC9nBH,MAAM4uF,EAAkB,EAAQ,OAEhCpvF,EAAOC,QAAU,cAA0BmvF,EAUxCzX,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAUlC,OAPAF,EAAOqD,OAAS,OAChBrD,EAAOf,IAAM,WAIbe,EAAO2kE,SAAW,IAAM,GAEjB3kE,CACV,CAWA6gE,gBAEG,MAAMgnB,EAAuB/pF,MAAM+iE,gBAYnC,OATAgnB,EAAqB77C,OAAS,KACpB,CACJ5pC,IAAK,OACL+B,SAAU,CACPxE,KAAM,YAKRkoF,CACV,CAEAjqB,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,CAEAnhF,SAASoJ,EAAMigB,GACZnuB,MAAM8E,SAASoJ,EAAMigB,EAAS,IAC9BjgB,EAAKhM,OAAOU,MAAQurB,EAAQjuB,KAAK6G,WACpC,oBCnEH,MAAM+nF,EAAkB,EAAQ,OAIhCrvF,EAAOC,QAAU,cAA0BovF,EACxCjvF,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAGjB,CAMA2C,OACG,OAAO7H,MAAM6H,OAAOwM,MAAK,KAEtB,GAAInU,KAAKgjD,iBAAiB98C,OAAQ,CAC/B,MAAM6B,EAAQ/H,KAAKgF,OAAO+C,QAE1B,GAAgC,GAA5B/H,KAAKmG,SAAS08C,WAGf,OAAO,IAAIxzC,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIw4E,EAAU,EACVC,EAAU,EAEd/mF,EACIioB,QAAQ,CAAC,GACT7b,MAAMpK,KACJA,EAAOA,EAAKJ,MAAQI,GAGf/F,SAASgK,IACX,GAAIhB,MAAMC,QAAQe,EAAKhO,KAAK6G,aAAc,CAEvC,IAAIkoF,EAAkB/gF,EACnBhO,KAAK6G,YACN+B,QAAQsK,IAEoC,GAAxClT,KAAKgjD,iBAAiB91C,QAAQgG,EAAErU,MAItC,GACGkwF,EAAgB7oF,QAChB8H,EAAKhO,KAAK6G,YAAYX,OACvB,CACC4oF,IAG8B,GAA1BC,EAAgB7oF,SACjB6oF,EAAkB,IAErB,MAAMrsF,EAAQ,CAAC,EACfA,EAAM1C,KAAK6G,YAAckoF,EACzBhnF,EAAMouE,OAAOnoE,EAAKnP,GAAI6D,GAAOyR,MAAK,KAG/B06E,IACIA,GAAWC,GACZxvF,GACH,GAEN,CACH,KAEY,GAAXwvF,GACDxvF,GACH,IAEF8U,MAAMiC,EAAO,IAEhB,CAEJ,MAAMsZ,EAAQ,CAAC,EAEf,OADAA,EAAM3vB,KAAK6G,YAAc7G,KAAKgjD,iBACvB,IAAI3zC,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIw4E,EAAU,EAEd9mF,EACIioB,QAAQL,GACRxb,MAAMpK,IAEJA,EAAOA,EAAKJ,MAAQI,EAMpB,MAAMrH,EAAQ,CAAC,EACfA,EAAM1C,KAAK6G,YAAc,GAEzBkD,EAAK/F,SAASgK,IACXjG,EAAMouE,OAAOnoE,EAAKnP,GAAI6D,GAAOyR,MAAK,KAC/B06E,IACIA,GAAW9kF,EAAK7D,QACjB5G,GACH,GACD,IAEc,GAAfyK,EAAK7D,QACN5G,GACH,IAEF8U,MAAMiC,EAAO,GAEvB,CACH,IAEN,CAEA/Q,UAKG,OAJkBxF,MAAMwF,SAK3B,CAOA4xE,aAAah1E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASlC,MAAMo3E,aAAah1E,GA4FlC,OA3FclC,KACI8B,GAAGy6B,KAIjBr6B,EAAQunD,UArIR,KAAIl0C,KAAWzT,GAAGkP,aAAa7P,SAASoU,EAAO,EAuIYxV,CACzD,eAGYmC,EAAQunD,UAAazpD,KAAKmG,SAASo3C,SAErDv7C,EAAOqkF,WAAc3jF,GACX1C,KAAKqmF,WAAW3jF,GAE1BV,EAAOskF,UAAa5jF,GACV1C,KAAKsmF,UAAU5jF,GAGzBV,EAAO2kE,SAAY14C,IAChB,IAAIsuB,EAAetuB,EAAQjuB,KAAK6G,YAChC,GAAoB,MAAhB01C,EAAsB,MAAO,GAC7Bv8C,KAAKmG,SAAS08C,aACftG,EAiRZ,SAA6B52C,EAAOsoB,EAAU,CAAC,GAC5C,IAAItgB,EAAS,GAiBb,OAhBiC,MAA7BsgB,EAAQtoB,EAAMkB,cACf8G,EAASsgB,EAAQtoB,EAAMkB,YAEF,iBAAV8G,IAAoBA,EAAS+F,KAAKuD,MAAMtJ,IAG/ChI,EAAMQ,WACPwH,GAAUhI,EAAMQ,SAASjE,SAAW,IAAI0G,QAAQ4oC,IAEzC7jC,GAAU,IAAI/E,QAAQqK,IAAOu+B,EAAI3yC,IAAM2yC,KAASv+B,EAAEpU,IAAMoU,KACrD/M,OAAS,MAMlByH,CACV,CApS2BqhF,CAAoBhvF,KAAMiuB,IAE5C,IAAIvoB,EAAS,GACbA,EAAOrB,KAAK,gCACZ,IAAI4qF,EAAiB,GACjBC,EAAY,GAChB,GACG3yC,GACAvvC,MAAMC,QAAQsvC,IACdA,EAAar2C,OAEbq2C,EAAav4C,SAAS2R,IACf3V,KAAKmG,SAAS28C,WAAantC,EAAIutC,MAChC+rC,EAAiB,iBACjBC,EAAY,eAAev5E,EAAIutC,QAE9BvtC,EAAI1H,MACLvI,EAAOrB,KACJ,eAAe6qF,oCAA4CD,YAAyBt5E,EAAI1H,sCAAmC0H,EAAI9W,iGAErI,IAEC09C,EAAar2C,OAAS,GACvBR,EAAOrB,KACJ,8CAA8Ck4C,EAAar2C,qBAG7D,KAAIq2C,EAoBR,MAAO,GApBe,CACtB,IAAI4yC,EAAc5yC,EAIlB,GAH2B,iBAAhBA,IACR4yC,EAAcnvF,KAAKgoF,eAAezrC,KAEhC4yC,EAAa,MAAO,GAKzB,GAJInvF,KAAKmG,SAAS28C,WAAaqsC,EAAYjsC,MACxC+rC,EAAiB,iBACjBC,EAAY,eAAeC,EAAYjsC,QAEtCisC,EAAYlhF,KAAM,CACnB,IAAIhJ,EAAQ,GACR/C,EAAQunD,WAAazpD,KAAKmG,SAASo3C,WACpCt4C,EAAQ,0GAEXS,EAAOrB,KACJ,eAAe6qF,oCAA4CD,MAAmBhqF,wBAA4BkqF,EAAYlhF,oBAE5H,CACH,CAEA,CAEA,OADAvI,EAAOrB,KAAK,UACLqB,EAAOwI,KAAK,GAAG,EAEzBlM,EAAOqD,OAASrF,KAAKmG,SAAS08C,WAAa,cAAgB,QAC3D7gD,EAAO4+E,QAAU,CACd4F,QAAQ,EACR78E,KAAM3J,KAAKmG,SAASjE,QAAQxD,KAAI,SAAU8yC,GACvC,MAAO,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,KACXi1C,IAAK1R,EAAI0R,IAEf,KAECljD,KAAKmG,SAAS08C,aACf7gD,EAAO4+E,QAAQlgF,KAAO,gBAGlBsB,CACV,CAUA41E,cAAcx4D,EAAKxf,EAAK0C,EAAMJ,GAE3B,GAAKI,IAILJ,EAAUA,GAAW,CAAC,EAEjBI,EAAKmyE,eAAV,CAEA,IAAI2a,EAAc9sF,EAAKmyE,cACpB,4CAEC2a,GACDA,EAAYj2E,iBAAiB,SAAUla,IACpCA,EAAEowF,kBACF,IAAI3pF,EAAS,CAAC,EACdA,EAAO1F,KAAK6G,YAAc,GAC1B7G,KAAKgF,OACD+C,QACAouE,OAAO/2D,EAAIvgB,GAAI6G,GACfyO,MAAK,KAEHzQ,GAAGpB,IAAO2uB,aAAa7R,EAAIvgB,GAAI6G,EAAO,IAExC0O,OAAOlM,IACL5F,EAAK4oF,UAAU9pE,IAAI,iBACnB9e,EAAK4oF,UAAU9pE,IAAI,sBAEnBphB,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QAAS,4BACTmO,IAAKA,EACL1Z,OAAQ,GACRC,MAAO3F,KAAK6F,SACb,GACH,GA3BoB,CA8BlC,CAuBAg9D,gBAGG,MAAMgnB,EAAuB/pF,MAAM+iE,gBAkBnC,OAfAgnB,EAAqB77C,OAAS,KACpB,CACJ5pC,IAAKpE,KAAKmG,SAAS08C,WAAa,iBAAmB,eACnD18C,SAAU,CACPjE,QAASlC,KAAKmG,SAASjE,QAAQxD,KAAI,SAAU8yC,GAC1C,MAAO,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,KACXi1C,IAAK1R,EAAI0R,IAEf,OAKF2mC,CACV,CAEAjqB,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,KAAKpE,KAAKmG,SAAS08C,WAAa,gBAI/BkjC,CACV,CAEAM,WAAW3jF,GACR,IAAKA,EAAO,MAAO,GACnB,IAAI8C,EAAO,GACX,GAAIwH,MAAMC,QAAQvK,GACfA,EAAMsB,SAAS2R,IACZ,GAAkB,iBAAPA,EACRnQ,EAAKnB,KAAKsR,EAAI9W,QACV,CACJ,IAAIkpF,EAAU/nF,KAAKgoF,eAAeryE,GAClCnQ,EAAKnB,KAAK0jF,EAAQlpF,GACrB,UAGH,GAAoB,iBAAT6D,EACR8C,EAAKnB,KAAK3B,EAAM7D,QACZ,CACJ,IAAIkpF,EAAU/nF,KAAKgoF,eAAetlF,GAC9BqlF,GAAWA,EAAQlpF,IACpB2G,EAAKnB,KAAK0jF,EAAQlpF,GAExB,CAEH,OAAO2G,EAAK0I,MACf,CAEAo4E,UAAU5jF,GACP,GAAI1C,KAAKmG,SAAS08C,WAAY,CAC3B,IAAIolC,EAAa,GAKjB,OAJWvlF,EAAM8lB,MAAM,KAClBxkB,SAAS2R,IACXsyE,EAAW5jF,KAAKrE,KAAKgoF,eAAeryE,GAAK,IAErCsyE,CACV,CACG,OAAOvlF,CAEb,CAEAslF,eAAeryE,GACZ,IAAI3H,EACA9L,EAAUlC,KAAKkC,UACnB,OAAIA,EAAQgE,OAAS,GAClBhE,EAAQ8B,SAAS0lF,IACd,GAAIA,EAAO7qF,IAAM8W,EAEd,OADA3H,EAAO07E,GACA,CACV,IAEI17E,GAEA,EAEb,CAEAlC,SAASkC,EAAMigB,GACZ,OAAOjuB,KAAKsmF,UAAUt4E,EAAKlC,WAC9B,CAEAwjF,mBAAmB3pF,EAAOsoB,EAAU,CAAC,GAClC,IAAItgB,EAAS,GAwBb,OAvBgC,MAA5BsgB,EAAQjuB,KAAK6G,YACd8G,EAASsgB,EAAQjuB,KAAK6G,YACdonB,IACJjhB,MAAMC,QAAQghB,GACftgB,EAASsgB,EAETtgB,EAAOtJ,KAAK4pB,IAGdtgB,EAAOzH,SACa,iBAAVyH,IAAoBA,EAAS+F,KAAKuD,MAAMtJ,IAG/C3N,KAAKmG,WACNwH,GAAU3N,KAAKmG,SAASjE,SAAW,IAAI0G,QAAQ4oC,IAExC7jC,GAAU,IAAI/E,QAAQqK,IAAOu+B,EAAI3yC,IAAM2yC,KAASv+B,EAAEpU,IAAMoU,KACrD/M,OAAS,MAMlByH,CACV,CAEA/I,SAASoJ,EAAMigB,GACPjgB,IAEDhO,KAAKmG,SAAS08C,YAGf/iD,MAAM8E,SAASoJ,EAAMigB,GAE3B,oBCvaH,MAAMshE,EAAsB,EAAQ,OAEpChwF,EAAOC,QAAU,cAA8B+vF,EAC5C5vF,YAAY+F,EAAQV,GACjBlF,MAAM4F,EAAQV,EAUjB,CAMAM,UAKG,OAJkBxF,MAAMwF,SAK3B,CAOA4xE,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAQlC,OANAF,EAAOqD,OAAS,OAEhBrD,EAAO2kE,SAAW,CAACnvD,EAAKw2B,EAAQtrC,EAAOqgF,EAAKyM,KACjC9sF,GAAS,IAAI2R,WAAWxB,QAAQ,OAAQ,QAG5C7Q,CACV,CAWA6gE,gBAGG,MAAMgnB,EAAuB/pF,MAAM+iE,gBAYnC,OATAgnB,EAAqB77C,OAAS,KACpB,CACJ5pC,IAAK,UACL+B,SAAU,CACPxE,KAAM,cAKRkoF,CACV,CAEAjqB,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,CAYAnhF,SAASoJ,EAAMigB,GACZnuB,MAAM8E,SAASoJ,EAAMigB,EAAS,GACjC,oBChGH,MAAMwhE,EAAoB,EAAQ,OAElC,IAAIC,GAAc,EAKlBnwF,EAAOC,QAAU,cAA4BiwF,EAC1C9vF,YAAY+F,EAAQV,GACZ0qF,IAEFlsF,MAAMmsF,QAAQ3uE,OAASxd,MAAMC,OAC1B,CAEA,EACAD,MAAMmsF,QAAQ1hF,MAEjByhF,GAAc,GAEjB5vF,MAAM4F,EAAQV,EACjB,CAgBAkyE,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAWlC,OATAF,EAAOqD,OAAS,SAEhBrD,EAAOwe,OAAUmQ,IACd,MAAM1C,EAAU,CAAC,EAGjB,OAFAA,EAAQjuB,KAAK6G,YAAc8pB,EAEpB3wB,KAAKwgB,OAAOyN,EAAQ,EAGvBjsB,CACV,CAWA6gE,gBACG,OAAO/iE,MAAM+iE,cAAc,YAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,oBCnEH,MAAMrtC,EAAU,EAAQ,OAElBk3C,EAAkB,CACrBC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,cAAc,EACd7Q,YAAa,GACb6L,UAAU,GAGPiF,EAA6B,CAChC7rF,IAAK,eAGR7E,EAAOC,QAAU,cAAiCk5C,EAC/C/4C,YAAY+F,EAAQV,EAAQm3C,EAAgB8zC,GACzCnwF,MAAM4F,EAAQV,EAAQm3C,EACzB,CAGAvxB,kBACG,MAAO,CACJxmB,IAAK,cACLgH,KAAM,OACNlH,SAAU,GACVg6B,YAAa,GAEnB,CAEAgyD,kBAAkBxF,EAASvkF,EAAUvG,EAAKwf,GACvC,GAAe,MAAXsrE,EAAiB,OAErB,MAAMyF,EAAUhqF,EAASiqF,QAAU,GACnC1F,EAAQf,aAAa,UAAWwG,GAGhChqF,EAAWA,GAAY,CAAC,EACxB,IAAK,MAAMstB,KAAMm8D,EACO,OAAjBzpF,EAASstB,GACVttB,EAASstB,GAAM,KAEfttB,EAASstB,GAAMttB,EAASstB,IAAOm8D,EAAgBn8D,GAgCrD,GA3BGttB,EAAS6kF,UACT7kF,EAASkqF,OACTlqF,EAASwD,MACTxD,EAASwD,KAAKzD,QAEdC,EAASwD,KAAK3F,SAAQ,SAAU2sB,GAC7BxqB,EAASkqF,MAAM3xF,KAAI,SAAUwU,GACtBA,EAAErU,IAAM8xB,EAAE9xB,KAAI8xB,EAAEuyB,IAAMhwC,EAAEgwC,IAC/B,GACH,IACA/8C,EAAe,KAAInG,KAAKswF,YACrBnqF,EAAe,KACfA,EAAS6kF,WAEgB,MAApB7kF,EAAe,MAAiC,IAApBA,EAAe,KACnDA,EAAe,KAAInG,KAAKswF,YAAY,GAAInqF,EAAS6kF,UAEjD7kF,EAAe,KAAInG,KAAKswF,YACrBnqF,EAAe,KACfA,EAAS6kF,UAKf7kF,EAAgB,MAAInG,KAAKnB,GAGE,MAAvB6rF,EAAQ6F,YAIT,YAFA7F,EAAQ6F,YAAYC,WAAWrqF,GAQlC,IAAIsqF,EAuFJ,GA1FAtqF,EAAS61B,QAAU0uD,EAIfvkF,EAAS6kF,UACN7kF,EAASuqF,QACVvqF,EAASwqF,UAAY,CAClBC,qBAAsB,SAAU1uF,GAC7B,MAAO,mDACJA,EAAQ2uF,YAAc,eAAiB,8JAGpC3uF,EAAQsN,wBAAwBrJ,EAASR,oHAGtCQ,EAAS2qF,eACJ3qF,EAAS2qF,eAAe5uF,GACxB,uBAErBiE,EAAS4qF,cAA+B,GAAf7uF,EAAQ+L,yBAEjB/L,EAAQ84D,UACH,8GACA,2BAGjB,GAGH70D,EAASwqF,UAAY,CAClBC,qBAAsB,SAAU1uF,GAC7B,MAAO,mDACJA,EAAQ2uF,YAAc,eAAiB,iDAEzB3uF,EAAQghD,mDACnBhhD,EAAQsN,wBAAwBrJ,EAASR,oCAEtCQ,EAASoxD,SACJ,qFACA,+BAGLpxD,EAAS2qF,eACJ3qF,EAAS2qF,eAAe5uF,GACxB,+BAELiE,EAAS4qF,cAA+B,GAAf7uF,EAAQ+L,iCAEjC/L,EAAQ84D,UACH,yFACA,2BAGjB,GAGNy1B,EAAmB,IAAIO,YAAYC,OAAOC,SAAS/qF,GAEnDukF,EAAQ6F,YAAcE,EACtBzwF,KAAKmxF,oBAAoBzG,EAAS9qF,EAAKwf,KAEvCjZ,EAASwqF,UAAY,CAClBS,mBAAoB,SAAUlvF,GAC3B,MAAO,gEACJA,EAAQsN,wBACSrJ,EAASR,0BAEpBQ,EAASoxD,SACJ,kFACA,4BAGLpxD,EAAS2qF,eACJ3qF,EAAS2qF,eAAe5uF,GACxB,4BAELiE,EAAS4qF,cAA+B,GAAf7uF,EAAQ+L,8BAEjC/L,EAAQ84D,UACH,sFACA,yBAGjB,GAGHy1B,EAAmB,IAAIO,YAAYC,OAAOI,OAAOlrF,GACjDukF,EAAQ6F,YAAcE,GAGrBtqF,EAASoxD,SAAU,CACpB,MAAM+5B,EAAsB,KACzB,MAAM5lC,EAAW1rD,KACXuxF,EAAY9iD,SAASomC,iBACxB,oFAEH,IAAK,IAAI3hE,EAAI,EAAGA,EAAIq+E,EAAUrrF,OAAQgN,IAAK,CACxC,MAAMs+E,EAAQD,EAAUr+E,GACpBs+E,IAAUA,EAAMC,kBACjBD,EAAMr4E,iBACH,SACA,SAAUla,GACPA,EAAEowF,kBACFpwF,EAAEyyF,iBAEF,MAAMC,EAAY3xF,KAAK4xF,cACvB,IAAKD,EAAW,OAEhB,MAAMnjE,EAAQmjE,EAAUzF,aAAa,gBACrC,IAAK19D,EAAO,OAEZ,MAAMjkB,EAAUonF,EAAUzF,aAAa,iBACvC,IAAK3hF,EAAS,OAEd,MAAMsnF,EAAYnmC,EAAS1mD,OAAO4I,UAAUrD,GACvCsnF,GAELA,EAAUziF,KAAK,WAAYof,EAC9B,IACA,GAEHgjE,EAAMC,iBAAkB,EAE9B,GAGHn9E,YAAW,KACRg9E,IAEA5G,EAAQvxE,iBAAiB,UAAU,KAChCm4E,GAAqB,GACtB,GACF,IACN,CAGA,GAAInrF,EAAS4pF,SAAU,CACpB,MAAM+B,EAAapH,EAAQqH,uBAAuB,qBAClD,IAAK,IAAI7+E,EAAI,EAAGA,EAAI4+E,EAAW5rF,OAAQgN,IAAK,CACzC,MAAM8+E,EAAWF,EAAW5+E,GACxB8+E,GACDA,EAASC,WAAWC,YAAYF,EAEtC,CACH,CAGAhyF,KAAKmyF,oBAAsBhsF,CAC9B,CAEAisF,eAAe1H,GACZ,OAAIA,GAAWA,EAAQ6F,YAChBvwF,KAAKmyF,qBAAuBnyF,KAAKmyF,oBAAoBnH,SAE/CN,EAAQ6F,YAAY57D,WAAa,GAGjC+1D,EAAQ6F,YAAY57D,WAAa,KAGvC30B,KAAKmyF,qBAAuBnyF,KAAKmyF,oBAAoBnH,SAC/C,GACE,IAElB,CAEAqH,eAAe3H,EAAS/gF,GAChB+gF,GAAYA,EAAQ6F,cAEzB5mF,EAAO3J,KAAKswF,YAAY3mF,EAAM+gF,EAAQ6F,YAAYruF,QAAQ8oF,UAGtDh+E,MAAMC,QAAQtD,IAASA,EAAK,IAC5BA,GAAQA,EAAK9K,GAGd6rF,EAAQ6F,YAAY+B,QAAQ3oF,GAC1B+gF,EAAQ6F,YAAYtrF,QAC5B,CAEAstF,mBAAmB7H,GACZA,GAAWA,EAAQ6F,cACpB7F,EAAQ6F,YAAYh8E,iBAEbm2E,EAAQ6F,YAErB,CAEAD,YAAY3mF,EAAMqhF,GAAW,GAC1B,IAAKrhF,GAAQqhF,EACV,MAAO,GACH,GAAIA,GAAYrhF,GAAQqD,MAAMC,QAAQtD,IAAwB,GAAfA,EAAKzD,OACxD,MAAO,GACH,IAAK8kF,GAAYrhF,GAAQqD,MAAMC,QAAQtD,IAAwB,GAAfA,EAAKzD,OACzD,OAAO,KACH,IAAKyD,IAASqhF,EAClB,OAAO,KAGV,GAAmB,iBAARrhF,GAAoBA,EAAKzD,OAAS,EAC1C,IACGyD,EAAO+J,KAAKuD,MAAMtN,EAIrB,CAHE,MAAO1K,GAEN0K,EAAO,CAAE9K,GAAI8K,EAAMsE,KAAMtE,EAC5B,CAyBH,OArBKqhF,GAAYh+E,MAAMC,QAAQtD,GAC5BA,EAAOA,EAAK,GACJqhF,IAAah+E,MAAMC,QAAQtD,KACnCA,EAAO,CAACA,IAIPqhF,EACDrhF,EAAK3F,SAAS2sB,KACNA,EAAE9xB,IAAM8xB,EAAEnhB,OACZmhB,EAAE9xB,GAAK8xB,EAAEnhB,KACZ,KAGE7F,EAAK9K,IAAM8K,EAAK6F,OAAM7F,EAAK9K,GAAK8K,EAAK6F,MAGjC,MAAR7F,GAAgBqhF,IACjBrhF,EAAO,IAGHA,CACV,CAEAwnF,oBAAoBzG,GACjB,GAAKA,EAAQ8H,cACO9H,EAAQ8H,aACR9H,EAAQkH,cAAcY,aACV,EAAG,CAChC,IAAIhhE,EAAQ,EACR9rB,EAAS,GAKb,GAJIglF,GAAWA,EAAQ6F,cACpB7qF,EAASglF,EAAQ6F,YAAYzkF,YAAc,IAE9C0lB,EAAQ9rB,EAAOQ,OACXsrB,EAAQ,EAAG,CACZ,MAAMihE,EAAQ/H,EAAQjW,cACnB,iCAEH,GAAa,MAATge,EACDA,EAAM9jD,UAAYnd,MACd,CACJ,MAAMkhE,EAASjkD,SAASC,cAAc,KACtCgkD,EAAOpG,KAAO,sBAMd,MAAMhqF,EAAOmsC,SAASC,cAAc,QAC9BikD,EAAWlkD,SAASmkD,eAAephE,GACzClvB,EAAK4oF,UAAU9pE,IAAI,cAAe,oBAClC9e,EAAKuwF,YAAYF,GACjBD,EAAOG,YAAYvwF,GACnBooF,EAAQmI,YAAYH,EACvB,CACH,CACH,CACH,mBCnWH,MAAMI,EAAoB,EAAQ,MAElCvzF,EAAOC,QAAU,cAA4BszF,EAkB1C5b,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAclC,OAZAF,EAAOqD,OAAS,OAChBrD,EAAOf,IAAM,WAEbe,EAAO2kE,SAAW,CAACnvD,EAAKw2B,EAAQtrC,IAExB8U,EAAIsuE,OAGC,IAFCpjF,GAAS,IAAI2R,WAAWxB,QAAQ,OAAQ,QAM/C7Q,CACV,CAQA0kC,aAAahhC,GAELA,EAAO1F,KAAK6G,aAEV7G,KAAKmG,SAAS4nC,UACX/tC,KAAKmG,SAAS4nC,QAAQ7gC,QAAQ,WAAa,EAC5CxH,EAAO1F,KAAK6G,YAAc7G,KAAK8B,GAAG0N,OAElC9J,EAAO1F,KAAK6G,YAAc7G,KAAKmG,SAAS4nC,QAIpD,CAUA5d,YAAYxmB,EAAMrC,GAGf,GAFAxH,MAAMqwB,YAAYxmB,EAAMrC,GAEpBqC,GAAQA,EAAK3J,KAAK6G,YAAa,CAChC,MAAMksF,EAAa/yF,KAAKL,YAAYwE,WAAWk/C,gBAE/C,GAAI15C,EAAK3J,KAAK6G,YAAYX,OAAS6sF,EAAY,CAC5C,MAAMhzF,EAAIC,KAAK8B,GAAG7B,QAClBqH,EAAUmW,SACPzd,KAAK6G,WACL9G,EAAE,2CAA4C,CAACgzF,IAErD,CACH,CACH,CAOIttD,qBACD,OAA4C,GAArCzlC,KAAKmG,SAASm9C,mBACxB,CAWAuf,gBAGG,MAAMgnB,EAAuB/pF,MAAM+iE,gBAYnC,OATAgnB,EAAqB77C,OAAS,KACpB,CACJ5pC,IAAK,UACL+B,SAAU,CACPxE,KAAM,YAKRkoF,CACV,CAEAjqB,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,CAYAnhF,SAASoJ,EAAMigB,GACZnuB,MAAM8E,SAASoJ,EAAMigB,EAAS,GACjC,oBC9IH,MAAM+kE,EAAyB,EAAQ,OAEvCzzF,EAAOC,QAAU,cAAiCwzF,EAsB/C9b,aAAah1E,GACV,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAalC,OAXAF,EAAOqD,OAAS,KAChBrD,EAAOf,IAAM,WACbe,EAAO2kE,SAAY14C,GAEXA,EAAQ63D,OAGH,GAFA9lF,KAAKwgB,OAAOyN,GAMlBjsB,CACV,CAUA41E,gBAA8C,CAW9C/U,gBAEG,OAAO,IACV,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,oBC3EH,MAAMkN,EAAkB,EAAQ,MAE1BlzF,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAElDhW,EAAOC,QAAU,cAA0ByzF,EAqBxCtG,kBAAkBn1E,GACf,MAAO,GAAGxX,KAAK6G,WAAWgM,QAAQ,KAAM,QAAQ2E,EAAI3Y,SACvD,CAGAq4E,aAAah1E,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMF,EAASlC,MAAMo3E,aAAah1E,GAC5ByD,EAAQ3F,KAEd,IAAIkzF,EAAY,GACZC,EAAc,GACdjxF,EAAQkxF,SACTF,EAAY,cACZC,EACG,8CACApzF,EAAE,gBACF,WAGN,MAAMgB,EAAQmB,EAAQnB,MA8EtB,OA5EAiB,EAAO2kE,SAAYnvD,IAChB,GAAIA,EAAIsuE,OAAQ,OAAOtuE,EAAI7R,EAAMkB,YAEjC,MAAMwsF,EAAW,GACjB,IAAIC,EAAgBtzF,KAAK8B,GAAG2D,UAAUE,EAAMQ,SAASjE,SACrDoxF,EAAgB,IAAI9vF,MAAMivE,eAAe,CACtC9oE,KAAM2pF,IAGT,IAAI5tF,EAAS8R,EACgB,MAAzBA,EAAI7R,EAAMkB,cACXnB,EAAS8R,EAAI7R,EAAMkB,aAGtBysF,EAAc3pF,KAAK8/E,MAAK,SAAUjyE,GAC/B,QAC4B,IAAlB9R,EAAOwH,UACa,GAA3BxH,EAAOwH,QAAQsK,EAAI3Y,IACpB,CACC,IAAI+uF,EAAO,GAEP2F,EAAS/7E,EAAI3Y,GACjB,KAAOmB,KAAKwzF,YAAYD,IACrBD,EAAc3pF,KAAK8/E,MAAK,SAAUgK,GAC3BH,EAAc3pF,KAAK6pF,YAAYD,IAAWE,EAAI50F,KAC/C+uF,EAAO6F,EAAIxlF,KAAO,KAAO2/E,EAE/B,IACA2F,EAASvzF,KAAKwzF,YAAYD,GAG7B3F,GAAQp2E,EAAIvJ,KACZolF,EAAShvF,KAAKupF,EACjB,CACH,IAGA,IAAI8F,EAAW,GAkBf,OAjBAA,GAAY,iCACW,GAAnBL,EAASntF,OACVwtF,GAAYP,EAEZE,EAASrvF,SAAQ,SAAUgK,GACxB0lF,GACG,0GAGA1lF,EACA,SACN,IAEH0lF,GAAY,SAIR3yF,EAEE,4BACAA,EACA,+BACAmyF,EACA,KACAQ,EACA,SAIA,+BACAR,EACA,KACAQ,EACA,QAEN,EAGI1xF,CACV,CAUA41E,cAAcx4D,EAAKxf,EAAK0C,EAAMJ,GAE3B,IAAKI,EACF,OAKH,MAAMqD,EAAQ3F,KAEd,IAJAkC,EAAUA,GAAW,CAAC,GAIVkxF,OAAQ,CACjB,IAAKh0E,GAAqB,GAAdA,EAAIlZ,OAKb,YAJA5D,EAAKqsC,UACF,uFACA5uC,EAAE,gBACF,iBAIN,MAAMszF,EAAW,GACjBnxF,EAAUlC,KAAK8B,GAAG2D,UAAUE,EAAMQ,SAASjE,SAC3CA,EAAU,IAAIsB,MAAMivE,eAAe,CAChC9oE,KAAMzH,IAGT,IAAIwD,EAAS0Z,EACgB,MAAzBA,EAAIzZ,EAAMkB,cACXnB,EAAS0Z,EAAIzZ,EAAMkB,aAGtB3E,EAAQyH,KAAK8/E,MAAK,SAAUjyE,GACzB,QAC4B,IAAlB9R,EAAOwH,UACa,GAA3BxH,EAAOwH,QAAQsK,EAAI3Y,IACpB,CACC,IAAI+uF,EAAO,GAEP2F,EAAS/7E,EAAI3Y,GACjB,KAAOmB,KAAKwzF,YAAYD,IACrBrxF,EAAQyH,KAAK8/E,MAAK,SAAUgK,GACrBvxF,EAAQyH,KAAK6pF,YAAYD,IAAWE,EAAI50F,KACzC+uF,EAAO6F,EAAIxlF,KAAO,KAAO2/E,EAE/B,IACA2F,EAASvzF,KAAKwzF,YAAYD,GAG7B3F,GAAQp2E,EAAIvJ,KACZolF,EAAShvF,KAAKupF,EACjB,CACH,IAEA,MAAM+F,EAAQ,UACd,IAAID,EAAW,GACfA,GAAY,4CACZL,EAASrvF,SAAQ,SAAUgK,GACxB0lF,GACG,qFACAC,EACA,iBACA3lF,EACA,SACN,IACA0lF,GAAY,SAEZpxF,EAAKqsC,UAAY+kD,CACpB,CAEA/tF,EAAMiuF,SAAStxF,EAAM1C,EAAKwf,EAC7B,CAUAumE,WAAWvmE,EAAKxf,EAAK0C,EAAMnC,GACxB,MAAMN,EAASD,EAAIQ,OAAOJ,KAAK2sF,kBAAkBvtE,IAC3Cy0E,EAAU,GAAGh0F,UACbi0F,EAAS,GAAGj0F,SACZa,EAAOgD,GAAGpB,GACVqD,EAAQ3F,KACR+zF,EAAkB5zF,EACxB,IAAIuF,EAAS,CAAC,EACVsuF,GAAc,EAclB,SAASC,EAAatuF,EAAOH,GAC1BE,EAbH,SAAmBC,EAAOyZ,GACvB,IAAI1Z,EAAS,CAAC,EAQd,YANmB,IAATC,QACoB,IAApBA,EAAMkB,iBACmB,IAAzBuY,EAAIzZ,EAAMkB,cAEjBnB,EAAS0Z,EAAIzZ,EAAMkB,aAEfnB,CACV,CAGYwuF,CAAUvuF,EAAOH,GAE1B,MAAM2uF,EAAQzwF,GAAGowF,GACjBK,EAAMnR,aAEN,MAAM9gF,EAAUyD,EAAM7D,GAAG2D,UAAUE,EAAMQ,SAASjE,SAClDiyF,EAAMn5E,WACNm5E,EAAMl9E,MAAM/U,GACZiyF,EAAM1vF,UACN0vF,EAAMC,aACND,EAAME,UAEQ,MAAV3uF,GAAkBA,EAAOQ,QAC1BR,EAAO1B,SAAQ,SAAUnF,GAClBs1F,EAAMrnE,OAAOjuB,KACds1F,EAAMG,UAAUz1F,GACJs1F,EAAMzc,YAAY74E,GAC1BqsF,UAAU9pE,IAAI,YAExB,IAEH+yE,EAAMlR,cACT,CAuGA,OArGIv/E,GAAGmwF,IACJnwF,GAAGmwF,GAASlvF,OACZsvF,EAAaj0F,KAAMof,IAEnB5b,MACI/C,GAAG,CACD5B,GAAIg1F,EACJnzF,KAAM,QACNK,MAAO,IACPD,OAAQ,IACRqB,GAAI,CACDkI,OAAQ,KACc,GAAf2pF,GAAqBC,EAAaj0F,KAAMof,GAE5C40E,GAAc,CAAK,GAGzBxyF,KAAM,CACH3C,GAAIi1F,EACJpzF,KAAM,OACNO,IAAK,eACL0lE,SAAU,SAAUnvD,EAAKw2B,GACtB,MACG,UACAA,EAAOi4C,SAASzuE,EAAKw2B,GACrB,SACAx2B,EAAIvJ,KACJ,UAEN,EACA9L,GAAI,CACDoyF,YAAarvF,eAAgBrG,EAAI6D,EAAO8tB,GACrC,MAAMgkE,EAAMx0F,KAAK03E,YAAY74E,GACvB41F,EAAOz0F,KAQb,GAPa,GAAT0C,EACD8xF,EAAItJ,UAAU9pE,IAAI,YAElBozE,EAAItJ,UAAUnwE,OAAO,YAIpB/a,KAAKwzF,YAAY30F,GAAK,CACvB41F,EAAKzR,aAEL,IAAIuQ,EAAS10F,EACb,KAAOmB,KAAKwzF,YAAYD,IACrBA,EAASvzF,KAAKwzF,YAAYD,GACtBA,GAAU10F,GAAI41F,EAAKC,YAAYnB,GAGtCvzF,KAAK2J,KAAKgrF,YAAYpB,GAAQ,SAAUvlF,GACjCA,EAAKnP,IAAMA,GAAI41F,EAAKC,YAAY1mF,EAAKnP,GAC5C,IAEA41F,EAAKxR,cACR,MACGwR,EAAKzR,aACLhjF,KAAK2J,KAAKgrF,YAAY91F,GAAI,SAAU2Y,GAC7BA,EAAI3Y,IAAMA,GAAI41F,EAAKC,YAAYl9E,EAAI3Y,GAC1C,IACA41F,EAAKxR,eAER,MAAMv9E,EAAS,CAAC,EAGhB,GAFAA,EAAOC,EAAMkB,YAAcnD,GAAGowF,GAAQc,aAElCx1E,EAAIvgB,GAAI,CAE8B,GAAnC6G,EAAOC,EAAMkB,YAAYX,SAC1BR,EAAOC,EAAMkB,YAAc,IAE9B,UACSlB,EAAMX,OAAO+C,QAAQouE,OAAO/2D,EAAIvgB,GAAI6G,GAGtChF,GAAQA,EAAKuwB,YACdvwB,EAAKuwB,WAAW7R,EAAIvgB,GAAI6G,EAW9B,CATE,MAAOwC,GACN5F,EAAK4oF,UAAU9pE,IAAI,iBACnB9e,EAAK4oF,UAAU9pE,IAAI,sBAEnBphB,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QAAS,4BACTmO,IAAKA,EACL1Z,OAAQA,GAEd,CACH,KAAO,CACJ,MAAMuoB,EAAU,CAAC,EACjBA,EAAQtoB,EAAMkB,YAAcnD,GAAGowF,GAAQc,aAEvCjvF,EAAMf,SAASlB,GAAGqwF,EAAgBtzF,GAAG5B,IAAKovB,EAC7C,CACH,MAIRtpB,KAAKrC,EAAM,CACTyK,GAAI,KAGN,CACV,CAEA6mF,SAASlJ,EAAStrE,GACf,MAAMzZ,EAAQ3F,KAId,IAHA0qF,EAAUA,EAAQjW,cAAc,sBACJogB,aACRnK,EAAQkH,cAAcY,aACV,EAAG,CAChC,IAAIhhE,EAAQ,EAKZ,GAHGA,EADCpS,EAAIzZ,EAAMkB,aAAeuY,EAAIzZ,EAAMkB,YAAYX,OACxCkZ,EAAIzZ,EAAMkB,YAAYX,OACpB,EAETsrB,EAAQ,EAAG,CACZ,MAAMihE,EAAQ/H,EAAQjW,cACnB,iCAEH,GAAa,MAATge,EACDA,EAAM9jD,UAAYnd,MACd,CACJ,MAAMkhE,EAASjkD,SAASC,cAAc,KACtCgkD,EAAOpG,KAAO,sBACdoG,EAAOv5E,iBAAiB,SAAS,SAAUqX,GAIxCA,EAAM6+D,iBACT,IACA,MAAM/sF,EAAOmsC,SAASC,cAAc,QAC9BikD,EAAWlkD,SAASmkD,eAAephE,GACzClvB,EAAK4oF,UAAU9pE,IAAI,cAAe,oBAClC9e,EAAKuwF,YAAYF,GACjBD,EAAOG,YAAYvwF,GACnBooF,EAAQmI,YAAYH,EACvB,CACH,CACH,CACH,CAWA7vB,gBACG,OAAO/iE,MAAM+iE,cAAc,WAC9B,CAEAjD,kBACG,MAAMmmB,EAAyBjmF,MAAM8/D,kBAQrC,OANAmmB,EAAuB/3C,OAAS,KACtB,CACJ5pC,IAAK,eAIJ2hF,CACV,CAEAj6E,SAASkC,EAAMigB,GACZ,IAAIvoB,EAAS,CAAC,EAEd,OADAA,EAASsI,EAAKkmF,YACPxuF,CACV,CAEAd,SAASoJ,EAAMigB,GACZ,IAAKjgB,EAAM,OAAO,EAElB,MAAM2H,EAAMsY,EAAQjuB,KAAK6G,aAAe,GAExCmH,EAAK8mF,UAAUn/E,GAEf,MAAM6+E,EAAMxmF,EAAKT,MAAMknE,cAAc,qBAErC,IAAK+f,EAAK,OAAO,EAGjBx0F,KAAK43E,cAAcjiE,EAAK3V,KAAKJ,IAAK40F,EAAK,CACpC/qC,UAAU,EACV2pC,QAAQ,IAGX9+E,YAAW,WACR,IAAIxT,EAAS,GACT0zF,EAAIK,aAAe,KACpB/zF,EAAS0zF,EAAIK,cAEhB7mF,EAAKhM,OAAOlB,OAASA,EAAS,EAC9BkN,EAAKpN,QACR,GAAG,IACN,oBC1cH,MAAMulF,EAAqB,EAAQ,OAC7B4O,EAAkB,EAAQ,OAEhCx1F,EAAOC,QAAU,cAA0Bu1F,EACxCp1F,YAAY+F,EAAQV,EAAQm3C,GACzBr8C,MAAM4F,EAAQV,EAAQm3C,EACzB,CAMAj3C,aAEG,GAAe,MAAXlF,KAAKnB,GAAY,CAClB,MAAMm2F,EAAWh1F,KAAK8B,GAAGo5B,aACnB+5D,EAAWF,EAAgB5wF,WAEjCnE,KAAKmG,SAASO,WAAasuF,EAASn2F,GACpCmB,KAAKmG,SAASgB,WAAa,EAEvBnH,KAAKmG,SAAS08C,YACf7iD,KAAKmG,SAASkB,YAAc4tF,EAASzrC,kBACrCxpD,KAAKmG,SAASa,SAAW,OACzBhH,KAAKmG,SAASc,YAAc,OAC5BjH,KAAKmG,SAASM,SAAW,IAEzBzG,KAAKmG,SAASiB,WAAa6tF,EAASzrC,kBACpCxpD,KAAKmG,SAASa,SAAW,MACzBhH,KAAKmG,SAASc,YAAc,OAC5BjH,KAAKmG,SAASM,SAAW,GAQ5B,MAAMlB,EAAUyvF,EAAS/uF,SAAS,CAC/B7B,IAAK+hF,EAAmBhiF,WAAWC,IACnCyC,WAAY,GAAG7G,KAAKgF,OAAOkC,QAAQlH,KAAKmB,QACxCA,MAAOnB,KAAKgF,OAAO7D,MACnBgF,SAAU,CACPC,SAAUpG,KAAKmG,SAASC,SACxBM,WAAY1G,KAAKgF,OAAOnG,GACxBmI,SAAUhH,KAAKmG,SAASc,YACxBA,YAAajH,KAAKmG,SAASa,SAC3BG,WAAYnH,KAAKmG,SAASgB,WAC1BC,WAAYpH,KAAKmG,SAASiB,WAC1BC,YAAarH,KAAKmG,SAASkB,YAC3BZ,SAAU,KAgBhB,IAAIsZ,QAAe/f,KAAKwU,eAAe7M,OACvC3H,KAAKnB,GAAKkhB,EAAOlhB,GAEjB0G,EAAQY,SAAS6B,WAAahI,KAAKnB,GACnC,IAAIq2F,QAAmB3vF,EAAQiP,eAAe7M,OAgB9C,OAfApC,EAAQ1G,GAAKq2F,EAAWr2F,GAExBmB,KAAKmG,SAAS6B,WAAazC,EAAQ1G,SAC7BmB,KAAKwU,eAAe7M,aAGpB3H,KAAKgF,OAAOugC,SAASvlC,YAErBg1F,EAASzvD,SAAShgC,SAGlBvF,KAAKiI,sBAEL1C,EAAQ0C,gBAEPjI,IACV,CACG,OAAOF,MAAM6H,MAEnB,CAIAuvE,aAAah1E,GAGV,OADAA,EAAUlC,KAAKm1F,kBAAkBjzF,GAC1BpC,MAAMo3E,aAAah1E,EAC7B,CAiBAizF,kBAAkBjzF,GAkBf,OAjBAA,EAAUA,GAAW,CAAC,GACdunD,SACqB,MAA1BzpD,KAAKmG,SAASsjD,UAAmBzpD,KAAKmG,SAASsjD,SAElDvnD,EAAQ6uF,cAC2B,MAAhC/wF,KAAKmG,SAASyjD,iBACR5pD,KAAKmG,SAASyjD,eAGvB1nD,EAAQ4uF,eAAkBt/C,GAClBxxC,KAAKmG,SAASwjD,mBAEfnY,EAAI9gC,SACE,mBAAmB8gC,EAAI9gC,4GACrB,oDAJkC,GAO1CxO,CACV,CAQAwkC,aAAahhC,GACN1F,KAAKmG,SAASujD,gBACX1pD,KAAKmG,SAAS08C,WACfn9C,EAAO1F,KAAK6G,YAAc,CACvB,CACGhI,GAAImB,KAAK8B,GAAG2Q,QAAQlC,WACpBtC,KAAMjO,KAAK8B,GAAG2Q,QAAQlC,aAI5B7K,EAAO1F,KAAK6G,YAAc7G,KAAK8B,GAAG2Q,QAAQlC,WAGnD,CAEAzE,SAASkC,GACN,IAAI2H,EAAM7V,MAAMgM,SAASkC,GAczB,OAZI2H,IACiB,iBAAPA,EACRA,EAAMA,EAAI9C,QAAQ,mBAAoB7S,KAAK8B,GAAG2Q,QAAQlC,YAChDvD,MAAMC,QAAQ0I,KACpBA,EAAMA,EAAIjX,KAAKuU,IACXA,EAAE1C,UAAY0C,EAAEzD,MAAQyD,EAAEpU,IAAMoU,IAAIJ,QAClC,mBACA7S,KAAK8B,GAAG2Q,QAAQlC,gBAKrBoF,CACV,CAEA/Q,SAASoJ,EAAMigB,GACZ,IAAItY,EAAMsY,EAAQjuB,KAAK6G,YAEZ,mBAAP8O,IAA0BA,EAAM3V,KAAK8B,GAAG2Q,QAAQlC,YAEpD0d,EAAQjuB,KAAK6G,YAAc8O,EAE3B7V,MAAM8E,SAASoJ,EAAMigB,EACxB,CAEAksC,WACG,OAAOn6D,KAAK8B,GAAG2Q,QAAQjC,WAAW9R,KAAKugF,IACpC,MAAMtxE,EAAS,CACZ9O,GAAIogF,EAAE1uE,SACN+pD,MAAO2kB,EAAEvuE,UASZ,OANI1Q,KAAKmG,SAAS08C,WACfl1C,EAAOM,KAAOgxE,EAAE1uE,SAEhB5C,EAAOjL,MAAQu8E,EAAE1uE,SAGb5C,CAAM,GAEnB,oBClMH,IAAIynF,EAAoB,EAAQ,OAEhC71F,EAAOC,QAAU,cAA4B41F,EAS1CC,6BAA6Bx2F,GAC1B,IAAIy2F,EAAgBt1F,KAAKwnB,QAAQ4kB,oBAAoBvtC,GACjDy2F,IAGIt1F,KAAKkqD,SAAWorC,EAAcprC,SACf,CACd,UACA,UACA,OACA,aACA,WAEQlmD,SAASge,IACjB,IAAIuzE,EAAOv1F,KAAKgiB,GAChBhiB,KAAKgiB,GAAKszE,EAActzE,GACxBszE,EAActzE,GAAKuzE,CAAI,GAInC,CAOAn5D,YAAYJ,GACTh8B,KAAK8qC,UAAY9O,EAAQn9B,IAAMmB,KAAK8qC,UAIhC9O,EAAQw5D,UAAYx5D,EAAQw5D,SAAStvF,OAAS,EAC3C81B,EAAQtnB,QAAiC,oBAAvBsnB,EAAQtnB,OAAO/S,MAClC3B,KAAKq1F,6BAA6Br5D,EAAQtnB,OAAO7V,IAKjDm9B,EAAQtnB,QACRsnB,EAAQtnB,OAAO8gF,UACfx5D,EAAQtnB,OAAO8gF,SAAStvF,OAAS,GAEjC81B,EAAQtnB,OAAO8gF,SAASxxF,SAASyxF,IAC9B,GAAkB,aAAdA,EAAM9zF,MAGJ8zF,EAAM5pD,eAAe6pD,OACrBD,EAAM5pD,eAAe6pD,MAAMxvF,OAAS,GAGvBuvF,EAAM5pD,eAAe6pD,MAAM1oE,MAAM/Y,GACpCA,EAAEpV,IAAMmB,KAAK8qC,YAEX,CACT9qC,KAAKq1F,6BAA6Br5D,EAAQtnB,OAAO7V,IAGjD,IAAI82F,EAAW31F,KAAKwnB,QAAQ4kB,oBACzBqpD,EAAM52F,IAEL82F,GACDA,EAASC,QAAQ51F,KAEvB,CAEN,IAKTA,KAAKoC,SAAS45B,EACjB,CAQA55B,SAASyzF,GAuCHA,EAAWhqD,eAAe3kC,MACQ,IAAlC2uF,EAAWhqD,eAAe3kC,OAE1BlH,KAAKmB,MAAQ00F,EAAWhqD,eAAe3kC,KAI7C,oBCxIH,IAAI4uF,EAA2B,EAAQ,OAIvCv2F,EAAOC,QAAU,cAAmCs2F,EAcjD15D,YAAYJ,GACTh8B,KAAK8qC,UAAY9O,EAAQn9B,IAAMmB,KAAK8qC,UACpC9qC,KAAKoC,SAAS45B,EACjB,CAQA55B,SAASyzF,GA6CN,GANGA,EAAWhqD,eAAe3kC,MACQ,IAAlC2uF,EAAWhqD,eAAe3kC,OAE1BlH,KAAKmB,MAAQ00F,EAAWhqD,eAAe3kC,MAGtC2uF,EAAWL,SAAU,CACtB,IAAIvrC,EAAU,GACd4rC,EAAWL,SAASxxF,SAASV,IACZ,aAAVA,EAAE3B,MACHsoD,EAAQ5lD,KAAKf,EAAEzE,GAClB,IAEHmB,KAAKiqD,QAAUA,CAClB,CACH,CAQA8rC,oBACG,MAAO,CACJ,CACGl3F,GAAImB,KAAK8qC,UACTnpB,IAAK,CACFza,KAAMlH,KAAKkH,OAIvB,oBC3GH,MAAM8uF,EAAuB,EAAQ,OAErCz2F,EAAOC,QAAU,cAA+Bw2F,EAY7CzhF,UASG,OAAOzU,MAAMyU,UAAUJ,MAAK,IAClBnU,KAAKwnB,QAAQ6kB,cAAcrsC,OAExC,CAEAsF,UA4BG,OAAO,CACV,CAMA2wF,SAASh8D,EAAM9f,GACP8f,EAMDA,EAAKy7D,OAASz7D,EAAKy7D,MAAMxvF,OAAS,EACnCiU,EAAG,KAAM8f,EAAKy7D,MAAM,IACE,oBAAdz7D,EAAKqxB,MAEbnxC,EAAG,KAAM8f,IAGTA,EAAOA,EAAK/M,QACZltB,KAAKi2F,SAASh8D,EAAM9f,IAbpBA,EAAG,KAAM,KAef,CAEAy7E,QAAQM,GACLl2F,KAAKwrD,cAAgB0qC,EAAKprD,SAC7B,CAOA1O,YAAYJ,GACTh8B,KAAK8qC,UAAY9O,EAAQn9B,IAAMmB,KAAK8qC,UACpC9qC,KAAKoC,SAAS45B,EACjB,CAQA55B,SAASyzF,GA8CHA,EAAWhqD,eAAe3kC,MACQ,IAAlC2uF,EAAWhqD,eAAe3kC,OAE1BlH,KAAKmB,MAAQ00F,EAAWhqD,eAAe3kC,MAI1C,IAAIivF,EAAUN,EAAWhqD,eACzB7rC,KAAKi2F,SAASE,GAAS,CAACjuF,EAAKsP,KACtBA,EACDxX,KAAKwrD,cAAgBh0C,EAAI3Y,GAItBg3F,EAAWnhF,QACe,oBAA1BmhF,EAAWnhF,OAAO/S,KAElB3B,KAAKwrD,cAAgBqqC,EAAWnhF,OAAO7V,GAEvCmB,KAAKwrD,cAAgB,IAE3B,GAEN,CAQAuqC,oBACG,MAAMxmB,EAAWvvE,KAAKuvE,WACtB,MAAO,CACJ,CACG1wE,GAAImB,KAAK8qC,UACTnpB,IAAK,CACFza,KAAMlH,KAAKkH,MAEdqB,KAAMgnE,EAASrpE,OAASqpE,EAAW,MAG5C,CAQA6mB,eAAev3F,GACZ,IAAI4B,EAAK,CACN5B,GAAIA,EACJ6B,KAAM,QACNS,MAAO,iDAGVqC,MAAM/C,GAAGA,EAAIiD,GAAG7E,IAEhB6E,GAAG7E,GAAI8F,MACV,CAQA0xF,gBAAgBx3F,GAAK,CAOrBy3F,SAASz3F,GACN,GAAI6E,GAAG7E,GACJ,OAAO6E,GAAG7E,GAAIiN,UAEpB,CAUAyqF,SAASd,EAAOe,GAEbx2F,KAAKwnB,QAAQ6kB,cAAcrsC,MAG3BA,KAAKwnB,QAAQ0kB,WAAWupD,GAGxBA,EAAMW,eAAeI,GAErBx2F,KAAKoP,KAAK,WAAYqmF,EACzB,CASAvmB,eACGpvE,MAAMovE,eACNlvE,KAAKsqC,iBAIAtqC,KAAK8rD,aACuB9rD,KAAKwnB,QAAQgkB,oBACxCxrC,KAAK8qC,WAEkB5kC,OAAS,GAChClG,KAAKs0D,eAAe,0CAG7B,CAMAA,eAAer1C,EAAKtV,EAAO,CAAC,GACzB,IAAIsH,EAAU,GAAGjR,KAAKmE,SAASC,OAC5BpE,KAAKmB,MAAQnB,KAAKmB,MAAQnB,KAAKkH,UAC5B+X,IACNjf,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAClC,oBC1RH,MAAM8sF,EAAmB,EAAQ,OAEjCl3F,EAAOC,QAAU,cAA2Bi3F,qBCF5C,MAAMC,EAAgC,EAAQ,MAI9Cn3F,EAAOC,QAAU,cAAwC,EAatDu2F,oBAEG,IAAIY,EAAa72F,MAAMi2F,oBAuBvB,OAX4B/1F,KAAKwnB,QAAQgkB,oBACtCxrC,KAAK8qC,WAEc9mC,SAASipC,IAC5B0pD,EAAWtyF,KAAK,CACbxF,GAAIouC,EAAKpuC,GACT8iB,IAAK,CACFza,KAAMlH,KAAKixC,WAAWhE,EAAKpuC,KAAKsC,OAAS,KAE7C,IAEEw1F,CACV,CAEAznB,eACGpvE,MAAMovE,eAGN,MAAM0nB,EAAwB52F,KAAKwnB,QAAQgkB,oBACxCxrC,KAAK8qC,WAEJ8rD,EAAsB1wF,OAAS,GAChClG,KAAKs0D,eAAe,6CAKvB,IAAIuiC,EAAiB,EACrBD,EAAsB5yF,SAASV,IACmC,IAA1DtD,KAAKixC,WAAW3tC,EAAEzE,KAAK4pF,YAAYpnE,OAAOnb,QAAU,IACtD2wF,GACH,IAGCA,EAAiB,GAClB72F,KAAKs0D,eACF,qDAGT,oBCpEH,MAAMwiC,EAAyB,EAAQ,OAEvCv3F,EAAOC,QAAU,cAAiCs3F,EAK/C5nB,eACGpvE,MAAMovE,eAIDlvE,KAAKmuD,SACPnuD,KAAKs0D,eAAe,wBAGlBt0D,KAAKiR,SACPjR,KAAKs0D,eAAe,wBAGvBt0D,KAAK+2F,cAAc,MACnB/2F,KAAK+2F,cAAc,QACnB/2F,KAAKg3F,eAAe,MACH,KAAbh3F,KAAKyrC,OACSzrC,KAAKgsD,UAEjBhsD,KAAKs0D,eACF,4DAITt0D,KAAKi3F,kBAAkB,KAAM,WAC7Bj3F,KAAKi3F,kBAAkB,OAAQ,YAClC,CAQAF,cAAc3yF,GACM,IAAbpE,KAAKoE,IACNpE,KAAKs0D,eAAe,oBAAoBlwD,cAE9C,CAUA4yF,eAAe5yF,GACZ,GAAkB,MAAdpE,KAAKoE,GAAc,CAIpB,IAAI8nD,EAAYlsD,KAAKwnB,QAAQglB,mBAAmBxsC,MAC5Ck3F,GAAoB,EACxBhrC,EAAUloD,SAAS+7B,IACLA,EAAEisB,WAEVkrC,GAAoB,EACvB,IAEEA,GAAyC,GAApBhrC,EAAUhmD,QACjClG,KAAKs0D,eACF,8CAA8ClwD,YAGvD,CACH,CAWA6yF,kBAAkB7yF,EAAK+yF,GACH,KAAbn3F,KAAKoE,IACFpE,KAAKm3F,KACFn3F,KAAKm3F,GAAQxxE,SACkB,GAA5B3lB,KAAKm3F,GAAQvxE,KAAK1f,QACnBlG,KAAKs0D,eAAe,oBAAoBlwD,oBAG1CpE,KAAKm3F,GAAQhtC,YACqB,GAA/BnqD,KAAKm3F,GAAQ/sC,QAAQlkD,QACtBlG,KAAKs0D,eACF,oBAAoBlwD,uBAUtC,mBC5GH,MAAMgzF,EAA2B,EAAQ,OAEzC73F,EAAOC,QAAU,cAAmC43F,qBCFpD,MAAMC,EAAgC,EAAQ,OAE9C,IAAIt3F,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAAwC,EAOtD83F,YAAYz4F,GACT,MAAO,CACJqI,KAAM,GAAGrI,SACT04F,kBAAmB,GAAG14F,sBACtB24F,YAAa,GAAG34F,gBAChB44F,kBAAmB,GAAG54F,sBACtB64F,0BAA2B,GAAG74F,8BAC9B84F,SAAU,GAAG94F,aACb+4F,eAAgB,GAAG/4F,mBACnBg5F,UAAW,GAAGh5F,cACdi5F,cAAe,GAAGj5F,kBAClBk5F,sBAAuB,GAAGl5F,0BAC1Bm5F,SAAU,GAAGn5F,aACbo5F,uBAAwB,GAAGp5F,2BAC3Bq5F,eAAgB,GAAGr5F,mBACnBs5F,UAAW,GAAGt5F,cACdu5F,eAAgB,GAAGv5F,mBAEzB,CAQAu3F,eAAev3F,GACZ,IAAIqB,EAAMF,KAAKs3F,YAAYz4F,GAEvBw5F,EAAgB,CAAC,CAAEx5F,GAAI,EAAG6D,MAAO3C,EAAE,6BACfC,KAAKwnB,QAAQulB,kBAAkB/sC,OACjC,IAAIgE,SAASob,IAChCi5E,EAAch0F,KAAK,CAAExF,GAAIugB,EAAIhb,IAAK1B,MAAO0c,EAAIje,OAAQ,IAGxD,IAAIm3F,EAAat4F,KAAK8B,GAAGwkB,UAAU5nB,KAAKM,IAC9B,CAAEH,GAAIG,EAAEH,GAAI6D,MAAO1D,EAAEmC,OAASnC,EAAEkI,KAAMlC,OAAQhG,MAExDs5F,EAAWllE,QAAQ,CAChBv0B,GAAI,EACJ6D,MAAO3C,EAAE,sBAOZ,IAAIw4F,EAAa,CACd15F,GAAI,EACJ6D,MAAO3C,EAAE,mBAIZ,SAASy4F,EAAc1vD,GAGpB,IAAIhiC,EAAS,CAACyxF,GACd,GAAIzvD,EAAO,CACR,IAAI1uB,EAAQk+E,EAAWtrE,MAAMhuB,GAAMA,EAAEH,IAAMiqC,IACvC1uB,GAASA,EAAMpV,QAChBoV,EAAMpV,OAAO8B,SAAS9C,SAAS+C,IAC5BD,EAAOzC,KAAK,CAAExF,GAAIkI,EAAElI,GAAI6D,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG5D,CACA,OAAOD,CACV,CAEA,SAAS2xF,EAAaC,EAAcC,EAAajyD,GAG9CgyD,EAAa10F,SAAS40F,IACnB,IAAIC,EAASn1F,GAAGk1F,GACZC,IACDA,EAAOr0F,OAAO,UAAWm0F,GAMzBE,EAAOp0F,UACPo0F,EAAOl0F,OACV,GAEN,CAEA,IAAIm0F,EAAcN,EAAcx4F,KAAKw3F,aAGjCuB,EAAoB,CACrB74F,EAAIu3F,kBACJv3F,EAAIw3F,2BAKHsB,EAAWR,EAAcx4F,KAAK23F,UAG9BsB,EAAiB,CAClB/4F,EAAI03F,eACJ13F,EAAI23F,UACJ33F,EAAI43F,eAKP,SAASoB,EAAoBC,GAC1B,IAAIzzF,EAAS,CAAC,CAAE7G,GAAI,EAAG6D,MAAO3C,EAAE,+BAMhC,OALIo5F,GAAeA,EAAYj3F,SAC5Bi3F,EAAYj3F,UAAU8B,SAAShF,IAC5B0G,EAAOrB,KAAK,CAAExF,GAAIG,EAAEH,GAAI6D,MAAO1D,EAAEiP,MAAO,IAGvCvI,CACV,CAaA,SAAS0zF,EAAiB3Y,GAEvB,IAbiC/6E,EAC7B2zF,EAYAC,EAAY51F,GAAGxD,EAAIy3F,UAAU7rF,WAC7BytF,EAAUjB,EAAWtrE,MAAMhuB,GAAMA,EAAEH,IAAMy6F,IAC7C,GAAIC,GAAWA,EAAQv0F,OAAQ,CAC5B,IAAIm0F,EAAcI,EAAQv0F,OAAO4I,UAAU6yE,GACvC0Y,GAAeA,EAAYj3F,UAjBDwD,EAmB3B8zF,EAAsBN,EAAoBC,IAlB5CE,EAAc31F,GAAGxD,EAAI63F,0BAGtBsB,EAAY70F,OAAO,UAAWkB,GAC9B2zF,EAAY50F,UAEZ40F,EAAY10F,QAgBf,CACH,CAEA,IAAI60F,EAAsBN,IAItBO,EAAWjB,EAAcx4F,KAAKg4F,UAG9B0B,EAAiB,CAClBx5F,EAAI+3F,uBACJ/3F,EAAIg4F,eACJh4F,EAAIi4F,UACJj4F,EAAIk4F,gBAKH33F,EAAK,CACN5B,GAAIA,EACJ6B,KAAM,OACNsI,SAAU,CACP,CACGnK,GAAIqB,EAAIgH,KACRxG,KAAM,OACNS,MAAOpB,EAAE,QACTmH,KAAM,OACNxE,MAAO1C,KAAKkH,MAEf,CACGrI,GAAIqB,EAAIq3F,kBACR72F,KAAM,SACNS,MAAOpB,EAAE,uBACT2C,MAAO1C,KAAKu3F,kBACZrwF,KAAM,oBACNhF,QAASm2F,GAEZ,CACGx5F,GAAIqB,EAAIs3F,YACR92F,KAAM,SACNS,MAAOpB,EAAE,gBACT2C,MAAO1C,KAAKw3F,YACZtwF,KAAM,cACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAASq+E,EAAQC,GACVD,GAAUC,IAEXoY,EAAcN,EAAc/X,GAE5BgY,EAAaM,EAAmBD,GAEtC,IAGN,CACGj6F,GAAIqB,EAAIu3F,kBACR/2F,KAAM,SACNS,MAAOpB,EAAE,eACT2C,MAAO1C,KAAKy3F,kBACZvwF,KAAM,oBACNhF,QAAS42F,EACTxc,QAAQ,GAEX,CACGz9E,GAAIqB,EAAIw3F,0BACRh3F,KAAM,SACNS,MAAOpB,EAAE,0BACT2C,MAAO1C,KAAK03F,0BACZxwF,KAAM,4BACNhF,QAAS42F,EACTxc,QAAQ,GAEX,CACGz9E,GAAIqB,EAAIy3F,SACRj3F,KAAM,SACNS,MAAOpB,EAAE,wBACT2C,MAAO1C,KAAK23F,SACZzwF,KAAM,WACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAASq+E,EAAQC,GACVD,GAAUC,IAEXsY,EAAWR,EAAc/X,GAEzBgY,EAAaQ,EAAgBD,GAEnC,IAGN,CACGn6F,GAAIqB,EAAI03F,eACRl3F,KAAM,SACNS,MAAOpB,EAAE,eACT2C,MAAO1C,KAAK43F,eACZ1wF,KAAM,iBACNhF,QAAS82F,EACT1c,QAAQ,GAEX,CACGz9E,GAAIqB,EAAI23F,UACRn3F,KAAM,SACNS,MAAOpB,EAAE,UACT2C,MAAO1C,KAAK63F,UACZ3wF,KAAM,YACNhF,QAAS82F,EACT1c,QAAQ,GAEX,CACGz9E,GAAIqB,EAAI43F,cACRp3F,KAAM,SACNS,MAAOpB,EAAE,cACT2C,MAAO1C,KAAK83F,cACZ5wF,KAAM,gBACNhF,QAAS82F,EACT1c,QAAQ,EACRn6E,GAAI,CACDC,SAASq+E,EAAQC,GACVD,GAAUC,GACX0Y,EAAiB3Y,EAEvB,IAGN,CACG5hF,GAAIqB,EAAI63F,sBACRr3F,KAAM,SACNS,MAAOpB,EAAE,wBACT2C,MAAO1C,KAAK+3F,sBACZ7wF,KAAM,wBACNhF,QAASs3F,EACTld,QAAQ,GAEX,CACGz9E,GAAIqB,EAAI83F,SACRt3F,KAAM,SACNS,MAAOpB,EAAE,kBACT2C,MAAO1C,KAAKg4F,SACZ9wF,KAAM,WACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAASq+E,EAAQC,GACVD,GAAUC,IAEX+Y,EAAWjB,EAAc/X,GAEzBgY,EAAaiB,EAAgBD,GAEnC,IAGN,CACG56F,GAAIqB,EAAI+3F,uBACRv3F,KAAM,SACNS,MAAOpB,EAAE,UACT2C,MAAO1C,KAAKi4F,uBACZ/wF,KAAM,yBACNhF,QAASu3F,EACTnd,QAAQ,GAEX,CACGz9E,GAAIqB,EAAIg4F,eACRx3F,KAAM,SACNS,MAAOpB,EAAE,eACT2C,MAAO1C,KAAKk4F,eACZhxF,KAAM,iBACNhF,QAASu3F,EACTnd,QAAQ,GAEX,CACGz9E,GAAIqB,EAAIi4F,UACRz3F,KAAM,SACNS,MAAOpB,EAAE,UACT2C,MAAO1C,KAAKm4F,UACZjxF,KAAM,YACNhF,QAASu3F,EACTnd,QAAQ,GAEX,CACGz9E,GAAIqB,EAAIk4F,eACR13F,KAAM,SACNS,MAAOpB,EAAE,eACT2C,MAAO1C,KAAKo4F,eACZlxF,KAAM,iBACNhF,QAASu3F,EACTnd,QAAQ,KAKjB94E,MAAM/C,GAAGA,EAAIiD,GAAG7E,IAIZmB,KAAKw3F,aAAmC,GAApBx3F,KAAKw3F,aAC1BiB,EAAaM,EAAmBD,GAG/B94F,KAAK23F,UAA6B,GAAjB33F,KAAK23F,UACvBc,EAAaQ,EAAgBD,GAG5Bh5F,KAAK83F,eACNsB,EAAiBp5F,KAAK83F,eAGrB93F,KAAKg4F,UAA6B,GAAjBh4F,KAAKg4F,UACvBS,EAAaiB,EAAgBD,GAGhC/1F,GAAG7E,GAAI8F,MACV,CAQA0xF,gBAAgBx3F,GACb,IAAIqB,EAAMF,KAAKs3F,YAAYz4F,GAC3BmB,KAAKkH,KAAOlH,KAAKs2F,SAASp2F,EAAIgH,MAE9BlH,KAAKmE,SAASgC,SAASnC,SAASyI,IAC7BzM,KAAKyM,GAAKzM,KAAKs2F,SAASp2F,EAAIuM,GAAG,GAErC,oBC3XH,MAAMktF,EAAwB,EAAQ,OAEtC,IAAI55F,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAAgCm6F,EAK9CrC,YAAYz4F,GACT,MAAO,CACJqI,KAAM,GAAGrI,SACT+6F,eAAgB,GAAG/6F,mBACnBg7F,SAAU,GAAGh7F,aACbi7F,SAAU,GAAGj7F,aACbk7F,UAAW,GAAGl7F,cACdm7F,aAAc,GAAGn7F,iBACjBo7F,YAAa,GAAGp7F,gBAChBq7F,cAAe,GAAGr7F,kBAClBs7F,cAAe,GAAGt7F,kBAClBu7F,gBAAiB,GAAGv7F,oBACpBw7F,eAAgB,GAAGx7F,mBACnBy7F,eAAgB,GAAGz7F,mBACnB07F,UAAW,GAAG17F,cACd27F,aAAc,GAAG37F,gBACjB47F,cAAe,GAAG57F,kBAClB67F,aAAc,GAAG77F,iBACjB87F,cAAe,GAAG97F,kBAClB+7F,gBAAiB,GAAG/7F,oBACpBg8F,oBAAqB,GAAGh8F,wBACxBi8F,eAAgB,GAAGj8F,mBACnBk8F,eAAgB,GAAGl8F,mBAEzB,CAQAu3F,eAAev3F,GACZ,IAAIqB,EAAMF,KAAKs3F,YAAYz4F,GAEvBw5F,EAAgB,CAAC,CAAEx5F,GAAI,EAAG6D,MAAO3C,EAAE,6BACfC,KAAKwnB,QAAQulB,kBAAkB/sC,OACjC,IAAIgE,SAASob,IAChCi5E,EAAch0F,KAAK,CAAExF,GAAIugB,EAAIhb,IAAK1B,MAAO0c,EAAIje,OAAQ,IAGxD,IAAIm3F,EAAat4F,KAAK8B,GAAGwkB,UAAU5nB,KAAKM,IAC9B,CAAEH,GAAIG,EAAEH,GAAI6D,MAAO1D,EAAEmC,OAASnC,EAAEkI,KAAMlC,OAAQhG,MAExDs5F,EAAWllE,QAAQ,CAChBv0B,GAAI,EACJ6D,MAAO3C,EAAE,sBAGZ,IAAIi7F,EAAmBlyD,IACpB,IAAIhiC,EAAS,CACV,CACGjI,GAAI,EACJ6D,MAAO3C,EAAE,oBAIf,GAAI+oC,EAAO,CACR,IAAI1uB,EAAQk+E,EAAWtrE,MAAMhuB,GAAMA,EAAEH,IAAMiqC,IACvC1uB,GAASA,EAAMpV,QAChBoV,EAAMpV,OAAO8B,SAAS9C,SAAS+C,IAC5BD,EAAOzC,KAAK,CAAExF,GAAIkI,EAAElI,GAAI6D,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG5D,CACA,OAAOD,CAAM,EAGZm0F,EAAyBC,IAC1B,IAAIvtF,EAAS,GACTwtF,EAAWn7F,KAAK8B,GAAG2V,WAAWzX,KAAK65F,UACvC,IAAKsB,EAAU,OAAOxtF,EAEtB,IAAIytF,EAAgBD,EAASvtF,UAAUstF,GACvC,OACIE,GACAA,EAAcj1F,UACdi1F,EAAcj1F,SAASjE,SAI3ByL,GAAUytF,EAAcj1F,SAASjE,SAAW,IAAIxD,KAAK8yC,IAC3C,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,SAIVN,GATGA,CASG,EAgDZ0tF,EAAiB,CAAC3jF,EAAUnN,KAC7B,IAAIoD,EAAS,GACT3I,EAAShF,KAAK8B,GAAG2V,WAAWC,GAChC,IAAK1S,EAAQ,OAAO2I,EAEpB,IAAIytF,EAAgBp2F,EAAO4I,UAAUrD,GACrC,OACI6wF,GACAA,EAAcj1F,UACdi1F,EAAcj1F,SAASjE,SAI3ByL,GAAUytF,EAAcj1F,SAASjE,SAAW,IAAIxD,KAAK8yC,IAC3C,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,SAIVN,GATGA,CASG,EAGZ2tF,EAAWN,EAAgBh7F,KAAK65F,UAChC0B,EAAWP,EAAgBh7F,KAAK85F,UAChC0B,EAAYR,EAAgBh7F,KAAK+5F,WACjC0B,EAAiBR,EAAsBj7F,KAAKk6F,eAC5CwB,EAAiBL,EAAer7F,KAAK+5F,UAAW/5F,KAAK06F,cAEzD,IAAIj6F,EAAK,CACN5B,GAAIA,EACJ6B,KAAM,OACNi7F,eAAgB,CACb95F,WAAY,KAEfmH,SAAU,CACP,CACGnK,GAAIqB,EAAIgH,KACRxG,KAAM,OACNS,MAAOpB,EAAE,QACTmH,KAAM,OACNxE,MAAO1C,KAAKkH,MAEf,CACGrI,GAAIqB,EAAI05F,eACRl5F,KAAM,SACNS,MAAOpB,EAAE,+BACT2C,MAAO1C,KAAK45F,eACZ1yF,KAAM,iBACNhF,QAASm2F,GAEZ,CACGx5F,GAAIqB,EAAI25F,SACRn5F,KAAM,SACNS,MAAOpB,EAAE,aACT2C,MAAO1C,KAAK65F,SACZ3yF,KAAM,WACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAASq+E,EAAQC,GACVD,GAAUC,IAEX4a,EAAWN,EAAgBva,GA3GxB,CAAC6a,IACnB,CAACp7F,EAAI85F,aAAc95F,EAAI+5F,YAAa/5F,EAAIg6F,eAAel2F,SACnD43F,IACEl4F,GAAGk4F,GAAap3F,OAAO,UAAW82F,GAClC53F,GAAGk4F,GAAan3F,SAAS,GAE9B,EAuGco3F,CAAeP,GAErB,IAGN,CACGz8F,GAAIqB,EAAI45F,SACRp5F,KAAM,SACNS,MAAOpB,EAAE,aACT2C,MAAO1C,KAAK85F,SACZ5yF,KAAM,WACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAASq+E,EAAQC,GACVD,GAAUC,IAEX6a,EAAWP,EAAgBva,GA/GxB,CAAC8a,IACnB,CACGr7F,EAAIm6F,eACJn6F,EAAIo6F,eACJp6F,EAAIq6F,UACJr6F,EAAIs6F,aACJt6F,EAAIu6F,eACLz2F,SAAS43F,IACRl4F,GAAGk4F,GAAap3F,OAAO,UAAW+2F,GAClC73F,GAAGk4F,GAAan3F,SAAS,GAC1B,EAuGaq3F,CAAeP,GAErB,IAGN,CACG18F,GAAIqB,EAAI65F,UACRr5F,KAAM,SACNS,MAAOpB,EAAE,kBACT2C,MAAO1C,KAAK+5F,UACZ7yF,KAAM,YACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAASq+E,EAAQC,GACVD,GAAUC,IACX8a,EAAYR,EAAgBva,GAnHxB,CAAC+a,IACpB93F,GAAGxD,EAAIw6F,cAAcl2F,OAAO,UAAWg3F,GACvC93F,GAAGxD,EAAIw6F,cAAcj2F,SAAS,EAkHfs3F,CAAgBP,GAEtB,IAGN,CACG38F,GAAIqB,EAAI85F,aACRt5F,KAAM,SACNS,MAAOpB,EAAE,eACT2C,MAAO1C,KAAKg6F,aACZ9yF,KAAM,eACNhF,QAASo5F,GAEZ,CACGz8F,GAAIqB,EAAI+5F,YACRv5F,KAAM,SACNS,MAAOpB,EAAE,cACT2C,MAAO1C,KAAKi6F,YACZ/yF,KAAM,cACNhF,QAASo5F,GAEZ,CACGz8F,GAAIqB,EAAIg6F,cACRx5F,KAAM,SACNS,MAAOpB,EAAE,gBACT2C,MAAO1C,KAAKk6F,cACZhzF,KAAM,gBACNhF,QAASo5F,EACTn5F,GAAI,CACDC,SAASq+E,EAAQC,GAnKF,IAACsb,EAoKTvb,GAAUC,IACX+a,EAAiBR,EAAsBxa,GArK7Bub,EAsKWP,EArKpC/3F,GAAGxD,EAAIi6F,eAAe31F,OAAO,UAAWw3F,GACxCt4F,GAAGxD,EAAIi6F,eAAe11F,UAsKb,IAGN,CACG5F,GAAIqB,EAAIi6F,cACRz5F,KAAM,SACNS,MAAOpB,EAAE,gBACT2C,MAAO1C,KAAKm6F,cACZjzF,KAAM,gBACNhF,QAASu5F,GAEZ,CACG58F,GAAIqB,EAAIk6F,gBACR15F,KAAM,SACNS,MAAOpB,EAAE,qBACT2C,MAAO1C,KAAKo6F,gBACZlzF,KAAM,kBACNhF,QAASq5F,GAEZ,CACG18F,GAAIqB,EAAIm6F,eACR35F,KAAM,SACNS,MAAOpB,EAAE,oBACT2C,MAAO1C,KAAKq6F,eACZnzF,KAAM,iBACNhF,QAASq5F,GAEZ,CACG18F,GAAIqB,EAAIo6F,eACR55F,KAAM,SACNS,MAAOpB,EAAE,iBACT2C,MAAO1C,KAAKs6F,eACZpzF,KAAM,iBACNhF,QAASq5F,GAEZ,CACG18F,GAAIqB,EAAIq6F,UACR75F,KAAM,SACNS,MAAOpB,EAAE,YACT2C,MAAO1C,KAAKu6F,UACZrzF,KAAM,YACNhF,QAASq5F,GAEZ,CACG18F,GAAIqB,EAAIs6F,aACR95F,KAAM,SACNS,MAAOpB,EAAE,eACT2C,MAAO1C,KAAKw6F,aACZtzF,KAAM,eACNhF,QAASq5F,GAEZ,CACG18F,GAAIqB,EAAIu6F,cACR/5F,KAAM,SACNS,MAAOpB,EAAE,gBACT2C,MAAO1C,KAAKy6F,cACZvzF,KAAM,gBACNhF,QAASq5F,GAEZ,CACG18F,GAAIqB,EAAIw6F,aACRh6F,KAAM,SACNS,MAAOpB,EAAE,eACT2C,MAAO1C,KAAK06F,aACZxzF,KAAM,eACNhF,QAASs5F,EACTr5F,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KACZD,GAAUC,IACXgb,EAAiBL,EACdr7F,KAAK+5F,WAAar2F,GAAGxD,EAAI65F,WAAWjuF,WACpC20E,GAxNM,CAACib,IACzB,CACGx7F,EAAIy6F,cACJz6F,EAAI06F,gBACJ16F,EAAI26F,oBACJ36F,EAAI46F,eACJ56F,EAAI66F,gBACL/2F,SAAS43F,IACRl4F,GAAGk4F,GAAap3F,OAAO,UAAWk3F,GAClCh4F,GAAGk4F,GAAan3F,SAAS,GAC1B,EAgNaw3F,CAAqBP,GACxB,IAIT,CACG78F,GAAIqB,EAAIy6F,cACRj6F,KAAM,SACNS,MAAOpB,EAAE,gBACT2C,MAAO1C,KAAK26F,cACZzzF,KAAM,gBACNhF,QAASw5F,GAEZ,CACG78F,GAAIqB,EAAI06F,gBACRl6F,KAAM,SACNS,MAAOpB,EAAE,kBACT2C,MAAO1C,KAAK46F,gBACZ1zF,KAAM,kBACNhF,QAASw5F,GAEZ,CACG78F,GAAIqB,EAAI26F,oBACRn6F,KAAM,SACNS,MAAOpB,EAAE,sBACT2C,MAAO1C,KAAK66F,oBACZ3zF,KAAM,sBACNhF,QAASw5F,GAEZ,CACG78F,GAAIqB,EAAI46F,eACRp6F,KAAM,SACNS,MAAOpB,EAAE,iBACT2C,MAAO1C,KAAK86F,eACZ5zF,KAAM,iBACNhF,QAASw5F,GAEZ,CACG78F,GAAIqB,EAAI66F,eACRr6F,KAAM,SACNS,MAAOpB,EAAE,iBACT2C,MAAO1C,KAAK+6F,eACZ7zF,KAAM,iBACNhF,QAASw5F,KAKlBl4F,MAAM/C,GAAGA,EAAIiD,GAAG7E,IAEhB6E,GAAG7E,GAAI8F,MACV,CAQA0xF,gBAAgBx3F,GACb,IAAIqB,EAAMF,KAAKs3F,YAAYz4F,GAC3BmB,KAAKkH,KAAOlH,KAAKs2F,SAASp2F,EAAIgH,MAI9BlH,KAAKmE,SAASgC,SAASnC,SAASyI,IAC7BzM,KAAKyM,GAAKzM,KAAKs2F,SAASp2F,EAAIuM,GAAG,GAErC,mBClaH,MAAMyvF,EAA4B,EAAQ,OAE1C,IAAIn8F,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAAoC08F,EAIlD5E,YAAYz4F,GACT,MAAO,CACJqI,KAAM,GAAGrI,SACTs9F,mBAAoB,GAAGt9F,uBACvBu9F,aAAc,GAAGv9F,iBACjBw9F,cAAe,GAAGx9F,kBAClBi7F,SAAU,GAAGj7F,aACby9F,cAAe,GAAGz9F,kBAClB09F,kBAAmB,GAAG19F,sBACtB29F,eAAgB,GAAG39F,mBACnB49F,iBAAkB,GAAG59F,qBACrB69F,eAAgB,GAAG79F,mBACnB89F,kBAAmB,GAAG99F,sBACtB+9F,kBAAmB,GAAG/9F,sBACtBg+F,kBAAmB,GAAGh+F,sBACtBi+F,gBAAiB,GAAGj+F,oBACpBk+F,oBAAqB,GAAGl+F,wBACxBm+F,sBAAuB,GAAGn+F,0BAC1Bo+F,UAAW,GAAGp+F,cACdq+F,eAAgB,GAAGr+F,mBACnB67F,aAAc,GAAG77F,iBACjBs+F,mBAAoB,GAAGt+F,uBACvBu+F,oBAAqB,GAAGv+F,wBACxBw+F,mBAAoB,GAAGx+F,uBAE7B,CAQAu3F,eAAev3F,GACZ,IAAIqB,EAAMF,KAAKs3F,YAAYz4F,GAEvBw5F,EAAgB,CAAC,CAAEx5F,GAAI,EAAG6D,MAAO3C,EAAE,6BACfC,KAAKwnB,QAAQulB,kBAAkB/sC,OACjC,IAAIgE,SAASob,IAChCi5E,EAAch0F,KAAK,CAAExF,GAAIugB,EAAIhb,IAAK1B,MAAO0c,EAAIje,OAAQ,IAGxD,IAAIm3F,EAAat4F,KAAK8B,GAAGwkB,UAAU5nB,KAAKM,IAC9B,CAAEH,GAAIG,EAAEH,GAAI6D,MAAO1D,EAAEmC,OAASnC,EAAEkI,KAAMlC,OAAQhG,MAExDs5F,EAAWllE,QAAQ,CAChBv0B,GAAI,EACJ6D,MAAO3C,EAAE,sBAGZ,IAAIi7F,EAAkB,CAAClyD,EAAOt/B,KAC3B,IAAI1C,EAAS,CACV,CACGjI,GAAI,EACJ6D,MAAO3C,EAAE,oBAIf,GAAI+oC,EAAO,CACR,IAAI1uB,EAAQk+E,EAAWtrE,MAAMhuB,GAAMA,EAAEH,IAAMiqC,IACvC1uB,GAASA,EAAMpV,QAChBoV,EAAMpV,OACF8B,QAAQC,GAAMA,EAAE3C,KAAOoF,IACvBxF,SAAS+C,IACPD,EAAOzC,KAAK,CAAExF,GAAIkI,EAAElI,GAAI6D,MAAOqE,EAAE5F,MAAOwE,MAAOoB,GAAI,GAG/D,CACA,OAAOD,CAAM,EAGZu0F,EAAiB,CAAC3jF,EAAUnN,KAC7B,IAAIoD,EAAS,GACT3I,EAAShF,KAAK8B,GAAG2V,WAAWC,GAChC,IAAK1S,EAAQ,OAAO2I,EAEpB,IAAIytF,EAAgBp2F,EAAO4I,UAAUrD,GACrC,OACI6wF,GACAA,EAAcj1F,UACdi1F,EAAcj1F,SAASjE,SAI3ByL,GAAUytF,EAAcj1F,SAASjE,SAAW,IAAIxD,KAAK8yC,IAC3C,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,SAIVN,GATGA,CASG,EA8DZ2vF,EAAmBtC,EAAgBh7F,KAAKo8F,aAAc,QACtDmB,EAAqBvC,EAAgBh7F,KAAKo8F,aAAc,QACxDoB,EAAsBnC,EACvBr7F,KAAKo8F,aACLp8F,KAAK28F,mBAEJc,EAAoBzC,EAAgBh7F,KAAKq8F,cAAe,QACxDqB,EAAiB1C,EAAgBh7F,KAAK85F,SAAU,UAChD6D,EAAa3C,EAAgBh7F,KAAK85F,SAAU,iBAC5C8D,EAAkB5C,EAAgBh7F,KAAKs8F,cAAe,UACtDuB,EAAgB7C,EAAgBh7F,KAAKs8F,cAAe,QACpDZ,EAAiBL,EAClBr7F,KAAKs8F,cACLt8F,KAAK06F,cAGR,IAAIj6F,EAAK,CACN5B,GAAIA,EACJ6B,KAAM,OACNi7F,eAAgB,CACb95F,WAAY,KAEfmH,SAAU,CACP,CACGnK,GAAIqB,EAAIgH,KACRxG,KAAM,OACNS,MAAOpB,EAAE,QACTmH,KAAM,OACNxE,MAAO1C,KAAKkH,MAEf,CACGrI,GAAIqB,EAAIi8F,mBACRz7F,KAAM,SACNS,MAAOpB,EAAE,oCACT2C,MAAO1C,KAAKm8F,mBACZj1F,KAAM,qBACNhF,QAASm2F,GAEZ,CACGx5F,GAAIqB,EAAIk8F,aACR17F,KAAM,SACNS,MAAOpB,EAAE,kBACT2C,MAAO1C,KAAKo8F,aACZl1F,KAAM,eACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KApFD,IAACod,EAqFZrd,GAAUC,IACX4c,EAAmBtC,EAAgBva,EAAQ,QAtF9Bqd,EAuFWR,EAtFvC,CAACp9F,EAAIu8F,iBAAkBv8F,EAAIw8F,gBAAgB14F,SAAS43F,IACjDl4F,GAAGk4F,GAAap3F,OAAO,UAAWs5F,GAClCp6F,GAAGk4F,GAAan3F,SAAS,IAsFbo5F,EAAgB7C,EAAgBva,EAAQ,QAlF1B,CAAC8c,IAC9B75F,GAAGxD,EAAIy8F,mBAAmBn4F,OAAO,UAAW+4F,GAC5C75F,GAAGxD,EAAIy8F,mBAAmBl4F,SAAS,EAiFpBs5F,CAA0BF,GAC7B,IAIT,CACGh/F,GAAIqB,EAAIm8F,cACR37F,KAAM,SACNS,MAAOpB,EAAE,mBACT2C,MAAO1C,KAAKq8F,cACZn1F,KAAM,gBACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KAtFD,IAACsd,EAuFZvd,GAAUC,IACX+c,EAAoBzC,EAAgBva,EAAQ,QAxF/Bud,EAyFWP,EAxFvC,CAACv9F,EAAI28F,kBAAmB38F,EAAI48F,iBAAiB94F,SAAS43F,IACnDl4F,GAAGk4F,GAAap3F,OAAO,UAAWw5F,GAClCt6F,GAAGk4F,GAAan3F,SAAS,IAuFhB,IAIT,CACG5F,GAAIqB,EAAI45F,SACRp5F,KAAM,SACNS,MAAOpB,EAAE,kBACT2C,MAAO1C,KAAK85F,SACZ5yF,KAAM,WACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KAtFH,IAACud,EATDC,EAgGTzd,GAAUC,IACXgd,EAAiB1C,EAAgBva,EAAQ,UAjG/Byd,EAkGWR,EAjGpC,CAACx9F,EAAI68F,oBAAqB78F,EAAI88F,uBAAuBh5F,SACjD43F,IACEl4F,GAAGk4F,GAAap3F,OAAO,UAAW05F,GAClCx6F,GAAGk4F,GAAan3F,SAAS,IAgGhBk5F,EAAa3C,EAAgBva,EAAQ,iBA3F1Bwd,EA4FWN,EA3FrCj6F,GAAGxD,EAAI+8F,WAAWz4F,OAAO,UAAWy5F,GACpCv6F,GAAGxD,EAAI+8F,WAAWx4F,UA2FN,IAIT,CACG5F,GAAIqB,EAAIo8F,cACR57F,KAAM,SACNS,MAAOpB,EAAE,kBACT2C,MAAO1C,KAAKs8F,cACZp1F,KAAM,gBACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KA1JT,IAAC8a,EA2JJ/a,GAAUC,IACXmd,EAAgB7C,EAAgBva,EAAQ,QA5JnC+a,EA6JWqC,EA5J/Bn6F,GAAGxD,EAAIw6F,cAAcl2F,OAAO,UAAWg3F,GACvC93F,GAAGxD,EAAIw6F,cAAcj2F,UA6JNm5F,EAAkB5C,EAAgBva,EAAQ,UApKhC,CAACmd,IAC1Bl6F,GAAGxD,EAAIg9F,gBAAgB14F,OAAO,UAAWo5F,GACzCl6F,GAAGxD,EAAIg9F,gBAAgBz4F,SAAS,EAmKjB05F,CAAsBP,GACzB,IAIT,CACG/+F,GAAIqB,EAAIq8F,kBACR77F,KAAM,OACNS,MAAOpB,EAAE,sBACT2C,MAAO1C,KAAKu8F,kBACZr1F,KAAM,qBAET,CACGrI,GAAIqB,EAAIs8F,eACR97F,KAAM,OACNS,MAAOpB,EAAE,mBACT2C,MAAO1C,KAAKw8F,eACZt1F,KAAM,kBAET,CACGrI,GAAIqB,EAAIu8F,iBACR/7F,KAAM,SACNS,MAAOpB,EAAE,oBACT2C,MAAO1C,KAAKy8F,iBACZv1F,KAAM,mBACNhF,QAASo7F,GAEZ,CACGz+F,GAAIqB,EAAIw8F,eACRh8F,KAAM,SACNS,MAAOpB,EAAE,kBACT2C,MAAO1C,KAAK08F,eACZx1F,KAAM,iBACNhF,QAASo7F,GAEZ,CACGz+F,GAAIqB,EAAIy8F,kBACRj8F,KAAM,SACNS,MAAOpB,EAAE,qBACT2C,MAAO1C,KAAK28F,kBACZz1F,KAAM,oBACNhF,QAASq7F,EACTp7F,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KACZD,GAAUC,IACX8c,EAAsBnC,EACnBr7F,KAAKo8F,cAAgB14F,GAAGxD,EAAIk8F,cAActwF,WAC1C20E,GAnLW,CAAC+c,IAC9B95F,GAAGxD,EAAI08F,mBAAmBp4F,OAAO,UAAWg5F,GAC5C95F,GAAGxD,EAAI08F,mBAAmBn4F,SAAS,EAmLpB25F,CAA0BZ,GAC7B,IAIT,CACG3+F,GAAIqB,EAAI08F,kBACRl8F,KAAM,SACNS,MAAOpB,EAAE,qBACT2C,MAAO1C,KAAK48F,kBACZ11F,KAAM,oBACNhF,QAASs7F,GAEZ,CACG3+F,GAAIqB,EAAI28F,kBACRn8F,KAAM,SACNS,MAAOpB,EAAE,qBACT2C,MAAO1C,KAAK68F,kBACZ31F,KAAM,oBACNhF,QAASu7F,GAEZ,CACG5+F,GAAIqB,EAAI48F,gBACRp8F,KAAM,SACNS,MAAOpB,EAAE,mBACT2C,MAAO1C,KAAK88F,gBACZ51F,KAAM,kBACNhF,QAASu7F,GAEZ,CACG5+F,GAAIqB,EAAI68F,oBACRr8F,KAAM,SACNS,MAAOpB,EAAE,uBACT2C,MAAO1C,KAAK+8F,oBACZ71F,KAAM,sBACNhF,QAASw7F,GAEZ,CACG7+F,GAAIqB,EAAI88F,sBACRt8F,KAAM,SACNS,MAAOpB,EAAE,yBACT2C,MAAO1C,KAAKg9F,sBACZ91F,KAAM,wBACNhF,QAASw7F,GAEZ,CACG7+F,GAAIqB,EAAI+8F,UACRv8F,KAAM,SACNS,MAAOpB,EAAE,YACT2C,MAAO1C,KAAKi9F,UACZ/1F,KAAM,YACNhF,QAASy7F,GAEZ,CACG9+F,GAAIqB,EAAIg9F,eACRx8F,KAAM,SACNS,MAAOpB,EAAE,yBACT2C,MAAO1C,KAAKk9F,eACZh2F,KAAM,iBACNhF,QAAS07F,GAEZ,CACG/+F,GAAIqB,EAAIw6F,aACRh6F,KAAM,SACNS,MAAOpB,EAAE,eACT2C,MAAO1C,KAAK06F,aACZxzF,KAAM,eACNhF,QAAS27F,EACT17F,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KACZD,GAAUC,IACXgb,EAAiBL,EACdr7F,KAAKs8F,eACF54F,GAAGxD,EAAIo8F,eAAexwF,WACzB20E,GAtRM,CAACib,IACzB,CACGx7F,EAAIi9F,mBACJj9F,EAAIk9F,oBACJl9F,EAAIm9F,oBACLr5F,SAAS43F,IACRl4F,GAAGk4F,GAAap3F,OAAO,UAAWk3F,GAClCh4F,GAAGk4F,GAAan3F,SAAS,GAC1B,EAgRaw3F,CAAqBP,GACxB,IAIT,CACG78F,GAAIqB,EAAIi9F,mBACRz8F,KAAM,SACNS,MAAOpB,EAAE,iBACT2C,MAAO1C,KAAKm9F,mBACZj2F,KAAM,qBACNhF,QAASw5F,GAEZ,CACG78F,GAAIqB,EAAIk9F,oBACR18F,KAAM,SACNS,MAAOpB,EAAE,kBACT2C,MAAO1C,KAAKo9F,oBACZl2F,KAAM,sBACNhF,QAASw5F,GAEZ,CACG78F,GAAIqB,EAAIm9F,mBACR38F,KAAM,SACNS,MAAOpB,EAAE,iBACT2C,MAAO1C,KAAKq9F,mBACZn2F,KAAM,qBACNhF,QAASw5F,KAKlBl4F,MAAM/C,GAAGA,EAAIiD,GAAG7E,IAEhB6E,GAAG7E,GAAI8F,MACV,CAQA0xF,gBAAgBx3F,GACb,IAAIqB,EAAMF,KAAKs3F,YAAYz4F,GAC3BmB,KAAKkH,KAAOlH,KAAKs2F,SAASp2F,EAAIgH,MAI9BlH,KAAKmE,SAASgC,SAASnC,SAASyI,IAC7BzM,KAAKyM,GAAKzM,KAAKs2F,SAASp2F,EAAIuM,GAAG,GAErC,oBC5bH,MAAM4xF,EAA0B,EAAQ,KAExC,IAAIt+F,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAAkC6+F,EAKhD/G,YAAYz4F,GACT,MAAO,CACJqI,KAAM,GAAGrI,SACT04F,kBAAmB,GAAG14F,sBACtB24F,YAAa,GAAG34F,gBAChBy/F,cAAe,GAAGz/F,kBAClB84F,SAAU,GAAG94F,aACb0/F,gBAAiB,GAAG1/F,oBAEpB2/F,sBAAuB,GAAG3/F,0BAC1B4/F,eAAgB,GAAG5/F,mBACnB6/F,UAAW,GAAG7/F,cACd8/F,sBAAuB,GAAG9/F,0BAC1B+/F,mBAAoB,GAAG//F,uBACvBggG,eAAgB,GAAGhgG,mBACnBigG,UAAW,GAAGjgG,cAEdkgG,YAAa,GAAGlgG,gBAEtB,CAQAu3F,eAAev3F,GACZ,IAAIqB,EAAMF,KAAKs3F,YAAYz4F,GAEvBw5F,EAAgB,CAAC,CAAEx5F,GAAI,EAAG6D,MAAO3C,EAAE,6BACfC,KAAKwnB,QAAQulB,kBAAkB/sC,OACjC,IAAIgE,SAASob,IAChCi5E,EAAch0F,KAAK,CAAExF,GAAIugB,EAAIhb,IAAK1B,MAAO0c,EAAIje,OAAQ,IAGxD,IAAIm3F,EAAat4F,KAAK8B,GAAGwkB,UAAU5nB,KAAKM,IAC9B,CAAEH,GAAIG,EAAEH,GAAI6D,MAAO1D,EAAEmC,OAASnC,EAAEkI,KAAMlC,OAAQhG,MAGxDs5F,EAAWllE,QAAQ,CAChBv0B,GAAI,EACJ6D,MAAO3C,EAAE,sBAGZ,IAAIi/F,EAA0BtnF,IAC3B,IAAI1S,EAAShF,KAAK8B,GAAG2V,WAAWC,GAChC,IAAK1S,EAAQ,MAAO,GAEpB,IAAI9C,EAAU8C,EACV8B,QAAQC,GAAMA,EAAE49B,eAChBjmC,KAAKqI,IACI,CACJlI,GAAIkI,EAAElI,GACN6D,MAAOqE,EAAE5F,UASlB,OALAe,EAAQkxB,QAAQ,CACbv0B,GAAI,EACJ6D,MAAO3C,EAAE,oBAGLmC,CAAO,EAGbu2F,EAAe,CAACC,EAAcC,KAC/BD,EAAa10F,SAAS40F,IACnB,IAAIC,EAASn1F,GAAGk1F,GACZC,IACDA,EAAOr0F,OAAO,UAAWm0F,GACzBE,EAAOp0F,UACPo0F,EAAOl0F,OACV,GACD,EA0BDs6F,EAAqB,KACtB,IAAIC,EAAex7F,GAAGxD,EAAI6+F,aAC1B,IAAKG,EAAc,OAGnB17F,MAAM/C,GAAG,GAAIy+F,GAEb,IAAIC,EAAQn/F,KAAK8B,GAAG2V,WAAWzX,KAAK23F,UACpC,IAAKwH,EAAO,OAEZ,IAAIC,EAAep/F,KAAK8B,GAAG2V,WAAWzX,KAAKu+F,iBACtCa,IAGLA,EAAat4F,SAAS9C,SAAS+C,IAC5B,IAAIiyF,EAAW,GAGZA,EADCjyF,EAAE49B,aACQw6D,EAAMr4F,QAAQu4F,GAEnBA,EAAI16D,cACJ06D,EAAIl5F,UACJY,EAAEZ,UACFk5F,EAAIl5F,SAASO,YAAcK,EAAEZ,SAASO,YACtC24F,EAAIl5F,SAASa,UAAYD,EAAEZ,SAASa,UACpCq4F,EAAIl5F,SAASc,aAAeF,EAAEZ,SAASc,aACvCo4F,EAAIl5F,SAASgB,YAAcJ,EAAEZ,SAASgB,aAIjCg4F,EAAMr4F,QAAQu4F,GAAQA,EAAIj7F,KAAO2C,EAAE3C,MAGjD40F,EAAWA,EAASt6F,KAAK2gG,IACf,CACJxgG,GAAIwgG,EAAIxgG,GACR6D,MAAO28F,EAAIl+F,UAIjB+9F,EAAap0F,QAAQ,CAClBpK,KAAM,SACNwG,KAAMH,EAAElI,GACRsC,MAAO4F,EAAE5F,MACTe,QAAS82F,GACV,IAGLkG,EAAapK,UAAU90F,KAAK++F,aAAe,CAAC,GAAE,EAG7CO,EAAiBN,EAAuBh/F,KAAKw3F,aAC7C+H,EAAmBP,EAAuBh/F,KAAKs+F,eAC/CkB,EAAcR,EAAuBh/F,KAAK23F,UAC1C8H,EAAqBT,EAAuBh/F,KAAKu+F,iBAEjD99F,EAAK,CACN5B,GAAIA,EACJ6B,KAAM,OACNi7F,eAAgB,CACb95F,WAAY,KAEfmH,SAAU,CACP,CACGnK,GAAIqB,EAAIgH,KACRxG,KAAM,OACNS,MAAOpB,EAAE,QACTmH,KAAM,OACNxE,MAAO1C,KAAKkH,MAEf,CACGrI,GAAIqB,EAAIq3F,kBACR72F,KAAM,SACNS,MAAOpB,EAAE,uBACT2C,MAAO1C,KAAKu3F,kBACZrwF,KAAM,oBACNhF,QAASm2F,GAEZ,CACGx5F,GAAIqB,EAAIs3F,YACR92F,KAAM,SACNS,MAAOpB,EAAE,gBACT2C,MAAO1C,KAAKw3F,YACZtwF,KAAM,cACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAAWq+E,IACRzgF,KAAKw3F,YAAc/W,EA9GT,CAAC/oE,IACvB,IAAIxV,EAAU88F,EAAuBtnF,GACrC+gF,EAAa,CAACv4F,EAAIs+F,uBAAwBt8F,EAAQ,EA6GtCw9F,CAAmBjf,EAAO,IAInC,CACG5hF,GAAIqB,EAAIs+F,sBACR99F,KAAM,SACNS,MAAOpB,EAAE,yBACT2C,MAAO1C,KAAKw+F,sBACZt3F,KAAM,wBACNhF,QAASo9F,GAEZ,CACGzgG,GAAIqB,EAAIo+F,cACR59F,KAAM,SACNS,MAAOpB,EAAE,aACT2C,MAAO1C,KAAKs+F,cACZp3F,KAAM,gBACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAAWq+E,IACRzgF,KAAKs+F,cAAgB7d,EA/Hd,CAAC/oE,IACpB,IAAIxV,EAAU88F,EAAuBtnF,GACrC+gF,EACG,CAACv4F,EAAI2+F,eAAgB3+F,EAAI0+F,mBAAoB1+F,EAAI4+F,WACjD58F,EACF,EA2HWy9F,CAAgBlf,EAAO,IAIhC,CACG5hF,GAAIqB,EAAI0+F,mBACRl+F,KAAM,SACNS,MAAOpB,EAAE,sBACT2C,MAAO1C,KAAK4+F,mBACZ13F,KAAM,qBACNhF,QAASq9F,GAEZ,CACG1gG,GAAIqB,EAAI2+F,eACRn+F,KAAM,SACNS,MAAOpB,EAAE,iBACT2C,MAAO1C,KAAK6+F,eACZ33F,KAAM,iBACNhF,QAASq9F,GAEZ,CACG1gG,GAAIqB,EAAI4+F,UACRp+F,KAAM,SACNS,MAAOpB,EAAE,YACT2C,MAAO1C,KAAK8+F,UACZ53F,KAAM,YACNhF,QAASq9F,GAEZ,CACG1gG,GAAIqB,EAAIy3F,SACRj3F,KAAM,SACNS,MAAOpB,EAAE,aACT2C,MAAO1C,KAAK23F,SACZzwF,KAAM,WACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAAWq+E,IACRzgF,KAAK23F,SAAWlX,EA7JT,CAAC/oE,IACpB,IAAIxV,EAAU88F,EAAuBtnF,GACrC+gF,EAAa,CAACv4F,EAAIu+F,eAAgBv+F,EAAIw+F,WAAYx8F,EAAQ,EA4J9C09F,CAAgBnf,GAChBwe,GAAoB,IAI7B,CACGpgG,GAAIqB,EAAIu+F,eACR/9F,KAAM,SACNS,MAAOpB,EAAE,iBACT2C,MAAO1C,KAAKy+F,eACZv3F,KAAM,iBACNhF,QAASs9F,GAEZ,CACG3gG,GAAIqB,EAAIw+F,UACRh+F,KAAM,SACNS,MAAOpB,EAAE,YACT2C,MAAO1C,KAAK0+F,UACZx3F,KAAM,YACNhF,QAASs9F,GAEZ,CACG3gG,GAAIqB,EAAIq+F,gBACR79F,KAAM,SACNS,MAAOpB,EAAE,qBACT2C,MAAO1C,KAAKu+F,gBACZr3F,KAAM,kBACNhF,QAASo2F,EACTn2F,GAAI,CACDC,SAAWq+E,IACRzgF,KAAKu+F,gBAAkB9d,EAvLT,CAAC/oE,IAC3B,IAAIxV,EAAU88F,EAAuBtnF,GACrC+gF,EAAa,CAACv4F,EAAIy+F,uBAAwBz8F,EAAQ,EAsLtC29F,CAAuBpf,GACvBwe,GAAoB,IAI7B,CACGpgG,GAAIqB,EAAIy+F,sBACRj+F,KAAM,SACNS,MAAOpB,EAAE,oBACT2C,MAAO1C,KAAK2+F,sBACZz3F,KAAM,wBACNhF,QAASu9F,GAEZ,CACG/+F,KAAM,WACNS,MAAO,kBACPK,KAAM,CACH3C,GAAIqB,EAAI6+F,YACRr+F,KAAM,OACNgB,YAAY,EACZsH,SAAU,OAMtBxF,MAAM/C,GAAGA,EAAIiD,GAAG7E,IAEhB6E,GAAG7E,GAAI8F,OAEPs6F,GACH,CAQA5I,gBAAgBx3F,GACb,IAAIqB,EAAMF,KAAKs3F,YAAYz4F,GAC3BmB,KAAKkH,KAAOlH,KAAKs2F,SAASp2F,EAAIgH,MAI9BlH,KAAKmE,SAASgC,SAASnC,SAASyI,IAE1BzM,KAAKyM,GADE,gBAANA,EACS/I,GAAGxD,EAAI6+F,aAAa7K,YAEpBl0F,KAAKs2F,SAASp2F,EAAIuM,GAC/B,GAEN,oBCpVH,MAAMqzF,EAAoB,EAAQ,MAIlCvgG,EAAOC,QAAU,cAA4BsgG,EAK1C5wB,eAOG,GANApvE,MAAMovE,eAEDlvE,KAAK+/F,aACP//F,KAAKs0D,eAAe,yBAGnBt0D,KAAK+/F,YAAa,CACnB,MAAM3nE,EAAO,CAAC,GACbp4B,KAAKwnB,QAAQulB,kBAAkB/sC,OAAS,IAAIgE,SAASgK,IACnDoqB,EAAK,IAAIpqB,EAAK7M,UAAY6M,CAAI,IAGjC,IAAIgyF,EAAM,IAAI39E,OAAO,UAAW,MAClBriB,KAAK+/F,YAAY7nF,MAAM8nF,IAAQ,IACrCh8F,SAASoW,IACTge,EAAKhe,IACPpa,KAAKs0D,eACF,oCAAoCl6C,KAE1C,GAEN,CACH,oBC9BH,MAAM6lF,EAA8C,EAAQ,OAE5D1gG,EAAOC,QAAU,cAAsD,EAGpE0vE,eACGpvE,MAAMovE,eAEDlvE,KAAK4P,OACP5P,KAAKs0D,eAAe,iCAYG,IATLt0D,KAAKwnB,QAAQulB,kBAAkB/sC,OAAS,IACzD4I,QAAQoF,GAA4B,SAAnBA,EAAKrI,OAAOvB,MAC7B1F,KAAKsP,IACI,CACJnP,GAAImP,EAAK5J,IACT1B,MAAOsL,EAAK7M,UAIL+E,QACblG,KAAKs0D,eAAe,gDAE1B,oBC1BH,MAAM4rC,EAAuB,EAAQ,MAErC3gG,EAAOC,QAAU,cAA+B0gG,EAC7ChxB,eACGpvE,MAAMovE,eAEDlvE,KAAK48B,UACP58B,KAAKs0D,eAAe,sBAGvB,MAAM6rC,EAAK9gG,OAAOD,KAAKY,KAAK24F,aAAe,CAAC,IAAM,GAClD,GAAiB,GAAbwH,EAAGj6F,OACJlG,KAAKs0D,eAAe,yBAChB,CACJ,IAAI8rC,GAAQ,EACZD,EAAGn8F,SAAS+C,IAEsB,KAA5B/G,KAAK24F,YAAY5xF,IAAIgT,KACS,MAA9B/Z,KAAK24F,YAAY5xF,IAAIrE,QAErB09F,GAAQ,EACX,IAEEA,GACFpgG,KAAKs0D,eAAe,oBAE1B,CACH,oBC3BH,MAAM+rC,EAAgC,EAAQ,OAExCjxC,EAAc,EAAQ,OAE5B7vD,EAAOC,QAAU,cAAwC,EAGtDG,YAAYsjB,EAAYuE,EAAS1lB,GAC9BhC,MAAMmjB,EAAYuE,EAAS1lB,GAE3B9B,KAAKijB,WAAaA,CACrB,CAEAmsC,cACG,OAAOA,CACV,CAEAmgB,WAEG,IAAI+wB,EAAa,GAUjB,OATItgG,KAAK0tD,QACN4yC,EAAaA,EAAWx4E,OAAO9nB,KAAK0tD,MAAM6hB,aAI7C+wB,EAAWt8F,SAAS8zE,IACbA,GAAG7mE,SAASjR,KAAKs0D,eAAewjB,EAAE7mE,QAAQ,IAEhCnR,MAAMyvE,WACL3mE,QAAQkvE,GAAMA,GACnC,CAEA5I,eACGpvE,MAAMovE,eACFlvE,KAAK0tD,MACN1tD,KAAK0tD,MAAMwhB,eAEXlvE,KAAKs0D,eAAe,yBAGlBt0D,KAAKkH,MACPlH,KAAKs0D,eAAe,wBAAyB,CAC1CrxC,WAAYjjB,KAAKijB,aAIvB,IAAIs9E,GAAU,EACVtmE,EAAOj6B,KAAK0tD,MAChB,KAAOzzB,GACa,aAAbA,EAAK71B,KAAmC,aAAb61B,EAAK71B,KACjCm8F,GAAU,EACVtmE,EAAO,MAEPA,EAAOA,EAAK7O,KAIbm1E,GACFvgG,KAAKs0D,eAAe,wCAE1B,oBC5DH,MAAMksC,EAAiB,EAAQ,OAI/BjhG,EAAOC,QAAU,cAAyBghG,EAwFvCzK,kBAAkB0K,GACf,IAAIC,EAAQ5gG,MAAMi2F,oBAYlB,OAXA2K,EAAQA,GAAS,CAAC,CAAC,GACnBA,EAAM,GAAG/+E,IAAM++E,EAAM,GAAG/+E,KAAO,CAAC,EAER,MAApB3hB,KAAKiwD,cACNywC,EAAM,GAAG/+E,IAAM++E,EAAM,GAAG/+E,KAAO,CAAC,EAChC++E,EAAM,GAAG/+E,IAAIg/E,oBAAsBF,EAC/BnrF,IAAI,UACJq6D,OAAO,yCACX+wB,EAAM,GAAG/+E,IAAIg/E,oBAAoBC,cAAe,GAG5CF,CACV,CAQAt+F,SAASyzF,GACN,IAAI8K,EACD9K,EAAW8K,qBACX9K,EAAWhqD,eAAe80D,qBAC1B,CAAC,EAEJ,OAAQA,EAAoBr1C,OACzB,IAAK,wCACFtrD,KAAK6gG,SAAWF,EAAoBC,aAC/B,aACA,WACL,MACH,IAAK,mCACF5gG,KAAK6gG,SAAW,UAGzB,CAQAtsF,UAGG,OAAOvU,KAAKwnB,QAAQjT,QAAQ8pC,KAAKr+C,KACpC,CASA2H,OAGG,OAAO3H,KAAKwnB,QAAQ7f,KAAK02C,KAAKr+C,KACjC,CAcAq5E,6BAA6Br9C,GAC1B,IAAIqR,EAAOrtC,KAAK8B,GAAGi6B,oCAAoCC,EAASh8B,MAMhE,OAHIqtC,GACDrtC,KAAKksC,WAAWmB,GAEZA,CACV,CAEA6hC,eACGpvE,MAAMovE,gBAELlvE,KAAK8vD,oBAAsB,IAAI9rD,SAAS2mC,IACtC3qC,KAAKs0D,eACF,gDAAgD3pB,KAChD,CAAEnjB,QAASxnB,KAAKnB,GAAI8rC,OACtB,GAEP,oBC5LH,MAAMm2D,EAAwB,EAAQ,OAEtCvhG,EAAOC,QAAU,cAAgCshG,qBCFjD,MAAMC,EAAgC,EAAQ,OAE9CxhG,EAAOC,QAAU,cAAwC,qBCAzD,MAAMwhG,EAAgC,EAAQ,OAE9CzhG,EAAOC,QAAU,cAAwC,qBCFzD,MAAMyhG,EAAuB,EAAQ,OAIrC1hG,EAAOC,QAAU,cAA+ByhG,qBCNhD,MAAMC,EAAgC,EAAQ,OAE9C3hG,EAAOC,QAAU,cAAwC,qBCFzD,MAAM2hG,EAA4B,EAAQ,OAO1C5hG,EAAOC,QAAU,cAAoC2hG,EAMlDx5F,OACG,OACG0H,QAAQ/P,UACJ6U,MAAK,IAAMrU,MAAM6H,SAEjBwM,MAAMxG,GACG3N,KAAK8B,GAAGmN,QAAQ6G,IAAI,CACxB7F,KAAMjQ,KAAKmyD,UAlBX,4BACD,4BAiB8Ct/C,QAC1C,OACA7S,KAAKnB,OAKvB,oBClBH,MAAMuiG,EAAW,EAAQ,OACnBhe,EAAa,UAEbrjF,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GA6zBlDhW,EAAOC,QA3zBP,cAAmB4hG,EAChBzhG,YAAYsjB,EAAY6vC,EAAsBC,EAAQ1lB,EAAMvrC,GACzDhC,MAAMmjB,EAAY6vC,EAAsBC,EAAQ1lB,EAAMvrC,GAEtD9B,KAAKmC,GAAG,WAAW,CAAC8O,EAAStH,KAC1B3J,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAAO,GAE5C,CAoBA03F,SAASjiF,EAAKvgB,GAGXmB,KAAK8yD,qBAAqB9uD,SAAS4vD,IAEhC,MAAMxC,EAAOpxD,KAAKshG,KAAKziG,GAEvBmB,KAAKE,IAAMF,KAAKuhG,MAAMnwC,GACtBpxD,KAAKuV,OAASvV,KAAKuV,QAAU,CAAC,EAE9B,IAAIisF,EAAe,KAEnB,OAAQ5tC,EAAKjyD,MACV,IAAK,eACF3B,KAAKuV,OAAOq+C,EAAK1sD,MAAQxD,GAAG1D,KAAKE,IAAIuhG,cAAc31F,WAEnD,MAEH,IAAK,aACF9L,KAAKuV,OAAOq+C,EAAK1sD,MAAQxD,GAAG1D,KAAKE,IAAIwhG,YAAY51F,WAEjD,MAEH,IAAK,mBACL,IAAK,eAGF,GAFA01F,EAAe99F,GAAG1D,KAAKE,IAAIkuC,WAEvBozD,EAAc,CACf,MAAMpzD,EAAYozD,EAAa11F,WAE3BsiC,GAA2B,KAAdA,IACdpuC,KAAKuV,OAAOq+C,EAAK1sD,MAAQwM,KAAKuD,MAAMm3B,GAE1C,CAEA,MAEH,IAAK,YACFpuC,KAAKuV,OAAOq+C,EAAK1sD,MAAQxD,GAAG1D,KAAKE,IAAIyhG,WAAW71F,WAGtD,GAEN,CAQAy1F,MAAMnwC,GACH,MAAO,CACJhjB,UAAW,GAAGgjB,cACdqwC,aAAc,GAAGrwC,iBACjBswC,WAAY,GAAGtwC,YACf+qB,MAAO,GAAG/qB,UACVwwC,OAAQ,GAAGxwC,WACXywC,UAAW,GAAGzwC,cACduwC,UAAW,GAAGvwC,cACd0wC,OAAQ,GAAG1wC,WAEjB,CAaA2wC,iBAAiBnuC,EAAM/0D,EAAI4B,GAGxB,IAAKA,EAAGS,KAAM,CACX,IAAIT,EAAGmB,KAOA,MAAM,IAAI1C,MAAM,+CANpB,IAAK,IAAIgU,EAAI,EAAGA,EAAIzS,EAAGmB,KAAKsE,OAAQgN,IACjC,GAAIzS,EAAGmB,KAAKsR,GAAGhS,KAAM,CAClBlB,KAAK+hG,iBAAiBnuC,EAAM/0D,EAAI4B,EAAGmB,KAAKsR,IAExC,KACH,CAGN,MACH,CAEA,MAAM8uF,EAAUhiG,KAAKiiG,UAAUruC,EAAM/0D,GAEjCmjG,IAEwC,IAArChiG,KAAK8yD,qBAAqB5sD,QAC3BzF,EAAGS,KAAKkxC,MACR3xC,EAAGS,KAAKmD,KAAK29F,IAKTvhG,EAAGS,KAAKgF,OAAS,EAClBzF,EAAGS,KAAKmD,KAAK,CACVzC,KAAM,CAACogG,KAGRvhG,EAAGS,KAAK,GAAGU,KAAKyC,KAAK29F,GAGnC,CAUAE,UAAUrjG,EAAI4B,GACX,MAAM0hG,EAAQniG,KAAKoiG,UAAUvjG,GAIzBmB,KAAKorB,MACNprB,KAAKorB,KAAKi3E,YAAYxjG,EAAIsjG,GAC1B1hG,EAAGmB,KAAKyC,KAAK89F,GACbniG,KAAKorB,KAAK82E,UAAUrjG,EAAI4B,IAGtBA,EAAGmB,KAAKyC,KAAK89F,EACrB,CAUAE,YAAYxjG,EAAI4B,GACbT,KAAK8yD,qBAAqB9uD,SAAS4vD,IAChC5zD,KAAK+hG,iBAAiBnuC,EAAM/0D,EAAI4B,EAAG,GAEzC,CAQA6gG,KAAKziG,GACF,OAAImB,KAAK+yD,OAAe,GAAG/yD,KAAK+yD,OAAOuuC,KAAKziG,MAAOmB,KAAKL,YAAYyE,MAE7D,GAAGvF,KAAMmB,KAAKL,YAAYyE,KACpC,CAqBAg+F,UAAUvjG,GACP,MAAMqD,EAAUlC,KAAKL,YAAYyzD,UAAU10D,KAAKmZ,IACtC,CAAEhZ,GAAIgZ,EAAGzT,IAAK1B,MAAOmV,EAAG1W,UAGlCe,EAAQkxB,QAAQ,CAAEv0B,GAAI,EAAG6D,MAAO3C,EAAE,2BAElC,MAAMqxD,EAAOpxD,KAAKshG,KAAKziG,GACjBqB,EAAMF,KAAKuhG,MAAMnwC,GAiGvB,MA/Fc,CACXlwD,KAAM,CACH,CACGrC,GAAIqB,EAAI0hG,OACRlhG,KAAM,SACNgC,MAAO1C,KAAKorB,KAAOprB,KAAKorB,KAAKzrB,YAAYyE,IAAM,EAC/ClC,QAASA,EACTC,GAAI,CACDC,SAAU,CAACkgG,EAAUthB,KAClB,MAAMuhB,EAAa,KAChB,MAAMX,EAASl+F,GAAGxD,EAAI0hG,QAEtBA,EAAO5e,aACP4e,EAAOh9F,SAASo8E,GAChB4gB,EAAO3e,cAAc,EAGxB,GAAIqf,IAAathB,EAAU,OAE3B,MAAMwhB,EAAQxiG,KAAKL,YAAYyzD,UAAUpmC,MACrCnV,GAAOA,EAAGzT,MAAQk+F,IAGtB,IAAKE,EAGF,YAFAD,IAKH,MAAME,EAAU/+F,GAAGxD,EAAI0hG,QAAQt2F,gBACzBo3F,EAAYD,EAAQn3F,gBACpBq3F,EAAQ,KACX,GAAIH,EAAO,CACR,MAAMrvC,EAAS,IAAIqvC,EAChB,CAAC,EACDxiG,KACAA,KAAKqtC,KACLrtC,KAAK8B,IAGR9B,KAAKorB,KAAO+nC,EAEZA,EAAOyvC,cAAc/jG,EAAI4jG,GACzBtvC,EAAO0vC,YAAYhkG,EAAI6jG,EAC1B,GAKGI,EAAUJ,EAAU/3F,gBAEtBm4F,EAAQ58F,OAAS,EAAI48F,EAAQ51F,QAAQu1F,GACtCj/F,MAAM+N,QAAQ,CACXR,MAAOhR,EAAE,aACTkO,KAAMlO,EACH,sDAEHmR,GAAInR,EAAE,OACNuR,OAAQvR,EAAE,MACVyR,SAAW7D,IACR,GAAIA,EAAQ,CAET,IAAIo1F,EAAKD,EAAQ58F,OAAS,EAE1B,KACG48F,EAAQC,GAAI/gG,OAAOnD,KAAO4jG,EAAQzgG,OAAOnD,IAEzC6jG,EAAUr3F,WAAWy3F,EAAQC,IAC7BA,IAIH,MAAMC,EAAUP,EAAQ93F,gBAExB,IAAIs4F,EAAKD,EAAQ98F,OAEjB,KAAO+8F,EAAK,GACTR,EAAQp3F,WAAW23F,EAAQC,EAAK,IAChCA,IAGHN,GACH,MAAOJ,GAAY,IAGvBI,GAAO,IAIrB,CACG9jG,GAAIqB,EAAI4hG,SAMpB,CAEAoB,yBAAyBrkG,GACtB,MAAMskG,EAAUz/F,GAAG1D,KAAKE,IAAI0hG,QAE5B,IAAKuB,EAAS,OAEd,MAAMf,EAAYpiG,KAAKoiG,UAAUvjG,GAE3BukG,EACHhB,EAAUlhG,KAAK0H,QAAQtF,GAAMA,EAAEzE,IAAMskG,EAAQnhG,OAAOnD,KAAI,IACxDujG,EAAUlhG,KAAK,GAEdkiG,GAAWthG,GAAG6Y,MAAMla,GAAG2iG,EAAWD,EACzC,CAaAlB,UAAUruC,EAAM/0D,GACb,MAAMwkG,EAAWvhG,GAAG4M,OAAO40F,aAE3B,IAAIlyC,EAAOpxD,KAAKshG,KAAKziG,GAErBmB,KAAKE,IAAMF,KAAKuhG,MAAMnwC,GAEtB,IAAI4wC,EAAU,KACV9/F,EAAU,KACVqjF,EAAS,KACT7xB,EAAe,KACf6vC,EAAc,KACdC,EAAe,KACfC,EAAe,KACfC,EAAU,KACVpkB,EAAQ,KAGZ,OAAQ1rB,EAAKjyD,MACV,IAAK,eAGE3B,KAAKgF,SACN9C,EAAUlC,KAAKgF,OAAO8B,SAASpI,KAAKqI,IAC1B,CAAElI,GAAIkI,EAAElI,GAAI6D,MAAOqE,EAAE5F,MAAOiK,KAAM,SAASrE,EAAEqE,YAG1DlJ,EAAQkxB,QAAQ,CACbv0B,GAAI,MACJ6D,MAAO,UAML1C,KAAK68B,SAAW36B,EAAQgE,OAAS,IAEnClG,KAAKuV,OAAOq+C,EAAK1sD,MAAQhF,EAAQ,GAAGrD,GACpCmB,KAAK2zD,aAAaC,EAAM/0D,IAG3BmjG,EAAU,CACPnjG,GAAImB,KAAKE,IAAIuhG,aACb/gG,KAAM,aACNS,MAAOpB,EAAE,SACT8B,WAAY,GACZa,MAAO1C,KAAK68B,QACZ36B,QAASA,EACTC,GAAI,CACDC,SAAU,CAACkgG,EAAUthB,KAEdshB,IAAatiG,KAAKuV,OAAOq+C,EAAK1sD,QAC/BlH,KAAKuV,OAAOq+C,EAAK1sD,MAAQo7F,EACzBtiG,KAAK2zD,aAAaC,EAAM/0D,GAC3B,IAKT,MAEH,IAAK,aAGFqD,EAAUlC,KAAK8B,GAAGwkB,UAAU5nB,KAAKM,IACvB,CAAEH,GAAIG,EAAEH,GAAI6D,MAAO1D,EAAEmC,WAG1BnB,KAAK48B,UAAY16B,EAAQgE,OAAS,IACpClG,KAAK48B,SAAW16B,EAAQ,GAAGrD,GAC3BmB,KAAKuV,OAAOq+C,EAAK1sD,MAAQlH,KAAK48B,SAC9B58B,KAAK2zD,aAAaC,IAGrBouC,EAAU,CACPnjG,GAAImB,KAAKE,IAAIwhG,WACbhhG,KAAM,SACNS,MAAOpB,EAAE,eACT8B,WAAYwhG,EAASphG,gBACrBS,MAAO1C,KAAK48B,SACZ16B,QAASA,EACTC,GAAI,CACDC,SAAWkgG,IACRtiG,KAAKuV,OAASvV,KAAKuV,QAAU,CAAC,EAE1B+sF,IAAatiG,KAAKuV,OAAOq+C,EAAK1sD,QAC/BlH,KAAKuV,OAAOq+C,EAAK1sD,MAAQo7F,EACzBtiG,KAAK2zD,aAAaC,GACrB,IAKT,MAEH,IAAK,mBA0BF,GAHA2xB,EAASvlF,KAAK8B,GAAGuzB,iBAAiBx2B,GAClC60D,EAAe1zD,KAAKwzD,iCAEhBxzD,KAAKgF,OAAQ,CACdugF,EAAOjwD,WAAWt1B,KAAKgF,OAAO8B,SAAU9G,KAAKgF,QAM7C,MAAM2+F,EAActkG,OAAOD,KAAKs0D,GAAch1D,KAC1CqI,GAAM2sD,EAAa3sD,KAGvBw+E,EAAO90C,kBAAkBkzD,EA0D5B,CAIApe,EAAOpjF,GAAG,QAASisC,IAIhBpuC,KAAKuV,OAASvV,KAAKuV,QAAU,CAAC,EAC9BvV,KAAKuV,OAAOq+C,EAAK1sD,MAAQknC,EAEzB,MAAMw1D,EAAYlgG,GAAG1D,KAAKE,IAAI2hG,WAE9B+B,EAAUp/F,OAAO,CACdrD,MAAOokF,EAAOtI,gBAEjB2mB,EAAUn/F,UAIV,MAAMo/F,EAAcngG,GAAG1D,KAAKE,IAAIkuC,WAEhCy1D,EAAYr/F,OAAO,CAChB9B,MAAOgR,KAAKC,UAAU3T,KAAKuV,OAAOq+C,EAAK1sD,SAE1C28F,EAAYp/F,SAAS,IAIxB8+F,EAAc,GAEVvjG,KAAKuV,QAAUvV,KAAKuV,OAAOq+C,EAAK1sD,OACjCq+E,EAAO3gF,SAAS5E,KAAKuV,OAAOq+C,EAAK1sD,OACjCq8F,EAAc7vF,KAAKC,UAAU3T,KAAKuV,OAAOq+C,EAAK1sD,QAE9Cq+E,EAAO3gF,SAAS,MAKnB4+F,EAAeje,EAAOtI,cAEtB+kB,EAAU,CACPpgG,KAAM,CACH,CACG/C,GAAImB,KAAKE,IAAI2hG,UACbnhG,KAAM,SACNS,MAAOqiG,EACPrhG,GAAI,CACD+H,YAAa,KACVq7E,EAAOjG,MAAM57E,GAAG1D,KAAKE,IAAI2hG,WAAY,KAAM,CACxCvxE,IAAK,UACN,IAMX,CACGzxB,GAAImB,KAAKE,IAAIkuC,UACb1tC,KAAM,OACNgC,MAAO6gG,EACPjnB,QAAQ,KAKjB,MAEH,IAAK,eAMFmnB,EAAe,GACfC,EAAU,IAAItgB,EAAWhyB,EAAMpxD,KAAK8B,IAEhC9B,KAAKgF,QAAQ0+F,EAAQ3+F,WAAW/E,KAAKgF,QAGzC0+F,EAAQ3e,oBACJ/kF,KAAKqtC,KAAK7lB,QAAQulB,kBAAkB/sC,KAAKqtC,OAAS,IAAI3uC,KACnDsP,IACS,CACJnP,GAAImP,EAAK5J,IACT1B,MAAOsL,EAAK7M,WAQpBnB,KAAKuV,QAAUvV,KAAKuV,OAAOq+C,EAAK1sD,QACjCw8F,EAAQ9+F,SAAS5E,KAAKuV,OAAOq+C,EAAK1sD,OAClCu8F,EAAe/vF,KAAKC,UAAU3T,KAAKuV,OAAOq+C,EAAK1sD,QAGlDo4E,EAAQ,KAEL,MAAM7+E,EAAK,CACR5B,GAAImB,KAAKE,IAAIi8E,MACbz7E,KAAM,QACNC,SAAU,SACV6rE,SAAU,IACV3rE,OAAO,EACPD,QAAQ,EACRY,KAAM,CACHI,KAAM,CACH,CACGd,OAAQ,GACRY,YAAY,EACZR,KAAM,CACH,CAAEuB,WAAW,GACb,CACG/B,KAAM,SACNgC,MAAO,IACP3B,MAAO,GACPO,MAAO,KACJoC,GAAG1D,KAAKE,IAAIi8E,OAAOz3E,MAAM,KAKrCg/F,EAAQjjG,KACR,CACGC,KAAM,SACNgC,MAAO3C,EAAE,QACTkB,IAAK,gBACLK,MAAO,KACJtB,KAAKuV,OAASvV,KAAKuV,QAAU,CAAC,EAC9BvV,KAAKuV,OAAOq+C,EAAK1sD,MAAQw8F,EAAQ53F,WACjC,MAAMg4F,EAAKpgG,GAAG1D,KAAKE,IAAI2hG,WAEvBiC,EAAGt/F,OAAO,CACPiuF,MAAOzyF,KAAKuV,OAAOq+C,EAAK1sD,MAAMhB,SAEjC49F,EAAGr/F,UAEH,MAAMqqB,EAAOprB,GAAG1D,KAAKE,IAAIkuC,WAEzBtf,EAAKtqB,OAAO,CACT9B,MAAOgR,KAAKC,UAAU3T,KAAKuV,OAAOq+C,EAAK1sD,SAE1C4nB,EAAKrqB,UAELf,GAAG1D,KAAKE,IAAIi8E,OAAOz3E,MAAM,MAQxC1E,KAAK+jG,SAAWvgG,MAAM/C,GAAGA,GACzBT,KAAK+jG,SAASp/F,OAIV3E,KAAKuV,QAAUvV,KAAKuV,OAAOq+C,EAAK1sD,OACjCw8F,EAAQ9+F,SAAS5E,KAAKuV,OAAOq+C,EAAK1sD,MAAM,EAG9C86F,EAAU,CACPpgG,KAAM,CAEH,CACG/C,GAAImB,KAAKE,IAAI2hG,UACbnhG,KAAM,SACNS,MAAOpB,EAAE,iBACT0yF,MAAOzyF,KAAKuV,OAAOq+C,EAAK1sD,OAAOhB,OAC/B/D,GAAI,CACD+H,YAAa,KACVo1E,GAAO,IAKhB,CACGzgF,GAAImB,KAAKE,IAAIkuC,UACb1tC,KAAM,OACNgC,MAAO+gG,EACPnnB,QAAQ,KAKjB,MAEH,IAAK,YACF0lB,EAAU,CACPnjG,GAAImB,KAAKE,IAAIyhG,UACbjhG,KAAM,OACNS,MAAOpB,EAAE,YACT8B,WAAY,GACZa,MAAO1C,KAAKuV,OAAOq+C,EAAK1sD,MACxBi4E,YAAap/E,EAAE,wBACfoC,GAAI,CACDC,SAAU,CAACkgG,EAAUthB,KAEdshB,IAAatiG,KAAKuV,OAAOq+C,EAAK1sD,QAC/BlH,KAAKuV,OAAOq+C,EAAK1sD,MAAQo7F,EACzBtiG,KAAK2zD,aAAaC,EAAM/0D,GAC3B,IAQf,OAAOmjG,CACV,CAYAa,YAAYhkG,EAAImlG,GACb,MAAM7B,EAAQniG,KAAKoiG,UAAUvjG,GAE7BmlG,EAAQl5F,QAAQq3F,EACnB,CAWAS,cAAc/jG,EAAIolG,GACf,MAAM1uF,EAAS,GAEfvV,KAAK8yD,qBAAqB9uD,SAAS4vD,IAEhCr+C,EAAOlR,KAAKrE,KAAKiiG,UAAUruC,EAAM/0D,GAAI,IAGxC,IAAIqlG,EAAW,KAIZA,EADC3uF,EAAOrP,OAAS,EACN,CACRtE,KAAM2T,GAEIA,EAAO68B,MAEnB8xD,IACDD,EAAQ54F,WAAW44F,EAAQt5F,gBAAgB,IAC3Cs5F,EAAQn5F,QAAQo5F,GAEtB,CAEA30B,WACG,IAAI40B,EAAankG,KAAKwvE,WAAa,GAGnC,OAFIxvE,KAAKorB,OACN+4E,EAAaA,EAAWr8E,OAAO9nB,KAAKorB,KAAKmkD,YAAY3mE,QAAQkvE,GAAMA,KAC/D93E,KAAK8B,GAAG2gB,KAAK0hF,EACvB,CAEAj1B,eACGlvE,KAAKwvE,UAAY,GACbxvE,KAAKorB,MAAMprB,KAAKorB,KAAK8jD,cAC5B,CAcA5a,eAAerjD,GAEZjR,KAAKwvE,UAAYxvE,KAAKwvE,WAAa,GACnCxvE,KAAKwvE,UAAUnrE,KAAK,CAAE4M,QAAS,GAAGjR,KAAKoE,QAAQ6M,KAClD,oBC3zBH,MAAM8iD,EAAe,EAAQ,OAW7Bx0D,EAAOC,QATP,cAAuBu0D,qBCDvB,MAAMC,EAAkB,EAAQ,OAC1BowC,EAAiB,EAAQ,OAEzBh1C,EAAc,CAajBG,eAAgByE,EAAgBzE,eAShCrvD,IAAMrB,IACI,CACJwlG,KAAM,GAAGxlG,SACT+iG,OAAQ,GAAG/iG,gBACXqD,QAAS,GAAGrD,mBAkBlBo4B,QAAS,CAACqtE,EAAQj3D,EAAMvrC,KAId,CACJrB,GAAK5B,IACFylG,EAASA,GAAU,IAAIF,EAAe,CAAC,EAAG/2D,EAAMvrC,GAEhD,MACMrB,EAAK,CACRmB,KAAM,CACH,CACG/C,GAJGuwD,EAAYlvD,IAAIrB,GAIXwlG,KACRnjG,KAAM,MAQf,OAHAojG,EAAOjC,YAAYxjG,EAAI4B,GACvB6jG,EAAOpC,UAAUrjG,EAAI4B,GAEdA,CAAE,EAEZ4C,KAAOxE,IAAD,IAiBZoY,MAAO,CAACpY,EAAIwuC,EAAMvrC,KACf,MAAM5B,EAAMkvD,EAAYlvD,IAAIrB,GACtBwlG,EAAO3gG,GAAGxD,EAAImkG,MAEpB,IAAKA,EAGF,YAFA/7F,QAAQC,KAAK,oDAMhB,MAAM3G,EAAOyiG,EAAK/4F,gBAAgBX,gBAE5B45F,EAAe,CAAC3iG,EAAMM,EAAS6wD,KAClC,GAAoB,IAAhBnxD,EAAKsE,OAAc,OAAO,KAE9B,MAAMkZ,EAAMxd,EAAKsS,QAIXuT,EAAQrI,EAAIzU,gBAElB,IAAI65F,EAAW/8E,EAAMvT,QAErB,MAAQswF,GAAU14F,UAAU04F,EAAW/8E,EAAMvT,QAE7C,MAAMxR,EAAQ8hG,EAAS14F,WAGjBunD,EAAKnxD,EAAQ8qB,MAAMhuB,GACfA,EAAEoF,MAAQ1B,GAAS1D,EAAEoF,MAAQggG,EAAehgG,MAGtD,GAAIivD,EAAI,CACL,IAAIoxC,EAAS,KAEDA,EAAR1xC,EAAiB,IAAIM,EAAG,CAAC,EAAGN,EAAQ1lB,EAAMvrC,GAChC,IAAIuxD,EAAG,CAAC,EAAGhmB,EAAMvrC,GAG/B2iG,EAAOpD,SAASjiF,EAAKvgB,IAIhB4lG,EAAOz/F,QAAU+tD,IACnB0xC,EAAOz/F,OAAS+tD,EAAO/tD,OACvBy/F,EAAO7nE,SAAW6nE,EAAOz/F,QAAQnG,IAAM,MAG1C,MAAM6lG,EAAUH,EACb3iG,EACA6iG,EAAO9kG,YAAYyzD,UACnBqxC,GAKH,OAFAA,EAAOr5E,KAAOs5E,EAEPD,CACV,CAEA,OAAO,IAAI,EAKd,OAFkBF,EAAa3iG,EAAMoyD,EAAgBE,MAAO,KAE5C,GAItB30D,EAAOC,QAAU4vD,mBC1JjB,MAAMu1C,EAAqB,EAAQ,OAoEnCplG,EAAOC,QAlEP,cAAyBmlG,EAkBtBhxC,aAAaC,GACQ,SAAdA,EAAK1sD,OACNlH,KAAK48B,SAAW58B,KAAKuV,OAAOq+C,EAAK1sD,MACjClH,KAAKgF,OAAShF,KAAKkzD,aAAalzD,KAAK48B,UAKjC58B,KAAKorB,OAAMprB,KAAKorB,KAAKpmB,OAAShF,KAAKgF,QAE7C,CAgBAq8F,SAASjiF,EAAKvgB,GACXiB,MAAMuhG,SAASjiF,EAAKvgB,GAKhBmB,KAAKuV,OAAOrO,OACblH,KAAK48B,SAAW58B,KAAKuV,OAAOrO,KAC5BlH,KAAKgF,OAAShF,KAAKkzD,aAAalzD,KAAKuV,OAAOrO,MAElD,CAEAgoE,eACGpvE,MAAMovE,eACDlvE,KAAKgF,QACPhF,KAAKs0D,eAAe,qBAAsB,CACvC13B,SAAU58B,KAAK48B,UAGxB,oBC3EH,MAAMi4B,EAAmB,EAAQ,OAmBjCt1D,EAAOC,QAjBP,cAA2Bq1D,EASxBlB,aAAaC,EAAM/0D,GAChBiB,MAAM6zD,aAAaC,GAGD,YAAdA,EAAK1sD,MAAoBlH,KAAKkjG,yBAAyBrkG,EAC9D,oBCRH,MAAMo2D,EAAkB,EAAQ,OAQhC11D,EAAOC,QANP,cAA0By1D,EACvBtB,aAAaC,EAAM/0D,GAChBiB,MAAM6zD,aAAaC,EACtB,oBCLH,MAAMsB,EAAoB,EAAQ,OAelC31D,EAAOC,QAbP,cAA4B01D,qBCF5B,MAAME,EAAmB,EAAQ,MAWjC71D,EAAOC,QATP,cAA2B41D,oBCiC3B,MAAMC,EAAmB,EAAQ,OAuFjC91D,EAAOC,QArFP,cAA2B61D,EAgBxB1B,aAAaC,GACQ,YAAdA,EAAK1sD,OAENlH,KAAK68B,QAAU78B,KAAKuV,OAAOq+C,EAAK1sD,MAGhClH,KAAK2F,MAAQ3F,KAAKgF,OAAO4I,UAAU5N,KAAK68B,SAIpC78B,KAAK2F,OAA4B,kBAAnB3F,KAAK2F,MAAMvB,MAC1BpE,KAAKgzD,UAAYhzD,KAAK2F,MAAMgB,eAC5B3G,KAAKs1D,YAAct1D,KAAKgzD,UAAUn0D,GAK9BmB,KAAKorB,OAAMprB,KAAKorB,KAAKpmB,OAAShF,KAAKgzD,YAGhD,CAoBAquC,SAASjiF,EAAKvgB,GACXiB,MAAMuhG,SAASjiF,EAAKvgB,GAEpBmB,KAAK68B,QAAU78B,KAAKuV,OAAOsnB,QAI3B78B,KAAK8B,GAAGwkB,SAAStnB,IACd,IAAKgB,KAAK2F,MAAO,CAEd,MAAMA,EAAQ3G,EAAE4O,UAAU5N,KAAK68B,SAE3Bl3B,IAAO3F,KAAK2F,MAAQA,EAC3B,KAGC3F,KAAK2F,QACN3F,KAAKgF,OAAShF,KAAK2F,MAAMX,OAIrBhF,KAAK2F,OAA4B,kBAAnB3F,KAAK2F,MAAMvB,MAC1BpE,KAAKgzD,UAAYhzD,KAAK2F,MAAMgB,eAC5B3G,KAAKs1D,YAAct1D,KAAKgzD,UAAUn0D,IAG3C,oBCvHH,MAAM02D,EAAkB,EAAQ,OA2ChCh2D,EAAOC,QAzCP,cAA0B+1D,EAgBvB5B,aAAaC,GACQ,eAAdA,EAAK1sD,OACNlH,KAAKw1D,UAAYx1D,KAAKuV,OAAOq+C,EAAK1sD,MAExC,CAEAm6F,SAASjiF,EAAKvgB,GACXiB,MAAMuhG,SAASjiF,EAAKvgB,GAEpBmB,KAAKw1D,UAAYx1D,KAAKuV,OAAmB,WAEpCvV,KAAKy1D,aACPz1D,KAAKqtC,KAAKmiB,mBAAmBxvD,MAC7BA,KAAKy1D,YAAa,EAExB,CAEAyZ,eACGpvE,MAAMovE,eACDlvE,KAAKw1D,WAAgC,KAAnBx1D,KAAKw1D,WACzBx1D,KAAKs0D,eAAe,uCAE1B,oBChDH,MAAMswC,EAAa,EAAQ,MACrBC,EAAkB,WAExBtlG,EAAOC,QAAU,cAAqBolG,EAUnCzkG,YACG,OAAO,IAAI0kG,EAAgB7kG,KAC9B,CAQA63D,cAAcwP,GAEX,IAAIy9B,EAAgB,CACjB,OACA,OACA,YACA,gBAEA,iBACA,eACA,gBACA,cACA,oBACA,aACA,aAEA,SACA,WACA,UACA,aACA,cACA,UACA,YACA,eACA,iBACA,WACA,gBAEA,MACA,MACA,OACA,OAEA,SACA,aACA,eAQH,OALoB9kG,KAAK8E,YAAYijB,UACCnf,QAAQtF,IACM,GAA1CwhG,EAAc53F,QAAQ5J,EAAE0qC,SAAS5pC,MAI9C,CAEA2gG,WAAWz8B,GACRtoE,KAAKoP,KAAK,aAAck5D,EAC3B,CAEAgH,cAEG,IAAIuI,EAAc/3E,MAAMwvE,cASxB,OARAtvE,KAAKynB,QAAQzjB,SAASiP,IACnB4kE,EAAcA,EAAY/vD,OAAO7U,EAAEq8D,cAAc,KAGnDtvE,KAAK6lB,WAAa,IAAI7hB,SAASge,IAC7B61D,EAAcA,EAAY/vD,OAAO9F,EAAEstD,cAAc,IAG7CuI,EAAYjvE,QAAQkvE,GAAMA,GACpC,CAEA5I,eACGpvE,MAAMovE,eAEN,IAAIlnD,EAAWhoB,KAAKynB,SAEnBznB,KAAK67D,gBAAkB,IAAI73D,SAASnF,IAClCmB,KAAKovE,gBAAgB,2BAA2BvwE,KAAM,IAGzDmpB,EAAShkB,SAASiP,IACfA,EAAEi8D,cAAc,IAIflvE,KAAKmG,SAAS4vD,aACN/1D,KAAKimB,iBAAmBjmB,KAAK4rB,gBAEnC5rB,KAAKovE,gBACF,iCAAiCpvE,KAAKmG,SAAS4vD,eAI3D,CAEAqZ,gBAAgBnwD,EAAKtV,EAAO,CAAC,GAC1B,IAAIsH,EAAU,GAAGjR,KAAKoE,OAAOpE,KAAKkH,UAAU+X,IAC5Cjf,KAAKwvE,UAAUnrE,KAAK,CAAE4M,UAAStH,QAClC,oBClHH,MAAMq7F,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3C1lG,EAAOC,QAAU,cAAgCwlG,EAM9C7kG,YACG,OAAO,IAAI8kG,EAA2BjlG,KACzC,CAEAkvE,eACGpvE,MAAMovE,eAEGlvE,KAAK4rB,gBAEX5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,cAG5D,oBCtBH,MAAMmvC,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3C5lG,EAAOC,QAAU,cAAgC0lG,EAM9C/kG,UAAUN,GACP,OAAO,IAAIslG,EAA2BnlG,KAAMH,EAC/C,CAEAqvE,eACGpvE,MAAMovE,eAEGlvE,KAAK4rB,gBAEX5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,eAIpD/1D,KAAKmG,SAASkwD,mBAAmBnwD,QACnClG,KAAKovE,gBAAgB,6CAE3B,8ECxBY,MAAMg2B,UAAgCP,EAAA,EAClDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,kBAAkBwlG,EAASxmG,KACrCQ,OAAOoyB,OACJ,CACG6zE,SAAU,IAEbplG,IAINF,KAAKulG,kBAAoB,KACtBvlG,KAAKqK,QAAQ,EAGhBrK,KAAKwlG,kBAAoB,OAIzBxlG,KAAKylG,kBAAoB,CAACC,EAAUC,KAIjC,MAAMlyE,EAAKzzB,KAAK4rB,eAEX6H,IAELA,EAAG5E,gBAAgB82E,GACnBlyE,EAAGhD,aAAY,EAGlBzwB,KAAK4lG,cAAgB,KAClB5lG,KAAKykF,MAAM,EAGdzkF,KAAK6lG,eAAiB,KACnB7lG,KAAK6kF,OAAO,CAElB,CAEApkF,KACG,MAAMP,EAAMF,KAAKE,IAEXmlG,EAAWrlG,KAAKU,KAEtBV,KAAK8lG,SAAWT,EAAS3jD,aACzB1hD,KAAK+lG,SAAWV,EAASW,eAAe7lG,YAExC,MAAM2hG,EAAS,CAAC,EACV37F,EAAWnG,KAAKmG,SAEC,IAAnBA,EAASpF,OACV1B,OAAOoyB,OAAOqwE,EAAQ,CACnB/gG,MAAO,IAGb,MAAMklG,EAAMnmG,MAAMW,GAAG,CAClB,CACGiB,YAAY,EACZR,KAAM,CACH4gG,EACA,CACGpgG,YAAY,EACZE,KAAM,CACH5B,KAAK8lG,SAASrlG,KACd,CACG5B,GAAIqB,EAAIolG,SACR5kG,KAAM,WACNQ,KAAM,GACNH,MAAOoF,EAASpF,MAChBD,OAAQqF,EAASrF,OACjBolG,WAAY,CACT7V,OAAQlqF,EAAS8wD,SACjBkvC,SAAUhgG,EAAS+wD,WACnBv1D,KAAMwE,EAASgxD,gBAElBh1D,GAAI,CACDkI,OAAQ,KACL,MAAM+7F,EAAc1iG,GACjBxD,EAAIolG,UACLe,iBAEFrmG,KAAKsmG,YAAYF,EAAY,MAM5CtE,MAOT,cAFOmE,EAAItkG,KAEJskG,CACV,CAGA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM2xB,EAAKzzB,KAAK4rB,eAEhB,IAAK6H,EAKF,YAJA3xB,EAAGqG,OAAO8uB,QAAQ,qBAAqBxD,IAAM,CAC1CxiB,QAAS,sCAMf,MAAMjM,EAASyuB,EAAG9H,WAElB,IAAK3mB,EAKF,YAJAlD,EAAGqG,OAAOC,UAAU,aAAaqrB,IAAM,CACpCxiB,QAAS,8BAMfwiB,EAAGuD,eAAe,WAAYh3B,KAAKulG,mBACnC9xE,EAAGtxB,GAAG,WAAYnC,KAAKulG,mBAEvB9xE,EAAGuD,eAAe,SAAUh3B,KAAKwlG,mBACjC/xE,EAAGtxB,GAAG,SAAUnC,KAAKwlG,mBAErB/xE,EAAGuD,eAAe,SAAUh3B,KAAKwlG,mBACjC/xE,EAAGtxB,GAAG,SAAUnC,KAAKwlG,mBAErB/xE,EAAGuD,eAAe,SAAUh3B,KAAKwlG,mBACjC/xE,EAAGtxB,GAAG,SAAUnC,KAAKwlG,mBAErB/xE,EAAGuD,eAAe,mBAAoBh3B,KAAK4lG,eAC3CnyE,EAAGtxB,GAAG,mBAAoBnC,KAAK4lG,eAE/BnyE,EAAGuD,eAAe,kBAAmBh3B,KAAK6lG,gBAC1CpyE,EAAGtxB,GAAG,kBAAmBnC,KAAK6lG,gBAE1B7lG,KAAKmG,SAASixD,iBACf3jC,EAAGuD,eAAe,eAAgBh3B,KAAKulG,mBACvC9xE,EAAGtxB,GAAG,eAAgBnC,KAAKulG,oBAG9B,MAAMF,EAAWrlG,KAAKU,KAGtB2kG,EAAS3jD,aAAa38C,WAAWC,GACjCqgG,EAAS3jD,aAAa6kD,SAASvmG,MAE/BA,KAAK8lG,SAASziG,KAAKrD,KAAK8B,IACxB9B,KAAK8lG,SAAS9uE,eAAe,cAAeh3B,KAAKylG,mBACjDzlG,KAAK8lG,SAAS3jG,GAAG,cAAenC,KAAKylG,mBAGrCzlG,KAAK+lG,SAAS1iG,KAAK,CAChB3C,KAAM2kG,EACNz5E,eAAgB6H,IAInB,MAAM+yE,EAAgB9iG,GAAG1D,KAAKE,IAAIolG,WAAW/3F,MAEzCi5F,IACDA,EAAc7c,aACX,UACA,GAAG0b,EAASjhG,OAAOihG,EAASxmG,MAE/B2nG,EACI/xB,cAAc,2BACbgyB,mBAAmB9c,aAClB,UACA,GAAG0b,EAASjhG,uBAAuBihG,EAASxmG,MAElD2nG,EACI/xB,cAAc,2BACbgyB,mBAAmB9c,aAClB,UACA,GAAG0b,EAASjhG,mBAAmBihG,EAASxmG,MAGpD,CAWA6nG,UACG,MAAMjzE,EAAKzzB,KAAK4rB,eAEX6H,IAELA,EAAGuD,eAAe,WAAYh3B,KAAKulG,mBAE/BvlG,KAAKwlG,oBACN/xE,EAAGuD,eAAe,SAAUh3B,KAAKwlG,mBACjC/xE,EAAGuD,eAAe,SAAUh3B,KAAKwlG,mBACjC/xE,EAAGuD,eAAe,SAAUh3B,KAAKwlG,oBAGpC/xE,EAAGuD,eAAe,mBAAoBh3B,KAAK4lG,eAE3CnyE,EAAGuD,eAAe,kBAAmBh3B,KAAK6lG,gBAEtC7lG,KAAKmG,SAASixD,gBACf3jC,EAAGuD,eAAe,eAAgBh3B,KAAKulG,mBAE1CvlG,KAAK8lG,SAAS9uE,eAAe,cAAeh3B,KAAKulG,mBACpD,CAEAoB,WAAWvnF,GACR,GAAIA,GAAKsvE,IAAK,CACX,MAAMvoF,EAAWnG,KAAKmG,SAEtB,MAAO,oFAEDiZ,EAAIsvE,gEAGJtvE,EAAIsvE,kFAGJvoF,EAAS6wD,UACJ,wCACG53C,EAAIje,OAAS,WAEhB,qEAILgF,EAASkxD,aAAelxD,EAASmxD,WAC5B,oBAAoBl4C,EAAIvgB,8DACxB,mBAGLsH,EAASoxD,UAAYpxD,EAASqxD,QACzB,oBAAoBp4C,EAAIvgB,+DACxB,kPAMd,CAEK,MAAO,EACf,CAEA4lF,OACG,MAAMmiB,EAAYljG,GAAG1D,KAAKE,IAAIolG,UAE9BsB,GAAWzhG,UACXyhG,GAAWxhG,eAAe,CAAEzD,KAAM,QACrC,CAEAkjF,QACG,MAAM+hB,EAAYljG,GAAG1D,KAAKE,IAAIolG,UAE9BsB,GAAWn/F,SACXm/F,GAAWl/F,gBACd,CAEAxC,kBAAkB2hG,GACf,MAAMpzE,EAAKzzB,KAAK4rB,eAEhB,GAAK6H,GAIFozE,GAAmB7mG,KAAK8mG,YAAc,GACtCrzE,EAAGsB,WAAa/0B,KAAK+mG,UACtB,CAEC/mG,KAAKykF,OAEL,UACShxD,EAAG7E,SAAS5uB,KAAK+mG,WAAa,EAMvC,CALE,MAAO7+F,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QACG,4EAET,CAEAjR,KAAK6kF,OACR,CACH,CAEAx6E,OAAOq7F,EAAW1lG,KAAK8lG,SAASkB,aAC7B,MAAM9mG,EAAMF,KAAKE,IACXuzB,EAAKzzB,KAAK4rB,eAEhB,IAAK6H,EAAI,OAET,MAAMjc,EAAMic,EAAG9H,WAEf,IAAKnU,EAAK,OAEV,MAAM7R,EAAQ3F,KAAKU,KAAKo3D,WAExB,IAAKnyD,EAAO,OAEZ,GAAI8tB,EAAGtH,YAAcsH,EAAGhJ,eAAeC,WAKpC,YAHA+I,EAAG7E,WAMN,MAAMzoB,EAAWnG,KAAKmG,SAEtB,IAAIvE,EAAO6xB,EAAGkB,QAAQ+wE,GAGtB,GAAIv/F,EAASixD,eAAgB,CAC1B,MAAM6vC,EAASxzE,EAAGjH,YAEdy6E,IACDrlG,EAAOA,EAAKgH,QACR2G,IACGA,EAAEiI,EAAI6X,OAAS9f,EAAE1Q,IAAM0Q,MACvB03F,EAAOzvF,EAAI6X,OAAS43E,EAAOpoG,IAAMooG,KAE9C,CAEA,MAAMC,EAAS,GAEftlG,EAAKoC,SAASuL,IACX,MAAM43F,EAAU53F,EAAE5J,EAAMkB,YAExB,GAAIsgG,EAAS,CACV,MAAMC,EAAU,CACbvoG,GAAI0Q,EAAE1Q,GACN6vF,IAAK,SAASyY,KAIbhhG,EAAS6wD,YAAWowC,EAAQjmG,MAAQqW,EAAI2vB,YAAY53B,IAExD23F,EAAO7iG,KAAK,CACTpD,IAAK,QACLS,YAAY,EACZilE,SAAU,IAAIpxD,IACJvV,KAAK2mG,cAAcpxF,GAE7B5L,KAAMy9F,GAEZ,KAGH,MAAMC,EAAKrnG,KAAK8B,GAGZ6D,EAAMQ,SAASu8C,iBAChBwkD,EAAO9zE,QAAQ,CACZnyB,IAAK,QACL0lE,SAAU,IAAIpxD,IAAWvV,KAAK2mG,cAAcpxF,GAC5C5L,KAAM,CACH9K,GAAIwoG,EAAG73F,OACPk/E,IAAK,SAAS/oF,EAAMQ,SAASu8C,kBAC7BvhD,MAAOnB,KAAKmB,MAAM,oBAKvB+lG,EAAOhhG,OAAS,GACjBghG,EAAO7iG,KAAK,CACTzC,KAAM,CACH,CACGlB,KAAM,QACNU,MAAO,SACPN,OAAQqF,EAASrF,OACjBK,MAAO,+PAEV,CACGT,KAAM,QACNU,MAAO,SACPD,MAAOnB,KAAKmB,MAAM,gBAM9BnB,KAAK+mG,UAAYnlG,EAAKsE,OAGtBlG,KAAK8mG,YAAcI,EAAOhhG,OAE1B,MAAM0gG,EAAYljG,GAAGxD,EAAIolG,UACnBgC,EAAUD,EAAG1sF,MAEnB,GAAIisF,EAAW,CAEZU,EAAQ7mG,GAAGymG,EAAQN,GAGnBU,EAAQ7jG,OAAOmjG,EAAWU,EAAQ3jG,aAGlC,MAAM4zD,EAAWpxD,EAASoxD,SACpBF,EAAclxD,EAASkxD,YAG7BuvC,EAAUr5F,MAAMg6F,QAAWtoG,IACxB,GAAIA,EAAE4rD,OAAOiD,UACV,GAAI7uD,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,qBAAuB,EAAG,CACtDo6F,EAAQ1Z,KAAK9a,UAAU8zB,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAIl5E,EAAQvvB,EAAE4rD,OAAOqhC,aAAa,aAClClsF,KAAK+lG,SAAShB,WAAWxtC,EAAU/oC,EACtC,MAAO,GACJvvB,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,uBAAyB,EACrD,CACCo6F,EAAQ1Z,KAAK9a,UAAU8zB,EAAUY,UAAW,cAC5CF,EAAQG,WAAWC,OACnB,IAAIl5E,EAAQvvB,EAAE4rD,OAAOqhC,aAAa,aAClClsF,KAAK+lG,SAAShB,WAAW1tC,EAAa7oC,EACzC,MACGvvB,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,2BAA6B,IAExD05F,EAAUpiG,OAAO,MAAO,cACxB8iG,EAAQG,WAAW1tF,IAAI7Z,EAAIolG,SAAU,CAClCtkG,KAAM,CACHN,KAAM,UACNO,IAAK,aACL+H,SAAU,CACP,CAAC,EACD,CACGtI,KAAM,OACN0K,KAAM,cACN9J,MAAO,WACJgmG,EAAQ1Z,KAAK9a,UACV8zB,EAAUY,UACV,cAEHF,EAAQG,WAAWC,MACtB,OAMlB,CAEN,CACH,CAEAC,gBAAgBp6F,GACbvN,KAAK8lG,SAAS8B,UAAUr6F,EAC3B,4BC5cH,MAAMs6F,EAAqB,EAAQ,KAWpB,MAAMC,UAAuBD,EACzCloG,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,EACtC,CAYAzgC,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAK0hD,aAAagV,aAAa12D,KAAKmG,SAASyC,OAChD,CAOAzI,YACG,IAAIszB,EAAKzzB,KAAK4rB,eAMd,OALI6H,IACDzzB,KAAK0hD,aAAa38C,WAAW0uB,EAAG9H,YAChC3rB,KAAK0hD,aAAagV,aAAa12D,KAAKmG,SAASyC,SAGzC,IAAIw8F,EAAwBplG,KACtC,CAEIH,aACD,MAAO,kBAAkBG,KAAKnB,IACjC,CAEI6iD,mBAOD,OAN2B,MAAvB1hD,KAAK+nG,iBACN/nG,KAAK+nG,eAAiB,IAAIC,EAAA,EACvBhoG,KAAK8B,GACL9B,KAAKH,SAGJG,KAAK+nG,cACf,CAEI/B,qBAID,OAH6B,MAAzBhmG,KAAKioG,mBACNjoG,KAAKioG,iBAAmB,IAAIC,EAAA,GAExBloG,KAAKioG,gBACf,CAEA/4B,eACGpvE,MAAMovE,eAEMlvE,KAAK83D,YAEd93D,KAAKovE,gBACF,6BAA6BpvE,KAAKmG,SAASR,SAGpD,oBC9EH,MAAMwiG,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErC7oG,EAAOC,QAAU,cAA0B2oG,EAgBxChoG,YACG,OAAO,IAAIioG,EAAqBpoG,KACnC,CAEAgG,WAAWN,GACR5F,MAAMkG,WAAWN,GACjB1F,KAAKqoG,aACR,CAEAC,aAGG,OAFKtoG,KAAKuoG,WAAUvoG,KAAKuoG,SAAW,IAAI/kG,MAAM8uE,gBAEvCtyE,KAAKuoG,QACf,CAEAF,cACG,MAAMz7E,EAAK5sB,KAAK4rB,eAChB,GAAU,MAANgB,EAAY,OAAO5sB,KAAKwoG,QAE5B,MAAMC,EAAWzoG,KAAKo5D,aAChBsvC,EAAW1oG,KAAKq5D,aAChBsvC,EAAY3oG,KAAKs5D,cAEvB,IAAKmvC,IAAaC,EAAU,OAAO1oG,KAAKwoG,QAGxC,MAAMI,EAAgBF,EAAS7hG,WAE/B,IAAIgiG,EAAiB,GAEjB7oG,KAAKmG,SAAS8yD,gBAAkB0vC,IACjCE,EAAiBF,EAAU9hG,YAG9B,MAAMiiG,EAAY,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGGC,EAAQn8E,EAAG+H,UAEjB,IAAIoN,EAAU,GACVinE,EAAU,CAAC,EACXC,EAAY,EACZC,EAAa,EACbC,EAAcJ,EAAM7iG,OAExB6iG,EAAM/kG,SAASgK,IACZ,MAAM6nD,EAAW4yC,EAASjoF,OAAOxS,IAASA,EAAKnP,GAE/C,IAAI48C,EAAYP,WAAWltC,EAAK46F,IAAkB,GAC9CQ,EAAa,KAKjB,OAHIppG,KAAKmG,SAAS8yD,iBACfmwC,EAAaluD,WAAWltC,EAAK66F,KAAoB,GAE5CH,EAAStkG,KAEd,IAAK,UACFq3C,EAAYitD,EAASloF,OAAOxS,GAE5B,MAGH,IAAK,YACFytC,EAAYP,WACTwtD,EAAS/oG,YAAYo8C,YAClB2sD,EAAS1jG,OACT0jG,EAASviG,SAASi1C,QAClBptC,EACA06F,EAASviG,SAASm1C,gBAU9B,GAAyB,MAArB0tD,EAAQnzC,GAAmB,CAC5B,IAAI10D,EAAQ00D,EAGZ,GAAI4yC,EAAS9jE,aAAc,CACxB,IAAI0kE,EAAeZ,EAASnsD,mBAAmBtuC,GAC3B,MAAhBq7F,IAEEloG,EADC6L,MAAMC,QAAQo8F,GACPA,EACJ3qG,KAAKiX,GAAQA,EAAI1H,MAAQ,KACzBC,KAAK,MACCm7F,EAAap7F,KAEhC,CAEIjO,KAAKmG,SAAS8yD,eACf+vC,EAAQnzC,GAAY,CACjB10D,MAAOA,GAAS6M,EAAKnP,GACrB6D,MAAO,EACP4mG,OAAQ,GAGXN,EAAQnzC,GAAY,CACjB10D,MAAOA,GAAS6M,EAAKnP,GACrB6D,MAAO,EAGhB,CAEAsmG,EAAQnzC,GAAUnzD,OAAS+4C,EAC3BwtD,GAAaxtD,EAETz7C,KAAKmG,SAAS8yD,iBACf+vC,EAAQnzC,GAAUyzC,QAAUF,EAC5BF,GAAcE,EACjB,IAGH,IAAIx9F,EAAQ,EAEZ,IAAK,MAAMxH,KAAO4kG,EAAS,CACxB,IAAIrzF,EAAMqzF,EAAQ5kG,GAAK1B,MAEvB,KAAIiT,GAAO,GAAX,CASA,GANI3V,KAAKmG,SAAS4yD,eACfpjD,EAAOA,EAAMszF,EAAa,IAC1BtzF,EAAMrP,KAAK2zC,MAAY,IAANtkC,GAAa,IAC9BA,GAAY,MAGX3V,KAAKmG,SAAS8yD,eAAgB,CAC/B,IAAIswC,EAAOP,EAAQ5kG,GAAKklG,OAExB,GAAIC,GAAQ,EAAG,SAGXvpG,KAAKmG,SAAS4yD,eACfwwC,EAAQA,EAAOL,EAAc,IAC7BK,EAAOjjG,KAAK2zC,MAAa,IAAPsvD,GAAc,IAChCA,GAAc,MAGjBxnE,EAAQ19B,KAAK,CACVlD,MAAO6nG,EAAQ5kG,GAAKjD,MACpBuB,MAAOiT,EACP2zF,OAAQC,EACRn+B,MAAO09B,EAAUl9F,EAAQk9F,EAAU5iG,QACnCsrB,MAAO23E,GAEb,MACGpnE,EAAQ19B,KAAK,CACVlD,MAAO6nG,EAAQ5kG,GAAKjD,MACpBuB,MAAOiT,EACPy1D,MAAO09B,EAAUl9F,EAAQk9F,EAAU5iG,QACnCsrB,MAAO23E,IAIbv9F,GAAS,CArCa,CAsCzB,CAEA,MAAM48F,EAAUxoG,KAAKsoG,aAErBE,EAAQxtF,WACRwtF,EAAQvxF,MAAM8qB,EACjB,CAEAmtC,eACGpvE,MAAMovE,eAEWlvE,KAAKo5D,cAEnBp5D,KAAKovE,gBACF,6BAA6BpvE,KAAKmG,SAAS0yD,gBAIhC74D,KAAKq5D,cAEnBr5D,KAAKovE,gBACF,6BAA6BpvE,KAAKmG,SAASyyD,eAIpD,mBCrNH,MAAM4wC,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzClqG,EAAOC,QAAU,cAA8BgqG,EAU5CrpG,YACG,OAAO,IAAIspG,EAAyBzpG,KACvC,oBCfH,MAAM0pG,EAAqB,EAAQ,MAC7BC,EAA0B,EAAQ,OAExCpqG,EAAOC,QAAU,cAA6BkqG,EAU3CvpG,YACG,OAAO,IAAIwpG,EAAwB3pG,KACtC,oBCfH,MAAM21D,EAAe,EAAQ,MACvBi0C,EAAgC,EAAQ,OAE9CrqG,EAAOC,QAAU,cAAmCm2D,EAMjDx1D,YACG,OAAO,IAAIypG,EAA8B5pG,KAC5C,CAEI4rB,qBACD,OAAO5rB,KAAK0U,OAAOkX,cACtB,mBCfH,MAAMi+E,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzCvqG,EAAOC,QAAU,cAA8BqqG,EAU5C1pG,YACG,OAAO,IAAI2pG,EAAyB9pG,KACvC,oBCfH,MAAM+pG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExCzqG,EAAOC,QAAU,cAA6BuqG,EAU3C5pG,YACG,OAAO,IAAI6pG,EAAwBhqG,KACtC,oBCfH,MAAMiqG,EAAoB,EAAQ,OAC5BC,EAAyB,EAAQ,OAEvC3qG,EAAOC,QAAU,cAA4ByqG,EAU1C9pG,YACG,OAAO,IAAI+pG,EAAuBlqG,KACrC,CAEAkvE,eACGpvE,MAAMovE,eAEN,IAAIvpE,EAAQ3F,KAAKu6D,eACZ50D,GACF3F,KAAKovE,gBACF,4BAA4BpvE,KAAKmG,SAAS2zD,eAIhDn0D,EAAQ3F,KAAKw6D,kBACR70D,GACF3F,KAAKovE,gBACF,+BAA+BpvE,KAAKmG,SAAS4zD,kBAInDp0D,EAAQ3F,KAAKy6D,eACR90D,GACF3F,KAAKovE,gBACF,4BAA4BpvE,KAAKmG,SAAS6zD,cAGnD,oBCxCH,MAAMmwC,EAAiC,EAAQ,OACzCC,EAAsC,EAAQ,OAEpD7qG,EAAOC,QAAU,cAAyC,EAQvDW,YACG,OAAO,IAAIiqG,EAAoCpqG,KAClD,CAEAkF,aACG,MAAMmlG,EAASrqG,KAAKynB,QAAQuF,MAAM/Z,GAAiB,OAAXA,EAAE/L,OACpCojG,EAAWtqG,KAAKynB,QAAQuF,MAAM/Z,GAAiB,SAAXA,EAAE/L,OACtCqjG,EAAc,GAEhBF,GAAQE,EAAYlmG,KAAKgmG,EAAO1iG,QAEhC2iG,GAAUC,EAAYlmG,KAAKimG,EAAS3iG,cAElC0H,QAAQkS,IAAIgpF,SAEZzqG,MAAM6H,MACf,CAEAunE,eACGpvE,MAAMovE,eAEGlvE,KAAK4rB,gBAEX5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,eAKrD/1D,KAAKmG,SAAS0jB,kBACkC,GAAjD7pB,KAAKmG,SAAS0jB,kBAAkBxI,OAAOnb,QAEvClG,KAAKovE,gBAAgB,+BAE3B,kGC3CY,MAAMo7B,UAAyC3F,EAAA,EAC3DllG,YAAY0lG,EAAUoF,EAAQvqG,GAC3BJ,MACGulG,EACAoF,GAAU,2BAA2BpF,EAASxmG,KAC9CQ,OAAOoyB,OACJ,CACG7oB,OAAQ,GACR4R,MAAO,IAEVta,IAINF,KAAK2F,MAAQ,IAChB,CAEAlF,KACG,MAAMP,EAAMF,KAAKE,IACX+lG,EAAMnmG,MAAMW,GAAG,CAClB,CACGkB,KAAM,QACND,YAAY,EACZR,KAAM,CACH,CACGR,KAAM,OACN0K,KAAM,eACNhK,MAAO,OACP+oC,UAAU,GAEb,CACGzpC,KAAM,QACN7B,GAAIqB,EAAI0I,OACR/G,WAAY7B,KAAK8B,GAAGC,WAAWC,SAASgb,iBACxCmtB,UAAU,EACVhoC,GAAI,CACDC,SAAWvD,GAAOmB,KAAK0qG,mBAAmB7rG,KAGhD,CACG6B,KAAM,OACN7B,GAAIqB,EAAIsa,MACRpP,KAAM,cACNhK,MAAO,OACP+oC,UAAU,EACVwgE,QAAS3qG,KAAKmB,MAAM,uBACpBgB,GAAI,CACD+H,YAAa,IAAMlK,KAAK4qG,2BASvC,cAFO3E,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM2xB,EAAKzzB,KAAK4rB,eAEhB,IAAK6H,EAAI,OAET,MAAMzuB,EAASyuB,EAAG9H,WAElB,IAAK3mB,EAAQ,OAEb,MAAOW,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe7G,KAAKmG,SAASR,QAGzC,IAAKA,EASF,YARA3F,KAAK8B,GAAGqG,OAAOC,UACZ,sBAAsBpI,KAAKmG,SAASR,aAAaX,EAAOkC,OACxD,CACGgI,QAAS,0CACTvF,KAAM,CAAExD,SAAUnG,KAAKmG,YAOhCnG,KAAK2F,MAAQA,EAEb,MAAMzF,EAAMF,KAAKE,IACX0gF,EAAUp9E,MAAM/C,GAAG,CACtBC,KAAM,UACNkI,OAAQ,EAAGlG,SAASgT,IACjBhT,EAAM2V,cAAc65B,SAASx8B,EAAO2C,eACvClW,GAAI,CACDkI,OAAQ,KACL1E,EAAM0jF,sBAAsB3lF,GAAGxD,EAAI0I,QAASjD,EAAO,CAAC,EAAE,KAI/DA,EAAMghF,sBAAsB/F,EAAS,KAAMj7E,GAE3C,MAAMklG,EAAUnnG,GAAGxD,EAAI0I,QAEvBiiG,EAAQrmG,OAAO,UAAWo8E,GAC1BiqB,EAAQrmG,OAAO,QAAS,GAAGxE,KAAKmB,MAAM,gBAAgBwE,EAAMxE,SAC5D0pG,EAAQpjG,SACRojG,EAAQpmG,SACX,CAEAmmG,qBACG,MAAM1qG,EAAMF,KAAKE,IACX0sB,EAAK5sB,KAAK4rB,eAEhBgB,EAAGiC,gBAAgB,CAAE/E,KAAM,MAAOzI,MAAO,KACzCuL,EAAG6D,aAGH,MAAMo6E,EAAUnnG,GAAGxD,EAAI0I,QAEvBiiG,EAAQ7nB,aACR6nB,EAAQjmG,WACRimG,EAAQ5nB,eACRv/E,GAAGxD,EAAIsa,OAAOrV,SACjB,CAEAulG,mBAAmBI,GAChB,MAAMC,EAAa,CAChB3mG,IAAKpE,KAAK2F,MAAM9G,GAChBkxB,KAAM,SACNrtB,MAAOooG,GAEJl+E,EAAK5sB,KAAK4rB,eAEhBgB,EAAGiC,gBAAgB,CAAE/E,KAAM,MAAOzI,MAAO,CAAC0pF,KAC1Cn+E,EAAG6D,aACH/sB,GAAG1D,KAAKE,IAAIsa,OAAO/S,QACtB,ECvIY,MAAMujG,UAAgC,KAMlD7qG,YACG,OAAO,IAAIqqG,EAAiCxqG,KAC/C,oBCXH,MAAMirG,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC3rG,EAAOC,QAAU,cAA8ByrG,EAU5C9qG,YACG,OAAO,IAAI+qG,EAAyBlrG,KACvC,CAEAkvE,eACGpvE,MAAMovE,eAIiB,GAFRlvE,KAAKynB,QAEPvhB,QACVlG,KAAKovE,gBAAgB,iBAO3B,4ICzBY,MAAM+7B,UAAkCtG,EAAA,EACpDllG,YAAY0lG,EAAUoF,EAAQvqG,GAC3BJ,MACGulG,EACAoF,GAAU,oBAAoBpF,EAASxmG,KACvCQ,OAAOoyB,OACJ,CACG7oB,OAAQ,GACR4R,MAAO,GACP4wF,WAAY,GACZC,aAAc,GACdC,oBAAqB,IAExBprG,IAINF,KAAKurG,oBAAsB,CAAC7F,EAAUC,KACnC3lG,KAAKwrG,mBAAmB9F,EAAUC,EAAY,EAGjD3lG,KAAK2F,MAAQ,KACb,MAAM0hG,EAAKrnG,KAAK8B,GAIhB9B,KAAKyrG,mBAAqB,IAAI,IAC3B,+BAA+BzrG,KAAKmG,SAAS4vD,cAEhD/1D,KAAKyrG,mBAAmBpoG,KAAKgkG,GAC7BrnG,KAAKyrG,mBAAmBtpG,GAAG,WAAYupG,IACpC1rG,KAAK2rG,iBAAiBD,EAAY,IAGrC1rG,KAAK0hD,aAAe,IAAI,IACrB1hD,KAAK8B,GACL,iCAAiC9B,KAAKmG,SAAS4vD,cAElD/1D,KAAK0hD,aAAav7C,SAAW,CAC1Bo/D,aAAc,EACdC,mBAAoB,UACpBC,gBAAiB,GAEpBzlE,KAAK0hD,aAAar+C,KAAKgkG,GACvBrnG,KAAK0mG,UACL1mG,KAAK0hD,aAAav/C,GAAG,cAAenC,KAAKurG,oBAC5C,CAEAK,aACG,MAAMC,EAAS7rG,KAAKE,IAAIC,UACxB,MAAO,CACJ,CACGc,IAAK,UACL6qG,UAAW,GACXlqG,KAAM,CACH,CAAC,EACD,CACGV,KAAM,CACH,CACGH,MAAO,IAEV,CACGL,KAAM,SACNiB,KAAM,OACNyJ,KAAM,eACNrK,MAAO,GACPlC,GAAImB,KAAKE,IAAImrG,aACbpqG,IAAK,+BAA+BjB,KAAKmG,SAAS4vD,aAClDz0D,MAAO,CAACzC,EAAI2xB,KACTxwB,KAAK+rG,cAAcroG,GAAG1D,KAAKE,IAAImrG,cAAc99F,MAAM,EAEtDpL,GAAI,CACDy8E,cAAe,WACZ5+E,KAAKgsG,eAAeriB,aACjB,UACA,GAAGkiB,kBAET,IAGN,CACGnrG,KAAM,SACNiB,KAAM,OACNyJ,KAAM,aACNrK,MAAO,GACPlC,GAAImB,KAAKE,IAAIkrG,WACbnqG,IAAK,6BAA6BjB,KAAKmG,SAAS4vD,aAChDz0D,MAAO,CAACzC,EAAI2xB,KACTxwB,KAAKisG,SAASvoG,GAAG1D,KAAKE,IAAIkrG,YAAY79F,MAAM,EAE/CpL,GAAI,CACDy8E,cAAe,WACZ5+E,KAAKgsG,eAAeriB,aACjB,UACA,GAAGkiB,gBAET,IAGN,CACGhtG,GAAImB,KAAKE,IAAIorG,oBACb5qG,KAAM,SACNy+E,YAAan/E,KAAKmB,MAAM,YACxBF,IAAK,sBAAsBjB,KAAKmG,SAAS4vD,aACzCh1D,MAAO,EACPkiB,WAAY,CACT,UAAW,GAAGjjB,KAAKE,IAAIC,0BACvByrB,eAAgB5rB,KAAKmG,SAAS4vD,YAEjC5zD,GAAI,CACDk/E,gBAAiB,KACd,MAAMj8D,EAAa1hB,GAChB1D,KAAKE,IAAIorG,qBACVx/F,WAGS9L,KAAK4rB,eACbzlB,SAASyjB,gBAAgBxE,WACzBA,EAEHplB,KAAK0hD,aAAawqD,mBAAmB9mF,EAAW,IAIzD,CACGrkB,MAAO,MAIhB,CAAC,IAIb,CAEAorG,mBACG,MAAO,CACJ,CACGlrG,IAAK,UACL6qG,UAAW,GACX5qG,KAAM,CACH,CACGH,MAAO,IAEV,CACGa,KAAM,CACH,CAAC,EACD,CACGlB,KAAM,YACN8B,MAAO,CACJ,CACGvB,IAAK,UACLP,KAAM,QACN7B,GAAImB,KAAKE,IAAI0I,OACb/G,WAAY,EACZuqG,UAAU,EACVjiE,UAAU,EACVhoC,GAAI,CACDC,SAAWvD,GAAOmB,KAAK0qG,mBAAmB7rG,KAGhD,CACG6B,KAAM,OACN7B,GAAImB,KAAKE,IAAIsa,MACbpP,KAAM,cACNihG,MAAO,GACPC,IAAK,EACLvrG,MAAO,GACPD,OAAQ,GACRw7E,QAAQ,EACRquB,QAAS3qG,KAAKmB,MAAM,sBACpBgB,GAAI,CACD+H,YAAa,IACVxG,GAAG1D,KAAKE,IAAI0I,QAAQhE,eAKnC,CAAC,IAGP,CACG7D,MAAO,MAKtB,CAEAN,KACG,GAA8B,YAA1BT,KAAKmG,SAAS04D,UACf,IAAK7+D,MAAMmG,UAAU4vD,WAAY,MAAO,CAAEj1D,OAAQ,QAElD,IAAKd,MAAMmG,UAAU4vD,aAAe/1D,MAAMmG,UAAUR,MACjD,MAAO,CAAE7E,OAAQ,GAGvB,MAAML,EACuB,YAA1BT,KAAKmG,SAAS04D,SACT7+D,KAAK4rG,aACL5rG,KAAKmsG,mBACPlG,EAAMnmG,MAAMW,GAAGA,GAIrB,cAFOwlG,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM2xB,EAAKzzB,KAAK4rB,eAEhB,IAAK6H,EAAI,OAET,MAAMzuB,EAASyuB,EAAG9H,WAElB,GAAK3mB,EAEL,GAA8B,YAA1BhF,KAAKmG,SAAS04D,SACX7+D,KAAKmG,SAAS44D,UACf/+D,KAAKyrG,mBAAmB1mG,WAAWC,GAEnChF,KAAKyrG,mBAAmBx/F,YACrBwnB,GAAIttB,UAAUyjB,iBAAiBxd,aAGlC1I,GAAG1D,KAAKE,IAAIkrG,YAAY1mG,OAEvB1E,KAAKmG,SAAS24D,WACf9+D,KAAK0hD,aAAa38C,WAAWC,GAE7BtB,GAAG1D,KAAKE,IAAImrG,cAAc3mG,YAEzB,GAA8B,aAA1B1E,KAAKmG,SAAS04D,SAAyB,CAC/C,MAAOl5D,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe7G,KAAKmG,SAASR,QAGzC,IAAKA,EASF,YARA3F,KAAK8B,GAAGqG,OAAOC,UACZ,sBAAsBpI,KAAKmG,SAASR,aAAaX,EAAOkC,OACxD,CACGgI,QAAS,mCACTvF,KAAM,CAAExD,SAAUnG,KAAKmG,YAOhCnG,KAAK2F,MAAQA,EAEb,MAAMzF,EAAMF,KAAKE,IACX0gF,EAAUp9E,MAAM/C,GAAG,CACtBC,KAAM,UACNkI,OAAQ,EAAGlG,SAASgT,IACjBhT,EAAM2V,cAAc65B,SAASx8B,EAAO2C,eACvClW,GAAI,CACDkI,OAAQ,KACL1E,EAAM0jF,sBAAsB3lF,GAAGxD,EAAI0I,QAASjD,EAAO,CAAC,EAAE,GAG5D4hF,gBAAgB,IAEnB5hF,EAAMghF,sBAAsB/F,EAAS,KAAMj7E,GAE3C,MAAMklG,EAAUnnG,GAAGxD,EAAI0I,QAEvBiiG,EAAQrmG,OAAO,UAAWo8E,GAC1BiqB,EAAQrmG,OACL,cACA,GAAGxE,KAAKmB,MAAM,gBAAgBwE,EAAMxE,SAEvC0pG,EAAQpjG,SACRojG,EAAQpmG,SACX,CACH,CAEA4F,SACGvK,MAAMuK,SACNrK,KAAKusG,UACR,CAEA7B,mBAAmBI,GAChB,IAAIC,EAAa,GACbD,GACDpnG,GAAG1D,KAAKE,IAAIsa,OAAO7V,OACnBomG,EAAa,CACV,CACG3mG,IAAKpE,KAAK2F,MAAM9G,GAChBkxB,KAAM,SACNrtB,MAAOooG,KAIbpnG,GAAG1D,KAAKE,IAAIsa,OAAO9V,OAEtB,MAAMkoB,EAAK5sB,KAAK4rB,eAEhBgB,EAAGiC,gBAAgB,CAAE/E,KAAM,MAAOzI,MAAO0pF,IACzCn+E,EAAG6D,YACN,CAEAw7E,SAAS1+F,GACNvN,KAAKyrG,mBAAmB9mG,KAAK4I,EAChC,CAQArI,uBAAuBsnG,EAAY,IAChC,MAAM5/E,EAAK5sB,KAAK4rB,eACX,YAAUgB,GAAIzmB,UAAUyjB,iBAAiBxd,WAAYogG,KACvD5/E,EAAGzmB,SAASyjB,gBAAgBxd,WAAaogG,QACnCxsG,KAAK4rB,eAAe6E,cAE7BzwB,KAAKusG,UACR,CAWAf,mBAAmB9F,EAAUC,EAAc,IACxC,MAAM/4E,EAAK5sB,KAAK4rB,eACX,YAAUgB,GAAIjC,aAAcg7E,KAC9B/4E,EAAGiC,gBAAgB82E,GACnB/4E,EAAG6D,aACHzwB,KAAKusG,WAEX,CAEAR,cAAcx+F,GACXvN,KAAK0hD,aAAakmD,UAAUr6F,EAC/B,CAEAg/F,WACG,MAAM3/E,EAAK5sB,KAAK4rB,eAEhB,IAAKgB,EAAI,OAET,IAAI6/E,EAAgBh+D,SAASsjD,uBAC1B,iBAAiB/xF,KAAKmG,SAAS4vD,cAGlC,MAAM22C,EAAkB1sG,KAAK0hD,aAAaikD,cAC1C,IAAIgH,EACDD,GAAiBrrF,OAAOnb,OAAS,EAC5BwmG,GAAiBrrF,OAAOnb,OACxB,KACR,IAAK,IAAIwH,KAAK++F,EACX/oG,GAAGgK,GAAGlJ,OAAO,QAASmoG,GACtBjpG,GAAGgK,GAAGjJ,UAGT,IAAImoG,EAAcn+D,SAASsjD,uBACxB,eAAe/xF,KAAKmG,SAAS4vD,cAGhC,MAAM82C,EAAgBjgF,EAAGzmB,SAASyjB,gBAAgBxd,WAClD,IAAI0gG,EAAYD,GAAe3mG,OAAS,EAAI2mG,GAAe3mG,OAAS,KAEpE,IAAK,IAAIwH,KAAKk/F,EACXlpG,GAAGgK,GAAGlJ,OAAO,QAASsoG,GACtBppG,GAAGgK,GAAGjJ,UAGT,IAAIsoG,EAAet+D,SAASsjD,uBACzB,sBAAsB/xF,KAAKmG,SAAS4vD,cAGvC,MAAM3wC,EAAawH,EAAGzmB,SAASyjB,gBAAgBxE,WAC/C,GAAkB,MAAdA,EACD,IAAK,IAAI3Y,KAAKsgG,EAAc,CACzB,IAAIC,EAAgBv+D,SAASu+D,cAE1BA,GAAe/pF,YAAY2I,gBAAgBlpB,OACxC1C,KAAKmG,SAAS4vD,YACjBi3C,GAAiBvgG,EAAEutE,qBAAqB,SAAS,IAIjDt2E,GAAG+I,GAAG7H,SAASwgB,EAErB,CAEN,CAEAshF,UACG1mG,KAAK0hD,aAAa1qB,eAAe,cAAeh3B,KAAKurG,oBAExD,EClZY,MAAM0B,UAAyB,KAO3C9sG,YACG,OAAO,IAAIgrG,EAA0BnrG,KACxC,CAEAkvE,eACGpvE,MAAMovE,eAEN,IAAI3+C,EAAKvwB,KAAK4rB,eACd,GAAK2E,GAKF,GAA8B,aAA1BvwB,KAAKmG,SAAS04D,SAAyB,CACxC,MAAM75D,EAASurB,EAAG5E,YACXhmB,GAASX,EAAO8B,QACnBC,GAAMA,EAAEF,aAAe7G,KAAKmG,SAASR,QAEpCA,GACF3F,KAAKovE,gBAAgB,gCAE3B,OAZApvE,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,cAa5D,oBCjCH,MAAMm3C,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAElChuC,EAAyB+tC,EAAmBzmE,gBAIlDlnC,EAAOC,QAAU,cAA6B0tG,EAW3ClnG,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAKmG,SAASkxD,YACXr3D,KAAKmG,SAASkxD,aAAe8H,EAAuB9H,YACvDr3D,KAAKmG,SAASoxD,SACXv3D,KAAKmG,SAASoxD,UAAY4H,EAAuB5H,SACpDv3D,KAAKmG,SAASmxD,WACXt3D,KAAKmG,SAASmxD,YAAc6H,EAAuB7H,WACtDt3D,KAAKmG,SAASqxD,QACXx3D,KAAKmG,SAASqxD,SAAW2H,EAAuB3H,OACtD,CAUAr3D,YACG,OAAO,IAAIgtG,EAAwBntG,KACtC,oBCzCH,MAAMotG,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtC9tG,EAAOC,QAAU,cAA2B4tG,EAazCjtG,YACG,OAAO,IAAIktG,EAAsBrtG,KACpC,CAEAkvE,eACGpvE,MAAMovE,eAEGlvE,KAAK4rB,gBAEX5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,cAG5D,oBC7BH,MAAMu3C,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9ChuG,EAAOC,QAAU,cAAmC8tG,EAMjDntG,YACG,OAAO,IAAIotG,EAA8BvtG,KAC5C,mBCXH,MAAMwtG,EAA0B,EAAQ,OAClCC,EACH,WAEGC,EAA+B,EAAQ,OAE7CnuG,EAAOC,QAAU,cAAkCguG,EAWhDxnG,WAAWN,GACR5F,MAAMkG,WAAWN,GACjB1F,KAAK2tG,YAAYj3C,aAAa12D,KAAKmG,SACtC,CAOAhG,YACG,OAAO,IAAIutG,EAA6B1tG,KAC3C,CAEI2tG,kBAID,OAH0B,MAAtB3tG,KAAK4tG,gBACN5tG,KAAK4tG,cAAgB,IAAIH,GAErBztG,KAAK4tG,aACf,oBCpCH,MAAMC,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5CvuG,EAAOC,QAAU,cAAiCquG,EAM/C1tG,YACG,OAAO,IAAI2tG,EAA4B9tG,KAC1C,oBCXH,MAAM+tG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CzuG,EAAOC,QAAU,cAAgCuuG,EAM9C5tG,YACG,OAAO,IAAI6tG,EAA2BhuG,KACzC,oBCXH,MAAMiuG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C3uG,EAAOC,QAAU,cAA+ByuG,EAU7C9tG,YACG,OAAO,IAAI+tG,EAA0BluG,KACxC,oBCfH,MAAMmuG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C7uG,EAAOC,QAAU,cAA+B2uG,EAe7ChuG,YACG,OAAO,IAAIiuG,EAA0BpuG,KACxC,oBCpBH,MAAMquG,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1C/uG,EAAOC,QAAU,cAA+B6uG,EAe7CluG,YACG,OAAO,IAAImuG,EAA0BtuG,KACxC,oBCpBH,MAAMuuG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CjvG,EAAOC,QAAU,cAAgC+uG,EAM9CpuG,YACG,OAAO,IAAIquG,EAA2BxuG,KACzC,CAEAyuG,gBAAgBC,EAAM3tD,GACnB,MAAM9wC,EAAMiJ,OAAOy1F,IAAIC,gBAAgBF,GAEjCjhG,EAAIghC,SAASC,cAAc,KACjCjhC,EAAE6+E,KAAOr8E,EACTxC,EAAEohG,SAAW9tD,EACbtS,SAASjtC,KAAKqxF,YAAYplF,GAC1BA,EAAEnM,QACFmM,EAAEsN,SAEF7B,OAAOy1F,IAAIG,gBAAgB7+F,EAC9B,CAEAi/D,eACGpvE,MAAMovE,eAEGlvE,KAAKimB,iBAAmBjmB,KAAK4rB,gBAEnC5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,eAIpD/1D,KAAKmG,SAAS46C,UAChB/gD,KAAKovE,gBAAgB,kCAM3B,oBC3CH,MAAM2/B,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAC9BC,EAAmB,EAAQ,OAC3BtrC,EAAmB,EAAQ,OAC3BurC,EAAoB,EAAQ,OAC5BC,EAAuB,EAAQ,OAC/BC,EAA2B,EAAQ,OAEnCC,GADoB,EAAQ,OACX,EAAQ,QAEzBtvG,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAW5C4sD,EAAsC4sC,EAAetoE,gBAE3DlnC,EAAOC,QAAU,cAAyBuvG,EACvCpvG,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAEnCzmC,KAAKsvG,WAAa,CACfC,iBAAkB,KAAM,EAE9B,CAEAC,iBAIG,OAH4B,MAAxBxvG,KAAKyvG,kBACNzvG,KAAKyvG,gBAAkB3vG,MAAMK,aAEzBH,KAAKyvG,eACf,CAOAtvG,YACG,OAAO,IAAI6uG,EAAoBhvG,KAClC,CAEA0vG,qBAAqBxvG,GAElB,IAAIyvG,EAAgB3vG,KAAKynB,OACrBxU,GAAMA,aAAag8F,GAAoBh8F,EAAE9M,SAASs7D,YACpD,GAGmB,MAAjBkuC,GACDA,EAAgBV,EAAiBpvC,YAAY7/D,KAAK8E,YAAa9E,MAC/D2vG,EAAcxpG,SAASs7D,WAAY,GAInCzhE,KAAK0nB,OAAS1nB,KAAKynB,OACfxU,KAAQA,aAAag8F,GAAsBh8F,EAAE9M,SAASs7D,aAK7D,IAAImuC,EAAQ5vG,KAAKynB,QAAQ/oB,KAAKuU,IAAOA,EAAEtS,SAAS86D,GAAK,GAAK,IAC1Dm0C,EAAMvrG,KAAKrE,KAAK0nB,OAAOxhB,QAAU,GACjC0pG,EAAMvrG,KAAKX,GAAGxD,EAAI4G,QAAQZ,QAAU,GACpC,IAAI2pG,EAAOvpG,KAAK27C,OAAO2tD,GAQvB,OALAD,EAAchvG,SAAS86D,EAAIo0C,EAG3B7vG,KAAK0nB,OAAOrjB,KAAKsrG,GAEVA,CACV,CAUAG,cAActwC,EAAUhoD,EAAKoV,EAAImjF,GAE9B,MAAMC,EAAgB,CAAC,MACvBxwC,EAAS00B,WAAU,SAAU18E,GAC1Bw4F,EAAc3rG,KAAKmT,EAAIxV,OAAOkF,KACjC,IAGA,MAAM+oG,EAAUzwC,EAAS00B,YACnBlL,EAAW,CAAC,EAClBgnB,EAAchsG,SAAS2R,IACpBqzE,EAASrzE,GAAOs6F,EAAQt6F,EAAI,IAI/B3V,KAAKyiE,iBACDvR,GACEA,aAAgByS,GAChBzS,aAAgBg+C,GAChBh+C,aAAgBi+C,GAChBj+C,aAAgBk+C,GACfl+C,aAAgBm+C,GAAwC,UAAtBn+C,EAAK/qD,SAASxE,OACrDqC,SAAS+C,IACR,MAAMmpG,EAAalwG,KAAKmwG,eAAeppG,EAAElI,IACzC,GAAkB,MAAdqxG,EAAoB,OAExB,MAAMvqG,EAAQoB,EAAEpB,QAChB,GAAIA,EAAO,CACR,MAAMmG,EAAWokG,EAAWpkG,UAAYokG,EAAWptB,MAAMh3E,SACrDA,IACDk9E,EAASrjF,EAAMkB,YAAciF,EAASuyC,KAAK6xD,EAAYlnB,GAC7D,KAIHxxE,EAAIsP,gBAAgB9iB,SAAS+C,KAEiB,GAAxCipG,EAAc9iG,QAAQnG,EAAEF,aACxBmiF,EAASjiF,EAAEF,qBAEJmiF,EAASjiF,EAAEF,mBACXmiF,EAASjiF,EAAE+pB,gBACrB,IAIH,IAAK,MAAMgW,KAAQkiD,EACM,MAAlBA,EAASliD,IAA0C,GAAzBkiD,EAASliD,GAAM5gC,SAC1C8iF,EAASliD,GAAQ,IAIvB,IAAIspE,EAMJ,GAJIL,IACDK,EAAaL,EAAOvjF,aAGnB4jF,EAAY,CACb,MAAM/tE,EAAa0tE,EAAOpkF,WAEJnU,EAAIsP,gBACZ9iB,SAAS+C,IACpB,MAAMspG,EAAerwG,KAAKyiE,iBACtB6tC,GAAUA,GAAO3qG,WAAW9G,KAAOkI,GAAGlI,KAG1C,GACGwjC,EAAWxjC,IAAMkI,EAAEZ,SAASO,YAC5B2pG,EAAanqG,OAAS,QACKkS,IAA3B4wE,EAASjiF,EAAEF,YACZ,CACC,MAAM0pG,EAAcxpG,EAAEK,WACjBL,EAAEK,WAAWP,WACbw7B,EAAWhT,KAEhB25D,EAASjiF,EAAEF,YAAc,CAAC,EAC1BmiF,EAASjiF,EAAEF,YAAY0pG,GACpBH,EAAWG,IAAgBH,EAAWvxG,EAC5C,IAEN,CAIA,MAAM2xG,EAAiBnxG,OAAOoyB,OAAO7E,EAAGJ,aAAe,CAAC,EAAGw8D,GAuB3D,OApBAxxE,EAAI1Q,QAAQC,GAAe,aAATA,EAAE3C,KAA+B,WAAT2C,EAAE3C,MAAkBJ,SAC1D+C,IACE,GAA8B,MAA1BiiF,EAASjiF,EAAEF,YAAqB,CACjC,IAAIu6C,GAAc,EAKL,WAATr6C,EAAE3C,KAAoB2C,EAAEZ,UAAUwpB,OAAOtO,OAAOnb,OAAS,IAC1Dk7C,GAAc,GAGjB4nC,EAASjiF,EAAEF,YAAcE,EAAEyZ,OAAOgwF,EAAgBpvD,EACrD,KAIF6uD,EAAQ1qF,cAAcrf,OAAS,IAChC8iF,EAASzjE,aAAe0qF,EAAQ1qF,cAE5ByjE,CACV,CAWAynB,aAAaC,EAAW1rG,EAAQgkF,GAC7B,IAAIj/E,EAAO,GAGX,MAAM4mG,EAAiB3wG,KAAKyiE,iBACxB6tC,GACyC,GAAvCA,GAAO3qG,UAAUQ,UAAUo3C,UACE,GAA7B+yD,GAAOnqG,UAAUo3C,WACrB7+C,KAAK4xG,GAAUA,EAAM3qG,UAGjB2B,EAAYtC,EAAOmrB,YAAY64D,GACrC,IAAI1jF,EAAUgC,EAAUoW,OAGxBgzF,EAAUvvB,WAMV,MAAMyvB,EAAuB7tB,IAC1B,MAAM8tB,EAAaH,EAAU1nG,SAAS+5E,GACtC,IAAK8tB,EAAY,OAEFA,EAAWC,QACb,KACVD,EAAWrsG,OAAO,SAAU,IAC5BqsG,EAAWjwG,UAId,MAAMmwG,EAAoBF,EAAWtjG,MAAMwkF,uBACxC,0BACD,GACGgf,GAAmBjyB,MAAM,iBAC3BiyB,EAAkBjyB,MAAMkyB,WAAa,GAClChxG,KAAKmG,SAAStE,YACdsgE,EAAoCtgE,eAE1C,EAmBH,GAfA8uG,EAAe3sG,SAAS+C,IACrB,IAAKA,EAAG,OAER,MAAMkoC,EAAW+5C,EAASjiF,EAAEF,aACZ,IAAZooC,GAA8B,MAAZA,GAAoBA,EAAS/oC,OAAS,KACzDwqG,EAAUxxF,YAAYnY,EAAEF,WAAY9G,EAAE,8BACtCgK,GAAQ,OAAOhK,EAAE,6BAA6BgH,EAAEF,kBAChDvB,GAAU,EAGVsrG,EAAoB7pG,EAAEF,YACzB,KAIEvB,EAAS,CACX,MAAM2rG,EAAaP,EAAU7xB,UAAU,CACpCn+E,KAAM,SACNiB,KAAM,SAIL2F,GAAWkW,QAAQtX,QACpBoB,EAAUkW,OAAOxZ,SAASkE,IACvBwoG,EAAUxxF,YAAYhX,EAAIhB,KAAMgB,EAAI+I,SACpClH,GAAQ,OAAO7B,EAAIhB,SAASgB,EAAI+I,eAChC2/F,EAAoB1oG,EAAIhB,KAAK,IAGhC+pG,GAAY9rG,WAEZ8rG,GAAYxpG,QAElB,CAUA,OATIsC,GACDvG,MAAMsN,MAAM,CACTnP,KAAM,cACNoP,MAAOhR,EAAE,mBACTgB,MAAO,IACPkN,KAAM,+BAA+BlE,WAIpCzE,CACV,CAQAJ,yBACG,OAAOlF,KAAKu2D,WAAW26C,YAC1B,CASAhsG,eAAewrG,GAGZ,IAAK1wG,KAAKsvG,YAAYC,qBAAsB,OAE5CmB,EAAUS,kBAGV,MAAM19E,EAAKzzB,KAAK4rB,eAChB,GAAU,MAAN6H,EAAY,OAGhB,MAAMjc,EAAMic,EAAG9H,WACf,GAAW,MAAPnU,EAAa,OAGjB,MAAMzP,EAAQ0rB,EAAG1rB,MACjB,GAAa,MAATA,EAAe,OAGnB,MAAMihF,EAAWhpF,KAAK8vG,cACnBY,EACAl5F,EACAic,EACAA,EAAG3H,oBAsBAslF,EAAalpG,IAChB,MAAMmpG,EAAcX,EAAU7xB,UAAU,CACrCn+E,KAAM,SACNiB,KAAM,SAIT,GAAIuG,EACD,GAAIA,EAAI0V,kBACL,IAAK,MAAMC,KAAQ3V,EAAI0V,kBAAmB,CACvC,IAAI0zF,EAAeppG,EAAI0V,kBAAkBC,GACrCyzF,GAAgBA,EAAa,KAC9BA,EAAeA,EAAa,IAE/BZ,EAAUxxF,YAAYrB,EAAMyzF,EAAargG,QAC5C,MACQ/I,EAAIqpG,WACZ/tG,MAAMyN,QAAQ,CACXhD,KAAM/F,EAAIqpG,WACV5vG,KAAM,WAGT6B,MAAMyN,QAAQ,CACXhD,KAAMlO,EAAE,mCACR4B,KAAM,UAET3B,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QAAS,2BACTvQ,KAAMV,KAAK6F,WAKpBwrG,GAAa5pG,SAEbipG,GAAWhpG,gBAAgB,EAU9B,SANM1H,KAAKwxG,mBAGXxxG,KAAK22D,iBAAiBqyB,IAGjBhpF,KAAKywG,aAAaC,EAAWl5F,EAAKwxE,GAEpC,OAMH,IAAIyoB,EAFJf,EAAUtrG,eAAe,CAAEzD,KAAM,SAOjC,IAGM8vG,EADCzoB,EAASnqF,SACUkJ,EAAMouE,OAAO6S,EAASnqF,GAAImqF,SAE1BjhF,EAAM4nE,OAAOqZ,EAKvC,CAHE,MAAO9gF,GAEN,MADAkpG,EAAUlpG,EAAIyB,MACRzB,CACT,CAwBA,UACSlI,KAAK82D,cAAc26C,EAO5B,CANE,MAAOvpG,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QAAS,iCACTvQ,KAAMV,KAAK6F,QACX4rG,YAAaA,GAEnB,CAGA,IACGzxG,KAAK8iE,cAAc2uC,EAOtB,CANE,MAAOC,GACN1xG,KAAK8B,GAAGqG,OAAOC,UAAUspG,EAAM,CAC5BzgG,QAAS,iCACTvQ,KAAMV,KAAK6F,QACX4rG,YAAaA,GAEnB,CAGA,MApIkB,CAACA,IAEZh+E,IACGzzB,KAAKmG,SAASk8D,aACf5uC,EAAGrH,UAAU,MACbskF,EAAUzrG,SAENwsG,GAAeA,EAAY5yG,IAAI40B,EAAGrH,UAAUqlF,EAAY5yG,KAIlE6xG,EAAUhpG,iBAIN+pG,GAAazxG,KAAKoP,KAAK,QAASqiG,EAAY,EAoHnDE,CAAUF,GACHA,CACV,CAEAG,eACG,IACIC,EAAgB,GACpB7xG,KAAKynB,QAAQzjB,SAASgK,IACH,WAAZA,EAAK5J,KAAgC,aAAZ4J,EAAK5J,KAHnB,GAIR4J,EAAKrN,SAAS86D,IAEfo2C,EAAgB7jG,EAAKnP,GAE3B,IAEH,IAAIizG,EAAiB9xG,KAAKmwG,eAAe0B,GACrCC,GAAkBpuG,GAAGouG,EAAerxG,GAAG5B,KACxC6E,GAAGouG,EAAerxG,GAAG5B,IAAIsgB,OAE/B,CAEIgxF,qBAED,OADuBnwG,KAAKwvG,iBACNW,cACzB,CAEAjhC,eACGpvE,MAAMovE,eAEGlvE,KAAK4rB,gBAEX5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,eAIrD/1D,KAAKmG,SAASmwD,YAIdt2D,KAAKmG,SAASq8D,WAGrB,oBCtgBH,MAAMuvC,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,MAE1CzyG,EAAOC,QAAU,cAA+BuyG,EAM7C5xG,YACG,OAAO,IAAI6xG,EAA0BhyG,KACxC,oBCXH,MAAMiyG,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5C3yG,EAAOC,QAAU,cAAiCyyG,EAM/C9xG,YACG,OAAO,IAAI+xG,EAA4BlyG,KAC1C,oBCXH,MAAMmyG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OACrC3E,EACH,WACG4E,EACH,WAEGxwC,EACHswC,EAAsB1rE,gBAEL,EAAQ,OAK5BlnC,EAAOC,QAAU,cAAgC2yG,EAM9CxyG,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,GAGnCzmC,KAAKsyG,kBAAoBtyG,KAAK8B,GAAGuzB,iBAC9B,GAAGr1B,KAAKnB,uBAGXmB,KAAKsyG,kBAAkBh9E,WACpBt1B,KAAK2rB,WAAa3rB,KAAK2rB,WAAW7kB,SAAW,GAC7C9G,KAAK2rB,WAAa3rB,KAAK2rB,WAAa,MAsBvC3rB,KAAKsyG,kBAAkB1tG,SACpB5E,KAAKmG,SAAS0jB,kBACXg4C,EAA2Ch4C,iBAEpD,CAYA7jB,WAAWN,GACR5F,MAAMkG,WAAWN,GAEjB1F,KAAK2tG,YAAYj3C,aAAa12D,KAAKmG,UACnCnG,KAAKuyG,aAAa77C,aAAa12D,KAAKmG,SACvC,CAEWqsG,6BACR,OAAO/E,EAAsBgF,kBAAkBzyG,KAAKJ,IAAKI,KAAKH,OACjE,CAEW6yG,8BACR,OAAOL,EAAuBI,kBAAkBzyG,KAAKJ,IAAKI,KAAKH,OAClE,CAOAM,YACG,OAAO,IAAIiyG,EAA2BpyG,KACzC,CAEI2tG,kBAID,OAH0B,MAAtB3tG,KAAK4tG,gBACN5tG,KAAK4tG,cAAgB,IAAIH,GAErBztG,KAAK4tG,aACf,CAEI2E,mBAID,OAH2B,MAAvBvyG,KAAK2yG,iBACN3yG,KAAK2yG,eAAiB,IAAIN,GAEtBryG,KAAK2yG,cACf,oBCzGH,MAAMC,EAAuB,EAAQ,OAC/BC,EAA4B,EAAQ,OAE1CtzG,EAAOC,QAAU,cAA+BozG,EAM7CzyG,YACG,OAAO,IAAI0yG,EAA0B7yG,KACxC,oBCXH,MAAM8yG,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9CxzG,EAAOC,QAAU,cAAmCszG,EAMjD3yG,YACG,OAAO,IAAI4yG,EAA8B/yG,KAC5C,oBCXH,MAAMgzG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAGrCD,EAAmBvsE,gBAEtBlnC,EAAOC,QAAU,cAA6BwzG,EAKhCE,yBACR,OAAOD,CACV,CAOA9yG,YACG,OAAO,IAAI8yG,EAAwBjzG,KACtC,CAQAmzG,mBAAmB/uG,GAChB,IAAI4F,EAAOhK,KAAK68D,sBAQhB,OAAOz4D,GANH4F,EACkBA,EAAKopG,iBAEL5vG,MAAMuH,MAI/B,oBCxCH,MAAMsoG,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExC/zG,EAAOC,QAAU,cAA6B6zG,EAM3ClzG,YACG,OAAO,IAAImzG,EAAwBtzG,KACtC,oBCXH,MAAMuzG,EAAuB,EAAQ,MAC/BC,EAA4B,EAAQ,OAE1Cj0G,EAAOC,QAAU,cAA+B+zG,EAM7CpzG,YACG,OAAO,IAAIqzG,EAA0BxzG,KACxC,oBCXH,MAAMyzG,EAAyB,EAAQ,OACjCC,EAA8B,EAAQ,OAE5Cn0G,EAAOC,QAAU,cAAiCi0G,EAM/CtzG,YACG,OAAO,IAAIuzG,EAA4B1zG,KAC1C,oBCXH,MAAM2zG,EAA+B,EAAQ,OACvCC,EAAoC,EAAQ,OAElDr0G,EAAOC,QAAU,cAAuC,EAQrDW,YACG,OAAO,IAAIyzG,EAAkC5zG,KAChD,oBCbH,MAAM6zG,EAA6B,EAAQ,OACrCC,EAAkC,EAAQ,OAEhDv0G,EAAOC,QAAU,cAAqC,EAQnDW,YACG,OAAO,IAAI2zG,EAAgC9zG,KAC9C,oBCbH,MAAM+zG,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3Cz0G,EAAOC,QAAU,cAAgCu0G,EAM9C5zG,YACG,OAAO,IAAI6zG,EAA2Bh0G,KACzC,oBCXH,MAAMi0G,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAExC30G,EAAOC,QAAU,cAA6By0G,EAO3C9zG,YACG,OAAO,IAAI+zG,EAAwBl0G,KACtC,8ECVY,MAAMm0G,UAA6BtP,EAAA,EAC/CllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,eAAewlG,EAASxmG,KAClCQ,OAAOoyB,OACJ,CACG2iF,KAAM,GACNC,MAAO,IAEVn0G,IAINF,KAAKs0G,QAAU,KAOft0G,KAAKu0G,WAAa,KAClBv0G,KAAKw0G,eAAiB,KACtBx0G,KAAKy0G,aAAe,KACpBz0G,KAAK00G,cAAgB,KACrB10G,KAAK20G,cAAgB,KACrB30G,KAAK40G,WAAa,KAElB50G,KAAK60G,kBAAoB,KACzB70G,KAAK80G,gBAAkB,KAEvB90G,KAAK+0G,YAAc,CAAC,EAMpB,MAAMC,EAAUh1G,KAAKE,IAAIm0G,MAEzBr0G,KAAKi1G,aAAe,CACjBC,aAAeC,IACZ,MAAMC,EAAe1xG,GAAGsxG,GAASK,WAAW,SAC5C,IAAKD,EAAc,OAAO,EAE1B,MAAME,EAAYF,EAAapqD,QAC/B,SAAKsqD,IAAcA,EAAUxoF,SAEtBwoF,EAAUxoF,OAAOqoF,EAAO,EAElCI,WAAaJ,IACV,IAAKn1G,KAAKi1G,aAAaC,aAAaC,GAAS,OAE7C,MAAMK,EAAa9xG,GAAGsxG,GAASK,WAAW,cAC1C,OAAKG,EAEEA,EAAWD,WAAWJ,QAF7B,CAEoC,EAG7C,CAEA10G,KACG,MAAMP,EAAMF,KAAKE,IACXsjF,EAAOxjF,MACP,WAAEy1G,EAAU,YAAEC,EAAW,UAAEC,GAAc31G,KAAK41G,kBAC9C3P,EAAMnmG,MAAMW,GAAG,CAClB,CACGS,KAAM,CACH,CAAEuB,WAAW,GACb,CACG/B,KAAM,OACN7B,GAAIqB,EAAIk0G,KACRxvB,OAAQ,IACR7jF,MAAO,IACP4I,KAAM,CACH,CACG9K,GAAI,MACJ6D,MAAO1C,KAAKmB,MAAM,QAErB,CACGtC,GAAI,OACJ6D,MAAO1C,KAAKmB,MAAM,SAErB,CACGtC,GAAI,QACJ6D,MAAO1C,KAAKmB,MAAM,UAErB,CACGtC,GAAI,OACJ6D,MAAO1C,KAAKmB,MAAM,UAGxBgB,GAAI,CACD+H,YAAcrL,IACXmB,KAAK61G,SAASh3G,EAAG,MAMhC,CACGA,GAAIqB,EAAIm0G,MACR3zG,KAAM,QACNioD,OAAQ,CAAC8sD,EAAYC,EAAaC,GAClCG,SAAU,IAAIC,IAAI,CACf,CACG1B,MAAM2B,SAASC,QAEf,cAAwB5B,MAAM2B,SAASC,QACpC/wG,cACG,MAAMqrB,EAAKizD,EAAK0yB,sBAChB,OAAK3lF,GAOGA,EAAGoE,WAAa,IAAIj2B,KAAI,CAACiyB,EAAGwlF,IACjC3yB,EAAK4yB,cAAczlF,EAAGwlF,KART,EAUnB,CACA9sE,QACG,OAAOh6B,QAAQ/P,QAAQ,GAC1B,CACA4F,cAAcsS,EAAK5L,EAAO8I,GAClB8uE,EAAKuxB,YAAYv9F,EAAI3Y,MACvB2kF,EAAKuxB,YAAYv9F,EAAI3Y,IAAM2kF,EAAK6yB,QAAQ7+F,IAE3C,MAAMskB,QAAgB0nD,EAAKuxB,YAAYv9F,EAAI3Y,IAE3C,cADO2kF,EAAKuxB,YAAYv9F,EAAI3Y,IACrB,CACJA,IAAKi9B,GAAW,CAAC,GAAGj9B,GAE1B,CACAqG,iBAAiBrG,EAAI2Y,GAClB,aAAagsE,EAAK8yB,WAAW9+F,EAAI3Y,GAAI2Y,EACxC,CACAtS,iBAAiBrG,GACd,aAAa2kF,EAAK+yB,WAAW13G,EAChC,SASf,cAFOonG,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAOjB,MAAM00G,EAAQ9yG,GAAG1D,KAAKE,IAAIk0G,MAEtBoC,GAAOA,EAAMC,SAAS,MAC7B,CAOIP,4BACD,OAAOp2G,MAAMo2G,uBAAyBl2G,KAAKs0G,OAC9C,CAaA8B,cAAch3F,EAAM,CAAC,EAAGxT,EAAQ,MAC7B,MAAMjC,EAAO,CAAC,EACR6qG,EAAiBx0G,KAAKw0G,eACtBC,EAAez0G,KAAKy0G,aACpBC,EAAgB10G,KAAK00G,cAE3B,IAAKF,IAAoBC,IAAiBC,EAAgB,OAAO/qG,EAEjE,MAAM+1C,EAAW,IAAIj/B,KAErB9W,EAAS,GAAIyV,EAAIvgB,IAAMugB,EAAI5P,KAC3B7F,EAAW,KAAI,OACfA,EAAa,OAAI,EACjBA,EAAW,MAAI,EAGf,MAAM4qG,EAAav0G,KAAKu0G,WAClBI,EAAgB30G,KAAK20G,cACrBC,EAAa50G,KAAK40G,WAyBxB,OAvBAjrG,EAAW,KAAI4qG,EACVn1F,EAAIm1F,EAAW1tG,aAAe,GAC9B7G,KAAKsK,cAAc68B,YAAY/nB,GACpCzV,EAAiB,WAAIyV,EAAIo1F,EAAe3tG,aAAe64C,EACvD/1C,EAAe,SAAIgrG,EACdz5D,WAAW97B,EAAIu1F,EAAc9tG,aAAe,GAC5C,EAED+tG,IAAYjrG,EAAc,QAAIyV,EAAIw1F,EAAW/tG,aAAe,IAE5D4tG,IACD9qG,EAAe,SAAIyV,EAAIq1F,EAAa5tG,aAAe64C,GAElDg1D,IAAe/qG,EAAe,SAAIyV,EAAIs1F,EAAc7tG,aAAe,GAGlE8C,EAAe,UAAMA,EAAe,WACtCA,EAAe,SAAI+1C,EACnB/1C,EAAe,SAAI,GAGlBiC,IAAOjC,EAAY,MAAIiC,GAEpBjC,CACV,CAWA+sG,cAAcrpE,GACX,MAAMspE,EAAQ,CAAC,EACTpC,EAAav0G,KAAKu0G,WAClBC,EAAiBx0G,KAAKw0G,eACtBG,EAAgB30G,KAAK20G,cACrBC,EAAa50G,KAAK40G,WAClBH,EAAez0G,KAAKy0G,aACpBC,EAAgB10G,KAAK00G,cAe3B,OAbIH,IAAYoC,EAAMpC,EAAW1tG,YAAcwmC,EAAW,MAAK,IAE3DmnE,IAAgBmC,EAAMnC,EAAe3tG,YAAcwmC,EAAiB,YAEpEsnE,IACDgC,EAAMhC,EAAc9tG,YAAcq0C,WAAW7N,EAAe,UAAK,IAEhEunE,IAAY+B,EAAM/B,EAAW/tG,YAAcwmC,EAAc,SAEzDonE,IAAckC,EAAMlC,EAAa5tG,YAAcwmC,EAAe,UAE9DqnE,IAAeiC,EAAMjC,EAAc7tG,YAAcwmC,EAAe,UAE7DspE,CACV,CAMA5xG,WAAWC,GACRlF,MAAMiF,WAAWC,GAGjB,MAAMmB,EAAWnG,KAAKmG,SAElBnB,IACDhF,KAAKu0G,WAAavvG,EAAO4I,UAAUzH,EAASo+D,cAC5CvkE,KAAKw0G,eAAiBxvG,EAAO4I,UAAUzH,EAASq+D,kBAChDxkE,KAAKy0G,aAAezvG,EAAO4I,UAAUzH,EAASs+D,gBAC9CzkE,KAAK00G,cAAgB1vG,EAAO4I,UAAUzH,EAASu+D,iBAC/C1kE,KAAK20G,cAAgB3vG,EAAO4I,UAAUzH,EAASw+D,iBAC/C3kE,KAAK40G,WAAa5vG,EAAO4I,UAAUzH,EAASy+D,cAElD,CAMAgyC,mBAAmBhrF,GAChB9rB,MAAM82G,mBAAmBhrF,GAEzB,MAAMgB,EAAK5sB,KAAKk2G,uBAAyBtqF,EACpCgB,IAIL5sB,KAAKs0G,QAAU1oF,EAGf5rB,KAAK+E,WAAW6nB,EAAGjB,YAEA,CAAC,SAAU,SAAU,SAAU,mBAEvC3nB,SAAS/E,IAEdA,KAAK2tB,EAAGiqF,UACiD,IAAzD72G,KAAK82B,SAASujC,WAAWy8C,GAAOA,EAAGxkF,YAAcrzB,MAK5C,WADAA,EAEFe,KAAKoyB,SAAS,CACXC,QAASzF,EACT0F,UAAW,SACXC,SAAW4iF,IAEJn1G,KAAKi1G,aAAaC,aAAaC,IAChCn1G,KAAKi1G,aAAaM,WAAWJ,EAAO,IAO7Cn1G,KAAKoyB,SAAS,CACXC,QAASzF,EACT0F,UAAWrzB,EACXszB,SAAU,KACPvyB,KAAK+2G,UAAU,IAK3B,IAEN,CAMAryG,OACGhB,GAAG1D,KAAKE,IAAIC,YAAYuE,MAC3B,CAEAqyG,WACG,MAAMC,EAAYtzG,GAAG1D,KAAKE,IAAIm0G,OAC9B,IAAK2C,EAAW,OAEhB,MAAMC,EAAcD,EAAU3B,WAAW,SACzC,IAAK4B,EAAa,OAElB,MAAMC,EAAUD,EAAYjsD,QACvBksD,GAWL5iG,YAAW,KACR4iG,EAAQl8F,WAER,MAAMuV,EAAKvwB,KAAKk2G,sBACViB,EAAa,CAChBxtG,KAAM4mB,GACAA,EAAGoE,WAAa,IAAIj2B,KAAI,CAACiyB,EAAG/kB,IAC1B5L,KAAKo2G,cAAczlF,EAAG/kB,KAEzB,IAIJ5L,KAAKw0G,iBAAmBx0G,KAAKy0G,cAAgBz0G,KAAK00G,gBACnDwC,EAAQjgG,MAAMkgG,GAIjB,MAAMC,EAAYH,EAAYI,YAE9Br3G,KAAK60G,kBAAoBuC,EAAUvkF,MACnC7yB,KAAK80G,gBAAkBsC,EAAUxuD,IAEjC5oD,KAAKwN,MAAM,GACX,GACN,CAEIooG,wBAoBD,MAAO,CACJD,UApBe,CAAE10F,KAAM,MAAOT,OAAQ,MAqBtC82F,WApBa,CACVr2F,KAAM,OACNT,OAASqS,IACN,MAAM8qD,EAASn6E,MAAMid,KAAK4/B,UAAU,SAC9Bk3D,EAAS/zG,MAAMid,KAAK+2F,UAAU3kF,GAC9B4kF,EAAOj0G,MAAMid,KAAKW,IACrB5d,MAAMid,KAAKW,IAAIm2F,EAAQ,EAAG,QAAQ,IACjC,EACD,OACA,GAGH,OAAO55B,EAAO45B,GAAU,MAAQ55B,EAAO85B,EAAK,GASlD/B,YANc,CAAEz0F,KAAM,QAAST,OAAQ,MAOvCi1F,WANa,CAAEx0F,KAAM,OAAQT,OAAQ,MAQ3C,CAEAq1F,SAAS6B,GACN,MAAMV,EAAYtzG,GAAG1D,KAAKE,IAAIm0G,OAC9B,IAAK2C,EAAW,OAEhB,MAAMW,EAAYX,EAAU3B,WAAW,SACvC,IAAKsC,EAAW,OAEhB,MAAMC,EAAY,IACZ,WAAEnC,EAAU,YAAEC,EAAW,WAAE4B,EAAU,UAAE3B,GAC1C31G,KAAK41G,kBAER,OAAQ8B,GACL,IAAK,MACFE,EAAUvzG,KAAKoxG,EAAYC,EAAaC,GACxC,MAEH,IAAK,OACFiC,EAAUvzG,KAAKoxG,EAAYC,EAAa4B,GACxC,MAEH,IAAK,QACFM,EAAUvzG,KAAKoxG,EAAYC,GAC3B,MAEH,IAAK,OACFkC,EAAUvzG,KAAKoxG,GAIrB,MAAMnO,EAAUtnG,KAAK8B,GAAG6Y,MAClBy8F,EAAYJ,EAAU3B,WAAW,SAASgC,YAC7CxkF,EAAQy0E,EAAQ7mF,KAAKW,IAAIphB,KAAK60G,mBAAoB,EAAG6C,GAAO,GAC5D9uD,EAAM0+C,EAAQ7mF,KAAKW,IAAIphB,KAAK80G,gBAAiB,EAAG4C,GAAO,GAE1DC,EAAUE,UACPhlF,EACA+1B,EACAwuD,EAAUU,QACVV,EAAUW,UACVX,EAAUY,WACVJ,GAEHZ,EAAU55B,KAAK34E,UACfuyG,EAAUt6B,WAAWu7B,OAAO,CAAE3L,IAAK,EAAG4L,KAAM,GAC/C,CAMA7tG,SACGvK,MAAMuK,SACNrK,KAAK42G,mBAAmB52G,KAAK4rB,gBAE7BloB,GAAG1D,KAAKE,IAAIC,YAAYwE,MAC3B,CAEA6I,OAiCA,CAEAtI,cAAcizG,GACX,MAAMxB,EAAQ32G,KAAK02G,cAAcyB,GAC3B9Q,EAAKrnG,KAAK8B,GAEhB,IAGG,aAAa9B,KAAKsK,eAAevC,QAAQ4nE,OAAOgnC,GAanD,CAZE,MAAO13G,GAWN,MAVAooG,EAAG1sF,MAAM7J,MAAM,CACZC,MAAO/Q,KAAKmB,MAAM,qBAClB+P,GAAIlR,KAAKmB,MAAM,QACf8M,KAAMjO,KAAKmB,MAAM,+BAEpBkmG,EAAGl/F,OAAOC,UAAUnJ,EAAG,CACpBiQ,QAAS,2CACTynG,UAGG13G,CACT,CACH,CAEAiG,iBAAiBspB,GACd,MAAM64E,EAAKrnG,KAAK8B,GAEhB,IAKG,aAFM9B,KAAKsK,cAAcvC,QAAQgO,OAAOyY,GAEjC,CAAC,CAaX,CAZE,MAAOvvB,GAWN,MAVAooG,EAAG1sF,MAAM7J,MAAM,CACZC,MAAO/Q,KAAKmB,MAAM,uBAClB+P,GAAIlR,KAAKmB,MAAM,QACf8M,KAAMjO,KAAKmB,MAAM,iCAEpBkmG,EAAGl/F,OAAOC,UAAUnJ,EAAG,CACpBiQ,QAAS,gDACTsf,UAGGvvB,CACT,CACH,CAEAiG,iBAAiBspB,EAAO4pF,GACrB,MAAMzB,EAAQ32G,KAAK02G,cAAc0B,GAC3B/Q,EAAKrnG,KAAK8B,GAEhB,IAKG,aAFM9B,KAAKsK,cAAcvC,QAAQouE,OAAO3nD,EAAOmoF,GAExC,CAAC,CAaX,CAZE,MAAO13G,GAWN,MAVAooG,EAAG1sF,MAAM7J,MAAM,CACZC,MAAO/Q,KAAKmB,MAAM,uBAClB+P,GAAIlR,KAAKmB,MAAM,QACf8M,KAAMjO,KAAKmB,MAAM,iCAEpBkmG,EAAGl/F,OAAOC,UAAUnJ,EAAG,CACpBiQ,QAAS,gDACTynG,UAGG13G,CACT,CACH,ECtkBH,MAAMo5G,EAAkB,EAAQ,OAEjB,MAAMC,UAAoBD,EACtC14G,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,EACtC,CAOAtmC,YACG,OAAO,IAAIg0G,EAAqBn0G,KACnC,CAEAkvE,eACGpvE,MAAMovE,eAEN,IAAI3+C,EAAKvwB,KAAK4rB,eACd,GAAK2E,EAKF,GAAKvwB,KAAKmG,SAASq+D,iBAEZ,CACJ,IAAI7+D,EAAQ4qB,EAAG5E,YAAY/d,UACxB5N,KAAKmG,SAASq+D,kBAEZ7+D,GACF3F,KAAKovE,gBACF,iCAAiCpvE,KAAKmG,SAASq+D,oBAGxD,MAVGxkE,KAAKovE,gBAAgB,6CALxBpvE,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,cAgB5D,yFChCY,MAAMwiD,UAAgC/5F,EAAA,EAClD7e,YAAYE,GAGTC,MAAM,CACH04G,YAAa,GAHhB34G,EAASA,GAAU,sCAIhBkK,KAAM,GAAGlK,uBAGZG,KAAKiD,eAAiB,KAKtBjD,KAAKy4G,gBAAkB,KAIvBz4G,KAAK04G,MAAQ,KAIb14G,KAAK24G,UAAY,KAIjB34G,KAAK44G,cAAgB,EAGxB,CAEAn4G,KACG,IAAI+iF,EAAOxjF,KAGX,MAAO,CACJU,KAAM,QACN7B,GAAImB,KAAKE,IAAIs4G,YACbz3G,MAAO,IACPD,OAAQ,EACR8gG,QAAQ,EACRtlB,QAAQ,EACR96E,KAAM,CACH3C,GAAImB,KAAKE,IAAI6J,KACbrJ,KAAM,OACNm4G,YAAY,EACZlvG,KAAM,CACH,CAAEzC,KAAM,MAAOkE,KAAM,gBACrB,CAAElE,KAAM,QAASkE,KAAM,gBACvB,CAAElE,KAAM,MAAOkE,KAAM,cACrB,CAAElE,KAAM,MAAOkE,KAAM,iBAExBu7D,SACG,mFACHxkE,GAAI,CACD+H,YAAa,SAAUrL,GACpB,IAAIsB,EAAYH,KAAK0sB,QAAQ7tB,GAC7B2kF,EAAKvX,OAAO9rE,EAAU+G,KACzB,IAIZ,CAEAhC,WAAWpD,GACJA,IACD9B,KAAK8B,GAAKA,GAEb0B,MAAM/C,GAAGT,KAAKS,MACdiD,GAAG1D,KAAKE,IAAIs4G,aAAa53G,QAC5B,CASAk4G,mBAAmBlsF,GAChB5sB,KAAKy4G,gBAAkB7rF,CAC1B,CAOA7nB,WAAWC,GACRhF,KAAKiD,eAAiB+B,CACzB,CAQA+zG,gBAAgBjyG,EAAS,IACtB9G,KAAK44G,cAAgB9xG,GAAU,EAClC,CAOAkyG,YAAYj4D,GACT/gD,KAAK24G,UAAY53D,CACpB,CAQAk4D,iBAAiBC,GACdl5G,KAAK04G,MAAQQ,CAChB,CAQAv0G,KAAK4I,GACF7J,GAAG1D,KAAKE,IAAIs4G,aAAa7zG,KAAK4I,EACjC,CAEArI,aAAagC,GACV,IAAIiyG,EAEA99C,EAAU,CAAC,EAEXzuC,EAAK5sB,KAAKy4G,gBACVx1G,EAAiBjD,KAAKiD,eACtBy1G,EAAQ14G,KAAK04G,MACbC,EAAY34G,KAAK24G,WAGlB/rF,GACEA,EAAGzmB,SAAS4jB,SAAW6C,EAAGT,YAAcS,EAAGnC,eAAeC,mBAGtDkC,EAAG6D,WAAW,EAAG,MACvB7D,EAAGzmB,SAAS4jB,SAAU,GAKrB9mB,GACDA,EAAe6D,SAAS9C,SAAS+C,IAE1B/G,KAAK44G,cAAc1rG,QAAQnG,EAAEF,aAAe,IAEhDw0D,EAAQt0D,EAAEF,YAAc,CACrB8/D,SAAW14C,GACDlnB,EAAEyZ,OAAOyN,IAErB,IAMP,MAAMmrF,EAAeV,EAAM/uG,KAAKqjB,KAAK,CAACqsF,uBAAwB,IAAInzG,OAAS,EACrEozG,EAAal6F,GAAQg6F,GAA+C,GAA/Bh6F,GAAKi6F,uBAEhD,OAAQnyG,GACL,IAAK,MACF1D,MAAM2oE,IAAIhzB,UAAUj4C,KAAO,IAE3Bi4G,EAAW31G,MAAM+1G,MAAMb,EAAO,CAC3B33D,SACG43D,IAAc11G,EAAiBA,EAAe9B,MAAQ,MACzDk6D,QAASA,EACTzyD,OAAQ0wG,IAEX,MACH,IAAK,QACFH,EAAW31G,MAAMg2G,QAAQd,EAAO,CAC7B33D,SACG43D,IAAc11G,EAAiBA,EAAe9B,MAAQ,MACzD+F,KACGyxG,IAAc11G,EAAiBA,EAAe9B,MAAQ,MACzDk6D,QAASA,EACTo+C,YAAY,EACZ7wG,OAAQ0wG,IAEX,MACH,IAAK,MACFH,EAAW31G,MAAMk2G,MAAMhB,EAAO,CAC3B33D,SACG43D,IAAc11G,EAAiBA,EAAe9B,MAAQ,MACzDs4G,YAAY,EACZ7wG,OAAQ0wG,IAEX,MACH,IAAK,MACFH,EAAW31G,MAAMm2G,MAAMjB,EAAO,CAC3B33D,SACG43D,IAAc11G,EAAiBA,EAAe9B,MAAQ,QAMlE,UACSg4G,EACNz1G,GAAG1D,KAAKE,IAAIs4G,aAAa9zG,MAQ5B,CAPE,MAAOwD,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QAAS,4DAA4D/J,IACrE0yG,WAAY1yG,EACZm0D,UACAw+C,SAAUlB,GAEhB,CACH,gBCzNC54G,EAAI,KAEO,MAAM+5G,UAAkCt7F,EAAA,EAGpD7e,YAAYo6G,EAAqBl6G,GAG9BC,MAAM,CACHK,UAAW,GAHdN,EAASA,GAAU,8CAIhBm6G,OAAQ,GAAGn6G,uBAGdG,KAAKsK,cAAgB,KAIrBtK,KAAKi6G,cAAgBF,EAIrB/5G,KAAK8B,GAAKi4G,EAAoBj4G,GAG9B9B,KAAKk6G,WAAa,IAAI92B,EAAA,EAAWvjF,EAAQG,KAAK8B,IAIzC/B,IACFA,EAAI,IAAIwV,IACEvV,KAAK8B,GAAGkP,aAAa7P,SAASoU,GAG9C,CAEA9U,KACG,IAAIP,EAAMF,KAAKE,IAGf,MAAO,CACJQ,KAAM,QACN7B,GAAIqB,EAAIC,UAERqB,KAAM,CACHT,MAAO,IACPa,KAAM,CAEH5B,KAAKk6G,WAAWz5G,KAChB,CAAEK,OAAQ,IACV,CACGI,KAAM,CACH,CAAC,EACD,CACGR,KAAM,SACNgC,MAAO3C,EAAE,UACTgB,MAAO,IACPO,MAAO,KACJtB,KAAK0E,MAAM,GAGjB,CACG7F,GAAIqB,EAAI85G,OACR/4G,IAAK,gBACLP,KAAM,SACNS,MAAOpB,EAAE,UACT4B,KAAM,OACNZ,MAAO,IACPO,MAAO,KACJtB,KAAKg6G,QAAQ,OAO/B73G,GAAI,CACDkI,OAAQ,KACLrK,KAAKqK,QAAQ,GAIzB,CAEAnF,WAAWpD,GAIR,OAHA0B,MAAM/C,GAAGT,KAAKS,MACdT,KAAKk6G,WAAW72G,KAAKvB,GAEduN,QAAQ/P,SAClB,CAMAoF,OACGhB,GAAG1D,KAAKE,IAAIC,WAAWuE,MAC1B,CAWAK,WAAWC,EAAQuoF,GAChBvtF,KAAKsK,cAAgBtF,EACrBhF,KAAKk6G,WAAWn1G,WAAWC,GAC3BhF,KAAKw3E,UAAY+V,CACpB,CAEAljF,SAAU,CAUV1F,KAAK4I,EAAOrL,EAAU,MACJ,MAAXA,EACDwB,GAAG1D,KAAKE,IAAIC,WAAWwE,KAAK4I,EAAOrL,GAEnCwB,GAAG1D,KAAKE,IAAIC,WAAWwE,KAAK4I,EAElC,CAOAysG,SAEG,IAAIG,EAAgBz2G,GAAG1D,KAAKE,IAAI85G,QAC7BI,EAAep6G,KAAKk6G,WAAWpuG,YAAc,GAIhD,GAFAquG,EAAch1G,WAETnF,KAAKi6G,cAIP,YADAE,EAAc1yG,SAEV,GAAI2yG,EAAal0G,OAAS,EAG9B,YADAi0G,EAAc1yG,SAIjB,IAAI4yG,EAAar6G,KAAKi6G,cAAcK,eAChCC,EAAgB,GACpBF,EAAW1wG,KAAK8/E,MAAK,SAAUrqE,GAEzBA,GACAA,EAAI6e,eAAe,2BACW,GAA9B7e,EAAIi6F,wBAEJkB,EAAcl2G,KAAK+a,EAAIvgB,GAE7B,IAEA,IAAI2G,EAAO,CAAC,EACZ40G,EAAap2G,SAASgK,IACnB,IAAI26B,EAAY3oC,KAAKsK,cAAcsD,UAAUI,EAAKzD,SAC7Co+B,IAELnjC,EAAKmjC,EAAU9hC,YAAcmH,EAAKtL,MAAK,IAGtC63G,EAAcr0G,OAAS,EACxB1C,MAAM+N,QAAQ,CACXR,MAAOhR,EAAE,6BACTkO,KAAMlO,EAAE,yDACRyR,SAAW7D,IACJA,GACG0sG,GAAcA,EAAWj1G,cAC1Bi1G,EAAWj1G,aAAa,CAAEzD,KAAM,SAEpB3B,KAAKsK,cAAcvC,QAE9BquE,YAAY,CACVC,OAAQkkC,EACR70G,OAAQF,IAEV2O,MAAK,KAEHgmG,EAAc1yG,SACdzH,KAAK0E,OAED21G,GAAcA,EAAW3yG,cAC1B2yG,EAAW3yG,cAAc,IAE9B0M,OAAOlM,IACLlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,+DACHmnE,OAAQkkC,EACR70G,OAAQF,GACT,KAGR20G,EAAc1yG,QACjB,KAINjE,MAAMsN,MAAM,CACTC,MAAOhR,EAAE,uBACTkO,KAAMlO,EACH,+EAGNo6G,EAAc1yG,SACdzH,KAAK0E,OAEX,iBClOY,MAAMq1G,UAA4BlV,EAAA,EAC9CllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,cAAcwlG,EAASxmG,KACjCQ,OAAOoyB,OACJ,CACG+oF,MAAO,GAGPC,QAAS,GACTC,qBAAsB,GAEtBC,aAAc,GACdC,iBAAkB,GAClBC,WAAY,GACZC,aAAc,GAEdxP,oBAAqB,GAErByP,UAAW,IAEd76G,IAINF,KAAKurG,oBAAsB,CAAC7F,EAAUC,KACnC3lG,KAAKwrG,mBAAmB9F,EAAUC,EAAY,EAGjD3lG,KAAKg7G,eAAiB,IAAIzlG,KACvBvV,KAAKi7G,aAAa1lG,EAAO,EAO5BvV,KAAK0mG,UACLrB,EAAS3jD,aAAav/C,GAAG,cAAenC,KAAKurG,qBAG7CvrG,KAAKnB,GAAKwmG,EAASxmG,GAqBnBmB,KAAKk7G,gBAAkB,EAIvBl7G,KAAKm7G,iBAAmB,EAQxBn7G,KAAKo7G,iBAAkB,EAIvBp7G,KAAK+lG,SAAWV,EAASW,eAAe7lG,YAIxC,MAAMk7G,EAAUr7G,KAAKE,IAAIs6G,MACnBnT,EAAKrnG,KAAK8B,GAEhB9B,KAAKs7G,YAAc,IAAI,EAAcD,GACrCr7G,KAAKs7G,YAAYj4G,KAAKgkG,GAItBrnG,KAAKu7G,yBAA2B,IAAI,EAAuBv7G,KAAMq7G,GACjEr7G,KAAKu7G,yBAAyBl4G,KAAKgkG,GAKnCrnG,KAAKw7G,4BAA8B,IAAI,IAAiBH,GACxDr7G,KAAKw7G,4BAA4Bn4G,KAAKgkG,GACtCrnG,KAAKw7G,4BAA4Br5G,GAAG,WAAYupG,IAC7C1rG,KAAK2rG,iBAAiBD,EAAY,IAKrC1rG,KAAKy7G,iBAAmB,CACrB,yBACA,yBACA,wBACA,uBACA,oBAeHz7G,KAAK07G,qBAAsB,EAM3B17G,KAAK27G,cAAgB,KAKrB37G,KAAK47G,yBAA0B,CAClC,CAIIC,yBACD,MAAO,qBACV,CAEAnV,UACG1mG,KAAKU,KAAKghD,aAAao6D,mBAAmB,eAC1C97G,KAAK4rB,gBAAgBoL,eAAe,eAAgBh3B,KAAKg7G,eAC5D,CASAe,eAAel9G,GACZ,IAAIs3G,EAAOn2G,KAAKs6G,eAAeyB,eAAel9G,GAQ9C,OAPKmB,KAAKmG,SAAS6+D,YAKhBmxC,IAEIA,CACV,CAEA6F,cACG,MAAM97G,EAAMF,KAAKE,IACXiG,EAAWnG,KAAKmG,SAChBq9E,EAAOxjF,KAEb,IAAIU,EAAO,aAEPyF,EAAS81G,eAAiB91G,EAAS0/D,WAEpCnlE,EAAO,aAEV,IAAIw7G,EAAa,OAKjB,OAHK/1G,EAAS4+D,aAAe5+D,EAASkxD,cAAelxD,EAASoxD,WAC3D2kD,EAAa,OAET,CACJx7G,OACA7B,GAAIqB,EAAI66G,UACRoB,aAAc,CAAE9wB,KAAM,IACtB+wB,UAAW,CAAE/wB,KAAM,IACnBgxB,WAAW,EACX5yD,SAAUtjD,EAAS4+D,WACnBu3C,gBAAgB,EAChBx7G,OAAQqF,EAASrF,QAAU,EAC3By7G,WAAY,SACZ3a,OAAQsa,EACR7kC,OAEGlxE,EAASi/D,eAAel/D,OAAS,GACjCC,EAASk/D,aAAan/D,OAAS,EAClCykG,SAAS,EAgBT6R,YAAY,EACZr6G,GAAI,CACDs6G,eAAgB,SAAU9yG,EAAM+yG,GAC7B,IAAmD,GAA/Cl5B,EAAKi4B,iBAAiBvuG,QAAQvD,EAAKguE,QACpC,OAAO,EACH,GAAIxxE,EAAS4+D,WAAY,CAC7B,MACMgc,EADayC,EAAK53D,eAAeD,WACR7kB,QAC3BC,GAAMA,EAAEF,aAAe8C,EAAKguE,SAC9B,GAEF,GAAmB,MAAfoJ,EAAqB,OAAO,EAEhC,MAAM47B,EAAW38G,KAAK03E,YAAY,CAC5Bt4D,IAAKzV,EAAKyV,IACVu4D,OAAQhuE,EAAKguE,SAEhB1pD,EAAUjuB,KAAK0sB,QAAQ/iB,EAAKyV,KAE/B,OAAO2hE,EAAY4E,WAAW13D,EAAS,KAAM0uF,EAChD,CAAO,SAAKx2G,EAASkxD,cAAgBlxD,EAASoxD,gBAAvC,CAEV,EACAqlD,cAAe,CAACjzG,EAAM+yG,KAMf18G,KAAKmG,SAAS4+D,YACf/kE,KAAK48G,cAAcjzG,EAAM+yG,EAC5B,EAEHG,kBAAmB,SAAUh+G,GAC1B,GAAyB,2BAApBmB,KAAK0sB,QAAQ7tB,GAAiC,OAAO,CAC7D,EACAi+G,QAAS,SAAU19F,EAAK2jE,EAAKptE,GAE1B,GAAW,0BAAPotE,EAGDS,EAAKu5B,0BAEL,GAAI52G,EAAS4+D,WAAY,CAGtB,MAAMxZ,EAAQ,CACX7oD,MAAOiT,GAEJtQ,EAAS,CACZ+Z,IAAKA,EACLu4D,OAAQoL,EACR/gF,OAAQ,MAGXwhF,EAAKw5B,gBAAgBzxD,EAAOlmD,EAC/B,KAAO,CACSrF,KAAK03E,YAAY,CAC3Bt4D,IAAKA,EACLu4D,OAAQoL,IAEWtO,cACnB,0BAISM,QADD,GAAPp/D,CAKP,CAEN,EACAsnG,iBAAkB,SAAU1xD,EAAOlmD,GAEnC,EACA23G,gBAAiB,CAACzxD,EAAOlmD,EAAQ63G,KACF,GAAxBl9G,KAAKo7G,iBACNp7G,KAAKg9G,gBAAgBzxD,EAAOlmD,EAAQ63G,EAAa,EAEvDC,kBAAmB,WAChBn9G,KAAKo7G,iBAAkB,CAC1B,EACAgC,oBAAqB,WAClBp9G,KAAKo7G,iBAAkB,CAC1B,EAMAiC,eAAgB,SACbx2G,EACAiwE,EACA4B,EACA4kC,GAWA,IAA4C,GAPpB,CACrB,yBACA,wBACA,uBACA,oBAGiBpwG,QAAQrG,GAAmB,CAE5C7G,KAAKgjF,aAELhjF,KAAKu9G,eAAe12G,EAAY6xE,GAChC14E,KAAKijF,eAIL,MAAMtL,EAAS6L,EAAKg6B,gBAEpB32G,EAAa8wE,EAAO94E,IAIjBi4E,EADCA,EAAW4B,EACDf,EAAO52E,MAAQ,GAIf42E,EAAO52E,OAAS+1E,EAAW,KAO1B,KACZA,EAAW,IAGda,EAAOnL,SAAWsK,EAElB92E,KAAKu9G,eAAe12G,EAAYiwE,EACnC,CAEIwmC,GACD95B,EAAK65B,eACFx2G,EACAiwE,EACA4B,EACA4kC,EAGT,EACAG,YAAcjvF,IAAD,EAKbkvF,mBAAoB,CAACz4E,EAAUzU,OACmB,IAA7CxwB,KAAKy7G,iBAAiBvuG,QAAQ+3B,IACnC04E,mBAAoB,CAAC14E,EAAUC,EAAU1U,OAGS,IAA7CxwB,KAAKy7G,iBAAiBvuG,QAAQg4B,IACnC04E,kBAAmB,CAAC34E,EAAUC,EAAU1U,IACrCxwB,KAAK49G,kBAAkB34E,EAAUC,EAAU1U,GAU9CqtF,cAAe,CAACh/G,EAAII,EAAGqD,KAEpBtC,KAAK69G,cAAch/G,EAAII,EAAGqD,EAAK,GAI3C,CAEAw7G,WACG,OAAO99G,KAAKU,KAAKghD,aAAajhD,IAGjC,CAOAs9G,YACG,MAAM79G,EAAMF,KAAKE,IACXsjF,EAAOxjF,KAEb,MAAO,CACJU,KAAM,UACN7B,GAAIqB,EAAIu6G,QACRn+B,QAAQ,EACRr7E,IAAK,kBACLC,KAAM,CACH,CACGR,KAAM,SACN7B,GAAIqB,EAAI06G,iBACR35G,IAAK,oBACLE,MAAOnB,KAAKmB,MAAM,QAClBiK,KAAM,wBACNzJ,KAAM,OACNwoC,UAAU,EACV9oC,WAAW,EACXC,MAAO,WACJkiF,EAAKw6B,kBAAkBh+G,KAAKuN,MAC/B,GAEH,CACG7M,KAAM,SACN7B,GAAIqB,EAAIw6G,qBACRz5G,IAAK,oBACLE,MAAOnB,KAAKmB,MAAM,UAClBiK,KAAM,cACNzJ,KAAM,OACNwoC,UAAU,EACV9oC,WAAW,EACXC,MAAO,WACJkiF,EAAKy6B,sBAAsBj+G,KAAKuN,MACnC,GAEH,CACG7M,KAAM,SACN7B,GAAIqB,EAAIy6G,aACR15G,IAAK,oBACLE,MAAOnB,KAAKmB,MAAM,WAClBiK,KAAM,eACNzJ,KAAM,OACNN,WAAW,EACXC,MAAO,WACJkiF,EAAKuoB,cAAc/rG,KAAKuN,MAC3B,GAEH,CACG7M,KAAM,SACN7B,GAAIqB,EAAI26G,WACR55G,IAAK,oBACLE,MAAOnB,KAAKmB,MAAM,QAClBiK,KAAM,aACNzJ,KAAM,OACNN,WAAW,EACXC,MAAO,WACJkiF,EAAK06B,YAAYl+G,KAAKuN,MACzB,GAEH,CACG7M,KAAM,SACN7B,GAAIqB,EAAI46G,aACR75G,IAAK,oBACLE,MAAOnB,KAAKmB,MAAM,UAClBiK,KAAM,cACNzJ,KAAM,OACNN,WAAW,EACXC,MAAO,WACJkiF,EAAK26B,cAAcn+G,KAAKuN,MAC3B,GAEH,CAAC,EACD,CACG1O,GAAIqB,EAAIorG,oBACR5qG,KAAM,SACNy+E,YAAan/E,KAAKmB,MAAM,aACxBgB,GAAI,CACDk/E,gBAAiB,KACd,MAAMj8D,EAAa1hB,GAAGxD,EAAIorG,qBAAqBx/F,WAE/C9L,KAAKU,KAAKghD,aAAawqD,mBAAmB9mF,EAAW,KAMvE,CAEA3kB,KACG,MAAM29G,EAAU,CACbv/G,GAAImB,KAAKE,IAAIs6G,MACb74G,KAAM,QACND,YAAY,EACZE,KAAM,CACH,CAAC,EACD,CACGlB,KAAM,QACNS,MAAOnB,KAAKmB,MAAM,6BAClBk9G,WAAY,IACZj9G,MAAO,UAEV,CAAC,IAID+E,EAAWnG,KAAKmG,UAElBnG,KAAK4rB,gBAA0C,KAAxBzlB,EAAS4vD,cACjCqoD,EAAQ77G,QAAU4D,EAAS5D,QAC3B67G,EAAQx8G,KAAO,GACXuE,EAAS2+D,aACVs5C,EAAQx8G,KAAKyC,KAAKrE,KAAK+9G,aAEtB/9G,KAAKmG,SAASm/D,WAAWC,cAC1B64C,EAAQx8G,KAAKyC,KAAKrE,KAAK89G,YAG1BM,EAAQx8G,KAAKyC,KAAKrE,KAAKg8G,gBAG1B,MAAM/V,EAAMnmG,MAAMW,GAAG,CAAC29G,IAItB,cAFOnY,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,EAAI46D,EAAc,GACtB56D,SAAUhC,MAAMuD,KAAKvB,GAEzB,MAAM0hF,EAAOxjF,KACPE,EAAMF,KAAKE,IAIXonG,EAAUxlG,EAAG6Y,MAEnB2sF,EAAQgX,SAAW,GACnBhX,EAAQiX,IAAM,YAUd,MAAMC,EAAax+G,KAAKs6G,eAExB,IAAImE,EAAwB,KACxBC,EAAgB,KAEpB,IAAKF,EAAY,OAEjBlX,EAAQ7jG,OAAO+6G,EAAYlX,EAAQ3jG,aAEnC66G,EAAWx8G,OAAO06D,YAAcA,EAE5BA,EAAc,GAAG8hD,EAAWh6G,OAAO,YAAY,GAEnD,MAAM2B,EAAWnG,KAAKmG,SAEhBoxE,EAAkB5tE,IACrB,MAAMW,EAAgBtK,KAAK4rB,gBAAgBD,WAE3C,IAAKrhB,IAAkBk0G,EAAW70G,KAAM,OAExC,MAAMg1G,EAAiB,GAEjBC,EAAsBJ,EAAWK,iBAAiBpjD,EACrDqjD,EAAYN,EAAWx8G,OAAO88G,UAG9BC,GADGP,EAAWjxG,MAAMknE,cAAc,kBAAkB+d,aACpClsF,KAAKC,MAAMq4G,EAAsBE,IACjDE,EAAcD,EAAgBP,EAAWS,kBAE5C,IAAIrzG,EAAQ,EAEZ4yG,EAAW70G,KAAKu+D,MAAMuhB,MAAM5qF,IACf,MAANA,GAAckgH,GAAiBnzG,GAASA,GAASozG,GAClDL,EAAet6G,KAAKxF,GAEvB+M,GAAO,IAGV,IAAI69C,EAAWtjD,EAAS4+D,WAEpBy5C,EAAWx8G,OAAO06D,YAAc,IAAGjT,GAAW,GAElDn/C,EAAcitE,eACX5tE,EACA3J,KAAK8B,GAAGy6B,KACRiiF,EACAG,EACAl1D,EACF,EAGJ+0D,EAAWvvF,YAAY,iBAAiB,SAAUtlB,GAC/C60G,EAAW59G,SAEP69G,GAAuB7qG,aAAa6qG,GAExCA,EAAwBnqG,YAAW,KAC5BoqG,GAAe9qG,aAAa8qG,GAChCnnC,EAAev3E,KAAK2J,KAAK,GACzB,KAEH7H,EAAG0c,QAAQ0gG,YAAYV,GACvBn/G,OAAOD,KAAKc,GAAK8D,SAASI,IACvB,MAAM+4E,EAAMz5E,GAAGxD,EAAIkE,IACf+4E,GACDr7E,EAAG0c,QAAQ0gG,YAAY/hC,EAC1B,GAEN,IAKAqhC,EAAWvvF,YAAY,YAAY,WAC5ByvF,GAAe9qG,aAAa8qG,GAE5BD,GAAuB7qG,aAAa6qG,GAExCC,EAAgBpqG,YAAW,KACxBijE,EAAev3E,KAAK2J,KAAK,GACzB,KACN,IACA60G,EAAWvvF,YAAY,iBAAiB,WACjCwvF,GAAuB7qG,aAAa6qG,GAExCA,EAAwBnqG,YAAW,KAC5BoqG,GAAe9qG,aAAa8qG,GAChCnnC,EAAev3E,KAAK2J,KAAK,GACzB,IACN,IAIA60G,EAAWvvF,YAAY,eAAe,SAAUpwB,EAAII,EAAGqD,GAEpD,MAAMsqB,EAAK42D,EAAK53D,eACVthB,EAAgBsiB,GAAIjB,WAE1B,GAAKrhB,EAOL,GAL4B,IAAxBnE,EAAS4+D,YACIy5C,EAAW9xF,QAAQ7tB,GAI1B,SAANI,GAAgBA,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,QAAU,EAEtDs2E,EAAKuhB,WAAWn4E,EAAI/tB,EAAIsH,EAASkxD,aACjCmsB,EAAK27B,UAAUh5G,EAASmxD,WAAYt3D,WAChC,GAAIf,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,WAAa,EAChDs2E,EAAKuhB,WAAWn4E,EAAI/tB,EAAIsH,EAASoxD,UACjCisB,EAAK27B,UAAUh5G,EAASqxD,QAASx3D,WAC7B,GAAIf,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,UAAY,EAC/Cs2E,EAAKp0E,KAAK,eAAgB9E,EAAezL,EAAGugB,UAE1C,GAAIngB,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,sBAAwB,EAAG,CAC5D,MAAMkyG,EAAa,CAAC,EAEpBA,EAAWvgH,EAAG84E,QAAU,GAENzyE,WACf,UAC0BoF,EAAcvC,QAAQouE,OAC1Ct3E,EAAGugB,IACHggG,EAWN,CAPE,MAAOl3G,GACNs7E,EAAK1hF,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,kCACT+B,QAAS,sBACTuG,IAAKlN,EAAczE,QACnBhH,GAAIA,EAAGugB,KAEb,GAGHigG,EACH,MAESpgH,EAAE4rD,OAAOiD,UAAU5gD,QAAQ,UAAY,EAExClN,KAAKs/G,sBACPt/G,KAAKs/G,oBAAsBhY,EAAQ/1F,QAAQ,CACxCR,MAAOyyE,EAAKriF,MAAM,eAClB8M,KAAMu1E,EAAKriF,MAAM,mCACjBqQ,SAAW7D,WACD3N,KAAKs/G,oBACR3xG,GACiBzI,WACf,WAEYoF,EAAcvC,QAAQgO,OAAOlX,EAAGugB,MAE5BmgG,QAAU,GACpBf,EAAWzjG,OAAOlc,GAClB2/G,EAAWh/F,kBAEX8nF,EAAQx2F,MAAM,CACX7C,KAAMu1E,EAAKriF,MACR,sDAYZ,CATE,MAAO+G,GACNs7E,EAAK1hF,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,kCACT+B,QAAS,sBACTuG,IAAKlN,EAAczE,QACnBhH,GAAIA,EAAGugB,KAIb,GAGHogG,GAGHhB,EAAWh/F,kBAEJ,MAIRrZ,EAASkxD,YAAYnxD,QAG7Bs9E,EAAKuhB,WAAWn4E,EAAI/tB,EAAIsH,EAASkxD,aACjCmsB,EAAK27B,UAAUh5G,EAASmxD,WAAYt3D,OAC5BmG,EAASoxD,SAASrxD,SAG1Bs9E,EAAKuhB,WAAWn4E,EAAI/tB,EAAIsH,EAASoxD,UACjCisB,EAAK27B,UAAUh5G,EAASqxD,QAASx3D,MAEvC,IAGImG,EAAS2+D,eAEP3+D,EAAS6+D,YACT7+D,EAAS0yC,YACT1yC,EAAS++D,cACR/+D,EAASm/D,YACPn/D,EAASm/D,WAAWC,cACuB,YAA3Cp/D,EAASm/D,WAAWE,qBAEvB9hE,GAAGxD,EAAIu6G,SAAS91G,OAEdwB,EAAS6+D,aACXthE,GAAGxD,EAAI06G,kBAAkBl2G,OACzBhB,GAAGxD,EAAIw6G,sBAAsBh2G,QAG3ByB,EAAS8+D,aAAavhE,GAAGxD,EAAIw6G,sBAAsBh2G,OAEpDyB,EAASm/D,aAE8B,IAArCn/D,EAASm/D,WAAWC,cACuB,YAA3Cp/D,EAASm/D,WAAWE,oBAEpB9hE,GAAGxD,EAAIy6G,cAAcj2G,OAGgB,IAArCyB,EAASm/D,WAAWC,cACyB,WAA7Cp/D,EAASm/D,WAAWm6C,sBAEpBjB,EAAW95G,OAEVyB,EAASm/D,WAAWG,gBACrB/hE,GAAGxD,EAAIorG,qBAAqB3mG,OAC1BjB,GAAGxD,EAAIorG,qBAAqB5mG,OAE7ByB,EAASm/D,WAAWC,cACrBvlE,KAAKU,KAAKghD,aAAar+C,KAAKrD,KAAK8B,KAGlCqE,EAAS0yC,YAAYn1C,GAAGxD,EAAI26G,YAAYn2G,OAExCyB,EAAS++D,cAAcxhE,GAAGxD,EAAI46G,cAAcp2G,QAGhDyB,EAASu/D,YAAY1lE,KAAK0lE,aAE9B,MAAM94C,EACH5sB,KAAK4rB,gBAAkB5rB,KAAK8B,GAAGiqB,mBAAmB5lB,EAAS4vD,YAEzD/1D,KAAK47G,yBAAyB57G,KAAK42G,mBAAmBhqF,GAG3D5sB,KAAK27G,cACF37G,KAAK27G,qBACE37G,KAAK8B,GAAGgY,QAAQxE,IAAItV,KAAK67G,qBAChC,CAAC,EAEAjvF,GAAIjB,aAGL3rB,KAAK+lG,SAAS1iG,KAAK,CAChB3C,KAAMV,KAAKU,KACXkrB,eAAgBgB,IAGnB5sB,KAAK0/G,gBAEX,CAOAj7B,OACGzkF,KAAKs6G,gBAAgBl1G,eAAe,CAAEzD,KAAM,QAC/C,CAWA6pG,mBAAmB9F,EAAUC,EAAc,IACxC,MAAMzlG,EAAMF,KAAKE,IACXy/G,EAAgBj8G,GAAGxD,EAAIy6G,cAE7B,GAAIgF,EAAe,CAChB,MAAMjT,EAAkB1sG,KAAKU,KAAKghD,aAAaikD,cAE/Cga,EAAcn7G,OAAO,QAASkoG,GAAiBrrF,OAAOnb,QAAU,GAChEy5G,EAAcl7G,SACjB,CAEA,MAAMmoB,EAAK5sB,KAAK4rB,eAEhBgB,EAAGiC,gBAAgB82E,GACnB/4E,EAAG6D,YACN,CAEAvrB,uBAAuBsnG,EAAY,IAChC,MAAMoT,EAAcl8G,GAAG1D,KAAKE,IAAI26G,YAEhC+E,EAAYp7G,OAAO,QAASgoG,EAAUtmG,QAAU,MAChD05G,EAAYn7G,UAEZ,MAAMo7G,EAAW7/G,KAAKs6G,eAEtB,GAAIuF,EAASl2G,KAAKqjB,KAAK,CAAC,GAAG9mB,OAAS25G,EAASl2G,KAAK6nB,QAC/C,UAGSxxB,KAAK4rB,eAAe6E,WAAW,EAAG,EAM3C,CALE,MAAOvoB,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,4EAET,CAIHoF,YAAW,KACRurG,EAASryG,MAAK,CAACC,EAAGC,IAAM1N,KAAKw7G,4BAA4BhuG,KAAKC,EAAGC,IAAG,GACpE,IACN,CAaAq3F,WAAWtxE,EAAIqsF,EAAS13C,GACrB,MAAM55C,EAAQsxF,GAAS1gG,KAAO,KAG1BqU,GAAIA,EAAGrH,UAAUoC,GAGjBxuB,KAAK+lG,SAAU/lG,KAAK+lG,SAAShB,WAAW38B,EAAM55C,GAC7C1uB,MAAMilG,WAAW38B,EACzB,CAEA97D,aAAagK,EAAU,IACpBtW,KAAKmG,SAASmG,aAAegK,CAChC,CAQAsgG,mBAAmBhqF,GAChB,MAAMmzF,EAAQ//G,KAAK4rB,eACnB5rB,KAAK4rB,eAAiBgB,EAEtB,MAAMtiB,EAAgBsiB,GAAIjB,WACpB6yF,EAAax+G,KAAKs6G,eAEpBkE,IAEIx+G,KAAKggH,oBACPhgH,KAAKggH,kBAAoB,KACtBhgH,KAAKykF,MAAM,EAGdzkF,KAAKigH,mBAAqB,KACvBjgH,KAAK6kF,QACL7kF,KAAKkgH,mBAAmB,EAG3BlgH,KAAKmgH,sBAAwB,KAC1BngH,KAAKkgH,mBAAmB,GAI1BH,IAEDA,EAAM/oF,eAAe,mBAAoBh3B,KAAKggH,mBAC9CD,EAAM/oF,eAAe,kBAAmBh3B,KAAKigH,oBAC7CF,EAAM/oF,eAAe,WAAYh3B,KAAKmgH,wBAGrCvzF,GACGA,EAAGd,oBAAsBc,EAAGZ,UAC7BY,EAAGoI,KAAKwpF,EAAY5xF,EAAGd,mBAAoBc,EAAGZ,WAC5CY,EAAGoI,KAAKwpF,GAGb5xF,EAAGoK,eAAe,mBAAoBh3B,KAAKggH,mBAC3CpzF,EAAGzqB,GAAG,mBAAoBnC,KAAKggH,mBAC/BpzF,EAAGoK,eAAe,kBAAmBh3B,KAAKigH,oBAC1CrzF,EAAGzqB,GAAG,kBAAmBnC,KAAKigH,oBAC9BrzF,EAAGoK,eAAe,WAAYh3B,KAAKmgH,uBACnCvzF,EAAGzqB,GAAG,WAAYnC,KAAKmgH,uBACvBngH,KAAKqoC,WAELroC,KAAKogH,uBAAwB,GACzB5B,EAAWvpF,SAGd3qB,IACDtK,KAAKU,KAAKghD,aAAa38C,WAAWuF,GAClCtK,KAAKu7G,yBAAyBx2G,WAC3BuF,EACAtK,KAAKs6G,gBAERt6G,KAAKw7G,4BAA4Bz2G,WAAWuF,GAE5CtK,KAAKs7G,YAAYv2G,WAAWuF,GAC5BtK,KAAKs7G,YAAYxC,mBAAmBlsF,GACpC5sB,KAAKs7G,YAAYrC,iBAAiBj5G,KAAKs6G,gBACvCt6G,KAAKs7G,YAAYvC,gBAAgB/4G,KAAKmG,SAAS+9B,cAC/ClkC,KAAKs7G,YAAYtC,YAAYh5G,KAAKU,KAAKS,QAGhD,CAQAk/G,sBACG38G,GAAG1D,KAAKE,IAAI06G,mBAAmBz1G,UAC/BzB,GAAG1D,KAAKE,IAAIw6G,uBAAuBv1G,UAEnCnF,KAAKoP,KAAK,oBACb,CAQAkxG,qBACG58G,GAAG1D,KAAKE,IAAI06G,mBAAmBnzG,SAC/B/D,GAAG1D,KAAKE,IAAIw6G,uBAAuBjzG,SAEnCzH,KAAKoP,KAAK,YACb,CAEAmxG,qBAGG,OAAOvgH,KAAKs6G,eAAe91G,OAAO,aAAcxE,KAAKm7G,iBACxD,CAOAb,eACG,OAAO52G,GAAG1D,KAAKE,IAAI66G,UACtB,CAMAyC,gBACG,MAAMgB,EAAax+G,KAAKs6G,eAExB,IAAIkG,EAAa,CAAC,EASlB,OANAhC,EAAW/mC,YAAYzsE,IACpB,MAAMsB,EAAekyG,EAAWiC,gBAAgBz1G,GAErB,IAAvBsB,EAAakc,QAAag4F,EAAal0G,EAAY,IAGnDk0G,CACV,CAMAn4E,WACG,IAAKroC,KAAKmG,SAAS0/D,QAAS,OAE5B,MAAM66C,EAAa1gH,KAAKs6G,eAMlBqG,EAAe,CAAC,EACA3gH,KAAK4rB,eAAeD,WAE5B7kB,SAAS9C,SAAS+C,IAC7B,OAAQA,EAAE3C,KACP,IAAK,SACFu8G,EAAa55G,EAAEF,YAAc,CAACE,EAAEF,WAAY,OAE5C,MAEH,IAAK,YACL,IAAK,UACF85G,EAAa55G,EAAEF,YAAc,CAC1BE,EAAEF,WACF,CAACigC,EAAM85E,KACJ,IAAKA,EAAU,OAAO,EAEtB,IAAI5+D,EAAM,EASV,GAPA4+D,EAAS58G,SAASuL,IAGfyyC,GAAkC,EAA3Bj7C,EAAEyZ,OAAOjR,GAAG,GAAO,EAAS,IAIjCxI,EAAEilB,WAAiC,cAApBjlB,EAAEilB,UAAU5nB,IAE3B,CACF,MAAMo9C,EAAgB,CAAC,EAIvB,OAFAA,EAAcz6C,EAAEilB,UAAUnlB,YAAcm7C,EAEjCj7C,EAAEilB,UAAUxL,OAAOghC,EAC7B,CAPG,OAAOQ,CAOV,GAIN,MAEH,IAAK,gBACF2+D,EAAa55G,EAAEF,YAAc,CAC1BE,EAAEF,WACF,CAACigC,EAAM85E,KACJ,IAAKA,IAAaA,EAAS16G,OAAQ,OAAO,EAE1C,IAAIsrB,EAAQ,EAWZ,OATAovF,EAAS58G,SAASuL,IACf,MAAMsxG,EAActxG,EAAExI,EAAE+pB,gBAGpB+vF,GAAa36G,OAAQsrB,GAASqvF,EAAY36G,OAErC26G,IAAarvF,GAAS,EAAC,IAG5BA,CAAK,GAIlB,MAEH,QACGmvF,EAAa55G,EAAEF,YAAc,CAC1BE,EAAEF,WACF,SAAUigC,EAAM85E,GACb,IAAKA,IAAaA,EAAS16G,OAAQ,OAAO,EAE1C,IAAIsrB,EAAQ,EASZ,OAPAovF,EAAS58G,SAASuL,IACHu3B,EAAKv3B,KAGRiiB,GAAS,EAAC,IAGfA,CACV,GAIT,IAYH,IAAIsvF,GAAY9gH,KAAKmG,SAAS0/D,SAAW,IACrCr9C,MAAM,KACN9pB,KAAKqiH,GAAMA,EAAEx5E,SAEjBu5E,EAAWA,EAAS/4D,UAEpB+4D,EAAS98G,SAAQ,CAAC+0B,EAASioF,KACxB,MAAMC,EAAWjhH,KAAK8B,GAAG2D,UAAUk7G,GAEnC,IAAI9yG,EAGAmzG,IAAWF,EAAS56G,OAAS,EAAG2H,EAAKkrB,GAGtClrB,EAAMuR,IACH,IAAI8hG,EAAU9hG,EAAI2Z,GAElB,IAAK,IAAI7lB,EAAI8tG,EAAS,EAAG9tG,EAAI4tG,EAAS56G,OAAQgN,IAC3CguG,EAAU,GAAG9hG,EAAI0hG,EAAS5tG,SAASguG,IAGtC,OAAOA,CAAO,EAIjBJ,EAAS98G,SAASm9G,IACXA,IAAapoF,IAASkoF,EAASE,GAAY,CAACA,GAAS,KAI/DT,EAAW/2G,KAAKy3G,MAAM,CACnBvzG,GAAIA,EACJnP,IAAKuiH,GACN,GAER,CAEAv7C,aACG,MAAM84C,EAAax+G,KAAKs6G,eAExBkE,EAAWh6G,OAAO,UAAU,GAC5Bg6G,EAAW/5G,SACd,CAWAS,wBAAwB+/B,EAAUC,EAAU1U,GACtBxwB,KAAKs6G,eACFt6G,KAAK4rB,eAAeD,WAD1C,MAEMxlB,EAAWnG,KAAKmG,SAChBmG,EAAetM,KAAKmiB,gBAM1B,IAAIgjB,EAAY,KACZC,EAAO,EAEX,IAAK,IAAIlyB,EAAI,EAAGA,EAAI5G,EAAapG,OAAQgN,IACtC,GAAI5G,EAAa4G,GAAGrU,IAAMomC,EAAU,CACjCE,EAAY74B,EAAa4G,GACzB5G,EAAaN,OAAOkH,EAAG,GACvBkyB,EAAOlyB,EAEP,KACH,CAIH,IAAK,IAAImyB,EAAI,EAAGA,EAAI/4B,EAAapG,OAAQm/B,IACtC,GAAI/4B,EAAa+4B,GAAGxmC,IAAMqmC,EAAU,CAI7BE,GAAQC,GAAGA,IAEf/4B,EAAaN,OAAOq5B,EAAG,EAAGF,GAE1B,KACH,CAWHnlC,KAAKmiB,cAAc7V,GAEfnG,EAAS2/D,WAAW9lE,KAAKqhH,oBAM7BrhH,KAAKoP,KACF,eACA9C,EAAa5N,KAAK4E,GAAMA,EAAEu5B,WAG7B78B,KAAK0/G,eAuCR,CAUAx6G,sBAAsBqmD,EAAOlmD,EAAQ63G,GAIlC,MAAMsB,EAAax+G,KAAKs6G,eAGxB,IACK/uD,EAAM+1D,KAAuB,KAAhB/1D,EAAM7oD,OACN,KAAd6oD,EAAM+1D,KAA8B,KAAhB/1D,EAAM7oD,MAI3B,OAFA87G,EAAWh/F,kBAEJ,EAGV,GAAIna,EAAOrD,OACR,OAAQqD,EAAOrD,OAAOqD,QACnB,IAAK,SACFkmD,EAAM7oD,MAAQw4C,WAAWqQ,EAAM7oD,OAE/B,MAEH,IAAK,WACF6oD,EAAM7oD,MAAQ6oD,EAAM7oD,MAAM+3C,UAEtB8Q,GAASA,EAAM+1D,KAAO/1D,EAAM+1D,IAAI7mE,UACjC8Q,EAAM+1D,IAAM/1D,EAAM+1D,IAAI7mE,WAQlC,GAAI8Q,EAAM7oD,QAAU6oD,EAAM+1D,IAAK,CAC5B,MAAMtzG,EAAOwwG,EAAW9xF,QAAQrnB,EAAO+Z,KAEvCpR,EAAK3I,EAAOsyE,QAAUpsB,EAAM7oD,MAE5B87G,EAAW+C,cAAcvzG,EAAKnP,GAAIwG,EAAOsyE,OAAQ,iBACjD6mC,EAAW+C,cAAcvzG,EAAKnP,GAAIwG,EAAOsyE,OAAQ,sBAEjD,MAAMrtE,EAAgBtK,KAAK4rB,eAAeD,WACpCrkB,EAAYgD,EAAc6lB,YAAYniB,GAE5C,GAAI1G,EAAUoW,OAAQ,CAQnB,MAAM2pF,EAAKrnG,KAAK8B,GAEhB,UACSwI,EAAcvC,QAAQouE,OAAOnoE,EAAKnP,GAAImP,GAExCwwG,EAAW1xF,OAAOznB,EAAO+Z,OAC1Bo/F,EAAWvtF,WAAW5rB,EAAO+Z,IAAKpR,GAClCwwG,EAAWh/F,iBACXg/F,EAAW/5G,QAAQY,EAAO+Z,KA0BhC,CAxBE,MAAOlX,GACNm/F,EAAGl/F,OAAOC,UAAUF,EAAK,CACtBgH,QAAS,kDACTlB,OACA3I,SACAkmD,QACAvmD,OAAQsF,EAAczE,UAGzB24G,EAAWh/F,iBAGR6nF,EAAGtpF,WAAWK,sBACXlW,EACA7C,EAAO+Z,IACPo/F,EAST,CA8BH,MAAOl3G,EAAU2W,WAAW5Y,EAAO+Z,IAAKo/F,EAC3C,MAAOA,EAAWh/F,iBAElB,OAAO,CA4BV,CASAo9F,cAAcjzG,GAMX3J,KAAKs6G,gBAAgBkH,SAAS73G,EAAKyV,IAAKzV,EAAKguE,OAChD,CAWAzyE,qBAAqB2B,EAAYiwE,EAAU4B,EAAU4kC,GAGlD,IAAImE,GAAiB,EAErB,MAAMpa,EAAKrnG,KAAK8B,GAEZg1E,EAAW,KACZA,EAAW,GACX2qC,GAAiB,EAEjBpa,EAAG1sF,MAAM1J,QAAQ,CACdtP,KAAM,OACNsM,KAAMjO,KAAKmB,MAAM,8BAA+B,CAAC,KACjD2Q,OAAQ,OAId,MAAMqQ,EAAgBniB,KAAKmiB,gBAE3B,GAAIA,EAAe,CAChB,MAAMkhB,EAASlhB,EAAc6K,MAAMtG,GAAMA,EAAE7nB,IAAMgI,IAE7Cw8B,IACDA,EAAOtiC,MAAQ+1E,SAERzzC,EAAO+zC,OAEpB,CAEAp3E,KAAKmiB,cAAcA,GAEfniB,KAAKmG,SAAS2/D,iBACT9lE,KAAKqhH,oBAaVI,GAAgBzhH,KAAK0/G,gBAEzB1/G,KAAKugH,qBAMLvgH,KAAKoP,KAAK,gBAAiBvI,EAAYiwE,EAAU4B,EACpD,CAMAmlC,cAAch/G,EAAII,EAAGqD,GAClB,IAAkD,IAA9CtC,KAAKy7G,iBAAiBvuG,QAAQrO,EAAG84E,QAAgB,OAAO,EAK5D,MAAM+pC,EAAY1hH,KAAK4rB,eAAeD,WAAW7kB,QAC7CC,GAAMA,EAAEF,aAAehI,EAAG84E,SAC5B,GAQF,OAFA33E,KAAKoP,KAAK,wBAAyB9M,EAAMo/G,IAElC,CACV,CAMAr3G,SACGvK,MAAMuK,SAGNrK,KAAKs6G,gBAAgBljC,SAErB,MAAM3jD,EAAKzzB,KAAK4rB,eAEZ6H,GACDzzB,KAAKoyB,SAAS,CACXC,QAASoB,EACTnB,UAAW,eACXC,SAAUvyB,KAAKg7G,eAAehmF,KAAKh1B,OAE5C,CAMA6kF,QACG,MAAMj4D,EAAK5sB,KAAK4rB,eAEb5rB,KAAK2hH,eACL/0F,GAAIT,YAAcS,GAAInC,eAAeyB,aAIxClsB,KAAKs6G,gBAAgB5yG,gBACxB,CAUAg4G,cAAckC,EAAc5hH,KAAK4hH,aAG9B,MAAMt3G,EAAgBtK,KAAK4rB,eAAeD,WAE1C,IAAKrhB,EAAe,OAEpB,MAAMpK,EAAMF,KAAKE,IACXs+G,EAAa96G,GAAGxD,EAAI66G,WAE1B,IAAKyD,EAAY,OAEjB,MAAM9hD,EAAc8hD,EAAWx8G,OAAO06D,YAEtC8hD,EAAWh6G,OAAO,YAAa,GAC/Bg6G,EAAWh6G,OAAO,aAAc,GAEhC,IAAIs6G,EAAY,EAEhBx0G,EAAck7B,cAAcxhC,SAASs2D,IAClC,MAAMn0D,EAAWm0D,EAAMnuD,cAEnBhG,EAASo8C,WAAap8C,EAASq8C,YAAcs8D,IAC9CA,EAAY34G,EAASq8C,YAAW,IAGlCs8D,GAAWN,EAAWh6G,OAAO,YAAas6G,GAI9C,MAAM34G,EAAWnG,KAAKmG,SAEtB,IAAIsjD,EAAWtjD,EAAS4+D,WAEpBy5C,EAAWx8G,OAAO06D,YAAc,IAAGjT,GAAW,GAIlD,MAAMo4D,EAAmBv3G,EAAcysE,eACpC,EACAttB,EAEA,GACA,GACA,IAGH,IAAIstB,EAAgB/2E,KAAKmiB,gBAEzB,MAAMklF,EAAKrnG,KAAK8B,GAGXi1E,IAAiB6qC,IACnB7qC,EAAgBswB,EAAG5hG,UAAUzF,KAAKmG,SAASmG,eAGjB,IAAzByqE,EAAc7wE,SAAc6wE,EAAgB8qC,GAKhD,MAAMC,EAAqBD,EAAiBnjH,KAAKgoB,GAAMA,EAAEmW,UAEzDk6C,EAAgBA,EAAcnuE,QAC1BtF,GAAMw+G,EAAmB50G,QAAQ5J,EAAEu5B,UAAY,IAInDk6C,EAAc/yE,SAASV,IAGpB,MAAMy+G,EAAUF,EAAiB70F,MAAMtG,GAAMA,EAAEmW,UAAYv5B,EAAEu5B,UAO7Dx9B,OAAOD,KAAK2iH,GAAS/9G,SAASgQ,IACD,mBAAf+tG,EAAQ/tG,IAA2B,YAANA,IACrC1Q,EAAE0Q,GAAK+tG,EAAQ/tG,GAClB,IAGH,MAAMjN,EAAIuD,EAAcsD,UAAUtK,EAAEu5B,SAE/B91B,IAGDZ,EAAS+9B,aAAah3B,QAAQnG,EAAEF,aAAe,IAChDvD,EAAEg5E,QAAS,GAIVn2E,EAASi/D,eAAel4D,QAAQnG,EAAElI,KAAO,EAC7B,aAATkI,EAAE3C,KAA+B,WAAT2C,EAAE3C,IAC3Bd,EAAE+zE,OAAS,CAAEC,QAAS,cAAe3xE,MAAOoB,GAC1CzD,EAAE+zE,OAAS,CAAEC,QAAS,cAGrBnxE,EAASk/D,aAAan4D,QAAQnG,EAAElI,KAAO,IAC7CyE,EAAE+zE,OAAS,CAAEC,QAAS,gBAAe,IAG3C,IAAIn1D,EAAgBniB,KAAKmiB,gBAEpBA,IAAiBy/F,IACnB5hH,KAAKmiB,cAAc40D,GAEnB50D,EAAgB40D,GAGnBA,EAAgBswB,EAAG5hG,UAAU0c,GAE7B,MAAM6/F,EAAmB,GACnBC,EAAW,GA0EjB,GAxEAlrC,EAAc/yE,SAAS++E,IAKpB,GAJAA,EAAItgF,WAAY,EAIZsgF,EAAI5L,kBAC8B,iBAAxB4L,EAAI5L,kBACZ4L,EAAI5L,gBAAkBzjE,KAAKuD,MAAM8rE,EAAI5L,kBAGpC4L,EAAI5L,gBAAgBjxE,QAAQ,CAC7B,MAAMg8G,EAAe,GAGrBn/B,EAAI5L,gBAAgBnzE,SAAS+rB,IAC1B,MAAMw1D,EAAS8hB,EAAGhyE,iBACf0tD,EAAIlkF,IAGPqjH,EAAa79G,KAAKkhF,EAAO9kF,IAEzBuhH,EAAiB39G,KAAK,CACnBuE,OAAQ28E,EACR7kF,KAAM6kF,EAAOrlF,IAAIk8E,aACjBv1E,WAAYk8E,EAAIlkF,GAChBs4E,gBAAiBpnD,EAAK1O,MACtBgvD,eAAgBtgD,EAAKsgD,gBACtB,IAIL,MAAM8xC,EACHjiH,EAAImhB,MAAQ,IAAM0hE,EAAIlkF,GAGzBojH,EAAS59G,KAAK89G,GAEd9a,EAAG1sF,MAAMla,GAAG,CACTC,KAAM,QACNO,IAAK,iBACLpC,GAAIsjH,EACJ3gH,KAAM,CACHI,KAAMsgH,IAGf,CAIH,GACG/7G,EAAS0/D,UACR1/D,EAAS0/D,SAAW,IAAI34D,QAAQ61E,EAAIlkF,KAAO,EAC7C,CACC,MAAMujH,EAAa93G,EAAcsD,UAAUm1E,EAAIlmD,SAE3CulF,IACDr/B,EAAIpc,SAAW,CAACnvD,EAAKw2B,KAElB,GAAIx2B,EAAIsuE,OAAQ,CACb,MAAM73D,EAAUo5E,EAAG5hG,UAAU+R,GAI7B,OAFAyW,EAAQm0F,EAAWv7G,YAAconB,EAAQvrB,MAGtCsrC,EAAOq0E,UAAU7qG,EAAKw2B,GACtBo0E,EAAW5hG,OAAOyN,EAExB,CAAO,OAAOm0F,EAAW5hG,OAAOhJ,EAAI,EAE7C,KAGCwqG,EAAiB97G,OAAQ,CAE1B,MAAMo8G,EAAqB,GAE3BN,EAAiBh+G,SAAS+C,IAGvBA,EAAE6B,OAAO0sB,WAAWhrB,EAAcxD,UAElCC,EAAE6B,OAAOhE,SAASmC,EAAEowE,iBAGfnqE,MAAMC,QAAQq1G,EAAmBv7G,EAAEF,eACrCy7G,EAAmBv7G,EAAEF,YAAc,IAGtCy7G,EAAmBv7G,EAAEF,YAAYxC,KAAK,CACnCuyB,QAASlzB,GAAGqD,EAAErG,MAAM6hH,kBACpB78G,OAAQ84G,EAAWgE,kBACnBnyC,eAAgBtpE,EAAEspE,gBACnB,IAGL,MAAMhvD,EAAQ,CAAC,EAGfm9F,EAAWjxG,MAAM+0G,mBAAqBA,EAEtCjjH,OAAOD,KAAKkjH,GAAoBt+G,SAASI,IACtCid,EAAMjd,GAAO,CAAC1B,EAAOiH,KAElB,IAAIrE,GAAU,EACV+qE,EAAiB,GA8BrB,OA5BAmuC,EAAWjxG,MAAM+0G,mBAAmBl+G,GAAKJ,SAAS4E,IAE/C,MAAM65G,EAAU,CAAC,GAEhBn4G,EAAcxD,UAAY,IAAI9C,SAAS2B,IACrC88G,EAAQ98G,EAAM9G,IAAM8K,EAAKhE,EAAMkB,WAAW,IAIzC8C,EAAK6F,OAAMizG,EAAqB,YAAI94G,EAAK6F,MAG3B5G,EAAOguB,QAAQ6rF,KAI9Bn9G,GAAU,EACV+qE,EAAiBznE,EAAOynE,eAC3B,IAIE/qE,GACF+hG,EAAG1sF,MAAM1J,QAAQ,CACdtP,KAAM,QACNsM,KAAMoiE,IAGL/qE,CAAO,CAChB,IAGJk5G,EAAWh6G,OAAO,QAAS6c,GAE3Bm9F,EAAWx8G,OAAOigH,SAAWA,EAC7BzD,EAAW/5G,SACd,MAEO+5G,EAAWx8G,OAAOigH,UACnBzD,EAAWx8G,OAAOigH,SAASj+G,SAASm4E,IAC7Bz4E,GAAGy4E,IAAQz4E,GAAGy4E,GAAOumC,YAAY,IAG3ClE,EAAWh6G,OAAO,QAAS,CAAC,GAC5Bg6G,EAAW/5G,UAGd,MAAMk+G,EAAe,GAKjBx8G,EAASw/D,eAEVoR,EAAc3jD,QAAQ,CACnBv0B,GAAI,yBACJwkC,OAAQ,QACR5gC,WAAW,EACXkkE,SAAWnvD,GAAQlN,EAAc68B,YAAY3vB,KAGhDmrG,EAAat+G,KAAK,2BAGjB8B,EAAS6+D,YAA8B,IAAhBtI,GACxBqa,EAAc3jD,QAAQ,CACnBv0B,GAAI,yBACJwkC,OAAQ,CAAEi0C,QAAS,iBAAkBsrC,UAAW,OAChD7hH,MAAO,GACP4lE,SAAU,sDACV1lE,IAAK,CAAE,aAAc,YAExBjB,KAAKk7G,gBAAkB,EACvByH,EAAat+G,KAAK,2BACdrE,KAAKk7G,gBAAkB,EAED,KAAzB/0G,EAASkxD,aAAuBlxD,EAASy/D,cAC1CmR,EAAc1yE,KAAK,CAChBxF,GAAI,yBACJwkC,OAAQ,GACRtiC,MAAO,GACP4lE,SAAU,CAACnvD,EAAKw2B,IACb,4EACH/sC,IAAK,CAAE,aAAc,YAGxB0hH,EAAat+G,KAAK,2BAGM,IAAvB8B,EAASg/D,WAAmC,IAAhBzI,IAC7Bqa,EAAc1yE,KAAK,CAChBxF,GAAI,wBACJwkC,OAAQ,GACRtiC,MAAO,GACP4lE,SACG,qEACH1lE,IAAK,CAAE,aAAc,SAAUgmG,OAAQ,aAG1C0b,EAAat+G,KAAK,0BAII,KAAtB8B,EAASoxD,UACRpxD,EAASy/D,aACM,IAAhBlJ,IAEAqa,EAAc1yE,KAAK,CAChBxF,GAAI,uBACJwkC,OAAQ,GACRtiC,MAAO,GACP4lE,SAAU,8CACV1lE,IAAK,CAAE,aAAc,YAGxB0hH,EAAat+G,KAAK,yBAGjB8B,EAAS8+D,aAA+B,IAAhBvI,IACzBqa,EAAc1yE,KAAK,CAChBxF,GAAI,mBACJwkC,OAAQ,GACRtiC,MAAO,GACP4lE,SAAU,gDACV1lE,IAAK,CAAE,aAAc,YAGxB0hH,EAAat+G,KAAK,qBAIrB,IAAIw+G,EAAU,KAEd,IAAK,IAAI3vG,EAAI6jE,EAAc7wE,OAAS,EAAGgN,GAAK,EAAGA,IAC5C,IAAK2vG,EAAS,CACX,MAAM9/B,EAAMhM,EAAc7jE,GAE1B,IAAK6vE,EAAIzG,SAA4C,IAAlCqmC,EAAaz1G,QAAQ61E,EAAIlkF,IAAY,CACrDgkH,EAAU9/B,EAEV,KACH,CACH,CAEC8/B,IACDA,EAAQpgH,WAAY,EACpBogH,EAAQr2C,SAAWq2C,EAAQ9hH,MAC3B8hH,EAAQ9hH,MAAQ,KAGnBy9G,EAAWsE,eAAe/rC,GAG1B/2E,KAAKm7G,iBAAmBwH,EAAaz8G,OAGjCy8G,EAAaz1G,QAAQ,2BAA6B,IACnDlN,KAAKm7G,kBAAoB,GAExBn7G,KAAKm7G,iBAAmB,IAAGn7G,KAAKm7G,iBAAmB,GAGvD,MAAMl3E,EAAiB99B,EAAS89B,eAEV,IAAlBA,EACDu6E,EAAWh6G,OACR,YACAg6G,EAAWzC,eAAe93E,GAAkB,GAE7Cu6E,EAAWh6G,OAAO,YAAaxE,KAAKk7G,iBAEzCl7G,KAAKugH,qBACL/B,EAAWsE,gBAEd,CAOA59G,0BACG,MAAMmiG,EAAKrnG,KAAK8B,GACVihH,QACI1b,EAAGvtF,QAAQxE,IAAItV,KAAK67G,qBAAwB,CAAC,EACjDF,EAAgB37G,KAAK27G,cAE3BoH,EAAmB/iH,KAAKgjH,cAAgBrH,EAAc37G,KAAKgjH,cACtDrH,EAAc37G,KAAKgjH,cACnB,GAEL,IAAK,MAAMh1G,KAAQ+0G,EAChBA,EAAmB/0G,GAAMhK,SAASgK,IAE3BA,GAAMqpE,QAAQ1xE,cAAcqI,EAAKqpE,OAAO1xE,KAAK,UAIjD0hG,EAAGvtF,QAAQC,IAAI/Z,KAAK67G,mBAAoBkH,EACjD,CAYA5gG,cAAczf,EAAQ,MACnB,MAAMi5G,EAAgB37G,KAAK27G,cAE3B,IAAIj5G,EACC,OAAOi5G,EAAc37G,KAAKgjH,cADpBrH,EAAc37G,KAAKgjH,cAAgBtgH,CAEjD,CASAu4G,UAAUhtF,GACP,MAAMuwF,EAAax+G,KAAKs6G,eAEnBkE,IAEAvwF,EACIA,GAASpvB,IAAM2/G,EAAW1xF,OAAOmB,EAAQpvB,IAC/C2/G,EAAW5c,OAAO3zE,EAAQpvB,IAAI,GAC5B2/G,EAAW5c,OAAO,MAAM,GAHf4c,EAAWyE,WAI5B,CAQAD,aACG,MAAM14G,EAAgBtK,KAAK4rB,eAAeD,WAE1C,MAAO,GAAG3rB,KAAKnB,MAAMyL,EAAgBA,EAAczL,GAAK,KAC3D,CASAsgH,UAAU+D,EAAWC,GAElB,MAAMC,EACHD,EAAGE,mBAAmBxkC,UAAU,CAAEhgF,GAAIqkH,KAAgBx/G,GAAGw/G,GAE5D,IAAKE,EAAK,OAGV,MAAME,EAASF,EAAI93G,gBAAgBA,gBAEnC,IAAKg4G,EAAQ,OAGTA,EAAO1+G,UAAU0+G,EAAO1+G,SAASs+G,GAGrC,MAAMK,EAAUD,EAAOzkC,UAAU,CAAEn+E,KAAM,cAAgB,UAGrD6iH,GAASvjH,KAAKm/G,UAAUoE,EAASJ,EACxC,CAEApG,qBACG,MAAMyB,EAAax+G,KAAKs6G,eAExB,IAAIkJ,EAAe,EAEnBhF,EAAW70G,KAAK8/E,MAAMjyE,SAED,IAARA,GACPnY,OAAO++C,UAAUngB,eAAeogB,KAC7B7mC,EACA,2BAE4B,IAA/BA,EAAI6hG,wBAEJmK,GAAc,IAGhBA,EAAe,EAAGxjH,KAAKsgH,qBACtBtgH,KAAKqgH,qBACb,CAEApC,sBAAsB1wG,GACnB,MAAMixG,EAAax+G,KAAKs6G,eAClBhwG,EAAgBtK,KAAK4rB,eAAeD,WACpC83F,EAAc,GAEpBjF,EAAW70G,KAAK8/E,MAAMrqE,SAED,IAARA,GAEP/f,OAAO++C,UAAUngB,eAAeogB,KAC7Bj/B,EACA,2BAE4B,IAA/BA,EAAIi6F,wBAGJoK,EAAYp/G,MAAK,IAAMiG,EAAcvC,QAAQgO,OAAOqJ,EAAIvgB,KAC3D,IAGH,MAAMyoG,EAAUtnG,KAAK8B,GAAG6Y,MAEpB8oG,EAAYv9G,OAAS,EACtBohG,EAAQ/1F,QAAQ,CACbR,MAAO/Q,KAAKmB,MAAM,2BAClB8M,KAAMjO,KAAKmB,MACR,yDAEHqQ,SAAUtM,MAAOyI,IACVA,UAEK0B,QAAQkS,IAAIkiG,EAAY/kH,KAAKqhC,GAAMA,OAGzC//B,KAAKqgH,sBACR,IAIN/Y,EAAQx2F,MAAM,CACXC,MAAO/Q,KAAKmB,MAAM,uBAClB8M,KAAMjO,KAAKmB,MACR,8EAGZ,CAEA4qG,cAAcx+F,GACXvN,KAAKU,KAAKghD,aAAakmD,UAAUr6F,EACpC,CAEA2wG,YAAY3wG,GACTvN,KAAKw7G,4BAA4B72G,KAAK4I,EACzC,CAEA4wG,cAAc5wG,GACXvN,KAAKs7G,YAAY32G,KAAK4I,EACzB,CAEAywG,kBAAkBzwG,GACfvN,KAAKu7G,yBAAyB52G,KAAK4I,EACtC,CAOAm2G,QAAQlsG,EAAKw2B,GACV,MAAM1jC,EAAgBtK,KAAK4rB,eAAeD,WACpCg4F,EAAqBr5G,EAAck7B,cAAc9mC,KACnDqI,GAAMA,EAAEF,aAGZ,IAAI+8G,EAAM,GAEV,MAAM/8G,EAAamnC,EAAO2pC,OAAO94E,GAAGgU,QAAQ,IAAK,IAEjD,GAAI7F,MAAMC,QAAQuK,EAAI3Q,IACnB2Q,EAAI3Q,GAAY7C,SAAQ,SAAUhF,GAC3BA,EAAEiP,OAAM21G,GAAO5kH,EAAEiP,KAAO,QAC/B,SACI,QACsC,IAAnCuJ,EAAI3Q,EAAa,eACG,iBAApB2Q,EAAI3Q,GAEX+8G,EAAMpsG,EAAI3Q,EAAa,cAAcoH,UACnC,QAA8C,IAAnCuJ,EAAI3Q,EAAa,cAA+B,CAC7D,IAAIg9G,EAAersG,EAAI3Q,EAAa,cAE/BmG,MAAMC,QAAQ42G,KAAeA,EAAe,CAACA,KAEjDA,GAAgB,IAAI7/G,SAAQ,SAAUhF,GAChCA,IAAG4kH,GAAO5kH,EAAEiP,KAAO,QAC1B,GACH,MAAO,IAAgD,IAA5C01G,EAAmBz2G,QAAQrG,GAAoB,CACvD,IAAK2Q,EAAI3Q,GACN,MAAO,GAGP+8G,EAAM,gEAAgEpsG,EAAI3Q,QAEhF,KAAoC,SAAzBmnC,EAAO2pC,OAAOtyE,OACtBu+G,EAAM51E,EAAO2pC,OAAOn3D,OAAOhJ,EAAI3Q,IACA,eAAzBmnC,EAAO2pC,OAAOtyE,OACpBiF,EAAcxD,SAAS9C,SAAS+C,IACzBA,EAAEF,aAAeA,GACdE,EAAEZ,SAASjE,SACZ6E,EAAEZ,SAASjE,QAAQ8B,SAAShF,IACrBA,EAAEH,KAAO2Y,EAAI3Q,KACd+8G,EAAM5kH,EAAEiP,KACX,GAGT,IAED21G,EAAMpsG,EAAI3Q,GAEf,OAAK+8G,GAAY,EAEpB,CAOAE,sBAAsBxhH,GAEnBA,EAAKw8E,MAAMilC,WAAa,QAC3B,CAOAC,qBAAqB1hH,GAEgB,QAA9BA,EAAK2hH,YAAYC,SAClB5vG,YAAW,KACR,MAAM6vG,EAAYz+F,SAASpjB,EAAKw8E,MAAMwtB,IAAIz5F,QAAQ,KAAM,KAAO,IACzDuxG,EAAW1+F,SAASpjB,EAAKw8E,MAAMo5B,KAAKrlG,QAAQ,KAAM,KAAO,IAE/D,GAAIsxG,EAAYjrG,OAAOmrG,YAAa,CACjC,MAAMC,EAAaH,EAAYjrG,OAAOmrG,YAChCE,EACH7+F,SAASpjB,EAAKw8E,MAAMwtB,IAAIz5F,QAAQ,KAAM,KAAOyxG,EAChDhiH,EAAKw8E,MAAMwtB,IAAMiY,EAAS,IAC7B,CAEA,GAAIH,EAAWlrG,OAAOmE,WAAY,CAC/B,MAAMmnG,EAAaJ,EAAWlrG,OAAOmE,WAC/BonG,EACH/+F,SAASpjB,EAAKw8E,MAAMo5B,KAAKrlG,QAAQ,KAAM,KAAO2xG,EACjDliH,EAAKw8E,MAAMo5B,KAAOuM,EAAU,IAC/B,CAEAniH,EAAKw8E,MAAMilC,WAAa,SAAS,GACjC,KACCzhH,EAAKw8E,MAAMilC,WAAa,SAClC,CAEIpC,oBACD,MACMr3G,EADKtK,KAAK4rB,gBACUD,WAG1B,MACgC,cAHb3rB,KAAKs6G,gBAGTt4G,QAAQtB,OAAyB4J,GAAegb,OAElE,CAEA46F,oBACG,IAAKlgH,KAAK2hH,cAAe,OAEzB3hH,KAAKykF,OAEL,MAAM73D,EAAK5sB,KAAK4rB,eACV4yF,EAAax+G,KAAKs6G,eAExBkE,EAAWxjG,WACXwjG,EAAWvnG,MAAM2V,EAAG+H,WAAa,IAEjC30B,KAAKqoC,WACLroC,KAAK6kF,OACR,iBCpxEH,MAAM6/B,EAAiB,EAAQ,MAGzBxc,EACH,WAEY,MAAMyc,UAAmBD,EAoBrC1+G,WAAWN,GACR5F,MAAMkG,WAAWN,GAGjB1F,KAAK0hD,aAAagV,aAAa12D,KAAKmG,SAASm/D,WAChD,CAEAs/C,oBAAoB1kH,EAAK2lE,GACtB,IAAIg/C,EAAWh/C,GAAW,GACH,iBAAZg/C,IACRA,EAAWA,EAASr8F,MAAM,MAG7B,IAAItmB,EAAUwB,GAAGxD,EAAI2lE,SAASqc,UAAUv4E,KAAKqjB,KAAK,CAAC,GAEnDtpB,GAAGxD,EAAI4kH,aAAa9pG,WACpB6pG,EAAS7gH,SAAS+0B,IACf,IAAIyY,EAAMtvC,EAAQ0G,QAAQ5J,GAAMA,EAAEH,IAAMk6B,IAAS,GAC7CyY,GACD9tC,GAAGxD,EAAI4kH,aAAa1jG,IAAIowB,EAC3B,GAEN,CAOArxC,YACG,OAAO,IAAI45G,EAAoB/5G,KAClC,CAEI0hD,mBAQD,OAP2B,MAAvB1hD,KAAK+nG,iBACN/nG,KAAK+nG,eAAiB,IAAI,IACvB/nG,KAAK8B,GACL,GAAG9B,KAAKnB,oBAIPmB,KAAK+nG,cACf,CAEI/B,qBAID,OAH6B,MAAzBhmG,KAAKioG,mBACNjoG,KAAKioG,iBAAmB,IAAIC,GAExBloG,KAAKioG,gBACf,CAEA/4B,eACGpvE,MAAMovE,eACN,IAAI61C,EAAS/kH,KAAK47D,eAClB57D,KAAK47D,gBAAiB,EACtB,IAAIrrC,EAAKvwB,KAAK4rB,eACd5rB,KAAK47D,eAAiBmpD,EACjBx0F,GACFvwB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,cAG5D,iEC/ECh2D,EAAI,KAEO,MAAMilH,UAAiD,IACnErlH,YAAYE,GAGTC,MAAM,CACHK,UAAW,GAHdN,EAASA,GAAU,wCAIhBkK,KAAM,GAAGlK,mBACTmK,KAAM,GAAGnK,qBAGZG,KAAKsK,cAAgB,KAIrBtK,KAAKoN,gBAAiB,EAItBpN,KAAKkM,UAAY,KAIZnM,IACFA,EAAI,IAAIwV,IACEvV,KAAK8B,GAAGkP,aAAa7P,SAASoU,GAG9C,CAEA0vG,SACG,MAAMpZ,EAAS7rG,KAAKE,IAAIC,UACxB,MAAO,CACJO,KAAM,OACN7B,GAAImB,KAAKE,IAAI8J,KAEbtI,YAAY,EACZsH,SAAU,CACP,CACGtI,KAAM,SACNiB,KAAM,OACNV,IAAK,gBACLyB,MAAO3C,EAAE,gBACToC,GAAI,CACD+H,YAAa,KACVlK,KAAKmK,kBACLnK,KAAKoK,iBAAiB,EAEzBw0E,cAAe,WACZ5+E,KAAKgsG,eAAeriB,aACjB,UACA,GAAGkiB,oBAET,KAKf,CAEAprG,KACG,MAAO,CACJC,KAAM,QACN7B,GAAImB,KAAKE,IAAIC,UAEbY,MAAO,IACPS,KAAMxB,KAAKilH,SAEjB,CAGA//G,WAAWpD,GACJA,IACD9B,KAAK8B,GAAKA,GAIR4B,GAAG1D,KAAKE,IAAIC,YAAYqD,MAAM/C,GAAGT,KAAKS,KAC9C,CAYA0J,gBAAgBI,EAASC,GACtB,IAAIg5E,EAAOxjF,KACPyK,EAAY/G,GAAG1D,KAAKE,IAAI8J,MAExBU,EAAYD,EAAUE,gBAAgBzE,OAAS,EAC/C0E,EAAa5K,KAAK6K,cAAa,GACnCJ,EAAUK,QACP,CACGjM,GAAI,OAAS2E,MAAMuH,MACnB7J,KAAM,CACH,CACGR,KAAM,QACNK,MAAO,IACPmB,QAAS0I,EACTzI,GAAI,CACDC,SAAU,SAAU4I,GAEjBw4E,EAAKv4E,cAAcD,EADVhL,KAEZ,IAGN,CACGU,KAAM,YACNK,MAAO,IACPmB,QAAS,CACN,CACGrD,GAAI,GACJ6D,MAAO3C,EAAE,yBAGfoC,GAAI,CACDC,SAAU,KAEPpC,KAAKoK,iBAAiB,IAI/B,CACG1J,KAAM,SACNO,IAAK,eACLmK,KAAM,cACNzJ,KAAM,OACNZ,MAAO,GACPoB,GAAI,CACD+H,YAAa,WACVO,EAAUY,WAAWrL,KAAKsL,iBAC1Bk4E,EAAKj4E,kBAAiB,GACtBi4E,EAAKp5E,iBACR,MAKZM,GAICH,GACiBE,EACdE,gBACAD,GAAWC,gBAAgB,GACnB/F,SAAS2F,GAGpBC,GACmBC,EAChBE,gBACAD,GAAWC,gBAAgB,GACjB/F,SAAS4F,EAE7B,CAWAK,aAAaW,GACV,IAAIf,EAAY/G,GAAG1D,KAAKE,IAAI8J,MACzBY,EAAa,GAEZ/G,EAAY7D,KAAKsK,cAAcxD,SACnC,GAAwB,GAApBjD,EAAUqC,OAAa,OAAO0E,EAalC,GAVA/G,EAAUG,SAAS+C,IACZA,EAAE0E,mBACHb,EAAWvG,KAAK,CACbxF,GAAIkI,EAAElI,GACN6D,MAAOqE,EAAE5F,OAEf,IAICqK,EAAiB,CAClB,IAAIE,EAAajB,EAAUE,gBACvBe,EAAWxF,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,GAAIF,EAAWxF,OAAS,GAAK0F,EAAO,OAAO,EAE3C,IAAIC,EAAgBF,EAAMhB,gBAAgB,GAAGmB,WACzCD,IACDjB,EAAaA,EAAWhC,QAAQ7B,GAAMA,EAAElI,IAAMgN,IAEpD,GAEN,CACA,OAAOjB,CACV,CAOA7F,WAAWC,GACRhF,KAAKsK,cAAgBtF,CACxB,CAcAiH,YAAY9F,GACTnG,KAAKkM,UAAYlM,KAAK8B,GAAG2D,UAAUU,EACtC,CAaAgG,cACG,IAAI1B,EAAY/G,GAAG1D,KAAKE,IAAI8J,MACzBoC,EAAa,GAEZV,EAAajB,EAAUE,gBAc3B,OAbIe,EAAWxF,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,GAAIF,EAAWxF,OAAS,GAAK0F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WACnCM,EAAW/H,KAAK,CACbD,IAAKmG,EACLC,IAAKA,GAEX,IAEI4B,CACV,CAYAnB,cAAc4xB,EAASxwB,GACpB,IACI64G,EADArhH,EAAY7D,KAAKsK,cAAcxD,SAEhCyF,EAAUF,EAAGf,gBAAgBX,gBAAgB,GAG7CzI,EAAU,KAGb,GADAgjH,EAAcrhH,EAAUmpB,MAAMjmB,GAAMA,EAAElI,IAAMg+B,IAC5C,CAEA,OAAQqoF,EAAY9gH,KACjB,IAAK,OACFlC,EAAU,CACP,CAAErD,GAAI,MAAO6D,MAAO3C,EAAE,oBACtB,CAAElB,GAAI,OAAQ6D,MAAO3C,EAAE,qBAE1B,MACH,IAAK,SACFmC,EAAU,CACP,CAAErD,GAAI,MAAO6D,MAAO3C,EAAE,WACtB,CAAElB,GAAI,OAAQ6D,MAAO3C,EAAE,YAE1B,MAEH,QACGmC,EAAU,CACP,CAAErD,GAAI,MAAO6D,MAAO3C,EAAE,WACtB,CAAElB,GAAI,OAAQ6D,MAAO3C,EAAE,YAKhCwM,EAAQ/H,OAAO,UAAWtC,GAC1BqK,EAAQ9H,UAORzE,KAAKuL,mBACLvL,KAAKoK,iBAjCmB,CAkC3B,CAMAC,OAAO3J,EAAMwB,GACV,IAAIuI,EAAY/G,GAAG1D,KAAKE,IAAI8J,MAG5BxG,MAAM/C,GAAGT,KAAKilH,SAAUx6G,GAExB,IAAI+B,EAAQxM,KAAKkM,UACbM,GAASA,EAAMxI,SAChBwI,EAAMxI,SAASyI,IACZzM,KAAKmK,gBAAgBsC,EAAErI,IAAKqI,EAAEjC,IAAI,IAI3B,MAATgC,GAAiC,GAAhBA,EAAMtG,QACxBlG,KAAKmK,kBAERzG,GAAG1D,KAAKE,IAAIC,WAAWwE,KAAKjE,EAAMwB,EACrC,CAQAqJ,iBAAiBmB,GACd,IAAIjC,EAAY/G,GAAG1D,KAAKE,IAAI8J,MACzBY,EAAa5K,KAAK6K,cAAa,GAC/B8B,EAAiB,GACjBC,EAAmB,GAElBlB,EAAajB,EAAUE,gBACvBe,EAAWxF,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,GAAIF,EAAWxF,OAAS,GAAK0F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWoiB,MAAMjmB,GAAMA,EAAElI,IAAM0L,IAEzCsC,EAEDF,EAAetI,KAAKwI,GAGpBD,EAAiBvI,KAAKsH,EAE5B,IAIEe,GACFE,EAAiB5I,SAAQ,SAAU2H,GAChClB,EAAUY,WAAWM,EACxB,KAIHD,EAAajB,EAAUE,iBACRzE,OAAS,GAErBwF,EAAW1H,SAAQ,SAAU2H,EAAOC,GACjC,GAAIF,EAAWxF,OAAS,GAAK0F,EAAO,OAAO,EAE3C,IAAIrB,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WAEpCe,EAAWjC,EAAWhC,QAAO,SAAU7B,GACpC,OAAOA,EAAElI,IAAM0L,CAClB,IAGCuC,EAAgCH,EAAe/D,QAAO,SACvDmE,GAEA,OAAIC,MAAMC,QAAQJ,KAAsC,IAAzBA,EAASK,QAAQH,EAInD,IAGII,EAAevC,EAAWhC,QAAO,SAAUmE,GAC5C,OACGC,MAAMC,QAAQH,KACgC,IAA9CA,EAA8BI,QAAQH,EAK5C,IAGApB,EAAMhB,gBAAgB,GAAGnG,OAAO,UAAW2I,GAC3CxB,EAAMhB,gBAAgB,GAAGlG,SAC5B,GAEN,CAMA2F,kBAEOpK,KAAKoN,iBAETpN,KAAKkM,UAAYlM,KAAKmM,cAEtBnM,KAAKoP,KAAK,UAAWpP,KAAKkM,WAC7B,CAEAmB,gBACGrN,KAAKoN,gBAAiB,CACzB,CAEAE,kBACGtN,KAAKoN,gBAAiB,CACzB,CAYAzI,KAAK4I,EAAOhD,EAASrI,GAClBlC,KAAKqN,gBAELrN,KAAKqK,OAAOkD,EAAOrL,GAAW,MAE1BqI,GACDvK,KAAKmK,gBAAgBI,GAGxBvK,KAAKsN,iBACR,CASAE,KAAKC,EAAGC,GACL,IAAIC,EAAS,EAEb,MAAMjC,EAAahI,GAAG1D,KAAKE,IAAI8J,MAAMW,gBAyCrC,OAxCIe,EAAWxF,OAAS,GAErBwF,EAAW1H,SAAQ,CAAC2H,EAAOC,KACxB,GAAIF,EAAWxF,OAAS,GAAK0F,GAAmB,GAAV+B,EAAa,OAEnD,MAAMpD,EAAUoB,EAAMhB,gBAAgB,GAAGmB,WACnCtB,EAAMmB,EAAMhB,gBAAgB,GAAGmB,WAE/BnG,EAAQ3F,KAAKsK,cAAcsD,UAAUrD,GAC3C,IAAK5E,EAAO,OAEZ,MAAMkI,EAAKlI,EAAMkB,WAEjB,IAAIiH,EAASL,EAAEI,GACZE,EAASL,EAAEG,GAEVb,MAAMC,QAAQa,KACfA,GAAUA,GAAU,IAChBpP,KAAI,SAAUsP,GACZ,OAAOA,EAAKC,MAAQD,CACvB,IACCE,KAAK,MAGRlB,MAAMC,QAAQc,KACfA,GAAUA,GAAU,IAChBrP,KAAKsP,GAASA,EAAKC,MAAQD,IAC3BE,KAAK,MAGRJ,GAAUC,IAERJ,EADQ,OAAPnD,EACQsD,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,EAEtC,IAICJ,CACV,oBC9gBH,MAAMw3G,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAIrC7lH,EAAOC,QAAU,cAA0B2lH,EAcxChlH,YACG,OAAO,IAAIilH,EAAqBplH,KACnC,CAEAkvE,eACGpvE,MAAMovE,eAEDlvE,KAAKmG,SAAS46C,UAChB/gD,KAAKovE,gBAAgB,mBAE3B,+DC7BH,MAAMi2C,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,MAEhCpd,EACH,WAEY,MAAMqd,UAAqBF,EAWvCllH,YACG,OAAO,IAAImlH,EAAsBtlH,KACpC,CAEIgmG,qBACD,OAAQhmG,KAAKioG,iBACVjoG,KAAKioG,kBAAoB,IAAIC,CACnC,CAEAh5B,eACGpvE,MAAMovE,eACGlvE,KAAK4rB,gBAEX5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,cAG5D,oBC3BH,MAAM8uC,EAAkB,WAClB1hB,EAAa,EAAQ,OACrB8rB,EAAmB,EAAQ,OAEjC,IAAIlvG,EAAI,KAGRR,EAAOC,QAAU,cAAiCqlG,EAC/CllG,YAAY6lH,EAAW3lH,EAAQ0mE,GAE5BzmE,MADAD,EAASA,GAAU,GAAG2lH,EAAU9kH,MAAM7B,mBACxB,CACXmL,KAAM,KAGJjK,IACFA,EAAI,IAAIwV,IACEvV,KAAK8B,GAAGkP,aAAa7P,SAASoU,IAI3CvV,KAAK8B,GAAK0jH,EAAU1jH,GAEpB9B,KAAKylH,gBAAkB,KAIvBzlH,KAAKumE,WAAaA,EAKlBvmE,KAAKy8B,SAAWz8B,KAAK8B,GAAGs4B,eAAe,CAAC,EAK3C,CAOI9vB,oBACD,OAAOtK,KAAK8B,GAAG2V,WAAWzX,KAAKylH,gBAClC,CAEAhlH,KACG,IAAIP,EAAMF,KAAKE,IAGf,MAAO,CACJrB,GAAIqB,EAAIC,UACRY,MAAO,IACPu7E,QAAQ,EACR16E,KAAM,CACH,CACGlB,KAAM,UACNO,IAAK,aACLC,KAAM,CACH,CACGR,KAAM,QACNS,MAAOpB,EAAE,gBAEZ,CACGW,KAAM,OACN0K,KAAM,YACNhK,MAAO,QACPE,MAAO,KACJtB,KAAK0E,MAAM,KAKvB,CACGhE,KAAM,aACNc,KAAM,CACHI,KAAM,CACH,CACG/C,GAAIqB,EAAI8J,KACRtJ,KAAM,OACNgB,YAAY,EACZE,KAAM,QAO3B,CAEAsD,WAAWpD,GACR9B,KAAK8B,GAAKA,CACb,CAOIwI,oBACD,OAAOtK,KAAK8B,GAAG2V,WAAWzX,KAAKylH,gBAClC,CAEA1gH,WAAWC,GACRhF,KAAKylH,gBAAkBzgH,EAAOnG,EACjC,CAEA6F,OACGhB,GAAG1D,KAAKE,IAAIC,YAAYuE,OAExB1E,KAAKoP,KAAK,QACb,CAEAzK,KAAKgF,GACFjG,GAAG1D,KAAKE,IAAIC,YAAYwE,OAExB3E,KAAK0lH,YAAY/7G,EACpB,CAEA06E,YACG,OAAO3gF,GAAG1D,KAAKE,IAAIC,YAAYkkF,cAAe,CACjD,CAEAqhC,YAAY/7G,GACT,IAAIzJ,EAAMF,KAAKE,IACf,IAAIwwG,EAAYhtG,GAAGxD,EAAI8J,MACnBM,EAAgBtK,KAAKsK,cAEzB,IAAKA,IAAkBomG,EAAW,OAElC/mG,EAAOA,GAAQ,CAAC,EAEhB,IAAIg8G,EAAY,CACb9mH,GAAI,GAAGmB,KAAKE,IAAIC,qBAChBiE,IAAK++E,EAAWn1C,SAAS5pC,IACzB+B,SAAU,CACPk1D,QAAS,EACTrC,cAAe,MACfhC,UAAW,EACXoL,YAAa,EACbC,YAAa,EACbxgE,WAAY,IACZf,OAAQ,IAKVkJ,EAAOhK,KAAK8B,GAAG06B,iBAAiBmpF,GAEpC37G,EAAKjF,WAAWuF,GAGhBA,EAAcxD,SAAS9C,SAAQ,CAAC+C,EAAG6E,OAE3B5L,KAAKumE,YAAcvmE,KAAKumE,WAAWr5D,QAAQnG,EAAElI,KAAO,IACtDmL,EAAK24D,eAAe57D,EAAG6E,EAC1B,IAIH5B,EAAK0d,OAAOrjB,KACT,IAAI4qG,EACD,CACG9oG,SAAU,CACP86D,aAAa,EACbE,eAAe,EACfE,cAAc,GAEjB1gE,SAAU,CACP86D,EAAGnxD,EAAcxD,SAASZ,SAGhClG,KAAKy8B,SACLzyB,IAKNA,EAAK0d,OAAO1jB,SACT,CAACiP,EAAGrH,IAAWqH,EAAEpU,GAAK,GAAGmL,EAAKnL,MAAMoU,EAAE7O,OAAOwH,MAGhD,IAAIg6G,EAAU57G,EAAK7J,UAAUH,KAAK8B,GAAGy6B,MAGrC/4B,MAAM/C,GAAGmlH,EAAQnlH,KAAKmB,KAAKkmB,OAAO,CAAC,GAAI4oF,GACvCltG,MAAMC,OAAOitG,EAAWltG,MAAMG,aAE9BiiH,EAAQviH,KACLrD,KAAK8B,GACL,EACA,CACGytG,iBAAkB,KAEf,IAAIvmB,EAAWh/E,EAAK8lG,cAAcY,EAAWpmG,GAG7C,QAAKN,EAAKymG,aAAaC,EAAWpmG,EAAe0+E,KAIjD0nB,GAAWtrG,aAAa,CAAEzD,KAAM,SAE5BqnF,EAASnqF,GACVyL,EAAcvC,QACVouE,OAAO6S,EAASnqF,GAAImqF,GACpB70E,MAAM0xG,IACJ7lH,KAAKoP,KAAK,SAAUy2G,GAGpBnV,GAAWhpG,aAAa,CAAE/F,KAAM,QAAS,IAE3CyS,OAAOlM,IAELlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,8EACH85E,aAEH0nB,GAAWhpG,aAAa,CAAE/F,KAAM,QAAS,IAK/C2I,EAAcvC,QACV4nE,OAAOqZ,GACP70E,MAAM2xG,IAEJ9lH,KAAKoP,KAAK,MAAO02G,GAEjBpV,GAAWhpG,aAAa,CAAE/F,KAAM,QAAS,IAE3CyS,OAAOlM,IAELlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QACG,+EACH85E,aAGH0nB,GAAWhpG,aAAa,CAAE/F,KAAM,QAAS,KAI3C,EAAK,GAGlB,GAIH+uG,EAAUzrG,QACVyrG,EAAUz5F,MAAMtN,GAEhBi8G,EAAQv7G,OAAOV,EAClB,oBCvQH,MAAMo8G,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,OAErCzmH,EAAOC,QAAU,cAA0BumH,EACxCpmH,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,EACtC,CAOAtmC,YACG,OAAO,IAAI6lH,EAAqBhmH,KACnC,CAEAkvE,eACGpvE,MAAMovE,eAEDlvE,KAAKiO,MACPjO,KAAKovE,gBAAgB,yBAE3B,oBCvBH,MAAM62C,EAAmB,EAAQ,OAC3BC,EAAwB,EAAQ,OAEtC3mH,EAAOC,QAAU,cAA2BymH,EAMzC9lH,YACG,OAAO,IAAI+lH,EAAsBlmH,KACpC,CAEAkvE,eACGpvE,MAAMovE,eAEoB,GAAtBlvE,KAAK0nB,OAAOxhB,QACblG,KAAKovE,gBAAgB,sBAE3B,oBCnBH,MAAM+2C,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,MAIpC7mH,EAAOC,QAAU,cAAyB2mH,EAUvChmH,YACG,OAAO,IAAIimH,EAAoBpmH,KAClC,CAEAkvE,eACGpvE,MAAMovE,eACGlvE,KAAK4rB,gBAEX5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,cAG5D,oBC3BH,MAAMswD,EAAiB,EAAQ,OACzBC,EAAsB,EAAQ,OAEpC/mH,EAAOC,QAAU,cAAyB6mH,EAMvClmH,YACG,OAAO,IAAImmH,EAAoBtmH,KAClC,mBCXH,MAAMumH,EAAwB,EAAQ,OAChCC,EAA6B,EAAQ,OAE3CjnH,EAAOC,QAAU,cAAgC+mH,EAM9CpmH,YACG,OAAO,IAAIqmH,EAA2BxmH,KACzC,mBCXH,MAAMymH,EAAiB,EAAQ,OAEzBrrD,EAA8BqrD,EAAehgF,gBAEnDlnC,EAAOC,QAAU,cAAyBinH,EAWvCtmH,UAAUumH,GAAQ,GACf,IAAIvmH,EAAYL,MAAMK,YAiBtB,GAfAA,EAAU8lG,IAAM9lG,EAAUM,KAG1BN,EAAUM,GAAK,KACL,CACJC,KAAM,aACNgB,YAAY,EACZT,IACGjB,KAAKmG,SAASujE,gBACdtO,EAA4BsO,eAC/BloE,KAAMrB,EAAU8lG,MAKlBygB,EAAO,CACR,IAAIC,EAAexmH,EACnBA,EAAY,CACTM,GAAIN,EAAUM,KACd4C,KAAM,CAACnB,EAASw6D,KACbA,EAAcA,GAAe18D,KAAKy8D,gBAC3BkqD,EAAatjH,KAAKrD,KAAK8B,GAAI46D,EAAax6D,IAElDmI,OAAQ,IAAIkL,IACFoxG,EAAat8G,YAAYkL,GAGzC,CAEA,OAAOpV,CACV,CAEA+uE,eACGpvE,MAAMovE,eAIiB,GAFRlvE,KAAKynB,QAEPvhB,QACVlG,KAAKovE,gBAAgB,qBAGvBpvE,KAAK6lB,SAAW,IAAI7hB,SAASge,IAC3BA,EAAEktD,cAAc,GAEtB,oBC9DH,MAAM03C,EAAkB,EAAQ,OAC1BC,EAAuB,EAAQ,MAIrCtnH,EAAOC,QAAU,cAA0BonH,EACxCjnH,YAAY+F,EAAQZ,EAAa4P,EAAQ+xB,GACtC3mC,MAAM4F,EAAQZ,EAAa4P,EAAQ+xB,EACtC,CAOAtmC,YACG,OAAO,IAAI0mH,EAAqB7mH,KACnC,CAEAkvE,eACGpvE,MAAMovE,eAEGlvE,KAAK4rB,gBAEX5rB,KAAKovE,gBACF,qCAAqCpvE,KAAKmG,SAAS4vD,cAG5D,oBC5BH,MAAM+wD,EAA2B,EAAQ,OACnCC,EAAgC,EAAQ,OAE9CxnH,EAAOC,QAAU,cAAmCsnH,EAcjD3mH,YACG,OAAO,IAAI4mH,EAA8B/mH,KAC5C,oBCnBH,MAAMgnH,EAAsB,EAAQ,OAC9BC,EAA2B,EAAQ,OAEzC1nH,EAAOC,QAAU,cAA8BwnH,EAU5C7mH,YACG,OAAO,IAAI8mH,EAAyBjnH,KACvC,CAEAkvE,eACGpvE,MAAMovE,cACT,oBCnBH,MAAMg4C,EAAgB,EAAQ,OAExBC,EAAqB,EAAQ,OAEnC5nH,EAAOC,QAAU,cAAwB0nH,EAOtC/mH,UAAUumH,GAAQ,GACf,IAAIvmH,EAAY,IAAIgnH,EAAmBnnH,MAGvC,GAAI0mH,EAAO,CACR,MAAMC,EAAexmH,EAErBA,EAAY,CACTM,GAAIkmH,EAAalmH,KACjB4C,KAAM,CAACnB,EAASw6D,IACNiqD,EAAatjH,KAAKrD,KAAK8B,IAEjCuI,OAAQ,IAAIkL,IACFoxG,EAAat8G,YAAYkL,GAGzC,CAEA,OAAOpV,CACV,CAEA+uE,eACGpvE,MAAMovE,eAIiB,GAFRlvE,KAAKynB,QAEPvhB,QACVlG,KAAKovE,gBAAgB,kBAO3B,oBC7CH,MAAMg4C,EAAiB,EAAQ,OAEzBC,EAAsB,EAAQ,OAEpC9nH,EAAOC,QAAU,cAAyB4nH,EAMvCjnH,UAAUkzE,GACP,OAAO,IAAIg0C,EAAoBrnH,KAAMqzE,EACxC,mBCZH,MAAMi0C,EAAmB,EAAQ,MAEGA,EAAiB7gF,gBAIrDlnC,EAAOC,QAAU,cAA2B8nH,EAWzCnnH,UAAUP,GACP,IAAIomE,EAAOlmE,MAAMK,UAAUP,GAU3B,OARAomE,EAAK37D,OAAUyzD,IACZ,IAAIrqC,EAAKzzB,KAAK4rB,eACV6H,GAAMA,EAAGtH,YAAcsH,EAAGhJ,eAAeC,YAE1C+I,EAAG7E,UACN,EAGIo3C,CACV,oBC7BH,MAAM6+B,EAAkB,WAExBtlG,EAAOC,QAAU,cAAyCqlG,EACvDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,iBAAiBwlG,EAASxmG,KACpCQ,OAAOoyB,OACJ,CACG+0D,OAAQ,GACRm0B,aAAc,GACdn1B,cAAe,IAElBtlF,IAINF,KAAKunH,aAAe,IACvB,CAEA9mH,KACG,MAAMP,EAAMF,KAAKE,IACXiG,EAAWnG,KAAKmG,SAChBypF,EAAkB5vF,KAAKU,KAAKf,YAAY8mC,gBACxCw/D,EAAMnmG,MAAMW,GAAG,CAClB,CACGC,KAAM,SACNiB,KAAM,QACND,YAAY,EACZR,KAAM,CACH,CACGrC,GAAIqB,EAAIy6G,aACRj6G,KAAM,SACNO,IAAK,oBACLU,KAAM,OACNyJ,KAAM,eACN1J,YAAY,EACZX,MAAO,GACPI,MAAO,GACPG,MAAO,KACJtB,KAAK2nG,iBAAiB,GAG5B,CACG9oG,GAAIqB,EAAIsmF,OACR9lF,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,iBACN1J,YAAY,EACZX,MAAOoF,EAASpF,OAAS6uF,EAAgB7uF,MACzCI,MAAOgF,EAAS6vD,aAAe45B,EAAgB55B,YAC/C10D,MAAO,KACJtB,KAAKwnH,iBAAiB,GAG5B,CAAE/kH,WAAW,OAOtB,cAFOwjG,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,GAGR,SAFMhC,MAAMuD,KAAKvB,IAEZ9B,KAAKunH,aAAc,CACrB,MAAMA,EAAezlH,EAAGuzB,iBAAiBr1B,KAAKE,IAAIslF,eAE5C54D,EAAK5sB,KAAK4rB,eAEhB,GAAIgB,EAAI,CACL,MAAMpV,EAAMoV,EAAGjB,WAEf47F,EAAajyF,WAAW9d,GAAK1Q,YAAc,GAC9C,CAEAygH,EAAalkH,OACbkkH,EAAaplH,GAAG,UAAWwT,IACxB3V,KAAKynH,eAAe9xG,EAAI,IAG3B3V,KAAKunH,aAAeA,CACvB,CACH,CAEAC,kBACG,IAAIv3G,EAAM,0BAA0BjQ,KAAKU,KAAK7B,KAE9C,MAAM8wB,EAAQ3vB,KAAKunH,aAAaz7G,WAEhC,IAAK6jB,GAAOtO,OAAS,IAAInb,OAAQ,CAC9B,IAAIwhH,EAAUh0G,KAAKC,UAAUgc,GAE7B+3F,EAAU9xG,mBAAmB8xG,GAC7Bz3G,EAAM,GAAGA,WAAay3G,GACzB,CAEAxuG,OAAOyuG,KAAK13G,EACf,CAEA03F,kBACG,MAAMigB,EAAgBlkH,GAAG1D,KAAKE,IAAIy6G,cAElC36G,KAAKunH,aAAajoC,MAAMsoC,EAAgBA,EAAcr6G,MAAQ,KACjE,CAEAk6G,iBACG,MAAMG,EAAgBlkH,GAAG1D,KAAKE,IAAIy6G,cAElC,IAAKiN,EAAe,OAEpB,MAAMj4F,EAAQ3vB,KAAKunH,aAAaz7G,WAEhC87G,EAAcpjH,OAAO,SAAUmrB,EAAMtO,OAAS,IAAInb,QAAU,MAC5D0hH,EAAcnjH,SACjB,oBCvHH,MAAMogG,EAAkB,WAClBgjB,EAAc,EAAQ,OAE5BtoH,EAAOC,QAAU,cAAyCqlG,EACvDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,iBAAiBwlG,EAASxmG,KACpCQ,OAAOoyB,OACJ,CACG+0D,OAAQ,GACRrK,MAAO,GAEPnyE,KAAM,GACN4gF,SAAU,GACVk9B,eAAgB,GAChBrtC,YAAa,GACbstC,kBAAmB,GACnBC,WAAY,GAEZtyG,OAAQ,GACRqlG,UAAW,GAEXkN,cAAe,GACfC,YAAa,GAEbC,iBAAkB,GAClBC,aAAc,GACd/mG,MAAO,IAEVnhB,IAINF,KAAKqoH,YAAc,IAAIR,GAAY,IAAIS,IAAStoH,KAAKmB,SAASmnH,KAI9DtoH,KAAKo7G,iBAAkB,EAEvBp7G,KAAKuoH,UAAY,KACjBvoH,KAAKwoH,aAAe,IACvB,CAEA/nH,KACG,MAAM0F,EAAWnG,KAAKmG,SAChBypF,EAAkB5vF,KAAKU,KAAKf,YAAY8mC,gBACxCw/D,EAAMnmG,MAAMW,GAAG,CAClB,CACGS,KAAM,CACH,CACGR,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,eACNjK,MAAOnB,KAAKmB,MACTgF,EAAS6vD,aAAe45B,EAAgB55B,aAE3Cj1D,MAAOoF,EAASpF,OAAS6uF,EAAgB7uF,MACzCO,MAAO,KACJtB,KAAK4nG,WAAW,GAGtB,CACGnlG,WAAW,OAQvB,cAFOwjG,EAAItkG,KAEJskG,CACV,CAEA5C,WACG,MAAMnjG,EAAMF,KAAKE,IAEjB,MAAO,CACJrB,GAAIqB,EAAI8J,KACRtJ,KAAM,OACNiB,KAAM,QACND,YAAY,EACZ8qE,SAAU,IACVlR,QAAS,EACTtyD,SAAU,CACP,CACGpH,KAAM,CACH,CACG/C,GAAIqB,EAAI0qF,SACRlqF,KAAM,WACNwG,KAAM,UACNjG,IAAK,gBACLyB,MAAO1C,KAAKmB,MAAM,qBAClBsnH,OAAQ,WACRz9B,UAAU,EACV09B,UAAU,EACV/+E,KAAMzpC,EAAI4nH,eACV3lH,GAAI,CACD8oF,gBAAkB5Q,IACfr6E,KAAKwoH,aAAenuC,EAEbr6E,KAAK2oH,iBAIrB,CACG9pH,GAAIqB,EAAI4nH,eACR5gH,KAAM,eACNxG,KAAM,OACNiB,KAAM,WACNk3G,YAAY,EACZn3G,YAAY,EACZknH,QAAS,CACNC,oBAAqB,CAAC5pH,EAAGJ,KACtBmB,KAAK8oH,cAAcjqH,EAAG,IAI/B,CACG0D,QAAS,GACTX,KAAM,CACH,CACG/C,GAAIqB,EAAIu6E,YACR/5E,KAAM,aACNwG,KAAM,cACN/F,MAAOnB,KAAKmB,MAAM,gBAClBU,WAAY,IACZK,QAASlC,KAAKqoH,YAAYluC,mBAC1Bz3E,MAAO,IACPP,GAAI,CACDC,SAAU,KACPpC,KAAK2oH,aAAa,IAI3B,CACG9pH,GAAIqB,EAAI6nH,kBACRrnH,KAAM,WACNwG,KAAM,oBACN/F,MAAOnB,KAAKmB,MAAM,wBAClBU,WAAY,IACZsoC,UAAU,EACVznC,OAAO,EACPP,GAAI,CACDC,SAAU,KACPpC,KAAK+oH,oBAAoB,MAMxC,CACGpnH,KAAM,QACNC,KAAM,CACH,CACGlB,KAAM,aACNsoH,UAAW,IACXxnH,KAAM,CACHe,QAAS,GACT1D,GAAIqB,EAAI8nH,WACRpmH,KAAM,UASjC,CAEAqnH,gBACG,MAAM/oH,EAAMF,KAAKE,IAEjB,MAAO,CACJo7D,QAAS,EACT15D,KAAM,CACH,CACGlB,KAAM,UACNO,IAAK,UACLC,KAAM,CACH,CAAEH,MAAO,GACT,CACGlC,GAAIqB,EAAIwV,OACRhV,KAAM,SACNgC,MAAO,GACPvB,MAAO,GACPg+E,YAAan/E,KAAKmB,MAAM,qBACxB+nH,gBAAiB,IACjB/mH,GAAI,CACDk/E,gBAAiB,KACdrhF,KAAK0V,OAAOhS,GAAGxD,EAAIwV,QAAQ5J,WAAW,IAI/C,CAAE/K,MAAO,KAGf,CACGlC,GAAIqB,EAAI66G,UACRr6G,KAAM,YACNy7G,cAAc,EACd1yD,UAAU,EACV8yD,WAAY,WACZt7G,IAAK,kBACLS,YAAY,EACZipG,QAAUnzF,GACSA,EAAI2xG,UACf3xG,EAAI2xG,UACJ,uBAGR38C,SAAU,IACVnR,QAAS,GACTl5D,GAAI,CACDg7G,kBAAmB,CAACt+G,EAAI2Y,EAAK4xG,KAE1B,IAAI5rG,EAAS,GAEbne,OAAOD,KAAKgqH,GAASplH,SAASI,IAC3BpE,KAAKuN,MAAM+0G,mBAAmBl+G,GAAKJ,SAASkE,IACzCsV,GAAUtV,EAAImoE,eAAiB,OAAO,GACvC,IAGL,MAAMg5C,EAAM3lH,GAAGxD,EAAI66G,WAEnBsO,EAAIrmC,aACJqmC,EAAIp4F,WAAWpyB,EAAI,CAChByqH,QAAS,UACTH,UAAW3rG,IAEd6rG,EAAIpmC,eAEJjjF,KAAKo7G,iBAAkB,CAAI,EAE9BgC,oBAAqB,CAACv+G,EAAI2Y,EAAK4xG,KAE5B,MAAMC,EAAM3lH,GAAGxD,EAAI66G,WAEnBsO,EAAIrmC,aACJqmC,EAAIp4F,WAAWpyB,EAAI,CAChByqH,QAAS,QACTH,UAAW,KAEdE,EAAIpmC,eACJjjF,KAAKo7G,iBAAkB,CAAK,EAE/B0B,QAAS,KACN,MAAMp1B,EAAWhkF,GAAGxD,EAAI66G,WAAW/tF,KAAK,CACrCu8F,WAAW,IAERC,EAAgB9lH,GAAGxD,EAAIkoH,cAE7BoB,EAAc5kH,SAAS5E,KAAKypH,YAAY/hC,IAEpC1nF,KAAK0pH,eAAehiC,GAAW8hC,EAAcrkH,UAC5CqkH,EAAc/hH,QAAQ,IAIpC,CACG5I,GAAIqB,EAAIgoH,YACRpnH,OAAQ,GAEX,CACGI,KAAM,CACH,CACGrC,GAAIqB,EAAIioH,iBACRznH,KAAM,SACNS,MAAOnB,KAAKmB,MAAM,eAClBQ,KAAM,OACNyJ,KAAM,aACNs4E,SAAU,IACVpiF,MAAO,KACJtB,KAAK2pH,gBAAgB,GAG3B,CACGjpH,KAAM,SACNwG,KAAM,SACNrI,GAAIqB,EAAIkoH,aACRjnH,MAAOnB,KAAKmB,MAAM,UAClBF,IAAK,gBACLkpC,UAAU,EACVxoC,KAAM,OACNyJ,KAAM,eACN9J,MAAO,KACJtB,KAAK8vE,QAAQ,MAOlC,CAEA85C,UACG,MAAM1pH,EAAMF,KAAKE,IAEjB,MAAO,CACJrB,GAAIqB,EAAIi8E,MACRz7E,KAAM,SACN47E,QAAQ,EACR37E,SAAU,SACVE,OAAO,EACPD,QAAQ,EACRI,KAAM,CACHN,KAAM,UACNO,IAAK,aACLC,KAAM,CACH,CAAC,EACD,CACGR,KAAM,QACNS,MAAOnB,KAAKmB,MAAM,gBAClBE,WAAW,GAEd,CAAC,EACD,CACGX,KAAM,SACNK,MAAO,GACPE,IAAK,oBACLU,KAAM,OACNyJ,KAAM,uBACN9J,MAAO,KACJtB,KAAK0E,MAAM,KAKvBlD,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGD,KAAM,OACNT,KAAM,CACHlB,KAAKqjG,WACL,CAAEtiG,MAAO,IACTf,KAAKipH,gBACL,CAAEloH,MAAO,KAGf,CACGlC,GAAIqB,EAAI+nH,cACRvnH,KAAM,QACNU,MAAO,QACPk7E,QAAQ,GAEX,CACGA,QAAQ,EACRwB,OAAQ,EACR58E,KAAM,CACH,CAAEuB,WAAW,GACb,CACG/B,KAAM,SACNwG,KAAM,SACNxE,MAAO1C,KAAKmB,MAAM,UAClBF,IAAK,mBACLI,WAAW,EACXC,MAAO,KACJtB,KAAK0E,MAAM,OAsBnC,CAEAQ,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM5B,EAAMF,KAAKE,IAIX0sB,EAAK5sB,KAAK4rB,eAEZgB,GAAI5sB,KAAK+E,WAAW6nB,EAAGjB,YAE3B,MAAM27E,EAAUxlG,EAAG6Y,MAEnB2sF,EAAQ7mG,GAAGT,KAAK4pH,WAEhB,MAAM7lC,EAAQrgF,GAAGxD,EAAI8J,MAEjB+5E,GAAOujB,EAAQ7jG,OAAOsgF,EAAOujB,EAAQ3jG,aAEzC,MAAMkmH,EAAenmH,GAAGxD,EAAIgoH,aAExB2B,GAAcviB,EAAQ7jG,OAAOomH,EAAcviB,EAAQ3jG,YAC1D,CAEAikG,YACG,MAAM1nG,EAAMF,KAAKE,IAEjBwD,GAAGxD,EAAIi8E,QAAQx3E,OAEf3E,KAAK8pH,YAGLpmH,GAAGxD,EAAI0qF,UAAUgB,YACpB,CAEAlnF,OACGhB,GAAG1D,KAAKE,IAAIi8E,QAAQz3E,MACvB,CAEAolH,YACG,MAAM5pH,EAAMF,KAAKE,IAEjBF,KAAKuoH,UAAY,KACjBvoH,KAAKwoH,aAAe,KAEpB,MAAMzkC,EAAQrgF,GAAGxD,EAAI8J,MAErB+5E,EAAMotB,kBACNptB,EAAM9+E,QAENvB,GAAGxD,EAAIu6E,aAAa71E,SAAS,KAE7B5E,KAAK8B,GAAG6Y,MAAMla,GAAG,GAAIiD,GAAGxD,EAAI8nH,aAE5BtkH,GAAGxD,EAAI6nH,mBAAmB5iH,UAC1BzB,GAAGxD,EAAIkoH,cAAcjjH,UAErBzB,GAAGxD,EAAIwV,QAAQ9Q,SAAS,IACxBlB,GAAGxD,EAAI4nH,gBAAgB9sG,WACvBtX,GAAGxD,EAAI66G,WAAW//F,WAElB,MAAM+uG,EAAiBrmH,GAAGxD,EAAI+nH,eAE9B8B,EAAenlH,SAAS,IACxBmlH,EAAerlH,MAClB,CAEAgR,OAAO0P,GACJ,MAAMi1F,EAAa32G,GAAG1D,KAAKE,IAAI66G,WAE/B,IAAKV,EAAY,OAEjBj1F,GAAcA,GAAc,IAAI/M,cAEhC,MAAM2xG,EAAchqH,KAAKiqH,iBAEzB5P,EAAWzxG,QAAQwW,IAChB,IAAI0N,GAAS,EAYb,OAVCk9F,GAAe,IAAIhmH,SAAS+C,IACtB+lB,IAEJA,GACI1N,EAAI,GAAGrY,EAAEmjH,gBAAkB,IACxB71G,WACAgE,cACAnL,QAAQkY,IAAe,EAAC,IAG3B0H,CAAM,GAEnB,CAEAq9F,eAAen8G,GACZ,IAAI24D,EAAW,GAEf,IAAK34D,EAAM,OAAO24D,EAElB,OAAQ34D,EAAKs7G,SACV,IAAK,cACF3iD,EAAW,sCACX,MACH,IAAK,UACFA,EAAW,mDACX,MACH,IAAK,QAGL,IAAK,OACFA,EAAW,oCACX,MACH,IAAK,OACFA,EAAW,qCAIjB,OAAOA,CACV,CAEAzhE,oBACG,MAAMsjH,EAAexoH,KAAKwoH,aAE1B,IAAKA,EAAc,OAAO,EAE1B,MAAMH,EAAcroH,KAAKqoH,YAEzB,IAAKA,EAAYjuC,aAAaouC,GAO3B,OANAxoH,KAAK8B,GAAG6Y,MAAM7J,MAAM,CACjBC,MAAO/Q,KAAKmB,MAAM,sCAClB8M,KAAMjO,KAAKmB,MAAM,gCACjB+P,GAAIlR,KAAKmB,MAAM,SAGX,EAGV,MAAMjB,EAAMF,KAAKE,IAGX6jF,EAAQrgF,GAAGxD,EAAI8J,MAErB+5E,GAAO3+E,eAAe,CAAEzD,KAAM,SAG9B,MAAMyoH,EAAqB1mH,GAAGxD,EAAI6nH,mBAC5ByB,EAAgB9lH,GAAGxD,EAAIkoH,cAE7BgC,EAAmB3iH,SACnB+hH,EAAc/hH,SAEdzH,KAAKuoH,gBAAkBF,EAAY7tC,YAChCguC,EACA9kH,GAAGxD,EAAIu6E,aAAa3uE,YAGvB,MAAMy8G,EAAYvoH,KAAKuoH,UAEvB,IAAIriH,EAASqiH,EAAUriH,OAQvB,OANIkkH,EAAmBt+G,aAAY5F,EAASqiH,EAAUriH,OAAS,GAE/DsjH,EAAc5kH,SAAS5E,KAAKypH,YAAYvjH,IACxClG,KAAK+oH,qBACLhlC,GAAOr8E,kBAEA,CACV,CAEAohH,cAAcuB,GAIX,OAHA3mH,GAAG1D,KAAKE,IAAI4nH,gBAAgB/sG,OAAOsvG,GACnCrqH,KAAK8pH,aAEE,CACV,CAEAf,qBACG,MAAMvlC,EAAOxjF,KACPE,EAAMF,KAAKE,IACXonG,EAAUtnG,KAAK8B,GAAG6Y,MAGlB2vG,EAAc5mH,GAAGxD,EAAI8nH,YAE3B1gB,EAAQ7mG,GAAG,GAAI6pH,GAEf,MAAM/B,EAAYvoH,KAAKuoH,UAEvB,IAAKA,EAAW,OAGhB,MAAMgC,EAAYhC,EAAU,GAE5B,IAAKgC,EAAW,OAEhB,MAAMC,EAAgB,GAChBlrF,EAAY,GACZmrF,EAAgBzqH,KAAKsK,cAEvBmgH,GACDnrF,EAAUj7B,QACJomH,EAAc3jH,QAAQC,IAEtB,GACG/G,KAAKmG,SAASkwD,mBAAmBnwD,QACjClG,KAAKmG,SAASkwD,kBAAkBnpD,QAAQnG,EAAElI,IAAM,EAEhD,OAAO,EAIV,MAAM6rH,EAAW3jH,EAAE87D,gBAEnB,IAAK6nD,EAAU,OAAO,EAEtB,MAAMC,EAAaD,EAAS18E,SAE5B,OAAK28E,GAEoB,iBAAlBA,EAAWvmH,GAAsB,KAIjD,MAAMikH,EAAcroH,KAAKqoH,YAGrB3kH,GAAGxD,EAAI6nH,mBAAmBj8G,WAC3B0+G,EAAcnmH,QACRkmH,EAAU7rH,KAAI,CAACq6B,EAASntB,KACjB,CACJ/M,GAAI+M,EAAQ,EACZlJ,MAAOq2B,EACP30B,IAAKikH,EAAYrtC,iBAAiButC,EAAW38G,QAKtD2+G,EAAUvmH,SAAQ,CAAC/E,EAAGiU,KACnBs3G,EAAcnmH,KAAK,CAChBxF,GAAIqU,EAAI,EACRxQ,MAAO1C,KAAKmB,MAAM,aAAc,CAAC+R,EAAI,IACrC9O,IAAKikH,EAAYrtC,iBAAiButC,EAAWr1G,IAC9C,IAIRs3G,EAAcp3F,QAAQ,CACnBv0B,GAAI,OACJ6D,MAAO1C,KAAKmB,MAAM,UAIrB,MAAMypH,EAAY,GACZC,EAAkB,GAExBvrF,EAAUt7B,SAAS+C,IAEhB,MAAM+jH,EAAWN,EAAc5hH,QAC3BtF,GAAMA,EAAEc,KAAO2C,EAAE3C,KAAOymH,EAAgB39G,QAAQ5J,EAAEzE,IAAM,IAC1D,GAEF,IAAIksH,EAAY,OAEZD,IACDC,EAAYD,EAASjsH,GAGrBgsH,EAAgBxmH,KAAK0mH,IAGxB,IAAIC,EAAc,CACftqH,KAAM,aACN46D,QAAS,EACTp5D,QAASsoH,EACTjgH,QAASxD,EAAElI,GACXosH,OAAQ,cACRvoH,MAAOqoH,EACP5oH,GAAI,CACDC,SAAU,WACPohF,EAAK0nC,iBAAiBlrH,MACtBwjF,EAAK2nC,gBACR,IAKN,GAAc,SAAVpkH,EAAE3C,IAAgB,CACnB,MAAMgnH,EAAuB,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAmB,CACtB,CAAE3oH,MAAO1C,KAAKmB,MAAM,WAAYtC,GAAI,KACpC,CAAE6D,MAAO1C,KAAKmB,MAAM,YAAatC,GAAI,OAElCysH,EAAqB,CACxB,CAAE5oH,MAAO1C,KAAKmB,MAAM,WAAYtC,GAAI,KACpC,CAAE6D,MAAO1C,KAAKmB,MAAM,YAAatC,GAAI,OAElC0sH,EAAoB,CACvB,CAAE7oH,MAAO1C,KAAKmB,MAAM,YAAatC,GAAI,MACrC,CAAE6D,MAAO1C,KAAKmB,MAAM,gBAAiBtC,GAAI,SAEtC2sH,EAAmB,CACtB,CACG9oH,MAAO1C,KAAKmB,MAAM,SAClBtC,GAAI,GAEP,CACG6D,MAAO1C,KAAKmB,MAAM,SAClBtC,GAAI,GAEP,CACG6D,MAAO1C,KAAKmB,MAAM,SAClBtC,GAAI,GAEP,CACG6D,MAAO1C,KAAKmB,MAAM,SAClBtC,GAAI,IAIVmsH,EAAc,CACX1vD,QAAS,EACT15D,KAAM,CACHopH,EACA,CACGtqH,KAAM,aACNS,MAAOnB,KAAKmB,MAAM,aAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPpC,KAAKmrH,gBAAgB,GAG3BjkH,KAAM,YACN+jH,OAAQ,mBACR/oH,QAASkpH,EACT1oH,MAAO,KAEV,CACGhC,KAAM,aACNS,MAAOnB,KAAKmB,MAAM,OAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPpC,KAAKmrH,gBAAgB,GAG3BjkH,KAAM,MACN+jH,OAAQ,mBACR/oH,QAASmpH,EACT3oH,MAAO,KAEV,CACGhC,KAAM,aACNS,MAAOnB,KAAKmB,MAAM,SAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPpC,KAAKmrH,gBAAgB,GAG3BjkH,KAAM,QACN+jH,OAAQ,mBACR/oH,QAASopH,EACT5oH,MAAO,KAEV,CACGhC,KAAM,aACNS,MAAOnB,KAAKmB,MAAM,QAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPpC,KAAKmrH,gBAAgB,GAG3BjkH,KAAM,OACN+jH,OAAQ,mBACR/oH,QAASqpH,EACT7oH,MAAO,MAEV,CACGhC,KAAM,aACNS,MAAOnB,KAAKmB,MAAM,SAClBU,WAAY,IACZM,GAAI,CACDC,SAAU,KACPpC,KAAKmrH,gBAAgB,GAG3BjkH,KAAM,QACN+jH,OAAQ,mBACR/oH,QAASspH,EACT9oH,MAAO,IAInB,CAGA,GAAIqE,EAAE49B,aAAc,CACjB,IAAI8mF,EAAmB,GAEnB1kH,EAAEJ,iBACH8kH,EAAmB1kH,EAAEJ,eACjBG,QAAQ4kH,IAASA,EAAI/mF,eACrBjmC,KAAKgtH,IACI,CACJ7sH,GAAI6sH,EAAI7sH,GACR6D,MAAOgpH,EAAIvqH,WAKvB6pH,EAAc,CACX1vD,QAAS,EACT15D,KAAM,CACHopH,EACA,CACGtqH,KAAM,aACNS,MAAO,IACPU,WAAY,GACZopH,OAAQ,iBACR3uC,QAAQ,EACRp6E,QAASupH,EACT/oH,MAAO+oH,EAAiB,GAAKA,EAAiB,GAAG5sH,GAAK,OAIlE,CAEA+rH,EAAUvmH,KAAK,CACZ3D,KAAM,SACNgB,YAAY,EACZR,KAAM,CACH,CACGR,KAAM,WACN46D,QAAS,EACT55D,YAAY,EACZT,IAAK,CAAE,cAAe,IACtB0lE,SAAU,sBAAsB5/D,EAAEqE,iBAAiBrE,EAAE5F,SAExD6pH,IAEJ,IAEL1jB,EAAQ7mG,GAAGmqH,EAAWN,GAEtBtqH,KAAKmrH,gBACR,CAEAD,iBAAiBS,GACd,IAAKA,EAAe,OAEpB,MACMC,EADeD,EAAcrgH,gBACGuzE,UACnC,CAAEosC,OAAQ,kBACV,OACD,GAEGW,IAE4B,SAA7BD,EAAc7/G,WAAuB8/G,EAAiBlnH,OACrDknH,EAAiBjnH,OACzB,CAEA+kH,eAAe//G,GAGZ,OAAIA,EAAKzD,OAFK,MAIXlG,KAAK8B,GAAG6Y,MAAM7J,MAAM,CACjBC,MAAO/Q,KAAKmB,MAAM,oBAClB+P,GAAIlR,KAAKmB,MAAM,MACf8M,KAAMjO,KAAKmB,MACR,0HACA,CATK,SAaJ,EAIb,CAEAgqH,iBACG,MAAMjrH,EAAMF,KAAKE,IACXm6G,EAAa32G,GAAGxD,EAAI66G,WACpB1T,EAAKrnG,KAAK8B,GAEhB,IAAKu4G,EAAY,OAEjBA,EAAWr/F,WAGXq/F,EAAWj1G,eAAe,CAAEzD,KAAM,SAGlC,MAAMqoH,EAAchqH,KAAKiqH,iBACnB5uD,EAAU,GAGhBA,EAAQh3D,KAAK,CACVxF,GAAI,UACJwkC,OAAQ,GACRsjC,SAAU3mE,KAAKmqH,eACfppH,MAAO,KAIVs6D,EAAQh3D,KAAK,CACVxF,GAAI,YACJwkC,OAAQ,CAAEi0C,QAAS,kBACnB3Q,SAAU,sBACV5lE,MAAO,KAGV,MAAMihH,EAAmB,GACnBC,EAAW,GA4DjB,IAzDC+H,GAAe,IAAIhmH,SAAS+C,IAC1B,IAAIowE,EAAkBpwE,EAAEpB,MAAMQ,SAASgxE,gBAMvC,GAHIA,GAA8C,iBAApBA,IAC3BA,EAAkBzjE,KAAKuD,MAAMkgE,IAE5BA,GAAiBjxE,OAAQ,CAC1B,MAAMg8G,EAAe,GAGrB/qC,EAAgBnzE,SAAS+rB,IACtB,MAAMw1D,EAAS8hB,EAAGhyE,iBACf,GAAGtuB,EAAEpB,MAAM9G,MAAMwoG,EAAG1sF,MAAM5P,SAG7Bm3G,EAAa79G,KAAKkhF,EAAO9kF,IAEzBuhH,EAAiB39G,KAAK,CACnBuE,OAAQ28E,EACR7kF,KAAM6kF,EAAOrlF,IAAIk8E,aACjBv1E,WAAYE,EAAEpB,MAAM9G,GACpBs4E,gBAAiBpnD,EAAK1O,MACtBgvD,eAAgBtgD,EAAKsgD,eACrB65C,YAAanjH,EAAEmjH,aAChB,IAIL,MAAM/H,EAAU,GAAGjiH,EAAImhB,SAASta,EAAEpB,MAAM9G,MAAMwoG,EAAG1sF,MAAM5P,QAGvDk3G,EAAS59G,KAAK89G,GAEd9a,EAAG1sF,MAAMla,GAAG,CACTC,KAAM,QACNO,IAAK,iBACLpC,GAAIsjH,EACJ3gH,KAAM,CACHI,KAAMsgH,IAGf,CAEA,MAAM78G,EAAyB,UAAhB0B,EAAEpB,OAAOvB,IAAkB,SAAW,OAErDi3D,EAAQh3D,KAAK,CACVxF,GAAIkI,EAAEmjH,YACN7mF,OAAQt8B,EAAEpB,MAAMxE,MAChBkE,OAAQA,EACRshE,SAAU,CAACnvD,EAAKw2B,EAAQtrC,IACrBA,EAAMmQ,QAAQ,OAAQ,QACzB25D,SAAU,IACV/pE,WAAW,GACZ,IAGDu/G,EAAiB97G,OAAQ,CAE1B,MAAMo8G,EAAqB,GAE3BN,EAAiBh+G,SAAS+C,IAGvBA,EAAE6B,OAAO0sB,WAAWt1B,KAAKsK,cAAcxD,UAEvCC,EAAE6B,OAAOhE,SAASmC,EAAEowE,iBAGfnqE,MAAMC,QAAQq1G,EAAmBv7G,EAAEF,eACrCy7G,EAAmBv7G,EAAEF,YAAc,IAGtCy7G,EAAmBv7G,EAAEF,YAAYxC,KAAK,CACnCuyB,QAASlzB,GAAGqD,EAAErG,MAAM6hH,kBACpB78G,OAAQ20G,EAAWmI,kBACnBnyC,eAAgBtpE,EAAEspE,eAClB65C,YAAanjH,EAAEmjH,aAChB,IAGL,MAAM7oG,EAAQ,CAAC,EAGfg5F,EAAW9sG,MAAM+0G,mBAAqBA,EAGtCjjH,OAAOD,KAAKkjH,GAAoBt+G,SAASI,IACtCid,EAAMjd,GAAO,CAAC1B,EAAOiH,KAElB,IAAIrE,GAAU,EAgCd,OA9BA+0G,EAAW9sG,MAAM+0G,mBAAmBl+G,GAAKJ,SAAS4E,IAC/C,MAAMijH,EAAW,CAAC,GAKjB7B,GAAe,IAAIhmH,SAAS+C,IAC1B,MAAM6mB,EAASjkB,EAAK5C,EAAEmjH,aAGH,SAAhBnjH,EAAEpB,MAAMvB,KACRwpB,EAAOskB,SAAS,kBAEhB5sC,GAAU,GAEbumH,EAAS9kH,EAAEpB,MAAM9G,IAAM+uB,CAAM,IAGdhlB,EAAOguB,QAAQi1F,KAI9BvmH,GAAU,EAKb,IAGIA,CAAO,CAChB,IAGJ+0G,EAAW71G,OAAO,QAAS6c,GAE3Bg5F,EAAWr4G,OAAOigH,SAAWA,EAC7B5H,EAAW51G,SACd,MAEO41G,EAAWr4G,OAAOigH,UACnB5H,EAAWr4G,OAAOigH,SAASj+G,SAASm4E,IACjC,MAAM2vC,EAASpoH,GAAGy4E,GAEb2vC,GAELA,EAAOpJ,YAAY,IAKzBrI,EAAW71G,OAAO,QAAS,CAAC,GAC5B61G,EAAW51G,UAId,MAAMwvB,EAAa,IAElBj0B,KAAKuoH,WAAa,IAAIvkH,SAAQ,CAACob,EAAKxT,KAClC,MAAMigH,EAAW,CACdhtH,GAAI+M,EAAQ,IAIdo+G,GAAe,IAAIhmH,SAAS+C,IAC1B,MAAM4C,EAAOyV,EAAIrY,EAAEmjH,YAAc,GAEjC,GAAoB,SAAhBnjH,EAAEpB,MAAMvB,IAAgB,CAKzB,IAAIs5C,EAAa2pD,EAAGhmF,MAAMhB,OAAO1W,EAAM,CACpC6W,OAAQzZ,EAAEyZ,SAEbk9B,EAAa2pD,EAAGhmF,MAAMX,aAAag9B,EAAY,CAC5Cl9B,OAAQ,eAGQ,iBAAfk9B,IACDA,EAAaA,EAAa,MAAQ/zC,GAErCkiH,EAAS9kH,EAAEmjH,aAAexsE,CAC7B,MAAOmuE,EAAS9kH,EAAEmjH,aAAevgH,CAAI,IAIxCkiH,EAAoB,WAAI,EAExB53F,EAAW5vB,KAAKwnH,EAAS,IAIJnoH,GAAGxD,EAAI6nH,mBAAmBj8G,YAE3BmoB,EAAW/tB,OAAS,GAAG+tB,EAAW/f,QAEzD,MAAMs1G,EAAgB9lH,GAAGxD,EAAIkoH,cAE7BoB,EAAc5kH,SAAS5E,KAAKypH,YAAYx1F,IACxComF,EAAWyI,eAAeznD,GAC1Bg/C,EAAWpjG,MAAMgd,GAEbj0B,KAAK0pH,eAAez1F,GAAau1F,EAAcrkH,UAC9CqkH,EAAc/hH,SAGnB4yG,EAAW3yG,gBACd,CAEAqkH,yBAAyBC,EAAiBC,EAAOrgH,GAC9C,MAAM1L,EAAMF,KAAKE,IAOXgsH,GAJY,IAAIzrG,KAASurG,GAEOpgH,GAEEqgH,EAAQrgH,GAEhD,IAAI+B,EAAS,GAGb,MAAMw+G,GAAQD,EAAa,OAAUpwE,QAAQ,GACvChB,GAASoxE,EAAa,MAASpwE,QAAQ,GACvCd,GAAWkxE,EAAa,KAAOpwE,QAAQ,GACvCswE,GAAWF,EAAa,KAAMpwE,QAAQ,GAqB5C,GAnBiBnuC,EAAby+G,EAAU,EAAY,GACjBA,EAAU,GACPpsH,KAAKmB,MAAM,wCAAyC,CAC1DirH,IAKc,GAAXpxE,EACGh7C,KAAKmB,MAAM,+CAAgD,CACjEirH,EAAU,KAGPpxE,EAAU,GACPh7C,KAAKmB,MAAM,sCAAuC,CAAC65C,IACtDF,EAAQ,GACL96C,KAAKmB,MAAM,sCAAuC,CAAC25C,IACjD96C,KAAKmB,MAAM,qCAAsC,CAACgrH,IAE5Dx+G,EACDjK,GAAGxD,EAAIkoH,eAAexjH,SAAS+I,OAC3B,CACJ,MAAM+5E,EAAWhkF,GAAGxD,EAAI66G,YAAY/tF,KAAK,CAAEu8F,WAAW,IACtD7lH,GAAGxD,EAAIkoH,eAAexjH,SAAS5E,KAAKypH,YAAY/hC,GACnD,CACH,CAcAuiC,iBACG,MAAMt8G,EAAS,GACTzN,EAAMF,KAAKE,IAiGjB,OA9FuBwD,GAAGxD,EAAI8nH,YAC1BnpC,UAAU,CAAEosC,OAAQ,eAAiB,OACrCriH,QAAQ47F,GAAoC,QAAvBA,EAAS14F,cAEf,IAAI9H,SAASqoH,IAC7B,MAAM5B,EAAgBzqH,KAAKsK,cAE3B,IAAKmgH,EAAe,OAGpB,MAAM9kH,EAAQ8kH,EAAc78G,UAAUy+G,EAAUrqH,OAAOuI,SAEvD,IAAK5E,EAAO,OAEZ,MACM2mH,EAAY,CACfpC,YAFcmC,EAAUvgH,WAGxBnG,MAAOA,GAGV,GAAkB,SAAdA,EAAMvB,IAAgB,CACvB,MACMmoH,EADeF,EAAU/gH,gBACWuzE,UACvC,CAAEosC,OAAQ,oBACV,OAIH,GAAIsB,EAAsB,CAMvB,IAAI/rG,EAEJ,OAPA+rG,EAAqBvoH,SAASwgG,IAC3B8nB,EAAU9nB,EAASxiG,OAAOkF,MAAQs9F,EAAS14F,UAAU,IAMhDwgH,EAAUpkD,OACf,IAAK,IACF1nD,EACG8rG,EAAU75D,IACV65D,EAAUE,UACVF,EAAU55D,MACV45D,EAAUE,UACVF,EAAUzgD,KACb,MACH,IAAK,IACFrrD,EACG8rG,EAAU55D,MACV45D,EAAUE,UACVF,EAAU75D,IACV65D,EAAUE,UACVF,EAAUzgD,KACb,MACH,IAAK,IACFrrD,EACG8rG,EAAUzgD,KACVygD,EAAUE,UACVF,EAAU55D,MACV45D,EAAUE,UACVF,EAAU75D,IACb,MACH,IAAK,IACFjyC,EACG8rG,EAAUzgD,KACVygD,EAAUE,UACVF,EAAU75D,IACV65D,EAAUE,UACVF,EAAU55D,MAGnB45D,EAAU9rG,OAASA,CACtB,CACH,CAEA,GAAI7a,EAAMg/B,aAAc,CACrB,MACM8nF,EADeJ,EAAU/gH,gBACQuzE,UACpC,CAAEosC,OAAQ,kBACV,OACD,GAGF,GAAIwB,EAAmB,CACpB,MAAMC,EAAc/mH,EAAMgB,eAAeiH,UACtC6+G,EAAkB3gH,YAGrBwgH,EAAUI,YAAcA,CAC3B,CACH,CAEA/+G,EAAOtJ,KAAKioH,EAAU,IAGlB3+G,CACV,CAEA87G,YAAY/hC,GACT,IAAIxhF,EAASwhF,EAIb,OAFI16E,MAAMC,QAAQy6E,KAAWxhF,EAASwhF,EAASxhF,QAExClG,KAAKmB,MAAM,qBAAsB,CAAC+E,GAC5C,CAOAhB,eAOG,MAAMulH,EAAgBzqH,KAAKsK,cAE3B,IAAKmgH,EAAe,OAMpB,MAAMvqH,EAAMF,KAAKE,IACXspH,EAAgB9lH,GAAGxD,EAAIkoH,cAE7BoB,EAAcrkH,UAGd,MAAM4+E,EAAQrgF,GAAGxD,EAAI8J,MACf6/G,EAAenmH,GAAGxD,EAAIgoH,aAE5BnkC,EAAM3+E,aAAa,CAAEzD,KAAM,SAC3BkoH,EAAazkH,aAAa,CACvBzD,KAAM,MACNhB,SAAU,OAIb,MAAMqpH,EAAchqH,KAAKiqH,iBAGnB0C,EAAWlC,EAAc1iH,QACzBsyG,EAAa32G,GAAGxD,EAAI66G,WACpB6R,EAAevS,EAAWrtF,KAAK,CAAEu8F,WAAW,IAElD,IAAIsD,EAAgB,EAEpB,MAAMC,EAAsB,KACzBD,GAAiB,EACjBhD,EAAazkH,aAAa,CACvBzD,KAAM,SACNhB,SAAUksH,EAAgBD,EAAa1mH,QACxC,EAEC6mH,EAAa,CAAC1gG,EAAQ83B,KACrBk2D,IAEDA,EAAW2S,UAAU3gG,EAAQ,YAC7BguF,EAAWr3B,aACXq3B,EAAWppF,WAAW5E,EAAQ,CAC3Bi9F,QAAS,OACTH,UAAWhlE,IAEdk2D,EAAWp3B,gBAGd6pC,IAEAxkH,QAAQ6G,MAAMg1C,EAAW,EAEtBmjD,EAAUtnG,KAAK8B,GAAG6Y,MAClBsyG,EAAc,CAAC5gG,EAAQ7O,EAAS,MACnC,GAAI68F,EAAY,CAEb,MAAM6S,EAAW,GAEjB1vG,EAAOxZ,SAASkE,IACRA,GAAKhB,OAEQ8iH,EAAYphH,QAC1B7B,GAAMA,EAAEpB,OAASoB,EAAEpB,MAAMkB,YAAcqB,EAAIhB,OAC7C,GAEFgmH,EAAS7oH,KAAK6D,EAAIhB,KAAO,KAAOgB,EAAI+I,SAAQ,IAS/CopG,EAAWr3B,aACXq3B,EAAWppF,WAAW5E,EAAQ,CAC3Bi9F,QAAS,UACTH,UAAW+D,EAASh/G,KAAK,WAE5BmsG,EAAWp3B,eACXo3B,EAAW2S,UAAU3gG,EAAQ,gBAChC,GAuCG09F,EAAiBrmH,GAAGxD,EAAI+nH,eACxBkF,EAAY,KAGf3D,EAAc/hH,SAGds8E,EAAMr8E,eACNmiH,EAAaniH,eAEbqiH,EAAenlH,SAAS,IACxBmlH,EAAerlH,OAEf,MAAMgjF,EAAW2yB,EAAWrtF,KAAK,CAAEu8F,WAAW,IAE9CC,EAAc5kH,SAAS5E,KAAKypH,YAAY/hC,IACxC1nF,KAAKoP,KAAK,OAAO,EAGdg+G,EAAY,GAElB,IAAIC,GAAW,EA6Df,IAxDCT,GAAgB,IAAI5oH,SAAQ,CAAC2F,EAAMiC,KACjC,MAAM2kC,EAAavwC,KAAKstH,kBAExBtD,EAAYhmH,SAAS+C,IAClB,GAAKA,EAAEpB,OAAOvB,IAEd,OAAQ2C,EAAEpB,MAAMvB,KAIb,IAAK,SACF,GAAmC,iBAAxBuF,EAAK5C,EAAEmjH,aAA2B,CAC1C35E,EAAWxpC,EAAEpB,MAAMkB,aAChB8C,EAAK5C,EAAEmjH,cAAgB,IACxBr3G,QAAQ,aAAc,IAExB,KACH,CAEA09B,EAAWxpC,EAAEpB,MAAMkB,YAAc8C,EAAK5C,EAAEmjH,aAExC,MAEH,QACG35E,EAAWxpC,EAAEpB,MAAMkB,YAAc8C,EAAK5C,EAAEmjH,aAG9C,IAGH,IAAI5kH,GAAU,EACV4nH,EAAW,GAGf,MAAM5lH,EAAYmjH,EAAct6F,YAAYogB,GAjF7B,IAAClkB,EAmFhB/mB,EAAUgC,EAAUoW,OACpBwvG,EAAW5lH,EAAUkW,OAEjBlY,EAEDA,EAAU+0G,EAAWl5B,SAASx3E,EAAK9K,KAEnCwuH,GAAW,EAEXJ,EAAYtjH,EAAK9K,GAAIquH,IAGpB5nH,GA/FY+mB,EAgGH1iB,EAAK9K,GA/Fdw7G,IAUDA,EAAWkT,aAAalhG,EAAQ,iBAChCguF,EAAWr3B,aACXq3B,EAAWppF,WAAW5E,EAAQ,CAC3Bi9F,QAAS,GACTH,UAAW,KAEd9O,EAAWp3B,gBAgFXmqC,EAAU/oH,KAAK,CAAExF,GAAI8K,EAAK9K,GAAI8K,KAAM4mC,KAChC88E,GAAW,CAAK,KAKrBA,EAwBF,OAVAF,SAEA7lB,EAAQx2F,MAAM,CACXC,MAAO/Q,KAAKmB,MAAM,gBAClB+P,GAAIlR,KAAKmB,MAAM,MACf8M,KAAMjO,KAAKmB,MACR,sGAUT,MAAMqsH,EAAc,CAAC,EAKf3mG,EAAkBmjG,EAAYphH,QAChC7B,GAAMA,GAAKA,EAAEpB,OAAOg/B,cAAgB59B,EAAE2lH,cAI1C,IAAIV,EACAn9B,EAAU,EAEd,IAEG,MAAM4+B,EAAa,GAgFnB,IA9EC5mG,GAAmB,IAAI7iB,SAAS+C,IAC9B,MAAM4B,EAAe5B,EAAEpB,MAEjB+nH,EAAgB/kH,EAAahC,eAEnC,IAAK+mH,EAAe,OAEpB,MAAMC,EAAeD,EAAc3lH,QAEnC,IAAK4lH,EAAc,OAEnB,MAAMC,EAAYjlH,EAAavB,WAC1BuB,EAAavB,WAAWP,WACxB8B,EAAa3D,OAAOqqB,KAGzBm+F,EAAY7kH,EAAa9J,IAAM,CAAC,EAuBhC4uH,EAAWppH,KApBWa,WACnB,IACG,MAAM6E,QAAa4jH,EAAa39F,QAAQ,CACrCL,MAAO,CAAC,EACR5mB,UAAU,KAEAgB,EAAKJ,MAAQI,GAEjB,IAAI/F,SAASob,IAGnBouG,EAAY7kH,EAAa9J,IACtBugB,EAAIrY,EAAE2lH,YAAY7lH,aACjBuY,EAAIwuG,EAAU,GAIxB,CAFE,MAAO1lH,GACNI,QAAQ6G,MAAMjH,EACjB,GAGa2lH,GAAgB,UAG7Bx+G,QAAQkS,IAAIksG,GAGlBL,EAAUppH,SAAS2F,IAChB,MAAM4mC,EAAa5mC,EAAKA,KAGxB0wG,EAAWr3B,aACXq3B,EAAWppF,WAAWtnB,EAAK9K,GAAI,CAC5ByqH,QAAS,cACTH,UAAW,KAEd9O,EAAWp3B,gBAGVp8D,GAAmB,IAAI7iB,SAAS+C,IAE9B,MAAM4B,EAAe5B,EAAEpB,MACjBioH,EAAYjlH,EAAavB,WAC1BuB,EAAavB,WAAWP,WACxB8B,EAAa3D,OAAOqqB,KACnB7f,EACHg+G,EAAY7kH,EAAa9J,IACzB0xC,EAAW5nC,EAAa9B,aAGtB2I,IACFy9G,EAAYtjH,EAAK9K,GAAI,CAAC,CAAEqI,KAAMyB,EAAa9B,cAC3CwmH,GAAW,GAGd98E,EAAW5nC,EAAa9B,YAAc,CAAC,EACvC0pC,EAAW5nC,EAAa9B,YAAY+mH,GAAap+G,CAAI,GACtD,KAGA69G,EAUF,OATA/lB,EAAQx2F,MAAM,CACXC,MAAO/Q,KAAKmB,MAAM,gBAClB+P,GAAIlR,KAAKmB,MAAM,MACf8M,KAAMjO,KAAKmB,MACR,2GAGNgsH,IAMH,MAAM1uD,EAAW,GACXqvD,EAAe,CAACnB,EAAUoB,EAAa/xF,EAASiwF,IACnD,IAAI58G,SAAQ,CAAC/P,EAAS+W,KACnB2lB,EAAQ26B,iBAAiBo3D,GAEH7oH,WACnB,IACG,MAAMyI,QAAeg/G,EAAS72C,YAAY,CACvCjiC,MAAOk6E,IAEJC,EAAergH,EAAO6P,OAG5Bne,OAAOD,KAAK4uH,GAAchqH,SAASiqH,IAChC,MAAM9+G,EAAQ6+G,EAAaC,GAEvB9+G,GACD49G,EACGkB,EACA9+G,EAAM8B,SAAW9B,EAAMoiG,YAAcpiG,EAE3C,IAGH,MAAM++G,EAAavgH,EAAOhE,KACpBwkH,EAAsB,GAE5B9uH,OAAOD,KAAK8uH,GAAYlqH,SAASiqH,IAC9BE,EAAoB9pH,KACjB,IAAIgL,SAAQ,CAAC/P,EAAS+W,KAEInR,WACpB,UACS82B,EAAQ86B,cACXo3D,EAAWD,IAnS1B5hG,EAsSqB4hG,EArShC5T,IAEDA,EAAWkT,aAAalhG,EAAQ,YAChCguF,EAAW2S,UAAU3gG,EAAQ,YAC7BguF,EAAWr3B,aACXq3B,EAAWppF,WAAW5E,EAAQ,CAC3Bi9F,QAAS,OACTH,UAAW,KAEd9O,EAAWp3B,gBAGd6pC,IA0R2BxtH,GAIH,CAHE,MAAO4I,GACN6kH,EAAWkB,EAAU/lH,GACrBmO,EAAO,mBACV,CA3SV,IAACgW,CA2SS,EAGH+hG,EAAgB,IAErB,IAGJ,MAAMC,EAA0BnpH,UAC7B,UACSmK,QAAQkS,IAAI4sG,GAElBJ,EAAY/pH,SAASob,IAElByvE,IACIA,EA7JN,IA6JiC,GAC5B7uF,KAAK+rH,yBACFC,EACAoB,EAAUlnH,OACV2oF,EAEN,IAGCA,IAAYo9B,IACbkB,IACA3D,EAAcrkH,WAGjB7F,GAOH,CANE,MAAO4I,GAKNmO,EAAOnO,EACV,SAGGmmH,GAIT,CAHE,MAAOnmH,GACNI,QAAQ6G,MAAMjH,GACdmO,EAAOnO,EACV,GAGHomH,EAAe,IAGrBlB,EAAUppH,SAAS2F,IAChB80D,EAASp6D,KAAK,CAAExF,GAAI8K,EAAK9K,GAAI8K,KAAMA,EAAKA,MAAO,IAKlD,MAAM4kH,EAAiB,GACjBtC,EAAQxtD,EAASv4D,OAEvB,IAAI0F,EAAQ,EAEZ,KAAO6yD,EAASv4D,QACbqoH,EAAe3iH,GAAS6yD,EAASzyD,OAAO,EA3MxB,IA6MhBJ,IAIH,MAAM4iH,EAAwB,CAC3BC,EACAC,EACAC,EACA1C,IAEA,IAAI58G,SAAQ,CAAC/P,EAAS+W,KAWInR,WACpB,UACS4oH,EACHnB,EACA8B,EACAE,EACA1C,GAIH,MAAM2C,EAAcF,EAAiBx6G,QAGjC06G,GAAa1oH,aACRsoH,EACHI,EACAF,EACAC,EACA1C,GAIH3sH,GAKN,CAHE,MAAO4I,GAENmO,EAAOnO,EACV,GAGHgS,EAAgB,IAMtB8xG,EAAkB,IAAIvrG,KAEtB,MAAM2K,EAAOmjG,EAAer6G,cAGtBs6G,EAAsBpjG,EAAMmjG,EAAgBvuH,KAAKU,KAAMurH,EAWhE,CAVE,MAAO/jH,GAENo/F,EAAQx2F,MAAM,CACXC,MAAO/Q,KAAKmB,MAAM,0BAClB+P,GAAIlR,KAAKmB,MAAM,MACf8M,KAAMjO,KAAKmB,MAAM,+CAGpBgsH,IACA7kH,QAAQ6G,MAAMjH,EACjB,CACH,CAGA2mH,eACG,MAAM9e,EAAS/vG,KAAK4rB,gBAAgBE,mBAC9BgjG,EAAa/e,GAAQvjF,YAC3B,GAAKsiG,EAEL,MAAO,CACJpuH,KAAM,SACNG,OAAO,EACPD,QAAQ,EACRI,KAAM,CACHN,KAAM,UACNQ,KAAM,CACH,CAAC,EACD,CACGR,KAAM,SACNK,MAAO,GACPE,IAAK,oBACLU,KAAM,OACNyJ,KAAM,uBACN9J,MAAO,KACJtB,KAAK+uH,gBAAgB,KAKjCvtH,KAAM,CACHd,KAAM,WACN7B,GAAI,OACJ4qD,UAAU,EACV1oD,MAAO,IACPD,OAAQ,IACRkI,SAAU,CACP,CAAE7H,MAAOnB,KAAKmB,MAAM,eAAgBQ,KAAM,SAC1C,CACGR,MAAO,KACPQ,KAAM,OACNe,MAAOosH,EAAWt/G,MAAQs/G,EAAWjwH,IAExC,CACGsC,MAAO,QACPQ,KAAM,OACNe,MAAOqtG,EAAOpkF,WAAWwb,YAAY2nF,MAKpD,CAEAnF,iBACG,MAAMlpH,EAAKT,KAAK6uH,eAChB7uH,KAAKgvH,YAAchvH,KAAK8B,GAAG6Y,MAAMla,GAAGA,GACpCT,KAAKgvH,YAAYrqH,KAAKjB,GAAG1D,KAAKE,IAAIioH,kBAAkB56G,MAAO,CACxD+iB,IAAK,OAEX,CAEAy+F,iBACG/uH,KAAKgvH,aAAatqH,MACrB,CAEA4oH,kBACG,MAAM3/G,EAAS,CAAC,EAGVif,EAAK5sB,KAAK4rB,eACV6+F,EAAgBzqH,KAAKsK,cAGrBylG,EAASnjF,GAAId,mBACbmjG,EAAoB,GAE1B,IAAI5sF,EACA+tE,EA2BJ,OAzBIL,GAAQvjF,cACT6V,EAAa0tE,EAAOpkF,WAEpBsjG,EAAkB5qH,QACZomH,EAAc3jH,QACbC,GAAMA,EAAE49B,cAAgB59B,EAAEZ,SAASO,aAAe27B,EAAWxjC,MAIpEuxG,EAAaL,EAAOvjF,aAInB6V,GAAc4sF,EAAkB/oH,QAAUkqG,GAC3C6e,EAAkBjrH,SAAS+C,IACxB,MAAMwpG,EAAcxpG,EAAEK,WACjBL,EAAEK,WAAWP,WACbw7B,EAAWhT,KAEhB1hB,EAAO5G,EAAEF,YAAc8G,EAAO5G,EAAEF,aAAe,CAAC,EAChD8G,EAAO5G,EAAEF,YAAY0pG,GAClBH,EAAWG,IAAgBH,EAAWvxG,EAAE,IAI1C8O,CACV,oBCx3DH,MAAMi8F,EAAgC,EAAQ,OAE9CrqG,EAAOC,QAAU,cAAuC,EAGrDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,mBAAmBwlG,EAASxmG,KAAMqB,EAC/D,CAEAO,KACG,MAAM0F,EAAWnG,KAAKmG,SAEtB,OAAOrG,MAAMW,GAAG,CACbC,KAAM,QACNiB,KAAMwE,EAAS8xD,SACfi3D,MAAO,CACJr8F,MAAO,EACP6L,KAAMv4B,EAASkyD,UACfzP,IAAKziD,EAASmyD,UAEjB62D,MAAO,CACJxoD,SAAUxgE,EAAS+xD,SACd,yBAAyB/xD,EAASiyD,kCAClC,IAERg3D,OAAQjpH,EAAS+xD,SACZ,CACGyO,SAAU,yBAAyBxgE,EAASiyD,kCAC5C1yD,OAAQ,IAEX,KACL2pH,OAAQ,CACL,CACGC,MAAO,GACP5sH,MAAO,UACP0oE,MAAO,WAEV,CACGkkD,MAAO,GACP5sH,MAAO,WACP0oE,MAAO,YAGbtqE,OAAQqF,EAASgyD,aAGvB,CAEAjzD,WAAWpD,SACFhC,MAAMuD,KAAKvB,EACpB,CAEAuI,SACGvK,MAAMuK,QACT,oBCtDH,MAAMu/F,EAAgC,EAAQ,OAE9CrqG,EAAOC,QAAU,cAAsC,EAGpDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,kBAAkBwlG,EAASxmG,KAAMqB,EAC9D,CAEAO,KACG,MAAM0F,EAAWnG,KAAKmG,SAEtB,OAAOrG,MAAMW,GAAG,CACbC,KAAM,QACNiB,KAAMwE,EAASqyD,QACf+2D,OAAQppH,EAASsyD,UACjB/1D,MAAO,UACP0oE,MAAO,UACP8jD,MAAO,CACJr8F,MAAO,EACP6L,KAAMv4B,EAASkyD,UACfzP,IAAKziD,EAASmyD,UAEjB62D,MAAO,CACJxoD,SAAUxgE,EAAS+xD,SACd,yBAAyB/xD,EAASiyD,kCAClC,IAERg3D,OACwB,QAArBjpH,EAASqyD,SAAsBryD,EAASqyD,QAInCryD,EAAS+xD,SACT,CACGyO,SAAU,yBAAyBxgE,EAASiyD,kCAC5C1yD,OAAQ,IAEX,KARAS,EAAS+xD,SACN,yBAAyB/xD,EAASiyD,kCAClC,GAOXt3D,OAAQqF,EAASrF,QAGvB,CAEAoE,WAAWpD,SACFhC,MAAMuD,KAAKvB,EACpB,CAEAuI,SACGvK,MAAMuK,QACT,oBClDH,MAAM6gG,EAA2B,EAAQ,OAEzC3rG,EAAOC,QAAU,cAAmC0rG,EACjDvrG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,eAAewlG,EAASxmG,KAAMqB,EAC3D,CAEAgF,WAAWpD,EAAI46D,SACN58D,MAAMuD,KAAKvB,EAAI46D,GAErB,MAAM8yD,EAAa9rH,GAAG1D,KAAKE,IAAIC,WACzBmnG,EAAUtnG,KAAK8B,GAAG6Y,MAEpB60G,GAAYloB,EAAQ7jG,OAAO+rH,EAAYloB,EAAQ3jG,aAEnD,MAAM0hG,EAAWrlG,KAAKU,KAChBksB,EAAK5sB,KAAK4rB,eAEhB,GAAIgB,EAAI,CACL,MAAM6iG,EAAa,CAChB,eACA,SACA,SACA,SACA,mBAIA7iG,EAAGd,sBACD,iBAAmBc,EAAGd,mBAAmB+qF,SAAW,MAEtDxR,EAASjzE,SAAS,CACfC,QAASzF,EAAGd,mBACZwG,UAAW,eACXC,SAAU,KACP8yE,EAASgD,aAAa,IAI/BonB,EAAWzrH,SAAS0rH,IACjBrqB,EAASjzE,SAAS,CACfC,QAASzF,EACT0F,UAAWo9F,EACXn9F,SAAU,KACP8yE,EAASgD,aAAa,GAE1B,GAER,CAEAhD,EAASgD,aACZ,CAEAh+F,SACGvK,MAAMuK,QACT,oBCvDH,MAAMw6F,EAAkB,WAExBtlG,EAAOC,QAAU,cAA4CqlG,EAC1DllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,wBAAwBwlG,EAASxmG,KAC3CQ,OAAOoyB,OACJ,CACGk+F,eAAgB,IAEnBzvH,GAGT,CAEAO,GAAGmvH,GACA,MAAM3pB,EAAMnmG,MAAMW,GAAG,CAClBpB,OAAOoyB,OAAO,CAAE5yB,GAAImB,KAAKE,IAAIyvH,gBAAkBC,GAAoB,CAAC,KAKvE,cAFO3pB,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,EACpB,CAEAuI,SACGvK,MAAMuK,SAIN,MAAMg7F,EAAWrlG,KAAKU,KAEtB2kG,EAASwqB,SAAU,EAEnB7vH,KAAKqoG,YAAYhD,EAAS3wF,OAAO4zF,aAEpC,CAEAD,YAAYG,GACT,MAAMsnB,EAAkBpsH,GAAG1D,KAAKE,IAAIyvH,gBAC9BI,EAAkBrsH,GAAG1D,KAAKE,IAAIC,WAEhC2vH,GAAiBnmH,MAAMmmH,EAAgBnmH,KAAKooE,KAAKy2B,GAErDl0F,YAAW,KACRy7G,GAAiB34C,SACjB04C,GAAiB14C,QAAQ,GACzB,IACN,oBCrDH,MAAMwyB,EAAgC,EAAQ,OAE9CrqG,EAAOC,QAAU,cAAuC,EAGrDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,mBAAmBwlG,EAASxmG,KAAMqB,EAC/D,CAEAO,KACG,MAAM0F,EAAWnG,KAAKmG,SAEtB,OAAOrG,MAAMW,GAAG,CACbC,KAAM,QACNiB,KAAMwE,EAASqzD,SACf+1D,OAAQppH,EAASszD,WACjB/2D,MAAO,UACP0oE,MAAO,UACP8jD,MAAO,CACJr8F,MAAO,EACP6L,KAAMv4B,EAASkyD,UACfzP,IAAKziD,EAASmyD,UAEjB62D,MAAO,CACJxoD,SAAUxgE,EAAS+xD,SACd,yBAAyB/xD,EAASiyD,kCAClC,IAERg3D,OAAQjpH,EAAS+xD,SACZ,CACGyO,SAAU,yBAAyBxgE,EAASiyD,kCAC5C1yD,OAAQ,IAEX,KACL5E,OAAQqF,EAASgyD,aAGvB,oBCrCH,MAAMyxC,EAAgC,EAAQ,OAE9CrqG,EAAOC,QAAU,cAAsC,EAGpDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,kBAAkBwlG,EAASxmG,KAAMqB,EAC9D,CAEAO,KACG,MAAM0F,EAAWnG,KAAKmG,SAEtB,OAAOrG,MAAMW,GAAG,CACbC,KAAM,QACNiB,KAAMwE,EAASwzD,QACfj3D,MAAO,UACP0oE,MAAO,UACPgkD,OAAQjpH,EAAS+xD,SACZ,CACGn3D,MAAOf,KAAKU,KAAKgU,OAAOvO,SAAStE,WACjC8kE,SAAU,0BAA0BxgE,EAASiyD,mCAEhD,KACL43D,aAAc,0BAA0B7pH,EAASyzD,kCACjDq2D,OAAQ,EACRnvH,OAAQqF,EAASrF,QAGvB,oBC5BH,MAAM+jG,EAAkB,WAExBtlG,EAAOC,QAAU,cAAqCqlG,EACnDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,iBAAiBwlG,EAASxmG,KACpCQ,OAAOoyB,OACJ,CACGy+F,QAAS,IAEZhwH,GAGT,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBulG,EAAMnmG,MAAMW,GAAG,CAClB,CACG5B,GAAImB,KAAKE,IAAIgwH,QACbxvH,KAAM,WACNsO,MAAOq2F,EAAS3qC,cAChBN,YAAairC,EAASprC,mBACtBn5D,OAAQd,KAAKmG,SAASrF,OACtB6I,KAAM3J,KAAKmwH,iBACXhuH,GAAI,CACDiuH,YAAa,CAACvxH,EAAI2Y,EAAK5L,KACpB5L,KAAKqwH,WAAW74G,EAAIvJ,KAAM,IAAIwS,KAAO,EAWxC6vG,cAAgB9hG,IACbxuB,KAAKuwH,cAAc/hG,EAAM,MAQrC,cAFOy3E,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAMujG,EAAWrlG,KAAKU,KAEtB2kG,EAASmrB,WAAanrB,EAASmrB,YAAc,CAAC,EAE9C,MAAMtwH,EAAMF,KAAKE,IACXuwH,EAAW/sH,GAAGxD,EAAIgwH,SAExB,GAAIO,EAAU,CACX,MAAMC,EAAeD,EAAS5xC,UAAU,CAAEn+E,KAAM,SAE5CgwH,IAEIrrB,EAASmrB,WAAWG,iBACtBtrB,EAASmrB,WAAWG,eACjBD,EAAa/mH,KAAKslB,YACf,kBACA,CAACT,EAAO7kB,EAAMinH,KACK,WAAZA,GACD5wH,KAAK6wH,cAAcriG,GAAQ7kB,GAAQ,CAAC,GAAGsE,KAC1C,KAKZzK,MAAMC,OAAOitH,EAAcltH,MAAMG,aAEvC,CAEA,MAAM8vB,EAAKzzB,KAAK4rB,eAEX6H,IAKA4xE,EAASmrB,WAAW7gD,SACtB01B,EAASmrB,WAAW7gD,OAASl8C,EAAGtxB,GAAG,UAAU,IAC1CnC,KAAK8wH,oBAGNzrB,EAASmrB,WAAWr6C,SACtBkvB,EAASmrB,WAAWr6C,OAAS1iD,EAAGtxB,GAAG,UAAU,IAC1CnC,KAAK8wH,oBAGNzrB,EAASmrB,WAAWz6G,SACtBsvF,EAASmrB,WAAWz6G,OAAS0d,EAAGtxB,GAAG,UAAU,IAC1CnC,KAAK8wH,oBAGNzrB,EAASmrB,WAAW5hG,WACtBy2E,EAASmrB,WAAW5hG,SAAW6E,EAAGtxB,GAAG,YAAY,IAC9CnC,KAAK8wH,oBAGXL,EAAShsH,UACZ,CAEA0rH,iBACG,MAAM9qB,EAAWrlG,KAAKU,KAChB+yB,EAAKzzB,KAAK4rB,eAEhB,IAAK6H,EAAI,OAAO,KAEhB,MAAMs9F,EAAU1rB,EAAS9qC,eACnBy2D,EAAa3rB,EAAS7qC,kBACtBy2D,EAAU5rB,EAAS5qC,eAEzB,IAAKs2D,IAAYC,EAAY,OAAO,KAEpC,MAAME,EAAcH,EAAQlqH,WACtBsqH,EAAiBH,EAAWnqH,WAC5BuqH,EAAcH,EAAUA,EAAQpqH,WAAa,KAC7CwqH,EAAa59F,EAAGkB,UAChB28F,EAAW,GA6BjB,OA3BAD,EAAWrtH,SAAQ,CAACgK,EAAMpC,KACvB,GAAIoC,EAAKmjH,GAAiB,CACvB,MAAM7zF,EAAO+nE,EAAS3qC,cAAc1tC,MAAMsQ,GAChCA,EAAK56B,QAAUsL,EAAKkjH,KAExBvnH,EAAO,CACV9K,GAAImP,EAAKnP,GACT0yH,QAASj0F,EAAOA,EAAKz+B,GAAK,EAC1B8hB,KAAM3S,EAAKojH,GAAe,IAAI3wG,KAAKzS,EAAKojH,IAAgB,KACxDI,aAAc,IAAI/wG,KAAKzS,EAAiB,YACxCC,KAAMD,EAAKmjH,IAGdG,EAASjtH,KAAKsF,EACjB,KAGH2nH,EAAS9jH,MAAK,SAAUC,EAAGC,GACxB,OAAI0jH,EACM,IAAI3wG,KAAKhT,EAAEkT,MAAM85B,UAAY,IAAIh6B,KAAK/S,EAAEiT,MAAM85B,UAGlD,IAAIh6B,KAAKhT,EAAE+jH,cAAc/2E,UACzB,IAAIh6B,KAAK/S,EAAE8jH,cAAc/2E,SAElC,IAEO62E,CACV,CAEAR,iBACG,MAAMzrB,EAAWrlG,KAAKU,KAElB2kG,EAASosB,kBAAkB79G,aAAayxF,EAASosB,kBAErDzxH,KAAKykF,OAEL,MAAMvkF,EAAMF,KAAKE,IAEjBmlG,EAASosB,iBAAmBn9G,YAAW,KACpC,MAAMm8G,EAAW/sH,GAAGxD,EAAIgwH,SAExB,IAAKO,EAAU,OAGf,MAAMC,EAAeD,EAAS5xC,UAAU,CAAEn+E,KAAM,SAE5CgwH,GAAcA,EAAa11G,WAG/B,MAAM02G,EAAc1xH,KAAKmwH,iBAErBuB,GACDjB,EAASx5G,MAAMy6G,GAIdhB,GAAcA,EAAaiB,SAAS,EAAG7hF,OAAO8hF,yBAE3CvsB,EAASosB,iBAEhBzxH,KAAK6kF,OAAO,GACZ,GACN,CAEAwrC,WAAWwB,EAAaC,GACrB9xH,KAAK+xH,SAASF,EAAaC,EAC9B,CAEA5sH,oBAAoBspB,EAAOqjG,GACxB,MAAMxsB,EAAWrlG,KAAKU,KAChBqH,EAAQs9F,EAASt9F,QAEvB,IAAKA,EAAO,OAEZ,MAAMiqH,EAAe3sB,EAAS7qC,kBAE9B,IAAKw3D,EAAc,OAEnB,MAAMtsH,EAAS,CAAC,EAIhB,OAFAA,EAAOssH,EAAanrH,YAAcgrH,GAAe,SAEpC9pH,EAAMouE,OAAO3nD,EAAO9oB,EACpC,CAEAR,oBAAoBspB,GACjB,MACMzmB,EADW/H,KAAKU,KACCqH,QAEvB,GAAKA,EAEL,aAAaA,EAAMgO,OAAOyY,EAC7B,CAEAi2D,OACG,MAAMvkF,EAAMF,KAAKE,IACXuwH,EAAW/sH,GAAGxD,EAAIgwH,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAAS5xC,UAAU,CAAEn+E,KAAM,SAE3CgwH,IAELA,EAAavrH,UAETurH,EAAatrH,cACdsrH,EAAatrH,aAAa,CAAEzD,KAAM,SACxC,CAEAkjF,QACG,MAAM3kF,EAAMF,KAAKE,IACXuwH,EAAW/sH,GAAGxD,EAAIgwH,SAExB,IAAKO,EAAU,OAEf,MAAMC,EAAeD,EAAS5xC,UAAU,CAAEn+E,KAAM,SAE3CgwH,IAELA,EAAajpH,SAETipH,EAAahpH,cAAcgpH,EAAahpH,eAC/C,CAEAxC,eAAe2sH,EAAaC,GACzB,IAAKD,EAAa,OAElB,MAAMp+F,EAAKzzB,KAAK4rB,eAEhB,IAAK6H,EAAI,OAET,MAAM4xE,EAAWrlG,KAAKU,KAChBqH,EAAQs9F,EAASt9F,QACjBs/F,EAAKrnG,KAAK8B,GAEhB,IAAKiG,EAUF,YATAs/F,EAAGl/F,OAAO8uB,QACP,CAAC,EACD,CACGhmB,QACG,iEACH4sB,SAAUwnE,EAASlkG,QAO5B,MAAM+uH,EAAU,CAAC,EACX5lE,EAAY+6C,EAAS9qC,eAEvBjQ,IAAW4lE,EAAQ5lE,EAAUzjD,YAAcwgG,EAAG50F,QAAQlC,YAE1D,MAAMyhH,EAAe3sB,EAAS7qC,kBAE1Bw3D,IAAc9B,EAAQ8B,EAAanrH,YAAcgrH,GAErD,MAAMjvC,EAAYyiB,EAAS5qC,eAEvBmoB,IAAWstC,EAAQttC,EAAU/7E,YAAcirH,GAG/C,MAAM/jG,EAAS0F,EAAG3H,mBAElB,GAAIiC,GAAQvB,YAAa,CACtB,MAAM6V,EAAatU,EAAOpC,WACpBK,EAAYyH,EAAGzH,UAEjBqW,GAAcrW,IACfkkG,EAAQlkG,EAAUnlB,YAAc,CAAC,EACjCqpH,EAAQlkG,EAAUnlB,YAAYw7B,EAAWhT,MACtCtB,EAAOvB,YAAY3tB,GAE5B,CAEA,aAAakJ,EAAM4nE,OAAOugD,EAC7B,iEC9SY,MAAMrrB,UAAwB,IAC1CllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMD,GAAU,UAAUwlG,EAASxmG,KAAMqB,GAEzCF,KAAKU,KAAO2kG,EACZrlG,KAAKmG,SAAWk/F,EAASl/F,SACzBnG,KAAK8B,GAAKujG,EAASvjG,GACnB9B,KAAK4rB,eAAiBy5E,EAASp/E,iBAAmBo/E,EAASz5E,eAE3D5rB,KAAK82B,SAAW,GAShB92B,KAAKylH,gBAAkB,KAIvBzlH,KAAKiyH,wBAA0B,IAGlC,CAOI3nH,oBACD,OAAOtK,KAAK8B,GAAG2V,WAAWzX,KAAKylH,gBAClC,CAMIvP,4BACD,OAAOl2G,KAAK8B,GAAGiqB,mBAAmB/rB,KAAKiyH,wBAC1C,CAEAxxH,GAAGyxH,EAAe,IAEf,MAAMjsB,EAAM,CACTpnG,GAAImB,KAAKE,IAAIC,UACbO,KAAM,SACNiB,KAAM,QACNC,KAAMswH,GAST,OAFKjsB,EAAIrkG,KAAKsE,SAAQ+/F,EAAInlG,OAAS,IAE5BmlG,CACV,CAEA/gG,WAAWpD,GACR9B,KAAK8B,GAAKA,CACb,CAOA80G,mBAAmBhrF,GAChB5rB,KAAKiyH,wBAA0BrmG,GAAgB/sB,EAClD,CAEAkG,WAAWC,GACRhF,KAAKylH,gBAAkBzgH,GAAQnG,EAClC,CAcAuzB,SAASyE,GACN,IAAKA,IAAQA,EAAIxE,UAAYwE,EAAItE,SAAU,OAG3C,MAAMuE,EAAW92B,KAAK82B,SACPA,EAASluB,QACpB3J,GAAMA,EAAEozB,UAAYwE,EAAIxE,SAAWpzB,EAAEqzB,YAAcuE,EAAIvE,YAI/CpsB,SAET4wB,EAASzyB,KAAK,CACXguB,QAASwE,EAAIxE,QACbC,UAAWuE,EAAIvE,UACfC,SAAUsE,EAAItE,WAIjBsE,EAAIxE,QAAQlwB,GAAG00B,EAAIvE,UAAWuE,EAAItE,UAExC,CAMA4/F,cACGnyH,KAAK82B,SAAS9yB,SAAS6yB,IACpBA,EAAIxE,QAAQ2E,eAAeH,EAAIvE,UAAWuE,EAAItE,SAAS,IAG1DvyB,KAAK82B,SAAW,EACnB,CAWA5xB,8BAA8BktH,EAAcxlG,GACzC,GAAK5sB,KAAKqyH,aAAqB,MAANzlG,EAMzB,OAFIA,EAAGT,aAAeS,EAAGnC,eAAeC,kBAAkBkC,EAAGgC,iBAEhD,IAAIvf,SAAS/P,IACvB,GAAIstB,EAAGT,aAAeS,EAAGnC,eAAeyB,YAGrC,YAFA5sB,IAKH,MAAMgzH,EAAWC,aAAY,KACtB3lG,EAAGT,aAAeS,EAAGnC,eAAeyB,cACrCsmG,cAAcF,GAEdhzH,IACH,GACA8yH,EAAa,GAEtB,CAMA/nH,SAEG,GAAIrK,MAAMU,MAAMyF,UAAUk1B,OAAQ,CAE/B,IAAIK,EAAO17B,KAAK8B,GAAGu5B,OAAOr7B,KAAKU,KAAKyF,SAASk1B,QACzCK,EAAKv1B,SAAS63B,QACftC,EAAKu4C,cAEX,CAGA,MAAMrnD,EAAK5sB,KAAK4rB,eAEXgB,GAEDA,EAAGT,aAAeS,EAAGnC,eAAeC,YAErCkC,EAAGgC,UACT,oBC3LH,MAAMs8E,EAA2B,EAAQ,OAEzC3rG,EAAOC,QAAU,cAAkD,EAGhEG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,8BAA8BwlG,EAASxmG,KACjDQ,OAAOoyB,OACJ,CACGoiB,MAAO,IAEV3zC,IAINF,KAAKyyH,aAAe,KACpBzyH,KAAK0yH,eAAiB,KAGtB1yH,KAAKsyG,kBAAoBjN,EAASvjG,GAAGuzB,iBAClC,GAAGgwE,EAASxmG,sBAGfmB,KAAK2yH,yBACR,CAEAlyH,KACG,MAAMmyH,EAA0B,CAC7B/zH,GAAImB,KAAKE,IAAI2zC,MACbnzC,KAAM,YACN8B,MAAO,CACJ,CACGqxC,MAAO,OACPnzC,KAAM,SACNkB,KAAM,CACH,CACGlB,KAAM,QACNS,MAAOnB,KAAKmB,MAAM,uBAM3B8kG,EAAMnmG,MAAMW,GAAG,CAACmyH,IAStB,OAPAA,EAAwBpwH,MAAM6B,KAC3BhF,OAAOoyB,OAAO,CAAEoiB,MAAO,MAAQ7zC,KAAK6yH,YAAYpyH,MAChDpB,OAAOoyB,OAAO,CAAEoiB,MAAO,QAAU7zC,KAAK8yH,cAAcryH,cAGhDwlG,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,EAAI46D,SACN58D,MAAMuD,KAAKvB,EAAI46D,SAEfrtD,QAAQkS,IAAI,CACfvhB,KAAK6yH,YAAYxvH,KAAKvB,EAAI46D,GAC1B18D,KAAK8yH,cAAczvH,KAAKvB,EAAI46D,KAG/B18D,KAAK2yH,0BAEL,MAAM/lG,EAAK5sB,KAAK4rB,eAEhB,GAAIgB,EAAI,CACL,MAAMy4E,EAAWrlG,KAAKU,KAGtB2kG,EAASjzE,SAAS,CACfC,QAASzF,EACT0F,UAAW,WACXC,SAAU,IAAMvyB,KAAK+yH,gBAGxB1tB,EAASjzE,SAAS,CACfC,QAASzF,EACT0F,UAAW,kBACXC,SAAU,IAAMvyB,KAAK+yH,gBAGxB1tB,EAASjzE,SAAS,CACfC,QAASzF,EACT0F,UAAW,eACXC,SAAU,IAAIvQ,IAAMhiB,KAAK+yH,eAAe/wG,IAE9C,CAEAhiB,KAAK+yH,aACR,CAEA1oH,SACGvK,MAAMuK,SAENrK,KAAK2yH,0BACL3yH,KAAK+yH,aACR,CAEIF,kBACD,OAAQ7yH,KAAKyyH,aACVzyH,KAAKyyH,cACLzyH,KAAKU,KACD+mB,QACAuF,MAAM/Z,GAAkB,OAAZA,GAAG/L,OACf/G,WACV,CAEI2yH,oBACD,OAAQ9yH,KAAK0yH,eACV1yH,KAAK0yH,gBACL1yH,KAAKU,KACD+mB,QACAuF,MAAM/Z,GAAkB,SAAZA,GAAG/L,OACf/G,WACV,CAEA4yH,YAAY7jG,GACT,MAAMtC,EAAK5sB,KAAK4rB,eACV1rB,EAAMF,KAAKE,IACX+3G,EAASv0G,GAAGxD,EAAI2zC,QAElBjnB,IACIsC,IAAUA,EAAWtC,EAAGJ,aAIzB0C,GACAtC,EAAGT,aAAeS,EAAGnC,eAAeC,YAClCkC,EAAGT,aAAeS,EAAGnC,eAAewB,cAQ7BjsB,KAAKsyG,kBAAkBhtG,QAAQ4pB,IAI5C+oF,GAAQp2B,UAAU,MAClB7hF,KAAK6yH,aAAaxoH,aAElB4tG,GAAQp2B,UAAU,QAClB7hF,KAAK8yH,eAAezoH,YAdjB4tG,GAAQp2B,UAAU,OAgB3B,CAEA8wC,0BACG,MAAM/lG,EAAK5sB,KAAK4rB,eACV0mF,EAAoBtyG,KAAKsyG,kBAE3B1lF,GAAIjB,WAAY2mF,EAAkBh9E,WAAW1I,EAAGjB,WAAW7kB,UAC1DwrG,EAAkBh9E,WAAW,IAElCg9E,EAAkB1tG,SACf5E,KAAKmG,SAAS0jB,kBACX7pB,KAAKU,KAAKf,YAAY8mC,gBAAgB5c,iBAE/C,oBCnKH,MAAMg7E,EAAkB,WAExBtlG,EAAOC,QAAU,cAAuCqlG,EACrDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,mBAAmBwlG,EAASxmG,KAAMqB,GAE5DF,KAAKH,OAASA,EACdG,KAAKkC,QAAU,KAEflC,KAAKmwG,eAAiB,CAEtB,EAIAnwG,KAAKgzH,iBAAmB,CAExB,EAIAhzH,KAAKizH,mBAAsB3qD,IACxB+8B,EAASN,WAAWz8B,EAAO,CAEjC,CAEA7nE,GAAGyxH,GAEA,MAAMzqG,EAAQznB,KAAKU,KAAK86D,sBAClB03D,EAAWlzH,KAAKmzH,YAAY1rG,GAC5Bw+E,EAAMnmG,MAAMW,GAAGyxH,GAAgBgB,GAIrC,cAFOjtB,EAAItkG,KAEJskG,CACV,CAGA/gG,WAAWpD,EAAI46D,EAAc,EAAGx6D,EAAU,CAAC,SAClCpC,MAAMuD,KAAKvB,GAEjB9B,KAAKkC,QAAUA,EAEf,MAAMof,EAAW,GAUjB5d,GAAG1D,KAAKE,IAAIC,YAAYqE,OAAO,MAAO,eAAek4D,KAErD,MAAMyzC,EAAiBnwG,KAAKmwG,eAG5B,IAAK,MAAM/rG,KAAO+rG,IAGXA,EAAe/rG,KACfpE,KAAKU,KAAK+mB,OAAOxU,GAAMA,EAAEpU,KAAOuF,IAAK8B,UAKrCw2D,EACDp7C,EAASjd,KAAK8rG,EAAe/rG,GAAKf,KAAKvB,EAAI46D,EAAax6D,IAK3DwB,GAAG1D,KAAKgzH,iBAAiB5uH,KAAOM,cAG7B2K,QAAQkS,IAAID,EACrB,CAEA6xG,YAAY1rG,GACT,MAAM7lB,EAAO,GACPwxH,EAAe,CAAC,EAEtB,IAAIC,EACAC,EAEJ,MAAMntH,EAAWnG,KAAKmG,SAChBypF,EAAkB5vF,KAAKU,KAAKf,YAAY8mC,gBAwF9C,OAtFAhf,EAAMzjB,SAASiP,IAGZ,IAAI9S,EAEJ,IACGA,EAAY8S,EAAE9S,UAAUH,KAAKH,QAE7BoT,EAAE6oG,mBAAmB,aAOxB,CANE,MAAO5zG,GACN/H,EAAY8S,EAAE9S,UAAUH,KAAKH,QAE7B,MAAMY,EAAKN,EAAUM,GAErBN,EAAUM,IAAK,IAAOA,GAAIu0B,KAAK70B,EAClC,CAcA,GAZAH,KAAKmwG,eAAel9F,EAAEpU,IAAMsB,EAYR,MAAhB8S,EAAEtS,SAAS86D,GAAaxoD,EAAEtS,SAAS86D,IAAM43D,EAAa,CACvDA,EAAcpgH,EAAEtS,SAAS86D,GAAK75D,EAAKsE,OACnCotH,EAAc,EAEd,MAAMC,EAAS,CACZryH,KAAM,IAIHsyH,EAAYrtH,EAASk1D,SAAWu0B,EAAgBv0B,QAEtD,IAAK,IAAInoD,EAAI,EAAGA,EAAIsgH,EAAWtgH,IAC5BqgH,EAAOryH,KAAKmD,KAAK,CACdi3D,QAASn1D,EAASm1D,UAAUpoD,GACvBwS,SAASvf,EAASm1D,QAAQpoD,IAC1B08E,EAAgBt0B,UAG3B15D,EAAKyC,KAAKkvH,EACb,CAGA,MAAME,EAAU7xH,EAAKsE,OAAS,EACxBwtH,EAAS9xH,EAAK6xH,GACdE,EAAS1gH,EAAEtS,SAASoM,GAAK,EACzB6mH,EAAS,GAAGH,KAAWE,IAE7B,IAAIE,EAAU,EAEVT,EAAaQ,IACdtrH,QAAQ6G,MACL,aAAahP,GAAWD,KAAKC,uCAAuCizH,EAAaQ,GAAQ1zH,KAAKC,wCAGpGizH,EAAaQ,GAAUzzH,EAEnBuzH,EAAOxyH,KAAKyyH,IAASr4D,UACtBu4D,EAAUH,EAAOxyH,KAAKyyH,GAAQr4D,SAEjC,MAAM2qC,EAAM9lG,EAAUM,KAEtBT,KAAKgzH,iBAAiB//G,EAAEpU,IAAMonG,EAAIpnG,GAClConG,EAAI3qC,QAAUu4D,EAGdH,EAAOxyH,KAAKyyH,GAAU1tB,EAGtBjmG,KAAKoyB,SAAS,CACXC,QAASpf,EACTqf,UAAW,aACXC,SAAUvyB,KAAKizH,qBAGlBK,GAAa,IAGT1xH,CACV,CAEAyI,SACGvK,MAAMuK,SAGNhL,OAAOqG,OAAO1F,KAAKmwG,gBAAgBnsG,SAAS2R,IACzCA,EAAItL,UAAU,GAEpB,oBCzLH,MAAMw6F,EAAkB,WAClBwI,EAAwB,EAAQ,OAChCnF,EACH,WAEH3oG,EAAOC,QAAU,cAAsCqlG,EACpDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,kBAAkBwlG,EAASxmG,KACrCQ,OAAOoyB,OACJ,CACG2tC,SAAU,IAEbl/D,IAINF,KAAK+lG,SAAW,IACnB,CAEAtlG,KAGGT,KAAK8zH,sBAEL,MAAM5zH,EAAMF,KAAKE,IAmBjB,OAlBYJ,MAAMW,GAAG,CAClB,CACG5B,GAAIqB,EAAIk/D,SACR1+D,KAAM,WACNe,OAAQ,IACRsyH,eAAe,EACf9yH,IAAK,yBACLi+D,OAAQl/D,KAAKmG,SAAS+4D,OACtByH,SAAW34D,GAAShO,KAAKg0H,aAAahmH,GACtC7L,GAAI,CACDy8E,cAAe,KACZ5+E,KAAKi0H,kBACLj0H,KAAKk0H,gBAAgB,KAOpC,CAEAhvH,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM8qB,EAAK5sB,KAAK4rB,eAChB,IAAKgB,EAAI,OAGT5sB,KAAK+lG,SAAW/lG,KAAKgmG,eAAe7lG,YACpCH,KAAK+lG,SAAS1iG,KAAK,CAChB3C,KAAMV,KAAKU,KACXkrB,eAAgBgB,IAGnB,MAAM1sB,EAAMF,KAAKE,IACXi0H,EAAYzwH,GAAGxD,EAAIk/D,UACzBt9D,EAAG6Y,MAAMlX,OAAO0wH,EAAWryH,EAAG6Y,MAAMhX,aACpCipB,EAAGoI,KAAKm/F,GAERj7G,OAAOC,iBAAiB,UAAU,KAC/BvF,aAAa5T,KAAKo0H,cAClBp0H,KAAKo0H,aAAe9/G,YAAW,KAC5BtU,KAAKY,OAAOuzH,EAAU7oH,wBACftL,KAAKo0H,YAAY,GACxB,GAAG,GAEZ,CAEA/pH,SACGvK,MAAMuK,SAENrK,KAAKY,QACR,CAEAA,OAAOyzH,GACJ,MAAMC,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UAC9Bk1D,EAAU1zH,SAEV,MAAM2zH,EAAav0H,KAAKw0H,aAAaH,GACrCC,EAAUG,UAAU,CAAE1zH,MAAOwzH,IAC7BD,EAAUjR,qBAAqBziH,UAElC,CAEAkzH,sBACG,MAAMY,EAAW10H,KAAK20H,cACtB30H,KAAK40H,WAAa50H,KAAK8B,GAAG6Y,MAAMla,GAAGi0H,GAGnC10H,KAAK4/D,gBAAgBv8D,KAAK,KAAM,EACnC,CAEAsxH,cACG,MAAMv0D,EAAYpgE,KAAK4/D,gBACjBrI,EAAWv3D,KAAKmG,SAASoxD,SACzBF,EAAcr3D,KAAKmG,SAASkxD,YAE5B4uC,EAAM7lC,EAAU3/D,KAYtB,OAVAwlG,EAAItkG,KAAO,QACXskG,EAAIhlG,IAAM,kBAENo2D,GAAeE,KAChB0uC,EAAIhlG,KAAO,sCAEPo2D,IAAa4uC,EAAIhlG,KAAO,mBACxBs2D,IAAU0uC,EAAIhlG,KAAO,kBAGrBglG,CACV,CAEA+tB,aAAahmH,GACV,MAAMoyD,EAAYpgE,KAAK4/D,gBACjB00D,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UACxBy1D,EAAe70H,KAAK40H,WAGrB5mH,GAAS3O,OAAOD,KAAK4O,GAAM9H,SAC7B8H,EAAOA,GAAQ,CAAC,EAChBhO,KAAK4rB,gBAAgBD,YAAY7kB,SAAS9C,SAAS+C,IAChD,OAAQA,EAAE3C,KACP,IAAK,SACL,IAAK,WACF4J,EAAKjH,EAAEF,YAAc,cACrB,MACH,IAAK,OACL,IAAK,WACFmH,EAAKjH,EAAEF,YAAc,IAAI4Z,KACzB,MACH,IAAK,SACFzS,EAAKjH,EAAEF,YAAc,EAE3B,KAGNu5D,EAAUj5B,YAAYn5B,GAEtB,MAAM8mH,EACHR,EAAU3qH,KAAK6nB,QAAU,EACpB8iG,EAAU3yH,KAAKZ,OACd8zH,EAAaE,OAAS,IAAM/0H,KAAKmG,SAAS+4D,OAE7C81D,EACHV,EAAU3qH,KAAK6nB,QAAU,EACpB8iG,EAAU3yH,KAAKb,OACf+zH,EAAalqH,kBAAkB,IAAImmG,QAErCmkB,EAAUxmF,SAASC,cAAc,OAUvC,OATAumF,EAAQpiC,YAAYgiC,EAAatnH,OAEjCsnH,EAAarwH,OAAO,QAASswH,EAAY,IACzCD,EAAarwH,OAAO,SAAUwwH,EAAa,IAC3CH,EAAaz9C,SAGbp3E,KAAKk1H,oBAAoBD,EAASjnH,GAE3BinH,EAAQtmF,UAAU97B,QAAQ,YAAa7E,EAAKnP,GACtD,CAEA21H,aAAaH,GACV,MAAMC,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UAE9B,IAAI+1D,EAAWd,GAAgBC,EAC3Bc,EAAcD,GAAUJ,OAC5B,KAAOI,GAEuB,cAAxBA,EAASnzH,OAAOtB,MACQ,UAAxBy0H,EAASnzH,OAAOtB,OAEhB00H,EACGD,GAAUJ,OAASK,EAAcD,GAAUJ,OAASK,GAE1DD,EAAWA,GAAU7pH,kBAYxB,GATK8pH,IACFA,EAAcd,GAAWhpH,kBAAkBypH,QAAU77G,OAAOmE,YAE3D+3G,EAAcl8G,OAAOmE,aACtB+3G,EAAcl8G,OAAOmE,YAKpBnE,OAAOmE,WAAa,IAAM+3G,EAAa,CACxC,MAAMC,EAAWr1H,KAAKs1H,gBAClBD,IACDD,GAAeC,EAASN,OAE9B,CAIA,OAFoBzuH,KAAKC,MAAM6uH,EAAcp1H,KAAKmG,SAAS+4D,OAG9D,CAEAo2D,gBAEG,IAAID,EACAF,EAFczxH,GAAG1D,KAAKE,IAAIk/D,UAG9B,KAAO+1D,IAAaE,GACjBA,GAAYF,EAASxqH,mBAAqB,IAAI/B,QAC1CoF,GAA+B,WAAtBA,GAAMhM,QAAQtB,OACzB,GAEFy0H,EAAWA,GAAU7pH,kBAGxB,OAAO+pH,CACV,CAEApB,kBACG,MAAM18D,EAAWv3D,KAAKmG,SAASoxD,SACzBF,EAAcr3D,KAAKmG,SAASkxD,YAClC,IAAKA,IAAgBE,EAAU,OAE/B,MAAM+8D,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UACzBk1D,IAELA,EAAU/mH,MAAMg6F,QAAWtoG,IACxB,IAAIs2H,GAAU,EACVC,EAAOv2H,EAAE+xD,MAAQ,GAQrB,GALKwkE,EAAKtvH,SACPsvH,EAAKnxH,KAAKpF,EAAE4rD,QACZ2qE,EAAKnxH,KAAKpF,EAAE4rD,OAAOonC,aAGlB16B,EACD,IAAK,IAAIv1C,KAAKwzG,EACX,GACGxzG,EAAE8rC,WACF9rC,EAAE8rC,UAAU5gD,QAAQ,+BAAiC,EACtD,CACCqoH,GAAU,EACVvzG,EAAEiwE,WAAWA,WAAW/G,UAAUlnF,SAASV,IACxC,GAAIA,EAAE4J,QAAQ,eAAiB,EAAG,CAE/B,MAAM0gB,EAAStqB,EAAEuP,QAAQ,aAAc,IACvC7S,KAAK+lG,SAAShB,WAAWxtC,EAAU3pC,EAEtC,KAEH,KACH,CAIN,GAAIypC,IAAgBk+D,EACjB,IAAK,IAAIvzG,KAAKwzG,EACX,GACGxzG,EAAE8rC,WACF9rC,EAAE8rC,UAAU5gD,QAAQ,wBAA0B,EAC/C,CACC8U,EAAEiwE,WAAWA,WAAW/G,UAAUlnF,SAASV,IACxC,GAAIA,EAAE4J,QAAQ,eAAiB,EAAG,CAE/B,MAAM0gB,EAAStqB,EAAEuP,QAAQ,aAAc,IACvC7S,KAAK+lG,SAAShB,WAAW1tC,EAAazpC,EAEzC,KAGH,KACH,CAEN,EAEN,CAEAsmG,iBACG,MAAM7uB,EAAWrlG,KAAKU,KAChB4zH,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UACxBl4D,GAAQm+F,EAASn+F,MAAQ,IAAI2L,QAAQ,YAAa,IAExDyhH,EAAU/mH,MAAMo8E,aACb,UACA,sBAAsBziF,KAAQm+F,EAASxmG,KAE7C,CAEAq2H,oBAAoB1gC,EAAKxmF,GACtB,MAAMq3F,EAAWrlG,KAAKU,KAChB8O,EAAOxB,EAAKwB,KACZtI,GAAQm+F,EAASn+F,MAAQ,IAAI2L,QAAQ,YAAa,IACxD2hF,EAAI/f,cAAc,8BAA8BkV,aAC7C,UACA,iBAAiBziF,KAAQsI,KAAQ61F,EAASxmG,MAE7C21F,EAAI/f,cAAc,gCAAgCkV,aAC/C,UACA,wBAAwBziF,KAAQsI,KAAQ61F,EAASxmG,KAEvD,CAEI+gE,sBACD,OAAQ5/D,KAAKy1H,iBACVz1H,KAAKy1H,kBACL,IAAIpoB,EACDrtG,KAAKU,KACL,GAAGV,KAAKE,IAAIC,wBAErB,CAEI6lG,qBACD,OAAQhmG,KAAKioG,iBACVjoG,KAAKioG,kBAAoB,IAAIC,CACnC,oBC7TH,MAAMgG,EAA4B,EAAQ,OAE1C3uG,EAAOC,QAAU,cAA4C,EAG1DG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,wBAAwBwlG,EAASxmG,KAAMqB,EACpE,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QAEvB,OAAO7F,MAAMW,GAAG,CACb0B,GAAI,CAEDy8E,cAAe,KACZ,MAAMwR,EAAS,mBAAmBzqF,GAAOkB,cACtClB,GAAO9G,MACNwmG,EAASvoC,yBAAyBj+D,IAAMwmG,EAAS3wF,OAAO7V,KAE5D6E,GAAG1D,KAAKE,IAAIw1H,aAAanoH,MAAMo8E,aAAa,UAAWyG,EAAO,IAI1E,CAEAxrF,SAAS+Q,GACN,IAAIswE,EAAW,GAIZA,EADCtwE,GAAOjC,KAAKuD,MAAMtB,GAEhB,8DAEU,wDAEhB7V,MAAM8E,SAASqhF,EAClB,oBCtCmB,EAAQ,OAA9B,MACMilB,EAA2B,EAAQ,OAEzC3rG,EAAOC,QAAU,cAAoC0rG,EAClDvrG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,gBAAgBwlG,EAASxmG,KAAMqB,GACzDF,KAAKH,OAASA,CACjB,CAEAY,KAMG,MAAO,CACJkB,KAAM,OACND,YAAY,EACZE,KAAM,CACH,CACGJ,KAVC1B,MAAMW,OAcnB,CAEA4J,SACG,MAAMg7F,EAAWrlG,KAAKU,KAEtB,IACG,MAAM0vF,EAAS,UAAUiV,EAASn+F,MAAMshB,MAAM,KAAK,MAAM68E,EAASxmG,KAElE6E,GAAG1D,KAAKE,IAAIC,WAAWoN,MAAMo8E,aAAa,UAAWyG,EAGxD,CAFE,MAAOnxF,GACNqJ,QAAQC,KAAK,0BAA2BtJ,EAC3C,CAGA,MAAMw0B,EAAKzzB,KAAK4rB,eAEhB,GAAI6H,EAAI,CACL,MAAMvE,EAAWuE,EAAGjH,YAEhB0C,GAAUlvB,KAAKmnC,YAAYjY,GAE/BlvB,KAAKoyB,SAAS,CACXC,QAASoB,EACTnB,UAAW,eACXC,SAAU,IAAIvQ,IAAMhiB,KAAKmnC,eAAenlB,KAG3ChiB,KAAKoyB,SAAS,CACXC,QAASoB,EACTnB,UAAW,SACXC,SAAWojG,IACWliG,EAAGjH,aAEN3tB,KAAO82H,EAAW92H,IAC/BmB,KAAKmnC,YAAYwuF,EAAW,IAIrC31H,KAAKoyB,SAAS,CACXC,QAASoB,EACTnB,UAAW,SACXC,SAAWqjG,IACWniG,EAAGjH,aAEN3tB,KAAO+2H,EAAW/2H,IAC/BmB,KAAKmnC,YAAYyuF,EAAW,GAGxC,CAEA91H,MAAMuK,QACT,CAEA88B,YAAYlZ,EAAU,CAAC,IACLjuB,KAAKU,KAAK+mB,SAAW,IAAIja,MAAK,CAACC,EAAGC,IACzCD,GAAG9H,WAAc+H,GAAG/H,UAIH,YAAlB8H,EAAE9H,QAAQvB,KAAuC,cAAlBsJ,EAAE/H,QAAQvB,KAClC,EACgB,cAAlBqJ,EAAE9H,QAAQvB,KAAyC,YAAlBsJ,EAAE/H,QAAQvB,IAC1C,EAEH,EAToC,IAYxCJ,SAAS+C,IACZ,IAAI4O,EAEJ,GAAI5O,EAAEpB,MAAO,CACV,MAAMA,EAAQoB,EAAEpB,QAEhB,IAAKA,EAAO,OAGZ,OAAQA,EAAMvB,KACX,IAAK,gBA+DL,IAAK,OACFuR,EAAMhQ,EAAM22C,mBAAmBruB,GAE/B,MA7DH,IAAK,OAGF,GAFAtY,EAAMsY,IAAUtoB,EAAMkB,aAEjB8O,EAAK,CACPA,EAAM,GAEN,KACH,CAEA,GAAkC,IAA9BhQ,EAAMQ,SAAS08C,WAAkB,CAClC,IAAIgzE,EAAQ,GAMZ,GAJAlwH,EAAMQ,SAASjE,QAAQ8B,SAAS9B,IACzBA,EAAQrD,KAAO8W,IAAKkgH,EAAQ3zH,EAAQ+L,KAAI,IAG3CtI,EAAMQ,SAAS28C,UAAW,CAC3B,IAAI6wC,EAAQ,SACR1E,EAAiB,GAErBtpF,EAAMQ,SAASjE,QAAQ8B,SAAS0iB,IACzBA,EAAEzY,OAAS4nH,IACZliC,EAAQjtE,EAAEw8B,IACV+rC,EAAiB,iBACpB,IAGH4mC,EAAQ,uCAAuC5mC,+BAA4C0E,wBAA4BkiC,iBAC1H,CAEAlgH,EAAMkgH,CACT,KAAO,CACJ,MAAMxlC,EAAQ,GAEd,IAAIwlC,EAAQ,GAEZlgH,EAAI3R,SAAStB,IACV,IAAIusF,EAAiB,GACjBC,EAAY,GAEZvpF,EAAMQ,SAAS28C,WAAapgD,EAAMwgD,MACnC+rC,EAAiB,iBACjBC,EAAY,eAAexsF,EAAMwgD,QAGpCv9C,EAAMQ,SAASjE,QAAQ8B,SAAS9B,IACzBA,EAAQrD,KAAO6D,EAAM7D,KAAIg3H,EAAQ3zH,EAAQ+L,KAAI,IAEpDoiF,EAAMhsF,KACH,uCAAuC4qF,aAA0BC,gBAAwBxsF,EAAM7D,aAAag3H,kBAC9G,IAGJlgH,EAAM06E,EAAMniF,KAAK,GACpB,CAEA,MAOH,IAAK,OAGF,GAFAyH,EAAMsY,IAAUtoB,EAAMkB,aAEjB8O,EAAK,CACPA,EAAM,GAEN,KACH,CAEA,MAEH,IAAK,UACF,GAAIsY,EAAS,CAeV,MAAM6nG,GAAkB,EAExBngH,EAAMhQ,EAAM6a,OAAOyN,EAAS6nG,EAC/B,CAEA,MAEH,QACGngH,EAAMhQ,EAAM6a,OAAOyN,GAG5B,CAGA,MAAMiiF,EAAanpG,EAAE5G,UAAUH,KAAKH,QAIpCqwG,GAAYtrG,WAAW+Q,GACvBu6F,GAAYhjC,cAAcj/C,EAAQ,GAExC,oBCzNH,MAAMigF,EAA4B,EAAQ,OAE1C3uG,EAAOC,QAAU,cAA2C,EAGzDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,uBAAuBwlG,EAASxmG,KAAMqB,EACnE,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChByF,EAAWnG,KAAKmG,SAEtB,OAAOrG,MAAMW,GAAG,CACb0B,GAAI,CAEDy8E,cAAe,KACZ,MAGMwR,EAAS,oBAFZiV,EAAS1/F,OAAO+lH,GAAQA,EAAI7sH,KAAOsH,EAASoE,WACvC1D,YAAc,MAEnBV,EAASoE,WACR86F,EAASvoC,yBAAyBj+D,IAAMwmG,EAAS3wF,OAAO7V,KAE5D6E,GAAG1D,KAAKE,IAAIw1H,aAAanoH,MAAMo8E,aAAa,UAAWyG,EAAO,IAI1E,CAEAxrF,SAAS+Q,GACN,MAAMnQ,EAAO,GAETwH,MAAMC,QAAQ0I,GACfA,EAAI3R,SAAS4pB,IACVpoB,EAAKnB,KACF,wCAAwCupB,EAAO3f,cACjD,IAEFzI,EAAKnB,KAAK,wCAAwCsR,EAAI1H,eAE3DnO,MAAM8E,SAASY,EAAK0I,KAAK,IAC5B,oBC1CH,MAAMggG,EAA4B,EAAQ,OAE1C3uG,EAAOC,QAAU,cAA0C,EAGxDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,sBAAsBwlG,EAASxmG,KAAMqB,EAClE,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QACJ0/F,EAASzlC,kBAE5B,IAAI+G,EAAWhhE,EAAQA,EAAMuxE,eAAevQ,SAAS,CAAC,GAAK,GAE3D,OAAO7mE,MAAMW,GAAG,CACbuoH,UAAW,GACXloH,OAAQ,GACR6lE,WACAxkE,GAAI,CAEDy8E,cAAe,KACZ,MAAMwR,EAAS,iBAAiBzqF,GAAOkB,cACpClB,GAAO9G,MACNwmG,EAASvoC,yBAAyBj+D,IAAMwmG,EAAS3wF,OAAO7V,KAE5D6E,GAAG1D,KAAKE,IAAIw1H,aAAanoH,MAAMo8E,aAAa,UAAWyG,EAAO,IAI1E,CAEA/lF,SACGvK,MAAMuK,OAEN,MAAMg7F,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QAEvB,IAAKA,EAAO,OAEZ,MAAMowH,EAAcryH,GAAG1D,KAAKE,IAAIw1H,YAEhC,IAAKK,EAAa,OAElB,MACG9nG,EADeo3E,EAASzlC,kBACJh0C,eAAeY,aAAe,CAAC,EACnDlqB,EAAOyzH,EAAYxoH,MAEtB5H,EAAMiyE,cAAc3pD,EAAS,KAAM3rB,EAAM,CACtCmnD,UAAU,IAIbnnD,EAAKyvF,uBAAuB,kBAAkB,GAAG1F,gBAAgB,QACpE,CAEAznF,SAAS+Q,GACN,MAAMhQ,EAAQ3F,KAAKU,KAAKiF,QAExB,IAAKA,EAAO,OAEZ,MAAMowH,EAAcryH,GAAG1D,KAAKE,IAAIw1H,YAEhC,IAAKK,EAAa,OAElB,MAAM9nG,EAAU,CAAC,EAEjBA,EAAQtoB,EAAMkB,YAAc8O,EAE5BhQ,EAAMf,SAASmxH,EAAa9nG,EAC/B,oBCvEH,MAAMigF,EAA4B,EAAQ,OAE1C3uG,EAAOC,QAAU,cAAyC,EAGvDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,qBAAqBwlG,EAASxmG,KAAMqB,EACjE,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QACjBsgG,EAAM,CACT9jG,GAAI,CAEDy8E,cAAe,KACZ,MAAMwR,EAAS,gBAAgBzqF,GAAOkB,cAAclB,GAAO9G,MACxDwmG,EAASvoC,yBAAyBj+D,IAAMwmG,EAAS3wF,OAAO7V,KAG3D6E,GAAG1D,KAAKE,IAAIw1H,aAAanoH,MAAMo8E,aAAa,UAAWyG,EAAO,IAIjEjqF,EAAWnG,KAAKmG,SAItB,OAFIA,EAASrF,SAAQmlG,EAAInlG,OAASqF,EAASrF,QAEpChB,MAAMW,GAAGwlG,EACnB,CAEArhG,SAAS+Q,GACN,MAAMhQ,EAAQ3F,KAAKU,KAAKiF,QAExB,IAAKA,EAGF,YAFA7F,MAAM8E,SAAS,IAKlB,MAAMoxH,EAAiBrgH,GAAOhQ,EAAMQ,SAASu8C,gBAE7C,IAAKszE,EAGF,YAFAl2H,MAAM8E,SAAS,IAKlB,MAAMqxH,EAAWtwH,EAAMk1D,SAASm7D,GAC1B7vH,EAAWnG,KAAKmG,SAOhB6mF,EAAgB,CACnB,oCACA,8GAA8GipC,gBARnG9vH,EAASpF,OAAS4E,EAAMQ,SAASm8C,YAAc,kBAC9Cn8C,EAASrF,OACnB,GAAGqF,EAASrF,WACZ6E,EAAMQ,SAASq8C,YACf,GAAG78C,EAAMQ,SAASq8C,gBAClB,+BAIF,YAAYyzE,uFACZ,gBACD/nH,KAAK,IAEPpO,MAAM8E,SAASooF,EAClB,oBChEH,MAAM6X,EAAkB,WAExBtlG,EAAOC,QAAU,cAAwCqlG,EACtDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,oBAAoBwlG,EAASxmG,KACvCQ,OAAOoyB,OACJ,CACGikG,WAAY,GACZQ,gBAAiB,IAEpBh2H,GAGT,CAEAO,GAAG01H,EAAwB,CAAC,GACzB,MAAM9wB,EAAWrlG,KAAKU,KAGhByF,EAAWk/F,EAASzlC,mBAAmBz5D,UAAY,CAAC,EACpDR,EAAQ0/F,EAAS1/F,QAEjBywH,EAAuC,OAA1BjwH,EAAS6yD,cAEtBooD,EAAQ,GAEd,GAAIj7G,EAAS6wD,UAAW,CACrB,MAAMq/D,EAAgBD,EACjB,iHACA,yGAECE,EAAU,CACbz3H,GAAImB,KAAKE,IAAIg2H,gBACbx1H,KAAM,WACNgB,YAAY,EACZZ,OAAQ,GACR6lE,SAAU0vD,EACV1sH,KAAM,CAAExI,MAAOwE,GAAOxE,OAAS,KAE7Bi1H,IAAYE,EAAQv1H,MAAQoF,EAAStE,WAAa,IACvDu/G,EAAM/8G,KAAKiyH,EACd,CAEA,IAAIx1H,EAC+B,IAA/B6E,GAAOQ,UAAUo8C,YAClBzhD,EAAS4kB,SAAS/f,EAAMQ,SAASq8C,cAAgB1hD,GAEpD,MAAMy1H,EAAUl3H,OAAOoyB,OACpB,CACG5yB,GAAImB,KAAKE,IAAIw1H,WACbh1H,KAAM,WACNgB,YAAY,EACZL,WAAW,EACXP,SACA4vF,QAAwB,SAAf/qF,GAAOvB,IAChBuiE,SAAUyvD,EACL,gDACA,0DACLzsH,KAAM,CAAEmrE,QAAS,KAEpBqhD,GAGEI,EAAQz1H,QAA4B,GAAlBy1H,EAAQz1H,gBACrBy1H,EAAQz1H,OACfy1H,EAAQ1d,YAAa,GAExBuI,EAAM/8G,KAAKkyH,GACX,MAAMC,EAAS,CAAC,EACU,OAA1BrwH,EAAS6yD,cACHw9D,EAAO50H,KAAOw/G,EACdoV,EAAOt1H,KAAOkgH,EACpB,MAAMnb,EAAMnmG,MAAMW,GAAG,CAAC+1H,IAItB,cAFOvwB,EAAItkG,KAEJskG,CACV,CAMArhG,SAAS+Q,EAAK8gH,GACX,MAAMV,EAAcryH,GAAG+yH,GAAYz2H,KAAKE,IAAIw1H,YAE5C,IAAKK,EAAa,OAElB,MAAMpwH,EAAQ3F,KAAKU,KAAKiF,QAEL,WAAfA,GAAOvB,KAAmC,aAAfuB,GAAOvB,IAMtC2xH,EAAYjhC,UAAU,CAAEhgB,QAASn/D,IAL9BogH,EAAYjhC,UAAU,CAAEhgB,QAASn/D,EAAI9C,QAAQ,OAAQ,SAM3D,oBCnGH,MAAMq7F,EAA4B,EAAQ,OAE1C3uG,EAAOC,QAAU,cAAwC,EAGtDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,oBAAoBwlG,EAASxmG,KAAMqB,EAChE,CAEAO,KACG,MAAMkF,EAAQ3F,KAAKU,KAAKiF,QAClBsgG,EAAM,CACThlG,IAAK,UACLkB,GAAI,CAEDy8E,cAAe,KACZ,MAAMwR,EAAS,eAAezqF,GAAOkB,cAAclB,GAAO9G,MACvDmB,KAAKU,KAAKo8D,yBAAyBj+D,IAAMmB,KAAKU,KAAKgU,OAAO7V,KAG7D6E,GAAG1D,KAAKE,IAAIC,YAAYoN,MAAMo8E,aAAa,UAAWyG,EAAO,IAIhEjqF,EAAWnG,KAAKmG,SAItB,OAFIA,EAASrF,SAAQmlG,EAAInlG,OAASqF,EAASrF,QAEpChB,MAAMW,GAAGwlG,EACnB,oBC7BH,MAAMiI,EAA4B,EAAQ,OAE1C3uG,EAAOC,QAAU,cAAwC,EAGtDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,oBAAoBwlG,EAASxmG,KAAMqB,EAChE,CAEI4tD,gBACD,MAAO,gBACV,CAEA5oD,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAGjB9B,KAAK4E,SAAS,eAAe5E,KAAK8tD,oBACrC,CAEA4oE,aACG,MAAMX,EAAcryH,GAAG1D,KAAKE,IAAIw1H,YAEhC,GAAKK,EAEL,OAAOA,EAAYxoH,MAAMwkF,uBAAuB/xF,KAAK8tD,WAAW,EACnE,CAEAlpD,SAAS+Q,GAEN,MAAMnQ,EAAO,GAETmQ,IAAQ3I,MAAMC,QAAQ0I,IAAMnQ,EAAKnB,KAAKsR,GAE1CrB,YAAW,KAER,MAAMqiH,EAAU32H,KAAK02H,aAErB,IAAKC,EAAS,OAAO,EAErB,MAAMhxH,EAAQ3F,KAAKU,KAAKiF,QAClB0tF,EAAW,QAE0B,IAAhC1tF,EAAMQ,SAASjE,QAAQyH,OAC/BhE,EAAMQ,SAASjE,QAAU,IAAIlC,KAAK8B,GAAG6Y,MAAM83D,eAAe,CACvD9oE,KAAMhE,EAAMQ,SAASjE,WAG3ByD,EAAMQ,SAASjE,QAAQyH,KAAK8/E,MAAK,SAAUjyE,GACxC,IAA8B,IAA1BhS,EAAK0H,QAAQsK,EAAI3Y,IAAY,CAC9B,IAAI+uF,EAAO,GACP2F,EAAS/7E,EAAI3Y,GAEjB,KAAOmB,KAAKwzF,YAAYD,IACrB5tF,EAAMQ,SAASjE,QAAQyH,KAAK8/E,MAAK,SAAUgK,GAErC9tF,EAAMQ,SAASjE,QAAQyH,KAAK6pF,YAAYD,KACxCE,EAAI50F,KAEJ+uF,EAAO,GAAG6F,EAAIxlF,SAAS2/E,IAE7B,IAEA2F,EAASvzF,KAAKwzF,YAAYD,GAG7B3F,GAAQp2E,EAAIvJ,KACZolF,EAAShvF,KAAKupF,EACjB,CACH,IAIA,IAAI8F,EAAW,iCAEfL,EAASrvF,SAAQ,SAAUgK,GACxB0lF,GAAY,2GAA4G1lF,UAC3H,IAEA0lF,GAAY,SACZijC,EAAQhoF,UAAY+kD,EAEpB,IAAI5yF,EAAS,GAET61H,EAAQ9hC,aAAe,KAAI/zF,EAAS61H,EAAQ9hC,cAEhD,MAAMkhC,EAAcryH,GAAG1D,KAAKE,IAAIw1H,YAEhCK,EAAY/zH,OAAOlB,OAASA,EAC5Bi1H,EAAYn1H,QAAQ,GACpB,GACN,kEC3FH,MAAMg2H,cAAgB,oBAAQ,OACxBC,YAAc,oBAAQ,OACtBC,WAAa,oBAAQ,OACrBC,MAAQ,oBAAQ,OAEhBztE,eAAiB,oBAAQ,OACzB0tE,aAAe,oBAAQ,OACvBvnG,cAAgB,oBAAQ,OAExBo1E,gBAAkB,6BAExBtlG,OAAOC,QAAU,MAAMgvG,mCAAmC3J,gBACvDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,qBAAqBwlG,EAASxmG,KACxCQ,OAAOoyB,OACJ,CACGwlG,eAAgB,GAChBC,YAAa,IAEhBh3H,GAGT,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChByF,EAAWnG,KAAKmG,SAChBypF,EAAkByV,EAAS1lG,YAAY8mC,gBAG7C,IAAIplC,GAAY,EAEI,KAJA8E,EAASpF,OAAS6uF,EAAgB7uF,SAI/BM,GAAY,GAEnC,IAAI81H,EAAa,CACdx1H,KAAM,SACNZ,MAAO,GAENq2H,EAAc,CACfz1H,KAAM,SACNZ,MAAO,GAGV,OAAQoF,EAASy6D,gBAAkBgvB,EAAgBhvB,gBAChD,IAAK,OACF,MACH,IAAK,SACFu2D,EAAa,CACVx1H,KAAM,UAETy1H,EAAc,CACXz1H,KAAM,UAET,MACH,IAAK,QACFw1H,EAAa,CACVx1H,KAAM,UAKf,MAAM01H,EACHhyB,EAAS5kC,aACTt6D,EAASs6D,aACTmvB,EAAgBnvB,YACbvgE,EAAMF,KAAKE,IACX+lG,EAAMnmG,MAAMW,GAAG,CAClB,CACGC,KAAM,UACNO,IACGkF,EAASw6D,mBAAqBivB,EAAgBjvB,kBACjDz/D,KAAM,CACHi2H,EACA,CACGt4H,GAAIqB,EAAI+2H,eACRv2H,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,oBACNjK,MAAOk2H,EACPt2H,MAAOoF,EAASpF,OAAS6uF,EAAgB7uF,MACzCM,UAAWA,EACXC,MAAO,KACJtB,KAAKs3H,YAAY,EAEpBn1H,GAAI,CAEDy8E,cAAe,KACZ,MAAM13E,EAAOm+F,EAASn+F,MAAM2L,QAAQ,eAAgB,IAC9Cu9E,EAAS,iBAAiBlpF,KAAQm+F,EAASxmG,KACjD6E,GAAGxD,EAAI+2H,iBACF1pH,MAAMknE,cAAc,UACrBkV,aAAa,UAAWyG,EAAO,IAI5C,CACGvxF,GAAIqB,EAAIg3H,YACRx2H,KAAM,QACNS,MAAOnB,KAAKmB,MAAM,qBAErB,CACGQ,KAAM,UAETy1H,MAOT,cAFOnxB,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM5B,EAAMF,KAAKE,IACXq3H,EAAkB7zH,GAAGxD,EAAI+2H,gBACzBO,EAAe9zH,GAAGxD,EAAIg3H,aAExBl3H,KAAKU,KAAKyF,SAAS46C,UACpBw2E,EAAgB5yH,OAChB6yH,EAAa9yH,SAEb6yH,EAAgB7yH,OAChB8yH,EAAa7yH,OAEnB,CAEAO,eACGpF,MAAMuK,OAEN,MAAM2gD,EAAQ,GAEdhrD,KAAKU,KAAKulB,gBAAgBjiB,SAAS4oB,IAC5BA,EAAGT,aAAeS,EAAGnC,eAAeC,YAErCsgC,EAAM3mD,KAAKuoB,EAAGgC,WAAW,IAI3Bo8B,EAAM9kD,OAAS,GAAGlG,KAAKykF,aAErBp1E,QAAQkS,IAAIypC,GAGlBhrD,KAAK6kF,OACR,CAEAJ,OACG,MAAM8yC,EAAkB7zH,GAAG1D,KAAKE,IAAI+2H,gBAE/BM,IAELA,EAAgBpyH,UAChBoyH,EAAgB/yH,OAAO,OAAQ,yBAC/B+yH,EAAgB9yH,UACnB,CAEAogF,QACG,MAAM0yC,EAAkB7zH,GAAG1D,KAAKE,IAAI+2H,gBAE/BM,IAELA,EAAgB9vH,SAChB8vH,EAAgB/yH,OAAO,OAAQ,qBAC/B+yH,EAAgB9yH,UACnB,CAEAS,mBACGlF,KAAKykF,OAEL,MAAMgzC,EAAez3H,KAAK03H,gBAKpBxwB,QAAelnG,KAAK23H,iBAGpBC,QAA4B53H,KAAK63H,uBAGjCC,EAAW93H,KAAK+3H,iBACnBH,EACAH,EACAvwB,GAGG7B,EAAWrlG,KAAKU,KAGtB2kG,EAASoJ,gBAAgBqpB,EAAUzyB,EAAS3kC,WAG5C1gE,KAAK6kF,OACR,CAEA6yC,gBACG,MAAM/pH,EAAS,CAAC,EAGVsY,EAAkBjmB,KAAKU,KAAKulB,gBAC5B+xG,EAAiB/xG,EAAgB/f,OAAS,EAwHhD,OAtHA+f,EACIrd,QAAQgkB,GAAOA,GAAIjB,aACnB3nB,SAAQkB,MAAO0nB,IACb,MAAMpV,EAAMoV,EAAGjB,WACTghG,EAAWn1G,EAAIzP,QACfkwH,EAAWrrG,EAAGJ,YACd0rG,EAAW,GAYjB,IAAIvoG,EAAQ,CAAC,EAEVA,EADCsoG,EACO,CACLnuG,KAAM,MACNzI,MAAO,CACJ,CACGjd,IAAKoT,EAAI6X,KACTU,KAAM,SACNrtB,MAAOu1H,EAASzgH,EAAI6X,SAKrBrvB,KAAK8B,GAAGygB,MACboN,EACA/C,EAAGzmB,UAAUyjB,iBAAiBC,kBAAoB,CAAC,GAMzD,MAAMynG,SACG3E,EAAS38F,QAAQ,CACpBmoG,uBAAuB,EACvBpvH,UAAU,EACVsqB,KAAM,EACN1D,WAEJhmB,KAGI41B,EAAW/nB,EAAIspB,qBAErBwwF,EAASttH,SAAS2F,IACf,IAAIukH,EAGJ12G,EAAI1Q,SAAS9C,SAAS+C,IACnB,MAAMqxH,EAAc,GAGhB5gH,aAAeiY,eACqB,iBAA1B1oB,EAAE/B,OAAOugB,eACjBxe,EAAE/B,OAAOugB,aAAe7R,KAAKuD,MAC1BlQ,EAAE/B,OAAOugB,eAGe,iBAAnBxe,EAAEwe,eACVxe,EAAEwe,aAAe7R,KAAKuD,MAAMlQ,EAAEwe,gBAEhCxe,EAAE/B,OAAOugB,cAAgB,IAAIvhB,SAASq0H,IACpC,MAAMC,GAAavxH,EAAEwe,cAAgB,IAAI3c,QACrC0vH,GACEA,EAAU54F,gBAAkB24F,EAAQ34F,gBACxC,GAEF,IAAK44F,EAAW,OAEhB,MAAMC,EAAcF,EAAQl3H,MACtBq3H,EAAaF,EAAUn3H,MAG7Bi3H,EAAY/zH,KAAK,GAAGk0H,KAAeC,IAAa,KAInB,iBAAnBzxH,EAAEwe,eACfxe,EAAEwe,aAAe7R,KAAKuD,MAAMlQ,EAAEwe,eAEjCxe,EAAEwe,aAAavhB,SAASoyB,IACrBgiG,EAAY/zH,KAAK+xB,EAAKj1B,MAAM,IAG/B+sH,EAAa7uH,OAAOoyB,OACjBy8F,GAAc,CAAC,EACfluH,KAAKy4H,gBAAgB9uH,EAAM5C,EAAGqxH,EAAa74F,IAAa,CAAC,GAI5D2uF,EAAW7hD,QAAU70D,CAAG,IAG3B0gH,EAAS7zH,KAAK6pH,EAAW,IAI5B,MAAMwK,EACHR,EAAShyH,OAAS,EAAIgyH,EAAWA,EAAS,GAG1CF,GACChrH,MAAMC,QAAQyrH,IACZA,EAAmBxyH,OAAS,GAE9B0mB,EAAGrH,cAAgB,IAAIvhB,SAASoyB,IAC9BzoB,EAAOyoB,EAAKj1B,OAASu3H,CAAkB,IAExCr5H,OAAOoyB,OAAO9jB,EAAQ+qH,EAAmB,IAG7C/qH,CACV,CAEA8qH,gBAAgB9uH,EAAMhE,EAAOyyH,EAAc,GAAIO,GAC5C,MAAMhrH,EAAS,CAAC,EAEhB,IAAIgI,EAAM,KAEVhI,EAAO9O,GAAK8K,EAAK9K,GACjB8O,EAAO,GAAGhI,EAAMkB,qBAAuB8C,EAAKhE,EAAMkB,YAElD,MAAMw+F,EAAWrlG,KAAKU,KAGtB,GAAIi4H,EAAoBzyH,OAAQ,CAC7B,MAAM0yH,GAAeD,GAAuB,IAAI/vH,QAC5Ck0B,GAAiC,MAAnBnzB,EAAKmzB,KAGvBuoE,EAAS7lE,UAAU71B,EAAMA,EAAMivH,EAAavzB,EAASv1F,aACxD,CA2DA,OAxDInK,aAAiB2jD,gBAKlB3zC,EAAMhM,EAAKhE,EAAMkB,YAEb8O,GAAK3R,SACN2R,EAAI3R,SAASiP,IACLA,IAGDtN,EAAMgB,gBACPhB,EAAMgB,eACFG,QAAQC,IAAOA,EAAE49B,eACjB3gC,SAAS+C,IACPkM,EAAE,GAAGlM,EAAEF,qBAAuBoM,EAAElM,EAAEF,YAElCoM,EAAElM,EAAEF,YAAcE,EAAEyZ,OAAOvN,EAAG,CAC3BnD,aAAcu1F,EAASv1F,cACxB,IAKPmD,GAAkB,iBAANA,IAAgBA,EAAEo5D,QAAU1mE,EAAMgB,gBAAc,KAMtEgP,EAAMhQ,EAAM6a,OAAO7W,EAAM,CACtBmG,aAAcu1F,EAASv1F,eAI7BsoH,EAAYp0H,SAAS7C,IACdwU,EAAKhI,EAAOxM,GAASwU,EACfhI,EAAOxM,KAAQwM,EAAOxM,GAAS,GAAE,IAI1CwI,EAAKA,MAAMzD,SACZyH,EAAOhE,KAAOgE,EAAOhE,MAAQ,IAE5BA,EAAKA,MAAQ,IAAI3F,SAAQ,CAAC60H,EAAWjtH,KAEnC+B,EAAOhE,KAAKiC,GAAS5L,KAAKy4H,gBACvBI,EACAlzH,EACAyyH,EACAO,EACF,KAIAhrH,CACV,CAEAzI,uBACG,MAAMgiG,EAAS,CAAC,EACVl8C,EAAQ,GACR8tE,EAAkB,CAACC,EAAYpvH,EAAO,MACzCA,EAAK3F,SAAS2sB,IACX,MAAMqoG,EAAWD,EAAWv4G,OAAOmQ,GAE/BqoG,IAAa9xB,EAAO8xB,IACrBhuE,EAAM3mD,KACH,IAAIgL,SAAQ,CAAC/P,EAAS+W,KACnB,MAAM4iH,EAASF,EAAWl+D,SAASm+D,GAEnClC,WAAWoC,iBAAiBD,GAAQ,CAAC9pH,EAAOmoE,KACzC,GAAInoE,EAAO,OAAOkH,EAAOlH,GAGzB+3F,EAAO8xB,GAAY1hD,EAEnBh4E,GAAS,GACV,KAMXw5H,EAAgBC,EAAYpoG,EAAEhnB,MAAQ,GAAG,GAC1C,EAyBL,OAtBA3J,KAAKU,KAAKulB,gBACNrd,QAAQgkB,GAAOA,GAAIjB,aACnB3nB,SAAS4oB,IACP,MAAMpV,EAAMoV,EAAGjB,WAEf,IAAIwtG,EAAavsG,EAAGJ,YAEpB,GAAI2sG,EAAY,CAEb,MAAMhsG,EAAaP,EAAGJ,WAAU,GAEhC2sG,EAAa,CAACn5H,KAAK8B,GAAGygB,MAAM,CAAC,EAAG42G,EAAYhsG,GAC/C,MACKgsG,EAAavsG,EAAG+H,UAErBnd,EAAI1Q,QAAQC,GAAMA,aAAaiwH,eAAchzH,SAAS+C,IACnD+xH,EAAgB/xH,EAAGoyH,EAAW,GAC/B,UAGF9pH,QAAQkS,IAAIypC,GAEXk8C,CACV,CAEA2wB,uBACG,MAAM5nH,EAAMjQ,KAAKU,KAAKogE,cAEtB,OAAO,IAAIzxD,SAAQ,CAAC/P,EAAS+W,KAC1BygH,WAAWoC,iBAAiBjpH,GAAK,CAACd,EAAOmoE,KACtC,GAAInoE,EAAO,OAAOkH,EAAOlH,GAEzB7P,EAAQg4E,EAAQ,GACjB,GAER,CAEAygD,iBAAiBqB,YAAazvH,KAAMu9F,QACjC,MAAMmyB,UAAY,CAAC,EACbC,IAAM,IAAIvC,MAAMqC,aAChBG,IAAM,IAAI3C,cACV4C,YAAc,IAAI3C,YAAY,CACjC4C,UAAU,EACVC,SAAU,CAACC,EAAUC,IAKX1yB,OAAOyyB,IAAa,GAE9BE,QAAS,CAACC,EAAWH,EAAUC,KAC5B,MAAMv8E,EAAa,CAAC,IAAK,KACnBgoD,EAAWrlG,KAAKU,KAChBksB,EAAKy4E,EAASz5E,eAEpB,GAAKgB,EA6CE,CACJ,IAAIpV,EAAMoV,EAAGjB,WAEb,IAAKnU,EAAK,OAAO6lC,EAGjB,GAAIu8E,EAAQ1sH,QAAQ,MAAQ,EAAG,CAC5B,MAAM6sH,EAAWH,EAAQpxG,MAAM,KAI/B,GAFAhR,EAAMA,EAAI8O,SAAStnB,GAAMA,EAAEmC,QAAU44H,EAAS,KAAI,IAE7CviH,EAAK,OAAO6lC,EAEjBu8E,EAAUG,EAAS,EACtB,CAEA,MAAMjiE,EAAatgD,EAAI1Q,QACnBC,GAAMA,EAAEF,aAAe+yH,IACzB,GAEF,OAAK9hE,GAAY3xD,UAGd2xD,EAAW3xD,SAASk8C,UACpByV,EAAW3xD,SAASm8C,aAEpBjF,EAAW,GAAKya,EAAW3xD,SAASm8C,YAGpCwV,EAAW3xD,SAASo8C,WACpBuV,EAAW3xD,SAASq8C,cAEpBnF,EAAW,GAAKya,EAAW3xD,SAASq8C,aAEhCnF,GAd2BA,CAerC,CAhFS,CACN,MAAM28E,EAAM30B,EAASp/E,gBAErB,OAAI+zG,GACDA,EAAIh2H,SAAS4oB,IACV,IAAIpV,EAAMoV,EAAGjB,WAEb,IAAKnU,EAAK,OAAO,EAGjB,GAAIoiH,EAAQ1sH,QAAQ,MAAQ,EAAG,CAC5B,IAAI6sH,EAAWH,EAAQpxG,MAAM,KAE7B,IAAKhR,EAAI8O,QAAS,OAAO,EAIzB,GAFA9O,EAAMA,EAAI8O,SAAStnB,GAAMA,EAAEmC,QAAU44H,EAAS,KAAI,IAE7CviH,EAAK,OAAO,EAEjBoiH,EAAUG,EAAS,EACtB,CAEA,MAAMjiE,EAAatgD,EAAI1Q,QACnBC,GAAMA,EAAEF,aAAe+yH,IACzB,GAEF,QAAK9hE,GAAY3xD,WAGd2xD,EAAW3xD,SAASk8C,UACpByV,EAAW3xD,SAASm8C,aAEpBjF,EAAW,GAAKya,EAAW3xD,SAASm8C,YAGpCwV,EAAW3xD,SAASo8C,WACpBuV,EAAW3xD,SAASq8C,cAEpBnF,EAAW,GAAKya,EAAW3xD,SAASq8C,cAEhC,EAAK,IAGRnF,GACIA,CACjB,CAmCA,IA0BN,IACGk8E,IAAIU,aAAaT,aACbU,QAAQZ,KACRhnC,QAAQ3oF,MACR6mF,WAAW,CACT7S,OAAQ,SAAUw8C,KACf,MAAO,CACJ7kH,IAAK,SAAU8kH,MAAOlrH,SAEnB,GAA6B,IAAzBirH,IAAIjtH,QAAQ,SAAgB,CAC7B,MAAM45B,GAAQqzF,IAAI3xG,MAAM,KAAK,IAAM,IAAI+e,OAEvC,OAAQ6yF,MAAY,MAAK,IAAIxxH,QAAO,SAAUoF,GAC3C,QAAOA,EAAK84B,EACf,GACH,CAEK,GAAIqzF,IAAIjtH,QAAQ,WAAa,EAAG,CAClC,MAAM45B,EAAOqzF,IAAI3xG,MAAM,UAAU,GAC3B6xG,EAAUF,IAAI3xG,MAAM,UAAU,GAEpC,IAAIxH,EAASo5G,MAAMtzF,GAYnB,MAVsB,iBAAX9lB,IACRA,EAASA,EAAOnO,QACb,UACA,KAGDwmH,UAAUgB,KAAUhB,UAAUgB,GAAW,GAE9ChB,UAAUgB,IAAYn/E,WAAWl6B,GAE1Bo5G,MAAMtzF,EAChB,CAEK,GAA6B,IAAzBqzF,IAAIjtH,QAAQ,SAAgB,CAClC,MAAMmtH,EAAUF,IAAItnH,QAAQ,QAAS,IAErC,OAAOwmH,UAAUgB,IAAY,CAChC,CAyCK,GAAyB,IAArBF,IAAIjtH,QAAQ,KAAY,CAC9B,MAAMwzF,EAAQy5B,IAAItnH,QAAQ,IAAK,IAAI2V,MAAM,KACnC8xG,EAAa55B,EAAM,GAAGn5D,OACtBgzF,EAAa75B,EAAM,GAAGn5D,OAE5B,IAAK+yF,IAAeC,EAAY,MAAO,GAGvC,IAAIC,EAEJ,MAAMhjH,EAAM4iH,MAAM/tD,QAElB,GAAI70D,EAAK,CACN,MAAMijH,EAAiBjjH,EAAI1Q,QACvBC,GAAMA,EAAEF,aAAe0zH,IACzB,GAEF,GAAIE,EAAgB,CACjB,MAAMrzH,EAAaqzH,EAAerzH,WAElCozH,EAAepzH,EACVA,EAAWP,WACX,IACR,CACH,CAEA,IAAI6zH,EAAa/wH,KAAK2wH,GAElBI,IAAe1tH,MAAMC,QAAQytH,KAC9BA,EAAa,CAACA,IAEjB,MAAMC,EAAUhxH,GACbA,EAAK,GAAG6wH,aACR7wH,EAAK6wH,IACL7wH,EAAK9K,IACL8K,EAEH,OAAQ+wH,GAAc,IAAI9xH,QAAO,SAAUoF,GAExC,IAAI4sH,EAAWR,MAAMG,GAErB,OAAIvtH,MAAMC,QAAQ2tH,GAEZA,EAAShyH,QACLtF,GAAMq3H,EAAOr3H,KAAOq3H,EAAO3sH,KAC7B9H,OAAS,EAELy0H,EAAO3sH,KAAU2sH,EAAOC,EACvC,GACH,CAEK,GAAIT,IAAIjtH,QAAQ,MAAQ,EAAG,CAC7B,MAAMS,OAASysH,MACTtzF,KAAOqzF,IAAI3xG,MAAM,KAAK,GACtB4lB,UAAY+rF,IAAI3xG,MAAM,KAAK,GAEjC,GAAIse,MAAQsH,UAAW,CACpB,IAAIzkC,KAAOywH,MAAMtzF,MAEjB,GAAIn9B,KAGD,OAFKqD,MAAMC,QAAQtD,QAAOA,KAAO,CAACA,OAE3BA,KAAKf,QAAQ+nB,GACjBkrB,KAAKzN,UAAUv7B,QAAQ,MAAO,QAGvC,CACA,OAAOlF,MACV,CAAO,MAAY,MAARwsH,IAAoBC,MACnBA,MAAMD,IACrB,EAEN,IAEFpnD,QAGP,CAFE,MAAO5jE,GACN,OAAOA,CACV,CAGA,MAAM0rH,SAAWtB,IAAIuB,SAASC,SAAS,CACpCp5H,KAAM,OACNq5H,SACG,4EAGN,OAAOH,QACV,mBC9vBH,MAAM5nB,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAA+ByzG,EAC7CtzG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,oBAAoBwlG,EAASxmG,KAAMqB,EAChE,CAEAO,KACG,MAAM+iF,EAAOxjF,KACPqlG,EAAWrlG,KAAKU,KAChBsJ,EAAOq7F,EAASxoC,sBAChB12D,EAAWk/F,EAASl/F,UAAY,CAAC,EAEjCq7D,EACHr7D,EAASq7D,WAAa6jC,EAAS1lG,YAAY8mC,gBAAgB+6B,UAExDykC,EAAM,CACT/kG,KAAM,IAmFT,MA/EkB,WAAdsgE,GAAwC,UAAdA,GAC3BykC,EAAI/kG,KAAKmD,KAAK,CAAC,GAId8B,EAASg7D,eACV8kC,EAAI/kG,KAAKmD,KACN,CACG3D,KAAM,SACNW,WAAW,EACXqB,MAAOyD,EAASi7D,aAAephE,KAAKmB,MAAM,UAC1CG,MAAO,WACJkiF,EAAKn7E,SAASrI,KACjB,EACAmC,GAAI,CACDy8E,cAAe,WACZ5+E,KAAKgsG,eAAeriB,aACjB,UACA,iBAAiB3/E,EAAKnL,KAE5B,IAGN,CACGkC,MAAO,KAMZoF,EAASk7D,cACV4kC,EAAI/kG,KAAKmD,KACN,CACG3D,KAAM,SACNW,WAAW,EACXqB,MAAOyD,EAASm7D,YAActhE,KAAKmB,MAAM,SACzCG,MAAO,WACJkiF,EAAKy3C,QAAQj7H,KAChB,EACAmC,GAAI,CACDy8E,cAAe,WACZ5+E,KAAKgsG,eAAeriB,aACjB,UACA,gBAAgB3/E,EAAKnL,KAE3B,IAGN,CACGkC,MAAO,KAMZoF,EAAS86D,aACVglC,EAAI/kG,KAAKmD,KAAK,CACX3D,KAAM,SACNiB,KAAM,OACNV,IAAK,gBACLI,WAAW,EACXqB,MAAOyD,EAAS+6D,WAAalhE,KAAKmB,MAAM,QACxCG,MAAO,WACJkiF,EAAK37E,OAAO7H,KACf,EACAmC,GAAI,CACDy8E,cAAe,WACZ5+E,KAAKgsG,eAAeriB,aACjB,UACA,eAAe3/E,EAAKnL,KAE1B,KAMS,WAAd2iE,GAAwC,SAAdA,GAAsBykC,EAAI/kG,KAAKmD,KAAK,CAAC,GAE5DvE,MAAMW,GAAGwlG,EACnB,CAEA59F,SAAS6yH,GACN,MAAM71B,EAAWrlG,KAAKU,KAChByF,EAAWk/F,EAASl/F,UAAY,CAAC,EAGjC6D,EAAOq7F,EAASxoC,sBAUtB,GAPW7yD,EAAK4hB,gBAGZQ,UAAU,MAEd8uG,GAAc35C,gBAAgBt8E,QAE1BkB,EAASo7D,YAAav3D,EAAK+6F,WAAW5+F,EAASo7D,iBAE9C,CACF,MAAM45D,EAAiBn5G,GAAMA,EAAE7b,UAA+B,SAAnB6b,EAAE7b,SAASxE,KAEhDy5H,EAAWp7H,KAAKg9D,aACtB,GAAIo+D,EAAU,CACX,MAAMp+D,EAAao+D,EAASp+D,WAAWm+D,IAAkBC,EAErDp+D,GAAYhzD,EAAK+6F,WAAW/nC,EAAWn+D,GAC9C,CACH,CACH,CAEAo8H,QAAQI,GAEL,MAGMzuG,EAHO5sB,KAAKU,KAAKm8D,sBAGPjxC,eAGZgB,GACDA,EAAGR,UAAU,MAGhBivG,GAAa95C,gBAAgBt8E,OAChC,CAEA4C,OAAOopG,GACJ,IAAKA,EAEF,YADA3oG,QAAQ6G,MAAM,8BAIjB,MAAMnF,EAAOhK,KAAKU,KAAKm8D,sBACjB2C,EAAWyxC,EAAW1vB,cAG5B0vB,EAAW9rG,YAGX6E,EACI+nH,SAASvyD,GACTrrD,MAAK,KACH88F,EAAWxpG,WAGXuC,EAAK4nG,cAAc,IAErBx9F,OAAOlM,IACLI,QAAQ6G,MAAMjH,GAGd,IACG+oG,EAAWxpG,UAQd,CAPE,MAAOxI,GACNe,KAAK8B,GAAGqG,OAAOC,UAAUnJ,EAAG,CACzBiQ,QACG,sDACHosH,SAAUt7H,MAAMU,MAAM7B,GACtB08H,OAAQv7H,MAAMU,MAAMgU,QAAQ7V,IAElC,IAET,oBCvLH,MAAMo0G,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAA0C,EAGxDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,sBAAsBwlG,EAASxmG,KAAMqB,EAClE,CAEAO,KACG,OAAOX,MAAMW,GAAG,CACbC,KAAM,YAEZ,oBCbH,MAAMmkG,EAAkB,WAClB3sE,EAAiB,EAAQ,OACzBg3E,EAAoB,EAAQ,OAC5BvrC,EAAmB,EAAQ,OAC3B63D,EAAoB,EAAQ,OAC5BnsB,EAAiB,EAAQ,OAMzB2S,EAAmB,GAEzBziH,EAAOC,QAAU,cAAkCqlG,EAChDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,cAAcwlG,EAASxmG,KACjCQ,OAAOoyB,OACJ,CACGznB,KAAM,GAEN46E,OAAQ,GACRY,cAAe,IAElBtlF,IAINF,KAAKy7H,QAAU,KACfz7H,KAAK07H,SAAU,CAClB,CAEAj7H,KACG,MAAM4kG,EAAWrlG,KAAKU,KAEhBkB,EADiByjG,EAASmK,iBACJ/uG,KAAKmB,MAAQ,GACnC+5H,EAAyB37H,KAAK47H,qBAC9B31B,EAAMnmG,MAAMW,GAAG,CAClB,CACG5B,GAAImB,KAAKE,IAAI8J,KACbtJ,KAAM,OACNm7H,KAAMx2B,EAASxmG,GACf+C,KAAMA,EAAKkmB,OAAO6zG,MAMxB,cAFO11B,EAAItkG,KAEJskG,CACV,CAEA21B,qBACG,MAAMjuH,EAAS,CACZ,CACG2uE,QAAQ,EACR16E,KAAM,KAKNyjG,EAAWrlG,KAAKU,KAChBsE,EAAShF,KAAK4rB,gBAAgBD,YAAc05E,EAASpiG,eAE3D,IAAK+B,EAAQ,OAAO2I,EAEpB,MAAMu0G,EAAe,GACf4Z,EAAez2B,EAAS5iC,kBA6C9B,OA3CAz9D,EAEI8B,QAAQC,GAAMA,GAAGZ,UAAUgxE,kBAC3BnzE,SAAS+C,IACM+0H,EAAa9uG,MACtB+uG,GAAQh1H,EAAElI,KAAOk9H,EAAI51H,SAASoE,YAMQ,iBAA/BxD,EAAEZ,SAASgxE,kBACnBpwE,EAAEZ,SAASgxE,gBAAkBzjE,KAAKuD,MAC/BlQ,EAAEZ,SAASgxE,kBAKjBpwE,EAAEZ,SAASgxE,gBAAgBnzE,SAAQ,CAAC+rB,EAAMomF,KACvC,MAAM5wB,EAASvlF,KAAK8B,GAAGuzB,iBACpB,GAAGtuB,EAAEF,cAAcsvG,KAGG,mBAAd5wB,EAAO9kF,GACfyhH,EAAa79G,KAAKkhF,EAAO9kF,MAGzByhH,EAAa79G,KAAKkhF,EAAO9kF,IAI5BuhH,EAAiB39G,KAAK,CACnBuE,OAAQ28E,EACR7kF,KAAM6kF,EAAOrlF,IAAIk8E,aACjBv1E,WAAYE,EAAEF,WACdswE,gBAAiBpnD,EAAK1O,MACtBgvD,eAAgBtgD,EAAKsgD,gBACtB,IACH,IAGR1iE,EAAO/L,KAAOsgH,EAEPv0G,CACV,CAEAzI,WAAWpD,EAAI46D,EAAax6D,EAAU,CAAC,SAC9BpC,MAAMuD,KAAKvB,GAEjB9B,KAAKU,KAAK8uG,iBAAiBnsG,KAAKvB,EAAI46D,EAAax6D,GAEjDlC,KAAKg8H,cAAc95H,GACnBlC,KAAKi8H,aACLj8H,KAAKk8H,sBAEL,MAAM50B,EAAUtnG,KAAK8B,GAAG6Y,MAClBopE,EAAQrgF,GAAG1D,KAAKE,IAAI8J,MAEtB+5E,GACDujB,EAAQ7jG,OAAOsgF,EAAOujB,EAAQ3jG,aAG7B+4D,EAAc,GAAGqnB,EAAM5+E,SAC9B,CAEA62H,cAAc95H,EAAU,CAAC,GAElBA,GAASkgE,cAEVpiE,KAAKU,KAAKyF,SAASi8D,YAAclgE,EAAQkgE,eAG5C,MAAMijC,EAAWrlG,KAAKU,KAElBwB,EAAQqtG,iBACTlK,EAASiK,WAAWC,iBAAmBrtG,EAAQqtG,iBAC7ClK,EAASiK,WAAWC,iBAAmB,KAAM,CACrD,CAEA0sB,aAEG,MAAMrvG,EAAK5sB,KAAK4rB,eAEhB,IAAKgB,EAAI,OAGT5sB,KAAKoyB,SAAS,CACXC,QAASzF,EACT0F,UAAW,eACXC,SAAWtE,IACSjuB,KAAKU,KACgB+hE,iBAClCvR,GAASA,aAAgBg+C,IAIRlrG,SAAS+C,IAC3B,MAAMpB,EAAQoB,EAAEpB,QAChB,GACmC,OAAhCA,GAAOQ,UAAUc,aACjBtB,GAAOgiF,0BAEAhiF,EAAMgiF,iBACT15D,EAAQtoB,EAAMkB,aACf,GAAImG,MAAMC,QAAQghB,EAAQtoB,EAAMkB,aAAc,CAC3C,IAAIs1H,EAAW,GACfluG,EAAQtoB,EAAMkB,YAAY7C,SAASiP,IAChCkpH,EAAS93H,KAAK4O,EAAEtN,EAAMX,OAAOqqB,MAAM,IAEtC1pB,EAAMgiF,iBAAmBw0C,EAASjuH,MACrC,MACGvI,EAAMgiF,iBAAmB15D,EAAQtoB,EAAMkB,WAGhD,IAGH7G,KAAKmnC,YAAYlZ,EAAQ,IAI/B,MAAM/tB,EAAMF,KAAKE,IAEjBF,KAAKoyB,SAAS,CACXC,QAASzF,EACT0F,UAAW,mBACXC,SAAU,KACP,MAAMwxD,EAAQrgF,GAAGxD,EAAI8J,MAEjB+5E,IACDA,EAAM5+E,UAEN4+E,EAAM3+E,eAAe,CAAEzD,KAAM,SAChC,IAIN3B,KAAKoyB,SAAS,CACXC,QAASzF,EACT0F,UAAW,kBACXC,SAAU,KACP,MAAMwxD,EAAQrgF,GAAGxD,EAAI8J,MAEjB+5E,IACDA,EAAMt8E,SAENs8E,EAAMr8E,iBACT,IAIN1H,KAAKoyB,SAAS,CACXC,QAASzF,EACT0F,UAAW,2BACXC,SAAU,CAACtT,EAAKtV,KACb,IAAKA,GAAM+N,SAAU,OAErB,MAAM1S,EAAS4nB,EAAGjB,WAElB,GAAK3mB,IAGFA,EAAOnG,KAAO8K,EAAK+N,UACnB1S,EAAO8B,QAAQC,GAAMA,EAAEZ,SAASO,aAAeiD,EAAK+N,WAChDxR,OAAS,GACd,CACC,MAAMgpB,EAAWtC,EAAGJ,YAEhB0C,GAAUlvB,KAAKmnC,YAAYjY,EAClC,KAKN,MAAM0F,EAAShI,EAAGd,mBAEd8I,GAED50B,KAAKoyB,SAAS,CACXC,QAASuC,EACTtC,UAAW,eACXC,SAAWtE,IACRjuB,KAAKo8H,kBAAkBnuG,EAAQ,GAG3C,CAEAiuG,sBACG,MAAMtvG,EAAK5sB,KAAK4rB,eAEhB,IAAKgB,EAAI,OAET,IAAKo1F,EAAiB97G,OAAQ,OAG9B,MAAMo8G,EAAqB,GAE3BN,EAAiBh+G,SAAS+C,IAEvBA,EAAE6B,OAAO/D,gBAAgB+nB,EAAGjB,WAAW7mB,aACvCiC,EAAE6B,OAAO0sB,WAAW1I,EAAGjB,WAAW7kB,UAElCC,EAAE6B,OAAOhE,SAASmC,EAAEowE,iBAIfnqE,MAAMC,QAAQq1G,EAAmBv7G,EAAEF,eACrCy7G,EAAmBv7G,EAAEF,YAAc,IAGtCy7G,EAAmBv7G,EAAEF,YAAYxC,KAAK,CACnCuyB,QAASlzB,GAAGqD,EAAErG,MAAM6hH,kBAEpBlyC,eAAgBtpE,EAAEspE,gBACnB,IAGL,MAAMnwE,EAAMF,KAAKE,IAGjBb,OAAOD,KAAKkjH,GAAoBt+G,SAASI,IAEtC,MAAMi4H,EAAY34H,GAAGxD,EAAI8J,MAAM60E,UAAU,CACtC33E,KAAM9C,IAITi4H,EAAU9uH,MAAM+0G,mBAAqBA,EAAmBl+G,GAExDi4H,EAAU73H,OAAO,YAAY,SAAU83H,EAAMC,EAAM52H,GAEhD,MAAM62H,EAAkB94H,GAAGxD,EAAI8J,MAAM60E,UAAU,CAC5C33E,KAAMvB,IAIT,IAAIL,GAAU,EA+Bd,OA5BAk3H,EAAgBjvH,MAAM+0G,mBAAmBt+G,SAAS4E,IAC/C,MAAM5D,EAAS4nB,EAAGjB,WACZhiB,EAAO3J,KAAKk0F,YAGZuuB,EAAU,CAAC,GAEhBz9G,EAAO8B,UAAY,IAAI9C,SAAS2B,IAC9B88G,EAAQ98G,EAAM9G,IAAM8K,EAAKhE,EAAMkB,WAAW,IAIzC8C,EAAK6F,OAAMizG,EAAqB,YAAI94G,EAAK6F,MAG3B5G,EAAOguB,QAAQ6rF,KAI9Bn9G,GAAU,EAEVk3H,EAAgBh4H,OACb,iBACAoE,EAAOynE,gBAEb,IAGI/qE,CACV,IAEA+2H,EAAU53H,SAAS,GAEzB,CAEAS,gCACG,MAAM8lD,EAAQ,GAkBd,OAhBChrD,KAAKmG,UAAUmwD,aAAe,IAAItyD,SAAS+rB,KACxCA,GAAM0sG,gBAAgBC,YAAYC,iBAAmB,IAAI34H,SACtD6T,IACE,GAAqB,UAAjBA,EAAG+kH,UAAuB,OAE9B,MAAMC,EAAa78H,KAAK8B,GAAGiqB,mBAAmBlU,EAAGnV,OAG9Cm6H,GAAY1wG,aACZ0wG,EAAWpyG,eAAeC,YAE1BsgC,EAAM3mD,KAAKw4H,EAAWjuG,WAAW,GAEzC,UAGSvf,QAAQkS,IAAIypC,EAC5B,CAEA9lD,aAAayE,GACV3J,KAAKixG,YAAY9rG,UAEjBnF,KAAK07H,SAAU,EAEf,MAGMlsB,EAHWxvG,KAAKU,KAGU8uG,uBAC1BA,EAAenlG,SAErB,MAAM05E,EAAQrgF,GAAG1D,KAAKE,IAAI8J,MACpB4iB,EAAK5sB,KAAK4rB,eAEhB,GAAIgB,EAAI,CAGY5sB,KAAKmG,SAETi8D,aACVx1C,EAAGR,UAAU,MAIhB,MAAM6B,EAAUrB,EAAGJ,YAEfu3D,GAAOn3D,EAAGoI,KAAK+uD,SAGb/jF,KAAKmnC,YAAYlZ,EAC1B,YAEWjuB,KAAKmnC,YAAYx9B,GAAQ,CAAC,GAGrC3J,KAAK4xG,eAED7tB,GAAOA,EAAM3M,eAEXp3E,KAAK88H,0BAEX98H,KAAKixG,YAAYxpG,QACpB,CAEAvC,kBAAkB+oB,GAEf,GAAIjuB,KAAKy7H,QAAS,OACbz7H,KAAKy7H,cArZhBv2H,eAAuB63H,GACpB,OAAO,IAAI1tH,SAAS/P,GAAYgV,WAAWhV,EAoZN,KAnZxC,CAmZgCuS,GAE1B,MAAMwzF,EAAWrlG,KAAKU,KAChBs8H,EAAe33B,EAAS5iC,iBAC1BvR,GACEA,aAAgByS,GAEfzS,aAAgBsqE,GACS,SAAvBtqE,EAAK/qD,SAASxE,MAChBuvD,aAAgBm+C,GAAyC,WAAvBn+C,EAAK/qD,SAASxE,OAIvD,GAAKssB,EAyDF+uG,EAAah5H,SAAS+C,IACnB,MAAMmqD,EAAOm0C,EAAS8K,eAAeppG,EAAElI,IAClCqyD,IAEDlxD,KAAK07H,SAASxqE,GAAM7mD,WAGxBtD,GAAGpB,SAASf,SAASlB,GAAGwtD,EAAKhxD,IAAI+8H,UAAWhvG,GAE5CijC,GAAMzsD,UAAUwpB,GAAQ,QAlEhB,CACX+uG,EAAah5H,SAAS+C,IACnB,MAAMpB,EAAQoB,EAAEpB,QAChB,IAAKA,EAAO,OAEZ,MAAMurD,EAAOm0C,EAAS8K,eAAeppG,EAAElI,IACvC,IAAKqyD,EAAM,OAGPlxD,KAAK07H,SAASxqE,GAAM7mD,WAGxB,MAAM6yH,EAAiB,CAAC,EAExBv3H,EAAM+gC,aAAaw2F,GACnBv3H,EAAMf,SAASlB,GAAGwtD,EAAKhxD,IAAI+8H,UAAWC,GAEtChsE,GAAMzsD,UAAUy4H,EAAe,IAGb73B,EAAS5iC,iBAC1BvR,GACEA,aAAgBh5B,KACdg5B,aAAgByS,KAGX3/D,SAAS+C,IACnB,MAAMpB,EAAQoB,EAAEpB,QAChB,IAAKA,EAAO,OAEZ,MAAMurD,EAAOm0C,EAAS8K,eAAeppG,EAAElI,IACvC,IAAKqyD,EAAM,OAEX,GAAc,WAAVnqD,EAAE3C,IAAkB,OAExB,MAAM20B,EAAUpzB,EAAMkB,WAGhBnB,EAAS,CAAC,EAEhBC,EAAM+gC,aAAahhC,GACnBhC,GAAGwtD,EAAKhxD,IAAI+8H,WAAWr4H,SAASc,EAAOqzB,IAAY,GAAG,IAIzD,MACMnE,EADK50B,KAAK4rB,eACEE,mBAElB,GAAI8I,EAAQ,CACT,MAAMuoG,EAAavoG,EAAOpI,YAE1BxsB,KAAKo8H,kBAAkBe,EAC1B,CACH,CAgBAn9H,KAAKy7H,QAAU,IAClB,CAEAW,kBAAkBnuG,GACf,MAAMrB,EAAK5sB,KAAK4rB,eAIhB,GADmBgB,EAAGJ,YACN,OAEhB,MAAM4wG,EAAgBxwG,EAAGZ,UACzB,IAAKoxG,EAAe,OAEpB,MAAM/3B,EAAWrlG,KAAKU,KAEhB28H,EAAmBh4B,EAAS5iC,iBAAiBvR,GAC1CA,aAAgBh5B,GAEfg5B,EAAKvrD,SAAS9G,KAAOu+H,EAAcv+H,KAC1C,GACH,IAAKw+H,EAAkB,OAEvB,MAAMC,EAAoBj4B,EAAS8K,eAAektB,EAAiBx+H,IACnE,IAAKy+H,EAAmB,OAExB,MAAMC,EAAqB75H,GAAG45H,EAAkBp9H,IAAI+8H,UAI9CO,EAAW,CAAC,EAElBA,EALkBJ,EAActsG,gBAKP7C,EAGzBmvG,EAAcx4H,SAAS24H,EAAoBC,EAC9C,CAEA92B,UAEA,CAEAkL,eACG,MAAMvM,EAAWrlG,KAAKU,KAEtB,IAAI+8H,EAAc,EACd5rB,EAAgB,GAEpBxM,EAAS59E,QAAQzjB,SAASgK,IACN,YAAbA,EAAK5J,KAAkC,cAAb4J,EAAK5J,KAC5B4J,EAAKrN,SAAS86D,IAAMgiE,IACrBA,EAAczvH,EAAKrN,SAAS86D,EAC5Bo2C,EAAgB7jG,EAAKnP,GACxB,IAGN,MAAMizG,EAAiBzM,EAAS8K,eAAe0B,GAE3CC,GAAkBpuG,GAAGouG,EAAe5xG,IAAI+8H,WACzCv5H,GAAGouG,EAAe5xG,IAAI+8H,UAAU99G,OACtC,CAEI8xF,iBACD,OAAOvtG,GAAG1D,KAAKE,IAAI8J,OAAO60E,UAAU,CACjCn+E,KAAM,SACNiB,KAAM,QAEZ,oBChjBH,MAAMsxG,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAAyC,EAGvDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,qBAAqBwlG,EAASxmG,KACxCQ,OAAOoyB,OACJ,CACG0qD,MAAO,GACPuhD,UAAW,IAEdx9H,IAINF,KAAK29H,iBAAmB,KACxB39H,KAAK49H,kBAAoB,IAC5B,CAEIj4H,YACD,OAAO3F,KAAKU,KAAKiF,OACpB,CAEAlF,KACG,MAAMkF,EAAQ3F,KAAK2F,MACb0/F,EAAWrlG,KAAKU,KAChBsJ,EAAOq7F,EAASxoC,sBAChB12D,EAAWnG,KAAKmG,SAEtB,IAAKR,EAGF,OAFA2C,QAAQ6G,MAAM,gCAAgChJ,EAASoE,WAEhDzK,MAAMW,GAAG,CACbC,KAAM,QACNS,MAAO,KAIb,MAAMilF,EAAyC,QAA3BzgF,EAAMQ,SAASa,SAC7B62H,EAAe7zH,GAAM7D,UAAY,CAAC,EAClCjG,EAAMF,KAAKE,IAEjB,IAAI+lG,EAAM,CACPpnG,GAAIqB,EAAI+8H,SACRv8H,KAAM0lF,EAAc,aAAe,QACnCl/E,KAAMvB,EAAMkB,WACZ02C,SACG53C,GAAOQ,UAAUo3C,UAAY73B,SAASvf,GAAUo3C,YAAa,EAGhEsrC,YAAaljF,EAAM9G,GACnBsD,GAAI,CACD+H,YAAa,CAACrL,EAAII,KACf,GACGA,EAAE4rD,OAAOqgC,UAAUl3C,SAAS,sBAC5B/0C,EAAE4rD,OAAO4gC,QAAQp/D,OAClB,CACC,MAAMmC,EAAQvvB,EAAE4rD,OAAO4gC,QAAQp/D,OAC/B,IAAKmC,EAAO,OACZxuB,KAAK89H,aAAatvG,EACrB,GAEHpsB,SAAWuH,IACR3J,KAAK+9H,UAAUp0H,EAAK,IAKzBk0H,EAAa7mE,YACdivC,EAAI9kG,MAAQwE,EAAMxE,MAClB8kG,EAAIpkG,WAAag8H,EAAah8H,WAC9BokG,EAAIjtC,cAAgB6kE,EAAa7kE,eAGpCh5D,KAAKg+H,kBAEL/3B,EAAIrlB,QAAU,CACX4F,QAAQ,EACRy3C,YAAW73C,EACX5kF,KAAM,CACHmI,KAAM,GACNg9D,UACG0+B,GAAUl/F,UAAUo8D,SACf,kEACA,IAHE,WAMbpgE,GAAI,CACDkI,OAAQ,KACL1E,EAAM0jF,sBAAsB3lF,GAAGxD,EAAI+8H,UAAWt3H,EAAOqE,EAAK,GAIhEpB,OAAQ,EAAGlG,SAASgT,IACjBhT,EAAM2V,cAAc65B,SAASx8B,EAAO2C,gBAG1C4tF,EAAI2iB,QAAU,CACXsV,YAAa,CAACr/H,EAAII,EAAGk/H,KAClB,GAAyB,IAArBh4H,EAAShB,QAAe,OAE5B,MAAM8oB,EAAU,CAAC,EACXmwG,EAAY16H,GAAGxD,EAAI+8H,UAEzB,GAAImB,EAAW,CACZ,MAAM97H,EAAO87H,EAAU7wH,MAEvB5H,EAAMggF,WAAW13D,EAAmB3rB,EACvC,IAIN,IAAI+7H,EAAQr+H,KAAK29H,kBAAkBl9H,GA8CnC,OA7CI49H,GAEDp4B,EAAI9kG,MAAQ,GACZ8kG,EAAIpkG,WAAa,EAGjBw8H,EAAMl8H,GAAK,CACR+H,YAAa,KAEVlK,KAAK29H,kBAAkB/U,QAAQ5+G,EAAK4hB,iBAE7B,IAIbq6E,EAAM,CACHq4B,QAASp+H,EAAI+8H,SACbr7H,KAAM,CACH,CACGV,KAAM,CACH,CACGR,KAAM,QACNS,MAAOwE,EAAMxE,MACbJ,MAAO88H,EAAah8H,WACpBT,MAAO,QAEVi9H,EACAp4B,MAMZA,EAAMnmG,MAAMW,GAAGwlG,KAEfA,EAAM,CACHq4B,QAASp+H,EAAI+8H,SACbr7H,KAAM,CAACqkG,IAGVA,EAAMnmG,MAAMW,GAAGwlG,UAERA,EAAIrkG,KAAK,GAAG/C,IAGfonG,CACV,CAEA/gG,gBAAgByE,GACb,MAAMzJ,EAAMF,KAAKE,IACXyF,EAAQ3F,KAAK2F,MACb0/F,EAAWrlG,KAAKU,KAEtB,IAAI69H,EACAvxH,MAAMC,QAAQtD,IACf40H,EAAiB,GACjB50H,EAAK3F,SAAS4pB,IACX2wG,EAAel6H,KAAKupB,EAAO/uB,IAAM+uB,EAAO,MAS3C2wG,EAAiB50H,EACE,iBAARA,IAER40H,EAAiB54H,EAAMqiF,eAAer+E,IAItC40H,EADCA,GAAgB1/H,GACA0/H,EAAe1/H,GAEf8K,GAMvB,MAAMy0H,EAAY16H,GAAGxD,EAAI+8H,UAgBzB,GAX0C,OAAtCj9H,MAAM2F,OAAOQ,UAAUc,cACxBjH,KAAKykF,aACC9+E,EAAMghF,sBACTy3C,EACA/4B,EAASnjG,QACTyD,EACA0/F,EAASxoC,uBAEZ78D,KAAK6kF,SAGJu5C,EAAW,CACZA,EAAUp7C,aAEV,MAAMw7C,EAAaD,EAAerwH,KAC7BqwH,EAAerwH,OACfqwH,EAELH,EAAUx5H,SAAS45H,GACnBJ,EAAUn7C,cACb,CACH,CAEA/9E,WAAWpD,EAAII,SACNpC,MAAMuD,KAAKvB,GAEjB,MAAMs8H,EAAY16H,GAAG1D,KAAKE,IAAI+8H,UAC1BmB,GAAW56H,MAAMC,OAAO26H,EAAW56H,MAAMG,aAE7C3D,KAAKg+H,iBACR,CAEAA,kBACG,MAAM34B,EAAWrlG,KAAKU,KAGhB+9H,EAAYp5B,GAAUl/F,UAAUq5D,SAClCi/D,GAAap5B,IAAarlG,KAAK29H,mBAChC39H,KAAK29H,iBAAmBt4B,EAASsI,YAAYxtG,UAC1CH,KAAK8B,GACL,GAAGujG,EAASxmG,MAAM4/H,KAErBz+H,KAAK29H,iBAAiB94H,gBAAgBwgG,EAASvgG,aAC/C9E,KAAK29H,iBAAiBt6H,KAAK,CACxBq7H,WAAY1+H,KAAK2+H,iBAAiB3pG,KAAKh1B,MACvC4+H,cAAe5+H,KAAK6+H,eAAe7pG,KAAKh1B,MACxCoiE,YAAapiE,KAAK8+H,oBAAoB9pG,KAAKh1B,SAIjD,MAAM++H,EAAa15B,GAAUl/F,UAAUo8D,SACnCw8D,GAAc15B,IAAarlG,KAAK49H,oBACjC59H,KAAK49H,kBAAoBv4B,EAASkN,aAAapyG,UAC5CH,KAAK8B,GACL,GAAGujG,EAASxmG,MAAMkgI,KAErB/+H,KAAK49H,kBAAkB/4H,gBAAgBwgG,EAASvgG,aAChD9E,KAAK49H,kBAAkBv6H,KAAK,CACzBq7H,WAAY1+H,KAAK2+H,iBAAiB3pG,KAAKh1B,MACvC4+H,cAAe5+H,KAAK6+H,eAAe7pG,KAAKh1B,MACxCoiE,YAAapiE,KAAK8+H,oBAAoB9pG,KAAKh1B,QAGpD,CAEAkF,uBAAuB6sH,GACpB,GAAgB,MAAZA,EAAkB,OACZ/kH,MAAMC,QAAQ8kH,KAAWA,EAAW,CAACA,IAE/C,MAAM7xH,EAAMF,KAAKE,IACXyF,EAAQ3F,KAAK2F,MAGby4H,EAAY16H,GAAGxD,EAAI+8H,UACzB,IAAKmB,EAAW,OAGhBp+H,KAAKykF,OACL9+E,EAAMq5H,aAAah/H,KAAKU,KAAKyF,SAAS0jB,kBACtC,MAAMlgB,QAAahE,EAAMghF,sBACtBy3C,EACAp+H,KAAKU,KAAKwB,QACVyD,EACA3F,KAAKU,KAAKm8D,uBAYb,GAVA78D,KAAK6kF,QAGLl7E,EAAK3F,SAASgK,IACXA,EAAKtL,MAAQsL,EAAKC,IAAI,IAGzBmwH,EAAUl8C,UAAUlnE,WACpBojH,EAAUl8C,UAAU19E,OAAO,OAAQmF,GAEH,SAA5BhE,EAAMQ,SAASa,SAAqB,CACrC,IAAIi4H,EAAgBb,EAAUtyH,WAC9BimH,EAAS/tH,SAASk7H,KAC0B,IAArCD,EAAc/xH,QAAQgyH,EAAMrgI,MAC7BogI,EAAgBA,EACX,GAAGA,KAAiBC,EAAMrgI,KAC1BqgI,EAAMrgI,GAAE,IAGnBu/H,EAAUx5H,SAASq6H,EACtB,MACGb,EAAUx5H,SAASmtH,EAAS,GAAGlzH,GAYrC,CAEAggI,iBAGG,OAFAn7H,GAAG1D,KAAKE,KAAKi8E,QAAQhM,WAEd,CACV,CAEA2uD,sBACG,OAAO,CACV,CAEAhzH,SAASmiB,GACN,OAAOjuB,KAAK2F,MAAMmG,SAASpI,GAAG1D,KAAKE,IAAI+8H,UAAWhvG,EACrD,CAEAkxG,SAASp7C,GACDA,IAELA,EAAM5+E,YACN4+E,EAAM3+E,eAAe,CAAEzD,KAAM,SAChC,CAEAgwG,UAAU5tB,GACFA,IAELA,EAAMt8E,WACNs8E,EAAMr8E,iBACT,CAEAo2H,aAAatvG,GACV,MAAMroB,EAAWnG,KAAKmG,SAEtB,IAAKA,EAASo8D,SAAU,OAExB,MAAMA,EAAWviE,KAAKU,KAAKoE,YAAYujB,WAAWliB,EAASo8D,UAEtDA,IAES7+D,GAAG1D,KAAKE,IAAI+8H,UAAU17C,cAGpCvhF,KAAK49H,kBAAkBhV,UAAUz0G,MAAK,KACnC,MAAMyY,EAAK21C,EAAS32C,eAEhBgB,IACDA,EAAGR,UAAUoC,GAEbxuB,KAAKo/H,kBACFp/H,KAAKo/H,mBACLxyG,EAAGzqB,GAAG,mBAAmB,KACtByqB,EAAGR,UAAUoC,EAAM,IAE5B,IAEN,CAEAtpB,eACG,MAAMhF,EAAMF,KAAKE,IACXk+H,EAAY16H,GAAGxD,EAAI+8H,UAEzB,IAAKmB,EAAW,OAEhB,MAAMz4H,EAAQ3F,KAAK2F,MAEnB,IAAKA,EAAO,OAEZ,MAAMrD,EAAO87H,EAAU7wH,MAEvB,IAAKjL,EAAM,OAEX,MAAM+8H,EAAQ37H,GAAGpB,GAEjB,IAAK+8H,EAAO,OAEZ,MAAMl5H,EAAWnG,KAAKmG,SACtB,IAAI0jB,EAAmB,CACpBC,KAAM,MACNzI,MAAO,IAoBV,GAjBIlb,GAAU0jB,kBAAkBxI,OAAOnb,SACpC2jB,EAAmB7pB,KAAK8B,GAAG2D,UACxBzF,KAAKU,KAAKyF,SAAS0jB,oBAMrBA,GAAkBxI,OAAOnb,QAC1BC,GAAUyjB,iBAAiBC,kBAAkBxI,OAAOnb,SAEpD2jB,EAAmB7pB,KAAK8B,GAAG2D,UACxBU,EAASyjB,gBAAgBC,oBAK1B1jB,GAAUm5H,sBAAwB,IAAIpyH,QAAQ,MAAQ,EAAG,CAC3D,MAAMxH,EAASS,EAASm5H,qBAAqB92G,MAAM,KAChD+2G,EAAe75H,EAAO,GACtB85H,EAAiB95H,EAAO,GAE3BmkB,EAAiBxI,MAAMhd,KAAK,CACzBD,IAAKo7H,EACLzvG,KAAM,uBACNrtB,MAAO68H,GAEb,CAEA,MAAME,EAA2B,CAACxuF,EAAYo3C,EAAQ,IAC5C,IACDp3C,EAAW5vB,MACVzY,QAAQ3J,GAAiB,yBAAXA,EAAE8wB,OAChBrxB,KAAKO,IACH,MAAMygI,EAAuBrgI,OAAOoyB,OAAO,CAAC,EAAGxyB,GAI/C,OAFAygI,EAAqBr3C,MAAQA,EAEtBq3C,CAAoB,KAElC53G,UACImpB,EAAW5vB,MACVzY,QAAQ3J,GAAMA,EAAE6qB,OAChBprB,KAAKO,GAAMwgI,EAAyBxgI,EAAGopF,EAAQ,MAInDgd,EAAWrlG,KAAKU,KAChBynF,EAAwBs3C,EAC3B51G,GACDnrB,KAAKO,IACJ,IAAK,MAAMmF,KAAOihG,EAAS3wF,OAAOy7F,eAAgB,CAC/C,KAEM9K,EAAS3wF,OAAOy7F,eAAe/rG,aAC/BpE,KAAKL,aAGR,SAEH,MAAMggI,EAAMj8H,GACT2hG,EAAS3wF,OAAOy7F,eAAe/rG,GAC3B3D,KACAmB,KAAKorB,MAAM4yG,GAAOA,EAAGtB,WAAUA,SAGtC,GAAIqB,GAAK39H,QAAQkF,OAASjI,EAAEyD,MAAO,CAGhCzD,EAAEwpF,YAAck3C,EAEhB,KACH,CACH,CAEA,MAAMt4B,EAAKrnG,KAAK8B,GACV6D,EAAQ0hG,EACV5vF,WAAWtR,EAASuR,UACpB9J,UAAUzH,EAASoE,SAEjBw+E,EADese,EAAG5vF,WAAW9R,EAAMQ,SAASO,YACjBkH,UAAU3O,EAAEmF,KAc7C,OATGnF,EAAE0pF,aAHDI,GAAa5iF,UAAUgB,WAGPkgG,EACb5vF,WAAWsxE,EAAY5iF,SAASO,YAChCI,QACG8B,GACEA,EAAO/J,KAAOkqF,EAAY5iF,SAASiB,YACnC2hF,EAAY5iF,SAASkB,cACzB,GAAGR,WACa,KAEjB5H,CAAC,IAkBX,GAfAomG,EAASnjG,QAAU,CAChBs9D,SAAUr5D,EAASq5D,SACnB5oC,QAAS/M,EAGTrc,KAAMrH,EAASiG,YAAcjG,EAASyjB,iBAAiBxd,WACvDq9C,SAA+B,IAArBtjD,EAAShB,QACnBoyD,YACIpxD,EAASo8D,UAAkC,SAAtBp8D,EAASo8D,UAClC4lB,yBAMCkd,EAASnjG,QAAQunD,SAAU,CAC5B,MAAMo2E,EAAe,GAErB13C,EAAsBnkF,SAASm8F,IAC5B,GAAIA,EAAG1X,aAAe0X,EAAG/7F,IAAK,CAC3B,MAAM07H,EAAqBp8H,GAAGy8F,EAAG1X,YAAYzmF,OAAOnD,IAEpD,IAAIkhI,EAAc,KAEbD,GAOYn6H,EAAMmG,SAASg0H,KAI1BC,EAAc,CACXlhI,GAAIshG,EAAG1X,YAAYzmF,OAAOnD,GAC1BsC,MAAO2+H,EAAmB99H,OAAOb,QAIvC2+H,EAAmB7wG,YAChB,YACA/pB,MAAOjG,IACc6gI,EAAmBh0H,YAGlCuzH,EAAM76H,OAAO,YAAY,GACzB66H,EAAM76H,OACH,cACAxE,KAAKmB,MAAM,iBAEdnB,KAAKykF,aACC9+E,EAAMghF,sBACT04C,EACAh6B,EAASnjG,QACTyD,EACA0/F,EAASxoC,uBAEZ78D,KAAK6kF,UAELw6C,EAAM76H,OAAO,YAAY,GACzB66H,EAAM76H,OACH,cACAxE,KAAKmB,MAAM,qCAAsC,CAC9C2+H,EAAmB99H,OAAOb,UAOnCk+H,EAAM56H,SAAS,IAElB,IAhDHs7H,EAAc,CACXlhI,GAAI,gBACJsC,MAAOnB,KAAKmB,MAAM,mBAmDrB4+H,GACAF,EAAaxlE,WAAWp7D,GAAMA,EAAEJ,KAAOkhI,EAAYlhI,KAAM,GAEzDghI,EAAax7H,KAAK07H,EACxB,KAGCF,EAAa35H,SAAWm5H,EAAMvzH,YAC/BuzH,EAAM76H,OAAO,YAAY,GACzB66H,EAAM76H,OACH,cACAxE,KAAKmB,MAAM,qCAAsC,CAC9C0+H,EAAanhI,KAAKO,GAAMA,EAAEkC,QAAO+M,KAAK,WAI5CmxH,EAAM76H,OAAO,YAAY,GACzB66H,EAAM76H,OAAO,cAAexE,KAAKmB,MAAM,iBAE7C,MACGk+H,EAAM76H,OAAO,cAAe,IAC5B66H,EAAM76H,OAAO,YAAY,GAG5B66H,EAAM56H,UAENzE,KAAKykF,aACC9+E,EAAMghF,sBAETy3C,EACA/4B,EAASnjG,QACTyD,EACA0/F,EAASxoC,uBAEZ78D,KAAK6kF,QAGL,MAAMuL,EAAS,GAAGzqF,EAAMvB,OAAOuB,EAAMkB,cAAclB,EAAM9G,MAAMwmG,EAAS3wF,OAAO7V,KAC/EyD,EAAKqnF,aAAa,UAAWyG,GAG7BpwF,KAAK+9H,UAAUK,EAAUtyH,WAC5B,CAEA24E,OACG,MAAM25C,EAAY16H,GAAG1D,KAAKE,IAAI+8H,UAE9BmB,GAAWj5H,UACXi5H,GAAWh5H,eAAe,CAAEzD,KAAM,QACrC,CAEAkjF,QACG,MAAMu5C,EAAY16H,GAAG1D,KAAKE,IAAI+8H,UAE9BmB,GAAW32H,SACX22H,GAAW12H,gBACd,oBCznBH,MAAMurG,EAA0B,EAAQ,OAClC+jB,EAAe,EAAQ,OACvBgJ,EAAoB,EAAQ,OAIlCzgI,EAAOC,QAAU,cAAwC,EAGtDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,oBAAoBwlG,EAASxmG,KAAMqB,EAChE,CAEI+/H,gBACD,MAAM56B,EAAWrlG,KAAKU,KAEhBm9H,EADOx4B,EAASxoC,uBACK12D,UAAY,CAAC,EAClCA,EAAWk/F,EAASl/F,UAAY,CAAC,EAEvC,IAAI2wE,EAAW+mD,EAAah8H,WAM5B,OAJIsE,EAASq5D,SAAUsX,GAAY,GAC1B+mD,EAAa7mE,WAA4C,QAA/B6mE,EAAa7kE,gBAC7C8d,EAAW,GAEPA,CACV,CAEAr2E,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QAEjBk4H,EADOx4B,EAASxoC,uBACK12D,UAAY,CAAC,EAClCA,EAAWR,GAAOQ,UAAYk/F,EAASl/F,UAAY,CAAC,EAEpD+5H,EACHv6H,GAAOQ,UAAUo3C,UAAYv9C,KAAKmG,SAASo3C,SACtC,iBACA,GAER,IAAI84E,EAAgB,GAEhBwH,EAAa7mE,YAEXq/D,EADgC,QAA/BwH,EAAa7kE,cACE,uNAAuNknE,qBAEvN,uOAAuOA,sBAG7P,IAAIp/H,EAAS,GACTC,EAAQf,KAAKigI,UAEbt6H,aAAiBqxH,GACd7wH,EAASo8C,UACyB,QAA/Bs7E,EAAa7kE,eACdl4D,EAAS4kB,SAASvf,EAASq8C,cAnDnB,GAoDR1hD,GAAU,IAEVA,EAAS4kB,SAASvf,EAASq8C,cAtDnB,GAyDX1hD,EADuC,QAA/B+8H,EAAa7kE,cACZmnE,IAzDE,GA+Ddp/H,EACGoF,EAASk8C,UAAYl8C,EAASm8C,WAAan8C,EAASm8C,WAAa,GAC5Du7E,EAAa7mE,WAA4C,QAA/B6mE,EAAa7kE,gBAC/Cl4D,EAlEc,IAoEjB,IAAI6lE,EAAW,2BAA2Bk3D,EAAa7kE,kBACtB,OAA9B6kE,EAAa7kE,cAAyB,GAAKq9D,oBAE1CxjH,QAAQ,WAAYgrH,EAAah8H,YACjCgR,QAAQ,WAAYlN,EAAMxE,OAC1B0R,QACE,cACAlN,GACKuxE,aAAa,CACZn2E,MAAOA,EACPD,OAAQA,EACR2oD,UAAU,IAEZkd,SAAS,CAAC,IAAM,IAY1B,OATyB,GAArBxgE,EAASk8C,WACVskB,EAAWA,EAAS9zD,QACjB,yDACA,gEACGgrH,EAAah8H,WACb,QAIF/B,MAAMW,GAAG,CACbC,KAAM,YACNmB,WAAY,EACZu+H,SAAU,EACVC,SAAU,EACVp/H,IAAK,kBAILO,KAAM,CACHd,KAAM,IAAIs/H,EAAkBhgI,KAAK8B,GAAGy6B,MAAMn4B,IAC1CnD,IAAK,iBACLS,YAAY,EACZilE,SAAUA,EACV7lE,OAAQA,EACR8nH,QAAS,CACNsV,YAAa,CAACrnG,EAAK53B,EAAGk/H,KACnB,GAAyB,IAArBh4H,EAAShB,QAAe,OAE5B,IAAI8oB,EAAU,CAAC,EAEf,MAAMuxC,EACHx/D,MAAM68D,yBACN78D,KAAKU,MAAMm8D,wBAEd,GAAI2C,EAAU,CACX,MAAM/rC,EAAK+rC,EAAS5zC,eAChB6H,IAAIxF,EAAUwF,EAAGjH,aAAe,CAAC,EACxC,CAGA,IAAIlqB,EAAOoB,GAAGy6H,GAAK7yH,gBAAgBiC,MACnC5H,GAAOggF,WACJ13D,EACAjuB,KAAKsgI,OACLh+H,EACAtC,KAAKE,IAAI+8H,SACTpmG,EACF,KAKhB,CAEAxsB,SACG,MAAMnK,EAAMF,KAAKE,IACXk+H,EAAY16H,GAAGxD,EAAI+8H,UAEzB,IAAKmB,EAAW,OAEhB,MAAM/4B,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QAEpBrD,EAAO87H,EAAU7wH,MAGd6iF,EAAS,GAAGiV,EAASjhG,OAAOuB,EAAMvB,OAAOuB,EAAMkB,cAAcw+F,EAASxmG,MAAMwmG,EAAS3wF,OAAO7V,KAClGyD,EAAKqnF,aAAa,UAAWyG,GAE7B,MAAMluF,EAAU,CACb0qF,OAAQ1sF,EAAI+8H,SACZxzE,SAAwC,IAA9B47C,EAASl/F,SAAShB,SAG3BQ,aAAiBqxH,IAClB90H,EAAQpB,OAAS6E,EAAMQ,SAASo8C,WAC3B78B,SAAS/f,EAAMQ,SAASq8C,cAhKf,GAkKdtgD,EAAQnB,MAAQ4E,EAAMQ,SAASk8C,UAC1B38B,SAAS/f,EAAMQ,SAASm8C,aACxB,GAGR38C,EAAMiyE,cArBO,CAAC,EAqBe53E,KAAK8B,GAAGy6B,KAAMj6B,EAAMJ,EACpD,CAEA4J,SAASmiB,GACN,MAAMtoB,EAAQ3F,KAAKU,KAAKiF,QAClBy4H,EAAY16H,GAAG1D,KAAKE,IAAI+8H,UAE9B,OAAOt3H,EAAMmG,SAASsyH,EAAWnwG,EACpC,oBCnLH,MAAMglF,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAA4C,EAG1DG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,wBAAwBwlG,EAASxmG,KAAMqB,EACpE,CAEAO,KACG,MAAM+iF,EAAOxjF,KACP2F,EAAQ3F,KAAKU,KAAKiF,QAElBsgG,EAAM,CACTvlG,KAAM,aACNkgF,QAAS,CACNp/E,KAAM,CACHd,KAC6C,MAA1CV,KAAK8B,GAAG2Q,SAASpE,SAASyB,aACrB,eACA,WACR3N,GAAI,CACDo+H,kBAAmB,SAAU5/G,GAC1B3gB,KAAKsL,gBAAgBk1H,eAAe,CACjC99H,MAAOie,GAEb,EACA8/G,WAAY,SAAU9/G,GACnB3gB,KAAKsL,gBAAgBk1H,eAAe,CACjC99H,MAAOie,GAEb,EACA+/G,YAAa,SAAU//G,GACpB3gB,KAAKsL,gBAAgBk1H,eAAe,CACjC99H,MAAOie,GAEb,IAGNxe,GAAI,CACDkI,OAAQ,WACL,MAAM4D,EAAOjO,KAAK2gI,iBACZh7H,EAAQ69E,EAAK9iF,KAAKiF,QACxB,IAAKsI,IAAStI,EAAO,OAAO,EAE5B,MAAMH,EAAO,CAAC,EACdA,EAAKG,EAAMkB,YAAcoH,EACzB,MAAM0S,EAAO6iE,EAAK13E,SAAStG,GAETxF,KAAK2K,gBAAgB,GAC7B/F,SAAS+b,EACtB,KAKT,OAAKhb,GAG8B,IAA/BA,EAAMQ,UAAUu3C,aAAkBuoD,EAAItkG,KAAO,QAG/B,aAAdgE,EAAMvB,KAAqD,IAA/BuB,EAAMQ,UAAUm5C,aAC7C2mD,EAAI9iC,YAAa,GAGpB8iC,EAAIx8C,UAAW,GAGXw8C,EAAIvjG,OAAWujG,EAAIvjG,iBAAiB+d,OACrCwlF,EAAIvjG,MAAQ,IAAI+d,KAAKwlF,EAAIvjG,QAGd,OAAViD,GAAmBuT,OAAO4wE,cAAamc,EAAIzlF,OAAS7a,EAAMq5C,aAEvDl/C,MAAMW,GAAGwlG,IAnBGA,CAoBtB,CAEAn6F,SAASmiB,GACN,MAAMtoB,EAAQ3F,KAAKU,KAAKiF,QAClBsI,EAAOggB,EAAQtoB,EAAMkB,YAC3B,IAAKlB,IAAUsI,EAAM,OAAO,KAE5B,MAAM0S,EAAO3gB,KAAK8B,GAAG6Y,MAAM8F,KAAKmgH,UAAUj7H,EAAMq5C,YAAnCh/C,CAAgDiO,GAK7D,MAH8C,MAA1CjO,KAAK8B,GAAG2Q,SAASpE,SAASyB,cAC3B6Q,EAAKkgH,YAAYlgH,EAAKw5B,cAAgB,KAElCx5B,CACV,oBCzFH,MAAMkkF,EAAkB,WAExBtlG,EAAOC,QAAU,cAAsCqlG,EACpDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,kBAAkBwlG,EAASxmG,KACrCQ,OAAOoyB,OAAO,CAAEwrG,SAAU,IAAM/8H,GAEtC,CAEAO,GAAGqgI,EAAsB,CAAC,GAEvB,MAAMz7B,EAAWrlG,KAAKU,KAChBsJ,EAAOq7F,EAASxoC,sBACnBl3D,EAAQ0/F,EAAS1/F,WAAa,KAE3BQ,EAAW6D,GAAM7D,UAAY,CAAC,EAC9B46H,EAAc,CACjBliI,GAAImB,KAAKE,IAAI+8H,SACbjkE,cAAe7yD,EAAS6yD,cACxBn3D,WAAYsE,EAAStE,WACrBV,MANQ,IASX,GAAIwE,EAAO,CACRo7H,EAAY75H,KAAOvB,EAAMkB,WAGzB,MAAM8C,EAAO,CAAC,EAEdhE,EAAM+gC,aAAa/8B,GAEfA,EAAKhE,EAAMkB,cAAak6H,EAAYr+H,MAAQiH,EAAKhE,EAAMkB,aAEvDV,EAAS6wD,YAAW+pE,EAAY5/H,MAAQwE,EAAMxE,QAE9CwE,EAAMQ,SAASo3C,UAAY8nD,EAASl/F,UAAUo3C,YAC/CwjF,EAAYxjF,SAAW,GAES,IAA/B8nD,EAASl/F,UAAUhB,UAAe47H,EAAY52F,UAAW,GAG7D42F,EAAY5+H,GAAK,CACdy8E,gBACG,GAAI5+E,KAAKkiF,QAAS,CACf,MAAM/F,EAAQn8E,KAAKyiF,WAEnB,IAAKtG,EAAO,OAEZn8E,KAAKkiF,UAAUv4E,KAAK8/E,MAAMC,IACvB,IAAKA,EAAQ,OAGb,MAAMpnF,EAAO65E,EAAM5uE,MAAMknE,cACtB,iBAAiBiV,GAAQ7qF,IAAM,IAC3BwV,WACAjB,WAAW,IAAK,YAGlB9Q,GAELA,EAAKqnF,aACF,UACA,GAAGhkF,EAAMvB,eAAeslF,EAAO7qF,MAAM8G,EAAM9G,MACxCmL,GAAMnL,IAAM,OAEjB,GAEP,CAEAmB,KAAKgsG,iBAAiBriB,eACnB,UACA,GAAGhkF,EAAMvB,OAAOuB,EAAMkB,cAAclB,EAAM9G,MACvCmL,GAAMnL,IAAM,OAGrB,GAMHkiI,EAAY5/C,SAAW,CAACxrE,EAAKhM,EAAMovB,KAChC,MAAMzxB,EAAYtH,KAAK8B,GAAGic,WAAWzW,YAIrC,OAFA3B,EAAMwqB,YAAYxmB,EAAMrC,GAEjBA,EAAUoW,MAAM,CAE7B,CAEA,MAAMuoF,EAAMnmG,MAAMW,GAAG,CAClBpB,OAAOoyB,OAAO,CAAC,EAAGsvG,EAAaD,KAKlC,cAFO76B,EAAItkG,KAEJskG,CACV,oBCnGH,MAAMgN,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAAsCyzG,EACpDtzG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,kBAAkBwlG,EAASxmG,KAAMqB,GACjC,UAAtBF,KAAKmG,SAASxE,OACf3B,KAAKghI,UAAYhhI,KAAK8B,GAAGuzB,iBACtB,GAAGgwE,EAASxmG,mBACZ,CACG09E,cAAc,EACdz7E,OAAQ,IACRY,YAAY,EACZsvC,gBAAgB,IAI5B,CAEAiwF,eAAev1E,GACZ,GACGA,GAAUvlD,UAAUyiF,aACpBl9B,GAAUhrD,MAAMgU,QAAQy7F,eACzB,CACC,IAAIvnB,EAAc,GAClB,IAAK,MAAOxkF,EAAK1B,KAAUrD,OAAO6hI,QAC/Bx1E,EAAShrD,KAAKgU,OAAOy7F,gBAEjBztG,EAAMyD,SAASoE,SAAWmhD,EAASvlD,SAASyiF,cAC7CA,EAAclmF,GAIpB,OAAIkmF,GAAa1oF,KAAK+8H,SACZr0C,EAAY1oF,IAAI+8H,SAEhB,EAEb,CACG,MAAO,EAEb,CAEIkE,uBAED,IAAI76G,EAAUtmB,KAAK8B,GAAGwkB,UAGlB86G,EAAe,GAKnB,OAJA96G,EAAQtiB,SAASwT,IACd4pH,EAAa/8H,KAAK,CAAExF,GAAI2Y,EAAI3Y,GAAIsC,MAAOqW,EAAIrW,OAAQ,IAG/CigI,CACV,CAEAC,cAAc37H,GACX,GAAIA,EAAQ,CACT,IAAI47H,EAAY,GAChB57H,EAAO1B,SAASwT,IACb,IACI1Q,EADS9G,KAAK8B,GAAG2V,WAAWD,GACZ1Q,SAChBA,EAAOZ,QACRY,EAAO9C,SAAS+C,IACbu6H,EAAUj9H,KAAK0C,EAAE,GAEvB,IAEH/G,KAAKghI,UAAU1rG,WAAWgsG,GACtB59H,GAAG1D,KAAKE,IAAI+8H,UAAUj7H,OAAOU,OAC9B1C,KAAKghI,UAAUp8H,SAASlB,GAAG1D,KAAKE,IAAI+8H,UAAUj7H,OAAOU,MAC3D,MACG1C,KAAKghI,UAAU1rG,WAAW,IACtB5xB,GAAG1D,KAAKE,IAAI+8H,UAAUj7H,OAAOU,OAC9B1C,KAAKghI,UAAUp8H,SAASlB,GAAG1D,KAAKE,IAAI+8H,UAAUj7H,OAAOU,MAE9D,CAEAoJ,WACG,OAAO9L,KAAKghI,UAAUl1H,UACzB,CAEAlH,SAASokF,GACNtlF,GAAG1D,KAAKE,IAAI+8H,UAAUj7H,OAAOU,MAAQsmF,CACxC,CAEAvoF,KACG,MAAMwlG,EAAM,CAAC,EAEb,OACGjmG,KAAKmG,SAASxE,MACd3B,KAAKU,KAAKyF,SAASxE,MACnB3B,KAAKU,KAAKf,YAAY8mC,gBAAgB9kC,MAEtC,IAAK,SACFskG,EAAIvlG,KAAO,WACXulG,EAAI97D,UAAW,EACf87D,EAAInlG,OAAS,IACbmlG,EAAIzlF,OAAS,CACVvJ,MAAO,SAAUsqH,GACd,IACGA,EAAS7tH,KAAKuD,MAAMsqH,EAGvB,CAFE,MAAOr5H,GAET,CACA,OAAOq5H,CACV,EACA3xD,KAAM,SAAUj8D,GACb,IACGA,EAAYD,KAAKC,UAAUA,EAG9B,CAFE,MAAOzL,GAET,CACA,OAAOyL,CACV,GAEH,MACH,IAAK,eACFsyF,EAAIvlG,KAAO,aACXulG,EAAI9mB,YAAcn/E,KAAKmB,MAAM,qCAC7B8kG,EAAIzf,QAAS,EACbyf,EAAIu7B,cAAe,EACnBv7B,EAAIrlB,QAAU,CACXq9C,WAAW,EACXz8H,KAAM,CACHmI,KAAM3J,KAAKmhI,iBACXx6D,SAAUnjE,MAAMmjE,SAAS,aAG/B,MACH,IAAK,SACFs/B,EAAIvlG,KAAO,YACXulG,EAAIhlG,IAAM,kBACVglG,EAAIzkG,KAAOxB,KAAKghI,UAAUvgI,GAIhC,OAAOX,MAAMW,GAAGwlG,EACnB,CAEA5iG,OAIA,CAEAgH,SAEG,GADYrK,KAAKS,KACW,UAAxBT,MAAMmG,UAAUxE,KAAkB,CACnC,IAAIinF,EAAc5oF,KAAKihI,eAAejhI,MACtC,IAAK0D,GAAGklF,GAAc,OACtBllF,GAAGklF,GAAazW,YAAY,YAC5BzuE,GAAGklF,GAAa35D,YAAY,YAAavpB,IACtC1F,KAAKqhI,cAAc37H,EAAO,IAE7B1F,KAAKghI,UAAU39H,KAAK,CAAE2tC,gBAAgB,IACtChxC,KAAKghI,UAAU7+H,GAAG,WAAYwT,IAC3B3V,KAAK4E,SAAS+Q,EAAI,IAEjBjS,GAAG1D,KAAKE,IAAI+8H,UAAUj7H,OAAOU,MAC9B1C,KAAKghI,UAAUp8H,SAASlB,GAAG1D,KAAKE,IAAI+8H,UAAUj7H,OAAOU,OAErD1C,KAAKghI,UAAUp8H,SAAS,GAE9B,CACH,oBCpKH,MAAMquG,EAA0B,EAAQ,OAClCwuB,EAAkB,EAAQ,OAEhCliI,EAAOC,QAAU,cAAwC,EAGtDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,oBAAoBwlG,EAASxmG,KAAMqB,GAE7DF,KAAK0hI,oBAAsB,IAC9B,CAEIC,yBACD,OAAQ3hI,KAAK0hI,oBACV1hI,KAAK0hI,qBAAuB,IAAID,EAAgBzhI,KAAK8B,GAAGy6B,MAAMn4B,GACpE,CAEA3D,KACG,OAAOX,MAAMW,GAAG,CACbC,KAAMV,KAAKmG,SAASs9D,UAAY,UAAYzjE,KAAK2hI,mBACjDhgI,KAAM,SACNw/E,SAAWxrE,IAASw4B,MAAY,EAANx4B,IAEhC,oBCvBH,MAAMs9F,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAA0C,EAGxDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,sBAAsBwlG,EAASxmG,KACzCQ,OAAOoyB,OACJ,CACGk1C,SAAU,IAEbzmE,GAGT,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QAEjBsgG,EAAM,CACTvlG,KAAM,YACNmB,WAAY,EACZu+H,SAAU,EACVC,SAAU,EACVz9F,UAAU,EACV3hC,IAAK,oBAKLO,KAAM,CACH3C,GAAImB,KAAKE,IAAIymE,SACbjmE,KAAM,QACNgB,YAAY,EACZT,IAAK,CAAE,mBAAoB,QAC3BE,MAAO,KAIPgF,EAAWk/F,EAASxoC,sBAAsB12D,UAAY,CAAC,EAQ7D,OAN0B,GAAtBA,EAAS6wD,WAA+C,OAA1B7wD,EAAS6yD,cACxCitC,EAAIzkG,KAAKV,OAAS,GACV6E,EAAMQ,SAASo8C,UACvB0jD,EAAIzkG,KAAKV,OAAS4kB,SAAS/f,EAAMQ,SAASq8C,cAAgB,GACtDyjD,EAAIzkG,KAAKV,OAAS,GAElBhB,MAAMW,GAAGwlG,EACnB,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAMs8H,EAAY16H,GAAG1D,KAAKE,IAAI+8H,UAC9B,IAAKmB,EAAW,OAEhB,MAAMr6C,EAAQq6C,EAAU78C,cAClBtzD,EAAU81D,GAAOmQ,aAAe,CAAC,EAEvCl0F,KAAKyE,QAAQwpB,GACb81D,GAAO90D,YAAY,YAAY,CAAC/jB,EAAMC,KACnC,MAAM8iB,EAAU81D,GAAOmQ,aAAe,CAAC,EAEvCl0F,KAAKyE,QAAQwpB,EAAQ,GAE3B,CAEA5jB,SACG,MAAM+zH,EAAY16H,GAAG1D,KAAKE,IAAI+8H,UAC9B,IAAKmB,EAAW,OAEhB,MACMnwG,EADQmwG,EAAU78C,eACD2S,aAAe,CAAC,EAEvCl0F,KAAKyE,QAAQwpB,EAChB,CAEAniB,SAASmiB,GACN,MAAMtoB,EAAQ3F,KAAKU,KAAKiF,QACxB,OAAKA,EAEEsoB,EAAQtoB,EAAMkB,YAFF,IAGtB,CAEApC,QAAQwpB,GACL,MAAMo3E,EAAWrlG,KAAKU,KAChBsJ,EAAOq7F,EAASxoC,sBACnBl3D,EAAQ0/F,EAAS1/F,QAEdk4H,EAAe7zH,EAAK7D,UAAY,CAAC,EAEvC,IAAIkwH,EAAgB,GAEhBwH,EAAa7mE,YAEXq/D,EADgC,QAA/BwH,EAAa7kE,cACE,gLAAgLrzD,EAAMxE,gBAEtL,wBAAwB08H,EAAah8H,0KAA0K8D,EAAMxE,iBAG3O,IAAI21E,EAAW+mD,EAAah8H,WAExB7B,KAAKmG,SAASq5D,SAAUsX,GAAY,GAC/B+mD,EAAa7mE,WAA4C,QAA/B6mE,EAAa7kE,gBAC7C8d,EAAW,GAEd,MAAMnQ,EACH,8BAA8B0vD,oBAAgCxjH,QAC3D,cACAlN,EACIuxE,aAAa,CACXn2E,MAAO+1E,EACPrtB,UAAU,IAEZkd,SAAS14C,IAInBvqB,GAAG1D,KAAKE,IAAIymE,WAAWi7D,QAAQj7D,EAClC,oBC1HH,MAAMssC,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAAyD,EAGvEG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,4BAA4BwlG,EAASxmG,KAAMqB,EACxE,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QACpBQ,EAAWnG,KAAKmG,SACbjE,EAAU,GAEG,SAAfyD,GAAOvB,IAAgBlC,EAAQmC,QAAQsB,EAAMw0D,YACxCx0D,GACNzD,EAAQmC,QAASsB,EAAMQ,SAASjE,SAAWiE,EAASjE,SAAW,IAElE,MAAMhC,EAAMF,KAAKE,IACX+lG,EAAM,CACTpnG,GAAIqB,EAAI+8H,SACRv8H,KAAMyF,EAASxE,MAAQ0jG,EAAS1lG,YAAY8mC,gBAAgB9kC,KAC5DO,QAASA,EAAQxD,KAAK8yC,IACZ,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,KACXi1C,IAAK1R,EAAI0R,SAKlB,OAAQ+iD,EAAIvlG,MACT,IAAK,aACFulG,EAAI47B,SAAU,EACd57B,EAAIhlG,IAAM,yBACVglG,EAAI67B,YAAep8H,IAChB,MAAMq8H,EAAkB,GAClB3D,EAAY16H,GAAGxD,EAAI+8H,WAAav5H,GAAGuiG,EAAIpnG,IAE7C6G,EAAO1B,SAAS2R,IACbosH,EAAgB19H,KAAK+5H,EAAUl8C,UAAUx1D,QAAQ/W,GAAK,IAGzD,IAAInQ,EAAOu8H,EAEPp8H,EAAM2pF,qBACP9pF,EAAOG,EAAM2pF,mBAAmB3pF,EAAOo8H,IAE1C,MAAM1xC,EAAQ,GAkBd,OAhBA7qF,EAAKxB,SAAS2R,IACX,IAAIs5E,EAAiB,GACjBC,EAAY,GAEZvpF,EAAMQ,SAAS28C,WAAantC,EAAIutC,MACjC+rC,EAAiB,iBACjBC,EAAY,eAAev5E,EAAIutC,QAGlC,MAAMj1C,EAAO0H,EAAI1H,KAAO0H,EAAI1H,KAAO0H,EAAIjT,MAEvC2tF,EAAMhsF,KACH,uCAAuC4qF,aAA0BC,gBAAwBv5E,EAAI9W,aAAaoP,sGAC5G,IAGGoiF,EAAMniF,KAAK,GAAG,EAGxB,MAEH,IAAK,WAEF+3F,EAAI/jG,QAAQmC,KAAK,CACdxF,GAAI,OACJ6D,MAAO1C,KAAKmB,MAAM,YAM3B,OAAOrB,MAAMW,GAAGwlG,EACnB,CAEAn6F,SAASmiB,GACN,MAAMtoB,EAAQ3F,KAAKU,KAAKiF,QACrBy4H,EAAY16H,GAAG1D,KAAKE,IAAI+8H,UAE3B,OAAOt3H,EAAMmG,SAASsyH,EAAWnwG,EACpC,oBC1FH,MAAMglF,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAAuD,EAGrEG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,0BAA0BwlG,EAASxmG,KAAMqB,EACtE,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QACpBQ,EAAWk/F,EAASl/F,SACjBjE,EAAU,GAEG,SAAfyD,GAAOvB,IAAgBlC,EAAQmC,QAAQsB,EAAMw0D,YACxCx0D,EACNzD,EAAQmC,QAASsB,EAAMQ,SAASjE,SAAWiE,EAASjE,SAAW,IAC7DA,EAAQmC,QAAS8B,EAASjE,SAAW,IAE1C,MAAM+jG,EAAM,CACTvlG,KAAMyF,EAASxE,MAAQ0jG,EAAS1lG,YAAY8mC,gBAAgB9kC,MAkD/D,OA/CIgE,GAAOQ,SAAS28C,WACjBmjD,EAAIhlG,IAAM,kBACVglG,EAAI/jG,QAAU,CACXxB,KAAM,UACNc,KAAM,CACHd,KAAM,OACNiJ,KAAMzH,EAAQxD,KAAK8yC,IACT,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,MAAQujC,EAAI9uC,MACvBwgD,IAAKv9C,EAAMQ,SAAS28C,UAAYtR,EAAI0R,IAAM,OAGhDyjB,SAAU,SAAUjkE,GACjB,MAAM2tF,EAAQ,GAEd,IAAIpB,EAAiB,GACjBC,EAAY,GAWhB,OATIxsF,EAAMwgD,MACP+rC,EAAiB,iBACjBC,EAAY,eAAexsF,EAAMwgD,QAGpCmtC,EAAMhsF,KACH,uCAAuC4qF,aAA0BC,gBAAwBxsF,EAAM7D,aAAa6D,EAAMA,uBAG9G2tF,EAAMniF,KAAK,GACrB,KAIN+3F,EAAI/jG,QAAUA,EAAQxD,KAAK8yC,IACjB,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,MAAQujC,EAAI9uC,UAKf,UAAbujG,EAAIvlG,MAAoBulG,EAAI/jG,QAAQgE,OAAS,GAC9C+/F,EAAI/jG,QAAQmC,KAAK,CACdxF,GAAI,OACJ6D,MAAO1C,KAAKmB,MAAM,YAGjBrB,MAAMW,GAAGwlG,EACnB,oBCxEH,MAAMgN,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAAyC,EAGvDG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,qBAAqBwlG,EAASxmG,KAAMqB,EACjE,CAEAO,KACG,MAAMwlG,EAAM,CAAC,EAEb,OACGjmG,KAAKmG,SAASxE,MACd3B,KAAKU,KAAKyF,SAASxE,MACnB3B,KAAKU,KAAKf,YAAY8mC,gBAAgB9kC,MAEtC,IAAK,SACFskG,EAAIvlG,KAAO,OACX,MACH,IAAK,WACFulG,EAAIvlG,KAAO,WACXulG,EAAInlG,OAAS,IACb,MACH,IAAK,OACFmlG,EAAIvlG,KAAO,YACXulG,EAAInlG,OAAS,IACbmlG,EAAIhlG,IAAM,eACVglG,EAAIzkG,KAAO,CACRd,KAAM,iBACNgC,MAAO,GACP67G,IAAK,2BACLv8G,OAAQ,CACL8f,QAAS,OACTkgH,QAAS,cACTvnB,QACG,mJAMf,OAAO36G,MAAMW,GAAGwlG,EACnB,CAEA57F,SACG,MAAMlE,EAAWnG,KAAKU,KAAKyF,UAAY,CAAC,EAElC46H,EADM/gI,KAAKS,KACOmB,KAAK,GAC7B,IAAIw8H,EAAY16H,GAAGq9H,EAAYliI,IAI/B,GAAsB,SAAlBsH,EAASxE,MAAmBy8H,EAAW,CAExCA,EAAYp+H,KAAK8B,GAAG6Y,MAAMla,GAAGsgI,EAAa3C,GAG1C,MAAM/4B,EAAWrlG,KAAKU,KAEtB09H,EACIzzH,gBAAgB,GAChBs3H,WAAU,GACV9tH,MAAM9O,IACJ,MAAM+qF,EAAS,GAAGiV,EAASjhG,YAAY28H,EAAY75H,QAChDm+F,EAASxmG,IAAM,MACdwmG,EAAS3wF,QAAQ7V,IAAM,KAE3BwG,EAAO68H,qBAAqBv4C,aAAa,UAAWyG,EAAO,GAEpE,CACH,oBCvEH,MAAM6iB,EAA0B,EAAQ,OAExC1zG,EAAOC,QAAU,cAAsCyzG,EACpDtzG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,kBAAkBwlG,EAASxmG,KAAMqB,EAC9D,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAChBiF,EAAQ0/F,EAAS1/F,QAEjBsgG,EAAM,CAAC,EAGb,IAAKtgG,EAAO,OAAO7F,MAAMW,GAAGwlG,GAE5B,MAAM43B,EAAex4B,EAASxoC,sBAAsB12D,UAAY,CAAC,EAE3D+5H,EACyB,IAA5Bv6H,EAAMQ,SAASo3C,SAAiB,iBAAmB,GAEtD,IAAI84E,EAAgB,GAEhBwH,EAAa7mE,YAEXq/D,EADgC,QAA/BwH,EAAa7kE,cACE,+KAA+KknE,qBAE/K,mMAAmMA,sBAGzN,IAAIppD,EAAW+mD,EAAah8H,WAExB7B,KAAKmG,SAASq5D,WAAUsX,GAAY,IAExC,MAAMnQ,EAAW,GAAG0vD,cAChBxjH,QAAQ,WAAYgrH,EAAah8H,YACjCgR,QAAQ,WAAYlN,EAAMxE,OAC1B0R,QACE,cACAlN,EAAMuxE,aAAa,CAChBn2E,MAAO+1E,IACPnQ,UAuBT,OApBAs/B,EAAIvlG,KAAO,WACXulG,EAAIhlG,IAAM,eACVglG,EAAInlG,OAC4B,IAA7B6E,EAAMQ,SAASo8C,UACV78B,SAAS/f,EAAMQ,SAASq8C,aACxB,GACRyjD,EAAIvkG,YAAa,EAEjBukG,EAAIt/B,SAAW,4BAA4BA,UAE3Cs/B,EAAI2iB,QAAU,CACXsV,YAAa,CAACr/H,EAAII,EAAGk/H,KAClB,MAAMlwG,EAAU,CAAC,EACd3rB,EAAOoB,GAAG1D,KAAKE,IAAI+8H,UAAU1vH,MAEhC0gB,EAAQtoB,EAAMkB,YAAc7G,KAAK8L,WACjCnG,EAAMggF,WAAW13D,EAASjuB,KAAK8B,GAAGy6B,KAAMj6B,EAAMtC,KAAK,GAIlDF,MAAMW,GAAGwlG,EACnB,CAEAn6F,SAASmiB,GACN,IAAIzoB,EAAO9B,GAAG1D,KAAKE,IAAI+8H,UAAU/oC,YAKjC,OAFIlnF,MAAMC,QAAQzH,IAAyB,IAAhBA,EAAKU,SAAcV,EAAO,IAE9CA,CACV,oBC1EH,MAAMq/F,EAAkB,WAExBtlG,EAAOC,QAAU,cAAmCqlG,EACjDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,eAAewlG,EAASxmG,KAClCQ,OAAOoyB,OAAO,CAAE6oC,MAAO,IAAMp6D,GAEnC,CAEAO,KACG,MAAM0F,EAAWnG,KAAKmG,SAChB8/F,EAAMnmG,MAAMW,GAAG,CAClB,CACGS,KAAM,CACH,CACGrC,GAAImB,KAAKE,IAAIo6D,MACb55D,KAAM,WACNimE,SAAU,GACV7lE,OAAQqF,EAASrF,OACjBC,MAAOoF,EAASpF,OAEnB,CAAC,MAOV,cAFOklG,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAMqgI,EAASz+H,GAAG1D,KAAKE,IAAIo6D,OAC3B,IAAK6nE,EAAQ,OAEb,MAAMh8H,EAAWnG,KAAKmG,SAElBA,EAAS46C,SACVohF,EAAO39H,OACJ,WACA,mBAAmB2B,EAAS46C,qBAAqB56C,EAASrF,kBAAkBqF,EAASpF,WAEtFohI,EAAO39H,OAAO,WAAY,IAE/B29H,EAAO19H,SACV,mBCjDH,MAAMogG,EAAkB,WAClBu9B,EAAkB,EAAQ,OAEhC7iI,EAAOC,QAAU,cAAoCqlG,EAClDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,gBAAgBwlG,EAASxmG,KACnCQ,OAAOoyB,OACJ,CACG4wG,WAAY,GAEZC,OAAQ,GACRC,QAAS,GACTC,cAAe,IAElBtiI,IAINF,KAAKyiI,SAAW,IAAIL,EACjBpiI,KACAA,KAAKE,IAAIsiI,cACTxiI,KAAKmG,SAASogE,YAGjBvmE,KAAK0iI,qBAAuB,KAC5B1iI,KAAK2iI,uBAAyB,KAC9B3iI,KAAK4iI,kBAAoB,KAEzB5iI,KAAK6mE,aAAew+B,EAASx+B,aAE7B7mE,KAAK6iI,oBAAsB,KAC3B7iI,KAAK8iI,gBAAkB,KACvB9iI,KAAK+iI,aAAe,KACpB/iI,KAAKgjI,aAAe,IACvB,CAEI15E,qBACD,OAAQtpD,KAAK8iI,gBACV9iI,KAAK8iI,iBACL9iI,KAAK8B,GAAG2c,MAAM/e,eAAeujI,WAAW,gBAC9C,CAEIC,kBACD,OAAQljI,KAAK+iI,aACV/iI,KAAK+iI,cAAgB/iI,KAAK8B,GAAG2c,MAAM/e,eAAeujI,WAAW,OACnE,CAEIxyE,kBACD,OAAQzwD,KAAKgjI,aACVhjI,KAAKgjI,cAAgBhjI,KAAK8B,GAAG2c,MAAM/e,eAAeujI,WAAW,OACnE,CAEAxiI,KACG,MAAMP,EAAMF,KAAKE,IACXsjF,EAAOxjF,KACbA,KAAK+lG,SAAW/lG,KAAKU,KAAKslG,eAAe7lG,YAEzC,MAAM8lG,EAAMnmG,MAAMW,GAAG,CAClB,CACG5B,GAAIqB,EAAImiI,WACRnhI,KAAM,CACH,CACGrC,GAAIqB,EAAIoiI,OACR5hI,KAAM,SACNQ,KAAM,GACNsP,SAAU,CACP9P,KAAM,OAGNimE,SAAU,qCACV5lE,MAAO,IACPoB,GAAI,CACDghI,eAAgB,WAEb,IAAK3/C,EAAKq/C,oBAAqB,OAE/B,MAAMO,EAASpjI,KAAKqjI,eAAc,GAC7BD,GAEL5/C,EAAK8/C,YAAY9/C,EAAKq/C,oBAAqBO,EAC9C,IAGN/9H,QAAQ,EACR2J,MAAO,GACPu0H,KAAM,GACN55H,KAAM,GACNxH,GAAI,CACDqhI,kBAAmB,CAACn3G,EAAQtiB,KACzB/J,KAAKk2G,uBAAuB9pF,UAAUC,GACtCrsB,KAAKoP,KAAK,SAAUid,GAGpB,MAAMkrC,EAAWv3D,KAAKmG,SAASoxD,SAC3BA,GACDv3D,KAAK+lG,SAAShB,WAAWxtC,EAAUlrC,GAEtC,MAAMgrC,EAAcr3D,KAAKmG,SAASkxD,YAC9BA,GACDr3D,KAAK+lG,SAAShB,WAAW1tC,EAAahrC,EAAO,EAEnDo3G,oBAAqB,CAACj1G,EAAOzX,KAC1B/W,KAAK0jI,aAAal1G,EAAOzX,EAAO,EAEnC4sH,cAAgBn1G,IAEbxuB,KAAK6iI,oBAAsBr0G,CAAK,IAIzC,CACG3vB,GAAIqB,EAAIqiI,QACR7hI,KAAM,UACNO,IAAK,UACLF,MAAO,GACPu7E,QAAQ,GAEXt8E,KAAKyiI,SAAShiI,SAOvB,cAFOwlG,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAMwlG,EAAUtnG,KAAK8B,GAAG6Y,MAEpB3a,KAAK4jI,KAAKt8B,EAAQ7jG,OAAOzD,KAAK4jI,IAAKt8B,EAAQ3jG,aAE/C3D,KAAKyiI,SAASp/H,KAAKvB,GACnB9B,KAAKyiI,SAAStgI,GAAG,OAAQ2jH,IACtB9lH,KAAK+xH,SAASjM,EAAQ,IAEzB9lH,KAAKyiI,SAAStgI,GAAG,UAAW0jH,IACzB7lH,KAAK+xH,SAASlM,EAAW,IAG5B,IAAIj5F,EAAK5sB,KAAKU,KAAKkrB,eACfgB,GAAI5sB,KAAK42G,mBAAmBhqF,GAEhC5sB,KAAK+lG,SAAS1iG,KAAK,CAChB3C,KAAMV,KAAKU,KACXkrB,eAAgBgB,IAGnB5sB,KAAK2E,MACR,CAEIi/H,UACD,OAAQ5jI,KAAK6jI,IAAM7jI,KAAK6jI,KAAOngI,GAAG1D,KAAKE,IAAIoiI,OAC9C,CAEAwB,qBACG,MAAO,CACJxmH,MAAO,CAEJ,CACGlS,KAAM,gBACN9J,MAAQktB,IACLxuB,KAAK+jI,WAAWv1G,EAAM,IAK/Bw1G,eAAiBxsH,GAEXxX,KAAK4iI,mBACLprH,EAAIxX,KAAK4iI,kBAAkB/7H,YAEpB7G,KAAK4iI,kBAAkBpiH,OAAOhJ,GAC5B,8CAIfysH,aAAet6H,GAEP3J,KAAK6mE,aAAa54D,KAIhBjO,KAAK6mE,aAAaqG,YAAYvjE,GAH3B3J,KAAKsK,eAAe68B,YAAYx9B,GAMnD,CAOAjF,OACGhB,GAAG1D,KAAKE,IAAImiI,aAAa39H,MAC5B,CAMAQ,aACG,MAAMhF,EAAMF,KAAKE,IAEjBwD,GAAGxD,EAAImiI,aAAa19H,OAEpB3E,KAAKyiI,SAAS/9H,OAEdhB,GAAGxD,EAAIqiI,UAAU79H,OAEjB,IAAI4F,EAAgBtK,KAAKsK,cAIzB,GAHKA,IACFA,EAAgBtK,KAAK4rB,gBAAgBD,aAEnCrhB,EAAe,OAIpB,MAAMo4H,EAAuBp4H,EAAcsD,UACxC5N,KAAKmG,SAASqgE,uBAEjB,IAAKk8D,EAAsB,OAE3B1iI,KAAK0iI,qBAAuBA,EAE5B,IAAIwB,EAAoB,GAExB,MAAMvB,EAAyBr4H,EAAcsD,UAC1C5N,KAAKmG,SAASsgE,yBAGjBzmE,KAAK2iI,uBAAyBA,EAG3BA,GACAA,aAAkC3iI,KAAKspD,iBAGvC46E,QAA0BvB,EAAuBj+C,cAGpD,MAAMy/C,GAAmBzB,EAAqBv8H,SAASjE,SAAW,IAAIxD,KAClE8yC,IAEE,GAAIkxF,GAAwBC,EAAwB,CACjD,IAAI/gI,EAAO,GAKRwiI,EAAiB,GAiDpB,OA9CIzB,aAAkC3iI,KAAKywD,YAExC2zE,GACGzB,EAAuBx8H,SAASjE,SAAW,IAC5CxD,KAAKM,GAAMA,IACL2jI,aAAkC3iI,KAAKkjI,YAC/CkB,EAAiBzB,EAAuBxoE,WAAWz7D,KAC/CugF,IACS,CACJpgF,GAAIogF,EAAEpgF,GACNoP,KAAMgxE,EAAEhxE,MAAQgxE,EAAEv8E,UAInBigI,aAAkC3iI,KAAKspD,iBAC/C86E,EAAiBF,EAAkBxlI,KAAI,EAAGG,KAAIoP,WAAW,CACtDpP,KACAoP,YAGNm2H,EAAe//H,KAAK,CACjBxF,GAAI,KACJoP,KAAMjO,KAAKmB,MAAM,WAGpBijI,EAAepgI,SAAS2R,IACrB,MAAM0uH,EAAY,CAAC,EAEnBA,EAAU3B,EAAqB77H,YAAc2qC,EAAI3yC,GACjDwlI,EAAU1B,EAAuB97H,YAAc8O,EAAI9W,GAGnD+C,EAAKyC,KAAK,CACPsiE,SAAUhxD,EAAI1H,KACdnN,OAAQ,GACRG,IAAK,oBAIRW,EAAKyC,KAAK,CACP3D,KAAM,aACNqW,OAAQstH,EACR1iI,KAAM3B,KAAK8jI,sBACZ,IAGE,CACJzgG,OAAQmO,EAAIvjC,KACZzM,KAAM,CACHs8E,OAAQ,EACRl8E,KAAMA,GAGf,CAEK,GAAI8gI,EAAsB,CAC5B,MAAM2B,EAAY,CAAC,EAInB,OAFAA,EAAU3B,EAAqB77H,YAAc2qC,EAAI3yC,GAE1C,CACJwkC,OAAQmO,EAAIvjC,KACZzM,KAAM,CACHd,KAAM,aACNqW,OAAQstH,EACR1iI,KAAM3B,KAAK8jI,sBAGpB,KAIAz8B,EAAKrnG,KAAK8B,GACAulG,EAAG1sF,MAIXla,GAAG0jI,EAAiBzgI,GAAGxD,EAAIoiI,SACnC5+H,GAAGxD,EAAIoiI,QAAQgC,cAGf,MAAM1B,EAAoBt4H,EAAcsD,UACrC5N,KAAKmG,SAASugE,YAKjB,GAFA1mE,KAAK4iI,kBAAoBA,EAErBA,EAAmB,CACpB,MAAM2B,EAAY7gI,GAAGxD,EAAIoiI,QAAQkC,cAIjC,GAFAD,EAAUvpH,WAEN4nH,aAA6B5iI,KAAKkjI,YAAa,CAChD,MAAMl0H,EAAQq4F,EAAG50F,QAAQjC,WAAW9R,KAAKugF,IAC/B,CACJpgF,GAAIogF,EAAE1uE,SACN7N,MAAOu8E,EAAE1uE,aAIfg0H,EAAUttH,MAAMjI,EACnB,MAAO,GAAI4zH,aAA6B5iI,KAAKspD,eAAgB,CAC1D,MAAMpnD,QAAgB0gI,EAAkBl+C,aAExC,IACG6/C,EAAUttH,MACP/U,EAAQxD,KAAK8yC,IACH,CACJ3yC,GAAI2yC,EAAI3yC,GACR6D,MAAO8uC,EAAIvjC,SASvB,CALE,MAAOhP,GAGNqJ,QAAQ6G,MAAMlQ,GACdqJ,QAAQC,KAAKrG,EAChB,CACH,CACH,CACH,CAEAuiF,OACGzkF,KAAK4jI,KAAKx+H,eAAe,CAAEzD,KAAM,QACpC,CAEAkjF,QACG7kF,KAAK4jI,KAAKl8H,gBACb,CAEA3C,WAAWC,GACRlF,MAAMiF,WAAWC,GAEjBhF,KAAK6mE,aAAa9hE,WAAWC,GAC7BhF,KAAKyiI,SAAS19H,WAAWC,EAC5B,CAOA4xG,mBAAmBhrF,GAChB9rB,MAAM82G,mBAAmBhrF,GAEzB,MAAM2E,EAAKvwB,KAAKk2G,uBAAyBtqF,EAEzC,GAAI2E,EAAJ,CACGA,EAAGyE,KAAKh1B,KAAK4jI,KAEb,MAAMpsH,EAAM+Y,EAAG5E,WAEXnU,GAAKxX,KAAK+E,WAAWyS,EAG5B,MAEAxX,KAAK4jI,IAAI3uG,QACZ,CAEA/vB,mBAAmBspB,EAAOzX,GACvB,IAAK/W,KAAK0iI,qBAAsB,OAGhC1iI,KAAKykF,OAEL,IAAIkyB,EAAQ,CAAC,EAGT5/F,aAAkB1X,OAAQs3G,EAAQ5/F,EAEjC4/F,EAAM32G,KAAK0iI,qBAAqB77H,YAAckQ,EAGnD,IAAI0tH,GAAc,EAElB,IAAK,MAAMrgI,KAAOuyG,EACVA,EAAMvyG,KACRuyG,EAAMvyG,GAAO,GAIbqgI,GAAc,GAGpB,IAQG,SAPMzkI,KAAKsK,eAAevC,QAAQouE,OAAO3nD,EAAOmoF,IAEhD32G,KAAK6kF,QAED4/C,GAAazkI,KAAK2E,OAGlB3E,KAAKyiI,SAASp+C,YAAa,CAC5B,MAAM16E,EAAOjG,GAAG1D,KAAKE,IAAIoiI,QAAQ51G,QAAQ8B,GAEzCxuB,KAAKyiI,SAASh+H,QAAQkF,EACzB,CAOH,CANE,MAAOzB,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,kDACTsf,QACAmoF,SAEN,CACH,CAEAzxG,kBAAkBspB,EAAO7Y,GACtB,IAAK3V,KAAK4iI,kBAAmB,OAG7B5iI,KAAKykF,OAEL,MAAMkyB,EAAQ,CAAC,EAEfA,EAAM32G,KAAK4iI,kBAAkB/7H,YAAc8O,EAE3C,IACG,MAAMigH,QAAmB51H,KAAKsK,eAAevC,QAAQouE,OAClD3nD,EACAmoF,IAOH,GAHA32G,KAAK4jI,KAAK3yG,WAAWzC,EAAOonG,GAGxB51H,KAAKyiI,SAASp+C,YAAa,CAC5B,MAAM16E,EAAO3J,KAAK4jI,IAAIl3G,QAAQ8B,GAE9BxuB,KAAKyiI,SAASh+H,QAAQkF,EACzB,CAEA3J,KAAK6kF,OASR,CARE,MAAO38E,GACNlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3BgH,QAAS,iDACTsf,QACA7Y,QAGH3V,KAAK6kF,OACR,CACH,CAEAktC,SAASpoH,GAEFA,EAAK9K,IAAMmB,KAAK4jI,IAAI92G,OAAOnjB,EAAK9K,IACjCmB,KAAK4jI,IAAI3yG,WAAWtnB,EAAK9K,GAAI8K,GAE3B3J,KAAK4jI,IAAIxiH,IAAIzX,EACrB,CAEAs5G,WACOjjH,KAAK4jI,KACN5jI,KAAK4jI,IAAIc,UAAU36H,IAChBA,GAAMk5G,YAAY,GAE3B,CAEA0hB,UACG3kI,KAAKijH,WAGLjjH,KAAKyiI,SAAS99H,OACdjB,GAAG1D,KAAKE,IAAIqiI,SAAS59H,MACxB,CAEAO,iBAAiBspB,GACd,MAAM64E,EAAKrnG,KAAK8B,GACVwlG,EAAUD,EAAG1sF,MAEnB2sF,EAAQ/1F,QAAQ,CACbR,MAAO/Q,KAAKmB,MAAM,eAClB8M,KAAMjO,KAAKmB,MAAM,oCACjBqQ,SAAUtM,MAAOyI,IACd,GAAKA,EAAL,CAEA3N,KAAKykF,OAEL,WAC0BzkF,KAAKsK,eAAevC,QAAQgO,OAAOyY,KAE7C+wF,QAAU,EACpBv/G,KAAK4jI,IAAI7oH,OAAOyT,GAEhB84E,EAAQx2F,MAAM,CACX7C,KAAMjO,KAAKmB,MACR,qDASZ,CALE,MAAO+G,GACNm/F,EAAGl/F,OAAOC,UAAUF,EAAK,CACtB+I,QAAS,kDACTud,SAEN,CAEAxuB,KAAK6kF,OAvBc,CAuBP,GAGrB,CAWA+/C,UAAU1iI,GACPlC,KAAK0iI,qBAAuBxgI,EAAQ2iI,iBACpC7kI,KAAK2iI,uBAAyBzgI,EAAQ4iI,mBACtC9kI,KAAK4iI,kBAAoB1gI,EAAQwkE,UACpC,oBC/jBH,MAAMm+B,EAAkB,WAExBtlG,EAAOC,QAAU,cAAmCqlG,EACjDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,eAAewlG,EAASxmG,KAAMqB,EAC3D,CAEAO,KACG,MAAM4kG,EAAWrlG,KAAKU,KAEhBulG,EAAMnmG,MAAMW,GAAG,CAClBT,KAAK+kI,aAAa,CACfrkI,KAAM,QAENS,MAAOkkG,EAASp3F,MAAQ,IACxB7M,MAAOpB,KAAKmG,SAASq7D,UACrB7/D,KAAM,CACHb,OAAQ,YAOjB,cAFOmlG,EAAItkG,KAEJskG,CACV,CASA8+B,aAAatkI,GAGV,OAAQilB,SAAS1lB,KAAKmG,SAASqa,SAE5B,KAAK,EACF/f,EAAGQ,IAAM,sCACT,MAGH,KAAK,EACFR,EAAGQ,IAAM,uCACT,MAGH,KAAK,EACFR,EAAGQ,IAAM,4CAIf,OAAOR,CACV,oBCvDH,MAAMokG,EAAkB,WAExBtlG,EAAOC,QAAU,cAAoCqlG,EAClDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MAAMulG,EAAUxlG,GAAU,gBAAgBwlG,EAASxmG,KAAMqB,GAEzD,MAAMiwG,EAAiBnwG,KAAKmwG,gBAAkB,CAAC,EAE/C9K,EAAS59E,QAAQzjB,SAASiP,IACvBk9F,EAAel9F,EAAEpU,IAAMoU,EAAE9S,WAAW,IAGvCH,KAAKmwG,eAAiBA,CACzB,CAEA1vG,KACG,MAAM0vG,EAAiBnwG,KAAKmwG,eACtB+hB,EAAe7yH,OAAOD,KAAK+wG,GAC7BzxG,KAAKsmI,GAAQ70B,EAAe60B,GAAKvkI,OACjCmI,QAAQnI,GAAOA,IAEQ,GAAvByxH,EAAahsH,SACdgsH,EAAa7tH,KAAK,CAAC,GACnB6tH,EAAa7tH,KAAK,CACf3D,KAAM,QACNS,MAAOnB,KAAKmB,MAAM,gBAErB+wH,EAAa7tH,KAAK,CAAC,IAGtB,MAAM4hG,EAAMnmG,MAAMW,GAAG,CAClB,CACGC,KAAM,SACNQ,KAAMgxH,KAMZ,cAFOjsB,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,EAAI46D,SACN58D,MAAMuD,KAAKvB,GAEjB,MAAMujG,EAAWrlG,KAAKU,KAGtB2kG,EAAS59E,QAAQzjB,SAASiP,IACLjT,KAAKmwG,eAAel9F,EAAEpU,KAG7BwE,KAAKvB,EAAI46D,GAGpB2oC,EAASjzE,SAAS,CACfC,QAASpf,EACTqf,UAAW,aACXC,SAAW+1C,IACR+8B,EAASN,WAAWz8B,EAAO,GAE/B,GAER,CAEAj+D,SAEGrK,KAAKU,KAAK+mB,QAAQzjB,SAASiP,IACNjT,KAAKmwG,eAAel9F,EAAEpU,KAC7BwL,QAAQ,GAEzB,mBCvEH,MAAMw6F,EAAkB,WAExBtlG,EAAOC,QAAU,cAAkCqlG,EAChDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,cAAcwlG,EAASxmG,KACjCQ,OAAOoyB,OAAO,CAAE1nB,KAAM,IAAM7J,GAElC,CAEAO,KACG,MAAM0F,EAAWnG,KAAKmG,SAChB8+H,EAAU,CACbpmI,GAAImB,KAAKE,IAAI6J,KACbrJ,KAAM,WACNiB,KAAM,CACHZ,MAAO,IACPD,OAAQ,IAEX6lE,SAAW34D,IACR,MAAMrI,EAAQ3F,KAAKU,KAAKiF,QAExB,OAAKA,EAEEA,EAAM6a,OAAOxS,GAFD,EAEM,GAKP,IAApB7H,EAASrF,OAAcmkI,EAAQnkI,OAASqF,EAASrF,OAChDmkI,EAAQC,YAAa,EAE1B,MAAMj/B,EAAMnmG,MAAMW,GAAG,CAACwkI,IAItB,cAFOh/B,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM8qB,EAAK5sB,KAAK4rB,eAEXgB,GAGLA,EAAGoI,KAAKtxB,GAAG1D,KAAKE,IAAI6J,MAEvB,oBClDH,MAAM86F,EAAkB,WAExBtlG,EAAOC,QAAU,cAAkCqlG,EAChDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,cAAcwlG,EAASxmG,KACjCQ,OAAOoyB,OACJ,CACG2iF,KAAM,IAETl0G,GAGT,CAEAO,KACG,MAAM0F,EAAWnG,KAAKmG,SAChB8/F,EAAMnmG,MAAMW,GAAG,CAClBilB,SAASvf,EAASwhE,eAAiB3nE,KAAK+9G,YAAc/9G,KAAKmlI,WAK9D,cAFOl/B,EAAItkG,KAEJskG,CACV,CAEAk/B,SACG,MAAM9/B,EAAWrlG,KAAKU,KAChByF,EAAWnG,KAAKmG,SAChBypF,EAAkByV,EAAS1lG,YAAY8mC,gBACvCxlC,EAAM,GAAGkF,EAASshE,aAAemoB,EAAgBnoB,eACpDthE,EAASuhE,eAAiBkoB,EAAgBloB,iBAG7C,MAAO,CACJ7oE,GAAImB,KAAKE,IAAIk0G,KACb1zG,KAAM,OACNm4G,YAAY,EACZx3G,WAAW,EACX+jI,SAAU,OACVnkI,IAAKA,EACL2jF,OAAQz+E,EAASqhE,aAAeooB,EAAgBpoB,YAChDrlE,GAAI,CACDkjI,gBAAkBxmI,IACfmB,KAAK4oH,QAAQ/pH,EAAG,EAEnB+/E,cAAe,KACZ5+E,KAAKslI,eAAe,GAG1B3jI,KAAM,CACH4jI,SAAS,GAGlB,CAEAxnB,YACG,MAAM53G,EAAWnG,KAAKmG,SAChBk/F,EAAWrlG,KAAKU,KAChBkvF,EAAkByV,EAAS1lG,YAAY8mC,gBACvC++F,EAAUxlI,KAAKmlI,SAErB,IAAIM,EAAQ,GACRC,GAAe,EAGnB,MAAM39D,EAAes9B,EAASt9B,cAAgB5hE,EAAS4hE,aACjDE,EAAiBo9B,EAASp9B,gBAAkB9hE,EAAS8hE,eACrDD,EAAgBq9B,EAASr9B,eAAiB7hE,EAAS6hE,cAEzD,GAA8B,SAA1B7hE,EAAS2hE,aACV49D,GAAe,EACfD,EAAMphI,KAAKmhI,QACP,GAAIz9D,GAAc7hE,OAAQ,CAC9B,MAAMnF,EAA8B,GAAtBgnE,EAAa7hE,OAE3Bu/H,EAAMphI,KAAK,CACR3D,KAAM,QACNS,MAAO4mE,EACP3mE,MAAO,OACPL,MAAOA,GAEb,MACG0kI,EAAMphI,KAAK,CACR3D,KAAM,QACNS,MAAO,GACPE,WAAW,IAGjB,GAA+B,WAA3B8E,GAAU2hE,aACX49D,GAAe,EAEfD,EAAMphI,KAAKmhI,QACP,GAAIv9D,GAAgB/hE,OAAQ,CAChC,MAAMnF,EAA8B,GAAtBgnE,EAAa7hE,OAE3Bu/H,EAAMphI,KACH,CAAC,EACD,CACG3D,KAAM,QACNS,MAAO8mE,EACP7mE,MAAO,SACPL,MAAOA,GAEV,CAAC,EAEP,MACG0kI,EAAMphI,KAAK,CACR3D,KAAM,QACNS,MAAO,GACPE,WAAW,IAGjB,GAA+B,UAA3B8E,GAAU2hE,aACX49D,GAAe,EAEfD,EAAMphI,KAAKmhI,QACP,GAAIx9D,GAAe9hE,OAAQ,CAC/B,MAAMnF,EAA8B,GAAtBgnE,EAAa7hE,OAE3Bu/H,EAAMphI,KAAK,CACR3D,KAAM,QACNS,MAAO6mE,EACP5mE,MAAO,QACPL,MAAOA,GAEb,MACG0kI,EAAMphI,KAAK,CACR3D,KAAM,QACNS,MAAO,GACPE,WAAW,IAKjB,OAFqB,IAAjBqkI,IAAwBD,EAAQ,CAACD,IAE9B,CACJ9kI,KAAM,UACNO,IAAKkF,EAAS0hE,WAAa+nB,EAAgB/nB,UAC3CtlE,QAAS4D,EAASyhE,YACbliD,SAASvf,EAASyhE,aAClBgoB,EAAgBhoB,YACrB5+D,SAAUy8H,EAEhB,CAEAvgI,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM00G,EAAQ9yG,GAAG1D,KAAKE,IAAIk0G,MACpB/O,EAAWrlG,KAAKU,KAEtB,GAAI81G,EAAO,CACR,MAAMrwG,EAAWnG,KAAKmG,SAEtBk/F,EAAS98B,iBAAiBiuC,GAEtBrwG,EAAS+hE,OAAOhiE,SACjBm/F,EAAS78B,eAAeguC,EAAOrwG,EAAS+hE,OAExCsuC,EAAM/xG,UAEZ,CACH,CAEAmkH,QAAQv8F,GACL,MACMs5G,EADQjiI,GAAG1D,KAAKE,IAAIk0G,MACNrrC,YAAY18C,GAC1Bg5E,EAAWrlG,KAAKU,KAGtB,GAAmB,QAAfilI,EAAMhkI,KAAgB,CACvB0jG,EAASN,WAAW4gC,EAAMr9D,QAE1B,MAAMs9D,EAAevgC,EAASvgG,YAAY+gB,OACtC7D,GAAMA,EAAEnjB,KAAO8mI,EAAMr9D,SACtB,GACD,GAEF,IAAKs9D,EAAc,OAEnB,MAAMv8D,EAAUu8D,EAAan+G,OAAOxU,GAAMA,EAAEpU,KAAO8mI,EAAM9mI,KAAI,GAAM,GAEnE,IAAKwqE,EAAS,OAEd,MAAM+5C,EAAM/5C,EAAQ30D,OAEpB,IAAK0uG,EAAK,OAEVpjH,KAAK6lI,aAAaziB,GAGlB,MAAM0iB,EAASvT,aAAY,KACpB7uH,GAAG2lE,EAAQxqE,KAAO6E,GAAG2lE,EAAQxqE,IAAIwlF,YAClCmuC,cAAcsT,GAKjB1iB,EAAIh0G,KAAK,YAAai6D,EAAQxqE,GAAG,GACjC,IAEN,MAEKwmG,EAASN,WAAW14E,EAC5B,CAEAw5G,aAAa7pG,GACV,IAAKA,EAAQtnB,OAAQ,OAAO,EAE5B,MAAMqxH,EAAa/pG,EAAQtnB,OAE3B,IAAKqxH,GAAYrxH,OAAQ,OAAO,EAEhCqxH,EAAWrxH,OAAOtF,KAAK,YAAa22H,EAAWlnI,IAC/CmB,KAAK6lI,aAAaE,EAAWrxH,OAChC,CAEA4wH,gBACG,MAAM9uB,EAAQ9yG,GAAG1D,KAAKE,IAAIk0G,MAErBoC,GAELA,EAAM7sG,KAAK8/E,MAAMz7E,IACd,MAAM1L,EAAOk0G,EAAM9+B,YAAY1pE,EAAKnP,IAEpC,IAAKyD,EAAM,OAGX,MAAM0jI,EAAWhmI,KAAK8B,GAAG2iB,eAAezW,EAAKnP,IAE7CyD,EAAKqnF,aACF,UACA,aAAaq8C,GAAU9+H,QAAQ8G,EAAKnP,MAAMmB,KAAKU,KAAK7B,KACtD,GAEP,oBC5OH,MAAMonI,EAAQ,EAAQ,OAChBphC,EAAkB,WAKxBtlG,EAAOC,QAAU,cAAyCqlG,EACvDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,qBAAqBwlG,EAASxmG,KACxCQ,OAAOoyB,OACJ,CACGy0G,aAAc,GACdC,WAAY,GACZ/mE,SAAU,GACVgnE,eAAgB,GAChBC,kBAAmB,GACnBC,sBAAuB,GACvBC,eAAgB,GAChBtI,UAAW,GACXuI,YAAa,GACbxsB,OAAQ,IAEX95G,GAGT,CAEAO,KACG,MAAMP,EAAMF,KAAKE,IACXsjF,EAAOxjF,KA6Jb,OA5JYF,MAAMW,GAAG,CAClB,CACGmB,KAAM,CACH,CACGV,KAAM,CACH,CACGrC,GAAIqB,EAAIgmI,aACRxlI,KAAM,WACNwG,KAAM,UACNyiC,KAAMzpC,EAAIimI,WACVhlI,MAAOnB,KAAKmB,MAAM,qBAClBk9G,WAAY,IACZt9G,MAAO,IACP0nH,OAAQ,kBACRz9B,UAAU,EACV09B,UAAU,EACV/mH,KAAM,OACNyJ,KAAM,mBACNjJ,GAAI,CACD8oF,gBAAkB5Q,IACfr6E,KAAKwoH,aAAenuC,IACfr6E,KAAKwoH,eAEVxoH,KAAKymI,YAEE,MAIhB,CACG5nI,GAAIqB,EAAIimI,WACRzlI,KAAM,OACNiB,KAAM,WACNk3G,YAAY,EACZn3G,YAAY,EACZknH,QAAS,CACNC,oBAAqB,CAAC5pH,EAAGJ,KACtBmB,KAAK0mI,WAAW7nI,EAAG,IAI5B,CACGkC,MAAO,IAEV,CACGL,KAAM,SACNiB,KAAM,OACNyJ,KAAM,iBACNs4E,SAAU,GACVpiF,MAAO,KACJtB,KAAK2mI,YAAY,GAGvB,CACGjmI,KAAM,SACNiB,KAAM,OACNyJ,KAAM,WACNs4E,SAAU,GACVpiF,MAAO,KACJtB,KAAK4mI,cAAc,KAK/B,CACG9lI,OAAQ,IAEX,CACGjC,GAAIqB,EAAIk/D,SACR1+D,KAAM,WACNgB,YAAY,EACZT,IAAK,gBACLmlF,aAAa,EACbwb,QAAQ,EACRjgG,KAAM,CACHglE,SAAW34D,GACDhO,KAAK6mI,aAAa74H,GAE5BjN,MAAO,OACPD,OAAQ,QAEXqB,GAAI,CACDghI,eAAiB2D,IACd9mI,KAAK+mI,kBAAkB,EAE1B78H,YAAa,SAAUrL,EAAII,EAAGqD,GAEvBrD,GAAG4rD,QAAQiD,WAAW5b,WAAW,iBAClCsxC,EAAKy/B,SAASpkH,GAIdI,GAAG4rD,QAAQiD,WAAW5b,WAAW,eAEjCsxC,EAAKoe,OAAO/iG,GAGNI,GAAG4rD,QAAQiD,WAAW5b,WAAW,cACvCsxC,EAAKwjD,gBAAgBriI,OACrBjB,GAAG8/E,EAAKtjF,IAAImmI,mBAAmBY,eAC5BvhH,SAAS7mB,GAAM,GAAK,GAEvB2kF,EAAK0jD,mBAEX,IAGN,CACGpmI,OAAQ,IAEX,CACGI,KAAM,CACH,CACGrC,GAAIqB,EAAI+9H,UACRv9H,KAAM,SACNiB,KAAM,OACNyJ,KAAM,uBACNs4E,SAAU,IACVviF,MAAOnB,KAAKmB,MAAM,cAClBG,MAAO,KACJtB,KAAKi+H,WAAW,GAGtB,CACGp/H,GAAIqB,EAAIsmI,YACR9lI,KAAM,SACNiB,KAAM,OACNyJ,KAAM,iBACNs4E,SAAU,IACVviF,MAAOnB,KAAKmB,MAAM,gBAClBG,MAAO,KACJtB,KAAKwmI,aAAa,GAGxB,CACG/jI,WAAW,GAEd,CACG5D,GAAIqB,EAAI85G,OACRt5G,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,iBACN++B,UAAU,EACVu5C,SAAU,IACVviF,MAAOnB,KAAKmB,MAAM,UAClBG,MAAO,KACJtB,KAAKg6G,QAAQ,QAUrC,CAEA4P,UACG,MAAM1pH,EAAMF,KAAKE,IACjB,MAAO,CACJrB,GAAIqB,EAAIkmI,eACR1lI,KAAM,SACNG,OAAO,EACPF,SAAU,SACVwmI,WAAY,GACZnmI,KAAM,CACHE,KAAM,CACH,CAAEuB,WAAW,GACb,CACG/B,KAAM,SACNiB,KAAM,OACNyJ,KAAM,cACNs4E,SAAU,GACV5iF,OAAQ,GACRQ,MAAO,KACJoC,GAAGxD,EAAIkmI,iBAAiB1hI,MAAM,KAK1ClD,KAAM,CACHI,KAAM,CACH,CACG/C,GAAIqB,EAAImmI,kBACR3lI,KAAM,WACNK,MAAO,IACPD,OAAQ,IACRolG,WAAY,CACT7V,OAAO,EACP8V,SAAS,EACTxkG,KAAM,QAETT,KAAM,GACNiB,GAAI,CACDkI,OAAQ,KACLrK,KAAKknI,kBAAkB,IAIhC,CACGxmI,KAAM,SACNQ,KAAM,CACH,CACGrC,GAAIqB,EAAIomI,sBACR5lI,KAAM,SACNiB,KAAM,OACNylI,QAAS,iBACTC,OAAQ,uBACRC,SAAUtnI,KAAKmB,MAAM,cACrBomI,QAASvnI,KAAKmB,MAAM,YACpBJ,MAAO,IACPoB,GAAI,CACDC,SAAWolI,IACR,MAGMC,EAHc/jI,GACjB1D,KAAKE,IAAImmI,mBACVhgC,iBAC+B,EAE7BmhC,EAAYxnI,KAAK4hG,OAAO6lC,GACvBznI,KAAKijH,SAASwkB,EAAW,IAIvC,CACGhlI,WAAW,GAEd,CACG5D,GAAIqB,EAAIqmI,eACR7lI,KAAM,QACNK,MAAO,IACPI,MAAO,GAAGnB,KAAKmB,MAAM,yBAO1C,CAEA+D,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAMwyH,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UAG9B,GAFIk1D,GAAWt0H,KAAK8B,GAAG6Y,MAAMlX,OAAO6wH,EAAW9wH,MAAMG,cAEhD3D,KAAKgnI,gBAAiB,CACxB,MAAMZ,EAAiBpmI,KAAK4pH,UAC5B5pH,KAAKgnI,gBAAkBhnI,KAAK8B,GAAG6Y,MAAMla,GAAG2lI,EAC3C,CACH,CAEAlhI,wBACG,MAAMsjH,EAAexoH,KAAKwoH,aAC1B,IAAKA,IAAiBA,EAAaluC,KAChC,OAAOjrE,QAAQ/P,QAAQ,IAAIooI,YAAY,IAE1C,MAAMC,EAAa,IAAIhtD,WAEvB,OAAO,IAAItrE,SAAQ,CAAC/P,EAAS+W,KAC1BsxH,EAAW/sD,OAAUpqD,IAClB,MAAMo3G,EAAap3G,EAAMq6B,OAAOl9C,OAChCrO,EAAQsoI,EAAW,EAEtBD,EAAWv5C,QAAW59D,IACnBna,EAAOma,EAAM,EAEhBm3G,EAAWE,kBAAkBrf,EAAaluC,KAAK,GAErD,CAEAp1E,cAAcuiI,EAAYp5C,GACvB,GAAKA,EAEL,OAAO,IAAIh/E,SAAQ,CAAC/P,EAAS+W,KAC1Bg4E,EAAOy5C,QAAQp5B,IACZ,MAAMp0B,EAAO,IAAIytD,KAAK,CAACr5B,GAAO,GAAG+4B,QAAkB,CAChD9lI,KAAM,cAGTrC,EAAQg7E,EAAK,GACb,YAAY,GAErB,CAEAp1E,mBAAmBuiI,GAEhB,MAAM7gC,EAAYljG,GAAG1D,KAAKE,IAAImmI,mBACxB2B,EAAW,GAAGhoI,KAAKU,KAAK7B,iBACxBwvF,EACH5/C,SAASw5F,eAAeD,IAAav5F,SAASC,cAAc,UAC/D2/C,EAAOxvF,GAAKmpI,EACZ35C,EAAOttF,MAAQ6lG,EAAU5kG,OAAOjB,MAAQ,SAElCf,KAAKkoI,SAAST,EAAYp5C,GAChC,MAAM85C,QAAiBnoI,KAAKooI,QAAQX,EAAYp5C,GAEhD,OAAO,IAAIh/E,SAAQ,CAAC/P,EAAS+W,KAE1B,MAAMgyH,EAAYroI,KAAK8B,GAAG6Y,MAAMla,GAAG,CAChCC,KAAM,WACNmqF,SAAS,EACTC,OAAQ9qF,KAAK2F,MAAMglF,YACnBI,UAAW,OACXC,UAAU,EACV7oF,GAAI,CAEDmpF,aAAc,CAACt9E,EAAMkJ,KAElB5X,EAAQ4X,GAAUvN,MAAM6F,MACxB64H,EAAU3lB,YAAY,EAGzBn3B,kBAAmB,CAACv9E,EAAMkJ,KACvBb,EAAOa,EAAS,KAKzBmxH,EAAUC,QAAQH,EAAUA,EAAS98C,KAAK,GAEhD,CAEAk9C,yBACG,MAAMjU,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UACxBopE,EAAiE,GAA9ClU,EAAU+O,eAAc,IAAS,IAAIn9H,OAE9DlG,KAAKyoI,eAAiBzoI,KAAKyoI,gBAAkB,EAC7CzoI,KAAKyoI,iBAELnU,GAAWlvH,eAAe,CACvBzD,KAAM,SACNhB,SAAUX,KAAKyoI,eAAiBD,GAEtC,CAEAtjI,iBAIG,GAHAlF,KAAK0oI,iBAEgB1oI,KAAKwoH,aACP,OAEnB,MAAMof,QAAmB5nI,KAAK2oI,kBAC9B3oI,KAAK4oI,cAAgB3C,EAAM4C,YAAYjB,GAAYkB,QAEnD,MAAMC,EAAa/oI,KAAK4oI,QAAQI,SAC1B1U,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UACxBwnC,EAAYljG,GAAG1D,KAAKE,IAAImmI,mBACxB4C,EAAgB,GACtB,IAAK,IAAIxB,EAAa,EAAGA,GAAcsB,EAAYtB,IAChDnT,EAAUlzG,IAAI,CACXviB,GAAI4oI,EACJA,eAGHwB,EAAc5kI,KAAK,CAChBsiE,SAAW34D,GACDhO,KAAKkpI,kBAAkBl7H,GAEjCrE,KAAM,CACH89H,gBAKTznI,KAAK+mI,mBACDngC,GAAW5mG,KAAK8B,GAAG6Y,MAAMla,GAAGwoI,EAAeriC,GAG/C5mG,KAAKi+H,YAELv6H,GAAG1D,KAAKE,IAAI85G,SAASvyG,QACxB,CAEAi/H,WAAW7nI,GASR,OARA6E,GAAG1D,KAAKE,IAAIimI,aAAaprH,OAAOlc,UAEzBmB,KAAK4oI,eACL5oI,KAAKwoH,aACZxoH,KAAK0oI,gBAELhlI,GAAG1D,KAAKE,IAAI85G,SAAS70G,WAEd,CACV,CAEAgkI,eAAe1B,GACZ,MAAO,gBAAgBznI,KAAKU,KAAK7B,MAAM4oI,GAC1C,CAEAZ,aAAa74H,GAIV,MAAO,4FAHWtK,GAAG1D,KAAKE,IAAIk/D,UACEikE,eAAc,GAOrBz6H,QAAQ0/D,GAAWA,GAAUt6D,EAAKnP,KAAIqH,OACjD,qDACA,4HAIH8H,EAAKy5H,qJAKPznI,KAAKopI,sBACCppI,KAAKmpI,eAAen7H,EAAKy5H,iNAO3C,CAEAV,mBACqBrjI,GAAG1D,KAAKE,IAAIk/D,WACnBpyC,KAAK,CAAC,GAAGhpB,SAASgK,IAC1B,MAAMq7H,EAAa56F,SAASgmC,cACzB,IAAIz0E,KAAKmpI,eAAen7H,EAAKy5H,eAEhCznI,KAAKkoI,SAASl6H,EAAKy5H,WAAY4B,EAAW,GAEhD,CAEAnkI,eAAeuiI,EAAY4B,GACxB,IAAKrpI,KAAK4oI,QAAS,OAEnBnB,EAAa/hH,SAAS+hH,GACtB,MAAMr/D,QAAapoE,KAAK4oI,QAAQU,QAAQ7B,GAClC8B,EAAqBnhE,EAAKohE,YAAY,CAAE9xB,MAAO,IAAK32G,MACpD0oI,EAAiBJ,EAAWtoI,MAAQwoI,EAGpCG,EAAWthE,EAAKohE,YAAY,CAAE9xB,MAAO+xB,IAG3C,OAFAJ,EAAWvoI,OAAS4oI,EAAS5oI,OAEtBsnE,EAAK2K,OAAO,CAChB42D,cAAeN,EAAW/6C,WAAW,MACrCo7C,SAAUA,IACVZ,OACN,CAEAJ,gBACG,MAAMpU,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UACxBwnC,EAAYljG,GAAG1D,KAAKE,IAAImmI,mBAE9B/R,GAAWt5G,WACP4rF,GACD5mG,KAAK8B,GAAG6Y,MAAMla,GACX,CACG,CACGC,KAAM,QACNU,MAAO,SACPN,OAAQ8lG,EAAU9lG,OAClBK,MAAOnB,KAAKmB,MAAM,cAGxBylG,EAET,CAEAggC,eACG5mI,KAAK4pI,eAAgB,EACrBlmI,GAAG1D,KAAKE,IAAIk/D,WAAW2T,SACvB/yE,KAAK+mI,kBACR,CAEAJ,aACG3mI,KAAK4pI,eAAgB,EACrBlmI,GAAG1D,KAAKE,IAAIk/D,WAAW2T,SACvB/yE,KAAK+mI,kBACR,CAEIqC,oBACD,OAAOppI,KAAK4pI,cA7fK,IADE,GA+ftB,CAEAhoC,OAAO6lC,GACJ,MAAMnT,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UAE9B,IAAIyqE,EAAcvV,EAAU+O,eAAc,GAE1CwG,EAAYxlI,KAAKojI,GACjBoC,EAAcA,EAAYjhI,QAAQ0/D,GAAWA,IAEzCuhE,EAAY3jI,OAAQouH,EAAU1yB,OAAOioC,GACpCvV,EAAUkS,aAClB,CAEAvjB,SAASwkB,GACN,MAAMnT,EAAY5wH,GAAG1D,KAAKE,IAAIk/D,UAE9B,IAAIyqE,EAAcvV,EAAU+O,eAAc,GAE1CwG,EAAcA,EAAYjhI,QACtB0/D,GAAWA,GAAUA,GAAUm/D,IAG/BoC,EAAY3jI,OAAQouH,EAAU1yB,OAAOioC,GACpCvV,EAAUkS,aAClB,CAEAvI,YACGv6H,GAAG1D,KAAKE,IAAIk/D,WAAW6+D,WAC1B,CAEAuI,cACG9iI,GAAG1D,KAAKE,IAAIk/D,WAAWonE,aAC1B,CAEAsD,oBAAoBrC,GACjB,MAAO,GAAGznI,KAAKmpI,eAAe1B,cACjC,CAEAyB,kBAAkBl7H,GAEf,MAAO,kBADWtK,GAAG1D,KAAKE,IAAImmI,mBAEjBrkI,OAAOjB,MAAQ,WACnBf,KAAK8pI,oBAAoB97H,EAAKy5H,wBAC1C,CAEAP,mBACG,MAAMhnI,EAAMF,KAAKE,IAEXunI,EADc/jI,GAAGxD,EAAImmI,mBAAmBhgC,iBACb,EAC3BgjC,EAAa56F,SAASgmC,cACzB,IAAIz0E,KAAK8pI,oBAAoBrC,MAEhCznI,KAAKkoI,SAAST,EAAY4B,GAE1B,MACM7B,EADkB9jI,GAAGxD,EAAIk/D,UAAUikE,eAAc,GAEpCz6H,QAAQ0/D,GAAWA,GAAUm/D,IAAYvhI,OAAS,EACrExC,GAAGxD,EAAIomI,uBAAuB1hI,SAAS4iI,GAEvC9jI,GAAGxD,EAAIqmI,gBAAgB3hI,SACpB,GAAG5E,KAAKmB,MAAM,mBAAmBsmI,IAEvC,CAEIziI,aACD,OAAOhF,KAAKU,KAAKkrB,gBAAgBD,UACpC,CAEIhmB,YACD,OAAO3F,KAAKgF,QAAQ8B,UAChBC,GAAMA,EAAElI,IAAMmB,KAAKU,KAAKyF,SAAS02B,UACnC,EACL,CAEA4nD,OACG,MAAMvkF,EAAMF,KAAKE,IAEX6pI,EAAgBrmI,GAAGxD,EAAIgmI,cACvB8D,EAActmI,GAAGxD,EAAIimI,YACrB7R,EAAY5wH,GAAGxD,EAAIk/D,UACnB6qE,EAAUvmI,GAAGxD,EAAI85G,QACjBkwB,EAAaxmI,GAAGxD,EAAI+9H,WACpBkM,EAAezmI,GAAGxD,EAAIsmI,aACtB4D,EAAgB1mI,GAAGxD,EAAIomI,uBAE7ByD,GAAe5kI,UACf6kI,GAAa7kI,UACb8kI,GAAS9kI,UACT+kI,GAAY/kI,UACZglI,GAAchlI,UACdilI,GAAejlI,UACfmvH,GAAWlvH,eAAe,CACvBzD,KAAM,SACNhB,SAAU,MAEhB,CAEAkkF,QACG,MAAM3kF,EAAMF,KAAKE,IAEX6pI,EAAgBrmI,GAAGxD,EAAIgmI,cACvB8D,EAActmI,GAAGxD,EAAIimI,YACrB7R,EAAY5wH,GAAGxD,EAAIk/D,UACnB6qE,EAAUvmI,GAAGxD,EAAI85G,QACjBkwB,EAAaxmI,GAAGxD,EAAI+9H,WACpBkM,EAAezmI,GAAGxD,EAAIsmI,aACtB4D,EAAgB1mI,GAAGxD,EAAIomI,uBAE7ByD,GAAetiI,SACfuiI,GAAaviI,SACbwiI,GAASxiI,SACTyiI,GAAYziI,SACZ0iI,GAAc1iI,SACd2iI,GAAe3iI,SACf6sH,GAAW5sH,wBAEJ1H,KAAKyoI,cACf,CAEAvjI,eACG,MAAMS,EAAQ3F,KAAK2F,MACnB,IAAK3F,KAAK4oI,UAAYjjI,EAAO,OAE7B3F,KAAKykF,OAEL,MAAMvkF,EAAMF,KAAKE,IAEXmqI,EADY3mI,GAAGxD,EAAIk/D,UACSikE,eAAc,IAAS,GACnDt7H,EAAQpC,EAAMX,OAAO+C,QACrBgoG,EAAS/vG,KAAK4rB,eAAeE,mBAC7Bw+G,EAAY,GAElB,IAAK,IAAIp3H,EAAI,EAAGA,EAAIm3H,EAAgBnkI,OAAQgN,IAAK,CAC9C,MAAMu0H,EAAa4C,EAAgBn3H,GACnC,GAAkB,MAAdu0H,GAAoC,IAAdA,EAAkB,OAE5C,MAAM8C,QAAiBvqI,KAAKwqI,aAAa/C,GAEzCznI,KAAKuoI,yBAGL,MAAM7iI,EAASC,EAAMX,OAAOyhC,gBAC5B/gC,EAAOC,EAAMkB,YAAc0jI,EAG3B,MAAMn6B,EAAaL,GAAQvjF,YAC3B,GAAI4jF,EAAY,CACb,MAAM/tE,EAAa0tE,GAAQpkF,WAELhmB,EAAMX,OAAO8hB,gBACrB9iB,SAAS+C,IACpB,GACGs7B,EAAWxjC,IAAMkI,EAAEZ,SAASO,iBACH0R,IAAzB1S,EAAOqB,EAAEF,YACV,CACC,MAAM0pG,EAAcxpG,EAAEK,WACjBL,EAAEK,WAAWP,WACbw7B,EAAWhT,KAEhB3pB,EAAOqB,EAAEF,YAAc,CAAC,EACxBnB,EAAOqB,EAAEF,YAAY0pG,GAClBH,EAAWG,IAAgBH,EAAWvxG,EAC5C,IAEN,CAEAyrI,EAAUjmI,WAAW0D,EAAM4nE,OAAOjqE,IAElC1F,KAAKuoI,wBACR,CAEAvoI,KAAKU,KAAKoiE,cAAcwnE,GAGpBA,GAAWtqI,KAAKU,KAAK0O,KAAK,QAASk7H,GAEvCtqI,KAAK6kF,OACR,mBCprBH,MAAMggB,EAAkB,WAClB4lC,EAAmB,EAAQ,OAC3BC,EAAiB,EAAQ,OACzBC,EAAgB,EAAQ,OAE9BprI,EAAOC,QAAU,cAAmCqlG,EACjDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,eAAewlG,EAASxmG,KAClCQ,OAAOoyB,OAAO,CAAEm5G,MAAO,IAAM1qI,GAEnC,CAEAO,KACG,MAAM+iF,EAAOxjF,KACPmG,EAAWnG,KAAKmG,SAChB0kI,EAAU,CACbhsI,GAAImB,KAAKE,IAAI0qI,MACblqI,KAAM,QACNkiC,UAAU,EACVunC,aAAchkE,EAASgkE,aACvBC,YAAajkE,EAASikE,YACtBC,cAAelkE,EAASkkE,cACxBnoB,IAAK/7C,EAAS+7C,IACdD,IAAK97C,EAAS87C,IACdnhD,OAAQqF,EAASrF,OACjBgG,OAAQ9G,KAAK8qI,aACbtqH,OAAS9d,IACN,MAAM44C,EAAgBn1C,EAASm1C,eAAiB,EAEhD,OAAO54C,GAAkB,KAATA,EACXw4C,WAAWx4C,GAAOo5C,QAAQR,GAAiB,GAC3C54C,CAAK,EAEbozG,SAAU,IAAIC,IAAI,CACf,CACG60B,MAAM50B,SAASC,QACf,cAAwB20B,MAAM50B,SAASC,QACpC/wG,aACG,MAAM0nB,EAAK42D,EAAK53D,eAChB,IAAKgB,EAAI,OAAOppB,MAAMslI,QAAQxpI,QAAQ,IAEtC,MAAM0F,EAAS4nB,EAAGjB,WAClB,IAAK3mB,EAAQ,OAAOxB,MAAMslI,QAAQxpI,QAAQ,IAElCstB,EAAGT,aACHS,EAAGnC,eAAeC,kBACdkC,EAAGgC,WAIf,MACMm8G,EADOn+G,EAAG+H,UACQj2B,KAAKiyB,IAC1B,MAAMhjB,EAAS,CAAC,EAYhB,OAVA3I,EAAO8B,SAAS9C,SAAS+C,IAMnB4G,EAAO5G,EAAEF,YAJTE,aAAa0jI,GACb1jI,aAAa2jI,GACb3jI,aAAa4jI,EAEUh6G,EAAE5pB,EAAEF,YACFE,EAAEyZ,OAAOmQ,EAAE,IAGnChjB,CAAM,IAGhB,OAAOnK,MAAMslI,QAAQxpI,QAAQyrI,EAChC,IAGN,CACGH,MAAMnjH,MAAM+yF,MACZ,cAA0BowB,MAAMnjH,MAAM+yF,MACnCwwB,WAAWtoI,GACR,MAAM44C,EAAgBn1C,EAASm1C,eAAiB,EAEhD,OADK54C,IAAOA,EAAkB,IAAVA,EAAc,IAAM,IACjCA,EACFw4C,WAAWx4C,GAAOo5C,QAAQR,GAC1B54C,CACR,OAMRyD,EAASmkE,YAAWugE,EAAQvgE,UAAYnkE,EAASmkE,WAErD,MAAM27B,EAAMnmG,MAAMW,GAAG,CAACoqI,IAGtB,cAFO5kC,EAAItkG,KAEJskG,CACV,CAEA6kC,aACG,MAAMl+G,EAAK5sB,KAAK4rB,eAChB,IAAKgB,EAAI,MAAO,GAEhB,MAAM5nB,EAAS4nB,EAAGjB,WAClB,OAAK3mB,EAEUA,EAAO8B,SAASpI,KAAKqI,IACjC,IAAIkkI,EAAY,OAEhB,OAAQlkI,EAAE3C,KACP,IAAK,YACL,IAAK,UACL,IAAK,SACF6mI,EAAY,SACZ,MACH,IAAK,OACL,IAAK,WACFA,EAAY,OAIlB,MAAO,CACJpsI,GAAIkI,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMspI,EACR,IArBgB,EAyBvB,oBC9HH,MAAMpmC,EAAkB,WAExBtlG,EAAOC,QAAU,cAA4CqlG,EAC1DllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,uBAAuBwlG,EAASxmG,KAC1CQ,OAAOoyB,OACJ,CACGy5G,cAAe,IAElBhrI,IAINF,KAAK4iC,UAAW,CACnB,CAEAniC,KACG,MAAM+iF,EAAOxjF,KACPmG,EAAWnG,KAAKmG,SAChBkhG,EAAKrnG,KAAK8B,GACVwlG,EAAUD,EAAG1sF,MACbiS,EAAK5sB,KAAK4rB,eACVkR,EAAYlQ,GAAIjB,WAAW/d,UAC9BzH,EAASqkE,eAAetjE,OACxBL,WACGskI,EAAYv+G,GAAIjB,WAAW/d,UAC9BzH,EAASqkE,eAAev8D,OACxBpH,WACGukI,EAAex+G,GAAIjB,WAAW/d,UACjCzH,EAASqkE,eAAetiD,UACxBrhB,WACG3G,EAAMF,KAAKE,IACjB,MAAMmrI,UAAkBC,QAAQt1B,SAASC,QACtC/wG,mBACG,OAAU,MAAN0nB,EAAmB,UAEjB42D,EAAK+nD,wBAAwB,IAAM3+G,GAElCA,EAAG+H,UAAUj2B,KAAKO,IACf,CACJJ,GAAII,EAAEJ,GACNqI,KAAMjI,EAAE69B,GACR7uB,KAAMyF,KAAKC,UAAU1U,EAAEksI,IACvBK,QAASvsI,EAAc,eAGhC,CAEAiG,gBAAgByE,GACb,MAAMsqB,EAAa,CAAC,EAOpB,OALAA,EAAW6I,GAAanzB,EAAKzC,KAC7B+sB,EAAWk3G,GAAaxhI,EAAKsE,KAItB,CACJpP,UAHoB+tB,EAAG7kB,MAAM4nE,OAAO17C,IAGvBp1B,GAEnB,CAEAqG,mBAAmBrG,EAAI8K,GACpB,MAAMsqB,EAAa,CAAC,EAEpBA,EAAW6I,GAAanzB,EAAKzC,KAC7B+sB,EAAWk3G,GAAaxhI,EAAKsE,KAE7B,IAAIiJ,EAAW,CAAC,EAIhB,OAFAA,QAAiB0V,EAAG7kB,MAAMouE,OAAOt3E,EAAIo1B,GAE9B,CAAEp1B,GAAIqY,EAASrY,GACzB,CAEAqG,mBAAmBrG,GAGhB,aAFM+tB,EAAG7kB,MAAMgO,OAAOlX,GAEf,CAAEA,GAAIA,EAChB,CAEAqG,kBACG,MAAMumI,EAAe,CAAC,EAsDtB,OAnDCtlI,EAASme,kBAAkBpe,OAAS,EAChCC,EAASme,kBACTk/D,EAAK9iF,KAAKoE,YAAYwf,mBACzBtgB,SAAS0nI,IACR,MAAM9+G,EAAKy6E,EAAGt7E,mBAAmB2/G,GAEjC,IAAK9+G,EAAI,OAIT,IAFYA,EAAGjB,WAEL,OAEV,MAAMggH,EAAenoD,EAAKooD,gBAAgBh/G,GA+B1C6+G,EAAa7+G,EAAG/tB,IAAM,CACnBA,GAAI+tB,EAAG/tB,GACPqI,KAAM0lB,EAAGzrB,MACTwI,KAAMgiI,EACNE,KAAM,GACR,IAGGJ,CACV,CAEAvmI,mBACG,MAAM4mI,EAAWpoI,GAAGxD,EAAIgrI,eAAexuD,WAAWqvD,UAAY,GAE9D,MAAiB,KAAbD,EAAwB,UAIhBl/G,EAAG7kB,MAAMioB,QAAQ,CACpBL,MAAO,CACJngB,KAAMs8H,MAGbniI,KAAK,GAAGyhI,IAAiB,EAEjC,CAEAlmI,eAAeyE,GACZ,MAAMmiI,EAAWpoI,GAAGxD,EAAIgrI,eAAexuD,WAAWqvD,UAAY,GAE9D,GAAiB,KAAbD,EAAiB,MAAO,CAAC,EAE7B,MAAME,SACGp/G,EAAG7kB,MAAMioB,QAAQ,CACpBL,MAAO,CACJngB,KAAMs8H,MAGbniI,KAAK,GAEP,GAAkB,MAAdqiI,EAAoB,MAAO,CAAC,EAEhC,MAAM9jH,EAAU,IAAK8jH,EAAWZ,IAAiB,IAC3Ca,EAAU3kC,EAAQv8F,MAExBmd,EAAQ7jB,KAAKhF,OAAOoyB,OAAO,CAAE5yB,GAAIotI,GAAWtiI,IAE5C,MAAMsqB,EAAa,CAAC,EAYpB,OAVAA,EAAWm3G,GAAgBljH,EAAQ1a,MAAK,CAACC,EAAGC,IACrCD,EAAEvG,KAAOwG,EAAExG,MAAc,EAEzBuG,EAAEvG,KAAOwG,EAAExG,KAAa,EAErB,UAGJ0lB,EAAG7kB,MAAMouE,OAAO21D,EAAU73G,GAEzB,CAAEp1B,GAAIotI,EAChB,CAEA/mI,kBAAkBrG,EAAI8K,GACnB,MAAMmiI,EAAWpoI,GAAGxD,EAAIgrI,eAAexuD,WAAWqvD,UAAY,GAE9D,GAAiB,KAAbD,EAAiB,MAAO,CAAC,EAE7B,MAAME,SACGp/G,EAAG7kB,MAAMioB,QAAQ,CACpBL,MAAO,CACJngB,KAAMs8H,MAGbniI,KAAK,GAEP,GAAkB,MAAdqiI,EAAoB,MAAO,CAAC,EAEhC,MAAM9jH,EAAU,IAAK8jH,EAAWZ,IAAiB,IAC3Cc,EAAahkH,EAAQmyC,WAAWp7D,GAAMA,EAAEJ,KAAOA,IAErDqpB,EAAQgkH,GAAc7sI,OAAOoyB,OAAO,CAAE5yB,MAAM8K,GAE5C,MAAMsqB,EAAa,CAAC,EAYpB,OAVAA,EAAWm3G,GAAgBljH,EAAQ1a,MAAK,CAACC,EAAGC,IACrCD,EAAEvG,KAAOwG,EAAExG,MAAc,EAEzBuG,EAAEvG,KAAOwG,EAAExG,KAAa,EAErB,UAGJ0lB,EAAG7kB,MAAMouE,OAAO21D,EAAU73G,GAEzB,CAAEp1B,KACZ,CAEAqG,kBAAkBrG,GACf,MAAMitI,EAAWpoI,GAAGxD,EAAIgrI,eAAexuD,WAAWqvD,UAAY,GAE9D,GAAiB,KAAbD,EAAiB,MAAO,CAAC,EAE7B,MAAME,SACGp/G,EAAG7kB,MAAMioB,QAAQ,CACpBL,MAAO,CACJngB,KAAMs8H,MAGbniI,KAAK,GAEP,GAAkB,MAAdqiI,EAAoB,MAAO,CAAC,EAEhC,MAAM9jH,EAAU8jH,EAAWZ,IAAiB,GACtCc,EAAahkH,EAAQmyC,WAAWp7D,GAAMA,EAAEJ,KAAOA,IAErD,GAAIqtI,GAAc,EAAG,CAClB,MAAMj4G,EAAa,CAAC,EAEpBA,EAAWm3G,GAAgBljH,EACvBtf,QAAO,CAAC3J,EAAGiU,IAAMA,IAAMg5H,IACvB1+H,MAAK,CAACC,EAAGC,IACHD,EAAEvG,KAAOwG,EAAExG,MAAc,EAEzBuG,EAAEvG,KAAOwG,EAAExG,KAAa,EAErB,UAGP0lB,EAAG7kB,MAAMouE,OAAO21D,EAAU73G,EACnC,CAEA,MAAO,CAAEp1B,GAAIA,EAChB,CAEAqG,cAAclD,GACX,IAAI2L,EAAS,GACTw+H,EAAgB,GAChBC,EAAQ,GACRC,EAAS,CAAC,EACVV,EAAe,GAGnBS,EAAM/nI,KAAKrC,EAAO2H,OACjB3H,EAAOimC,OAAS,IAAIjkC,SAASqhC,IAC3B+mG,EAAM/nI,KAAKghC,EAAEinG,KACbF,EAAM/nI,KAAKghC,EAAEsnB,IAAI,IAEpBy/E,EAAQ/kC,EAAG5kF,KAAK2pH,GAChBA,EAAMpoI,SAASuoI,IACZJ,EAAc9nI,KACX,IAAIgL,SAAQ,CAAC/P,EAAS+W,KACHnR,WACb,IACGmnI,EAAOE,SAAe/oD,EAAK7uD,QAAQ43G,IAAU,GAE7CjtI,GAGH,CAFE,MAAO4I,GACNmO,EAAOnO,EACV,GAGHysB,EAAS,IAEd,IAGJy3G,EAAMpoI,SAASuoI,IACZ,MAAMC,EAAUnlC,EAAGt7E,mBAAmBwgH,GAEjCC,IAELb,EAAeA,EAAa7jH,OACzB07D,EAAKooD,gBAAgBY,GAAS9tI,KAAKqI,IAEhCA,EAAElI,GAAK,GAAG0tI,KAAQxlI,EAAElI,KACbkI,MAEZ,UAGEsI,QAAQkS,IAAI4qH,GAGlBx+H,EAAS0+H,EAAOrqI,EAAO2H,OAAS,GAE5B3H,EAAOimC,OAAO/hC,SACdlE,EAAOimC,OAAS,IAAIjkC,SAASqhC,IAC3B,MAAMonG,EAAWplC,EAAGt7E,mBAAmBsZ,EAAEinG,KACzC,IAAKG,EAAU,OAEf,MAAMC,EAAYD,EAAS9gH,WAC3B,IAAK+gH,EAAW,OAEhB,MAAMC,EAAWtlC,EAAGt7E,mBAAmBsZ,EAAEsnB,KACzC,IAAKggF,EAAU,OAEf,MAAMC,EAAYD,EAAShhH,WAC3B,IAAKihH,EAAW,OAEhB,MAAMC,EAAkBH,EAAU9+H,UAAUy3B,EAAEynG,IACxCC,EAAkBH,EAAUh/H,UAAUy3B,EAAE2nG,IAC9C,IAAKH,IAAoBE,EAAiB,OAE1C,MAAME,EAAaZ,EAAOhnG,EAAEinG,MAAQ,GAC9BY,EAAab,EAAOhnG,EAAEsnB,MAAQ,GAEpCsgF,EAAWjpI,SAASk7H,IACjBgO,EAAWlpI,SAASmpI,IACjB,IAAIC,EACDlO,EACG2N,EACK,GAAGxnG,EAAEinG,OAAOO,EAAgBhmI,gBAC5B,GAAGw+B,EAAEinG,WACR,GAEJe,EACDF,EACGJ,EACK,GAAG1nG,EAAEsnB,OAAOogF,EAAgBlmI,gBAC5B,GAAGw+B,EAAEsnB,WACR,GAWR,GATK3/C,MAAMC,QAAQmgI,KAAOA,EAAO,CAACA,IAE7BpgI,MAAMC,QAAQogI,KAAOA,EAAO,CAACA,IAGfD,EAAKxkI,QACpB+M,GAAQ03H,EAAKngI,QAAQyI,IAAQ,KAGjBzP,OAAQ,CACrB,MAAMonI,EACH3/H,EAAO/E,QACH2G,GACEA,EAAE,GAAG81B,EAAEinG,YAAcpN,EAAM,GAAG75F,EAAEinG,YAC/B/8H,EAAE,GAAG81B,EAAEsnB,aACT,GAEJ2gF,GAAYpnI,QACZonI,GAAc,IAAItpI,SAASuL,IACzB,IAAK,MAAMnL,KAAO+oI,EACH,OAAR/oI,IAAcmL,EAAEnL,GAAO+oI,EAAM/oI,GAAI,IAG3CuJ,EAAOtJ,KACJhF,OAAOoyB,OACJ41E,EAAG5hG,UAAUy5H,GACb73B,EAAG5hG,UAAU0nI,IAGzB,IACD,GACH,IAIR,MAAMI,EAAW75H,KAAKuD,MAAMjV,EAAOiW,OAAS,MAExCs1H,GAAUlsH,OAAOnb,QAClBqnI,EAASlsH,MAAMrd,SAASuL,IAChBA,GAAMA,EAAE5N,MAAS4N,EAAE6+B,WAGhB,SADA7+B,EAAE5N,MAGA4N,EAAE6+B,UAAUxlC,SACqB,iBAAvB2G,EAAE6+B,UAAUxlC,SACpB2G,EAAE6+B,UAAUxlC,OAASy+F,EAAGhmF,MAAMhB,OAC3B9Q,EAAE6+B,UAAUxlC,SAIf2G,EAAE6+B,UAAUxlC,OAAOiqB,OACiB,iBAA7BtjB,EAAE6+B,UAAUxlC,OAAOiqB,QAE1BtjB,EAAE6+B,UAAUxlC,OAAOiqB,MAAQw0E,EAAGhmF,MAAMhB,OACjC9Q,EAAE6+B,UAAUxlC,OAAOiqB,QAItBtjB,EAAE6+B,UAAUxlC,OAAOggD,KACe,iBAA3Br5C,EAAE6+B,UAAUxlC,OAAOggD,MAE1Br5C,EAAE6+B,UAAUxlC,OAAOggD,IAAMy+C,EAAGhmF,MAAMhB,OAC/B9Q,EAAE6+B,UAAUxlC,OAAOggD,MAKlC,IAIN,MAAM4kF,EAAalmC,EAAQ7mG,GAAG,CAC3BC,KAAM,QACNoG,OAAQ6kI,EACRjpI,MAAO6qI,IAIJE,EAAS,IAAInmC,EAAQh1B,eAK3B,IAAIrV,EAHJwwE,EAAOx2H,MAAMtJ,GAKb,IACGsvD,EAAWuwE,EAAWzwD,mBAGzB,CAFE,MAAO5tE,GAET,CAkIA,OAhII8tD,GAAUwwE,EAAO7kI,OAAOq0D,IAG3Bj7D,EAAOwL,MAAQ,IAAIxJ,SAASwJ,IACtBA,EAAK3O,IACN4uI,EAAOjgI,KAAK,CACTkgI,GAAI,SACJljI,IAAKgD,EAAKmgI,KAAO,MACjB9/H,GAAI,IAAIL,EAAK3O,OACd,IAGR8O,EAAS8/H,EAAOlgH,YAGhBigH,EAAW9qB,aACX+qB,EAAO/qB,aAGH1gH,GAAQo/G,OAAOl7G,SAChByH,EAASigI,EAAE/nE,QAAQl4D,GAAS1O,GAClB+C,EAAOo/G,MACV1iH,KAAKi5E,IACH,MAAMk2D,EAAel2D,EAAOnvD,MAAM,KAC5BslH,EACHD,EAAa3nI,OAAS,EACjB,GAAG2nI,EAAa,MAAMA,EAAa,KACnCl2D,EAKR,GACQ,SALYg0D,EAAa3+G,MAC7B+gH,GAAgBA,EAAYlvI,KAAOivI,IAGnBnsI,KACJ,CACV,MAAMqsI,EAAiB1mC,EAAQ1pB,KAAKC,cACjC5+E,EAAE6uI,IAECG,EACHD,EAAexlH,MAAM,KAExB,OAAQqlH,EAAa,IAClB,IAAK,MAGF,OAFA5uI,EAAE04E,GAAUs2D,EAAqB,GAE1BA,EAAqB,GAE/B,IAAK,QAGF,OAFAhvI,EAAE04E,GAAUs2D,EAAqB,GAE1BA,EAAqB,GAE/B,IAAK,OAGF,OAFAhvI,EAAE04E,GAAUs2D,EAAqB,GAE1BA,EAAqB,GAE/B,IAAK,YAKF,OAJAhvI,EACG04E,GACC,GAAGs2D,EAAqB,MAAMA,EAAqB,KAEhDhvI,EAAE04E,GAGZ,QAGG,OAFA14E,EAAE04E,GAAUq2D,EAELA,EAYhB,CAGG,OAAO/uI,EAAE6uI,IAAiBz5H,YAChC,IAEFnG,KAAK,MAGZP,EAAStO,OAAOqG,OAAOiI,GAAQjP,KAAKwvI,IACjC,MAAMC,EAAgB,CAAC,EAmCvB,OAjCCnsI,EAAOq5D,SAAW,IAAIr3D,SAAS++E,IAC7B,MAAMqrD,EAAMrrD,EAAIv6D,MAAM,KAAK,GACrB6lH,EAAStrD,EAAIlwE,QAChB,8BACA,IAGH,OAAQu7H,GACL,IAAK,MACFD,EAAcprD,GAAOskB,EAAG1kF,MAAMurH,EAAaG,GAC3C,MACH,IAAK,MACFF,EAAcprD,GAAOskB,EAAGzkF,OAAOsrH,EAAaG,GAC5C,MACH,IAAK,QACFF,EAAcprD,IAAQmrD,GAAe,IAAIhoI,OACzC,MACH,IAAK,MACFioI,EAAcprD,IACVskB,EAAGxkF,MAAMqrH,EAAaG,IAAW,CAAC,GAAGA,IACtC,GACH,MACH,IAAK,MACFF,EAAcprD,IACVskB,EAAGvkF,MAAMorH,EAAaG,IAAW,CAAC,GAAGA,IACtC,GACH,MACH,QACGF,EAAcprD,GAAOmrD,EAAY,GAAGnrD,GAE1C,IAGIorD,CAAa,KAInBxgI,CACV,CAEAzI,iBAAiB4B,GACd,MAAO,EACV,CACA5B,mBAAmBqF,GAChB,MAAO,EACV,EAEH,MAAM+jI,UAAgBhD,QAAQt1B,SAASu4B,MACpC5uI,YAAY6rB,GACT1rB,MAAM0rB,GAENxrB,KAAKwuI,iBAAmB,EAC3B,CAEAC,aACG,MAAMC,EAAkBhrI,GAAGxD,EAAIgrI,eAAexuD,WAAWqvD,SAOzD,OALI/rI,KAAKwuI,mBAAqBE,IAC3B1uI,KAAKwuI,iBAAmBE,EACxB1uI,KAAK2uI,SAAW,MAGZ7uI,MAAM2uI,YAChB,EAEH,MAAMG,UAAiBtD,QAAQ7jH,MAAMpiB,OAClChC,OAGG,GAFAvD,MAAMuD,QAEDmgF,EAAK5gD,UAAkC,IAAtBz8B,EAASskE,SAAgB,OAE/C,MAAMokE,EAAU7uI,KAAK0D,GAAG,UAExB,GAA+B,IAA3ByC,EAASukE,cAAqB,CAC/B,MAAMn4C,EAAW,KACds8G,EAAQC,UAAU,WAAY,CAAC,SAC/BD,EAAQE,cAAc,UACtBvrD,EAAKxsD,eAAe,wBAAyBzE,EAAS,EAGzDixD,EAAKrhF,GAAG,wBAAyBowB,EACpC,CAE6B,IAAzBpsB,EAASwkE,aAAmBkkE,EAAQE,cAAc,SAEzB,IAAzB5oI,EAASykE,aAAmBikE,EAAQE,cAAc,aAEtD/uI,KAAKmC,GAAGnC,KAAKwrB,IAAK,wBAAwB,KACvCxrB,KAAKgvI,OAAM,EAAK,GAEtB,CAEAA,MAAMC,GAAa,GAChB,MAAMpwI,EAAKmB,KAAKkvI,SAASnD,SACPvoD,EAAK5gD,YAAoC,IAAtBz8B,EAASskE,WAEtB,MAAN5rE,IAAcowI,GAAYnvI,MAAMkvI,QAElDhvI,KAAKuuI,MAAMY,UAAUtwI,EACxB,CAEAuwI,eACGtvI,MAAMsvI,eAEFjpI,EAASukE,eAAe8Y,EAAKp0E,KAAK,wBACzC,EAEH,MAAMigI,UAAkB/D,QAAQ7jH,MAAMgzF,QACnCz4G,SACG,MAAMvB,EAAKX,MAAMkC,SAwBjB,OAtBIwhF,EAAK5gD,UAAoC,IAAtBz8B,EAASskE,WAC7BhqE,EAAGuI,SAAS,GAAG9H,KAAOT,EAAGuI,SAAS,GAAG9H,KAAKxC,KAAKO,GAC5CI,OAAOoyB,OAAOxyB,EAAG,CACdq9E,OAAQkH,EAAK5gD,YAAoC,IAAtBz8B,EAASskE,cAI1ChqE,EAAGuI,SAAS,GAAG9H,KAAKmD,KACjB,CAAC,EACD,CACG3D,KAAM,SACNiB,KAAM,OACNyJ,KAAM,wBACNjK,MAAOqiF,EAAKriF,MAAM,QAClBs8E,QAAS,aACTn8E,MAAO,IACGtB,KAAKwrB,IAAIsjH,UAAU,uBAAwB,OAMvDruI,CACV,EAEH,MAAM6uI,UAAuBhE,QAAQ7jH,MAAM,iBACxCzlB,SACG,MAAMvB,EAAKX,MAAMkC,SAEjB,OAAKwhF,EAAK5gD,SAEHvjC,OAAOoyB,OAAO,CAAC,EAAGhxB,EAAI,CAC1BuI,SAAUvI,EAAGuI,SAAStK,KAAI,CAACO,EAAGiU,IAC3B7T,OAAOoyB,OACJ,CACG6qD,SAAUppE,GAAK,GAAKA,EAAI,IAE3BjU,OARkBwB,CAY9B,CAEA8uI,mBACGzvI,MAAMyvI,mBAEF/rD,EAAK5gD,UAAU5iC,KAAK0D,GAAG,UAAUgB,MACxC,EAEH,MAAM8qI,UAAqBlE,QAAQ7jH,MAAM,eACtCzlB,SACG,MAAMvB,EAAKX,MAAMkC,SAYjB,OAVIwhF,EAAK5gD,WACNniC,EAAGmB,KAAK,GAAGA,KAAK,GAAG06E,QAAS,EAE5B77E,EAAGmB,KAAK,GAAGA,KAAKwxB,QAAQ,CACrBjyB,MAAO,kBACPT,KAAM,QACNK,MAAO,OAINN,CACV,EAEH,MAAMgvI,UAAgBnE,QAAQ7jH,MAAM+yF,MAEjCk1B,gBAAgBjiI,GACb,IAAIzL,EAAS,CACVnD,GAAI4O,EAAE5O,GACNwkC,OACI51B,EAAEkiI,KAAKtsG,QAA4B,SAAlB51B,EAAEkiI,KAAKtsG,OAEpB,CACG51B,EAAEkiI,KAAKzoI,MAAQuG,EAAEvG,KACjB,CACGowE,QACgB,SAAb7pE,EAAE41B,OACG,aACA,qBAPd51B,EAAEkiI,KAAKzoI,MAAQuG,EAAEvG,KAUzBvF,KAAM8L,EAAE9L,KACR6L,KAAM,OACNzM,MAAO0M,EAAE1M,OAAS,KAGrB,MAAM6uI,EAAUpsD,EAAK1hF,GAAGiqB,mBACrBte,EAAEoiI,MACFlkH,WAAW7kB,QAAQnB,GAAUA,EAAMkB,aAAe4G,EAAEvG,OAAM,GAqB7D,MAlBQ,SADAuG,EAAE9L,KAEJK,EAAOwe,OAAU7K,GAEVA,GAAK8kC,UAAYtM,MAAMx4B,EAAI8kC,WACJ,aAAjBm1F,GAASxrI,IACXkjG,EAAQ1pB,KAAKkyD,kBAAkBn6H,GAC/B2xF,EAAQ1pB,KAAKC,cAAcloE,GACvB,GAMf3T,EAASlC,MAAM4vI,gBAAgBjiI,GAK9BzL,CACV,CAEAkD,mBAAmByoI,GAChB,MAAMhkI,QAAa7J,MAAMiwI,aAAapC,GAChCqC,EAAUrC,EAAIqC,QAEpB,IAAKA,EAAS,OAAOrmI,EAErB,GAAuB,IAAnBqmI,EAAQ9pI,OAAc,OAAOyD,EAEjC,MAAMsmI,EAAYtC,EAAItyE,QAAQ38D,KAAKO,GAAMA,EAAEJ,KACrCqxI,EAAgBvC,EAAIqC,QAAQpnI,QAAQunI,GACvCF,EAAU/9F,SAASi+F,EAAOx4D,UAG7B,OAA6B,IAAzBu4D,EAAchqI,OAAqByD,EAsBhC,CApBSA,EAAK,GAAGjL,KAAKO,IAC1B,MAAMmxI,EAAc,CAAC,EAgBrB,OAdAF,EAAclsI,SAASmsI,IACpB,MAAMjuI,EAAUiuI,EAAOjuI,QAEvB,IAAK,IAAIgR,EAAI,EAAGA,EAAIhR,EAAQgE,OAAQgN,IACjC,GACGhR,EAAQgR,GAAGxN,QAAQwsC,SAASjzC,EAAEkxI,EAAOx4D,UACrCzkE,IAAMhR,EAAQgE,OAAS,EACxB,CACCkqI,EAAYD,EAAOx4D,QAAUz1E,EAAQgR,GAAGrU,GAExC,KACH,KAGCQ,OAAOoyB,OAAO,CAAC,EAAGxyB,EAAGmxI,EAAY,IAG1BzmI,EAAK,GACzB,EAGH,MAAMs8F,EAAMnmG,MAAMW,GAAG,CAClB,CACG5B,GAAIqB,EAAIgrI,cACRxqI,KAAM,UACN+5G,SAAS,EACT3E,SAAU,IAAIC,IAAI,CACf,CAACu1B,QAAQt1B,SAASC,QAASo1B,GAC3B,CAACC,QAAQt1B,SAASu4B,MAAOD,GACzB,CAAChD,QAAQ7jH,MAAMpiB,OAAQupI,GACvB,CAACtD,QAAQ7jH,MAAMgzF,QAAS40B,GACxB,CAAC/D,QAAQ7jH,MAAM,iBAAkB6nH,GACjC,CAAChE,QAAQ7jH,MAAM,eAAgB+nH,GAC/B,CAAClE,QAAQ7jH,MAAM+yF,MAAOi1B,QAQ/B,cAHOxpC,EAAItkG,YACJskG,EAAInlG,OAEJmlG,CACV,CAEA/gG,WAAWpD,EAAI46D,GACZ18D,KAAK8B,GAAKA,EACV9B,KAAK4iC,SAAW85B,EAAc,EAE9B,MACMnR,EADiB7nD,GAAG1D,KAAKE,IAAIgrI,eACNxuD,WAE7BnxB,EAAM3oB,SAAW5iC,KAAK4iC,SACtB2oB,EAAMmyB,KACH19E,KAAK4iC,UAAuC,IAA3B5iC,KAAKmG,SAASskE,SAAiB,OAAS,MAC/D,CAEAmhE,gBAAgBh/G,GACb,IAAKA,EAAI,MAAO,GAEhB,MAAM5nB,EAAS4nB,EAAGjB,WAClB,IAAK3mB,EAAQ,MAAO,GAEpB,MAAM8B,EAAS,GAgEf,OA9DA9B,EAAO8B,SAAS9C,SAAS+C,IACtB,MAAMspI,EAAetpI,EAAEmwE,eAEvB,GAAKnwE,EAAE49B,cAqCP,GAAI59B,EAAEN,WAAY,CACf,MAAM6pI,EAAYtwI,KAAKU,KAAKoE,YAAYohB,yBACpC0G,GACE5sB,KAAKmG,SAASme,kBAAkB4tB,SAAStlB,EAAG/tB,KAC5C+tB,EAAGzmB,SAASqjB,eAAiBziB,EAAEZ,SAASO,cAG7C4pI,GAAa,IAAItsI,SAASusI,IACxBzpI,EAAOzC,KAAK,CACTxF,GAAIkI,EAAElI,GACNqI,KAAMH,EAAE5F,MACRyH,QAAQ,EACRgnE,MAAM,EACNjuE,KAAM,YACN6uI,IAAKD,EAAO1xI,GACZuF,KAAK,EACLO,MAAM,GACP,GAER,MAxDA,CACG,IAAIhD,EAAO,OAEX,OAAQoF,EAAE3C,KACP,IAAK,UACL,IAAK,SACL,IAAK,OACFzC,EAAOoF,EAAE3C,IAET,MAEH,IAAK,WACFzC,EAAO,OAQbmF,EAAOzC,KAAK,CACTxF,GAAIkI,EAAEF,WACNK,KAAMH,EAAE5F,MACRyH,OAAQ7B,EAAE8pC,oBACV++B,MAAM,EACNjuE,KAAMA,EACN6e,OAAQ6vH,EAAa7vH,OACrBte,QAASmuI,EAAanuI,QACtBsuI,IAAK,GACLpsI,KAAK,EACLO,MAAM,EACNirI,QAAS7oI,GAIf,CAqBA,IAGID,CACV,CAEA5B,cAAcusE,GACX,MAAM7lD,EAAiB5rB,KAAK8B,GAAGiqB,mBAAmB0lD,GAClD,IAAK7lD,EAAgB,MAAO,GAE5B,MAAM5mB,EAAS4mB,EAAeD,WAC9B,IAAK3mB,EAAQ,MAAO,SAEdhF,KAAKurI,wBAAwB,IAAM3/G,GAEzC,MAAM+/G,EAAe3rI,KAAK4rI,gBAAgBhgH,GACpC6kH,EAAa,GA2DnB,OA1DgB7kH,EAAe+I,WAEnB,IAAI3wB,SAASob,IACtB,MAAMsxH,EAAY,CAAE7xI,GAAIugB,EAAIvgB,IAE5B6xI,EAAU,GAAG9kH,EAAe/sB,SAAWugB,EAAIvgB,GAE3CmG,EAAO8B,SAAS9C,SAAS2B,IACtB,MAAMkB,EAAalB,EAAMkB,WACnBk8E,EAAM,GAAGn3D,EAAe/sB,MAAMgI,IAEpC,GAAIlB,EAED,GAAIA,EAAMg/B,aAAc,CACrB,IAAIgsG,EAAMhrI,EAAMgB,eAAe0oB,KAC3BriB,MAAMC,QAAQmS,EAAIvY,IACnB6pI,EAAU,GAAG3tD,QAAY3jE,EAAIvY,GAAYnI,KACrCirC,GAASA,EAAKgnG,IAAQhnG,EAAK9qC,IAAM8qC,IAE/BvqB,EAAIvY,KACV6pI,EAAU,GAAG3tD,QACV3jE,EAAIvY,GAAY8pI,IAChBvxH,EAAIvY,GAAYhI,IAChBugB,EAAIvY,GACb,MAAO6pI,EAAU3tD,GAAOp9E,EAAM6a,OAAOpB,QACjCsxH,EAAU3tD,GAAO3jE,EAAIvY,GAE5B,MAAM+pI,EAASjF,EAAa3+G,MACxBjmB,GAAMA,EAAElI,KAAOgI,GAAcE,EAAElI,KAAO8G,EAAM9G,KAGhD,GAAK+xI,EAEL,OAAQA,EAAOjvI,MACZ,IAAK,OACL,IAAK,YACF+uI,EAAU3tD,IAAQ2tD,EAAU3tD,IAAQ,IAAI1uE,WACxC,MAEH,IAAK,SACFq8H,EAAU3tD,GAAO7nC,YACbw1F,EAAU3tD,IAAQ,GAAG1uE,WAAWxB,QAAQ,WAAY,KAExD,MAEH,IAAK,OACF69H,EAAU3tD,GAAO3jE,EAAIvY,GACjB6pI,EAAU3tD,GACL2tD,EAAU3tD,aAAgBtiE,OAC7BiwH,EAAU3tD,GAAO/iF,KAAK8B,GAAGuf,MAAMhB,OAAOjB,EAAIvY,KACzC6pI,EAAU3tD,GAAO,GAE9B,IAGH0tD,EAAWpsI,KAAKqsI,EAAU,IAGtBD,CACV,CAEAvrI,eACGpF,MAAMuK,SAEN,MAAMnK,EAAMF,KAAKE,IACXsvH,EAAa9rH,GAAGxD,EAAIC,WAER,MAAdqvH,GAAuBxvH,KAAKqyH,cAC7BryH,KAAKqyH,aAAc,EAEnB7C,EAAW8U,cAEjB,oBC79BH,MAAMz/B,EAAkB,WAExBtlG,EAAOC,QAAU,cAAuCqlG,EACrDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,mBAAmBwlG,EAASxmG,KACtCQ,OAAOoyB,OACJ,CACG66C,UAAW,IAEdpsE,GAGT,CAEAO,KACG,MAAMP,EAAMF,KAAKE,IACXmnG,EAAKrnG,KAAK8B,GACV0hF,EAAOxjF,KACPsnG,EAAUtnG,KAAK8B,GAAG6Y,MAClBxU,EAAWnG,KAAKmG,SAChBymB,EAAK5sB,KAAK4rB,eACVkR,EAAYlQ,GAAIjB,WAAW/d,UAC9BzH,EAASqkE,eAAetjE,OACxBL,WACGgqI,EAAajkH,GAAIjB,WAAW/d,UAC/BzH,EAASqkE,eAAe33C,QACxBhsB,WACGiqI,EAAWlkH,GAAIjB,WAAW/d,UAC7BzH,EAASqkE,eAAe5hB,MACxB/hD,WACGkqI,EAAcnkH,GAAIjB,WAAW/d,UAChCzH,EAASqkE,eAAeS,SACxBpkE,WACGqoD,EAActiC,GAAIjB,WAAW/d,UAChCzH,EAASqkE,eAAeU,SACxBrkE,WACGmqI,EAAgBpkH,GAAIjB,WAAW/d,UAClCzH,EAASqkE,eAAeW,WACxBtkE,WACGoqI,EAAkBrkH,GAAIjB,WAAW/d,UACpCzH,EAASqkE,eAAeY,QACxBvkE,WACGqqI,EAAatkH,GAAIjB,WAAW/d,UAC/BzH,EAASqkE,eAAee,QACxB1kE,WACGsqI,EAAgBvkH,GAAIjB,WAAW/d,UAClCzH,EAASqkE,eAAegB,WACxB3kE,WACGuqI,EAAiBxkH,GAAIjB,WAAW/d,UACnCzH,EAASqkE,eAAea,YACxBxkE,WACGwqI,EAAczkH,GAAIjB,WAAW/d,UAChCzH,EAASqkE,eAAec,SACxBzkE,WACGyqI,EAAajqC,EAAGt7E,mBACnB/rB,KAAKmG,SAASslE,oBAEX8lE,EAAaD,GAAY3lH,WAAW/d,UACvCzH,EAASulE,uBAAuB36D,QAChClK,WACG2qI,EAAqBF,GAAY3lH,WAAW/d,UAC/CzH,EAASulE,uBAAuBN,QAChCvkE,WACG4qI,EAAcH,GAAY3lH,WAAW/d,UACxCzH,EAASulE,uBAAuB1tC,SAChCn3B,WACG6qI,EAAkB,GAExBryI,OAAOD,KAAK+G,EAASwlE,UAAU3nE,SAASI,IACN,IAA3B+B,EAASwlE,SAASvnE,IAEtBstI,EAAgBrtI,KAAK,CAClBxF,GAAI,GAAGuF,IACP1B,MAAO,GAAG0B,EAAIokD,OAAO,GAAGD,gBAAgBnkD,EAAI2O,MAAM,MACnD,IAGL,MAAMkzF,EAAMnmG,MAAMW,GAAG,CAClB,CACG8B,QAAS,EACTrB,KAAM,CACH,CAAER,KAAM,QAASK,MAAO,IAAKI,MAAO,2BACpC,CACGT,KAAM,SACNK,MAAO,IACP2B,MAAO1C,KAAKmB,MAAM,SAClBm7E,OAAkC,IAA1Bn2E,EAAS8lE,OAAOC,MACxB5qE,MAAO,KACJgmG,EAAQkS,QAAQt5G,EAAIosE,UAAU,GAGpC,CACG5rE,KAAM,SACNK,MAAO,IACP2B,MAAO1C,KAAKmB,MAAM,OAClBm7E,OAAgC,IAAxBn2E,EAAS8lE,OAAOE,IACxB7qE,MAAO,KACJgmG,EAAQiS,MAAMr5G,EAAIosE,UAAU,GAGlC,CACG5rE,KAAM,SACNK,MAAO,IACP2B,MAAO1C,KAAKmB,MAAM,OAClBm7E,OAAgC,IAAxBn2E,EAAS8lE,OAAOG,IACxB9qE,MAAO,KACJgmG,EAAQoS,MAAMx5G,EAAIosE,UAAW,CAAEjrE,WAAW,GAAO,GAGvD,CAAC,IAGP,CACGxC,GAAIqB,EAAIosE,UACR5rE,KAAM,YACNigB,KAAM,IAAIF,KACVmiB,SAAgC,IAAtBz8B,EAASy8B,SACnB+oC,SAAyC,IAA/BxlE,EAASwlE,SAASA,SAC5BmqC,SAAU,IAAIC,IAAI,CACf,CACGzpC,UAAU0pC,SAASC,QACnB,cAAwBq1B,QAAQt1B,SAASC,QACtC/wG,kBAAkBsS,GACf,GAAkB,MAAd85H,EAAoB,MAAO,CAAC,EAEhC,MAAM3nI,EAAO,CAAC,EAQd,OANAA,EAAK4nI,GAAc/5H,EAAIvJ,KACvBtE,EAAK6nI,GAAsBh6H,EAAI4zD,MAC/BzhE,EAAK8nI,GAAej6H,EAAIwmB,OAIjB,CAAEn/B,UAFcyyI,EAAWvpI,MAAM4nE,OAAOhmE,IAEzB9K,GACzB,CACAqG,eAAesS,GACZ,GAAU,MAANoV,EAAY,MAAO,CAAC,EAExB,MAAMjjB,EAAO,CAAC,EAgBd,OAdAA,EAAKmzB,GAAatlB,EAAIvJ,KACtBtE,EAAKknI,GAAc,IAAIpwH,KAAKjJ,EAAIm6H,YAChChoI,EAAKmnI,GAAY,IAAIrwH,KAAKjJ,EAAIo6H,UAC9BjoI,EAAKonI,GAAev5H,EAAIq6H,QACxBloI,EAAKulD,GAAe13C,EAAIs6H,UACxBnoI,EAAKqnI,GAAiBx5H,EAAI2zD,SAC1BxhE,EAAKsnI,GAAmBz5H,EAAI4zD,MAC5BzhE,EAAKynI,GAAkB55H,EAAIu6H,SAAW,aACtCpoI,EAAK0nI,GAAe75H,EAAIixC,OAAS,UACjC9+C,EAAKunI,GAAc15H,EAAI4xG,QACvBz/G,EAAKwnI,GAAiB35H,EAAIw6H,UAInB,CAAEnzI,UAFc+tB,EAAG7kB,MAAM4nE,OAAOhmE,IAEjB9K,GACzB,CACAqG,kBAGG,OAAkB,MAAdosI,EAA2B,UAEzB9tD,EAAK+nD,wBAAwB,IAAM+F,GAElCA,EAAW38G,UAAUj2B,KAAKO,IACvB,CACJJ,GAAII,EAAEJ,GACNoP,KAAMhP,EAAEsyI,GACRnmE,MAAOnsE,EAAEuyI,GACTxzG,OAAQ/+B,EAAEwyI,OAGnB,CACAvsI,aAAaqQ,GAGV,GAAU,MAANqX,EAAY,MAAO,SAEjB42D,EAAK+nD,wBAAwB,IAAM3+G,GAEzC,MAAM67B,QAAczoD,KAAKyoD,QACnBwpF,QAAiBjyI,KAAKiyI,WAE5B,OAAOrlH,EAAG+H,UAAUj2B,KAAKO,IACtB,IAAIqsE,EAAS7iB,EAAMz7B,MACfiyD,GAAMA,EAAEpgF,KAAOI,EAAEoyI,MAClBxyI,GACCwsE,EAAY4mE,EAASjlH,MACrBvgB,GAAMA,EAAE5N,KAAOI,EAAEmyI,MAClBvyI,GAcH,OAZiB,MAAbwsE,GAA+B,MAAVC,IACtBD,EAAYA,GAAa,aACzBC,EAASA,GAAU,WAUf,CACJzsE,GAAII,EAAEJ,GACNoP,KAAMhP,EAAE69B,GACR60G,WAAYrqC,EAAQ7mF,KAAK4/B,UACtB,oBADSinD,CAEVroG,EAAE4xI,IACJe,SAAUtqC,EAAQ7mF,KAAK4/B,UACpB,oBADOinD,CAERroG,EAAE6xI,IACJe,QAAS5yI,EAAE8xI,GACXe,UAAW7yI,EAAEiwD,GACbic,SAAUlsE,EAAE+xI,GACZ5lE,MAAOnsE,EAAEgyI,GACTc,QAAS1mE,EACT5iB,MAAO6iB,EACP89C,QAASnqH,EAAEiyI,GACXc,UAAW/yI,EAAEkyI,GACf,GAEP,CACAjsI,qBAAqBrG,SACZyyI,EAAWvpI,MAAMgO,OAAOlX,EACjC,CACAqG,kBAAkBrG,SACT+tB,EAAG7kB,MAAMgO,OAAOlX,EACzB,CACAqG,iBACG,MAAO,CACJ,CAAE+I,KAAM,aAAcpP,GAAI,eAC3BipB,OACC3hB,EAAS4lE,oBAAoBvjD,MAAM,MAAM9pB,KAAKO,IACpC,CACJJ,GAAII,EACJgP,KAAMhP,MAIlB,CACAiG,cACG,MAAO,CAAC,CAAErG,GAAI,UAAW6D,MAAO,YAAaolB,OAC1C3hB,EAAS6lE,SAASxjD,MAAM,MAAM9pB,KAAKO,IACzB,CACJJ,GAAII,EACJyD,MAAOzD,MAInB,CACAiG,qBAAqBrG,EAAI2Y,GACtB,GAAkB,MAAd85H,EAAoB,MAAO,CAAC,EAEhC,MAAM3nI,EAAO,CAAC,EAEdA,EAAK4nI,GAAc/5H,EAAIvJ,KACvBtE,EAAK6nI,GAAsBh6H,EAAI4zD,MAC/BzhE,EAAK8nI,GAAej6H,EAAIwmB,aAElBszG,EAAWvpI,MAAMouE,OAAOt3E,EAAI8K,EACrC,CACAzE,kBAAkBrG,EAAI2Y,EAAKkmE,EAAM/8D,GAC9B,GAAU,MAANiM,EAAY,MAAO,CAAC,EAExB,MAAMjjB,EAAO,CAAC,EAEdA,EAAKmzB,GAAatlB,EAAIvJ,KACtBtE,EAAKknI,GAAc,IAAIpwH,KAAKjJ,EAAIm6H,YAChChoI,EAAKmnI,GAAY,IAAIrwH,KAAKjJ,EAAIo6H,UAC9BjoI,EAAKonI,GAAev5H,EAAIq6H,QACxBloI,EAAKulD,GAAe13C,EAAIs6H,UACxBnoI,EAAKqnI,GAAiBx5H,EAAI2zD,SAC1BxhE,EAAKsnI,GAAmBz5H,EAAI4zD,MAC5BzhE,EAAKynI,GAAkB55H,EAAIu6H,SAAW,aACtCpoI,EAAK0nI,GAAe75H,EAAIixC,OAAS,UACjC9+C,EAAKunI,GAAc15H,EAAI4xG,QACvBz/G,EAAKwnI,GAAiB35H,EAAIw6H,gBAEpBplH,EAAG7kB,MAAMouE,OAAOt3E,EAAI8K,EAC7B,IAGN,CACG2iE,UAAU7kD,MAAM,YAChB,cAA6B6kD,UAAU7kD,MAAM,YAC1CzlB,SACG,MAAMkwI,EAAQpyI,MAAMkC,SAGpB,OAFAkwI,EAAMnxI,MAAQ,IACdmxI,EAAMhwI,QAAUwvI,EACTQ,CACV,IAGN,CACG5lE,UAAU7kD,MAAM,iBAChB,cAAiC6kD,UAAU7kD,MACxC,iBAEAzlB,SACG,MAAMmwI,EAAaryI,MAAMkC,SAEnBE,EAAUwvI,EAAgBhzI,KAAKO,GAClCI,OAAOoyB,OAAO,CAAErmB,KAAM,OAAOnM,EAAEJ,MAAQI,KAO1C,OAJIe,KAAKwrB,IAAIxpB,OAAOowI,UACjBD,EAAW3wI,KAAKA,KAAKI,KAAK,GAAG+H,KAAOzH,EAClCiwI,EAAW3wI,KAAKmI,KAAOzH,EAErBiwI,CACV,IAGN,CACG7lE,UAAU7kD,MAAM,sBAChB,cAAqC6kD,UAAU7kD,MAC5C,sBAEA4qH,UAAU1oI,GAEP7J,MAAMuyI,UAAU1oI,GAAQ,GAC3B,SASf,cAFOs8F,EAAItkG,KAEJskG,CACV,CAEA/gG,eACGpF,MAAMuK,SAEN,MAAMnK,EAAMF,KAAKE,IACXsvH,EAAa9rH,GAAGxD,EAAIC,WAER,MAAdqvH,GAAuBxvH,KAAKqyH,cAC7BryH,KAAKqyH,aAAc,EAEnB7C,EAAW8U,cAEjB,oBC1VH,MAAMz/B,EAAkB,WAExBtlG,EAAOC,QAAU,cAAiCqlG,EAC/CllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,aAAawlG,EAASxmG,KAChCQ,OAAOoyB,OACJ,CACG2xF,IAAK,GAELkvB,QAAS,GACTC,WAAY,GACZC,aAAc,GAEdC,gBAAiB,GACjBC,oBAAqB,GACrBC,0BAA2B,IAE9BzyI,IAINF,KAAKmwG,eACFnwG,KAAKmwG,gBACL9K,EACI59E,OAAOxU,GAAMA,EAAEwpD,kBACf/9D,KAAKuU,IACI,CACJvS,KAAMuS,KAIrB,CAEAxS,KACG,MAAMP,EAAMF,KAAKE,IACXmlG,EAAWrlG,KAAKU,KAChB2mG,EAAKrnG,KAAK8B,GACVwlG,EAAUD,EAAG1sF,MAEnB,IAAIsrF,EAAM,KAIVqB,EAAQ3lG,KAAK2lG,EAAQ7mG,GAAGg0F,KAAM,CAC3Bm+C,SAAU,UACV1rI,KAAM,cACNkE,KAAM,CAACoM,EAAKw2B,IACLx2B,EAAIpM,KAAKlF,OACH,CACJ,0DACAsR,EAAIpM,KACJ,aACD8C,KAAK,IAEH,CACJ,iEACAsJ,EAAI9U,MAAM8lD,OAAO,GAAGD,cACpB,WACDr6C,KAAK,MAIb,MAAMiiG,EAAiBnwG,KAAKmwG,eACtBhqG,EAAWnG,KAAKmG,SAEtB,GAAIgqG,EAAejqG,OAAS,EACzB,GAAIC,EAASsmE,UAAW,CAErB,MAAMomE,EAAY1iC,EAAezxG,KAAKkhI,IACnC,MAAMl/H,EAAOk/H,EAAGl/H,KAEhB,MAAO,CACJ7B,GAAI,GAAG6B,EAAK7B,UACZ6D,MAAOhC,EAAKS,MACZiK,KAAM1K,EAAKg7D,QAAUh7D,EAAKg7D,QAAU,GACtC,IAGJ,GAAIm3E,EAAU3sI,OAAQ,CAEnB,MAAMssI,EAAe,CAClB3zI,GAAIqB,EAAIsyI,aACR9vI,MAAO1C,KAAKmB,MAAM,iBAClBiK,KAAM,uBAIHmnI,EAAa,CAChB1zI,GAAIqB,EAAIqyI,WACR7vI,MAAO1C,KAAKmB,MAAM,eAClBiK,KAAM,uBACNkxE,QAAQ,GAIX,IAAIkN,EAAe,GAAG2mB,EAAe,GAAGzvG,KAAK7B,UAE7C,MAAMi0I,EAAYzrC,EAAGvtF,QACfw4H,EAAU,CACb5xI,KAAM,UACNiB,KAAM,cACN9C,GAAIqB,EAAIoyI,QACRxxI,OAAQqF,EAASrF,OACjBC,MAAOoF,EAASwmE,aAAexmE,EAASwmE,aAAe,EACvDlrE,QAAQ,EACRd,SAAUwF,EAASymE,WAAazmE,EAASymE,WAAa,OACtD3rE,IAAKkF,EAASumE,UAAY,aAAe,GACzC/iE,KAAMkpI,EAAU/qH,OAAO0qH,GACvBrwI,GAAI,CACD+H,YAAcrL,IAEX,GAAIA,IAAOqB,EAAIsyI,aAEZl+H,YAAW,KACR,MAAM+gH,EAAW3xH,GAAGxD,EAAIoyI,SAGxBjd,EAASt6G,OAAO7a,EAAIsyI,cAEpBnd,EAASj0G,IAAImxH,GAEbld,EAAS0d,SAGT1d,EAASzzB,OAAOpY,GAGhBspD,EAAU/4H,IACP,GAAG7Z,EAAIkjH,YACPiS,EAAS34C,WACX,GACD,QACC,GAAI79E,IAAOqB,EAAIqyI,WACnBj+H,YAAW,KACR,MAAM+gH,EAAW3xH,GAAGxD,EAAIoyI,SAGxBjd,EAASt6G,OAAO7a,EAAIqyI,YAEpBld,EAASj0G,IAAIoxH,GAEbnd,EAAS0d,SAGT1d,EAASzzB,OAAOpY,GAGhBspD,EAAU/4H,IACP,GAAG7Z,EAAIkjH,YACPiS,EAAS34C,WACX,GACD,OACC,CAEJ8M,EAAe3qF,EAIfA,EAAKA,EAAGgU,QAAQ,QAAS,IACzB,IAAIvQ,EAAOoB,GAAG7E,GACd,GAAIyD,EACDA,EAAKqC,MAAK,GAAO,OACb,CAEJ,IAAIsa,EAAM,sBAAsBjf,KAAKkH,SAASlH,KAAKnB,qDAAqD2qF,MACxGxpF,KAAK8B,GAAGqG,OAAO,YAAa8W,EAAK,CAAC,EACrC,CAIH,GAEHkkH,eAAgB,KACb6P,GAAW,EAEdp0D,cAAe,KACZo0D,GAAW,IAKdC,EAAY,CACfvyI,KAAM,YACN7B,GAAIqB,EAAIkjH,IACR8vB,WAAW,EACX1mE,SAAUrmE,EAASqmE,SACnBhqE,MAAO2tG,EAAezxG,KAAKgC,IACV,CACX7B,GAAI6B,EAAKA,KAAK7B,GAEd6B,KAAM,SACNkB,KAAM,OAKZO,GAAI,CACDgxI,aAAc,CAACC,EAAQC,KACpBrzI,KAAKqK,OAAOgpI,EAAO,IAKtBL,EAAY,WACf,MAAM3d,EAAW3xH,GAAGxD,EAAIoyI,SAGlBgB,EAAeje,GAAU9nH,MAAMknE,cAClC,iBAAiBv0E,EAAIsyI,kBAGpBc,GACDA,EAAa3pD,aACV,UACA,oBAAoBzpF,EAAIsyI,gBAG9B,MAAMe,EAAale,GAAU9nH,MAAMknE,cAChC,iBAAiBv0E,EAAIqyI,gBAGpBgB,GACDA,EAAW5pD,aACR,UACA,kBAAkBzpF,EAAIqyI,cAG5BltC,EAAS59E,OAAO/mB,IACb,MAAM4B,EAAO+yH,GAAU9nH,OAAOknE,cAC3B,iBAAiB/zE,EAAK7B,aAGpByD,GAILA,EAAKqnF,aACF,UACA,OAAOjpF,EAAKwG,KAAK2L,QAAQ,IAAK,OAAOnS,EAAK7B,MACvCwmG,EAASxmG,KAEd,GAEP,EAEA,IAAIw8D,EAAU,CAACi3E,EAASW,GAEI,UAAxB9sI,EAASymE,aACVvR,EAAU,CAAC43E,EAAWX,IAGzBrsC,EAAM,CACH/kG,KAAMm6D,EAEZ,MACG4qC,EAAM,CACHvlG,KAAM,SAEf,KAAO,CACJ,MAAM8B,EAAQ6iG,EACV59E,OAAO/mB,IAGL,GAFoBA,EAAK+7D,gBAEP,EACf,OAAO/7D,CACV,IAEFhC,KAAKgC,IACH,MAAM8yI,EAAQ,CACX30I,GAAI6B,EAAK7B,GAET6B,KAAM,SACNkB,KAAM,IAGT,IAAI6xI,EAAc,GAwBlB,OAnBMA,EAFF/yI,EAAKg7D,QACFv1D,EAAS0mE,UACI,CACX,mEACAnsE,EAAKg7D,QACL,iBACAh7D,EAAKS,MACL,UACD+M,KAAK,IAEO,CACX,kCACAxN,EAAKg7D,QACL,aACAh7D,EAAKS,OACN+M,KAAK,IAIMxN,EAAKS,MAEjB,CACJkiC,OAAQowG,EACRjyI,KAAMgyI,EACR,IAKJvtC,EADCzjG,EAAM0D,OACD,CACHtE,KAAM,CACH,CACGlB,KAAM,UACN7B,GAAIqB,EAAIkjH,IACR52C,SAAUrmE,EAASqmE,SACnB1rE,OAAQqF,EAASrF,OACjBwiH,OAAQ,CACLxiH,OAAQ,GACRa,KAAM,SACNV,IAAKkF,EAASumE,UAAY,aAAe,GACzCvqE,GAAI,CACDy8E,cAAe,KACZymB,EAAS59E,OAAO/mB,IACb,MAAM4B,EAAOoB,GACVxD,EAAIkjH,KACL71G,MAAMknE,cACL,eAAe/zE,EAAK7B,QAGlByD,GAELA,EAAKqnF,aACF,UACA,OAAOjpF,EAAKwG,QAAQxG,EAAK7B,MAAMwmG,EAASxmG,KAC1C,GACF,IAIXo0I,UAAW,CACR9wI,GAAI,CACDgxI,aAAc,CAACC,EAAQC,KACpBrzI,KAAKqK,OAAOgpI,EAAO,IAI5B7wI,MAAOA,KAOV,CACH9B,KAAM,SAEf,MAEAulG,EAAM,CACHvlG,KAAM,UAOZ,OAJAulG,EAAMnmG,MAAMW,GAAG,CAACwlG,WAETA,EAAItkG,KAEJskG,CACV,CAEA/gG,WAAWpD,SACFhC,MAAMuD,KAAKvB,GAEjB,MAAM5B,EAAMF,KAAKE,IACXwzI,EAAOhwI,GAAGxD,EAAIkjH,KACd/b,EAAKrnG,KAAK8B,GACVwlG,EAAUD,EAAG1sF,MAEf+4H,GAAMpsC,EAAQ7jG,OAAOiwI,EAAMpsC,EAAQ3jG,aAEvC,MAAM0hG,EAAWrlG,KAAKU,KACCV,KAAKmwG,eAEbnsG,SAAS47H,IAIrB5/H,KAAKoyB,SAAS,CACXC,QAASutG,EAAGl/H,KACZ4xB,UAAW,aACXC,SAAU,IAAIvQ,IAAMhiB,KAAK+kG,cAAc/iF,IACxC,IAILhiB,KAAKoyB,SAAS,CACXC,QAASgzE,EACT/yE,UAAW,YACXC,SAAU,IAAIvQ,IAAMhiB,KAAK2zI,aAAa3xH,KAIzC,MAAMqzG,EAAW3xH,GAAGxD,EAAIoyI,SAExB,IAAKjd,EAAU,OAEf,MAAM9pE,QAAc87C,EAAGvtF,QAAQxE,IAAI,GAAGpV,EAAIkjH,aAE1C,IAAK73D,EAAO,OAGZ,MAAMinF,EAAe,CAClB3zI,GAAIqB,EAAIsyI,aACR9vI,MAAO1C,KAAKmB,MAAM,iBAClBiK,KAAM,uBAIHmnI,EAAa,CAChB1zI,GAAIqB,EAAIqyI,WACR7vI,MAAO1C,KAAKmB,MAAM,eAClBiK,KAAM,uBACNkxE,QAAQ,GAIX+4C,EAASue,SAASroF,GAElB,MAAMsoF,EAAoBxe,EAAS3oG,QAAQxsB,EAAIsyI,eAAiB,KAC1DsB,EAAkBze,EAAS3oG,QAAQxsB,EAAIqyI,aAAe,KAGxDhnF,EAAMwoF,UACHF,GAAqBC,GAEtBze,EAASj0G,IAAImxH,GACRsB,GAAqBC,GAE7Bze,EAASj0G,IAAIoxH,EACnB,CAEAztC,WAAWz8B,GACR,MAAMorE,EAAOhwI,GAAG1D,KAAKE,IAAIkjH,KAEzBswB,GAAM1wD,aACNhjF,KAAKU,KAAKqkG,WAAWz8B,GACrBorE,GAAMzwD,cACT,CAEA0wD,UAAUK,GACP,MAAM3uC,EAAWrlG,KAAKU,KAChBuzI,EAAavwI,GAAGswI,GAKtB,GAFAh0I,KAAK6lI,aAAaxgC,EAAS3wF,QAEvB1U,KAAKmG,SAASsmE,UACf,GAAKwnE,EAAW5vD,YAMT3gF,GAAG1D,KAAKE,IAAIkjH,KAAKx+G,SAASovI,OANJ,CAC1B,MAAMlO,EAASvT,aAAY,KACpB0hB,EAAW5vD,aAAamuC,cAAcsT,GAE1CmO,EAAWtvI,MAAK,GAAO,EAAM,GAC7B,IACN,CACN,CAEAkhI,aAAanlI,GACV,MAAMwzI,EAAUxwI,GAAGhD,EAAK7B,IAEP,QAAb6B,EAAK0D,KAA8B,kBAAb1D,EAAK0D,KAC5B8vI,GAASvvI,MAAK,GAAO,GAEpBjE,EAAKgU,QACN1U,KAAK6lI,aAAanlI,EAAKgU,OAE7B,CAEArK,OAAOyzD,GACJ,MAAM59D,EAAMF,KAAKE,IAEjB,IAAIi0I,GAAmB,EAEvB,MAAM9e,EAAW3xH,GAAGxD,EAAIoyI,UAGnBx0E,GAAUu3D,IACZv3D,EAASu3D,EAASgO,gBAAgBxwH,QAAQ,QAAS,KAEtD,MAAMwyF,EAAWrlG,KAAKU,KACCV,KAAKmwG,eAEbnsG,SAAS47H,IAErB,MAAMz5F,EAAWk/D,EAAS59E,OAAO/mB,GACvBA,EAAK7B,KAAO+gI,EAAGl/H,KAAK7B,KAG9B,IAAI69D,EAAc,EAEdv2B,EAASjgC,SAAQw2D,EAAcv2B,EAAS,GAAGs2B,kBAG1CqB,IAAWq2E,GAAoBz3E,EAAc,IAC/CoB,EAAS8hE,EAAGl/H,KAAK7B,GAEjBs1I,GAAmB,GAItB,MAAMT,EAAOhwI,GAAGxD,EAAIkjH,KACdj9G,EAAWnG,KAAKmG,SAEtB,IAAKy5H,GAAIz/H,WAAay/H,GAAIl/H,MAAM7B,KAAOi/D,EAAQ,CAExC41E,GAAMtuI,cAAcsuI,EAAKtuI,aAAa,CAAEzD,KAAM,SAElDi+H,EAAGz/H,UAAYy/H,EAAGl/H,KAAKP,YAEvB,MAAM+zI,EAAUxwI,GAAGk8H,EAAGl/H,KAAK7B,IACrBwoG,EAAKrnG,KAAK8B,GACVwlG,EAAUD,EAAG1sF,MAEfxU,EAASsmE,UAEV66B,EAAQ7mG,GACL,CAEG5B,GAAI+gI,EAAGl/H,KAAK7B,GACZ6B,KAAM,aACNO,IAAK,0BACLO,KAAMo+H,EAAGz/H,UAAUM,MAEtByzI,GAIH5sC,EAAQ7mG,GACL,CAEG5B,GAAI+gI,EAAGl/H,KAAK7B,GACZ6B,KAAM,aACNO,IAAK,wBACLO,KAAMo+H,EAAGz/H,UAAUM,MAEtByzI,GAKNx3E,EAAckjE,EAAGl/H,KAAK+7D,gBAEtBmjE,EAAGz/H,UAAUkD,KAAKgkG,EAAI3qC,GAGtBpoD,YAAW,KAGRo/H,GAAMhsI,gBAAgB,GAOtB,GACN,CAGIk4H,GAAIl/H,MAAM7B,KAAOi/D,GAAU8hE,GAAIz/H,WAAWkK,QAC3Cu1H,EAAGz/H,UAAUkK,SAEZlE,EAASsmE,WAAamzD,GAAIl/H,MAAM7B,KAAOi/D,IACxCp6D,GAAGo6D,GAAQn5D,MAAK,GAAO,GACvB0wH,EAASzzB,OAAO,GAAG9jC,UACtB,GAEN,oBC/jBH,MAAM+mC,EAAkB,WAExBtlG,EAAOC,QAAU,cAAkCqlG,EAChDllG,YAAY0lG,EAAUxlG,EAAQK,GAC3BJ,MACGulG,EACAxlG,GAAU,cAAcwlG,EAASxmG,KACjCQ,OAAOoyB,OACJ,CACGxjB,KAAM,IAET/N,GAGT,CAEAO,KACG,MAAMP,EAAMF,KAAKE,IACXiG,EAAWnG,KAAKmG,SAEhBiuI,EAAU,CACbv1I,GAAIqB,EAAI+N,KACRvN,KAAM,WACNsoH,UAAW,GACX/nH,IAAK,qBACLS,YAAY,GAGXyE,EAASrF,OAAQszI,EAAQtzI,OAASqF,EAASrF,OAC1CszI,EAAQv7B,YAAa,EAE1B,MAAM5S,EAAMnmG,MAAMW,GAAG,CAAC2zI,IAItB,cAFOnuC,EAAItkG,KAEJskG,CACV,CAEA/4B,YAAYxqE,GACT,MAAMxC,EAAMF,KAAKE,IACXyN,EAAS3N,KAAKU,KAAKwsE,YAAYxqE,EAAOxC,EAAI+N,MAE1ComI,EAAQ3wI,GAAGxD,EAAI+N,MAEhBomI,IAELA,EAAM7vI,OAAO,WAAYmJ,GACzB0mI,EAAM5vI,UACT,CAEA4F,SACGvK,MAAMuK,SAGN,MAAM+0D,EAAWp/D,KAAK4rB,eAChBy5E,EAAWrlG,KAAKU,KAElB0+D,GAAoC,aAAxBimC,EAAS3wF,OAAOtQ,KAC7BihG,EAASjzE,SAAS,CACfC,QAAS+sC,EACT9sC,UAAW,eACXC,SAAU,IAAIvQ,IAAMhiB,KAAKktE,eAAelrD,KAG9ChiB,KAAKktE,aACR,iEC/DY,MAAMonE,UAAuB,IAS9BvmG,qBACR,MAAO,CAAC,CACX,CAaAnjB,2BACG,IAYIk4D,EAAQ,CACTv/E,UAAW,CAAC,GAGf,MAAO,CACJ9C,GAjBM,CACNC,KAAM,WACNimE,SAAU,SAgBVtjE,KAbSnB,IAET,IAAK,IAAIoB,KAAKw/E,EAAMv/E,UACjBu/E,EAAMv/E,UAAUD,GAAKpB,EAAQoB,IAAMw/E,EAAMv/E,UAAUD,EACtD,EAUAw/E,MAAOA,EAEb,CAEApsB,aAAavwD,GACVnG,KAAKmG,SAAWA,CACnB,CAEAouI,aACG,OAAOv0I,KAAKmG,UAAY,CAAC,CAC5B,CAiBAhG,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEd,IAYIijF,EAAQ,CACTv/E,UAAW,CAAC,GAGf,MAAO,CACJ9C,GAjBM,CACNC,KAAM,WACNimE,SAAU,SAgBVtjE,KAbSnB,IAET,IAAK,IAAIoB,KAAKw/E,EAAMv/E,UACjBu/E,EAAMv/E,UAAUD,GAAKpB,EAAQoB,IAAMw/E,EAAMv/E,UAAUD,EACtD,EAUAw/E,MAAOA,EAEb,wGC9FH,IAAI/iF,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEjC,MAAMk4F,UAA8B,IAOrC1/D,qBACR,MAAO,CACJyxB,SAAU,OAEhB,CAEA50C,yBAAyBhrB,EAAKC,GAC3B,IAAIK,EAAM,CACPs/D,SAAU,GAAG3/D,cAGZY,EAAK,CACN5B,GAAIqB,EAAIs/D,SACRt4D,KAAM,WACNxG,KAAM,aACNS,MAAOpB,EAAE,gBACT8B,WAAY7B,KAAK8B,GAAGC,WAAWC,SAASgb,iBACxC7a,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KACZD,GAAU1gF,EAAE,sBACb2D,GAAGxD,EAAIs/D,UAAU56D,SAAS,IAG7BrD,EAAOgC,UAAUsE,QAAQ,IAW9BtG,EAAS,CACVgC,UAAW,CACRsE,OAAQ,WACLS,QAAQC,KAAK,eAChB,GAGH0D,YAAa,CAACvL,EAAMyF,EAAW,CAAC,KAC7B,GAAY,MAARzF,EAAc,OAGlB,IAAI8zI,EAAY,CACb,CACG31I,GAAI,OACJ6D,MAAO3C,EAAE,uBAIX00I,EAAe/zI,EACfy8D,WACAt3C,OAAO7D,GACEA,EAAEyF,OAAOxU,GAEVA,GACS,QAATA,EAAE7O,KACF6O,EAAE2Y,gBACF3Y,EAAE2Y,eAAeD,YACjB1Y,EAAE2Y,eAAeD,WAAW9sB,IACzB6B,EAAKiF,QAAQQ,SAASO,aAE5B,GAAMR,SACT,GACFxH,KAAKsjB,IACI,CACJnjB,GAAImjB,EAAEnjB,GACN6D,MAAOsf,EAAE7gB,UAIlBqzI,EAAYA,EAAU1sH,OAAO2sH,GAE7B,IAAIpoB,EAAY3oH,GAAGxD,EAAIs/D,UACnB6sD,IACDA,EAAU7nH,OAAO,UAAWgwI,GAC5BnoB,EAAU7nH,OACP,QACA2B,EAASq5D,UAAYx/D,KAAK+tC,QAAQyxB,UAErC6sD,EAAU5nH,UACb,EAGH0H,YAAczL,IACX,IAAIyF,EAAWzF,EAAKyF,UAAY,CAAC,EAIjC,OAFAA,EAASq5D,SAAW97D,GAAGxD,EAAIs/D,UAAU1zD,WAE9B3F,CAAQ,GAIrB,MAAO,CACJ1F,GAAIA,EACJ4C,KArEUnB,IACV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAmEA2I,YAAa1K,EAAO0K,YACpBE,YAAa5K,EAAO4K,YAE1B,CAEAuqD,aAAavwD,EAAW,CAAC,GACtBnG,KAAKmG,SAAWnG,KAAKmG,UAAY,CAAC,EAClCnG,KAAKmG,SAASq5D,SACXr5D,EAASq5D,UAAYx/D,KAAKL,YAAYouC,QAAQyxB,QACpD,CAEAk1E,OAAO70I,EAAQD,GACZ,MAAO,CACJu8E,MAAOv8E,EAAI28B,KAAKn8B,OAAO,GAAGP,mBAC1B8F,MAAO9F,EAAO2oB,MAAM,KAAK,GACzBg+D,OAAQ5mF,EAAI28B,KAAKn8B,OAAO,GAAGP,0BAEjC,CAEAM,UAAUP,EAAKC,GAEZ,IAAIK,EAAMF,KAAK00I,OAAO70I,EAAQD,GAE1Ba,EAAK,GAET,GACGT,KAAKmG,SAASq5D,UACdx/D,KAAKmG,SAASq5D,UAAYx/D,KAAKL,YAAYouC,QAAQyxB,SACpD,CAGC,MAAM4wB,EAAS,qBAAqBpwF,KAAKmG,SAASq5D,YAAYt/D,EAAIyF,QAIlElF,EAAK,CACF5B,GAAIqB,EAAIsmF,OACR9lF,KAAM,SACNiB,KAAM,OACNyJ,KAAM,aACNrK,MAAO,GACPD,OAAQ,GACRG,IAAK,wCACLkB,GAAI,CACDy8E,cAAe,KACZl7E,GAAGxD,EAAIsmF,SACFj5E,MAAMknE,cAAc,UACrBkV,aAAa,UAAWyG,EAAO,GAI/C,CAEA,IAAI7uF,EAAS,CACVgC,UAAW,CACRm7H,WAAa3M,IACNruH,GAAGxD,EAAIi8E,QAAQz4E,GAAGxD,EAAIi8E,OAAOhM,OAAO,EAE3C9nE,SAAU,KACH3E,GAAGxD,EAAIi8E,QAAQz4E,GAAGxD,EAAIi8E,OAAOhM,SAE1B,GAEVwkE,cAAe,KACL,EAEVvyE,YAAa,KACH,GAIbv9D,gBAAkBC,IACf9E,KAAK40I,aAAe9vI,CAAW,EAGlC8jH,QAAUh8F,IACP,IAAI07C,EAAStoE,KAAKmG,SAASq5D,SACvB4I,EAAOpoE,KAAK40I,aAAa/uH,OAAO7D,GAAMA,EAAEnjB,IAAMypE,IAAQ,GAAM,GAEhE,OAAO/mE,EAAOszI,cAAczsE,EAAMx7C,EAAG,EASxCioH,cAAe,CAACzsE,EAAMx7C,IACZ,IAAIvd,SAAQ,CAAC/P,EAAS+W,KAC1B,GAAyB,MAArBrW,KAAK40I,aAAsB,OAAOt1I,IAEtC,GAAIoE,GAAGxD,EAAIi8E,OAER,OADAz4E,GAAGxD,EAAIi8E,OAAOx3E,OACPrF,IAIV,IAAIw1I,EAAY1sE,EAAK7xC,MAAM,KAAM,KAAM,CAAE4nC,gBAAgB,IACzD22E,EAAUj2I,GAAKmB,KAAK40I,aAAa9yI,GAAG0N,OAEpC,IAAIulI,EAAYD,EAAU30I,YACtBM,EAAKs0I,EAAUt0I,MAIhBq0I,EAAUrtH,OACNxU,GACEA,aAAa,KACbA,aAAa,MAChB,IACE,IAEEjP,SAAStD,KAEbA,aAAgB,IAAmBA,EAAKgU,OAAShU,GAClDyB,GAAG,SAAU6yI,IACZzzI,GAAQgC,WAAWm7H,WAAWsW,GAI1BtxI,GAAGxD,EAAIi8E,OACRz4E,GAAGxD,EAAIi8E,OAAOhM,QAEFnwE,KAAKqjH,mBACXlzC,OACT,GACD,IAGL,IAAI8kE,EAAgB,CACjBv0I,KAAM,SACN7B,GAAIqB,EAAIi8E,MACRt7E,OAAO,EACPF,SAAU,SAKVC,QAAQ,EACRG,MAAO2kB,SAAS1lB,KAAKmG,SAAS27D,aAAe,IAC7ChhE,OAAQ4kB,SAAS1lB,KAAKmG,SAAS47D,aAAe,IAAM,IACpD9gE,IAAK,oBACLD,KAAM,CACHN,KAAM,UACNO,IAAK,aACLC,KAAM,CACH,CACGR,KAAM,QACNS,MAAOinE,EAAKjnE,MACZF,IAAK,cACLG,MAAO,UAEV,CACGV,KAAM,SACNS,MAAOpB,EAAE,SACTsB,WAAW,EACXD,MAAO,SACPE,MAAO,WACQtB,KAAKqjH,mBACXlzC,OACT,KAIT3uE,KAAM,CACHd,KAAM,aACNe,QAAQ,EACRD,KAAMf,IAKZ+C,MAAM/C,GAAGw0I,GAAetwI,OAIxBowI,EAAU1xI,KAAKrD,KAAK40I,aAAa9yI,GADb,EAC8B,CAC/C48H,WAAYn9H,EAAOgC,UAAUm7H,WAC7BE,cAAer9H,EAAOgC,UAAU8E,SAChC+5D,YAAa7gE,EAAOgC,UAAU6+D,YAC9BuyE,cAAepzI,EAAOgC,UAAUoxI,gBAGnCI,EAAU1qI,SAEViK,YAAWpP,UACR3D,EAAO2zI,gBAAgBtoH,EAAIkoH,GAE3Bx1I,GAAS,GACT,IAAI,IAIb41I,gBAAiB,CAACtoH,EAAIw7C,KACnB,IAAKx7C,EAAI,OAET,IAAIpV,EAAMoV,EAAGjB,WACb,IAAKnU,EAAK,OAEV,IAAIs3G,EAAaliG,EAAGJ,YACfsiG,GAEL1mD,EAAK3gD,QAAQzjB,SAASiP,IACdA,GAAc,QAATA,EAAE7O,KAEZ6O,EAAEwU,QAAQzjB,SAASmxI,IAChB,GAAiB,WAAbA,EAAM/wI,KAAsC,MAAlB+wI,EAAMhvI,SAAkB,OAEtD,IAAIR,EAAQwvI,EAAMxvI,QAClB,GAAa,MAATA,EAAe,OAEnB,IAAIyvI,EAAUzvI,EAAMgB,eACpB,GAAe,MAAXyuI,GAAmBA,EAAQv2I,IAAM2Y,EAAI3Y,GAAI,OAE7C,IAAI8K,EAAO,CAAC,EACRmnB,EAAenrB,EAAMmrB,eAezB,GAdAnnB,EAAKmnB,GAAgB,CAClBjyB,GAAIiwH,EAAWjwH,KAIJ2Y,EAAIgtB,WAAa,IACvBxgC,SAAS4hC,KACbA,EAAI9+B,QAAU,IAAI9C,SAAS+C,IACzB4C,EAAKmnB,GAAc/pB,EAAEF,YAClBioH,EAAW/nH,EAAEF,WAAW,GAC5B,IAIDioH,EAAW7gH,KACZtE,EAAKmnB,GAAc7iB,KAAO6gH,EAAW7gH,KACrCtE,EAAKmnB,GAAcpuB,MAAQiH,EAAKmnB,GAAc7iB,SAC1C,CACJ,IAAIonI,EAAU,CAAC,EACfA,EAAQvkH,GAAgBg+F,EACxBnlH,EAAKmnB,GAAc7iB,KAAOtI,EAAM6a,OAAO60H,GACvC1rI,EAAKmnB,GAAcpuB,MAAQiH,EAAKmnB,GAAc7iB,IACjD,CAEA,IAAIijD,EAAOj+C,EAAEk9F,eAAeglC,EAAMt2I,IAClC,IAAKqyD,EAAM,OAEX,MAAMzwD,EAAuB,mBAAXywD,EAAKzwD,GAAmBywD,EAAKzwD,KAAOywD,EAAKzwD,GACrD69H,EAAU79H,GAAI69H,SAAW79H,GAAImB,OAAO,IAAI08H,QAE1CA,GAAS34H,EAAMf,SAASlB,GAAG46H,GAAU30H,EAAK,GAC/C,GACH,GAeR,MAAO,CACJlJ,GAAIA,EACJ4C,KAbSnB,IACT,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAExD,GAAI7C,EACD,IAAK,IAAI6C,KAAKpB,EACXzB,EAAG0B,GAAGmB,GAAKpB,EAAQoB,EAEzB,EAOAuB,gBAAiBtD,EAAOsD,gBACxB+jH,QAASrnH,EAAOqnH,QAChBisB,cAAetzI,EAAOszI,cAE5B,iEC7XH,IAAI90I,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEjC,MAAM88F,UAA+B,IAOtCtkE,qBACR,MAAO,CACJw0B,SAAU,OAEhB,CAEA33C,yBAAyBhrB,EAAKC,GAC3B,IAAIK,EAAM,CACPo1I,SAAU,GAAGz1I,cAGZY,EAAK,CACN5B,GAAIqB,EAAIo1I,SACRpuI,KAAM,WACNxG,KAAM,aACNS,MAAOpB,EAAE,aACT8B,WAAY7B,KAAK8B,GAAGC,WAAWC,SAASgb,iBACxC7a,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KACZD,GAAU1gF,EAAE,sBACb2D,GAAGxD,EAAIo1I,UAAU1wI,SAAS,IAG7BrD,EAAOgC,UAAUsE,QAAQ,IAW9BtG,EAAS,CACVgC,UAAW,CACRsE,OAAQ,WACLS,QAAQC,KAAK,eAChB,EACA65D,YAAa,KACH,GAIbn2D,YAAa,CAACvL,EAAMyF,EAAW,CAAC,KAC7B,GAAY,MAARzF,EAAc,OAClByF,EAASi8D,aAAc,EAGvB,IAAIoyE,EAAY,CACb,CACG31I,GAAI,OAEJ6D,MAAO3C,EAAE,wBAIdW,EAAKy8D,WAAWt3C,OAAM,KAAM,IAAM,IAAS,IAAI7hB,SAASge,IACjDA,GAELA,EAAEyF,OAAM,KAAM,IAAM,GAAMzjB,SAASiP,IAE7BA,GACS,QAATA,EAAE7O,KACF6O,EAAE2Y,gBACF3Y,EAAE2Y,eAAeD,YACjB1Y,EAAE2Y,eAAeD,WAAW9sB,IACzB6B,EAAKiF,QAAQQ,SAASO,YAEzB8tI,EAAUnwI,KAAK,CACZxF,GAAIoU,EAAE0V,aACNjmB,MAAO,GAAGsf,EAAE7gB,WAAW8R,EAAE9R,SAE/B,GACD,IAGL,IAAIkrH,EAAY3oH,GAAGxD,EAAIo1I,UACnBjpB,IACDA,EAAU7nH,OAAO,UAAWgwI,GAC5BnoB,EAAU7nH,OACP,QACA2B,EAASo8D,UAAYviE,KAAK+tC,QAAQw0B,UAErC8pD,EAAU5nH,UACb,EAGH0H,YAAczL,IACX,IAAIyF,EAAWzF,EAAKyF,UAAY,CAAC,EAE7BkmH,EAAY3oH,GAAGxD,EAAIo1I,UAEnB9rD,GADe6iC,EAAU5pC,WACIzgF,OAAOR,KAAKmI,MAAQ,IAAIf,QACrD4oC,GAAQA,EAAI3yC,IAAMwtH,EAAUvgH,aAC9B,GAKF,OAJI09E,IACDrjF,EAASo8D,SAAWinB,EAAa3qF,IAG7BsH,CAAQ,GAIrB,MAAO,CACJ1F,GAAIA,EACJ4C,KA9EUnB,IACV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EA4EA2I,YAAa1K,EAAO0K,YACpBE,YAAa5K,EAAO4K,YAE1B,CAEAuqD,aAAavwD,EAAW,CAAC,GACtBnG,KAAKmG,SAAWnG,KAAKmG,UAAY,CAAC,EAClCnG,KAAKmG,SAASo8D,SACXp8D,EAASo8D,UAAYviE,KAAKL,YAAYouC,QAAQw0B,QACpD,CAEApiE,UAAUP,EAAKC,GAQZG,KAAK00I,OANL,SAAgB70I,EAAQD,GACrB,MAAO,CACJu8E,MAAOv8E,EAAI28B,KAAKn8B,OAAO,GAAGP,qBAC1B8F,MAAO9F,EAAO2oB,MAAM,KAAK,GAE/B,EAIA,IAAI0oC,EAAOpxD,MAAMK,UAAUP,EAAKC,GAmBhC,OAjBAqxD,EAAK03D,QAAU,KACZ,IACI5oH,KAAK40I,eACL50I,KAAKmG,SAASo8D,UACfviE,KAAKmG,SAASo8D,UAAYviE,KAAKL,YAAYouC,QAAQw0B,SAEnD,OAAOlzD,QAAQ/P,UAElB,IAAI0K,EAAOhK,KAAK40I,aAAavsH,WAAWroB,KAAKmG,SAASo8D,UACtD,IAAKv4D,EAAM,OAAOqF,QAAQ/P,UAE1B,IAAI8oE,EAAOp+D,EAAKgzD,aAChB,OAAKoL,EAEElX,EAAK2jF,cAAczsE,GAFR/4D,QAAQ/P,SAEK,EAG3B4xD,CACV,iEChJH,MAAMluC,EAAY,EAAQ,OAM1B,IAAIjjB,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhD,MAAMggI,UAA2BvyH,EAC9BrjB,cACGG,MAAM,CAAC,SAAUgC,GACpB,CAEA40D,aAAavwD,GACVrG,MAAMkG,WAAWG,GACjBnG,KAAK42B,QAAUzwB,EAASywB,OAC3B,CAEA29G,aACG,IAAI/8H,EAAM1X,MAAM+F,QAEhB,OADA2R,EAAIof,QAAU52B,KAAK42B,QACZpf,CACV,EAUY,MAAMwwF,UAAiC,IACnDroG,YAAYmC,EAAIjC,GACbC,MAAMD,EAAQ,CACX21I,gBAAiB,GACjBC,YAAa,GACbC,0BAA2B,GAC3BC,iBAAkB,GAClBC,kBAAmB,GACnBC,kBAAmB,KAGtB71I,KAAK8B,GAAKA,EACV9B,KAAKH,OAASA,EACdG,KAAKgF,OAAS,KAGdhF,KAAK81I,qBAAuB,KAI5B91I,KAAKghI,UAAYhhI,KAAK8B,GAAGuzB,iBAAiB,GAAGr1B,KAAKE,IAAIC,oBAKtDH,KAAK+1I,cAAgB/1I,KAAK8B,GAAGuzB,iBAC1B,GAAGr1B,KAAKE,IAAIC,yBAMfH,KAAKg2I,0BAA6BtzI,IAC/B,IAAIijG,EAAcjjG,EAAM2e,OAAS,GAQjCrhB,KAAKi2I,iBAAiBhoH,GACZjuB,KAAKghI,UAAU17H,QAAQ2oB,IAC9B03E,EAAY,EAGlB3lG,KAAKk2I,8BAAgC,KAClCl2I,KAAKi2I,iBAAiB,EAGzBj2I,KAAKksB,aAAc,CAGtB,CAQW6hB,qBACR,MAAO,CACJw3B,aAAc,EAQdC,mBAAoB,UAOpBC,gBAAiB,EAmBvB,CAOA/O,aAAavwD,IACVA,EAAWA,GAAY,CAAC,GAEfo/D,kBAC0B,IAAzBp/D,EAASo/D,aACXp/D,EAASo/D,aACTyiC,EAAyBj6D,QAAQw3B,aAEzCp/D,EAASs/D,qBAC6B,IAA5Bt/D,EAASs/D,gBACXt/D,EAASs/D,gBACTuiC,EAAyBj6D,QAAQ03B,gBAEzCzlE,KAAKmG,SAAWA,CACnB,CASApB,WAAWC,GACRhF,KAAKgF,OAASA,EAEVhF,KAAKghI,WAENhhI,KAAKghI,UAAU1rG,WAAWtwB,EAAO8B,UAGhC9G,KAAK+1I,eAEN/1I,KAAK+1I,cAAczgH,WAAWtwB,EAAO8B,SAE3C,CAEAy/F,SAAS7lG,GACNV,KAAKU,KAAOA,CACf,CAGAD,KACG,IAAI+iF,EAAOxjF,KACPE,EAAMF,KAAKE,IAEf,MAAO,CACJrB,GAAIqB,EAAIu1I,YACR9zI,KAAM,QACND,YAAY,EACZa,QAAS,EACT+5E,QAAQ,EACR16E,KAAM,CACH,CACG/C,GAAIqB,EAAIw1I,0BACRp5D,QAAQ,EACRp7E,KAAM,CACH,CACGrC,GAAIqB,EAAIy1I,iBACRj1I,KAAM,OACNy+E,YAAap/E,EAAE,2CACfoC,GAAI,CACDk/E,gBAAiB,KACdrhF,KAAKi2I,iBAAiB,IAI/B,CACGv1I,KAAM,SACNO,IAAK,gBACLF,MAAO,GACPY,KAAM,OACNyJ,KAAM,cACN9J,MAAO,WACJ,IAAIyiF,EAAQrgF,GAAGxD,EAAIy1I,kBACnB5xD,EAAMn/E,SAAS,IACfm/E,EAAM5kE,QACN4kE,EAAM+qD,UAAU,kBACnB,KAIT,CACGjwI,GAAIqB,EAAIs1I,gBACR90I,KAAM,SACNO,IAAK,gBACLyB,MAAO3C,EAAE,cACTuB,MAAO,KACJtB,KAAK+1I,cAAcz2D,MAAM57E,GAAGxD,EAAIs1I,iBAAiBhuC,UAAW,CACzDl3E,IAAK,UACN,GAGR,CACG5vB,KAAM,UACN7B,GAAIqB,EAAI01I,kBACR30I,IAAK,kBACLq7E,QAAQ,EACRp7E,KAAM,CACH,CACGR,KAAM,SACNO,IAAK,gBACLpC,GAAIqB,EAAI21I,kBACR10I,MAAOpB,EAAE,gBACTqL,KAAM,YACNzJ,KAAM,OAENN,WAAW,EACXC,MAAO,WACJkiF,EAAK2yD,aACR,MAMlB,CAEAjxI,WAAWpD,GACJA,IACD9B,KAAK8B,GAAKA,GAGb,IAAI5B,EAAMF,KAAKE,IA+Bf,OArBAF,KAAKghI,UAAU39H,OACfrD,KAAKghI,UAAUhqG,eAAe,UAAWh3B,KAAKg2I,2BAC9Ch2I,KAAKghI,UAAU7+H,GAAG,UAAWnC,KAAKg2I,2BAElCh2I,KAAK+1I,cAAc1yI,OACnBrD,KAAK+1I,cAAc/+G,eAChB,UACAh3B,KAAKk2I,+BAERl2I,KAAK+1I,cAAc5zI,GAAG,UAAWnC,KAAKk2I,+BACtCl2I,KAAK+1I,cAAc/+G,eAChB,OACAh3B,KAAKk2I,+BAERl2I,KAAK+1I,cAAc5zI,GAAG,OAAQnC,KAAKk2I,+BAEnCxyI,GAAGxD,EAAIu1I,cAAc/wI,OACrBhB,GAAGxD,EAAIs1I,kBAAkB9wI,OACzBhB,GAAGxD,EAAI01I,oBAAoBlxI,OAC3BhB,GAAGxD,EAAIw1I,4BAA4BhxI,OAE3B1E,KAAKmG,SAASo/D,cACnB,KAAK,EACF,MACH,KAAK,EACF,OAAQvlE,KAAKmG,SAASq/D,oBACnB,IAAK,OACF9hE,GAAGxD,EAAIs1I,kBAAkB7wI,OACzBjB,GAAGxD,EAAIu1I,cAAc9wI,OACrB,MACH,IAAK,UACFjB,GAAGxD,EAAIu1I,cAAc/wI,OAG3B,MACH,KAAK,EACFhB,GAAGxD,EAAIu1I,cAAc9wI,OACrB,IAAIyxI,EAAqB1yI,GAAGxD,EAAI01I,mBAC5BQ,IACDA,EAAmBzxI,OAGf3E,KAAKmG,UAAUkwI,aACfr2I,KAAKmG,SAASkwI,YAAc,IAAIryI,SAASsyI,IACvC,IAAIC,EAAO,IAAIhB,EACfgB,EAAK7/E,aAAa4/E,GAClB,IAAIE,EAAmB,CACpB91I,KAAM,SACNO,IAAK,gBACLE,MAAOo1I,EAAKp1I,MACZiK,KAAM,eACNzJ,KAAM,OAENN,WAAW,EACXC,MAAO,KACJtB,KAAKoP,KAAK,cAAe,KAAMmnI,EAAK3/G,QAAQ,GAIlDw/G,EAAmBtrI,QAAQ0rI,EAAiB,KAIrD,MACH,KAAK,EACF9yI,GAAGxD,EAAIw1I,4BAA4B/wI,OACnCjB,GAAGxD,EAAIu1I,cAAc9wI,OAG9B,CAEAghG,cACG,IAAI8wC,EAAiB,KAErB,OAAQz2I,KAAKmG,SAASq/D,oBACnB,IAAK,OACFixE,EAAiBz2I,KAAK+1I,cAAcjqI,WACpC,MACH,IAAK,UACF2qI,EAAiBz2I,KAAKghI,UAAUl1H,WAItC,OAAO2qI,CACV,CAOAzvC,YAkBG,OAhB4B,MAAxBhnG,KAAK02I,kBAG2B,GAA9B12I,KAAKmG,SAASo/D,cACwB,UAAtCvlE,KAAKmG,SAASs5G,qBAEdz/G,KAAK02I,gBAAkB,KACb,EAIV12I,KAAK02I,gBAAkB,KACb,GAIT12I,KAAK02I,eACf,CAOAT,kBACG,IAAIU,EAAc32I,KAAKolB,WAAWplB,KAAK81I,sBACnCW,EAAiBz2I,KAAK2lG,cAEtBixC,EAAa,EACbH,GAAgBp1H,OAAOnb,QACxB0wI,EAAaH,GAAgBp1H,OAAOnb,OAChCywI,IACDC,IACAH,EAAiB,CACd3sH,KAAM,MACNzI,MAAO,CAACo1H,EAAgBE,MAI9BF,EAAiBE,EAGpB32I,KAAKoP,KAAK,cAAe,KAAMqnI,GAEb,GAAdG,IAAiBA,GAAa,GAClC,MAAMC,EAAUnzI,GAAG1D,KAAKE,IAAIs1I,iBACxBqB,IACDA,EAAQ70I,OAAOywF,MAAQmkD,EACvBC,EAAQpyI,UAEd,CAEA0xI,cACGn2I,KAAKi2I,iBAAgB,KAAM,GAAM,GACpC,CAUA/pC,mBAAmBx2F,EAAS,MACzB1V,KAAK81I,qBAAuBpgI,EAC5B1V,KAAKi2I,iBACR,CAUA7wH,WAAW0xH,GACR,IAAIphI,EAMJ,KAJGA,EADCohI,IAGSpzI,GAAG1D,KAAKE,IAAIy1I,mBAAmB7pI,YAAc,IAAIy7B,QAEjD,OAAO,KAGpB,IAAIwvG,EAAQrhI,EAAO6xB,OAAOlvB,cAAcmQ,MAAM,KAG9C,IAAIwuH,EAAW,GAEXnzI,EAAY7D,KAAKgF,QAAQ8B,UAAY,GA6CzC,OA3CAiwI,EAAM/yI,SAAS+7B,IACZ,IAAIk3G,EAAa,GAIjBpzI,EAAUG,SAAS+C,IAChB,GAAIA,EAAE8pC,oBACH,OAAQ9pC,EAAE3C,KACP,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,QACF6yI,EAAW5yI,KAAK,CACbD,IAAK2C,EAAElI,GACPkxB,KAAM,WACNrtB,MAAOq9B,IAEV,MAEH,IAAK,OACYh5B,EAAE7E,UACR8B,SAAShF,IACVA,EAAEiP,KAAKf,QAAQ6yB,IAAM,GACtBk3G,EAAW5yI,KAAK,CACbD,IAAK2C,EAAElI,GACPkxB,KAAM,SACNrtB,MAAO1D,EAAEH,IAEf,IAIZ,IAGCo4I,EAAW/wI,OAAS,GACrB8wI,EAAS3yI,KAAK,CACXylB,KAAM,KACNzI,MAAO41H,GAEb,IAGCD,EAAS9wI,OAAS,EACD,CACf4jB,KAAM,MACNzI,MAAO21H,GAIH,IAEb,CAEApvC,UAAUr6F,GAEPvN,KAAKghI,UAAU1hD,MAAM/xE,EAAO,KAAM,CAAE+iB,IAAK,UAC5C,4EC5gBH,MAAM4mH,UAAwC,IAC3Cv3I,YAAYqmG,EAAgBnmG,GAEzBC,MADWD,GAAU,6BACT,CAAC,GAEbG,KAAKgmG,eAAiBA,EACtBhmG,KAAK8B,GAAKkkG,EAAelkG,GAEzB9B,KAAKU,KAAO,KAIZV,KAAK4rB,eAAiB,IAKzB,CAEAnrB,KACG,MAAO,CAAC,CACX,CAEA4C,KAAKnB,GACEA,EAAQxB,OAAMV,KAAKU,KAAOwB,EAAQxB,MAElCwB,EAAQ0pB,iBAAgB5rB,KAAK4rB,eAAiB1pB,EAAQ0pB,eAC7D,CAEAm5E,WAAWz8B,EAAQ95C,GACZxuB,KAAK4rB,gBACN5rB,KAAK4rB,eAAemqD,KAAK,gBAAgB,KACtC/1E,KAAKU,MAAMqkG,WAAWz8B,EAAO,IAEhCtoE,KAAK4rB,eAAeQ,UAAUoC,IAG9BxuB,KAAKU,MAAMqkG,WAAWz8B,EAE5B,EAGY,MAAM4/B,UAA+B,IAYjD/nG,UAAUumH,GAAQ,GACf,IAAIvmH,EAAY,IAAI+2I,EAAgCl3I,MAGpD,GAAI0mH,EAAO,CACR,IAAIC,EAAexmH,EACnBA,EAAY,CACTM,GAAIkmH,EAAalmH,KACjB4C,KAAM,IAAIkS,IACAoxG,EAAatjH,QAAQkS,GAE/BlL,OAAQ,IAAIkL,IACFoxG,EAAat8G,YAAYkL,GAEnCwvF,WAAY,IAAIxvF,IACNoxG,EAAa5hB,cAAcxvF,GAG3C,CAEA,OAAOpV,CACV,cC5EHZ,EAAOC,QAAU,MACdG,YAAYsjB,EAAYje,EAAQmyI,GAC7Bn3I,KAAKm3I,aAAeA,GAAgB,eASpCn3I,KAAKgF,OAASA,EAEdhF,KAAKw2E,QAAQvzD,GAAc,CAAC,GAG5BjjB,KAAKgF,OAAOw6B,UAAUx/B,KAAMA,KAAM,CAAC,SAItC,CAMA4qB,cACG,MAAO,MACV,CAQA4rD,QAAQ7sE,GACL3J,KAAKnB,GAAK8K,EAAK9K,IAAMmB,KAAKgF,OAAOlD,GAAG0N,OACpCxP,KAAKo3I,cAAgB1jI,KAAKuD,MAAMtN,EAAKytI,gBAAiB,GACtDp3I,KAAKulB,aACF5b,EAAK4b,cACLvlB,KAAKgF,OAAOy6B,oBAAoB,CAAC,SAAU,CACxCt+B,MAAOnB,KAAKm3I,cAErB,CAOAtxI,QAEG,OADA7F,KAAKgF,OAAO46B,YAAY5/B,KAAMA,KAAM,CAAC,UAC9B,CACJnB,GAAImB,KAAKnB,GACT0mB,aAAcvlB,KAAKulB,aACnB6xH,cAAep3I,KAAKo3I,cAE1B,CAEAjhE,OAAOz1E,GACJ,IAAK,IAAI0D,KAAO1D,EACbV,KAAKoE,GAAO1D,EAAK0D,EAEvB,mBChEH,MAAMizI,EAA4B,EAAQ,OACpCC,EAA8B,EAAQ,OACtCC,EAA6B,EAAQ,MAE3C,IAAIC,EAAY,CAAC,EACjBA,EAAUH,EAA0B11I,QAAU01I,EAC9CG,EAAUF,EAA4B31I,QAAU21I,EAChDE,EAAUD,EAA2B51I,QAAU41I,EAE/C,MAAME,EAAoB,CACvBC,mBAAet/H,EACfrO,KAAM,IAGTxK,EAAOC,QAAU,MACdG,YAAYsjB,EAAYje,EAAQlD,GAE7B9B,KAAKgF,OAASA,EACdhF,KAAK8B,GAAKA,EAEV9B,KAAKw2E,QAAQvzD,EAChB,CAQAuzD,QAAQ7sE,GAUL,GARAA,EAAKy+B,qBACFz+B,EAAKy+B,sBAAwBz+B,EAAKy+B,qBAAqBr+B,KAClDJ,EAAKy+B,qBACLqvG,EAOU,IADf9tI,EAAKy+B,qBAAqBr+B,KAAKnB,QAAQqK,GAAMA,EAAEmkI,gBAC3ClxI,OACL,MAKoC,IAAxByD,EAAKigB,uBACiC,IAAnCjgB,EAAKigB,gBAAgBxd,aAC7BzC,EAAKigB,gBAAgBxd,WAAa,SACe,IAAzCzC,EAAKigB,gBAAgBC,mBAC7BlgB,EAAKigB,gBAAgBC,iBAAmB,SACO,IAAvClgB,EAAKigB,gBAAgBqa,iBAC7Bt6B,EAAKigB,gBAAgBqa,eAAiB,SACO,IAArCt6B,EAAKigB,gBAAgBsa,eAC7Bv6B,EAAKigB,gBAAgBsa,aAAe,KAI1C,IAAIyzG,EAAiBhuI,EAAKigB,iBAAmB,CAC1Cxd,WAAY,GACZyd,iBAAkB,GAClBoa,eAAgB,GAChBC,aAAc,IAEjByzG,EAAeP,eAAgB,EAE/B,IAAIQ,EAAc,IAAIP,EACnBM,EACA33I,KAAKgF,QAER2E,EAAKy+B,qBAAqBr+B,KAAKqpB,QAAQwkH,EAC1C,CAEA53I,KAAK63I,YAAYluI,EAAKy+B,sBAEtBpoC,KAAK03I,cAAgB/tI,EAAKy+B,qBAAqBsvG,cAC1C13I,KAAK03I,gBACP13I,KAAK03I,cAAgB13I,KAAK+J,OAAO,GAAGlL,GAE1C,CAaAgH,QACG,MAAO,CACJ6xI,cAAe13I,KAAK03I,cACpB3tI,KAAM/J,KAAK83I,cAEjB,CAEA/tI,KAAKsG,EAAK,MAAM,IACb,OAAOrQ,KAAK0nB,OAAO9e,OAAOyH,EAC7B,CAEAwnI,YAAYE,GACT/3I,KAAK0nB,OAAS,GACdqwH,EAAahuI,KAAK/F,SAAStD,IACxBV,KAAK8K,QAAQpK,GAAM,EAAM,GAE/B,CAEAo3I,cACG,IAAIrwH,EAAQ,GAKZ,OAJAznB,KAAK0nB,OAAO1jB,SAAStD,IAClB+mB,EAAMpjB,KAAK3D,EAAKmF,QAAQ,IAGpB4hB,CACV,CAEAuwH,eAAep6G,GACZ59B,KAAK03I,cAAgB95G,CACxB,CAEAwI,iBACG,OAAOpmC,KAAK+J,MAAMkJ,GACRA,EAAEpU,IAAMmB,KAAK03I,gBACpB,EACN,CAEA5sI,QAAQpK,EAAMiH,GAAO,GAClB,IAAIyhB,EAAU,IAAIouH,EAAU92I,EAAKiB,MAAMjB,EAAMV,KAAKgF,QAKlD,OAJAhF,KAAK0nB,OAAOrjB,KAAK+kB,GACbzhB,GACD3H,KAAKgF,OAAO2C,OAERyhB,CACV,CAEA/d,WAAW3K,GACR,IAAIu3I,EAAgBj4I,KAAK0nB,OAAOxa,QAAQxM,GACxCV,KAAK0nB,OAAO1b,OAAOisI,EAAe,GAC9Bv3I,EAAK7B,KAAOmB,KAAK03I,gBAClB13I,KAAK03I,cAAgB13I,KAAK0nB,OAAO,GAAG7oB,IAEvCmB,KAAKgF,OAAO2C,MACf,CAEAuwI,WAAWC,EAAcz3I,GACtB,IAAI0oB,EACJ,GAAI1oB,EAAKiB,OAASw2I,EAAax2I,KAC5Bw2I,EAAahiE,OAAOz1E,GACpB0oB,EAAU+uH,MACN,CACJ/uH,EAAU,IAAIouH,EAAU92I,EAAKiB,MAAMjB,EAAMV,KAAKgF,QAC9C,IAAIizI,EAAgBj4I,KAAK0nB,OAAOxa,QAAQirI,GACxCn4I,KAAK0nB,OAAO1b,OAAOisI,EAAe,EAAG7uH,GACjCppB,KAAK03I,gBAAkBS,EAAat5I,KACrCmB,KAAK03I,cAAgBtuH,EAAQvqB,GAEnC,CAEA,OADAmB,KAAKgF,OAAO2C,OACLyhB,CACV,cCpKH7pB,EAAOC,QAAU,MACdG,YAAYuC,GACTlC,KAAKgJ,SACF9G,EAAQ8G,UACR,WACG,MAAO,EACV,EACHhJ,KAAKqD,KAAOnB,EAAQmB,MAAQ,WAAa,EACzCrD,KAAKmhF,SACFj/E,EAAQi/E,UACR,WACG,OAAO,CACV,EACHnhF,KAAK0F,OACFxD,EAAQwD,QACR,WACG,MAAO,CAAC,CACX,EACH1F,KAAK8iF,MAAQ5gF,EAAQ4gF,OAAS,CAAC,CAClC,mBClBH,MAAMs1D,EAAwB,EAAQ,OAChCC,EAAiC,EAAQ,OAEzCC,EAAsB,EAAQ,OAE9BC,EAAc,EAAQ,MACtB5N,EAAgB,EAAQ,OACxB6N,EAAgB,EAAQ,MACxBC,EAAkB,EAAQ,OAEhC,IAAI14I,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhD,IAAIkxB,EAAgB,CACjBv/B,KAAM,gBACN2iB,iBAAkB,GAClBzd,WAAY,GACZ2E,MAAO,OACPwtC,UAAW,KACXC,QAAS,OACTk6F,SAAU,OACVC,SAAU,OACVptE,MAAO,QAGVhsE,EAAOC,QAAU,MAAM+3I,UAAmC,EAGvD53I,YAAYsjB,EAAYje,GACrBlF,MAAMmjB,EAAYje,EAAQ,QAU7B,CAMA4lB,cACG,MAAO,OACV,CAKAA,cACG,MAAO,aACV,CAEAA,iBAAiBhrB,EAAKC,GACnB,IAAIK,EAAM,CACP6Q,MAAOnR,EAAIQ,OAAO,GAAGP,qBACrB0+C,UAAW3+C,EAAIQ,OAAO,GAAGP,yBACzB2+C,QAAS5+C,EAAIQ,OAAO,GAAGP,uBACvB64I,SAAU94I,EAAIQ,OAAO,GAAGP,wBACxB84I,SAAU/4I,EAAIQ,OAAO,GAAGP,wBACxB0rE,MAAO3rE,EAAIQ,OAAO,GAAGP,sBAGpB+4I,EAAiB,CAAC5zI,EAAQtE,KAC3B,IAAIyhC,EAAan9B,EACb8B,QAAQC,GAAMA,aAAawxI,IAC3B75I,KAAI,EAAGG,KAAIsC,YAAY,CAAGtC,KAAI6D,MAAOvB,MAGzCuC,GAAGxD,EAAIq+C,WAAW/5C,OAAO,UAAW29B,GAGpCA,EAAW/O,QAAQ,CAChBv0B,GAAI,OACJ6D,MAAO3C,EAAE,yBAIZ2D,GAAGxD,EAAIs+C,SAASh6C,OAAO,UAAW29B,GAGlC,IAAI02G,EAAe7zI,EACf8B,QAAQC,GAAMA,aAAa4jI,IAC3BjsI,KAAI,EAAGG,KAAIsC,YAAY,CAAGtC,KAAI6D,MAAOvB,MAGzC03I,EAAazlH,QAAQ,CAClBv0B,GAAI,OACJ6D,MAAO3C,EAAE,2BAEZ2D,GAAGxD,EAAIw4I,UAAUl0I,OAAO,UAAWq0I,GAGnC,IAAIC,EAAgB9zI,EAChB8B,QAAQC,GAAMA,aAAa4jI,IAC3BjsI,KAAI,EAAGG,KAAIsC,YAAY,CAAGtC,KAAI6D,MAAOvB,MAGzC23I,EAAc1lH,QAAQ,CACnBv0B,GAAI,OACJ6D,MAAO3C,EAAE,2BAEZ2D,GAAGxD,EAAIy4I,UAAUn0I,OAAO,UAAWs0I,GAGnC,IAAIC,EAAe/zI,EACf8B,QACGC,GAAMA,aAAayxI,GAAiBzxI,aAAa0xI,IAEpD/5I,KAAI,EAAGG,KAAIsC,YAAY,CAAGtC,KAAI6D,MAAOvB,MAGzC43I,EAAa3lH,QAAQ,CAClBv0B,GAAI,OACJ6D,MAAO3C,EAAE,2BAEZ2D,GAAGxD,EAAI6Q,OAAOvM,OAAO,UAAWu0I,GAChCr1I,GAAGxD,EAAIqrE,OAAO/mE,OAAO,UAAWu0I,GAG5Br4I,GAAQA,EAAKqQ,QACdrN,GAAGxD,EAAI6Q,OAAOvM,OAAO,QAAS9D,EAAKqQ,OACnCrN,GAAGxD,EAAI6Q,OAAOtM,WAGb/D,GAAQA,EAAK69C,YACd76C,GAAGxD,EAAIq+C,WAAW/5C,OAAO,QAAS9D,EAAK69C,WACvC76C,GAAGxD,EAAIq+C,WAAW95C,WAGjB/D,GAAQA,EAAK89C,UACd96C,GAAGxD,EAAIs+C,SAASh6C,OACb,QACA9D,EAAK89C,SAAW/X,EAAc+X,SAEjC96C,GAAGxD,EAAIs+C,SAAS/5C,WAGf/D,GAAQA,EAAKg4I,WACdh1I,GAAGxD,EAAIw4I,UAAUl0I,OACd,QACA9D,EAAKg4I,UAAYjyG,EAAciyG,UAElCh1I,GAAGxD,EAAIw4I,UAAUj0I,WAGhB/D,GAAQA,EAAKi4I,WACdj1I,GAAGxD,EAAIy4I,UAAUn0I,OAAO,QAAS9D,EAAKi4I,UACtCj1I,GAAGxD,EAAIy4I,UAAUl0I,WAGhB/D,GAAQA,EAAK6qE,QACd7nE,GAAGxD,EAAIqrE,OAAO/mE,OAAO,QAAS9D,EAAK6qE,OACnC7nE,GAAGxD,EAAIqrE,OAAO9mE,UACjB,EAGH,IAAIu0I,EAA6B,IAAIV,EAClC14I,EACA,GAAGC,WAkPN,OA/OoB,IAAIw4I,EAA+B,CACpDrvI,SAAU,KACA,CACJ6qC,MAAO,QACPjyC,KAAM,CACH,CACGV,KAAM,CACH,CACGrC,GAAIqB,EAAI6Q,MACRrQ,KAAM,aACNS,MAAO,mDAAmDpB,EACvD,WAEHo/E,YAAap/E,EAAE,yBACf8B,WAAY,IACZqF,KAAM,QACNhF,QAAS,IAEZ,CACGxB,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACA6zI,EAAcr0I,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGrC,GAAIqB,EAAIq+C,UACR79C,KAAM,aACNS,MAAO,mDAAmDpB,EACvD,gBAEHo/E,YAAap/E,EAAE,uBACf8B,WAAY,IACZqF,KAAM,YACNq2C,UAAU,EACVr7C,QAAS,IAEZ,CACGxB,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACA4zI,EAAYp0I,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGrC,GAAIqB,EAAIs+C,QACR99C,KAAM,aACNS,MAAO,mDAAmDpB,EACvD,cAEHo/E,YAAap/E,EAAE,uBACf8B,WAAY,IACZqF,KAAM,UACNhF,QAAS,IAEZ,CACGxB,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACA4zI,EAAYp0I,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGrC,GAAIqB,EAAIw4I,SACRh4I,KAAM,aACNS,MAAO,kDAAkDpB,EACtD,cAEHo/E,YAAap/E,EAAE,yBACf8B,WAAY,IACZqF,KAAM,WACNhF,QAAS,IAEZ,CACGxB,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACAgmI,EAAcxmI,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGrC,GAAIqB,EAAIy4I,SACRj4I,KAAM,aACNS,MAAO,kDAAkDpB,EACtD,cAEHo/E,YAAap/E,EAAE,yBACf8B,WAAY,IACZqF,KAAM,WACNq2C,UAAU,EACVr7C,QAAS,IAEZ,CACGxB,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACAgmI,EAAcxmI,WAAWC,IAC3B,KAKb,CACGlD,KAAM,CACH,CACGrC,GAAIqB,EAAIqrE,MACR7qE,KAAM,aACNS,MAAO,sDAAsDpB,EAC1D,WAEHo/E,YAAap/E,EAAE,yBACf8B,WAAY,IACZqF,KAAM,QACNq2C,UAAU,EACVr7C,QAAS,IAEZ,CACGxB,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACA8zI,EAAgBt0I,WAAWC,IAC7B,QAStBf,KAAM,CAAC2B,EAAQtE,KACPsE,IAEL4zI,EAAe5zI,EAAQtE,GAEvBs4I,EAA2Bn0I,gBAAgBG,EAAOF,aAClDk0I,EAA2Bj0I,WAAWC,GACtCg0I,EAA2B31I,KAAK,CAC7BwE,OAAQ,KAGL+wI,EAAe5zI,EAAQtE,EAAK,IAEhC,EAGLygF,SAAU,SAAU4C,GACjB,IAAIvlC,EAAU96C,GAAGxD,EAAIs+C,SAAS1yC,YAAc26B,EAAc+X,QACvDk6F,EAAWh1I,GAAGxD,EAAIw4I,UAAU5sI,YAAc26B,EAAciyG,SAE3D,OACGl6F,GAAW/X,EAAc+X,SACzBk6F,GAAYjyG,EAAciyG,WAE1B30D,EAAM7kE,YAAY,UAAW,YAC7B6kE,EAAM7kE,YAAY,WAAY,aAEvB,EAIb,EAEAxZ,OAAQ,WACL,IAAIiI,EAAS,CAAC,EAad,OAXAA,EAAOoD,MAAQrN,GAAGxD,EAAI6Q,OAAOjF,YAAc26B,EAAc11B,MACzDpD,EAAO4wC,UACJ76C,GAAGxD,EAAIq+C,WAAWzyC,YAAc26B,EAAc8X,UACjD5wC,EAAO6wC,QACJ96C,GAAGxD,EAAIs+C,SAAS1yC,YAAc26B,EAAc+X,QAC/C7wC,EAAO+qI,SACJh1I,GAAGxD,EAAIw4I,UAAU5sI,YAAc26B,EAAciyG,SAChD/qI,EAAOgrI,SACJj1I,GAAGxD,EAAIy4I,UAAU7sI,YAAc26B,EAAckyG,SAChDhrI,EAAO49D,MAAQ7nE,GAAGxD,EAAIqrE,OAAOz/D,YAAc26B,EAAc8kC,MAElD59D,CACV,EAEAm1E,MAAO,CAAC,GAId,CAQAtM,QAAQ7sE,GAGL,IAAK,IAAIsJ,KAFTnT,MAAM02E,QAAQ7sE,GAEA88B,EACXzmC,KAAKiT,GAAKtJ,EAAKsJ,IAAMwzB,EAAcxzB,GAGtCjT,KAAK2B,KAAO41I,EAA2B51I,MAC1C,CAOAkE,QACG,IAAI2R,EAAM1X,MAAM+F,QAEhB,IAAK,IAAIoN,KAAKwzB,EACXjvB,EAAIvE,GAAKjT,KAAKiT,GAIjB,OADAuE,EAAI7V,KAAO41I,EAA2B51I,OAC/B6V,CACV,CAEIyhI,iBAID,OAHqBj5I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAK+Q,MAChC,CAEImoI,qBAID,OAHqBl5I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAKu+C,UAChC,CAEI46F,mBAID,OAHqBn5I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAKw+C,QAChC,CAEI46F,oBAID,OAHqBp5I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAK04I,SAChC,CAEIW,oBAID,OAHqBr5I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAK24I,SAChC,CAEIW,iBAID,OAHqBt5I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAKurE,MAChC,oBC9dH,MAAM6sE,EAAwB,EAAQ,OAEtC,IAAI3xG,EAAgB,CACjBv/B,KAAM,eACNkF,WAAY,GACZyd,iBAAkB,GAClBoa,eAAgB,GAChBC,aAAc,IAGjB3kC,EAAOC,QAAU,MAAM63I,UAAkCe,EACtDz4I,YAAYsjB,EAAYje,GACrBlF,MAAMmjB,EAAYje,EAAQ,OAa7B,CAMA4lB,cACG,MAAO,MACV,CAKAA,cACG,MAAO,aACV,CAQA4rD,QAAQ7sE,GAGL,IAAK,IAAIsJ,KAFTnT,MAAM02E,QAAQ7sE,GAEA88B,EACXzmC,KAAKiT,GAAKtJ,EAAKsJ,IAAMwzB,EAAcxzB,GAGtCjT,KAAK2B,KAAO01I,EAA0B11I,MACzC,CAOAkE,QACG,IAAI2R,EAAM1X,MAAM+F,QAEhB,IAAK,IAAIoN,KAAKwzB,EACXjvB,EAAIvE,GAAKjT,KAAKiT,GAIjB,OADAuE,EAAI7V,KAAO,OACJ6V,CACV,oBCxEH,MAAM4gI,EAAwB,EAAQ,OAChCC,EAAiC,EAAQ,OAEzCC,EAAsB,EAAQ,OAE9BhvF,EAAiB,EAAQ,OACzBmH,EAAc,EAAQ,OACtByyE,EAAc,EAAQ,OAE5B,IAAIz8F,EAAgB,CACjBv/B,KAAM,iBACN2iB,iBAAkB,GAClBzd,WAAY,GACZo6D,sBAAuB,KACvBC,wBAAyB,KACzBC,WAAY,MAGf,IAAI3mE,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,MAAM83I,UAAoC,EAGxD33I,YAAYsjB,EAAYje,GACrBlF,MAAMmjB,EAAYje,EAAQ,SAU7B,CAMA4lB,cACG,MAAO,QACV,CAKAA,cACG,MAAO,eACV,CAEAA,iBAAiB9oB,EAAIjC,GAClB,IAAIK,EAAM,CACPq5I,YAAa,GAAG15I,uBAChB25I,YAAa,GAAG35I,uBAChB45I,WAAY,GAAG55I,uBAqBd+4I,EAAiB,CAAC5zI,EAAQtE,EAAMwB,EAAU,CAAC,KAE5C,MAAMw3I,EAAa,CAChBC,EACA3vF,EACAphD,EAAS,CAAC7B,GAAMA,EAAE3C,MAAQqsD,EAAYtsD,WAAWC,KACjDw1I,KAEA,GAAe,MAAXD,GAA6B,MAAV30I,EAAvB,CAGA,IAAI9C,EAAU8C,EACV8B,SACA8B,OAAOA,GACPlK,KAAI,EAAGG,KAAIsC,YAAY,CAAGtC,KAAI6D,MAAOvB,OACpCy4I,GAAc13I,EAAQgE,QACxBhE,EAAQkxB,QAAQ,CACbv0B,GAAI,EACJ6D,MAAO3C,EAAE,UAGf45I,EAAQn1I,OAAO,UAAWtC,GAGtBxB,EACGA,EAAKspD,GACN2vF,EAAQn1I,OAAO,QAAS9D,EAAKspD,KACpB4vF,GAAc13I,EAAQ,IAC/By3I,EAAQn1I,OAAO,QAAStC,EAAQ,GAAGrD,IAES,IAAvCqD,EAAQ0G,QAAQ5J,GAAMA,EAAEH,KAAIqH,QAEpCyzI,EAAQn1I,OAAO,QAAStC,EAAQ,GAAGrD,IAGtC86I,EAAQl1I,SA3BqC,CA2B5B,EAepBi1I,EACGx3I,EAAQq3I,aAAe71I,GAAGxD,EAAIq5I,aAC9B,yBAdkC5zI,GAClC,CAAC8qD,EAAYtsD,WAAWC,IAAK8+H,EAAY/+H,WAAWC,KAAK8tC,SACtDvsC,EAAMvB,OAcT,GAEHs1I,EACGx3I,EAAQs3I,aAAe91I,GAAGxD,EAAIs5I,aAC9B,2BAfoC7zI,GACpC,CACG2jD,EAAenlD,WAAWC,IAC1BqsD,EAAYtsD,WAAWC,IACvB8+H,EAAY/+H,WAAWC,KACxB8tC,SAASvsC,EAAMvB,OAYjB,GAEHs1I,EACGx3I,EAAQu3I,YAAc/1I,GAAGxD,EAAIu5I,YAC7B,cACC1yI,GAGKA,EAAE3C,MAAQ8+H,EAAY/+H,WAAWC,KAEhC2C,EAAE3C,MAAQklD,EAAenlD,WAAWC,KACX,OAAvB2C,EAAEZ,SAASa,UACe,QAA1BD,EAAEZ,SAASc,cAGpB,EACF,EAGJ,IAAI+xI,EAA6B,IAAIV,EAClCx2I,EACA,GAAGjC,YAGN,OAAO,IAAIw4I,EAA+B,CACvCrvI,SAAU,KACA,CACJ6qC,MAAO,SACPjyC,KAAM,CACH,CACGV,KAAM,CACH,CACGR,KAAM,aACNS,MAAO,kDAAkDpB,EACtD,uBAEHlB,GAAIqB,EAAIq5I,YACRp6D,YAAap/E,EAAE,kBACf8B,WAAY,IACZqF,KAAM,SACNq2C,UAAU,EACVr7C,QAAS,GACTC,GAAI,CACDC,SAAU,SAAUvD,GACjB6E,GAAGxD,EAAIq5I,aAAap4D,WACpBz9E,GAAGxD,EAAIs5I,aAAar4D,UACvB,GAEH9Q,eAAgBtwE,EAAE,aAErB,CACGW,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACA8rD,EAAYtsD,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGR,KAAM,aACNS,MAAO,+CAA+CpB,EACnD,yBAEHlB,GAAIqB,EAAIs5I,YACRr6D,YAAap/E,EAAE,kBACf8B,WAAY,IACZqF,KAAM,SACNq2C,UAAU,EACVr7C,QAAS,GACTmuE,eAAgBtwE,EACb,iDAEHohF,SAAWz+E,IACR,IAAIm3I,EAAcn2I,GAAGxD,EAAIq5I,aAAaztI,WACtC,OACI+tI,IAAgBn3I,GAASm3I,IAAgBn3I,CAC5C,EAEJP,GAAI,CACDC,SAAU,SAAUvD,GACjB6E,GAAGxD,EAAIs5I,aAAar4D,UACvB,IAGN,CACGzgF,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACA8rD,EAAYtsD,WAAWC,IACzB,KAKb,CACGlD,KAAM,CACH,CACGR,KAAM,aACNS,MAAO,sDAAsDpB,EAC1D,gBAEHo/E,YAAap/E,EAAE,uBACflB,GAAIqB,EAAIu5I,WACR53I,WAAY,IACZqF,KAAM,QACNhF,QAAS,IAEZ,CACGxB,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAO,GACPJ,MAAO,GACPO,MAAO,KACJ03I,EAA2Br0I,KACxB,KACA2kD,EAAenlD,WAAWC,IAC5B,QAStBf,KAAM,CAAC2B,EAAQtE,KACZk4I,EAAe5zI,EAAQtE,GAEvBs4I,EAA2Bn0I,gBAAgBG,EAAOF,aAClDk0I,EAA2Bj0I,WAAWC,GACtCg0I,EAA2B31I,KAAK,CAC7BwE,OAAQ,KAGL+wI,EAAe5zI,EAAQtE,EAAK,GAEhC,EAGLgF,OAAQ,WACL,IAAIiI,EAAS,CAAC,EAQd,OANAA,EAAO64D,sBACJ9iE,GAAGxD,EAAIq5I,aAAaztI,YAAc,KACrC6B,EAAO84D,wBACJ/iE,GAAGxD,EAAIs5I,aAAa1tI,YAAc,KACrC6B,EAAO+4D,WAAahjE,GAAGxD,EAAIu5I,YAAY3tI,YAAc,KAE9C6B,CACV,EAEAm1E,MAAO,CACJ81D,eAAgBA,IAGzB,CAQApiE,QAAQ7sE,GAGL,IAAK,IAAIsJ,KAFTnT,MAAM02E,QAAQ7sE,GAEA88B,EACXzmC,KAAKiT,GAAKtJ,EAAKsJ,IAAMwzB,EAAcxzB,GAGtCjT,KAAK2B,KAAO21I,EAA4B31I,MAC3C,CAOAkE,QACG,IAAI2R,EAAM1X,MAAM+F,QAEhB,IAAK,IAAIoN,KAAKwzB,EACXjvB,EAAIvE,GAAKjT,KAAKiT,GAIjB,OADAuE,EAAI7V,KAAO21I,EAA4B31I,OAChC6V,CACV,CAEAsiI,6BAIG,OAHqB95I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAKymE,wBAChC,CAEAszE,2BAIG,OAHqB/5I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAKwmE,sBAChC,CAEAwzE,gBAIG,OAHqBh6I,KAAKgF,OACCA,OAEb4I,UAAU5N,KAAK0mE,WAChC,cCrWHnnE,EAAOC,QAAU,MAOdG,YAAYwB,GACTnB,KAAKmB,MAAQA,EACbnB,KAAKS,GAAK,IACb,CAUAw5I,WAAW54H,EAAOva,EAAQq4C,QACI,IAAhBA,IAA6BA,GAAe,GAIvD,SAAS+6F,EAAiBnqH,GAEvB,GAAIA,EACD,GAAIA,EAAKjG,MAAQiG,EAAK1O,MACnB0O,EAAK1O,MAAMrd,SAASuL,IACjB2qI,EAAiB3qI,EAAE,QAElB,CAGJ,IAAI5J,EAAQmB,EAAO8B,QAAQ7B,GACjBA,EAAElI,IAAMkxB,EAAK3rB,MACpB,GACH,GAAIuB,EACD,OAAQA,EAAMhE,MACX,IAAK,SACL,IAAK,UAIuB,iBAAdouB,EAAKrtB,SACmB,GAA5BqtB,EAAKrtB,MAAMwK,QAAQ,KACpB6iB,EAAKrtB,MAAQgjB,SAASqK,EAAKrtB,OAE3BqtB,EAAKrtB,MAAQw4C,WAAWnrB,EAAKrtB,QAGnC,MACH,IAAK,OAGEy8C,EAGGpvB,EAAKrtB,iBAAiB+d,OACvBsP,EAAKrtB,MAAQc,MAAMo6E,KAAKC,cAAc9tD,EAAKrtB,QAKrB,iBAAdqtB,EAAKrtB,QACbqtB,EAAKrtB,MAAQ,IAAI+d,KAAKsP,EAAKrtB,QAO7C,CAEN,CACAw3I,CAAiB74H,EACpB,CAIAlhB,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEd,IAAIE,EAAIH,EAAIK,MAERmzG,EAAmB5vG,MAAMuH,MACzBovI,EAAY/1I,GAEN,GAAGvE,KAAUuE,KAAOgvG,IAI1BlzG,EAAOF,KAAKE,IAAM,CACnBC,UAAWg6I,EAAS,2BACpBC,aAAcD,EAAS,YACvBE,sBAAuBF,EAAS,qBAChCG,mBAAoBH,EAAS,kBAC7BI,aAAcJ,EAAS,iBAI1Bn6I,KAAKS,GAAK,CACPC,KAAM,SACN7B,GAAIqB,EAAIo6I,mBACRh+D,QAAQ,EACR36E,KAAM,OACNC,KAAM,CACH,CACG/C,GAAIqB,EAAIq6I,aACRr5I,KAAM,CACH,CAAEuB,WAAW,GACb,CACG/B,KAAM,SACNO,IAAK,gBACLiG,KAAM,QACNxE,MAAO3C,EAAE,yBACTsB,WAAW,EACXC,MAAO,WACJoC,GAAGxD,EAAIm6I,uBAAuB11I,OAC9BjB,GAAGxD,EAAIq6I,cAAc71I,MAExB,GAEH,CAAEjC,WAAW,KAGnB,CACG65E,QAAQ,EACRz9E,GAAIqB,EAAIm6I,sBACRn5I,KAAM,CACH,CACGR,KAAM,eACN7B,GAAIqB,EAAIk6I,aACRtzI,OAAQ9G,KAAKw6I,uBAQxBx6I,KAAKmB,OACNnB,KAAKS,GAAGmB,KAAK,GAAGV,KAAKkyB,QAAQ,CAC1B1yB,KAAM,QACNO,IAAK,eACLE,MAAOnB,KAAKmB,MACZJ,MAAOf,KAAK8B,GAAGC,WAAWC,SAASC,kBAKzCjC,KAAKqD,KAAQnB,IAIV,IAAK,IAAIoB,KAHTpB,EAAUA,GAAW,CAAC,EAGRX,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAIH,IAAI/B,EAAUvB,KAAKuB,OAAS,CACzBgC,UAAW,CACR8E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAV,OAAQ,SAAUlC,GACf2C,QAAQC,KAAK,eAChB,GAWH0xI,WAAY,CAAC54H,EAAOva,EAAQq4C,KACzBn/C,KAAKi6I,WAAW54H,EAAOva,EAAQq4C,EAAa,EAG/CrzC,SAAU,KACP,IAAIpG,EAAS,KACT+0I,EAAK/2I,GAAGxD,EAAIk6I,cAahB,OAZIK,IACD/0I,EAAS+0I,EAAG3uI,YAOXpG,GACDnE,EAAO04I,WAAWv0I,EAAO,GAAIA,EAAO,IAAI,GAGpCA,CAAM,EAGhBd,SAAWc,IACRA,EAASA,GAAU,GACdsH,MAAMC,QAAQvH,KAASA,EAAS,CAACA,IACjB,GAAjBA,EAAOQ,QACRR,EAAOrB,KAAK,CAAC,GAEZqB,EAAOQ,OAAS,GACjBR,EAAOrB,KAAKrE,KAAKw6I,mBAKpBj5I,EAAO04I,WAAWv0I,EAAO,GAAIA,EAAO,IAAI,GAExC,IAAI+0I,EAAK/2I,GAAGxD,EAAIk6I,cACZK,GACG/0I,EAAO,IAAMA,EAAO,GAAG2b,OAAS3b,EAAO,GAAG2b,MAAMnb,SACjDu0I,EAAG71I,SAASc,EAAO,IACnBhC,GAAGxD,EAAIm6I,uBAAuB11I,OAC9BjB,GAAGxD,EAAIq6I,cAAc71I,OAE3B,GAIN1E,KAAK8L,SAAWvK,EAAOuK,SACvB9L,KAAK2E,KAAOpD,EAAOoD,KACnB3E,KAAK4E,SAAWrD,EAAOqD,QAC1B,CAEAG,WAAWC,GACRhF,KAAKyqH,cAAgBzlH,CACxB,CAWAw1I,kBACG,IAAIE,EAAa,CACd,SACA,WACA,SACA,OACA,QACA,UACA,aAGCxxG,EAAa,GA2BjB,OAzBIlpC,KAAKyqH,eACNzqH,KAAKyqH,cAAc3jH,SAAS9C,SAAS+C,IAClC,IAAkC,GAA9B2zI,EAAWxtI,QAAQnG,EAAE3C,KAAY,CAUlC,IAAIzC,EAAOoF,EAAE3C,IACA,WAAT2C,EAAE3C,KAA6B,aAAT2C,EAAE3C,IAAoBzC,EAAO,SACrC,YAAToF,EAAE3C,MAAmBzC,EAAO,UAErCunC,EAAW7kC,KAAK,CACbxF,GAAIkI,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMA,GAEZ,KAICunC,CACV,CAMA1hB,QAAQtlB,GACL,OAAO,IAAImN,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIw4E,EAAU,EACV8rD,EAAS,OACV9rD,GACe7uF,KAAK46I,UAAU10I,QAC3B5G,GACH,EAGHU,KAAK46I,UAAU52I,SAAS+rB,IACrBA,EACIvI,QAAQtlB,GACRiS,MAAK,WACHwmI,GACH,IACCvmI,OAAOlM,IACLmO,EAAOnO,EAAI,GACZ,IAGqB,GAAzBlI,KAAK46I,UAAU10I,QAChB5G,GACH,GAEN,CAEAu7I,4BACGn3I,GAAG1D,KAAKE,IAAIo6I,oBAAoB31I,OAChCjB,GAAG1D,KAAKE,IAAIm6I,uBAAuB11I,OACnCjB,GAAG1D,KAAKE,IAAIq6I,cAAc71I,MAC7B,oBCrTH,MAAMo2I,EAAqB,EAAQ,OAEnC,IAAI/6I,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,MAOdG,YAAYo7I,GACT/6I,KAAK+6I,YAAcA,GAAe,GAElC/6I,KAAKg7I,eAAiB,GACtBh7I,KAAK+6I,YAAY/2I,SAASyJ,IACvBzN,KAAKg7I,eAAe32I,KAAK,CAAExF,GAAI4O,EAAErJ,IAAK1B,MAAO+K,EAAEtM,OAAQ,IAG1DnB,KAAKi7I,eAAiB,KAClBj7I,KAAKg7I,eAAe90I,OAAS,IAC9BlG,KAAKi7I,eAAiBj7I,KAAKg7I,eAAe,GAAGn8I,IAGhDmB,KAAKg7D,WAAY,EAEjBh7D,KAAKyqH,cAAgB,KAGrBzqH,KAAKk7I,SAAW,KAEhBl7I,KAAKm7I,YAAc,IACtB,CAEAh7I,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAId,IAAIuzG,EAAmB5vG,MAAMuH,MACzBovI,EAAY/1I,GAEN,GAAGvE,KAAUuE,KAAOgvG,IAI1BlzG,EAAOF,KAAKE,IAAM,CAEnBC,UAAWg6I,EAAS,aAEpBiB,aAAcjB,EAAS,gBAEvBC,aAAcD,EAAS,gBAEvBkB,aAAclB,EAAS,cAG1Bn6I,KAAKk7I,SAAS/5I,MAAQpB,EAAE,QACxBC,KAAKk7I,SAAS/6I,UAAUH,KAAKJ,IAAKI,KAAKH,QACvCG,KAAKS,GAAKT,KAAKs7I,cAGft7I,KAAKqD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDtD,KAAKk7I,SAAS73I,OAGd,IAAIk4I,EAASv7I,KAAKw7I,gBAClB,GAAID,EAAQ,CACTA,EAAOp7I,UAAUH,KAAKJ,IAAKI,KAAKH,QAChC,IAAIqxD,EAAOqqF,EAAOF,aAAan7I,EAAIm7I,cAEnC95I,EAAOk6I,oBAAoBvqF,GAG3BA,EAAK7tD,MACR,GAIH,IAAI9B,EAAUvB,KAAKuB,OAAS,CACzBgC,UAAW,CACRm4I,SAAU,WACPpzI,QAAQC,KAAK,iBAChB,EACAV,OAAQ,SAAUlC,GACf2C,QAAQC,KAAK,eAChB,GAGHkzI,oBAAsBt7I,IAEnB,IAAIw7I,EAAgBj4I,GAAG1D,KAAKE,IAAIm7I,cAChC,GAAKM,EAAL,CAEA,IAAInmD,EAAWmmD,EAAchxI,gBACzBixI,EAAgB,GACpBpmD,EAASxxF,SAASV,IACfs4I,EAAcv3I,KAAKf,EAAE,IAExBs4I,EAAc53I,SAASV,IACpBq4I,EAActwI,WAAW/H,EAAE,IAG9Bq4I,EAAc7wI,QAAQ3K,EAAUM,GAXN,CAWS,EAGtC26I,aAAc,CAAC94C,EAAU5hB,KAClB4hB,GACD5+F,GAAG1D,KAAKE,IAAIC,WACRwK,gBACA3G,SAASyjB,IACPA,EAAM9iB,MAAM,IAIrB,IAAIk3I,EAAa77I,KAAK87I,UAAUp7D,GAC5Bm7D,GACDA,EAAWE,eAAe/7I,KAAKk7I,SAASpvI,YAI3C9L,KAAKi7I,eAAiB34C,EACtB,IAAI05C,EAAah8I,KAAKw7I,gBACtB,GAAIQ,EAAY,CAEbh8I,KAAKk7I,SAASt2I,SAASo3I,EAAW5tG,aAGlC4tG,EAAW77I,UAAUH,KAAKJ,IAAKI,KAAKH,QACpC,IAAIM,EAAY67I,EAAWX,aAAan7I,EAAIm7I,cAC5C95I,EAAOk6I,oBAAoBt7I,GAC3BA,EAAUkD,MAEb,GAGT,CAGAi4I,cACG,MAAO,CACJz8I,GAAImB,KAAKE,IAAIC,UACbO,KAAM,SACNO,IAAK,0BACLsB,QAAS,GAKTZ,KAAM,OACNC,KAAM,CACH,CACGlB,KAAM,WACNO,IAAK,iCACL0lE,SAAU,kDACV7lE,OAAQ,GACRY,YAAY,EACZu6I,iBAAoC,GAAlBj8I,KAAKg7D,UACvB4tD,QAAS,CACN,sBAAuB,CAAC3pH,EAAGJ,EAAIs/H,KAC5Bn+H,KAAKuB,OAAOgC,UAAUm4I,SAAS17I,KAAK,IAK7C,CACGnB,GAAImB,KAAKE,IAAIk7I,aACb16I,KAAM,aACNS,MAAOpB,EAAE,UACTo/E,YAAap/E,EAAE,oBACf8B,WAAY7B,KAAK8B,GAAGC,WAAWC,SAASC,gBACxCC,QAASlC,KAAKg7I,eACd74I,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KAChB1gF,KAAKuB,OAAO65I,aAAa36D,EAAQC,EAAO,IAMjD,CACGw7D,IAAK,SACL5/D,QAAQ,EACR95E,MAAO,CACJ,CACG9B,KAAM,SACNQ,KAAM,CACH,CACGR,KAAM,QACNS,MAAOpB,EAAE,UACTkB,IAAK,eACLF,MAAOf,KAAK8B,GAAGC,WAAWC,SAASC,iBAEtC,CACGpD,GAAImB,KAAKE,IAAIm7I,aACb36I,KAAM,SACNkB,KAAM,CACH,CACGT,MAAOpB,EACJ,4CAEHkB,IAAK,eACLH,OAAQ,UAU7Bd,KAAKk7I,SAASz6I,IAGvB,CAGA+5I,kBACG,IAAI1zI,EAAS,GAETm0I,EAAiBj7I,KAAKw7I,gBAK1B,OAJIP,IACDn0I,EAASm0I,EAAeT,mBAGpB1zI,CACV,CAEA00I,gBACG,OAAOx7I,KAAK87I,UAAU97I,KAAKi7I,eAC9B,CAEAa,UAAU13I,GACP,OAAOpE,KAAK+6I,YAAYnyI,QAAQ6E,GACtBA,EAAErJ,KAAOA,IAChB,EACN,CAEAW,WAAWC,GACRhF,KAAKyqH,cAAgBzlH,EACrBhF,KAAK+6I,YAAY/2I,SAASyJ,IACvBA,EAAE1I,WAAWC,EAAO,IAGvB,IAAI7D,EAAQpB,EAAE,QAEdC,KAAKk7I,SAAW,IAAIJ,EAAmB35I,GACvCnB,KAAKk7I,SAASn2I,WAAWC,GAGrBhF,KAAKE,MACNF,KAAKS,GAAKT,KAAKs7I,cAErB,CAEA7kF,SAASzsD,GACNhK,KAAKm7I,YAAcnxI,EACnBhK,KAAK+6I,YAAY/2I,SAASyJ,IACvBA,EAAEgpD,SAASzsD,EAAK,GAEtB,CAEA6sD,WAAW30D,EAAU,CAAC,GAEnB,IADclC,KAAKsF,QAAQpD,EAAQyH,MACrB,OAEd,IAAI6xI,EAAgBx7I,KAAKw7I,gBACpBA,GAELA,EAAcW,oBAAoB,CAAC,EAAGj6I,EAAQyH,KACjD,CAMA6d,QAAQtlB,GACL,IAAIs5I,EAAgBx7I,KAAKw7I,gBACzB,OAAKA,EAESx7I,KAAKsF,QAAQpD,EAAQyH,MAEzB6xI,EAAch0H,QAAQtlB,GAGtB,IAAImN,SAAQ,CAAC/P,EAAS+W,KAC1B/W,GAAS,IARY+P,QAAQ/P,SAWtC,CAEAo3D,aAAavwD,GAGV,IAFAA,EAAWA,GAAY,CAAC,GAEX80I,eAAgB,CAE1Bj7I,KAAKi7I,eAAiB90I,EAAS80I,eAC/B,IAAIA,EAAiBj7I,KAAKw7I,gBAC1B,IAAKP,EAAgB,OACrBA,EAAec,eAAe51I,EAASkwI,YAAc,CAAC,GAGlDr2I,KAAKE,KAGNwD,GAAG1D,KAAKE,IAAIk7I,cAAcx2I,SAAS5E,KAAKi7I,gBAK3CA,EAAevkF,aAAavwD,EAASs2H,eACxC,CACH,CAEA8X,aACG,IAAIpuI,EAAW,CAAC,EAEhB,GAAInG,KAAKi7I,eAAgB,CACtB90I,EAAS80I,eAAiBj7I,KAAKi7I,eAC/B90I,EAASkwI,WAAar2I,KAAKk7I,SAASpvI,WACpC,IAAI0vI,EAAgBx7I,KAAKw7I,gBACrBA,IACDr1I,EAASs2H,eAAiB+e,EAAcjH,aAE9C,CAEA,OAAOpuI,CACV,CAOAi2I,iBACG,IAAIJ,EAAah8I,KAAKw7I,gBAClBQ,GAAch8I,KAAKk7I,WACpBl7I,KAAKk7I,SAASt2I,SAASo3I,EAAW5tG,aAClC4tG,EAAWI,iBAEjB,CAOAl3I,gBACG,IAAIs2I,EAAgBx7I,KAAKw7I,gBACzB,OAAIA,EACMA,EAAca,UAEjBhtI,QAAQ/P,SAClB,CAEAgG,QAAQqE,EAAO,CAAC,GACb,MAAM7C,EAAS9G,KAAKyqH,cAAc3jH,SAG/BmR,EAFgBjY,KAAKw7I,gBACOptG,YACR,IAAM,CAAC,EAExBkuG,EAAkB,CAACruI,EAAO,KAEV,iBAARA,EAAyBA,EAE7BitC,WAAWjtC,EAAK4E,QAAQ,YAAa,KAK/C/L,EACI8B,QACG7B,GACW,UAATA,EAAE3C,KAA4B,aAAT2C,EAAE3C,KAA+B,WAAT2C,EAAE3C,MAEpDJ,SAAS+C,IACP,IAEOiG,MAAMC,QAAQgL,GAAOoJ,QACtBpJ,EAAMoJ,MAAMrd,SAASuL,IAEdA,EAAEnL,KAAO2C,EAAElI,IAAM0Q,EAAEnL,KAAO2C,EAAEF,aAC7B0I,EAAE7M,MAAQ45I,EAAgB/sI,EAAE7M,OAAM,IAMxCiH,EAAK5C,EAAEF,aACuB,iBAAvB8C,EAAK5C,EAAEF,cAEd8C,EAAK5C,EAAEF,YAAcy1I,EAAgB3yI,EAAK5C,EAAEF,aAIlD,CAFE,MAAO5H,GAET,KAGN,MAAMs9I,GAAgBv8I,KAAK8B,IAAMA,IAAIuzB,iBAClC,GAAGr1B,KAAKH,yBAMX,OAJA08I,EAAajnH,WAAWxuB,EAAQ9G,KAAKyqH,eACrC8xB,EAAa33I,SAASqT,GACtBskI,EAAal5I,OAENk5I,EAAaj3I,QAAQqE,EAkC/B,CAEI6yI,mBAED,OADoBx8I,KAAKw7I,gBACJgB,eAAgB,CACxC,cClcHj9I,EAAOC,QAAU,MAQdG,YAAYC,EAAKC,EAAQs7I,GACtBn7I,KAAKoE,IAAM,mBAEXpE,KAAKy8I,YAAc,KAEnBz8I,KAAKm7I,YAAc,KAEnBn7I,KAAKq2I,WAAa,CAAC,EAEnBr2I,KAAK08H,WAAa,CAAC,EAGnB18H,KAAKm7I,YAAcA,CACtB,CAEAh7I,UAAUP,EAAKC,GACZG,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EAEdG,KAAKmB,MA7BH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GA6B7BxV,CAAE,4BAOJC,KAAKE,IAAM,CAEnBC,UAAW,GAAY,YANhBP,EAAIQ,OAAO,GAAGP,kBAMkB2D,MAAMuH,SAGhD/K,KAAKimG,IAAM,KAGXjmG,KAAKqD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,EACxD,EAIH,IAAI/B,EAAUvB,KAAKuB,OAAS,CACzBgC,UAAW,CACRm4I,SAAU,WACPpzI,QAAQC,KAAK,iBAChB,EACAV,OAAQ,SAAUlC,GACf2C,QAAQC,KAAK,eAChB,GAGT,CASA6lC,YACG,MAAO,CAACpuC,KAAK08I,iBAAkB18I,KAAKw6I,kBACvC,CAWAuB,eAAe16H,GAGRrU,MAAMC,QAAQoU,KACfA,EAAQA,EAAM,IAIbA,IAEiB,MAAdA,EAAMyI,OAAczI,EAAMyI,KAAO,OAErC9pB,KAAKq2I,WAAah1H,EAExB,CAWAm5H,kBACG,IAAIE,EAAa,CAAC,SAAU,SAAU,OAAQ,UAAW,aAErDxxG,EAAa,GAsBjB,OApBIlpC,KAAKy8I,aACNz8I,KAAKy8I,YAAY31I,SAAS9C,SAAS+C,KACE,GAA9B2zI,EAAWxtI,QAAQnG,EAAE3C,MAStB8kC,EAAW7kC,KAAK,CACbxF,GAAIkI,EAAEF,WACNnE,MAAOqE,EAAE5F,MACTQ,KAAMoF,EAAE3C,KAEd,IAIC8kC,CACV,CAKAwzG,iBACG,OAAO18I,KAAKq2I,UACf,CAIAtxI,WAAWC,GAERhF,KAAK28I,gBAAgB33I,EACxB,CAIA23I,gBAAgB33I,GACbhF,KAAKy8I,YAAcz3I,CACtB,CAEAyxD,SAASzsD,GACNhK,KAAKm7I,YAAcnxI,CACtB,CAMAwd,QAAQtlB,GAIL,OAHAoG,QAAQ6G,MACL,2EAEI,IAAIE,SAAQ,CAAC/P,EAAS+W,KAC1BA,EACG,IAAInX,MACD,uEAEL,GAEP,CAKAm8I,aAAauB,GACV,OAAO58I,KAAK68I,sBAAsBD,EACrC,CAKAC,sBAAsBh9I,GACnB,OAAQG,KAAKimG,IAAM,CAChBxlG,GAAI,CACDkmE,SAAU,0CAEbtjE,KAAOsG,IACJrB,QAAQ6G,MACL,sEAEH7G,QAAQC,KAAK,0BAAwBoB,EAAK,EAGnD,CAKA+sD,aAAavwD,GAIVA,EAAWA,GAAY,CAAC,EACxBnG,KAAK08H,WAAav2H,EAASu2H,YAAcv2H,CAC5C,CAKAouI,aAIG,MAHe,CAAC,CAInB,CAOA8H,UACG,OAAOhtI,QAAQ/P,SAClB,CAOA88I,iBAGA,cCpOH,IAAIr8I,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,MAOdG,YAAYm9I,GACT98I,KAAK46I,UAAY,GACjB56I,KAAKyqH,cAAgB,MAGrBqyB,EAAgBA,GAAiB,CAAC,GACpB3qI,OAAS2qI,EAAc3qI,QAAU,CAAC,EAChD2qI,EAAc3qI,OAAOkxB,OAClBy5G,EAAc3qI,OAAOkxB,QAAU,8BAClCy5G,EAAc3qI,OAAO4qI,cAClBD,EAAc3qI,OAAO4qI,eAAiB,aACzC/8I,KAAK88I,cAAgBA,CACxB,CAQA38I,UAAUP,EAAKC,GACZG,KAAKJ,IAAMI,KAAKJ,KAAOA,EACvBI,KAAKH,OAASA,EAEdD,EAAMA,GAAOI,KAAKJ,IAElBI,KAAKm7I,YAAc,KAGnB,IAAIj7I,EAAOF,KAAKE,IAAM,CACnBC,UAAW,GAAGN,cACdwhB,MAAO,GAAGxhB,UACVm9I,gBAAiB,GAAGn9I,oBAEpBsxD,OAAQ,GAAGtxD,WACXo9I,KAAM,GAAGp9I,SAET6F,OAAQ,GAAG7F,WACXka,IAAK,GAAGla,SAIXG,KAAKS,GAAK,CACPC,KAAM,SACN7B,GAAIqB,EAAIC,UACRU,OAAO,EACPF,SAAU,SACVC,QAAQ,EACRG,MAAO,IACPD,OAAQ,IACRG,IAAK,oBACLD,KAAM,CACHN,KAAM,UACNO,IAAK,aACLC,KAAM,CACH,CACGR,KAAM,QACNS,MAAOnB,KAAK88I,cAAc3qI,OAAO4qI,eAEpC,CACGr8I,KAAM,SACNO,IAAK,gBACLmK,KAAM,aACNzJ,KAAM,aACNR,MAAOpB,EAAE,gBACTgB,MAAO,IACPO,MAAO,KACJtB,KAAKk9I,UACL50I,QAAQuO,IAAInT,GAAGxD,EAAImhB,OAAOyvF,SAC1BptG,GAAGxD,EAAI88I,iBAAiBrrB,SAAS,EAAGjuH,GAAGxD,EAAImhB,OAAOyvF,QAAQ,KAKtEtvG,KAAM,CACHG,KAAM,OACNC,KAAM,CACH,CACGlB,KAAM,aACN7B,GAAIqB,EAAI88I,gBACRv7I,OAAQ,KACRD,KAAM,CACHd,KAAM,SACN7B,GAAIqB,EAAImhB,MACRy8D,OAAQ,GACRv7E,QAAS,GACTX,KAAM,KAmBZ,CACGX,IAAK,CAAE,mBAAoB,QAC3BC,KAAM,CACH,CAAEuB,WAAW,GACb,CACG/B,KAAM,SACNwG,KAAM,SACNxE,MAAO3C,EAAE,UACTkB,IAAK,mBACLI,WAAW,EACXC,MAAO,WACJC,EAAOf,cACV,GAEH,CACGE,KAAM,SACNO,IAAK,gBACLiG,KAAM,OACN/F,MAAOpB,EAAE,QACT4B,KAAM,OACNN,WAAW,EACXC,MAAO,WACJC,EAAOhB,YACV,GAEH,CAAEkC,WAAW,QAW5BzC,KAAKqD,KAAQnB,IAEV,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGxDE,MAAM/C,GAAGT,KAAKS,GAAG,EAIpB,IAAIc,EAAUvB,KAAKuB,OAAS,CACzBf,aAAc,WACXkD,GAAGxD,EAAIC,WAAWuE,MACrB,EAEAnE,WAAY,KACT,IAAIwhC,EAAU/hC,KAAKu0I,aAEnBhzI,EAAOgC,UAAUsE,OAAOk6B,GACxBxgC,EAAOmD,MAAM,EAGhBnB,UAAW,CACR8E,SAAU,WACPC,QAAQC,KAAK,iBAChB,EACAV,OAAQ,SAAUlC,GACf2C,QAAQC,KAAK,eAChB,GAGH7D,KAAM,WACHhB,GAAGxD,EAAIC,WAAWuE,MACrB,EAEAC,KAAM,WACHjB,GAAGxD,EAAIC,WAAWwE,MACrB,GAGH3E,KAAK2E,KAAOpD,EAAOoD,KACnB3E,KAAK4E,SAAWrD,EAAOqD,QAC1B,CAOAs4I,QAAQ/2I,GACL,IAAIowI,EAAOv2I,KAAKm9I,UAChB,GAAK5G,EAAL,CAKA,GAHAv2I,KAAK46I,UAAUv2I,KAAKkyI,GAGhBv2I,KAAKE,IAAK,CAEX,IAAIk9I,EAAU15I,GAAG1D,KAAKE,IAAImhB,OACtB+7H,IAED7G,EAAKp2I,UAAUH,KAAKJ,IAAKI,KAAKH,QACjBu9I,EAAQtyI,QAAQyrI,EAAK91I,IAElC81I,EAAKlzI,KAAK,CACPq4I,SAAW2B,IACR35I,GAAG1D,KAAKE,IAAImhB,OAAOhW,WAAWkrI,EAAKr2I,IAAIC,WAEvC,IAAIyL,EAAQ5L,KAAK46I,UAAU1tI,QAAQmwI,IACpB,IAAXzxI,GACD5L,KAAK46I,UAAU5uI,OAAOJ,EAAO,EAChC,IAIZ,CAEIzF,GACDowI,EAAK7/E,aAAavwD,EA3BJ,CA6BpB,CAOAuwD,aAAavwD,GAOVnG,KAAK46I,UAAU52I,SAAS+rB,IAElB/vB,KAAKE,KACLF,KAAKE,IAAImhB,OACT0O,GACAA,EAAK7vB,KACL6vB,EAAK7vB,IAAIC,WAETuD,GAAG1D,KAAKE,IAAImhB,OAAOhW,WAAW0kB,EAAK7vB,IAAIC,UAC1C,IAEHH,KAAK46I,UAAY,GAEbz0I,GACDA,EAASnC,SAASs5I,IACft9I,KAAKk9I,QAAQI,EAAa,GAGnC,CASAv4I,WAAWC,GACRhF,KAAKyqH,cAAgBzlH,EAGrBhF,KAAK46I,UAAU52I,SAASuL,IACrBA,EAAExK,WAAWC,EAAO,GAE1B,CAEA6xD,WAAW30D,IACPlC,KAAK46I,WAAa,IACfhyI,QAAQmnB,GAA8B,GAArBA,EAAKysH,eACtBx4I,SAAS+rB,IACPA,EAAK8mC,WAAW30D,EAASA,EAAQyH,KAAK,GAE/C,CAQA6d,QAAQtlB,GACL,OAAO,IAAImN,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIukI,GAAa56I,KAAK46I,WAAa,IAAIhyI,QACnCmnB,IAAUA,EAAKysH,eAGnB,IAAI3tD,EAAU,EAQd+rD,EAAU52I,SAAS+rB,IAChBA,EACIvI,QAAQtlB,GACRiS,MAAK,aATT06E,GACe+rD,EAAU10I,QACtB5G,GASA,IACC8U,OAAOlM,IACLmO,EAAOnO,EAAI,GACZ,IAGgB,GAApB0yI,EAAU10I,QACX5G,GACH,GAEN,CAOAi1I,aACG,IAAIpuI,EAAW,GAIf,OAHAnG,KAAK46I,UAAU52I,SAASuL,IACrBpJ,EAAS9B,KAAKkL,EAAEglI,aAAa,IAEzBpuI,CACV,CAEAg3I,UAIG,OAHA70I,QAAQ6G,MACL,wEAEI,IACV,CAEAsnD,SAASzsD,GACNhK,KAAKm7I,YAAcnxI,EACnBhK,KAAKJ,IAAMI,KAAKJ,KAAOoK,EAAKpK,GAC/B,CAOAsxG,aAGG,OAAO7hG,QAAQ/P,SAClB,CAOA88I,iBACGp8I,KAAK46I,UAAU52I,SAASuL,IACrBA,EAAE6sI,gBAAgB,GAExB,oBC7YH,MAAMmB,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,OAErBC,EAAqB,EAAQ,OAC7BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,OAC9BC,EAAsB,EAAQ,OAEpCr+I,EAAOC,QAAU,cAA4C+9I,EAO1D59I,cAOGG,MANe,CACZqS,OAAQ,CACLkxB,OAAQ,iCACR05G,cAAe,kBAIxB,CAGAI,UACG,IAAIpC,EAAc,CACf,IAAI0C,EACDz9I,KAAKJ,IACL,GAAGI,KAAKH,0BACRG,KAAKm7I,aAER,IAAIuC,EACD19I,KAAKJ,IACL,GAAGI,KAAKH,0BACRG,KAAKm7I,aAER,IAAIwC,EACD39I,KAAKJ,IACL,GAAGI,KAAKH,mCACRG,KAAKm7I,aAER,IAAIyC,EACD59I,KAAKJ,IACL,GAAGI,KAAKH,mCACRG,KAAKm7I,cAIP5E,EAAO,IAAIiH,EAAWzC,GAI1B,OAHI/6I,KAAKyqH,eACN8rB,EAAKxxI,WAAW/E,KAAKyqH,eAEjB8rB,CACV,CAQArxI,mBACG,IAAI24I,GAAY79I,KAAK46I,WAAa,IAAIl8I,KAAK6Q,GAAMA,EAAE8sI,kBAC7ChtI,QAAQkS,IAAIs8H,EACrB,oBClEH,MAAMN,EAAiB,EAAQ,OACzBC,EAAa,EAAQ,OAErBM,EAAqB,EAAQ,OAC7BC,EAAgB,EAAQ,OACxBC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,OACtBC,EAAY,EAAQ,OAE1B5+I,EAAOC,QAAU,cAA4C+9I,EAO1D59I,cAOGG,MANe,CACZqS,OAAQ,CACLkxB,OAAQ,+BACR05G,cAAe,kBAIxB,CAGAI,UACG,IAAIpC,EAAc,CACf,IAAI+C,EACD99I,KAAKJ,IACL,GAAGI,KAAKH,mCAEX,IAAIk+I,EAAc/9I,KAAKJ,IAAK,GAAGI,KAAKH,8BACpC,IAAIm+I,EAAeh+I,KAAKJ,IAAK,GAAGI,KAAKH,+BACrC,IAAIo+I,EAAej+I,KAAKJ,IAAK,GAAGI,KAAKH,+BACrC,IAAIq+I,EAAYl+I,KAAKJ,IAAK,GAAGI,KAAKH,4BAClC,IAAIs+I,EAAUn+I,KAAKJ,IAAK,GAAGI,KAAKH,2BAG/B02I,EAAO,IAAIiH,EAAWzC,GAG1B,OAFAxE,EAAKxxI,WAAW/E,KAAKyqH,eACrB8rB,EAAK9/E,SAASz2D,KAAKm7I,aACZ5E,CACV,oBC1CH,MAAM6H,EAAkB,EAAQ,OAIhC7+I,EAAOC,QAAU,cAA4D,EAS1EG,YAAYC,EAAKC,EAAQs7I,GACtBr7I,MAAMF,EAAKC,EAAQs7I,GAEnBn7I,KAAKoE,IAAM,gDACXpE,KAAKmB,MAfH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAe7BxV,CAAE,0BAClB,CAQAs+I,oBAAoBx+I,GACjB,IAAIy+I,EAAYx+I,MAAMu+I,oBAAoBx+I,GAM1C,OAFAy+I,EAAU/8I,OAAOg9I,eAAiB,WAAa,EAExCD,CACV,CAOAE,sBACG,OAAO,IACV,CAUAh3H,QAAQtlB,GAEL,IAAIu8I,EAAUz+I,KAAK0+I,kBACf32I,EAAQ02I,EAAQ12I,QAEhB42I,EAAkB3+I,KAAK4+I,gBASvBC,EAAkB,CAAC,EAKvB,GAFA7+I,KAAKm8I,oBAAoB,CAAC,EAAG0C,IAEzBA,EAAgBC,WAcb,CAEJ,IAAIC,EAAuBN,EAAQ7wI,UAChC+wI,EAAgBx4I,SAAS6B,YAG5B,OAAK+2I,GAGLF,EAAgBE,EAAqBl4I,YAAc3E,EAAQyH,KAAK9K,GAGzDkJ,EAAM4nE,OAAOkvE,IALVxvI,QAAQgH,OAAO,4BAM5B,CA3BgC,CAE7B,IAAI0oI,EAAuBN,EAAQ7wI,UAChC+wI,EAAgBx4I,SAAS6B,YAG5B,IAAK+2I,EACF,OAAO1vI,QAAQgH,OAAO,6BAEzBwoI,EAAgBC,WAAW96I,SAASuL,IACjCA,EAAEwvI,EAAqBl4I,YAAc3E,EAAQyH,KAAK9K,GAE3CkJ,EAAM4nE,OAAOpgE,KAE1B,CAcH,CAOAglI,aAOG,IAAIpuI,EAAWrG,MAAMy0I,aAKrB,cAFOpuI,EAAS64I,YAET74I,CACV,oBC1HH,MAAM84I,EAAgD,EAAQ,OAI9D1/I,EAAOC,QAAU,cAA4D,EAG1EG,YAAYC,EAAKC,EAAQs7I,GACtBr7I,MAAMF,EAAKC,EAAQs7I,GAEnBn7I,KAAKoE,IAAM,gDACXpE,KAAKmB,MATH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAS7BxV,CAAE,2BAEfC,KAAKk/I,uBAAwB,CAChC,CAUA13H,QAAQtlB,GACL,IAAI08I,EAAgB5+I,KAAK4+I,gBAGzB,OAFA5+I,KAAKm/I,UAAYj9I,EAAQyH,KAElB,IAAI0F,SAAQ,CAAC/P,EAAS+W,KAE1B,IAAIuW,EAAK1qB,EAAQ8H,KAAK4hB,eACtB,IAAKgB,EAAI,OAAOttB,IAEhB,IAAIyI,EAAQ6kB,EAAG7kB,MACf,IAAKA,EAAO,OAAOzI,IAEnB,IAAIiwB,EAAc,CAAC,EACnBA,EAAYqvH,EAAc/3I,YAAc,GAExCkB,EACIouE,OAAOj0E,EAAQyH,KAAK9K,GAAI0wB,GACxBpb,KAAK7U,GACL8U,OAAOlM,IACLlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QACG,oEACHtH,KAAMzH,EAAQyH,OAEjB0M,EAAOnO,EAAI,GACZ,GAEX,oBCnDH,MAAMk3I,EAAgC,EAAQ,OAI9C7/I,EAAOC,QAAU,cAAmD,EASjEG,YAAYC,EAAKC,EAAQs7I,GACtBr7I,MAAMF,EAAKC,EAAQs7I,GAEnBn7I,KAAKoE,IAAM,uCACXpE,KAAKmB,MAfH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAe7BxV,CAAE,gBAClB,CAEIy8I,mBACD,OAAO,CACV,oBCtBH,MAAM4C,EAAgC,EAAQ,OACxC91F,EAAiB,EAAQ,OACzBwxF,EAAqB,EAAQ,OAEnC,IAAI/6I,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAA4D,EAG1EG,YAAYC,EAAKC,EAAQs7I,GACtBr7I,MAAMF,EAAKC,EAAQs7I,GAEnBn7I,KAAKoE,IAAM,gDACXpE,KAAKmB,MAAQpB,EAAE,2BAEfC,KAAK6pC,WAAa,KAGlB7pC,KAAKq/I,gBAAkB,KAGvBr/I,KAAKs/I,cAAgB,GAErBt/I,KAAKk7I,SAAW,KAChBl7I,KAAKg/I,YAAc,IACtB,CAgBAj6I,WAAWC,GACRhF,KAAK28I,gBAAgB33I,GACrBhF,KAAK6pC,WAAa7kC,EAGKhF,KAAKu/I,qBACXv7I,SAASw7I,IACvBx/I,KAAKs/I,cAAcj7I,KAAK,CACrBxF,GAAI2gJ,EAAG3gJ,GACP6D,MAAO88I,EAAGr+I,OACX,GAER,CAOAo+I,qBACG,IAAIE,EAAan2F,EAAenlD,WAAWC,IAC3C,OAAIpE,KAAK6pC,YAAc7pC,KAAK6pC,WAAW/iC,OAC7B9G,KAAK6pC,WAAW/iC,QAAQC,GACrBA,EAAE3C,KAAOq7I,IAGZ,EAEb,CAOAf,kBACG,GAAI1+I,KAAKq/I,gBAAiB,CACvB,IAAIT,EAAgB5+I,KAAK4+I,gBACzB,GAAIA,EACD,OAAOA,EAAcj4I,cAE3B,CAEA,OAAO,IACV,CAOAi4I,gBACG,OAAO5+I,KAAKu/I,qBAAqB32I,QAAQ7B,GAC/BA,EAAElI,IAAMmB,KAAKq/I,kBACpB,EACN,CAOAxC,sBAAsBh9I,GAKnB,OAJuB,MAAnBG,KAAK0/I,aACN1/I,KAAK0/I,WAAa1/I,KAAKq+I,oBAAoBx+I,IAGvCG,KAAK0/I,UACf,CAQArB,oBAAoBx+I,GACjB,IAAIuzG,EAAmB5vG,MAAMuH,MACzBovI,EAAY/1I,GAENA,EAAM,IAAMgvG,EAGlBlzG,EAAM,CACPC,UAAWg6I,EAAS,yBACpB3yI,WAAY2yI,EAAS,iBACrBwF,qBAAsBxF,EAAS,gBAC/ByF,iBAAkBzF,EAAS,eAG1Bl0C,EAAM,CACPpnG,GAAIqB,EAAIC,UACRO,KAAM,SACNO,IAAK,yBACLW,KAAM,CACH,CACG/C,GAAIqB,EAAIy/I,qBACRj/I,KAAM,aACNS,MAAOpB,EAAE,4CACT8B,WAAY,IACZa,MAAO1C,KAAK4+I,cACZ18I,QAASlC,KAAKs/I,cACdn9I,GAAI,CACDC,SAAU,CAACq+E,EAAQC,KAChBn/E,EAAO65I,aAAa36D,EAAQC,EAAO,MAmB9Cn/E,EAAUvB,KAAKuB,OAAS,CACzBs+I,WAAan/I,IACVgD,GAAGxD,EAAIC,WAAW2K,QAAQpK,EAAK,EAMlCo/I,uBAAwB,KACrB,IAAI93H,EAAWtkB,GAAGxD,EAAIC,WAAWwK,gBAC7Bo1I,EAAgB,GACpB/3H,EAAShkB,SAASiP,IACf8sI,EAAc17I,KAAK4O,EAAE,IAExB8sI,EAAc/7I,SAASiP,IAEhBA,EAAEjR,OAAOnD,IAAMqB,EAAIy/I,sBACpBj8I,GAAGxD,EAAIC,WAAWkL,WAAW4H,EAChC,GACD,EAGLmoI,aAAc,CAAC36D,EAAQC,KACpBn/E,EAAOu+I,yBAEP9/I,KAAKq/I,gBAAkB5+D,EACvB,IAAIi+D,EAAkB1+I,KAAK0+I,kBAE3B,GAAIA,GAcD,GAZA1+I,KAAKggJ,iBAAiBtB,GAEtB1+I,KAAKigJ,gBAAkBngJ,MAAM+8I,sBAC1B38I,EAAI0/I,kBAGPr+I,EAAOg9I,iBAGPh9I,EAAOs+I,WAAW7/I,KAAKigJ,gBAAgBx/I,IACvCT,KAAKigJ,gBAAgB58I,OAEjBrD,KAAKk/I,sBAAuB,CAC7B,IAAIgB,EAAcx8I,GAAG1D,KAAKigJ,gBAAgBx/I,GAAG5B,IACzCqhJ,IACDA,EAAY/6I,UACZ+6I,EAAYx7I,OAElB,OAEA1E,KAAK8B,GAAGqG,OAAO8uB,QAAQ,IAAI/3B,MAAM,6BAA8B,CAC5D29B,QAAS78B,KAAKq/I,iBAEpB,EAGHd,eAAgB,KAab,IAAI4B,EAAcngJ,KAAKw+I,sBAEvB2B,EAAYhgJ,UAAUH,KAAKJ,IAAKI,KAAKH,QACrC0B,EAAOs+I,WAAWM,EAAY1/I,IAC9B0/I,EAAY98I,KAAK,CAAC,EAAE,EAKvBqzD,aAAevwD,IAMZzC,GAAGxD,EAAIy/I,sBAAsB/6I,SAASuB,EAASk5I,iBAE3Cr/I,KAAKk7I,UACNl7I,KAAKk7I,SAASt2I,SAAS5E,KAAKg/I,aAG3Bh/I,KAAKigJ,iBACNjgJ,KAAKigJ,gBAAgBvpF,aAAavwD,EACrC,EAGHouI,WAAY,KAMT,IAAIpuI,EAAW,CAAEw2H,gBAAiB,IAUlC,OAPA38H,KAAKogJ,SAASp8I,SAASq8I,IACpB,IAAIC,EAAcD,EAAG9L,aACjB+L,GACDn6I,EAASw2H,gBAAgBt4H,KAAKi8I,EACjC,IAGIn6I,CAAQ,GAIrB,MAAO,CACJ1F,GAAIwlG,EACJ5iG,KAjISq5H,IAIT,GAHAA,EAAaA,GAAc18H,KAAK08H,WAG5B18H,KAAKq/I,gBAAiB,CACvB,IAAIz9C,EAASl+F,GAAGxD,EAAIy/I,sBAChB/9C,GACDA,EAAOh9F,SAAS5E,KAAKq/I,gBAE3B,GAyHA3oF,aAAevwD,IACZ5E,EAAOm1D,aAAavwD,EAAS,EAEhCouI,WAAY,IACFhzI,EAAOgzI,aAEjBhzI,OAAQA,EAEd,CAQAi9I,sBACG,IAAKx+I,KAAKk7I,SAAU,CACjBl7I,KAAKk7I,SAAW,IAAIJ,EACjB/6I,EAAE,gCAGL,IAAI0+I,EAAUz+I,KAAK0+I,kBACfD,GAASz+I,KAAKk7I,SAASn2I,WAAW05I,EACzC,CACA,OAAOz+I,KAAKk7I,QACf,CAUA1zH,QAAQtlB,GACLlC,KAAKm/I,UAAYj9I,EAAQyH,KAGzB,IAAI80I,EAAUz+I,KAAK0+I,kBACf32I,EAAQ02I,EAAQ12I,QAEhB42I,EAAkB3+I,KAAK4+I,gBAEvBxwG,EAAY,KAOZmyG,EAAmBpmI,IAGJna,KAAK6pC,WAAW9hC,QAE5B+5B,cAAc68G,EAAgB93I,WAAY3E,EAAQyH,MAClDwK,MAAMk8E,IAGJ,GAAKA,GAAyB,GAAhBA,EAAMnqF,OAApB,CAQA,IAAIhG,EAAMmwF,EAAM3xF,KAAKwU,GACXA,EAAErU,KAIZuvC,EAAY,CACTtkB,KAAM,MACNzI,MAAO,CACJ,CACGjd,IAAK,GAAGq6I,EAAQ76G,aAAa66G,EAAQpvH,OACrCU,KAAM,KACNrtB,MAAOxC,KAOZb,OAAOD,KAAKY,KAAKg/I,aAAa94I,OAAS,GACxCkoC,EAAU/sB,MAAMhd,KAAKrE,KAAKg/I,aAG7B7kI,GA3BA,MAFGA,GA6BC,IAEN/F,MAAM+F,EAAG,EAIhB,OAAO,IAAI9K,SAAQ,CAAC/P,EAAS+W,KAK1B,IAAImqI,EAAW,CAACxyI,EAAMmM,KACHna,KAAKm8I,oBAAoB,CAAC,EAAGnuI,GAI1CjG,EACIouE,OAAOnoE,EAAKnP,GAAImP,GAChBmG,MAAK,KACHgG,GAAI,IAEN/F,OAAOlM,IACLlI,KAAK8B,GAAGqG,OAAOC,UAAUF,EAAK,CAC3B+I,QACG,6EACHtH,KAAMzH,EAAQyH,OAEjBwQ,EAAGjS,EAAI,IAbbiS,GAeH,EAKHomI,GAAiBr4I,IACd,GAAIA,EAOD,OANApG,GAAGqG,OAAOC,UAAUF,EAAK,CACtB+I,QACG,4EACHtH,KAAMzH,EAAQyH,YAEjB0M,EAAOnO,GAIQ,OAAdkmC,EAKD9uC,IAGAyI,EACIioB,QAAQ,CAAEL,MAAOye,IACjBj6B,MAAMpK,IACJ,IAAI02I,EAAO,EAGP12I,GAAQA,EAAKJ,OACdI,EAAOA,EAAKJ,MAIfI,EAAK/F,SAASgK,IACXwyI,EAASxyI,GAAO9F,IACb,GAAIA,EACD,OAAOmO,EAAOnO,KAEjBu4I,GACY12I,EAAK7D,QAEd5G,GACH,GACD,IAIc,GAAfyK,EAAK7D,QACN5G,GACH,IAEF8U,MAAMiC,EACb,GACD,GAER,CAOAqgD,aAAavwD,GACVA,EAAWA,GAAY,CAAC,EAExBnG,KAAKq/I,gBAAkBl5I,EAASk5I,iBAAmB,KACnDr/I,KAAKg/I,YAAc74I,EAAS64I,aAAe,CAAC,EAE5Cl/I,MAAM42D,aAAavwD,GAGfnG,KAAK0/I,YACN1/I,KAAKuB,OAAOm1D,aAAavwD,EAE/B,CAOAouI,aAQG,IAAIpuI,EAAWrG,MAAMy0I,aAErBpuI,EAASk5I,gBAAkBr/I,KAAKq/I,gBAEhC,IAAIqB,EAAS,KAmBb,OAlBI1gJ,KAAKk7I,WACNwF,EAAS1gJ,KAAKk7I,SAASpvI,WACnBkB,MAAMC,QAAQyzI,KACfA,EAASA,EAAO,IAIfA,IACDA,EAAO52H,KAAO42H,EAAO52H,MAAQ,QAGnC3jB,EAAS64I,YAAc0B,EAGnB1gJ,KAAK0/I,aACNv5I,EAASu2H,WAAa18H,KAAKuB,OAAOgzI,cAG9BpuI,CACV,CAOAi2I,iBACOp8I,KAAKk7I,UACNl7I,KAAKk7I,SAASt2I,SAAS5E,KAAKg/I,YAElC,oBClhBH,MAAM2B,EAAmB,EAAQ,OAIjCphJ,EAAOC,QAAU,cAAuD,EASrEG,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKoE,IAAM,2CACXpE,KAAKmB,MAhBH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAgB7BxV,CAAE,2BAEfC,KAAKyqH,cAAgB,KAErBzqH,KAAKogJ,SAAW,EAInB,CAiCAvD,sBAAsBh9I,GAUnB,OATAG,KAAKimG,IAAM,CACRxlG,GAAI,CACDC,KAAM,SACNkB,KAAM,IAGTyB,KAAM,QAGFrD,KAAKimG,GACf,CAKAz+E,QAAQtlB,GACL,OAAO,IAAImN,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIrM,EAAO9H,EAAQ8H,KACnB,IAAKA,EAAM,OAEX,IAAImyE,EAAQnyE,EAAKgzD,YAAYh7C,GAAyB,SAAnBA,EAAE7b,SAASxE,OAC9C,IAAKw6E,EAAO,OAQZ,IAAI2vC,EAASpoH,GAAGy4E,EAAMt9E,IAClBitH,GAAQA,EAAOpnH,OAGnBxC,EAAQ8H,KAAK+6F,WAAW,MAExBzlG,GAAS,GAEf,oBCjGH,MAAMqhJ,EAAmB,EAAQ,OAIjCphJ,EAAOC,QAAU,cAA2D,EASzEG,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKoE,IAAM,+CACXpE,KAAKmB,MAhBH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAgB7BxV,CAAE,+BAEfC,KAAKyqH,cAAgB,KAErBzqH,KAAKogJ,SAAW,EAInB,CAiCAvD,sBAAsBh9I,GACnB,IAAIK,EAAM,CACP+Q,QAAS,GAAGpR,aAGfG,KAAKimG,IAAM,CACRxlG,GAAI,CACD5B,GAAIqB,EAAI+Q,QACRvQ,KAAM,WAGNI,OAAQ,KAGXuC,KAAM,OAEN9B,OAAQA,EAERm1D,aAAegmE,IACZn7H,EAAOm1D,aAAagmE,EAAW,EAElC6X,WAAY,IACFhzI,EAAOgzI,cAIpB,IAAIhzI,EAAS,CACVm1D,aAAegmE,IACZA,EAAaA,GAAc,CAAC,EAE5Bh5H,GAAGxD,EAAI+Q,SAASrM,SAAS83H,EAAWzrH,SAAW,GAAG,EAGrDsjI,WAAY,KAEF,CACJtjI,QAASvN,GAAGxD,EAAI+Q,SAASnF,YAAc,MAKhD,OAAO9L,KAAKimG,GACf,CAKAz+E,QAAQtlB,GACL,OAAO,IAAImN,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAIuqI,EAAiB5gJ,KAAK08H,WAAWzrH,SAAW,GAEhDzN,MAAMyN,QAAQ,CACXhD,KAAM2yI,EACNj/I,KAAM,SAGTrC,GAAS,GAEf,CAKAo3D,aAAavwD,GACVA,EAAWA,GAAY,CAAC,EACxBrG,MAAM42D,aAAavwD,GAGfnG,KAAKimG,KAGNjmG,KAAKimG,IAAIvvC,aAAavwD,EAASu2H,WAErC,CAKA6X,aAMG,IAAIpuI,EAAWrG,MAAMy0I,aAIrB,OAFApuI,EAASu2H,WAAa18H,KAAKimG,IAAIsuC,aAExBpuI,CACV,oBCpJH,MAAMw6I,EAAmB,EAAQ,OAC3Br3F,EAAiB,EAAQ,OACzBu3F,EAAe,EAAQ,OAE7B,IAAI9gJ,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhDhW,EAAOC,QAAU,cAAkD,EAShEG,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKoE,IAAM,sCACXpE,KAAKmB,MAAQpB,EAAE,uBAEfC,KAAKy8I,YAAc,KAEnBz8I,KAAKogJ,SAAW,EAInB,CAiCAvD,sBAAsBh9I,GACnB,IAAIK,EAAM,CACP8J,KAAM,GAAGnK,SACTs8E,MAAO,GAAGt8E,UACVkK,KAAM,GAAGlK,cACTihJ,kBAAmB,GAAGjhJ,sBACtBkhJ,SAAU,GAAGlhJ,aACboR,QAAS,GAAGpR,aAGfG,KAAKimG,IAAM,CACRxlG,GAAI,CACD5B,GAAIqB,EAAI8J,KACRtJ,KAAM,OACNK,MAAO,IACP46F,eAAgB,CACb3iC,cAAe,MACfn3D,WAAY,KAEfX,KAAM,CAEH,CACGH,MAAO,IACPa,KAAM,CACH,CACGlB,KAAM,OACNwG,KAAM,WACN/F,MAAOpB,EAAE,cAEZ,CACGW,KAAM,OACNwG,KAAM,YACN/F,MAAOpB,EAAE,cACTohF,SAAU39E,MAAM6d,MAAM2/H,QACtB7+I,GAAI,CACDC,SAAU,SAAUq+E,EAAQC,GACrB1gF,KAAK8L,aAAe9L,KAAKmhF,WAC1Bz9E,GAAGxD,EAAI8J,MAAMkV,YACV,YACA,oBAGHxb,GAAGxD,EAAI8J,MAAMkV,YAAY,aAAa,EAE5C,IAGN,CACGrgB,GAAIqB,EAAI4gJ,kBACRpgJ,KAAM,YACNwG,KAAM,WACN/F,MAAOpB,EAAE,QACTkB,IAAK,eACLF,MAAO,IACPS,KAAM,CACHT,MAAO,IACPa,KAAM,CACH,CACGd,OAAQ,IAEX,CACGjC,GAAIqB,EAAI6gJ,SACRhgJ,MAAO,IACPL,KAAM,SACNkB,KAAM,IAET,CACGlB,KAAM,SACNO,IAAK,gBACLU,KAAM,OACNyJ,KAAM,aACNjK,MAAOpB,EAAE,mBACTgB,MAAO,IACPO,MAAO,KACJC,EAAO0/I,YAAY,MAMlC,CACGvgJ,KAAM,OACNwG,KAAM,UACN/F,MAAOpB,EAAE,YAEZ,CACGW,KAAM,WACN7B,GAAIqB,EAAI+Q,QACR/J,KAAM,UACN/F,MAAOpB,EAAE,WACTgB,MAAO,IACPD,OAAQ,OAsBjB,CACGc,KAAM,CACH,CACGlB,KAAM,WACNiB,KAAM,SACNglE,SAAU,UAEb,CACG9nE,GAAIqB,EAAI6J,KACRrJ,KAAM,OACNK,MAAO,IACPE,IAAK,CAAE,mBAAoB,oBAC3B0lE,SAAU,SAAUnvD,EAAKw2B,GACtB,OAAOzsC,EAAO2/I,cAAc1pI,EAAKw2B,EACpC,EACA7rC,GAAI,CACD+H,YAAa,SAAUrL,EAAII,EAAGqD,GAC3B,IAAInC,EAAYH,KAAK0sB,QAAQ7tB,GAE7B0C,EAAO4/I,WAAWhhJ,EACrB,QAQlBkD,KAAM,KACCrD,KAAKy8I,cACN/4I,GAAGxD,EAAI6J,MAAMkN,MACVjX,KAAKy8I,YAAY31I,QAAQC,GAAMA,EAAEugC,qBAEpC5jC,GAAGxD,EAAI6J,MAAMtF,WAGhBlD,EAAO6/I,WAAW,EAGrB7/I,OAAQA,EAERm1D,aAAegmE,IACZn7H,EAAOm1D,aAAagmE,EAAW,EAElC6X,WAAY,IACFhzI,EAAOgzI,cAIpB,IAAIhzI,EAAS,CACVm1D,aAAegmE,IACZA,EAAaA,GAAc,CAAC,EAE5Bh5H,GAAGxD,EAAI8J,MAAM8qF,UAAU4nC,IAGNA,EAAWqkB,UAAY,IAC7B/8I,SAASuL,IACjBhO,EAAO0/I,WAAW,CACft/I,KAAM4N,EAAE5N,KACR0/I,UAAW9xI,EAAE8xI,UACb3+I,MAAO6M,EAAE7M,OACV,IAGLnB,EAAO6/I,WAAW,EAGrB7M,WAAY,KACT,IAAIvrD,EAAWtlF,GAAGxD,EAAI8J,MAAMkqF,aAAe,CAAC,EAGxCotD,EAAa,GAiBjB,OAhBA59I,GAAGxD,EAAI6gJ,UACHp2I,gBACA3G,SAAS/E,IAEP,IACIoiJ,EAAYpiJ,EAAE4/E,UAAU,CAAE33E,KAAM,cAAe4E,WAC/CpJ,EAAQzD,EAAE4/E,UAAU,CAAE33E,KAAMm6I,IAAav1I,WAE7Cw1I,EAAWj9I,KAAK,CACb1C,KALQ,KAMR0/I,UAAWA,EACX3+I,MAAOA,GACR,IAID,CACJ6+I,SAAUv4D,EAAmB,SAC7Bw4D,UAAWx4D,EAAoB,UAC/B+3D,SAAUO,EACVnzF,QAAS66B,EAAkB,QAC3B/3E,QAAS+3E,EAAkB,QAC7B,EAYJy4D,gBAAkBt7I,IAGR,CACJpF,MAAO,IACPG,KAAM,CAcH,CACGR,KAAM,aACNwG,KAAM,YACNxE,OArBTyD,EAAWA,GAAY,CAAC,GAqBCk7I,WAAa,QAC7BtgJ,MAAO,IACPmB,QAAS,CACN,CACGrD,GAAI,QACJ6D,MAAO3C,EAAE,2BAEZ,CAAElB,GAAI,QAAS6D,MAAO3C,EAAE,mBACxB,CAAElB,GAAI,QAAS6D,MAAO3C,EAAE,gBAE3BoC,GAAI,CACDC,SAAU,SAAUq+E,EAAQC,GACzBn/E,EAAOmgJ,gBAAgBjhE,EAAQzgF,KAClC,IAGN,CACGe,MAAO,IACPmG,KAAM,aACNy6I,aAAcx7I,EAASk7I,WAAa,QACpCngJ,KAAM,CACH,CACGR,KAAM,OACNwG,KAAM,QACN2sC,MAAO,QACPnxC,MACyB,SAAtByD,EAASk7I,UACJl7I,EAASzD,MACT,GACRy+E,SAAU39E,MAAM6d,MAAM2/H,QACtBjgJ,MAAO,IACPoB,GAAI,CACDC,SAAU,SAAUq+E,EAAQC,GACzBn/E,EAAOqgJ,iBACV,IAGN,CACGlhJ,KAAM,aACNwG,KAAM,QACN2sC,MAAO,QACPnxC,MACyB,SAAtByD,EAASk7I,UACJl7I,EAASzD,MACT,GACR3B,MAAO,IACP6/E,QAAS,CACNz+E,GAAI,CACD0+E,aAAc,WACX7gF,KAAKwE,OAAO,QAAS,KACrBxE,KAAKY,QACR,GAEH+I,KAAMpI,EAAOsgJ,sBAGnB,CACGnhJ,KAAM,aACNwG,KAAM,QACN2sC,MAAO,QACPnxC,MACyB,SAAtByD,EAASk7I,UACJl7I,EAASzD,MACT,GACR3B,MAAO,IACP6/E,QAAS,CACNz+E,GAAI,CACD0+E,aAAc,WACX7gF,KAAKwE,OAAO,QAAS,KACrBxE,KAAKY,QACR,GAEH+I,KAAMpI,EAAOugJ,mBAKzB,CACGphJ,KAAM,SACNO,IAAK,eACLU,KAAM,OACNyJ,KAAM,gBACNrK,MAAO,GACPO,MAAO,WACJ,IAAIygJ,EAAU/hJ,KAAKsL,gBAEnB/J,EAAOygJ,cAAcD,EACxB,MAMZd,WAAa96I,IACV,IAAIqrB,EAAQ9tB,GAAGxD,EAAI6gJ,UAAUp2I,gBAAgBzE,OAE7CxC,GAAGxD,EAAI6gJ,UAAUj2I,QAAQvJ,EAAOkgJ,gBAAgBt7I,GAAWqrB,GAE3DjwB,EAAO6/I,WAAW,EAGrBM,gBAAiB,CAAC//I,EAAMwhG,KACrB,IACI8+C,EADa9+C,EAAQ73F,gBACIuzE,UAAU,CAAE33E,KAAM,eAE/C,OAAQvF,GACL,IAAK,QACFsgJ,EAAYpgE,UAAU,SACtB,MACH,IAAK,QACFogE,EAAYpgE,UAAU,SACtB,MACH,QACGogE,EAAYpgE,UAAU,SAI5Bn+E,GAAGxD,EAAI4gJ,mBAAmB1pE,QAAQ,EAGrC4qE,cAAgBD,IACbr+I,GAAGxD,EAAI6gJ,UAAU11I,WAAW02I,GAE5BxgJ,EAAO6/I,WAAW,EAGrBQ,gBAAiB,KACd,IAAIM,GAAa,EAEjBx+I,GAAGxD,EAAI6gJ,UACHp2I,gBACA3G,SAASiP,IACP,IAAIkvI,EAAYlvI,EAAE4rE,UAAU,CAAE33E,KAAM,UAChCi7I,EAAUr2I,aAAeq2I,EAAUhhE,aACpC+gE,GAAa,EAChB,IAGFA,EAAYx+I,GAAGxD,EAAI8J,MAAMkV,YAAY,YAAY,GAChDxb,GAAGxD,EAAI8J,MAAMkV,YAAY,WAAY,mBAAmB,EAGhEgiI,cAAe,CAACv7I,EAAOqoC,IACb,mBAAmBroC,EAAMyF,gDAAgDzF,EAAMxE,QAGzF0gJ,kBAAmB,KAChB,IAAIO,EAAiB,GACjBlgJ,EAAU,GAEVmgJ,EAAe,CAAClsD,EAASmsD,KAC1B,IAAIC,EAAcpsD,EACdrvF,QAAQC,GAAMA,aAAa85I,IAC3BniJ,KAAKqI,IACH,IAAIy7I,EAAQ,GACTC,EAAW,GAUd,OARIH,GACDE,EAAQ,GAAGF,EAAMzjJ,MAAMkI,EAAE4hB,eACzB85H,EAAW,GAAGtsD,EAAQh1F,SAAS4F,EAAE5F,UAAUmhJ,EAAMnhJ,WAEjDqhJ,EAAQ,IAAIz7I,EAAE4hB,eACd85H,EAAW,GAAGtsD,EAAQh1F,SAAS4F,EAAE5F,SAG7B,CACJtC,GAAI2jJ,EACJ9/I,MAAO+/I,EACT,IAKPvgJ,EAAUA,EAAQ4lB,OAAOy6H,EAAY,EAsBxC,OAnBAF,EAAariJ,KAAKy8I,aAElBz8I,KAAKy8I,YAAY31H,gBAAgB9iB,SAAS+C,IAMpCq7I,EAAel1I,QAAQnG,EAAElI,KAAO,IAKnCujJ,EAAe/9I,KAAK0C,EAAElI,IAGtBwjJ,EAAat7I,EAAEJ,eAAgBI,GAAE,IAG7B7E,CAAO,EAGjB4/I,aAAc,KACX,IAAI5/I,EAAU,GAyBd,OAtBgBlC,KAAKm7I,YAAYr5I,GAAGmkB,iBAAiB2G,IAClD,IAAIpV,EAAMoV,EAAGjB,WACb,OACGiB,EAAGzmB,SAAS6jB,SACZxS,GACAA,EAAI1Q,QAAQC,GAAe,SAATA,EAAE3C,MAAgB8B,OAAS,CAC/C,IAGMlC,SAASyvB,IACZA,EAAG9H,YACJ8H,EAAG9H,WACC7kB,QAAQC,GAAe,SAATA,EAAE3C,MAChBJ,SAAS+C,IACP7E,EAAQmC,KAAK,CACVxF,GAAI,GAAG40B,EAAG50B,MAAMkI,EAAElI,KAClB6D,MAAO,GAAG+wB,EAAGtyB,SAAS4F,EAAE5F,SACzB,GAEX,IAGIe,CAAO,EAGjBi/I,WAAax7I,IACV,IAAI+8I,EAAYl/I,MAAMm/I,UAAUC,WAC5BjtI,EAAM,GAGkB,QAAzB+sI,EAAU1gJ,OAAOtB,MACQ,YAAzBgiJ,EAAU1gJ,OAAOtB,OAEbgiJ,EAAU52I,WAAU6J,EAAM+sI,EAAU52I,YAEpC42I,EAAU99I,UACX89I,EAAU99I,SAAS,GAAG+Q,IAAMhQ,EAAMxE,SAErCqC,MAAMm/I,UAAUE,SAASH,GAC5B,EAGHtB,UAAW,KACR19I,GAAGxD,EAAI4gJ,mBAAmB1pE,SAC1B1zE,GAAGxD,EAAI+Q,SAASmmE,QAAQ,GAI9B,OAAOp3E,KAAKimG,GACf,CAQAz+E,QAAQtlB,GAEL,IAAKsB,MAAM6d,MAAM2/H,QAAQhhJ,KAAK08H,WAAW8kB,WACtC,OAAOnyI,QAAQ/P,UAGlB,IAAIgiJ,EAAa,GAEjB,OAAOjyI,QAAQ/P,UACX6U,MAAK,IAEI,IAAI9E,SAAQ,CAAC/P,EAAS+W,KAC1B,IAAI20C,EAAQ,GAEZhrD,KAAK08H,WAAWqkB,SAAS/8I,SAAS8+I,IAC/B93F,EAAM3mD,KACH,IAAIgL,SAAQ,CAAC+b,EAAMljB,KAIhB,GAAqB,SAAjB46I,EAAIzB,UAAsB,CAC3B,IAAI0B,EAAgBD,EAAIpgJ,MAAM8lB,MAAM,KAAK,GACrCw6H,EAAahjJ,KAAKy8I,YAAY33I,YAAYujB,WAC3C06H,GAEH,GAAIC,EAAY,CAEb,GAAIA,EAAWh+I,OAAOnG,IAAMmB,KAAKy8I,YAAY59I,GAAI,CAC9C,IAAIokJ,EACD/gJ,EAAQyH,KAAKq5I,EAAWn8I,YACvBo8I,IACD3B,EAAaA,EAAWx5H,OAAOm7H,GACrC,KAEK,CACF,IAAIC,EAAcJ,EAAIpgJ,MAAM8lB,MAAM,KAAK,GACtBxoB,KAAKy8I,YAAY31I,QAC9BC,GACEA,aAAauiD,GACbviD,EAAElI,IAAMqkJ,IAEHl/I,SAAS+C,IACjB,IAAI+nH,EACD5sH,EAAQyH,KAAK5C,EAAE+pB,iBAAmB,GAIlCg+F,IACC9hH,MAAMC,QAAQ6hH,KAEfA,EAAa,CAACA,IAGjBA,EAAW9qH,SAAS2sB,IACjB,IAAI/gB,EAAQ+gB,EAAEqyH,EAAWn8I,YACrB+I,IACD0xI,EAAaA,EAAWx5H,OAAOlY,GAAM,GACzC,GAER,CAEAwb,GACH,MACGA,GAEN,MAGK,GAAqB,SAAjB03H,EAAIzB,UAAsB,CAChC,IAAI8B,EAAiBL,EAAIpgJ,MACzB,IAAKygJ,EAAgB,OAAO/3H,IAE5B,IAAImhH,EAAO4W,EAAe36H,MAAM,KAAK,GACjCje,EAAU44I,EAAe36H,MAAM,KAAK,GAEpC46H,EAAUpjJ,KAAKm7I,YAAYr5I,GAAGiqB,mBAC/BwgH,GAEH,IAAK6W,EAAS,OAAOh4H,IAErB,IAAIzlB,EAAQy9I,EAAQz3H,WAAW/d,UAAUrD,GACzC,IAAK5E,EAAO,OAAOylB,IAGnBg4H,EAAQzuH,UAAU3wB,SAAS2F,IACxB,IAAI05I,EAAY15I,EAAKhE,EAAMkB,YACvBw8I,GAAW/B,EAAWj9I,KAAKg/I,EAAU,IAG5Cj4H,GACH,MAIGk2H,EAAWj9I,KAAKy+I,EAAIpgJ,OACpB0oB,GACH,IAEL,IAGJ/b,QAAQkS,IAAIypC,GAAO52C,MAAMiC,GAAQlC,KAAK7U,EAAQ,MAGnD6U,MAAK,IAEI,IAAI9E,SAAQ,CAAC/P,EAAS+W,KAG1B,KAFAirI,EAAathJ,KAAK8B,GAAG2gB,KAAK6+H,GAAY14I,QAAQ2G,GAAMA,MAEjC+xI,EAAWp7I,OAAS,EAAG,OAAO5G,IAGjD,IAAIiiJ,EAAWvhJ,KAAK08H,WAAW6kB,SAC5BpzF,EAAUnuD,KAAK08H,WAAWvuE,QAC1Bl9C,EAAUjR,KAAK08H,WAAWzrH,QAE7BjR,KAAKy8I,YACD31I,QAAQC,GAAMA,EAAEugC,oBAChBtjC,SAAS+C,IACP,IAAI4/D,EAAW,IAAItkD,OAAO,IAAItb,EAAE5F,SAAU,KACvCwI,EAAO5C,EAAEyZ,OAAOte,EAAQyH,MAE3B43I,EAAWA,EAAS1uI,QAAQ8zD,EAAUh9D,GACtCwkD,EAAUA,EAAQt7C,QAAQ8zD,EAAUh9D,GACpCsH,EAAUA,EAAQ4B,QAAQ8zD,EAAUh9D,EAAK,IAI/C3J,KAAK8B,GAAGmN,QAAQe,KAAK,CAClBC,IAAK,qBACLsF,OAAQ,CACLgsI,SAAUA,EACVC,UAAWxhJ,KAAK08H,WAAW8kB,UAC3BrzF,QAASA,EACTl9C,QAASA,EACTqwI,WAAYthJ,KAAK8B,GAAG2gB,KAAK6+H,MAG3BntI,MAAK,KACH7U,GAAS,IAEX8U,MAAMiC,EAAO,KAG7B,CAKAqgD,aAAavwD,GACVA,EAAWA,GAAY,CAAC,EACxBrG,MAAM42D,aAAavwD,GAGfnG,KAAKimG,KAGNjmG,KAAKimG,IAAIvvC,aAAavwD,EAASu2H,WAErC,CAKA6X,aAMG,IAAIpuI,EAAWrG,MAAMy0I,aAIrB,OAFApuI,EAASu2H,WAAa18H,KAAKimG,IAAIsuC,aAExBpuI,CACV,oBCjuBH,MAAMw6I,EAAmB,EAAQ,OAIjCphJ,EAAOC,QAAU,cAAsD,EASpEG,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKoE,IAAM,0CACXpE,KAAKmB,MAhBH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAgB7BxV,CAAE,gCAEfC,KAAKyqH,cAAgB,KAErBzqH,KAAKogJ,SAAW,EAInB,CAiCAvD,sBAAsBh9I,GACnB,IAAIK,EAAM,CACPojJ,aAAc,GAAGzjJ,kBAGpBG,KAAKimG,IAAM,CACRxlG,GAAI,CAAE5B,GAAIqB,EAAIojJ,aAAc5iJ,KAAM,aAAcwB,QAAS,IAEzDmB,KAAM,KACH9B,EAAO4nF,iBAAiB,EAG3B5nF,OAAQA,EAERm1D,aAAegmE,IACZn7H,EAAOm1D,aAAagmE,EAAW,EAElC6X,WAAY,IACFhzI,EAAOgzI,cAIpB,IAAIhzI,EAAS,CACV4nF,gBAAiB,KAEd,IAAIo6D,EAAe,GAQfC,EAAU,CAACC,EAAWC,EAAQ/hJ,EAAM2mE,KACrCo7E,EAASA,GAAU,GAEnB,IAAIt4I,EAAO,eACC,OAARzJ,IAAeyJ,EAAO,yBAE1B,IAAI4xD,EAAaymF,EAAUzmF,aAE3BumF,EAAal/I,KAAK,CACfxF,GAAI4kJ,EAAU5kJ,GACd6D,MAAOghJ,EAASD,EAAUtiJ,MAC1BQ,KAAMA,EACN2mE,OAAQtL,EAAaA,EAAWn+D,GAAK,KAErCuM,KAAMA,IAGG,QAARzJ,GAA0B,OAARA,IACf8hJ,EAAU59H,OACX49H,EAAU59H,QAAQ7hB,SAAQ,SAAUge,GACjCwhI,EAAQxhI,EAAG0hI,EAAS,IAAK,OAC5B,IAICD,EAAUh8H,OACXg8H,EACIh8H,OAAOxU,GAAe,OAATA,EAAE7O,MACfJ,SAASo/G,IAEPA,EAAI37F,QAAQzjB,SAASqlE,IAClBm6E,EACGn6E,EACAq6E,EAAS,IACT,MACAD,EAAU5kJ,GACZ,GACF,IAGd,EAGH2kJ,EAAQxjJ,KAAKm7I,YAAYh+E,WAAY,GAAI,QAEzCz5D,GAAGxD,EAAIojJ,cAAc9+I,OAAO,UAAW++I,GACvC7/I,GAAGxD,EAAIojJ,cAAc7+I,SAAS,EAGjCiyD,aAAegmE,IACZA,EAAaA,GAAc,CAAC,EAE5Bh5H,GAAGxD,EAAIojJ,cAAc1+I,SAClB83H,EAAW/zD,OAAS+zD,EAAWp0D,QAAU,GAC3C,EAGJisE,WAAY,KACT,IAAI5mI,EAAS,CAAC,EAEVg2I,EAAajgJ,GAAGxD,EAAIojJ,cAAcx3I,WAClC09E,EAAe9lF,GAAGxD,EAAIojJ,cACtB7gE,WACAP,UACAlgF,OAAO2H,KAAKf,QAAQ4oC,GAAQA,EAAI3yC,IAAM8kJ,IAAY,GAiBtD,OAhBIn6D,IAGE77E,EAFsB,OAArB67E,EAAa7nF,KAEL,CACN2mE,OAAQkhB,EAAalhB,OACrBK,MAAOg7E,GAID,CACNr7E,OAAQq7E,IAMVh2I,CAAM,GAInB,OAAO3N,KAAKimG,GACf,CAKAz+E,QAAQtlB,GACL,OAAO,IAAImN,SAAQ,CAAC/P,EAAS+W,KAE1B,GAAIrW,KAAK08H,WAAWp0D,SACjBpmE,EAAQ8H,KAAK+6F,WAAW/kG,KAAK08H,WAAWp0D,QAEpCtoE,KAAK08H,WAAW/zD,OAAO,CACxB,IAAIi7E,EAAU1hJ,EAAQ8H,KAAKlF,YAAY+gB,OACnC7D,GAAMA,EAAEnjB,IAAMmB,KAAK08H,WAAWp0D,SAC/B,GACD,GACF,IAAKs7E,EAAS,OAAOtkJ,IAGrB,IAAI+pE,EAAUu6E,EAAQn8H,OAClBxU,GAAMA,EAAEpU,IAAMmB,KAAK08H,WAAW/zD,QAC/B,GACD,GACF,IAAKU,EAAS,OAAO/pE,IAErB,IAAI8jH,EAAM/5C,EAAQ30D,OAClB,IAAK0uG,EAAK,OAAO9jH,IAEjB,IAAIumI,EAAgB7pG,IACjB,IAAKA,EAAQtnB,OAAQ,OAAO,EAC5B,IAAIqxH,EAAa/pG,EAAQtnB,OACzB,IAAKqxH,EAAWrxH,OAAQ,OAAO,EAC/BqxH,EAAWrxH,OAAOtF,KAAK,YAAa22H,EAAWlnI,IAC/CgnI,EAAaE,EAAWrxH,OAAO,EAGlCmxH,EAAaziB,GACb,IAAI0iB,EAASvT,aAAY,WAClB7uH,GAAG2lE,EAAQxqE,KAAO6E,GAAG2lE,EAAQxqE,IAAIwlF,YAClCmuC,cAAcsT,GAGjB1iB,EAAIh0G,KAAK,YAAai6D,EAAQxqE,GACjC,GAAG,IACN,CAGHS,GAAS,GAEf,CAKAo3D,aAAavwD,GACVA,EAAWA,GAAY,CAAC,EACxBrG,MAAM42D,aAAavwD,GAGfnG,KAAKimG,KAGNjmG,KAAKimG,IAAIvvC,aAAavwD,EAASu2H,WAErC,CAKA6X,aAMG,IAAIpuI,EAAWrG,MAAMy0I,aAIrB,OAFApuI,EAASu2H,WAAa18H,KAAKimG,IAAIsuC,aAExBpuI,CACV,oBClQH,MAAMw6I,EAAmB,EAAQ,OAIjCphJ,EAAOC,QAAU,cAAuD,EASrEG,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKoE,IAAM,2CACXpE,KAAKmB,MAhBH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAgB7BxV,CAAE,+BAEfC,KAAKyqH,cAAgB,KAErBzqH,KAAKogJ,SAAW,EAInB,CAiCAvD,sBAAsBh9I,GACnBG,KAAKimG,IAAM,CACRxlG,GAAI,CACDC,KAAM,QACNS,MAAOnB,KAAKmB,OAGfkC,KAAM,OAEN9B,OAAQA,GAGX,IAAIA,EAAS,CAAC,EAEd,OAAOvB,KAAKimG,GACf,CAKAz+E,QAAQtlB,GACL,OAAO,IAAImN,SAAQ,CAAC/P,EAAS+W,KAC1B,IACI2mD,EADc96D,EAAQ8H,KAAKgzD,aACFA,aAG7B96D,EAAQ8H,KAAK+6F,WAAW/nC,EAAWn+D,IAEnCS,GAAS,GAEf,oBCzFH,MAAMqhJ,EAAmB,EAAQ,OAIjCphJ,EAAOC,QAAU,cAAoD,EASlEG,YAAYC,EAAKC,GACdC,QAEAE,KAAKJ,IAAMA,EACXI,KAAKoE,IAAM,wCACXpE,KAAKmB,MAhBH,KAAIoU,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAgB7BxV,CAAE,mCAEfC,KAAKyqH,cAAgB,KAErBzqH,KAAKogJ,SAAW,EAInB,CAiCAvD,sBAAsBh9I,GACnB,IAAIK,EAAM,CACP2jJ,QAAS,GAAGhkJ,aAGfG,KAAKimG,IAAM,CACRxlG,GAAI,CACD5B,GAAIqB,EAAI2jJ,QACRnjJ,KAAM,QAGT2C,KAAM,OAEN9B,OAAQA,EAERm1D,aAAegmE,IACZn7H,EAAOm1D,aAAagmE,EAAW,EAElC6X,WAAY,IACFhzI,EAAOgzI,cAIpB,IAAIhzI,EAAS,CACVm1D,aAAegmE,IACZA,EAAaA,GAAc,CAAC,EAE5Bh5H,GAAGxD,EAAI2jJ,SAASj/I,SAAS83H,EAAWmnB,SAAW,GAAG,EAGrDtP,WAAY,KAEF,CACJsP,QAASngJ,GAAGxD,EAAI2jJ,SAAS/3I,YAAc,MAKhD,OAAO9L,KAAKimG,GACf,CAKAz+E,QAAQtlB,GACL,OAAO,IAAImN,SAAQ,CAAC/P,EAAS+W,KAEtBrW,KAAK08H,WAAWmnB,SACjB3qI,OAAOyuG,KACJ,UAAU3nH,KAAK08H,WAAWmnB,QAAQhxI,QAAQ,UAAW,MACrD,UAGNvT,GAAS,GAEf,CAKAo3D,aAAavwD,GACVA,EAAWA,GAAY,CAAC,EACxBrG,MAAM42D,aAAavwD,GAGfnG,KAAKimG,KAGNjmG,KAAKimG,IAAIvvC,aAAavwD,EAASu2H,WAErC,CAKA6X,aAMG,IAAIpuI,EAAWrG,MAAMy0I,aAIrB,OAFApuI,EAASu2H,WAAa18H,KAAKimG,IAAIsuC,aAExBpuI,CACV,oBCjJH,MAAMw6I,EAAmB,EAAQ,OAEjC,IAAI5gJ,EAAI,IAAIwV,IAAWzT,GAAGkP,aAAa7P,SAASoU,GAEhD,IAAIuuI,EAAwC,CACzCj6H,iBAAkB,CAEfC,KAAM,MACNzI,MAAO,KAIb9hB,EAAOC,QAAU,cAA4CmhJ,EAO1DhhJ,YAAYC,EAAKC,EAAQs7I,GACtBr7I,MAAMF,EAAKC,EAAQs7I,GAEnBn7I,KAAKoE,IAAM,uCACXpE,KAAKmB,MAAQpB,EAAE,iBAEfC,KAAK+jJ,aAAe,KAEpB/jJ,KAAKogJ,SAAW,GAKhBpgJ,KAAKgkJ,WAAa,CAAC,CACtB,CAKAnH,sBAAsBh9I,GAKnB,OAJuB,MAAnBG,KAAKikJ,aACNjkJ,KAAKikJ,WAAajkJ,KAAKkkJ,iBAAiBrkJ,IAGpCG,KAAKikJ,UACf,CAKAC,iBAAiBrkJ,GACd,IAAIuzG,EAAmB5vG,MAAMuH,MAKzB7K,EAAM,CACPsH,YAAqB,aAHd,GAAG3H,gBAAiBuzG,MAiB1B7xG,EAAS,CACV4iJ,aAAc,KAEX,IAAIC,EAAa7iJ,EAAO8iJ,UACxB,GAAKD,EAAL,CAGA,IAEIE,EAFOF,EAAWz5I,gBAEJ/B,QAAQ2G,GAChBA,EAAEsvE,WAAU,SAAUn+E,GAC1B,MAA2B,SAApBA,EAAKsB,OAAOkF,OAAoBxG,EAAKoL,UAC/C,MACA,GACEw4I,GAELF,EAAW/4I,WAAWi5I,EAZC,CAYM,EAMhCA,OAAS36I,IAEN,IAAIy6I,EAAa7iJ,EAAO8iJ,UACxB,GAAKD,EAAL,CAGA,IAAIxiJ,EAAOwiJ,EAAWz5I,gBACtB,KACW,MAARhB,GACA/H,EAAKgH,QAAQ2G,GACHA,EAAEsvE,WAAU,SAAUn+E,GAC1B,MAA2B,SAApBA,EAAKsB,OAAOkF,OAAoBxG,EAAKoL,UAC/C,MACA5F,OAAS,GANf,CAWA,IAAIkZ,EAAMpf,KAAKukJ,gBAAgB1kJ,GAG/BukJ,EAAWt5I,QAAQsU,EAAI3e,IAGvB2e,EAAI/b,KAAK,CACNmhJ,MAAO,KAEJjjJ,EAAO+iJ,QAAQ,EAElB5I,SAAWltH,IAERjtB,EAAOkjJ,OAAOj2H,EAAM,EAEvB7kB,KAAMA,IAIT3J,KAAKogJ,SAAS/7I,KAAK+a,EAtBV,CAZc,CAkCA,EAG1BqlI,OAASj2H,IAENxuB,KAAKogJ,SAASp8I,SAAQ,CAACuL,EAAG3D,KACnB2D,EAAE9O,GAAG5B,IAAM2vB,GAAOxuB,KAAKogJ,SAASp0I,OAAOJ,EAAO,EAAE,IAIvD,IAAIw4I,EAAa7iJ,EAAO8iJ,UACnBD,GAGLA,EAAW/4I,WAAW3H,GAAG8qB,GAAO,EAGnCs7F,UAAW,KACR,IAAIs6B,EAAa7iJ,EAAO8iJ,UACxB,GAAKD,EAAL,CAEA,IAAI5uD,EAAW4uD,EAAWz5I,gBAQtBixI,EAAgB,GACpBpmD,EAASxxF,SAASV,IACfs4I,EAAcv3I,KAAKf,EAAE,IAExBs4I,EAAc53I,SAASV,IACpB8gJ,EAAW/4I,WAAW/H,EAAE,IAI3BtD,KAAKogJ,SAAW,EAnBO,CAmBL,EAGrBiE,QAAS,IACW3gJ,GAAGxD,EAAIsH,cAGrBxH,KAAKm7I,YAAYr5I,GAAGqG,OAAOC,UACxB,IAAIlJ,MAAM,iBACV,CACGgQ,QACG,mEACHrQ,GAAIqB,EAAIsH,aAGP,MAMbstF,UAAY4nC,KAOTA,EAAaA,GAAc,CAAC,GACjBC,gBAAkBD,EAAWC,iBAAmB,GAG1Cp7H,EAAO8iJ,YAIxB9iJ,EAAOuoH,YAGH4S,EAAWC,gBAAgBz2H,OAAS,GACrCw2H,EAAWC,gBAAgB34H,SAASuL,IACjChO,EAAO+iJ,OAAO/0I,EAAE,IAQtBhO,EAAO4iJ,eAGP5iJ,EAAO+iJ,SAAQ,EAGlB5tF,aAAevwD,IAEZ,IAAIu+I,EAAav+I,EAASu2H,YAAcv2H,EAExC5E,EAAOuzF,UAAU4vD,EAAW,EAG/BnQ,WAAY,KAMT,IAAIpuI,EAAW,CAAEw2H,gBAAiB,IAUlC,OAPA38H,KAAKogJ,SAASp8I,SAASq8I,IACFA,EAAG9L,cAElBpuI,EAASw2H,gBAAgBt4H,KAAKg8I,EAAG9L,aACpC,IAGIpuI,CAAQ,GAIrB,MAAO,CACJ1F,GA/LO,CACPC,KAAM,OACN7B,GAAIqB,EAAIsH,WACRwB,SAAU,IA6LV3F,KA1LSq5H,IACTA,EAAaA,GAAc18H,KAAK08H,WAChCn7H,EAAOuzF,UAAU4nC,EAAW,EAyL5BhmE,aAAevwD,IACZ5E,EAAOm1D,aAAavwD,EAAS,EAEhCouI,WAAY,IACFhzI,EAAOgzI,aAEjBhzI,OAAQA,EAEd,CAEAgjJ,gBAAgB1kJ,GACb,IAmBI8kJ,EAnBAvxC,EAAmB5vG,MAAMuH,MACzBovI,EAAY/1I,GAENA,EAAM,IAAMgvG,EAGlBlzG,EAAM,CACPkf,IAAK+6H,EAAS,OACd3yI,WAAY2yI,EAAS,iBACrBx0I,MAAOw0I,EAAS,SAChBz3I,MAAOy3I,EAAS,SAChByK,SAAUzK,EAAS,YACnB0K,SAAU1K,EAAS,YACnB2K,WAAY3K,EAAS,cACrBlH,UAAWkH,EAAS,aACpB4K,UAAW5K,EAAS,OACpB6K,aAAc7K,EAAS,WAKtB54I,EAAS,CACVgC,UAAW,CACRihJ,MAAO,OACP9I,SAAU,QAGbuJ,cAAe,KACZvhJ,GAAGxD,EAAIkf,KAAKzU,gBAAgB,GAAGA,gBAAgB,GAAGjG,OAClDhB,GAAGxD,EAAIkf,KAAKzU,gBAAgB,GAAGA,gBAAgB,GAAGhG,MAAM,EAG3DkG,aAAeq6I,IACZ,IAAIhjJ,EAAU,GACd,GAAIlC,KAAK+jJ,eACN7hJ,GAAWlC,KAAK+jJ,aAAaj9I,UAAY,IAAIpI,KAAKqI,IACxC,CACJlI,GAAIkI,EAAElI,GACN6D,MAAOqE,EAAE5F,UA6BX+jJ,GAAc,CAEf,IAAIC,EAAW,CAAC,EAChBnlJ,KAAKogJ,SAASp8I,SAASob,IACpB,IAAI6kF,EAAUvgG,GAAG0b,EAAI3e,GAAG5B,IACxB,GAAIolG,EAAS,CACV,IAAIt+F,EAAQs+F,EACRt5F,gBAAgB,GAChBA,gBAAgB,GACpBw6I,EAASx/I,EAAMmG,aAAc,CAChC,KAEH5J,EAAUA,EAAQ0G,QAAQ5J,IACfmmJ,EAASnmJ,EAAEH,KAEzB,CAEH,OAAOqD,CAAO,EAGjBoD,QAAS,KACN,IAAIgC,EAAYtH,KAAKm7I,YAAYr5I,GAAGic,WAAWzW,YAC3C+xD,EAAa31D,GAAGxD,EAAIkf,KAAKzU,gBAAgB,GAAGA,gBAAgB,GAC5Dy6I,EAAW/rF,EAAW/tD,gBAAgBA,gBAEtC3F,EAAQ3F,KAAKqlJ,qBAAqB3hJ,GAAGxD,EAAIyF,OAAOmG,YACpD,GAAInG,EAAO,CACR,IAAIjD,EAAQiD,EAAMmG,SAASutD,EAAY,CAAC,GAWpC7hD,EAAM,CAAC,EAsBX,OArBAA,EAAI7R,EAAMkB,YAAcnE,EAExBiD,EAAMwqB,YAAY3Y,EAAKlQ,IAIX,IAAT5E,GACS,MAATA,GACCsK,MAAMC,QAAQvK,IAA0B,GAAhBA,EAAMwD,SAE/BoB,EAAUmW,SACP9X,EAAMkB,WACN9G,EAAE,wBAMRqlJ,EAASj0C,kBACT7pG,EAAUE,WAAW49I,GAEd99I,EAAUoW,MACpB,CAMG,IAAI4nI,EAAa5hJ,GAAGxD,EAAIkf,KACpBzU,gBAAgB,GAChBA,gBAAgB,GAKpB,OAJA26I,EAAW9gJ,OAAO,iBAAkBzE,EAAE,wBACtCulJ,EAAW9gJ,OAAO,WAAW,GAC7B8gJ,EAAW7gJ,WAEJ,CACV,EAGHs8E,YAAcwkE,IACX,IAAI5/I,EAAQ3F,KAAKqlJ,qBAAqBE,GACtC,GAAK5/I,EAAL,CAEA,IAIG6/I,EAFAjhE,EAFkB5+E,EAAMk9D,gBACAhD,YAAYl6D,EAAMX,OAAOF,aACrB3E,UAAUH,KAAKJ,KAC3C6lJ,EAAiBlhE,EAAmB9jF,GAGvCglJ,EAAe5mJ,GAAKqB,EAAIwC,MAGxB,IAAIgjJ,EAAc1lJ,KAAKm7I,YAAYr5I,GAAGmkB,iBAClC2G,GAAOA,EAAGjB,aAIVg6H,EAAqB,GACzBD,EAAY1hJ,SAAS4oB,IAClB+4H,EAAmBthJ,KAAK,CAAExF,GAAI+tB,EAAG/tB,GAAI6D,MAAOkqB,EAAGzrB,OAAQ,IAI1D,IAAIykJ,EAAkB,CACnB,CAAE/mJ,GAAI,aAAc6D,MAAO3C,EAAE,sBAC7B,CACGlB,GAAI,oBACJ6D,MAAO3C,EAAE,qCAIX8lJ,EAAsB,CACvBlkJ,KAAM,QACNC,KAAM,CACH,CACGV,KAAM,CACH,CACGrC,GAAIqB,EAAI0kJ,SACRlkJ,KAAM,QACNwB,QAASyjJ,EACTxmE,YAAap/E,EAAE,wBACfoC,GAAI,CACDC,SAAU,CAAC8I,EAAMC,KACd,IAAI26I,EACD9lJ,KAAKm7I,YAAYr5I,GAAGiqB,mBACjB7gB,GAEN,IACG46I,GAC0B,SAAzBA,EAAWj6H,YACRlmB,EAAMg/B,aAkBVjhC,GAAGxD,EAAI4kJ,YAAYpgJ,WAjBpB,CACC,IAAI27E,EAAoB,GACxBylE,EAAWn6H,WACP7kB,SACA9C,SAAS+C,IACPs5E,EAAkBh8E,KAAK,CACpBxF,GAAIkI,EAAElI,GACN6D,MAAOqE,EAAE5F,OACV,IAERuC,GAAGxD,EAAI4kJ,YAAYtgJ,OAChB,UACA67E,GAEH38E,GAAGxD,EAAI4kJ,YAAYrgJ,UACnBf,GAAGxD,EAAI4kJ,YAAYngJ,MACtB,CAEA,IAKT,CACG9F,GAAIqB,EAAI4kJ,WACRpkJ,KAAM,QACN47E,QAAQ,EACR6C,YAAap/E,EAAE,wBACfmC,QAAS,CAAC,CAAErD,GAAI,EAAG6D,MAAO,uBAInC,CACG7D,GAAIqB,EAAI2kJ,SACRnkJ,KAAM,QACNwB,QAAS0jJ,EACTzmE,YAAap/E,EAAE,wBACfoC,GAAI,CACDC,SAAU,CAAC8I,EAAMC,KACd,IAAI46I,EAAOriJ,GAAGxD,EAAIkf,KAElB,GADA2mI,EAAK16I,WAAW06I,EAAKp7I,gBAAgB,IACzB,cAARO,EACD66I,EAAKj7I,QAAQ,CAAC,EAAG,OACb,CACJ,IAAI5I,EACDlC,KAAKm7I,YAAYvvH,eAAeD,WAC5B7kB,SACApI,KAAI,SAAUqI,GACZ,MAAO,CACJlI,GAAIkI,EAAElI,GACN6D,MAAOqE,EAAE5F,MAEf,KAENwjJ,EAAkB3kJ,KAAK8B,GAAGuzB,iBACvB,GAAGx1B,aAKUwD,KAAK,CAClB0uC,cAAc,EACdsqC,uBAAwBn6E,IAE3ByiJ,EAAgBxiJ,GAAG,UAAWwT,IAC3BpU,EAAOkmH,eAAe9xG,EAAI,IAG7BowI,EAAKj7I,QAAQ65I,EAAgBlkJ,GAAI,GAEjC,IAAI8rI,EAAO7oI,GAAGxD,EAAI0kJ,UAAU94I,WACxBm0E,EACDjgF,KAAKm7I,YAAYr5I,GAAGiqB,mBAAmBwgH,GACtCtsD,GACD1+E,EAAOykJ,gBAAgB/lE,EAE7B,OAsBf,GAdiB,QAAbt6E,EAAMvB,MACPqhJ,EAAevjJ,QAAUujJ,EAAevjJ,SAAW,GACnDujJ,EAAevjJ,QAAQkxB,QAAQ,CAC5Bv0B,GAAI,kBACJ6D,MAAO3C,EAAE,qBAUX4F,EAAMg/B,aAAc,CAErB,IAAI+5G,EAAkB/4I,EAAMgB,eAI5B++I,EAAcA,EAAY98I,QAAQgkB,GACxBA,EAAGjB,WAAW9sB,IAAM6/I,EAAgB7/I,KAG9C,IAAIonJ,EAAYjmJ,KAAKm7I,YAAYr5I,GAAGmkB,iBAAiB2G,GAE9B,SAAjBA,EAAGf,YACHe,EAAGjB,YACHiB,EAAGjB,WAAWqe,gBAAgB00G,KAKpCgH,EAAcA,EAAY59H,OAAOm+H,GAGjCN,EAAqB,GACrBD,EAAY1hJ,SAAS4oB,IAClB+4H,EAAmBthJ,KAAK,CAAExF,GAAI+tB,EAAG/tB,GAAI6D,MAAOkqB,EAAGzrB,OAAQ,IAI1DykJ,EAAgBvhJ,KAAK,CAClBxF,GAAI,oBACJ6D,MAAO3C,EAAE,mCAGZylJ,EAAaK,EAIbthE,EAAqB,CAClBlhF,KAAM,WAAa,EAKzB,MACGmiJ,EAAa,CACV3mJ,GAAIqB,EAAI+yI,UACRvyI,KAAM,YACN8B,MAAO,CACJ,CACGqxC,MAAO,SACPjyC,KAAM,CACH6jJ,EACA,CACG/kJ,KAAM,QACNS,MAAO,MAAMpB,EAAE,yBACfoC,GAAI,CACD+H,YAAa,WACOlK,KAAKsL,gBACKA,gBAEhBu2E,UAAU,QACxB,MAKZ,CAEGhuC,MAAO,QACPjyC,KAAM,CACHikJ,EACA,CACGnlJ,KAAM,QACNS,MAAO,MAAMpB,EAAE,yBACfoC,GAAI,CACD+H,YAAa,WACV,IACGg8I,EADclmJ,KAAKsL,gBACKA,gBAG3B5H,GAAGxD,EAAI2kJ,UAAUjgJ,SAAS,cAE1BshJ,EAAWrkE,UAAU,SACxB,QAUrB,IAAIkkE,EAAOriJ,GAAGxD,EAAIkf,KAAKzU,gBAAgB,GAOvC,GANAo7I,EAAK16I,WAAW06I,EAAKp7I,gBAAgB,IACrCo7I,EAAKj7I,QAAQ06I,EAAY,GAEzBjhE,EAAmBlhF,QAGdsC,EAAMg/B,cAAgBh/B,EAAMiyE,cAAe,CAG7C,IAAIuuE,EAAeziJ,GAAG+hJ,EAAe5mJ,IAAI0O,MAGzC+G,YAAW,KACR3O,EAAMiyE,cAAcjyE,EAAO3F,KAAKJ,IAAKumJ,EAAc,CAChD18F,UAAU,EAGV2pC,QAAQ,GACT,GACF,GACN,CAGoB2yD,EAAKp7I,gBAAgB,GAC3BhG,OAGV4gJ,GAAUhkJ,EAAOgC,UAAUihJ,OA7Qb,CA6QoB,EAGzC5/I,SAAW+E,IACRjG,GAAGxD,EAAIyF,OAAOf,SAAS+E,EAAKkzB,SAE5B,IAAIl3B,EAAQ3F,KAAKqlJ,qBAAqB17I,EAAKkzB,SAC3C,GAAIl3B,EAAO,CACR,IAAIygJ,EAAa,KACd1iJ,GAAGxD,EAAI0kJ,UAAUhgJ,SAAS+E,EAAKjH,OAC3BiH,EAAKm7I,YACNphJ,GAAGxD,EAAI4kJ,YAAYlgJ,SAAS+E,EAAKm7I,YAEpC,IAAID,EAAWl7I,EAAKk7I,UAAY,aAGhC,GAFAnhJ,GAAGxD,EAAI2kJ,UAAUjgJ,SAASigJ,GAEV,cAAZA,EAA0B,CAC3B,IAAIwB,EAAe18I,EAAKjH,MACpBu9E,EACDjgF,KAAKm7I,YAAYr5I,GAAGiqB,mBAAmBs6H,GACtCpmE,GAAkBt2E,EAAKkgB,kBACxBtoB,EAAOykJ,gBACJ/lE,EACAt2E,EAAKkgB,iBAGd,GAIClkB,EAAMg/B,aACPyhH,IAEsB,SAAlBz8I,EAAKizH,WACNl5H,GAAGxD,EAAI+yI,WAAWpxD,UAAU,SAE5BukE,MAEA1iJ,GAAGxD,EAAI+yI,WAAWpxD,UAAU,UAG5BvtE,YAAW,WAER,IAAI2Z,EAAU,CAAC,EACfA,EAAQtoB,EAAMkB,YAAc8C,EAAKjH,MACjCiD,EAAMf,SAASlB,GAAGxD,EAAIwC,OAAQurB,EACjC,GAAG,IAGZ,GAGH+3H,gBAAiB,CAACM,EAAUz8H,KACzBA,EACGA,GACAi6H,EAAsCj6H,iBAIzC86H,EAAgBrvH,WACbgxH,EAAS36H,WAAa26H,EAAS36H,WAAW7kB,SAAW,IAExD69I,EAAgB//I,SAASilB,EAAiB,EAG7C0qH,WAAY,KAGT,IAAIyQ,EAAethJ,GAAGxD,EAAI8kJ,cAC1B,GAAIA,GAAgBA,EAAa3gE,YAAa,CAC3C,IAAI16E,EAAO,CAAC,EACZA,EAAKkzB,QAAUn5B,GAAGxD,EAAIyF,OAAOmG,WAE7B,IAAIy6I,EAAc7iJ,GAAGxD,EAAIwC,OACrBiD,EAAQ3F,KAAKqlJ,qBAAqB17I,EAAKkzB,SA4B3C,OAbIl3B,EAAMg/B,cAGsC,SAAzCjhC,GAAGxD,EAAI+yI,WAAWjxI,OAAO2/I,cAf7Bh4I,EAAKjH,MAAQgB,GAAGxD,EAAI0kJ,UAAU94I,WAC9BnC,EAAKm7I,WAAaphJ,GAAGxD,EAAI4kJ,YAAYh5I,WACrCnC,EAAKkO,GAAK,MACVlO,EAAKhI,KAAOgE,EAAMvB,IAClBuF,EAAKk7I,SAAWnhJ,GAAGxD,EAAI2kJ,UAAU/4I,WACjCnC,EAAKizH,UAAY,QACb+nB,IACDh7I,EAAKkgB,iBAAmB86H,EAAgB74I,cAWxCnC,EAAKjH,MAAQiD,EAAMmG,SAASy6I,EAAa,CAAC,GAC1C58I,EAAKkO,GAAK,MACVlO,EAAKhI,KAAOgE,EAAMvB,IAClBuF,EAAKizH,UAAY,UAIhBjzH,CACV,CACG,OAAO,IACV,GA0EN,MAAO,CACJlJ,GAvEO,CACP5B,GAAIqB,EAAIkf,IACR1e,KAAM,SACNkB,KAAM,CACH,CACGV,KAAM,CACH,CAEGR,KAAM,QACNK,MAAOf,KAAKm7I,YAAYr5I,GAAG4M,OAAOoO,gBAClC3b,MAAOpB,EAAE,QAEZ,CAEGW,KAAM,QACNwG,KAAM,QACNi4E,YAAap/E,EAAE,kBACflB,GAAIqB,EAAIyF,MACR7E,OAAQ,GACRoB,QAASX,EAAOsJ,cAAa,GAC7B1I,GAAI,CACDC,SAAU,SAAU4I,GACjBzJ,EAAOw/E,YAAY/1E,EACtB,IAGN,CAEGtK,KAAM,QACNK,MAAOf,KAAKm7I,YAAYr5I,GAAG4M,OAAOoO,gBAClC3b,MAAOpB,EAAE,OAMZ,CAAC,EAED,CAEGW,KAAM,SACNO,IAAK,eACLpC,GAAIqB,EAAI8kJ,aACR55I,KAAM,cACNzJ,KAAM,OACNZ,MAAO,GACPu7E,QAAQ,EACRh7E,MAAO,WACJC,EAAOgC,UAAUm4I,SAASx7I,EAAIkf,IACjC,KAIT,CAAC,IAmBJ/b,KAfSnB,IACT,IAAK,IAAIoB,KAAK/B,EAAOgC,UAClBhC,EAAOgC,UAAUD,GAAKpB,EAAQoB,IAAM/B,EAAOgC,UAAUD,GAGpDpB,EAAQyH,MAETpI,EAAOqD,SAAS1C,EAAQyH,KAG3B,EAMA4qI,WAAY,IACFhzI,EAAOgzI,aAEjBhzI,OAAQA,EAEd,CAEA8jJ,qBAAqBxoH,GAClB,OACG78B,KAAKy8I,aAAa7uI,UAAUivB,IAC5B78B,KAAK+jJ,cAAcn2I,UAAUivB,IAC7B78B,KAAKm7I,YAAYr5I,GAAGmE,SACjBjG,KAAKm7I,YAAYr5I,GAAG2iB,eAAeoY,IAAY,CAAC,EAChD78B,KAAKm7I,YAAYr5I,GAAG04B,UAAU,CAAC,GAGxC,CASA2hH,oBAAoBj6I,EAASskJ,GAC1BxmJ,KAAKm/I,UAAYqH,EAEjB,IAAIC,GAAY,EAsThB,OApTAzmJ,KAAK08H,WAAa18H,KAAK08H,YAAc,CAAC,EACtC18H,KAAK08H,WAAWC,gBAAkB38H,KAAK08H,WAAWC,iBAAmB,GAKrE38H,KAAK08H,WAAWC,gBAAgB34H,SAAS6T,IAetC,IAAIlS,EAAQ3F,KAAKqlJ,qBAAqBxtI,EAAGglB,SACzC,GAAKl3B,EAAL,CAEA,IAAIjD,EAAQmV,EAAGnV,MAEf,GAAa,mBAATA,EACDA,EAAQ1C,KAAKm7I,YAAYr5I,GAAG2Q,QAAQlC,gBAIhC,GAAI5K,EAAMg/B,cAAgC,SAAhB9sB,EAAG+kH,UAAsB,CAUvD,MAAM38C,EAAiBjgF,KAAKm7I,YAAYr5I,GAAGiqB,mBACxClU,EAAGnV,OAEN,IAAKu9E,EAAgB,OASrB,IAAIp2D,EAAmB7pB,KAAKm7I,YAAYr5I,GAAG2D,UACxCoS,EAAGgS,kBAEFA,GAAoBA,EAAiBxI,OACtCwI,EAAiBxI,MACbzY,QAAQ2G,GAEO,iBAAVA,EAAEwgB,MACQ,qBAAVxgB,EAAEwgB,OAGP/rB,SAASgK,IACP,IAAIqrD,EACDr5D,KAAKm7I,YAAYvvH,eAAeD,WAAW/d,UACxCI,EAAKtL,OAEP22D,EAAW10B,aACZ32B,EAAKtL,MAAQ22D,EAAW74C,OAAOxgB,KAAKm/I,WAEpCnxI,EAAKtL,MAAQ1C,KAAKm/I,UAAU9lF,EAAWxyD,YAGzB,qBAAbmH,EAAK+hB,KACN/hB,EAAK+hB,KAAO,aAEZ/hB,EAAK+hB,KAAO,QACf,IAIT,IAAI22H,EACDzmE,EAAetpD,cAAc9M,GAEhC,OAAQhS,EAAGgtI,UAIR,IAAK,aACL,QAqBG,QApBAniJ,EAAQgkJ,EAAqBl6H,eAMN,SAAhB3U,EAAG+kH,WACA+pB,EACDD,EAAqB/6H,WAAW/d,UAC7BiK,EAAGitI,eAINpiJ,EAAQA,EAAMikJ,EAAe9/I,aACxBnE,EAAM7D,KACd6D,EAAQA,EAAM7D,KAKZgZ,EAAGA,IACR,IAAK,MACF,IAAKnV,EAAO,MAERiD,EAAMg/B,cAGP6hH,EAAe7gJ,EAAMkB,YAAc,CAAC,EACpC2/I,EAAe7gJ,EAAMkB,YAAYhI,GAC9B6D,EAAMiD,EAAMgB,eAAe0oB,MAC9Bm3H,EAAe7gJ,EAAMkB,YAClBlB,EAAMgB,eAAe0oB,MACpB3sB,EAAMiD,EAAMgB,eAAe0oB,MAG3B1pB,EAAMQ,SAASgB,aACZxB,EAAMyB,aACPo/I,EAAe7gJ,EAAMkB,YAClBlB,EAAMyB,WAAWP,YAChBnE,EAAMiD,EAAMyB,WAAWP,aAE1BlB,EAAM0B,cACPm/I,EAAe7gJ,EAAMkB,YAClBlB,EAAM0B,YAAYR,YACjBnE,EAAMiD,EAAM0B,YAAYR,cAIlClB,EAAMgB,eACFG,QACGC,GACW,YAATA,EAAE3C,KAA8B,aAAT2C,EAAE3C,MAE9BJ,SAAS+C,IACPy/I,EAAe7gJ,EAAMkB,YAClBE,EAAEF,YACDnE,EAAMqE,EAAEF,WAAW,KAG7B2/I,EAAe7gJ,EAAMkB,YAAcnE,EAK5C,MAGH,IAAK,oBAIF,IAHA,IAAI4nI,EAAY,GAEZsc,EAAUF,EAAqBj5H,iBAC5Bm5H,GAAS,CAGb,OAAQF,EAAqB76H,YAG1B,IAAK,SACFy+G,EAAUjmI,KAAKuiJ,EAAQ/nJ,IACvB,MAKH,IAAK,QACF,IAAI8nJ,EAKArkD,EAAWskD,GALXD,EACDD,EAAqB/6H,WAAW/d,UAC7BiK,EAAGitI,aAG6Bj+I,iBAEf,IAAZy7F,IACRA,EAAWskD,EAAQD,EAAe71H,gBAE9B9jB,MAAMC,QAAQq1F,GACfA,EAAWA,EAAS5jG,KAAKuU,GACfA,EAAEpU,GAAKoU,EAAEpU,GAAKoU,IAEhBqvF,EAASzjG,KACjByjG,EAAWA,EAASzjG,KAI1ByrI,EAAYtqI,KAAKm7I,YAAYr5I,GAAG2gB,KAC7B6nH,EAAUxiH,OAAOw6E,IAM1BskD,EAAUF,EAAqB/4H,cAAci5H,EAChD,CAGA,GACQ,QADA/uI,EAAGA,GAEL,GAAwB,OAApBlS,EAAMqB,WAAqB,CAC5B,IAAI6/I,EAAU,GACdvc,EAAUtmI,SAASiP,IAChB,IAAI6zI,EACD9mJ,KAAKm7I,YAAYr5I,GAAG2D,UAAU+gJ,GACjCM,EAAoBnhJ,EAAMkB,YAAcoM,EACxC4zI,EAAQxiJ,KAAKyiJ,EAAoB,IAEpCN,EAAe1H,WAAa+H,CAC/B,MACGL,EAAe7gJ,EAAMkB,YAAcyjI,EAI5C,MAEH,IAAK,oBAKF,GAJAA,EAAY,GAEZ5nI,EAAQgkJ,EAAqBj5H,iBAM1B,GACsC,SAAnCi5H,EAAqB76H,YACJ,SAAhBhU,EAAG+kH,WAAwB/kH,EAAGitI,WAE/B6B,EACGD,EAAqB/6H,WAAW/d,UAC7BiK,EAAGitI,iBAKc,KAFvBxiD,EAAW5/F,EAAMikJ,EAAe9/I,eAG7By7F,EAAW5/F,EAAMikJ,EAAe71H,gBAC5B9jB,MAAMC,QAAQq1F,KACfA,EAAWA,EAAS,IAEnBA,EAASzjG,KAAIyjG,EAAWA,EAASzjG,KAGxC6D,EAAQ4/F,OAIN,GAAuC,UAAnCokD,EAAqB76H,WAAwB,CAMnD,IAAIk7H,EACAphJ,EAAMyB,WACP2/I,EAASphJ,EAAMyB,WAAWP,WAClBlB,EAAM0B,cACd0/I,EAASphJ,EAAM0B,YAAYR,YAE1BkgJ,GAAUrkJ,EAAMqkJ,GACjBrkJ,EAAQA,EAAMqkJ,GACNrkJ,EAAM7D,KACd6D,EAAQA,EAAM7D,GAEpB,CAKK,QADAgZ,EAAGA,KAEL2uI,EAAe7gJ,EAAMkB,YAAcnE,GAM/C+jJ,GAAY,CAGf,KAGW,QADA5uI,EAAGA,KAEL2uI,EAAe7gJ,EAAMkB,YAAcnE,GAIzC+jJ,GAAY,CAnRG,CA2RlB,IAGIA,CAKV,CAMAj/H,QAAQtlB,GAGL,OAFAlC,KAAKm/I,UAAYj9I,EAAQyH,KAElB,IAAI0F,SAAQ,CAAC/P,EAAS+W,KAE1B,GADgBrW,KAAKm8I,oBAAoB,CAAC,EAAGj6I,EAAQyH,MAG9C,CAEJ,IAAI8pB,EAAKvxB,EAAQ8H,KAAK4hB,eACtB,IAAK6H,EAAI,OAAOn0B,IAEJm0B,EAAG1rB,MAEXouE,OAAOj0E,EAAQyH,KAAK9K,GAAIqD,EAAQyH,MAChCwK,KAAK7U,GACL8U,OAAOlM,IACLlI,KAAKm7I,YAAYr5I,GAAGqG,OAAOC,UAAUF,EAAK,CACvCgH,QACG,sDACHrQ,GAAIqD,EAAQyH,KAAK9K,GACjB8K,KAAMzH,EAAQyH,OAEjB0M,EAAOnO,EAAI,GAEpB,MAnBG5I,GAmBH,GAEN,CAIAyF,WAAWC,GACRlF,MAAMiF,WAAWC,GACjBhF,KAAKggJ,iBAAiBh7I,EACzB,CAIAg7I,iBAAiBh7I,GAEVhF,KAAK+jJ,eACN/jJ,KAAKgkJ,WAAWhkJ,KAAK+jJ,aAAallJ,IAAMmB,KAAK08H,YAGhD18H,KAAK+jJ,aAAe/+I,EAGpBhF,KAAKikJ,WAAa,KAGlBjkJ,KAAK08H,WAAa18H,KAAKgkJ,WAAWhkJ,KAAK+jJ,aAAallJ,KAAO,CAAC,CAC/D,CAKA63D,aAAavwD,GAOV,GANAA,EAAWA,GAAY,CAAC,EAExBrG,MAAM42D,aAAavwD,GAIfA,EAAS6gJ,gBAAiB,CAC3B,IAAIjD,EAAe/jJ,KAAKm7I,YAAYr2I,YAAYujB,WAC7CliB,EAAS6gJ,iBAEZhnJ,KAAK+jJ,aAAeA,CACvB,CAGI/jJ,KAAKikJ,YAGNjkJ,KAAKikJ,WAAWvtF,aAAavwD,EAEnC,CAKAouI,aAMG,IAAIpuI,EAAWrG,MAAMy0I,aAKrB,OAHApuI,EAASu2H,WAAa18H,KAAKikJ,WAAW1P,aACtCpuI,EAAS6gJ,gBAAkBhnJ,KAAK+jJ,aAAap7H,aAEtCxiB,CACV,CASAk2I,UACG,IAAIwB,EAAW,GAoBf,OAnBe79I,KAAK08H,YAAYC,iBAAmB,IAC1C34H,SAAS6T,IACf,IAAIlS,EAAQ3F,KAAKqlJ,qBAAqBxtI,EAAGglB,SACzC,IAAKl3B,EAAO,OACZ,IAAKA,EAAMg/B,cAAiC,UAAjB9sB,EAAG+kH,UAAuB,OAGrD,IAAIrsG,EAAKvwB,KAAKm7I,YAAYr5I,GAAGiqB,mBAAmBlU,EAAGnV,OAC/C6tB,GAAIpE,aAAeoE,GAAI9F,eAAeyB,aAG1C2xH,EAASx5I,KACN,IAAIgL,SAAS/P,IACVixB,EAAGpuB,GAAG,mBAAmB,KACtB7C,GAAS,GACV,IAEP,IAEG+P,QAAQkS,IAAIs8H,EACtB,cC3zCqEt+I,EAAOC,QAAkS,SAASP,EAAE8gC,EAAEmkB,EAAE30C,GAAG,SAAS9C,EAAEzN,EAAEigF,GAAG,IAAI/6B,EAAEllD,GAAG,CAAC,IAAI+gC,EAAE/gC,GAAG,CAAmE,GAAGkU,EAAE,OAAOA,EAAElU,GAAE,GAAI,IAAI+H,EAAE,IAAI7H,MAAM,uBAAuBF,EAAE,KAAK,MAAM+H,EAAE5H,KAAK,mBAAmB4H,CAAC,CAAC,IAAIkN,EAAEiwC,EAAEllD,GAAG,CAACQ,QAAQ,CAAC,GAAGugC,EAAE/gC,GAAG,GAAGq/C,KAAKpqC,EAAEzU,SAAQ,SAASP,GAAoB,OAAOwN,EAAlBszB,EAAE/gC,GAAG,GAAGC,IAAgBA,EAAE,GAAEgV,EAAEA,EAAEzU,QAAQP,EAAE8gC,EAAEmkB,EAAE30C,EAAE,CAAC,OAAO20C,EAAEllD,GAAGQ,OAAO,CAA2C,IAA1C,IAAI0T,OAAE,EAA4ClU,EAAE,EAAEA,EAAEuQ,EAAErJ,OAAOlH,IAAIyN,EAAE8C,EAAEvQ,IAAI,OAAOyN,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAAS4wE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,iBAAiB4pE,SAASA,EAASC,oBAAoB,SAASC,GAAO,OAAO7gJ,KAAK2zC,MAAY,KAANktG,EAAW,EAAE5nJ,EAAOC,QAAQynJ,CAAQ,EAAE,CAACG,cAAc,IAAI,EAAE,CAAC,SAAS/pE,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS5pE,EAAQ,cAAkB0qE,EAAe,iBAAqBC,EAAK,CAACC,UAAU,SAAmBrnG,GAAU,MAAkB,SAAXA,EAAkB,OAAO,KAAK,EAAEsnG,gBAAgB,SAAyBtnG,GAAU,MAAkB,SAAXA,EAAkB,WAAW,cAAc,EAAEunG,gBAAgB,SAAyBtuC,GAAU,OAAOA,EAAShnG,QAAQ,2BAA2B,MAAM,WAAW,EAAEu1I,gBAAgB,SAAyBvuC,EAASj5D,GAA2G,OAA3B,SAAXA,EAAkB,aAAa,QAAqB,UAA9FonG,EAAKG,gBAAgBtuC,EAA+F,GAAGt6G,EAAOC,QAAQ,WAAW,SAAS6oJ,EAAW/uB,EAAIzf,EAASyuC,EAAa1nG,IAA3xB,SAAyB8K,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAspBC,CAAgBxoJ,KAAKqoJ,GAAYroJ,KAAK65G,SAASA,EAAS75G,KAAK6a,OAAOmtI,EAAKC,UAAUrnG,GAAU5gD,KAAKs5H,IAAIA,EAAIt5H,KAAKsoJ,aAAaA,EAAatoJ,KAAKyoJ,aAAaT,EAAKE,gBAAgBtnG,GAAU5gD,KAAK0oJ,YAAuB,SAAX9nG,EAAkB,WAAW,QAAQ,IAAI+nG,EAAaX,EAAKI,gBAAgBvuC,EAASj5D,GAAU5gD,KAAK4oJ,QAAQN,EAAaK,IAAe3oJ,KAAK6oJ,mBAAmBP,EAAaK,EAAa,CAAqiF,OAApiFtB,EAAagB,EAAW,CAAC,CAACjkJ,IAAI,qBAAqB1B,MAAM,SAA4B4lJ,EAAaQ,GAAc,IAAIC,EAAS/oJ,KAAK6a,OAAO,UAAU7a,KAAKyoJ,aAAa,YAAgBlvB,EAAI+uB,EAAaS,GAAU,IAAIxvB,EAAI,CAAC,IAAIrxH,EAAI,IAAIhJ,MAAM,qCAAoI,MAA/FgJ,EAAIyuF,WAAW,CAACoyD,SAASA,EAASD,aAAaA,EAAaE,MAAM3pJ,OAAOD,KAAKY,KAAKs5H,IAAI0vB,QAAc9gJ,CAAG,CAAkM,IAAjM,IAAI0gJ,EAAQ3B,EAASgC,QAAQhC,EAASiC,QAAQ3vB,IAAU4vB,EAAcP,EAAQ5uE,qBAAqB,iBAAiB,GAAOovE,EAAmBD,EAAcnvE,qBAAqB,gBAAwB9mE,EAAE,EAAEe,EAAEm1I,EAAmBljJ,OAAOgN,EAAEe,EAAEf,IAAKi2I,EAAcj3D,YAAYk3D,EAAmBl2I,IAAuC,OAAnCo1I,EAAaQ,GAAcF,EAAeA,CAAO,GAAG,CAACxkJ,IAAI,gBAAgB1B,MAAM,WAAyB,IAAI2mJ,EAASrpJ,KAAK4oJ,QAAQ5uE,qBAAqB,gBAAgB,OAAOhtE,MAAMoxC,UAAUkrG,OAAOjrG,KAAKgrG,GAAS,SAASpnG,EAAIsnG,GAAc,IAAI1qJ,EAAG0qJ,EAAar9D,aAAa,MAAM,MAAG,cAAc5pE,KAAKzjB,GAAYyH,KAAK27C,IAAIA,EAAIv8B,SAAS7mB,EAAGsmD,OAAO,GAAG,KAAYlD,CAAG,GAAE,EAAE,GAAG,CAAC79C,IAAI,mBAAmB1B,MAAM,SAA0B8mJ,EAAYC,GAAW,IAAIC,EAAe1pJ,KAAKsoJ,aAAa,uBAA2BqB,EAAYD,EAAe1vE,qBAAqB,WAA0I,IAAvGhtE,MAAMoxC,UAAUmrC,KAAKlrC,KAAKsrG,GAAY,SAASxvB,GAAK,OAAOA,EAAIjuC,aAAa,eAAeu9D,CAAS,IAAG,CAA+B,IAAIppJ,EAAMqpJ,EAAe1vE,qBAAqB,SAAS,GAAO4vE,EAAOF,EAAeh7G,cAAc,WAAWk7G,EAAOC,aAAa,KAAKD,EAAOjgE,aAAa,cAAc6/D,GAAaI,EAAOjgE,aAAa,YAAY8/D,GAAWppJ,EAAMwyF,YAAY+2D,EAAnP,CAA0P,GAAG,CAACxlJ,IAAI,eAAe1B,MAAM,SAAsBonJ,EAAUt7D,EAAUt7E,GAAS,MAAHA,IAASA,EAAE,GAAE,IAAI62I,EAAkB,IAAJ72I,EAAM42I,EAAUA,EAAW,IAAI52I,EAAE,IAAS82I,EAAUhqJ,KAAK6a,OAAO,UAAUkvI,EAAc,GAA8B,MAA3B/pJ,KAAKs5H,IAAI0vB,MAAMgB,GAAkB,OAAOhqJ,KAAKiqJ,aAAaH,EAAUt7D,EAAUt7E,EAAE,GAAG,IAAIonD,EAAM,CAACpzD,KAAK8iJ,EAAUrgJ,KAAK6kF,EAAUtsF,QAAQ,CAACgoJ,QAAO,IAAOlqJ,KAAKs5H,IAAIh/C,KAAKhgB,EAAMpzD,KAAKozD,EAAM3wD,KAAK2wD,EAAMp4D,SAAS,IAAIunJ,EAAUM,EAAcl3I,QAAQk1I,EAAe,MAAM/nJ,KAAKmqJ,iBAAiB,SAASV,EAAUA,GAAW,IAAIN,EAAcnpJ,KAAK4oJ,QAAQ5uE,qBAAqB,iBAAiB,GAAO4vE,EAAO5pJ,KAAK4oJ,QAAQl6G,cAAc,gBAAgBk7G,EAAOC,aAAa,KAAK,IAAIO,EAAOpqJ,KAAKqqJ,gBAAgB,EAAoP,OAAlPT,EAAOjgE,aAAa,KAAK,MAAMygE,GAAQR,EAAOjgE,aAAa,OAAO,6EAA6EigE,EAAOjgE,aAAa,SAAS3pF,KAAK0oJ,YAAY,IAAIqB,GAAeZ,EAAct2D,YAAY+2D,GAAeQ,CAAM,KAAY/B,CAAU,CAA7/F,EAAggG,EAAE,CAAC,aAAa,IAAI,EAAE,CAAC,SAAShrE,EAAQ99E,EAAOC,GAAS,aAAaD,EAAOC,QAAQ,CAAC8qJ,YAAY,SAAqBC,EAAIl/D,GAAM,OAAO,8FAA8FA,EAAK,GAAG,SAASA,EAAK,GAAG,m2BAAm2Bk/D,EAAI,6jBAA6jBl/D,EAAK,GAAG,SAASA,EAAK,GAAG,2WAA2Wx4E,QAAQ,SAAS,GAAG,EAAE23I,oBAAoB,SAA6BD,EAAIl/D,GAAM,OAAO,qNAAqNA,EAAK,GAAG,SAASA,EAAK,GAAG,yoBAAyoBk/D,EAAI,8PAA8Pl/D,EAAK,GAAG,SAASA,EAAK,GAAG,2gBAA2gBx4E,QAAQ,SAAS,GAAG,EAAE43I,gBAAgB,SAAyBF,EAAIl/D,EAAKq/D,GAAQ,OAAO,kRAAkRH,EAAI,6cAA6cG,EAAO39I,EAAE,QAAQ29I,EAAOjvF,EAAE,6BAA6B4vB,EAAK,GAAG,SAASA,EAAK,GAAG,86CAA86Cx4E,QAAQ,SAAS,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,SAASwqE,EAAQ99E,EAAOC,GAAS,aAAgM,IAAImrJ,EAAQttE,EAAQ,aAAiB3D,EAAU2D,EAAQ,UAAU3D,UAAckxE,EAAcvtE,EAAQ,UAAUutE,cAAkBC,EAAOxtE,EAAQ,YAAgB4pE,EAAS,CAAC,EAA0HA,EAAS9iJ,SAAS,CAAC2mJ,WAAW,SAAoBC,GAAM,OAAIA,EAAKxrJ,QAA6BwrJ,EAAKxrJ,OAAyB,IAA7C,WAAwD,EAAEo+E,OAAOgtE,GAAxQ,SAAgBxwB,GAAK,OAAnVz3H,EAAmX,SAAa03H,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvb/1H,EAAiX,SAArXoT,EAAkX,CAAC,GAArVnY,OAAOsoJ,eAAenwI,EAAIpT,EAAI,CAAC1B,MAAMA,EAAM8kJ,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAYlwI,EAAIpT,GAAK1B,EAAa8U,EAA/K,IAAyBA,EAAIpT,EAAI1B,CAAqb,IAAiKk+C,SAAS,OAAOoqG,WAAW,CAACn4H,MAAM,IAAI+1B,IAAI,MAAMq+F,EAASgE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAM1zI,OAAI,EAAOpY,OAAK,EAAe8T,EAAE,EAAEA,EAAEN,UAAU1M,OAAOgN,GAAG,EAAE,CAACsE,EAAI5E,UAAUM,GAAG9T,EAAKC,OAAOD,KAAKoY,GAAK,IAAI,IAAI6tB,EAAE,EAAEA,EAAEjmC,EAAK8G,OAAOm/B,GAAG,EAAG6lH,EAAO9rJ,EAAKimC,IAAI7tB,EAAIpY,EAAKimC,GAAI,CAAC,OAAO6lH,CAAM,EAAEjE,EAASiC,QAAQ,SAASiC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAElE,EAASoE,WAAW,SAAS5+I,GAAG,IAAI,QAAO2L,IAAJ3L,EAAe,OAAiB,OAAO6+I,mBAAmBC,OAAOtE,EAASuE,cAAc/+I,IAAmI,CAA9H,MAAMxN,GAAG,IAAIiJ,EAAI,IAAIhJ,MAAM,OAA0F,MAAnFgJ,EAAIyuF,WAAWhtF,KAAK8C,EAAEvE,EAAIyuF,WAAW80D,YAAY,kCAAwCvjJ,CAAG,CAAC,EAAE++I,EAASyE,WAAW,SAASj/I,GAAG,OAAOk/I,SAAS/1I,mBAAmBnJ,GAAG,EAAEw6I,EAASgC,QAAQ,SAAS7tE,EAAIwwE,GAAoE,OAA3C,IAAIlyE,EAAU,CAACkyE,aAAaA,IAA6BhyE,gBAAgBwB,EAAI,WAAW,EAAE6rE,EAAS4E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC7E,EAAS8E,aAAa,SAAS3wE,GAAK,OAAOA,EAAIvoE,QAAQi5I,EAAiB,OAAO,EAAE7E,EAAS+E,eAAe3sJ,OAAOD,KAAK6nJ,EAAS4E,SAASntJ,KAAI,SAASutJ,GAAS,IAAIC,EAAUjF,EAAS4E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAI9pI,OAAO4kI,EAAS8E,aAAaG,GAAW,KAAKE,KAAK,IAAI/pI,OAAO4kI,EAAS8E,aAAaE,GAAS,KAAKp5H,MAAMq5H,EAAUtjG,IAAIqjG,EAAQ,IAAGhF,EAASoF,WAAW,SAAS3kG,GAAqB,IAAb,IAAIn4C,OAAE,EAAe2D,EAAE,EAAEe,EAAEgzI,EAAS+E,eAAe9lJ,OAAOgN,EAAEe,EAAEf,IAAK3D,EAAE03I,EAAS+E,eAAe94I,GAAGw0C,EAAOA,EAAO70C,QAAQtD,EAAE48I,OAAO58I,EAAEq5C,KAAK,OAAOlB,CAAM,EAAEu/F,EAASqF,WAAW,SAAS5kG,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOrzC,YAAwB,IAAb,IAAI9E,OAAE,EAAe2D,EAAE,EAAEe,EAAEgzI,EAAS+E,eAAe9lJ,OAAOgN,EAAEe,EAAEf,IAAK3D,EAAE03I,EAAS+E,eAAe94I,GAAGw0C,EAAOA,EAAO70C,QAAQtD,EAAE68I,KAAK78I,EAAEsjB,OAAO,OAAO60B,CAAM,EAAEu/F,EAASxhJ,UAAU,SAAS+R,GAAK,OAAO9D,KAAKuD,MAAMvD,KAAKC,UAAU6D,GAAK,EAAEyvI,EAASsF,aAAa,SAASC,GAAQ,OAAOA,EAAOlD,QAAO,SAAS37I,EAAO8+I,GAAgD,OAAzCz/I,MAAMoxC,UAAU/5C,KAAKupC,MAAMjgC,EAAO8+I,GAAc9+I,CAAM,GAAE,GAAG,EAAE,IAAI++I,EAAY,IAAIrqI,OAAOjH,OAAOuxI,aAAa,KAAK,KAA8U,SAASC,EAAoB1qJ,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,WAAW3qJ,EAAQ85B,QAAQ,sBAAsB95B,EAAQvB,UAAsN,MAA5MuH,EAAIyuF,WAAW,CAAC93F,GAAG,uBAAuBqD,EAAQvB,SAAS8qJ,YAAY,WAAWvpJ,EAAQ85B,QAAQ,sBAAsB95B,EAAQvB,SAAS4gI,OAAOr/H,EAAQq/H,OAAO31H,MAAM1J,EAAQ0J,MAAMowB,QAAQ95B,EAAQ85B,SAAe9zB,CAAG,CAA1qB++I,EAASuE,cAAc,SAAS/+I,GAAG,OAAOA,EAAEoG,QAAQ65I,EAAY,IAAI,EAAEzF,EAAS6F,aAAa,SAASC,EAAMz1E,GAA4C,IAAnC,IAAI01E,EAAW,GAAO90I,OAAM,EAA0C,OAA5BA,EAAM60I,EAAME,KAAK31E,KAAiB01E,EAAW3oJ,KAAK,CAACooJ,MAAMv0I,EAAMwyI,OAAOxyI,EAAMtM,QAAQ,OAAOohJ,CAAU,EAAE/F,EAASiG,aAAa,SAAS11I,GAAK,OAAOnY,OAAOD,KAAKoY,GAAKtR,MAAM,EAAoW+gJ,EAASzgG,SAAS,SAAS+6E,EAAOvlG,EAAQpwB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMqI,EAAEstH,EAAOr7H,OAAOgN,EAAEe,EAAEf,IAAwB,GAAVquH,EAAOruH,GAAWxQ,QAAQ,KAAKs5B,EAAQ,IAAK,OAAO9oB,EAAG05I,EAAoB,CAACjsJ,SAAS,QAAQq7B,QAAQA,EAAQulG,OAAOA,EAAO31H,MAAMA,GAAO,EAAEq7I,EAAS1gG,QAAQ,SAASg7E,EAAOvlG,EAAQpwB,GAAuC,IAAhC,IAAI2c,EAAMg5G,EAAOxuH,MAAM,EAAEnH,GAAesH,EAAEqV,EAAMriB,OAAO,EAAEgN,GAAG,EAAEA,IAAI,CAAC,IAAI63I,EAAKxiI,EAAMrV,GAAG,GAAqC,IAAlC63I,EAAKroJ,MAAMwK,QAAQ,IAAI8uB,KAAiE,IAAnD,CAAC,IAAI,KAAK9uB,QAAQ69I,EAAKroJ,MAAMs5B,EAAQ91B,OAAO,IAAU,OAAOgN,CAAE,CAAC05I,EAAoB,CAACjsJ,SAAS,OAAOq7B,QAAQA,EAAQulG,OAAOA,EAAO31H,MAAMA,GAAO,EAAErM,EAAOC,QAAQynJ,EAASA,EAASkG,OAAO9vE,EAAQ,YAAY4pE,EAASmG,cAAc/vE,EAAQ,mBAAmB,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,mBAAmB,GAAG,WAAW,GAAGgwE,OAAO,KAAK,EAAE,CAAC,SAAShwE,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0e,SAASY,EAAgB98F,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAC,IAAItB,EAAS5pE,EAAQ,eAAmBiwE,EAAQrG,EAASmG,cAAkBx2B,EAAc,WAAW,SAASA,IAAoD,GAApC4xB,EAAgBxoJ,KAAK42H,GAAkBhkH,UAAU1M,OAAO,EAAG,MAAM,IAAIhH,MAAM,2GAA2Gc,KAAKutJ,SAAS,CAAC,EAAEvtJ,KAAKwtJ,QAAQ,GAAGxtJ,KAAKwwF,WAAW,CAAC,EAAE,CAAkyG,OAAjyG62D,EAAazwB,EAAc,CAAC,CAACxyH,IAAI,eAAe1B,MAAM,SAAsBnD,GAA2C,OAAnCS,KAAKwtJ,QAAQnpJ,KAAKipJ,EAAQ/tJ,IAAgBS,IAAI,GAAG,CAACoE,IAAI,aAAa1B,MAAM,SAAoBR,GAAS,IAAIy1D,EAAM33D,KAAkZ,OAA7YA,KAAKkC,QAAQA,EAAQ7C,OAAOD,KAAK6nJ,EAAS9iJ,UAAUH,SAAQ,SAASI,GAAK,IAAIsiC,EAAaugH,EAAS9iJ,SAASC,GAAKuzD,EAAMvzD,GAAyB,MAApBuzD,EAAMz1D,QAAQkC,GAAWuzD,EAAMz1D,QAAQkC,GAAKsiC,CAAY,IAAsB,SAAhB1mC,KAAK4gD,UAAmC,SAAhB5gD,KAAK4gD,WAAmB5gD,KAAKytJ,eAAe72B,EAAc82B,eAAe1tJ,KAAK4gD,WAAU5gD,KAAKytJ,eAAeztJ,KAAKkC,QAAQurJ,gBAAgBztJ,KAAKytJ,eAAeztJ,KAAKkC,QAAQyrJ,aAAa,GAAU3tJ,IAAI,GAAG,CAACoE,IAAI,UAAU1B,MAAM,SAAiB42H,GAAK,GAAGA,EAAIs0B,UAAW,MAAM,IAAI1uJ,MAAM,iEAA8E,OAAbc,KAAKs5H,IAAIA,EAAWt5H,IAAI,GAAG,CAACoE,IAAI,cAAc1B,MAAM,SAAqBm3G,GAAU,IAAIg0C,EAAY7tJ,KAAK8tJ,oBAAoBj0C,GAAUg0C,EAAY52I,QAAQjX,KAAKutJ,SAAS1zC,GAAUg0C,CAAW,GAAG,CAACzpJ,IAAI,UAAU1B,MAAM,WAAmB1C,KAAK+tJ,eAAe/tJ,KAAKytJ,eAAeO,kBAAkBhuJ,KAAKs5H,IAAI,GAAG,CAACl1H,IAAI,SAAS1B,MAAM,WAAkB,IAAIurJ,EAAOjuJ,KAAyyC,OAApyCA,KAAKwtJ,QAAQxtJ,KAAKytJ,eAAeS,YAAYxvJ,KAAI,SAASyvJ,GAAgB,OAAOA,GAAgB,IAAGrmI,OAAO9nB,KAAKwtJ,SAASxtJ,KAAKkC,QAAQlC,KAAKwtJ,QAAQlE,QAAO,SAASpnJ,EAAQ3C,GAAQ,OAAOA,EAAO6uJ,mBAAmBlsJ,EAAQ+rJ,EAAO,GAAEjuJ,KAAKkC,SAASlC,KAAKsoJ,aAAatoJ,KAAKkC,QAAQyrJ,aAAarE,QAAO,SAAShB,EAAazuC,GAAU,IAAIviC,EAAQ22E,EAAO30B,IAAI0vB,MAAMnvC,GAAUw0C,SAA0D,OAAjD/F,EAAazuC,GAAUotC,EAASgC,QAAQ3xE,GAAgBgxE,CAAY,GAAE,CAAC,GAAGtoJ,KAAKwtJ,QAAQxpJ,SAAQ,SAASzE,GAAQA,EAAOwa,IAAI,CAACu/G,IAAI20B,EAAO30B,IAAIgvB,aAAa2F,EAAO3F,aAAa3+I,KAAKskJ,EAAOtkJ,MAAM,IAAG3J,KAAKsuJ,UAAUtuJ,KAAKwtJ,QAAQxpJ,SAAQ,SAASzE,GAAQA,EAAOwa,IAAI,CAACwzI,SAASU,EAAOV,UAAU,IAAGvtJ,KAAK+tJ,eAAe/pJ,SAAQ,SAAS61G,GAAyC,MAA5Bo0C,EAAO30B,IAAI0vB,MAAMnvC,IAAiBo0C,EAAOM,YAAY10C,EAAU,IAAG75G,KAAKwuJ,OAAOxuJ,KAAKwtJ,QAAQlE,QAAO,SAAS5mJ,EAAMnD,GAAQ,OAAOA,EAAOkvJ,eAAe/rJ,EAAM,GAAE,CAAC,GAAGrD,OAAOD,KAAKY,KAAKwuJ,QAAQxqJ,SAAQ,SAASunC,GAAI,IAAImjH,EAAOT,EAAOO,OAAOjjH,GAAQE,EAAKijH,EAAOjjH,KAASoiH,EAAYI,EAAOV,SAAS9hH,GAAMoiH,EAAYc,QAAQD,EAAO/kJ,MAAMkkJ,EAAY96E,SAASk7E,EAAO30B,IAAIh/C,KAAK/uC,EAAGsiH,EAAYv2E,QAAQ,IAAGj4E,OAAOD,KAAKY,KAAKsoJ,cAActkJ,SAAQ,SAAS61G,GAAUo0C,EAAO30B,IAAIv+G,OAAO8+F,GAAU,IAAIviC,EAAQ2vE,EAASyE,WAAWzE,EAASiC,QAAQ+E,EAAO3F,aAAazuC,KAAY,OAAOo0C,EAAO30B,IAAIh/C,KAAKu/B,EAASviC,EAAQ,CAAC,EAAE,IAAUt3E,IAAI,GAAG,CAACoE,IAAI,UAAU1B,MAAM,SAAiBiH,GAAqB,OAAf3J,KAAK2J,KAAKA,EAAY3J,IAAI,GAAG,CAACoE,IAAI,SAAS1B,MAAM,WAAkB,OAAO1C,KAAKs5H,GAAG,GAAG,CAACl1H,IAAI,sBAAsB1B,MAAM,SAA6BsuD,GAAM,IAAI49F,EAAS5uJ,KAAKs5H,IAAI0vB,MAAMh4F,GAAMq9F,SAAS,OAAOruJ,KAAK6uJ,+BAA+BD,EAAS59F,EAAK,GAAG,CAAC5sD,IAAI,iCAAiC1B,MAAM,SAAwC40E,EAAQw3E,GAAU,IAAIC,EAAO/uJ,KAASgvJ,EAAY,CAACF,SAASA,GAA8K,OAApKzvJ,OAAOD,KAAK6nJ,EAAS9iJ,UAAUH,SAAQ,SAASI,GAAK4qJ,EAAY5qJ,GAAK2qJ,EAAO3qJ,EAAI,IAAG4qJ,EAAYvB,eAAeztJ,KAAKytJ,eAAeuB,EAAYxB,QAAQxtJ,KAAKwtJ,QAAe,IAAI52B,EAAcq4B,aAAa33E,EAAQ03E,EAAY,GAAG,CAAC5qJ,IAAI,cAAc1B,MAAM,SAAqBsuD,GAAM,OAAOhxD,KAAK8tJ,oBAAoB98F,GAAMhxD,KAAKytJ,eAAeyB,UAAUC,aAAa,GAAG,CAAC/qJ,IAAI,oBAAoB1B,MAAM,WAA4C,OAAf1C,KAAKsuJ,UAAiBtuJ,KAAK+tJ,cAAc,KAAYn3B,CAAa,CAApkH,GAAwkHA,EAAcqwB,SAAS5pE,EAAQ,eAAeu5C,EAAci0B,OAAOxtE,EAAQ,YAAYu5C,EAAcq4B,aAAa5xE,EAAQ,mBAAmBu5C,EAAc82B,eAAerwE,EAAQ,sBAAsBu5C,EAAcw4B,WAAW/xE,EAAQ,iBAAiB99E,EAAOC,QAAQo3H,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,gBAAgB,GAAG,kBAAkB,KAAK,EAAE,CAAC,SAASv5C,EAAQ99E,EAAOC,GAAS,aAAa,SAAS6vJ,EAAQp+I,GAASjR,KAAKkH,KAAK,eAAelH,KAAKiR,QAAQA,EAAQjR,KAAKsvJ,MAAM,IAAIpwJ,MAAM+R,GAASq+I,KAAK,CAAmC,SAASzC,EAAgB57I,GAASjR,KAAKkH,KAAK,gBAAgBlH,KAAKiR,QAAQA,EAAQjR,KAAKsvJ,MAAM,IAAIpwJ,MAAM+R,GAASq+I,KAAK,CAAuC,SAASC,EAAmBt+I,GAASjR,KAAKkH,KAAK,mBAAmBlH,KAAKiR,QAAQA,EAAQjR,KAAKsvJ,MAAM,IAAIpwJ,MAAM+R,GAASq+I,KAAK,CAA0C,SAASE,EAAgBv+I,GAASjR,KAAKkH,KAAK,gBAAgBlH,KAAK22F,WAAW,CAAC80D,YAAY,iBAAiBzrJ,KAAKiR,QAAQA,EAAQjR,KAAKsvJ,MAAM,IAAIpwJ,MAAM+R,GAASq+I,KAAK,CAAngBD,EAAQjxG,UAAUl/C,MAAMk/C,UAA+HyuG,EAAgBzuG,UAAU,IAAIixG,EAAmIE,EAAmBnxG,UAAU,IAAIixG,EAA2KG,EAAgBpxG,UAAU,IAAIixG,EAAQ9vJ,EAAOC,QAAQ,CAAC6vJ,QAAQA,EAAQxC,gBAAgBA,EAAgB2C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASlyE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIiwJ,EAAWpyE,EAAQ,kBAAsBqyE,EAAoBryE,EAAQ,4BAAgCsyE,EAAatyE,EAAQ,oBAAwBuyE,EAAgBvyE,EAAQ,+BAAmCtK,EAAOsK,EAAQ,oBAAwBwyE,EAAmB,CAAC7B,kBAAkB,SAA2B10B,GAAkI,OAA1GA,EAAIh/C,KAAK,2DAA2D57E,KAAI,SAAS47E,GAAM,OAAOA,EAAKpzE,IAAI,IAAyB4gB,OAAO,CAAC,wBAAwB,EAAEonI,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAACn7E,EAAO68E,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2B10B,GAAwG,OAAhFA,EAAIh/C,KAAK,iCAAiC57E,KAAI,SAAS47E,GAAM,OAAOA,EAAKpzE,IAAI,IAAyB4gB,OAAO,CAAC,qBAAqB,EAAEonI,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAACn7E,EAAO28E,EAAoBE,EAAgBD,EAAaF,IAAalwJ,EAAOC,QAAQ,CAAC2wJ,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAASxyE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIqrJ,EAAOxtE,EAAQ,YAAgB4pE,EAAS5pE,EAAQ,eAAe,SAASgzE,EAAQC,EAAMp4I,GAAO,OAAOo4I,EAAM,IAAIp4I,EAAMwyI,QAAQxyI,EAAMwyI,OAAO4F,EAAM,EAAE,CAAC,SAASC,EAAgBxF,EAAKyF,GAAW,GAAe,QAAZzF,EAAKppJ,MAA8B,UAAhBopJ,EAAKpqJ,UAAoBoqJ,EAAK98I,KAAK,CAAC,GAAGuiJ,EAAW,MAAM,IAAItxJ,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZ6rJ,EAAKppJ,MAA8B,QAAhBopJ,EAAKpqJ,UAAkBoqJ,EAAK98I,KAAK,CAAC,IAAIuiJ,EAAW,MAAM,IAAItxJ,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAOsxJ,CAAS,CAAC,SAASC,EAAWhjJ,EAAEC,GAAG,OAAOD,EAAEi9I,OAAOh9I,EAAEg9I,MAAM,CAAC,SAASgG,EAAOv2B,GAAK,IAAItnG,EAAM,EAAc,MAATsnG,EAAI,KAAUtnG,EAAM,GAAE,IAAIjnB,EAAMuuH,EAAIjtH,QAAQ,KAAS07C,GAAa,IAATh9C,EAAWuuH,EAAIj0H,OAAO,EAAE0F,EAAM,MAAM,CAACuuH,IAAIA,EAAIpnH,MAAM8f,EAAM+1B,GAAKjoD,SAAiB,IAARkyB,EAAU,QAAQ,MAAM,CAA6hC,SAAS89H,EAA0BzuJ,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,gBAAmM,MAAnL3kJ,EAAIyuF,WAAW,CAACi6D,KAAK1uJ,EAAQ0uJ,KAAKpoI,MAAM,KAAK,GAAG28B,OAAO,GAAGtmD,GAAG,eAAeqQ,QAAQhN,EAAQ0uJ,KAAKnF,YAAY,2BAA2BvpJ,EAAQ0uJ,KAAKzrG,OAAO,EAAE,IAAI,iBAAuBj9C,CAAG,CAAC,SAAS2oJ,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACvG,OAAO,GAAOkG,OAAK,EAAOE,EAAiB9sJ,SAAQ,SAASktJ,GAAgBN,EAAKG,EAAS5rG,OAAO8rG,EAAmBvG,OAAOwG,EAAexG,OAAOuG,EAAmBvG,SAAqC,UAA1BwG,EAAevwJ,UAAoBqwJ,GAAuC,QAA1BE,EAAevwJ,WAAmBqwJ,KAA0C,UAA1BE,EAAevwJ,SAAoBgwJ,EAA0B,CAACC,KAAKA,IAA3+B,SAAmC1uJ,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,gBAAyL,MAAzK3kJ,EAAIyuF,WAAW,CAACi6D,KAAK1uJ,EAAQ0uJ,KAAKpoI,MAAM,KAAK,GAAG3pB,GAAG,eAAeqQ,QAAQhN,EAAQ0uJ,KAAKnF,YAAY,2BAA2BvpJ,EAAQ0uJ,KAAKzrG,OAAO,EAAE,IAAI,iBAAuBj9C,CAAG,CAAsuBipJ,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAAS7qJ,OAAQ0qJ,EAAKG,EAAS5rG,OAAO8rG,EAAmBvG,OAAOwG,EAAsBD,EAAmBvG,QAAWsG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAI17I,EAAIhV,GAAU,IAAI6jC,EAAQ,GAAOkmH,GAAQ,EAAE,IAAiD,KAA9CA,EAAO2G,EAAInkJ,QAAQyI,EAAI+0I,EAAO,KAAmBlmH,EAAQngC,KAAK,CAACqmJ,OAAOA,EAAO/pJ,SAASA,WAA4B,IAAV+pJ,GAAa,OAAOlmH,CAAO,CAAC,SAAS8sH,EAAOC,GAAmB,IAAI55F,EAAM33D,KAAKA,KAAKuxJ,kBAAkBA,EAAkBvxJ,KAAKwxJ,KAAK,GAAGxxJ,KAAKyxJ,gBAAgB,SAASzG,GAAYrzF,EAAM65F,KAAK75F,EAAM45F,kBAAkBrjJ,KAAK,IAAI,IAAIw8I,EAAO,EAAE/yF,EAAM+5F,OAAO/5F,EAAM45F,kBAAkB7yJ,KAAI,SAASqsJ,GAA0B,OAApBL,GAAQK,EAAK7kJ,QAAqB6kJ,EAAK7kJ,MAAM,IAAG,IAAI4qJ,EAAiB7J,EAASsF,aAAa,CAAC6E,EAAcz5F,EAAM65F,KAAKxG,EAAWn4H,MAAM,SAASu+H,EAAcz5F,EAAM65F,KAAKxG,EAAWpiG,IAAI,SAASp7C,KAAKijJ,GAAYI,EAAuBC,EAAiBn5F,EAAM65F,MAAM,IAAIG,EAAgB,CAAC9+H,MAAMm4H,EAAWn4H,MAAM3sB,OAAO0iD,IAAIoiG,EAAWpiG,IAAI1iD,QAAY0rJ,EAAQ,EAAMC,EAAe,EAAEl6F,EAAM4pE,OAAO5pE,EAAM+5F,OAAOhzJ,KAAI,SAASgsJ,EAAOx3I,GAAkI,IAA/H,IAAIo9I,EAAM,CAAC5F,EAAOA,EAAO1qJ,KAAKuxJ,kBAAkBr+I,GAAGhN,QAAY4rJ,EAAY9xJ,KAAKuxJ,kBAAkBr+I,GAAO6+I,EAAmB,GAASF,EAAef,EAAiB5qJ,QAAQmqJ,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmB1tJ,KAAKysJ,EAAiBe,IAAiBA,IAAiB,IAAItpI,EAAM,GAAO0+E,EAAO,EAAK2qD,EAAQ,IAAG3qD,EAAO2qD,EAAQA,EAAQ,GAAEG,EAAmB/tJ,SAAQ,SAASguJ,GAAmB,IAAItvJ,EAAMovJ,EAAY3sG,OAAO8hD,EAAO+qD,EAAkBtH,OAAOA,EAAOzjD,GAAWvkG,EAAMwD,OAAO,GAAGqiB,EAAMlkB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQ6lB,EAAMlkB,KAAK,CAAC1C,KAAK,YAAYhB,SAASqxJ,EAAkBrxJ,WAAWsmG,EAAO+qD,EAAkBtH,OAAOA,EAAOiH,EAAgBK,EAAkBrxJ,SAAS,IAAGixJ,EAAQ3qD,EAAO6qD,EAAY5rJ,OAAO,IAAIxD,EAAMovJ,EAAY3sG,OAAO8hD,GAAoE,OAAzDvkG,EAAMwD,OAAO,GAAGqiB,EAAMlkB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe6lB,CAAK,GAAEovC,EAAM,CAAC,CAACp4D,EAAOC,QAAQ,CAACyX,MAAM,SAAeg7I,EAAUjH,GAAY,IAAIwF,GAAU,EAAUe,EAAkB,GAAGU,EAAUjuJ,SAAQ,SAAS+mJ,IAAMyF,EAAUD,EAAgBxF,EAAKyF,KAAqC,YAAZzF,EAAKppJ,MAAkB4vJ,EAAkBltJ,KAAK0mJ,EAAKroJ,MAAO,IAAG,IAAIg4E,EAAO,IAAI42E,EAAOC,GAAmB72E,EAAO+2E,gBAAgBzG,GAAY,IAAIkH,EAAS,GAAOtmJ,EAAM,EAAoW,OAAlWqmJ,EAAUjuJ,SAAQ,SAAS+mJ,GAAMyF,EAAUD,EAAgBxF,EAAKyF,GAA0B,YAAZzF,EAAKppJ,OAAkBopJ,EAAKpqJ,SAAS6vJ,EAAU,YAAY,cAAgBA,GAAuB,YAAZzF,EAAKppJ,MAAkBqL,MAAMoxC,UAAU/5C,KAAKupC,MAAMskH,EAASx3E,EAAO6mD,OAAO31H,GAAOlN,KAAI,SAASsjB,GAAiD,MAAlC,YAATA,EAAErgB,OAAkBqgB,EAAErhB,SAAS,aAAmBqhB,CAAC,KAAIpW,KAAasmJ,EAAS7tJ,KAAK0mJ,EAAM,IAAUmH,CAAQ,EAAEC,SAAS,SAAkB76E,EAAQ86E,GAAS,IAAIC,EAApgJ,SAAoB/6E,EAAQg7E,EAAeC,GAAuU,IAArT,IAAItrD,EAAO,EAAMurD,EAAcl7E,EAAQpxE,OAAWusJ,EAAWxL,EAASsF,aAAa,CAAC+F,EAAe5zJ,KAAI,SAASy7H,GAAK,MAAM,CAACA,IAAIA,EAAIlsH,MAAK,EAAK,IAAGskJ,EAAiB7zJ,KAAI,SAASy7H,GAAK,MAAM,CAACA,IAAIA,EAAIlsH,MAAK,EAAM,MAAKq7I,QAAO,SAASmJ,EAAW1yH,GAA4B,OAAzB0yH,EAAW1yH,EAAEo6F,KAAKp6F,EAAE9xB,KAAYwkJ,CAAU,GAAE,CAAC,GAAOC,EAAa,GAASzrD,EAAOurD,IAA+D,KAAhDvrD,EAAO3vB,EAAQpqE,QAAQ,IAAI+5F,KAA5B,CAA0D,IAAIyjD,EAAOzjD,EAAOA,EAAO3vB,EAAQpqE,QAAQ,IAAI+5F,GAAQ,IAAI0rD,EAAQr7E,EAAQvkE,MAAM23I,EAAOzjD,EAAO,GAAO2rD,EAAQlC,EAAOiC,GAASx4B,EAAIy4B,EAAQz4B,IAAIx5H,EAASiyJ,EAAQjyJ,SAAasN,EAAKwkJ,EAAWt4B,GAAc,MAANlsH,GAAqBykJ,EAAaruJ,KAAK,CAAC1C,KAAK,MAAMhB,SAASA,EAASsN,KAAKA,EAAKy8I,OAAOA,EAAOhoJ,MAAMiwJ,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAWv7E,EAAQ86E,EAAQnkJ,KAAKmkJ,EAAQU,OAAW7rD,EAAO,EAAMs6B,EAAO8wB,EAAQ/I,QAAO,SAAS/nB,EAAOrpH,GAAO,IAAIxV,EAAM40E,EAAQnyB,OAAO8hD,EAAO/uF,EAAMwyI,OAAOzjD,GAA4K,OAAjKvkG,EAAMwD,OAAO,GAAGq7H,EAAOl9H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQukG,EAAO/uF,EAAMwyI,OAAOxyI,EAAMxV,MAAMwD,cAAcgS,EAAMwyI,OAAUxyI,EAAMxV,MAAMwD,OAAO,GAAGq7H,EAAOl9H,KAAK6T,GAAcqpH,CAAM,GAAE,IAAQ7+H,EAAM40E,EAAQnyB,OAAO8hD,GAAqE,OAA1DvkG,EAAMwD,OAAO,GAAGq7H,EAAOl9H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe6+H,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAASlkD,EAAQ99E,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiBuzJ,GAAM,IAAIC,EAAct/I,KAAKC,UAAUs/I,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAI76H,EAAK46H,EAAcpgJ,WAAW,OAAOwlB,KAAQ66H,EAAMA,EAAM76H,GAAM66H,EAAM76H,GAAM26H,EAAKnlH,MAAM5tC,KAAK4S,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASyqE,EAAQ99E,EAAOC,GAAS,aAAa,SAAS0zJ,EAAiB1G,EAAOjhG,GAAuB,IAAhB,IAAI4nG,GAAU,EAAUjgJ,EAAE,EAAEe,EAAEu4I,EAAOtmJ,OAAOgN,EAAEe,EAAEf,IAAQq4C,EAAMr4C,IAAIs5I,EAAOt5I,GAAGhN,UAAgC,IAAZitJ,GAAe3G,EAAOt5I,GAAGq4C,EAAMr4C,IAAIw3I,OAAO8B,EAAO2G,GAAU5nG,EAAM4nG,IAAWzI,UAAQyI,EAASjgJ,GAAG,IAAe,IAAZigJ,EAAe,MAAM,IAAIj0J,MAAM,qBAAqB,OAAOi0J,CAAQ,CAAC5zJ,EAAOC,QAAQ,SAASgtJ,GAAQ,IAAI4G,EAAY5G,EAAOlD,QAAO,SAAStnG,EAAIyqG,GAAO,OAAOzqG,EAAIyqG,EAAMvmJ,MAAM,GAAE,GAAGsmJ,EAAOA,EAAO5jJ,QAAO,SAAS6jJ,GAAO,OAAOA,EAAMvmJ,OAAO,CAAC,IAA6F,IAA1F,IAAImtJ,EAAY,IAAIrmJ,MAAMomJ,GAAiB7nG,EAAMihG,EAAO9tJ,KAAI,WAAW,OAAO,CAAC,IAAOwU,EAAE,EAAQA,GAAGkgJ,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiB1G,EAAOjhG,GAAO8nG,EAAYngJ,GAAGs5I,EAAO8G,GAAY/nG,EAAM+nG,IAAa/nG,EAAM+nG,KAAcpgJ,GAAG,CAAC,OAAOmgJ,CAAW,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAASh2E,EAAQ99E,EAAOC,GAAS,aAAa,SAAS+zJ,IAAW,CAAC,SAASC,EAAStgJ,GAAG,OAAOA,CAAC,CAAC3T,EAAOC,QAAQ,SAASD,GAAQ,IAAI4E,EAAS,CAAC4V,IAAIw5I,EAASt8I,MAAMs8I,EAASxgF,OAAOwgF,EAASE,UAAUF,EAASnF,mBAAmBoF,EAAS/E,eAAe+E,EAASE,UAAUF,GAAU,GAAGn0J,OAAOD,KAAK+E,GAAUwvJ,OAAM,SAASvvJ,GAAK,OAAO7E,EAAO6E,EAAI,IAAI,MAAM,IAAIlF,MAAM,2FAAgL,OAArFG,OAAOD,KAAK+E,GAAUH,SAAQ,SAASI,GAAK7E,EAAO6E,GAAK7E,EAAO6E,IAAMD,EAASC,EAAI,IAAU7E,CAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS89E,EAAQ99E,EAAOC,GAAS,aAAa,IAA+Bo0J,EAAUv2E,EAAQ,gBAAoB4pE,EAAS5pE,EAAQ,gBAAoBiwE,EAAQjwE,EAAQ,qBAAuDw2E,EAArBx2E,EAAQ,aAAyCw2E,mBAAuBhJ,EAAOxtE,EAAQ,aAA+V,SAASy2E,EAAkC5xJ,GAAS,IAAIqhI,EAAKrhI,EAAQqhI,KAASr7H,EAAI,IAAI2iJ,EAAOgC,gBAAgB,0CAA4O,MAAlM3kJ,EAAIyuF,WAAW,CAAC93F,GAAG,yCAAyC4sJ,YAAY,YAAYloB,EAAK,GAAG7gI,MAAM,2BAA2B6gI,EAAK,GAAG7gI,MAAM,IAAIqxJ,WAAWxwB,EAAK,GAAG7gI,MAAMsxJ,WAAWzwB,EAAK,GAAG7gI,OAAawF,CAAG,CAAC,SAAS+rJ,EAAmBlJ,GAAM,OAAOA,EAAKmJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAIh1J,MAAM,uDAAuD6rJ,EAAKmJ,SAAS,KAAK,CAAC,SAASC,EAAShH,GAAQ,GAAmB,IAAhBA,EAAOjnJ,OAAY,MAAM,GAA4C,IAAzC,IAAIkuJ,EAAU,EAAMC,EAAWlH,EAAO,GAAWj6I,EAAE,EAAEA,EAAEi6I,EAAOjnJ,OAAOgN,IAAI,CAAC,IAAIohJ,EAAanH,EAAOj6I,GAAoD,GAAe,KAAhEkhJ,GAAWH,EAAmBK,EAAavJ,OAAuB,CAAIuJ,EAAavJ,KAAKroJ,QAAQ2xJ,EAAWtJ,KAAKroJ,OAAiC,KAA1B4xJ,EAAavJ,KAAKroJ,OAAYoxJ,EAAkC,CAACvwB,KAAK,CAAC8wB,EAAWtJ,KAAKuJ,EAAavJ,QAAQ,IAAIwJ,EAAMJ,EAAShH,EAAOp6I,MAAMG,EAAE,IAC9v+B,MAAM,CAAC,CAACmhJ,EAAWC,IAAexsI,OAAOysI,EAAM,CAAC,CAAC,IAAIxJ,EAAKsJ,EAAWtJ,MAD857B,SAAqC7oJ,GAAS,IAAIgyJ,EAAShyJ,EAAQgyJ,SAAan0H,EAAa,UAAXm0H,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAehsJ,EAAI,IAAI2iJ,EAAOgC,gBAAgB2H,EAAE,SAAar6B,EAAIj4H,EAAQ6oJ,KAAKroJ,MAA2F,MAArFwF,EAAIyuF,WAAW,CAAC93F,GAAGkhC,EAAE,QAAQ0rH,YAAY,qBAAqBtxB,EAAI,OAAOp6F,EAAE6wH,KAAKz2B,GAAWjyH,CAAG,CAC1u8BusJ,CAA4B,CAAC1J,KAAKA,EAAKmJ,SAASnJ,EAAKmJ,UAAU,CAAC,IAAItE,EAAgB,CAAC1oJ,KAAK,kBAAkBwsJ,UAAU,SAAmBnyB,EAAOmzB,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAAcvG,EAAOsG,EAD+86B,aAC376BlyB,GAAQ4rB,EAAOA,EAAOzuJ,KAAI,SAASk2J,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnChH,EAAOyG,EAAUzG,IAAuC2H,EAAcD,EAAMn2J,KAAI,SAASq2J,GAAM,IAAIC,EAASD,EAAK,GAAGhK,KAAKiK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmBtyB,EAAOxuH,MAAMgiJ,EAAK,GAAGrK,OAAOqK,EAAK,GAAGrK,UAAasK,EAA4K,CAAnH/N,EAAS1gG,QAAQg7E,EAAOyzB,EAASD,EAAK,GAAGrK,QAAkBzD,EAASzgG,SAAS+6E,EAAOyzB,EAASD,EAAK,GAAGrK,SAA9I,CAACqK,EAAK,GAAGrK,OAAOqK,EAAK,GAAGrK,OAAgJ,IAAOuK,EAAiB,EAAMC,OAAW,EAAO,OAAO3zB,EAAO+nB,QAAO,SAAS6L,EAAUpK,EAAK73I,GAAG,IAAIkiJ,EAAOH,EAAiBJ,EAAM3uJ,QAAQ4uJ,EAAcG,GAAkB,IAAI/hJ,EAAM6hJ,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAU9wJ,KAAK0mJ,GAAaoK,EAAiH,GAApGE,EAAa,KAAKniJ,IAAGgiJ,EAAW,IAAMH,EAAK,GAAGrK,SAASx3I,GAAG6hJ,EAAK,GAAGrK,SAASx3I,GAAGgiJ,EAAW7wJ,KAAK0mJ,GAASsK,EAAa,KAAKniJ,EAAE,CAAC,IAAIoiJ,EAAS/zB,EAAOwzB,EAAK,GAAGrK,eAAe4K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAU9wJ,KAAKixJ,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAG51J,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQsC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,GAAG,oBAAoB,GAAG,YAAY,KAAK,GAAG,CAAC,SAASvyE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,gBAAoBm4E,EAAe,oBAAwBlI,EAAQjwE,EAAQ,qBAAyBo4E,EAAW,OAAWhG,EAAW,CAACvoJ,KAAK,aAAa+P,MAAM,SAAey+I,GAAoB,IAAIn2J,EAAOk2J,EAAe9zJ,EAAK,cAAc,MAA2B,MAAxB+zJ,EAAmB,GAAgB,CAAC/zJ,KAAKA,EAAKe,MAAMgzJ,EAAmBvwG,OAAO,GAAG6vG,SAAS,OAAOz1J,OAAOA,EAAO20J,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAAC/zJ,KAAKA,EAAKe,MAAMgzJ,EAAmBvwG,OAAO,GAAG6vG,SAAS,OAAOz1J,OAAOA,EAAO20J,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAAC/zJ,KAAKA,EAAKe,MAAMgzJ,EAAmBvwG,OAAO,GAAG5lD,OAAOA,EAAO20J,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAAC/zJ,KAAKA,EAAKe,MAA9HgzJ,EAAmB7iJ,QAAQ2iJ,EAAe,MAAgGR,SAA7EU,EAAmB7iJ,QAAQ2iJ,EAAe,MAAqDj2J,OAAOA,EAAO20J,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAUr0B,GAAQ,GAAe,eAAZq0B,EAAiC,OAAOr0B,EAAO+nB,QAAO,SAAS/lB,EAAKwnB,EAAKL,GAAqG,MAA9E,gBAAZK,EAAKppJ,MAAsBopJ,EAAKxrJ,SAASk2J,GAAYlyB,EAAKl/H,KAAK,CAAC0mJ,KAAKA,EAAKL,OAAOA,IAAgBnnB,CAAI,GAAE,GAAG,EAAExwD,OAAO,SAAgBg4E,EAAK7oJ,GAAS,GAAgB,iBAAZ6oJ,EAAKppJ,MAAsBopJ,EAAKxrJ,SAASk2J,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjE3zJ,EAAQ4zJ,aAAaC,SAAShL,EAAKroJ,OAAzQ,SAAkB03H,GAAO,IAAI07B,EAAa5zJ,EAAQ4zJ,aAAaE,sBAAsB57B,EAAM2wB,EAAKroJ,OAAOmzJ,EAAWxxJ,KAAKnC,EAAQ6wE,OAAOk0E,EAASgE,aAAa,CAAC,EAAE/oJ,EAAQ,CAACqrJ,SAASxC,EAAKwK,UAAUhyB,KAAK,CAAC,EAAEuyB,aAAaA,KAAgB,GAAmD/K,EAAK4K,UAAgB,CAACjzJ,MAAMmzJ,EAAW3nJ,KAAK,IAAI,GAAG3O,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQmC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAASpyE,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS5pE,EAAQ,gBAAoBwtE,EAAOxtE,EAAQ,aAAiBo4E,EAAW,SAAanI,EAAQjwE,EAAQ,qBAAkW,SAAS44E,EAASvB,GAAM,IAAI3J,EAAK2J,EAAK3J,KAAK7yC,EAAKw8C,EAAKx8C,KAAK7L,EAAMqoD,EAAKroD,MAAM6pD,EAAWxB,EAAKwB,WAAWtqJ,EAAM8oJ,EAAK9oJ,MAAUuqJ,EAAeD,EAAWnjJ,MAAMmlG,EAAK,EAAE7L,GAAsO,OAA/N8pD,EAAenyJ,SAAQ,SAASge,EAAE9O,GAAMA,IAAItH,EAAMssG,EAAK,IAAsB,gBAATl2F,EAAErgB,MAA+B,YAATqgB,EAAErgB,MAA+B,cAAbqgB,EAAErhB,WAAxmB,SAAgDuB,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,gDAAoD1yB,EAAIj4H,EAAQ6oJ,KAAKroJ,MAAkK,MAA5JwF,EAAIyuF,WAAW,CAAC93F,GAAG,+CAA+C4sJ,YAAY,WAAWtxB,EAAIy2B,KAAK1uJ,EAAQ6oJ,KAAKroJ,MAAMyzJ,eAAej0J,EAAQi0J,gBAAsBjuJ,CAAG,CAAoTkuJ,CAAuC,CAACD,eAAeA,EAAepL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIsL,EAAa,WAAW,SAASA,KAA5hC,SAAyB3qG,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgBxoJ,KAAKq2J,GAAcr2J,KAAKkH,KAAK,cAAc,CAAyvB,OAAxvBmgJ,EAAagP,EAAa,CAAC,CAACjyJ,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQklJ,GAAgE,OAAjDpnJ,KAAKytJ,eAAerG,EAAcqG,eAAsBvrJ,CAAO,GAAG,CAACkC,IAAI,QAAQ1B,MAAM,SAAegzJ,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAAC/zJ,KAAjE,cAA2Ee,MAAMgzJ,EAAmBvwG,OAAO,GAAG5lD,OAAOk2J,EAAW,GAAG,CAACrxJ,IAAI,YAAY1B,MAAM,SAAmB6+H,GAAQ,OAAO0lB,EAASkG,OAAOmJ,YAAY/0B,EAAO,CAACk0B,WAAWA,EAAWQ,SAASA,EAASjB,SAASh1J,KAAKytJ,eAAeuC,WAAW,GAAG,CAAC5rJ,IAAI,SAAS1B,MAAM,SAAgBqoJ,EAAK7oJ,GAAS,GAAG6oJ,EAAKxrJ,SAASk2J,EAAY,OAAO,KAAK,IAAI/yJ,EAAMR,EAAQ4zJ,aAAahqJ,SAASi/I,EAAKroJ,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQ4oJ,WAAWC,IAAY,CAACroJ,MAAMA,EAAM,KAAY2zJ,CAAY,CAA12B,GAA82B92J,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQ,IAAI+I,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,KAAK,GAAG,CAAC,SAASh5E,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI0F,EAAQjwE,EAAQ,qBAAyBk5E,EAAO,WAAW,SAASA,KAAxN,SAAyB7qG,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgBxoJ,KAAKu2J,GAAQv2J,KAAKkH,KAAK,QAAQ,CAA4V,OAA3VmgJ,EAAakP,EAAO,CAAC,CAACnyJ,IAAI,MAAM1B,MAAM,SAAa8U,GAAQA,EAAI+1I,WAAUvtJ,KAAKutJ,SAAS/1I,EAAI+1I,UAAsB,MAAV/1I,EAAI7N,OAAY3J,KAAK2J,KAAK6N,EAAI7N,KAAK,GAAG,CAACvF,IAAI,iBAAiB1B,MAAM,SAAwB8rJ,GAAQ,IAAI72F,EAAM33D,KAAK,OAAOX,OAAOD,KAAKY,KAAKutJ,UAAUjE,QAAO,SAASkF,EAAO/iH,GAA+C,OAAzC+iH,EAAO/iH,GAAM,CAACA,KAAKA,EAAK9hC,KAAKguD,EAAMhuD,MAAa6kJ,CAAM,GAAEA,EAAO,KAAY+H,CAAM,CAArb,GAAybh3J,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQ,IAAIiJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAASl5E,EAAQ99E,EAAOC,GAAS,aAAa,IAAI8tJ,EAAQjwE,EAAQ,qBAAyBm5E,EAAc,CAACtvJ,KAAK,sBAAsBwsJ,UAAU,SAAmBnyB,GAAQ,IAAIx4E,EAAM,GAAO0tG,GAAQ,EAAU9oJ,EAAO4zH,EAAO+nB,QAAO,SAAS/nB,EAAOwpB,GAA8X,MAAzW,QAAZA,EAAKppJ,MAA8B,UAAhBopJ,EAAKpqJ,UAAoBoqJ,EAAK98I,MAAmB,UAAb88I,EAAKroJ,QAAiB+zJ,GAAQ,GAAQA,GAAwB,gBAAZ1L,EAAKppJ,MAAuBopJ,EAAKxrJ,SAAQwpD,EAAM,GAAGrmD,MAAM,8BAA6BqmD,EAAM1kD,KAAK0mJ,IAAWxpB,EAAOl9H,KAAK0mJ,GAAqB,QAAZA,EAAKppJ,MAA8B,QAAhBopJ,EAAKpqJ,UAAkBoqJ,EAAK98I,MAAmB,WAAb88I,EAAKroJ,QAAkBsK,MAAMoxC,UAAU/5C,KAAKupC,MAAM2zF,EAAOx4E,GAAO0tG,GAAQ,EAAM1tG,EAAM,IAAUw4E,CAAM,GAAE,IAA6C,OAAzCv0H,MAAMoxC,UAAU/5C,KAAKupC,MAAMjgC,EAAOo7C,GAAcp7C,CAAM,GAAGpO,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQkJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,KAAK,GAAG,CAAC,SAASn5E,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,eAAmBM,EAAO,CAAC+1E,UAAU,SAAmBnyB,EAAOisB,GAAS,SAASiG,EAAUmC,EAAUr0B,GAAQ,OAAOisB,EAAQ9uJ,KAAI,SAASa,GAAQ,OAAOA,EAAOk0J,UAAUmC,EAAUr0B,EAAO,GAAE,CAA6J,OAA5J,SAASmyB,EAAUnyB,GAAQ,OAAOisB,EAAQlE,QAAO,SAAS/nB,EAAOhiI,GAAQ,OAAOA,EAAOm0J,UAAUnyB,EAAO,CAACmyB,UAAUA,EAAUD,UAAUA,GAAW,GAAElyB,EAAO,CAAQmyB,CAAUnyB,EAAO,EAAEtqH,MAAM,SAAey/I,EAAMlJ,GAAyQ,IAAImJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMpN,QAAO,SAAS/nB,EAAOs1B,GAAO,MAAgB,cAAbA,EAAMl1J,MAAoBg1J,EAA+B,UAAjBE,EAAMl2J,SAAuC,QAAjBk2J,EAAMl2J,UAA/b,SAAqB+0J,EAAmBn0B,GAAgC,IAAxB,IAAIu1B,OAAa,EAAe5jJ,EAAE,EAAEe,EAAEu5I,EAAQtnJ,OAAOgN,EAAEe,EAAEf,IAA2E,GAA/C4jJ,EAAXtJ,EAAQt6I,GAAwB+D,MAAMy+I,GAA+D,OAA1Bn0B,EAAOl9H,KAAKyyJ,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmBzO,EAASoF,WAAWqJ,GAAuDn0B,IAASA,EAAOl9H,KAAK,CAAC1C,KAAK,cAAce,MAAMgzJ,IAAqB1oJ,MAAMoxC,UAAU/5C,KAAKupC,MAAM2zF,EAAOq1B,GAAWA,EAAU,GAAUr1B,IAAOm0B,EAAmB,GAAUn0B,IAAUo1B,GAA+B,YAAbE,EAAMl1J,MAAmC,cAAjBk1J,EAAMl2J,SAAwB+0J,GAAoBmB,EAAMn0J,MAAWk0J,EAAUvyJ,KAAKwyJ,GAAct1B,IAAOA,EAAOl9H,KAAKwyJ,GAAct1B,EAAM,GAAE,GAAG,GAAGhiI,EAAOC,QAAQm+E,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASN,EAAQ99E,EAAOC,GAAS,aAAa,IAAIw3J,EAAa35E,EAAQ,mBAAuB4pE,EAAS5pE,EAAQ,eAAu1B99E,EAAOC,QAAjmB,SAASuzE,EAAO7wE,GAA2J,OAAlJA,EAAQ6wE,OAAOA,EAAO7wE,EAAQsrJ,QAAQtrJ,EAAQsrJ,QAAYtrJ,EAAQ4zJ,eAAc5zJ,EAAQ4zJ,aAAakB,EAAaC,uBAAuB/0J,IAAgBA,EAAQqrJ,SAAS7uJ,KAAI,SAASqsJ,GAAM,IAAImM,EAAxc,SAAsBnM,EAAK7oJ,GAAmC,IAA1B,IAAIg1J,OAAe,EAAehkJ,EAAE,EAAEe,EAAE/R,EAAQsrJ,QAAQtnJ,OAAOgN,EAAEe,EAAEf,IAAgF,GAA5CgkJ,EAAnBh1J,EAAQsrJ,QAAQt6I,GAA0B6/D,OAAOg4E,EAAK7oJ,GAA4B,OAAOg1J,EAAgB,OAAO,CAAK,CAA0OC,CAAapM,EAAK7oJ,GAAS,GAAGg1J,EAAgB,OAAOA,EAAex0J,MAAM,GAAe,gBAAZqoJ,EAAKppJ,KAAqB,CAAC,IAAIe,EAAMR,EAAQ4zJ,aAAahqJ,SAASi/I,EAAKroJ,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQ4oJ,WAAWC,IAAa9D,EAASqF,WAAW5pJ,EAAM,CAAC,GAAe,YAAZqoJ,EAAKppJ,MAA8B,QAAZopJ,EAAKppJ,KAAc,OAAOopJ,EAAKroJ,MAAM,MAAM,IAAIxD,MAAM,2BAA2B6rJ,EAAKppJ,KAAK,IAAI,IAAGuM,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASmvE,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIiD,EAAOxtE,EAAQ,YAAgB25E,EAAa,WAAW,SAASA,EAAa90J,IAAjO,SAAyBwpD,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgBxoJ,KAAKg3J,GAAch3J,KAAKo3J,UAAUl1J,EAAQk1J,UAAUp3J,KAAKy1B,UAAUvzB,EAAQuzB,UAAUz1B,KAAK29E,OAAOz7E,EAAQy7E,MAAM,CAAmmE,OAAlmE0pE,EAAa2P,EAAa,CAAC,CAAC5yJ,IAAI,WAAW1B,MAAM,SAAkBy3H,EAAI3oH,EAASmkJ,GAAmC,OAAzBA,EAASA,IAAU,EAAa31J,KAAKq3J,cAAcr3J,KAAK8L,SAASquH,GAAK3oH,EAASmkJ,EAAS,GAAG,CAACvxJ,IAAI,oBAAoB1B,MAAM,SAA2BizJ,EAAS2B,EAAQ50J,GAAUizJ,GAAU2B,EAAQ50J,EAAO,GAAG,CAAC0B,IAAI,eAAe1B,MAAM,SAAsBA,EAAMf,GAAM,OAAc,MAAPe,IAAcA,GAAc,mBAAPf,GAAwC,IAAfe,EAAMwD,MAAU,GAAG,CAAC9B,IAAI,gBAAgB1B,MAAM,SAAuBA,EAAM40J,EAAQ3B,GAAU,IAAIh0J,EAAKtC,OAAO++C,UAAU/pC,SAASgqC,KAAK37C,GAAW60J,EAAav3J,KAAKy1B,UAAUz1B,KAAKw3J,KAAK,GAAGx3J,KAAKy3J,aAAa/0J,EAAMf,GAAO,OAAO3B,KAAK03J,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAP51J,EAAqI,MAAU,oBAAPA,EAAiC3B,KAAK03J,mBAAmB/B,EAAS2B,EAAQ50J,IAAkB,IAARA,EAAqB1C,KAAK03J,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQn9B,EAAJlnH,EAAE,EAAQA,EAAExQ,EAAMwD,OAAOgN,IAAKknH,EAAM13H,EAAMwQ,GAAGlT,KAAK03J,mBAAmB/B,EAAS2B,EAAQl9B,EAAiL,GAAG,CAACh2H,IAAI,WAAW1B,MAAM,SAAkBy3H,EAAIq9B,GAAKx3J,KAAKw3J,IAAS,MAALA,EAAUx3J,KAAKy1B,UAAUvvB,OAAO,EAAEsxJ,EAAI,IAAItvJ,OAAI,EAAWy1E,OAAO,EAAWhwE,OAAO,EAAWysH,EAAMp6H,KAAKy1B,UAAUz1B,KAAKw3J,KAAK,IAAI75E,EAAO39E,KAAK29E,OAAOw8C,EAAkP,CAA7O,MAAMhrH,GAA8N,MAAvNjH,EAAI,IAAI2iJ,EAAO0E,mBAAmB,oCAAuC54D,WAAW,CAAC93F,GAAG,iCAAiCs7H,IAAIA,EAAIsxB,YAAY,gCAAgCtxB,EAAI,qBAAqBw9B,UAAUxoJ,GAAajH,CAAG,CAAC,IAAIyF,EAAOgwE,EAAOroE,IAAI8kH,EAAM,CAACo9B,IAAIx3J,KAAKw3J,IAAI/hI,UAAUz1B,KAAKy1B,WAAiQ,CAArP,MAAMtmB,GAAsO,MAA/NjH,EAAI,IAAI2iJ,EAAO0E,mBAAmB,kCAAqC54D,WAAW,CAAC93F,GAAG,+BAA+B4sJ,YAAY,gCAAgCtxB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAIw9B,UAAUxoJ,GAAajH,CAAG,CAAC,OAAW,MAARyF,GAAc3N,KAAKw3J,IAAI,EAAUx3J,KAAK8L,SAASquH,EAAIn6H,KAAKw3J,IAAI,GAAU7pJ,CAAM,GAAG,CAACvJ,IAAI,wBAAwB1B,MAAM,SAA+B03H,EAAMD,GAAK,IAAIj4H,EAAQ,CAACk1J,UAAUp3J,KAAKo3J,UAAUrkJ,MAAM,GAAG0iB,UAAUz1B,KAAKy1B,UAAU1iB,MAAM,IAA2H,OAAvH7Q,EAAQy7E,OAAO39E,KAAK29E,OAAOz7E,EAAQuzB,UAAUz1B,KAAKy1B,UAAU3N,OAAOsyG,GAAOl4H,EAAQk1J,UAAUp3J,KAAKo3J,UAAUtvI,OAAOqyG,GAAY,IAAI68B,EAAa90J,EAAQ,KAAY80J,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAI/2E,EAAO+2E,EAAK/2E,OAAO4lD,EAAKmxB,EAAKnxB,KAASrhI,EAAQ,CAACy7E,OAAOA,EAAO4lD,KAAKA,EAAMrhI,UAAkB,IAA4B,OAAzBA,EAAQuzB,UAAU,CAAC8tG,GAAa,IAAIyzB,EAAa90J,EAAQ,EAAE3C,EAAOC,QAAQw3J,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAAS35E,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,eAAmBwtE,EAAOxtE,EAAQ,YAAgR,SAASu6E,EAAiBnL,EAAMtyB,GAAK,GAAkB,IAAfsyB,EAAMvmJ,OAAY,OAAO,EAAM,IAAsC2xJ,EAA1BpL,EAAMA,EAAMvmJ,OAAO,GAA4Bi0H,IAAIh1E,OAAO,GAAO2yG,EAAgB39B,EAAIh1E,OAAO,EAAEg1E,EAAIj0H,OAAO,GAAG,OAA+C,IAAxC2xJ,EAAa3qJ,QAAQ4qJ,EAAoB,CAAC,SAASC,EAAOtL,EAAMtyB,GAA2B,OAAtBsyB,EAAMpoJ,KAAK,CAAC81H,IAAIA,IAAasyB,CAAK,CAAqkB,SAASuL,EAAUjN,EAAKmL,EAAWh0J,GAAS,IAAI8yJ,EAASjK,EAAKiK,UAAU9yJ,EAAQ8yJ,SAAappJ,EAAMsqJ,EAAWhpJ,QAAQ69I,GAAM,IAAIiK,EAAU,OAAOkB,EAAW,IAAI7pD,OAAM,EAAO6L,OAAK,EAAO,IAAI7L,EAAM46C,EAASzgG,SAAS0vG,EAAWlB,EAASppJ,GAAOssG,EAAK+uC,EAAS1gG,QAAQ2vG,EAAWlB,EAASppJ,EAAkF,CAA3E,MAAM+rJ,IAA75C,SAAmCz1J,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,4BAAgC1yB,EAAIj4H,EAAQ6oJ,KAAKroJ,MAA0H,MAApHwF,EAAIyuF,WAAW,CAAC93F,GAAG,2BAA2B4sJ,YAAY,YAAYtxB,EAAI,IAAIw9B,UAAUz1J,EAAQy1J,UAAU/G,KAAKz2B,GAAWjyH,CAAG,CAAqqC+vJ,CAA0B,CAAClN,KAAKA,EAAK4M,UAAUA,GAAW,CAAC,IAAIO,EAAUhC,EAAWnjJ,MAAMmlG,EAAKtsG,GAAWusJ,EAAWjC,EAAWnjJ,MAAMnH,EAAM,EAAEygG,EAAM,GAAO+rD,EAAMl2J,EAAQ+zJ,SAAS,CAACrqJ,MAAMA,EAAMm/I,KAAKA,EAAKmN,UAAUA,EAAUC,WAAWA,EAAWjgD,KAAKA,EAAK7L,MAAMA,EAAM6pD,WAAWA,IAA2H,MAArD,mBAAhD72J,OAAO++C,UAAU/pC,SAASgqC,KAAK+5G,KAAmCA,EAAMnR,EAASsF,aAAa6L,IAAcnR,EAASsF,aAAa,CAAC2J,EAAWnjJ,MAAM,EAAEmlG,GAAM,CAACkgD,GAAOlC,EAAWnjJ,MAAMs5F,EAAM,IAAI,CAA4T9sG,EAAOC,QAAQ,CAAC82J,YAA3U,SAAqBJ,EAAWh0J,GAAyQ,OAA3Og0J,EAAW5M,QAAO,SAAStgJ,EAAS+hJ,GAA0F,MAArE,gBAAZA,EAAKppJ,MAAsBopJ,EAAKxrJ,SAAS2C,EAAQuzJ,YAAYzsJ,EAAS3E,KAAK0mJ,GAAa/hJ,CAAQ,GAAE,IAAqBhF,SAAQ,SAAS+mJ,GAAMmL,EAAW8B,EAAUjN,EAAKmL,EAAWh0J,EAAQ,IAAUg0J,CAAU,EAAyCrC,mBAAn1C,SAA4BtrI,GAAiD,IAA1C,IAAI8vI,EAAvZ,SAA4B9vI,GAA4H,IAArH,IAAiI4xG,EAA7HoJ,EAAKh7G,EAAM3f,QAAO,SAASmiJ,GAAM,MAAmB,QAAZA,EAAKppJ,IAAY,IAAGjD,KAAI,SAASqsJ,GAAM,OAAOA,EAAKroJ,KAAK,IAAOiL,EAAO,GAAWuF,EAAE,EAAMA,EAAEqwH,EAAKr9H,OAAOgN,IAA6B,OAAxBinH,EAAIoJ,EAAKrwH,IAAU,GAAa0kJ,EAAiBjqJ,EAAOwsH,GAAMxsH,EAAOykC,MAAWzkC,EAAOoqJ,EAAOpqJ,EAAOwsH,GAAkC,MAApBA,EAAIA,EAAIj0H,OAAO,KAAUyH,EAAOoqJ,EAAOpqJ,EAAOwsH,IAAM,OAAOxsH,CAAM,CAAoD2qJ,CAAmB/vI,GAAerV,EAAE,EAAEA,EAAEmlJ,EAAYnyJ,OAAOgN,IAAmC,GAAqC,IAApDmlJ,EAAYnlJ,GAAiBinH,IAAIjtH,QAAQ,SAAc,MAAM,OAAQ,OAAO,CAAK,EAAsqC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASmwE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,eAAo7C,IAAIk7E,EAA75Cl7E,EAAQ,YAA85CstE,EAAxe,SAAoBrzE,EAAQkhF,GAAc,IAAIl+I,EAAI,CAAC,EAAEA,EAAIg9D,QAAQA,EAAQh9D,EAAIk+I,aAAaA,EAAal+I,EAAIm+I,mBAAmBn+I,EAAIk+I,aAAatqJ,KAAK,KAAK,IAAIg6C,EAAO,IAAI7lC,OAAO,QAAQ/H,EAAIm+I,mBAAmB,wBAAwBn+I,EAAIm+I,mBAAmB,KAAK,KAAyL,OAApLn+I,EAAI+3I,QAAQpL,EAAS6F,aAAa5kG,EAAO5tC,EAAIg9D,SAASh9D,EAAIo+I,0BAA0Bp+I,EAAI+3I,QAAQ3zJ,KAAI,WAAW,OAAO,CAAC,IAAG4b,EAAIq+I,gBAAgBr+I,EAAI+3I,QAAQ3zJ,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6B4b,GAAK,SAASs+I,IAAkB,IAAIC,EAAG,CAACpM,MAAMz/I,MAAMoxC,UAAUrrC,MAAMsrC,KAAKzrC,YAAYimJ,EAAGpM,MAAMv4I,QAAQ,IAAIgE,EAAM2gJ,EAAGpM,MAAM,GAAGoM,EAAGpM,MAAM,GAAGoM,EAAGpM,MAAMr5H,QAAQlb,GAAO2gJ,EAAGpM,MAAMr6G,MAAM,IAAIs4G,EAAOmO,EAAGpM,MAAMr6G,MAA4F,OAAtFymH,EAAGnO,OAAOA,EAAOmO,EAAG/4H,OAAM,EAAKxlB,EAAI+3I,QAAQj/H,QAAQylI,GAAIv+I,EAAIq+I,gBAAgBvlI,QAAQ,GAAU9Y,EAAIo+I,0BAA0BtlI,QAAQ,EAAE,EAAgC,IAA5B9Y,EAAIg9D,QAAQpqE,QAAQ,OAAuC,IAA5BoN,EAAIg9D,QAAQpqE,QAAQ,MAAWoN,EAAIg9D,QAAQzkE,QAAQ,eAAe+lJ,GAAiB,IAAIrpJ,EAAE,IAAI8S,OAAO,kBAAkB/H,EAAIm+I,mBAAmB,MAAmY,OAA7Xn+I,EAAIg9D,QAAQzkE,QAAQtD,EAAEqpJ,GAAmQrpJ,EAAE,IAAI8S,OAAO,QAAQ/H,EAAIm+I,mBAAmB,oBAAoBn+I,EAAIg9D,QAAQzkE,QAAQtD,GAAtU,WAAwB,IAAIspJ,EAAG,CAACpM,MAAMz/I,MAAMoxC,UAAUrrC,MAAMsrC,KAAKzrC,YAAYimJ,EAAGpM,MAAMr6G,MAAM,IAAIs4G,EAAOmO,EAAGpM,MAAMr6G,MAAqF,OAA/EymH,EAAGnO,OAAOA,EAAOmO,EAAGC,MAAK,EAAKx+I,EAAI+3I,QAAQhuJ,KAAKw0J,GAAIv+I,EAAIq+I,gBAAgBt0J,KAAK,GAAUiW,EAAIo+I,0BAA0Br0J,KAAK,EAAE,IAA4GiW,CAAG,CAAmcy+I,CAAoBz+I,EAAI,IAAkC/a,EAAOC,QAAQ,SAAS83E,EAAQkhF,GAAc,OAAOvR,EAASxhJ,UAAU8yJ,EAASjhF,EAAQkhF,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAASn7E,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS5pE,EAAQ,eAAmB25E,EAAa35E,EAAQ,mBAAuB27E,EAAW37E,EAAQ,iBAAqBwtE,EAAOxtE,EAAQ,YAAgB47E,EAAM57E,EAAQ,WAAe67E,EAAO77E,EAAQ,eAAmB87E,EAAQ97E,EAAQ,eAAmP99E,EAAOC,QAAQ,WAAW,SAASyvJ,EAAa33E,EAAQp1E,IAArqB,SAAyBwpD,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgBxoJ,KAAKivJ,GAAcjvJ,KAAKo5J,SAASl3J,GAASlC,KAAKq5J,WAAW,CAACC,QAAQ,CAACxK,SAAS9uJ,KAAK8uJ,YAAY9uJ,KAAKq0B,KAAKijD,EAAQ,CAAwsD,OAAvsD+vE,EAAa4H,EAAa,CAAC,CAAC7qJ,IAAI,OAAO1B,MAAM,SAAc40E,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAIpvE,EAAI,IAAI2iJ,EAAO2E,gBAAgB,4BAAoF,MAAxDtnJ,EAAIyuF,WAAW93F,GAAG,sCAA4CqJ,CAAG,CAAClI,KAAKs3E,QAAQA,CAAO,GAAG,CAAClzE,IAAI,UAAU1B,MAAM,SAAiB6gI,GAA8H,OAAxHvjI,KAAKujI,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAEvjI,KAAK81J,aAAakB,EAAaC,uBAAuB,CAAC1zB,KAAKvjI,KAAKujI,KAAK5lD,OAAO39E,KAAK29E,SAAgB39E,IAAI,GAAG,CAACoE,IAAI,WAAW1B,MAAM,SAAkBR,GAASlC,KAAK8uJ,SAAS5sJ,EAAQ4sJ,SAAS9uJ,KAAKwtJ,QAAQtrJ,EAAQsrJ,QAAQxtJ,KAAKytJ,eAAevrJ,EAAQurJ,eAAepuJ,OAAOD,KAAK6nJ,EAAS9iJ,UAAUzF,KAAI,SAAS0F,GAAKpE,KAAKoE,GAAmB,MAAdlC,EAAQkC,GAAWlC,EAAQkC,GAAK6iJ,EAAS9iJ,SAASC,EAAI,GAAEpE,KAAK,GAAG,CAACoE,IAAI,cAAc1B,MAAM,WAAuB,OAA/nC40E,EAAmpCt3E,KAAKs3E,QAAhpCkhF,EAAwpCx4J,KAAKytJ,eAAeqC,iBAA7mCniJ,EAArCqrJ,EAAW1hF,EAAQkhF,GAAiCnG,QAAQ3zJ,KAAI,SAASwZ,GAAO,OAAOA,EAAMu0I,MAAM,EAAE,IAAUxF,EAASoF,WAAWpF,EAASuE,cAAc79I,EAAOO,KAAK,MAA9N,IAAsBopE,EAAQkhF,EAA+D7qJ,CAA8nC,GAAG,CAACvJ,IAAI,aAAa1B,MAAM,SAAoB8U,GAAKxX,KAAKwtJ,QAAQxpJ,SAAQ,SAASzE,GAAQA,EAAOwa,IAAIvC,EAAI,GAAE,GAAG,CAACpT,IAAI,QAAQ1B,MAAM,WAAyc,OAAxb1C,KAAKu5J,SAASN,EAAM9G,SAASnyJ,KAAKs3E,QAAQ,CAACrpE,KAAKjO,KAAKytJ,eAAeqC,iBAAiBgD,MAAM9yJ,KAAKytJ,eAAesC,oBAAoB/vJ,KAAKq5J,WAAW,CAACC,QAAQ,CAACC,SAASv5J,KAAKu5J,YAAYv5J,KAAK02J,MAAMuC,EAAMhiJ,MAAMjX,KAAKu5J,SAASv5J,KAAKgrJ,YAAYhrJ,KAAKq5J,WAAW,CAACC,QAAQ,CAAC5C,MAAM12J,KAAK02J,SAAS12J,KAAKuhI,OAAO23B,EAAOjiJ,MAAMjX,KAAK02J,MAAM12J,KAAKwtJ,SAASxtJ,KAAKq5J,WAAW,CAACC,QAAQ,CAAC/3B,OAAOvhI,KAAKuhI,UAAUvhI,KAAKk2J,WAAWgD,EAAOxF,UAAU1zJ,KAAKuhI,OAAOvhI,KAAKwtJ,SAAgBxtJ,IAAI,GAAG,CAACoE,IAAI,SAAS1B,MAAM,WAAsR,OAApQ1C,KAAKq5J,WAAW,CAACC,QAAQ,CAACpD,WAAWl2J,KAAKk2J,cAAcl2J,KAAKs3E,QAAQ6hF,EAAQ,CAAC5L,SAASvtJ,KAAKk2J,WAAW3yB,KAAKvjI,KAAKujI,KAAKiqB,QAAQxtJ,KAAKwtJ,QAAQ7vE,OAAO39E,KAAK29E,OAAOmtE,WAAW9qJ,KAAK8qJ,WAAWgE,SAAS9uJ,KAAK8uJ,WAAW9uJ,KAAKq5J,WAAW,CAACC,QAAQ,CAAChiF,QAAQt3E,KAAKs3E,WAAkBt3E,IAAI,KAAYivJ,CAAY,CAA74D,EAAg5D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS5xE,EAAQ99E,EAAOC,GAAS,SAASk6E,EAAUx3E,GAASlC,KAAKkC,QAAQA,GAAS,CAACs3J,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAaz5J,KAAK05J,OAAM,CAAK,CAAC,SAAS/4J,EAAS64J,EAAQl3J,GAAMA,EAAKq3J,WAAWH,EAAQG,WAAWr3J,EAAKs3J,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAAS5lJ,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAE6lJ,UAAU,IAAI,UAAU7lJ,EAAE0lJ,WAAW,QAAQ1lJ,EAAE2lJ,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMnnI,EAAM3sB,GAAQ,MAAiB,iBAAP8zJ,EAAwBA,EAAM70G,OAAOtyB,EAAM3sB,GAAgB8zJ,EAAM9zJ,QAAQ2sB,EAAM3sB,GAAQ2sB,EAAc,IAAIonI,KAAKhxF,KAAK7tD,OAAO4+I,EAAMnnI,EAAM3sB,GAAQ,GAAU8zJ,CAAM,CAAiP,SAASE,EAAcC,EAAO73J,GAAU63J,EAAOC,eAAkDD,EAAOC,eAAevnE,YAAYvwF,GAApE63J,EAAO5gC,IAAI1mC,YAAYvwF,EAAmD,CAA3/Io3E,EAAUt7B,UAAUw7B,gBAAgB,SAASygF,EAAOr/B,GAAU,IAAI94H,EAAQlC,KAAKkC,QAAYo4J,EAAI,IAAIC,EAAcC,EAAWt4J,EAAQs4J,YAAY,IAAIf,EAAe7N,EAAa1pJ,EAAQ0pJ,aAAiB4N,EAAQt3J,EAAQs3J,QAAYiB,EAAav4J,EAAQw4J,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAI1O,aAA2a,SAA2BsP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI5O,EAAa,CAAC,EAAMuP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMj3J,GAAK,IAAIiM,EAAG6qJ,EAAU92J,IAASiM,GAAI8qJ,IAAY9qJ,EAAqB,GAAlB6qJ,EAAUh1J,OAAU,SAAS+Y,GAAKi8I,EAAU92J,EAAI6a,EAAI,EAAEi8I,GAAUtP,EAAaxnJ,GAAKiM,GAAI,SAAS4O,GAAK5O,EAAG,WAAWjM,EAAI,MAAM6a,EAAI46I,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqBzP,CAAY,CAAj7B0P,CAAkB1P,EAAa4O,EAAWhB,GAASc,EAAIE,WAAWt4J,EAAQs4J,YAAYA,EAAc,aAAal4I,KAAK04G,KAAW2/B,EAAUY,KAAK,IAAIZ,EAAUp8F,KAAK,IAAIk8F,EAAa,IAAI,gCAA+BA,EAAavvH,IAAIuvH,EAAavvH,KAAK,uCAA0CmvH,EAAQC,EAAIrjJ,MAAMojJ,EAAOI,EAAaE,GAAgBL,EAAI1O,aAAaz8I,MAAM,sBAA6BqrJ,EAAWjhC,GAAG,EAAuqBkgC,EAAWr7G,UAAU,CAACo9G,cAAc,WAAWx7J,KAAKu5H,KAAI,IAAKkiC,GAAmBC,eAAe,KAAK,KAAK,MAAS17J,KAAKw5J,UAASx5J,KAAKu5H,IAAIoiC,YAAY37J,KAAKw5J,QAAQM,SAAS,EAAE/qG,aAAa,SAAS86F,EAAa+R,EAAUC,EAAM98I,GAAO,IAAIw6G,EAAIv5H,KAAKu5H,IAAQltH,EAAGktH,EAAIuiC,gBAAgBjS,EAAagS,GAAOD,GAAeG,EAAIh9I,EAAM7Y,OAAOg0J,EAAcl6J,KAAKqM,GAAIrM,KAAKo6J,eAAe/tJ,EAAGrM,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQntJ,GAAI,IAAI,IAAI6G,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAAI,CAAK22I,EAAa9qI,EAAMi9I,OAAO9oJ,GAA9B,IAAqCxQ,EAAMqc,EAAMjT,SAASoH,GAAmC2K,GAA5Bg+I,EAAM98I,EAAMk9I,SAAS/oJ,GAAYqmH,EAAI2iC,kBAAkBrS,EAAagS,IAAO77J,KAAKw5J,SAAS74J,EAASoe,EAAMo9I,WAAWjpJ,GAAG2K,GAAMA,EAAKnb,MAAMmb,EAAKu+I,UAAU15J,EAAM2J,EAAGgwJ,iBAAiBx+I,EAAK,CAAC,EAAEy+I,WAAW,SAASzS,EAAa+R,EAAUC,GAAO,IAAIU,EAAQv8J,KAAKo6J,eAA2BmC,EAAQ3iC,QAAQ55H,KAAKo6J,eAAemC,EAAQtqE,UAAU,EAAEuqE,mBAAmB,SAAS3hJ,EAAO4hJ,GAAK,EAAEC,iBAAiB,SAAS7hJ,GAAQ,EAAE8hJ,sBAAsB,SAAS9xG,EAAOlhD,GAAM,IAAIizJ,EAAI58J,KAAKu5H,IAAIsjC,4BAA4BhyG,EAAOlhD,GAAM3J,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQoD,GAAK1C,EAAcl6J,KAAK48J,EAAI,EAAEE,oBAAoB,SAASC,EAAGlqI,EAAM3sB,GAAQ,EAAE82J,WAAW,SAAShD,EAAMnnI,EAAM3sB,GAA8C,GAAtC8zJ,EAAMD,EAAUnsH,MAAM5tC,KAAK4S,WAAoB,CAAC,GAAG5S,KAAK05J,MAAO,IAAIuD,EAASj9J,KAAKu5H,IAAI2jC,mBAAmBlD,QAAgBiD,EAASj9J,KAAKu5H,IAAI3mC,eAAeonE,GAAUh6J,KAAKo6J,eAAgBp6J,KAAKo6J,eAAevnE,YAAYoqE,GAAkB,QAAQ36I,KAAK03I,IAAQh6J,KAAKu5H,IAAI1mC,YAAYoqE,GAAUj9J,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAASj2J,GAAM,EAAEk2J,YAAY,WAAWp9J,KAAKu5H,IAAI8jC,WAAW,EAAEpC,mBAAmB,SAASzB,IAAYx5J,KAAKw5J,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAEzpC,QAAQ,SAAS8pC,EAAMnnI,EAAM3sB,GAAQ8zJ,EAAMD,EAAUnsH,MAAM5tC,KAAK4S,WAAW,IAAI0qJ,EAAKt9J,KAAKu5H,IAAIgkC,cAAcvD,GAAOh6J,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQ8D,GAAMpD,EAAcl6J,KAAKs9J,EAAK,EAAEE,WAAW,WAAWx9J,KAAK05J,OAAM,CAAI,EAAE+D,SAAS,WAAWz9J,KAAK05J,OAAM,CAAK,EAAEgE,SAAS,SAASx2J,EAAKy2J,EAAS7D,GAAU,IAAI8D,EAAK59J,KAAKu5H,IAAIskC,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmB52J,EAAKy2J,EAAS7D,GAAU95J,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQuE,GAAI7D,EAAcl6J,KAAK+9J,EAAG,CAAC,EAAEC,QAAQ,SAAS7uJ,GAAO7G,QAAQC,KAAK,qBAAqB4G,EAAM0qJ,EAAS75J,KAAKw5J,SAAS,EAAErqJ,MAAM,SAASA,GAAO7G,QAAQ6G,MAAM,mBAAmBA,EAAM0qJ,EAAS75J,KAAKw5J,SAAS,EAAEyE,WAAW,SAAS9uJ,GAA2E,MAApE7G,QAAQ6G,MAAM,wBAAwBA,EAAM0qJ,EAAS75J,KAAKw5J,UAAgBrqJ,CAAK,GAA8T,+JAA+J0D,QAAQ,QAAO,SAASzO,GAAKq1J,EAAWr7G,UAAUh6C,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAIm2J,EAAUl9E,EAAQ,SAASk9E,UAAckB,EAAkBj8J,EAAQi8J,kBAAkBp+E,EAAQ,SAASo+E,kBAAkBj8J,EAAQorJ,cAAcvtE,EAAQ,SAASutE,cAAcprJ,EAAQk6E,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAAS2D,EAAQ99E,EAAOC,GAAS,SAAS++D,EAAKmwB,EAAIwvE,GAAM,IAAI,IAAIl8I,KAAK0sE,EAAKwvE,EAAKl8I,GAAG0sE,EAAI1sE,EAAG,CAAC,SAASm8I,EAAS1/I,EAAM2/I,GAAO,IAAIC,EAAG5/I,EAAM2/B,UAAU,GAAG/+C,OAAOswE,OAAO,CAAC,IAAI2uF,EAAIj/J,OAAOswE,OAAOyuF,EAAMhgH,WAAWigH,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAASr+H,IAAI,CAACA,EAAEqe,UAAUggH,EAAMhgH,UAAkBmgB,EAAK8/F,EAAbt+H,EAAE,IAAIA,GAAathB,EAAM2/B,UAAUigH,EAAGt+H,CAAC,CAAIs+H,EAAG1+J,aAAa8e,IAAwB,mBAAPA,GAAmBnW,QAAQ6G,MAAM,gBAAgBsP,GAAO4/I,EAAG1+J,YAAY8e,EAAM,CAAC,IAA8C+/I,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAa9gK,EAAK8R,GAAS,GAAGA,aAAmB/R,MAAO,IAAIiQ,EAAM8B,OAAa9B,EAAMnP,KAAKd,MAAMm/C,KAAKr+C,KAAKs/J,EAAiBngK,IAAOa,KAAKiR,QAAQquJ,EAAiBngK,GAASD,MAAMghK,mBAAkBhhK,MAAMghK,kBAAkBlgK,KAAKigK,GAAgF,OAAlE9wJ,EAAMhQ,KAAKA,EAAQ8R,IAAQjR,KAAKiR,QAAQjR,KAAKiR,QAAQ,KAAKA,GAAe9B,CAAK,CAAyE,SAASgxJ,IAAW,CAA+N,SAASC,EAAa99J,EAAKmC,GAASzE,KAAKqgK,MAAM/9J,EAAKtC,KAAKsgK,SAAS77J,EAAQ87J,EAAgBvgK,KAAK,CAAC,SAASugK,EAAgBx2J,GAAM,IAAIy2J,EAAIz2J,EAAKs2J,MAAMI,MAAM12J,EAAKs2J,MAAMK,cAAcD,KAAK,GAAG12J,EAAK02J,MAAMD,EAAI,CAAC,IAAIG,EAAG52J,EAAKu2J,SAASv2J,EAAKs2J,OAAOO,GAAQ72J,EAAK,SAAS42J,EAAGz6J,QAAQq4D,EAAKoiG,EAAG52J,GAAMA,EAAK02J,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAe/2J,EAAKzH,GAAwB,IAAlB,IAAI4Q,EAAEnJ,EAAK7D,OAAagN,KAAK,GAAGnJ,EAAKmJ,KAAK5Q,EAAM,OAAO4Q,CAAG,CAAC,SAAS6tJ,EAAc10J,EAAGtC,EAAKi3J,EAAQC,GAAiG,GAArFA,EAASl3J,EAAK+2J,EAAe/2J,EAAKk3J,IAAUD,EAAaj3J,EAAKA,EAAK7D,UAAU86J,EAAW30J,EAAG,CAAC20J,EAAQE,aAAa70J,EAAG,IAAIktH,EAAIltH,EAAGq0J,cAAiBnnC,IAAK0nC,GAASE,EAAmB5nC,EAAIltH,EAAG40J,GAChi2B,SAAyB1nC,EAAIltH,EAAG20J,GAASznC,GAAKA,EAAIknC,OAA0C,iCAA5BO,EAAQnX,eAAqDx9I,EAAG+0J,OAAOJ,EAAQnmJ,OAAOmmJ,EAAQpF,UAAU,IAAIoF,EAAQt+J,MAAM,CAD+21B2+J,CAAgB9nC,EAAIltH,EAAG20J,GAAS,CAAC,CAAC,SAASM,EAAiBj1J,EAAGtC,EAAK8T,GAAM,IAAI3K,EAAE4tJ,EAAe/2J,EAAK8T,GAAM,KAAG3K,GAAG,GAAgM,MAAM+sJ,EAAaP,EAAc,IAAIxgK,MAAMmN,EAAGutH,QAAQ,IAAI/7G,IAA3N,IAA5B,IAAI0jJ,EAAUx3J,EAAK7D,OAAO,EAAQgN,EAAEquJ,GAAWx3J,EAAKmJ,GAAGnJ,IAAOmJ,GAAyB,GAAtBnJ,EAAK7D,OAAOq7J,EAAal1J,EAAG,CAAC,IAAIktH,EAAIltH,EAAGq0J,cAAiBnnC,IAAK4nC,EAAmB5nC,EAAIltH,EAAGwR,GAAMA,EAAKqjJ,aAAa,KAAK,CAAwE,CAAioC,SAASzF,EAAkB+F,GAA4B,GAAlBxhK,KAAKyhK,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAUxhK,KAAKyhK,UAAUD,EAASE,EAAU,CACnm9B,SAASC,IAAO,CAA6kD,SAASC,EAAYt+J,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAEu+J,aAAa,GAAG,CAAmD,SAASC,EAAWx/J,EAAKkP,GAAU,GAAGA,EAASlP,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAK2hH,WAAY,GAAG,GAAG69C,EAAWx/J,EAAKkP,GAAW,OAAO,QAAYlP,EAAKA,EAAKy/J,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmB5nC,EAAIltH,EAAG20J,EAAQjmJ,GAAQw+G,GAAKA,EAAIknC,OAA0C,iCAA5BO,EAAQnX,qBAA4Dx9I,EAAG+0J,OAAOJ,EAAQnmJ,OAAOmmJ,EAAQpF,UAAU,GAAI,CAAC,SAASqG,EAAe1oC,EAAIltH,EAAG61J,GAAU,GAAG3oC,GAAKA,EAAIknC,KAAK,CAAClnC,EAAIknC,OAAO,IAAI0B,EAAG91J,EAAG+1J,WAAW,GAAGF,EAAUC,EAAGA,EAAGj8J,UAAUg8J,MAAa,CAAiC,IAAhC,IAAIzsE,EAAMppF,EAAG43G,WAAe/wG,EAAE,EAAQuiF,GAAO0sE,EAAGjvJ,KAAKuiF,EAAMA,EAAMA,EAAMssE,YAAYI,EAAGj8J,OAAOgN,CAAC,CAAC,CAAC,CAAC,SAASmvJ,EAAapwE,EAAWwD,GAAO,IAAI6sE,EAAS7sE,EAAM8sE,gBAAoBn3I,EAAKqqE,EAAMssE,YAAiN,OAAlMO,EAAUA,EAASP,YAAY32I,EAAU6mE,EAAWgyB,WAAW74F,EAAQA,EAAMA,EAAKm3I,gBAAgBD,EAAcrwE,EAAWuwE,UAAUF,EAASL,EAAehwE,EAAWyuE,cAAczuE,GAAmBwD,CAAK,CAAC,SAASgtE,EAAcxwE,EAAWiwE,EAASQ,GAAW,IAAIC,EAAGT,EAASjwE,WAA2C,GAA7B0wE,GAAIA,EAAGzwE,YAAYgwE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAASj+C,WAAW,GAAa,MAAV4+C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgBtwE,EAAWuwE,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAc5wE,EAAWgyB,WAAW4+C,EAAuB,MAAXH,EAAiBzwE,EAAWuwE,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAAS5wE,WAAWA,QAAiB4wE,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAehwE,EAAWyuE,eAAezuE,EAAWA,GAAeiwE,EAASU,UAAUzD,IAAwB+C,EAASj+C,WAAWi+C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUhjK,KAAKohK,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAAS/Y,IAAgB,CAAqL,SAASgZ,EAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfhkK,KAAK4iK,SAAY5iK,KAAKikK,gBAAgBjkK,KAAS6a,EAAOmpJ,EAAQnpJ,OAAW4hJ,EAAIuH,EAAQna,aAAa,GAAG4S,GAAa,MAAR5hJ,GAA8D,OAA5CA,EAAOmpJ,EAAQE,aAAazH,IAAsB,IAAI0H,EAAkB,CAAC,CAACC,UAAU3H,EAAI5hJ,OAAO,OAAwE,OAAhEuwI,GAAkBprJ,KAAK+jK,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAI71J,KAAK,GAAG,CAAC,SAASm2J,GAAoB/hK,EAAKgiK,EAAOH,GAAmB,IAAItpJ,EAAOvY,EAAKuY,QAAQ,GAAO4hJ,EAAIn6J,EAAKunJ,aAAa,IAAIhvI,IAAS4hJ,EAAK,OAAO,EAAM,GAAY,QAAT5hJ,GAAsB,yCAAN4hJ,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAIvpJ,EAAEixJ,EAAkBj+J,OAAagN,KAAI,CAAC,IAAIqxJ,EAAGJ,EAAkBjxJ,GAAG,GAAGqxJ,EAAG1pJ,QAAQA,EAAQ,OAAO0pJ,EAAGH,WAAW3H,CAAI,CAAC,OAAO,CAAI,CAAC,SAASrR,GAAkB9oJ,EAAKyhK,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtBxhK,EAAKwhK,EAAWxhK,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAfyhK,EAAI1/J,KAAK/B,EAA0B,CAAC,OAAOA,EAAKsgK,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBj+J,OAA7C,IAAwD6Y,EAAMzc,EAAK2gB,WAAe84I,EAAIh9I,EAAM7Y,OAAWuvF,EAAMnzF,EAAK2hH,WAAeC,EAAS5hH,EAAKs3H,QAAQ0qC,EAD4xZ,iCAC5wZhiK,EAAKunJ,cAAcya,EAAOP,EAAI1/J,KAAK,IAAI6/G,GAAU,IAAI,IAAIhxG,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAA4C,UAAnC2K,EAAKkB,EAAM/Q,KAAKkF,IAAW2H,OAAiBspJ,EAAkB9/J,KAAK,CAACwW,OAAOgD,EAAK+9I,UAAUwI,UAAUvmJ,EAAKnb,QAA+B,SAAfmb,EAAKqmG,UAAmBigD,EAAkB9/J,KAAK,CAACwW,OAAO,GAAGupJ,UAAUvmJ,EAAKnb,QAAS,IAAQwQ,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAAI,CAAC,IAAI2K,EAAmB,GAAGwmJ,GAAtBxmJ,EAAKkB,EAAM/Q,KAAKkF,GAA+BoxJ,EAAOH,GAAmB,CAAC,IAAItpJ,EAAOgD,EAAKhD,QAAQ,GAAO4hJ,EAAI5+I,EAAKgsI,aAAiB0a,EAAG1pJ,EAAO,UAAUA,EAAO,SAASkpJ,EAAI1/J,KAAKkgK,EAAG,KAAK9H,EAAI,KAAK0H,EAAkB9/J,KAAK,CAACwW,OAAOA,EAAOupJ,UAAU3H,GAAK,CAACrR,GAAkBvtI,EAAKkmJ,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoB/hK,EAAKgiK,EAAOH,KAAwBtpJ,EAAOvY,EAAKuY,QAAQ,GAAO4hJ,EAAIn6J,EAAKunJ,aAAiB0a,EAAG1pJ,EAAO,UAAUA,EAAO,SAASkpJ,EAAI1/J,KAAKkgK,EAAG,KAAK9H,EAAI,KAAK0H,EAAkB9/J,KAAK,CAACwW,OAAOA,EAAOupJ,UAAU3H,KAAShnE,GAAO6uE,IAAS,mCAAmChiJ,KAAK4hG,GAAU,CAAe,GAAd6/C,EAAI1/J,KAAK,KAAQigK,GAAQ,YAAYhiJ,KAAK4hG,GAAW,KAAMzuB,GAAUA,EAAM9rF,KAAMo6J,EAAI1/J,KAAKoxF,EAAM9rF,MAAWyhJ,GAAkB31D,EAAMsuE,EAAIO,EAAOR,EAAWK,GAAmB1uE,EAAMA,EAAMssE,iBAAkB,KAAMtsE,GAAO21D,GAAkB31D,EAAMsuE,EAAIO,EAAOR,EAAWK,GAAmB1uE,EAAMA,EAAMssE,YAAagC,EAAI1/J,KAAK,KAAK6/G,EAAS,IAAI,MAAM6/C,EAAI1/J,KAAK,MAAM,OAAO,KAAK46J,EAAc,KAAKE,EAAiD,IAAtB1pE,EAAMnzF,EAAK2hH,WAAiBxuB,GAAO21D,GAAkB31D,EAAMsuE,EAAIO,EAAOR,EAAWK,GAAmB1uE,EAAMA,EAAMssE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAI1/J,KAAK,IAAI/B,EAAK4E,KAAK,KAAK5E,EAAKI,MAAMmQ,QAAQ,SAAS+uJ,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAI1/J,KAAK/B,EAAKqH,KAAKkJ,QAAQ,QAAQ+uJ,IAAc,KAAKhD,EAAmB,OAAOmF,EAAI1/J,KAAK,YAAY/B,EAAKqH,KAAK,OAAO,KAAKq1J,EAAa,OAAO+E,EAAI1/J,KAAK,UAAO/B,EAAKqH,KAAK,UAAO,KAAKu1J,EAAmB,IAAIsF,EAAMliK,EAAKq7J,SAAa8G,EAAMniK,EAAKw3J,SAA0C,GAAjCiK,EAAI1/J,KAAK,aAAa/B,EAAK4E,MAASs9J,EAAOT,EAAI1/J,KAAK,YAAYmgK,GAAUC,GAAc,KAAPA,GAAYV,EAAI1/J,KAAK,MAAMogK,GAAOV,EAAI1/J,KAAK,WAAW,GAAGogK,GAAc,KAAPA,EAAYV,EAAI1/J,KAAK,YAAYogK,EAAM,UAAU,CAAC,IAAItxJ,EAAI7Q,EAAKoiK,eAAkBvxJ,GAAK4wJ,EAAI1/J,KAAK,KAAK8O,EAAI,KAAK4wJ,EAAI1/J,KAAK,IAAI,CAAC,OAAO,KAAK06J,EAA4B,OAAOgF,EAAI1/J,KAAK,KAAK/B,EAAKuoD,OAAO,IAAIvoD,EAAKqH,KAAK,MAAM,KAAKk1J,EAAsB,OAAOkF,EAAI1/J,KAAK,IAAI/B,EAAK4hH,SAAS,KAAK,QAAQ6/C,EAAI1/J,KAAK,KAAK/B,EAAK4hH,UAAU,CAAC,SAASygD,GAAWprC,EAAIj3H,EAAK8kB,GAAM,IAAIw9I,EAAM,OAAOtiK,EAAKsgK,UAAU,KAAKnE,GAAamG,EAAMtiK,EAAKuiK,WAAU,IAAanE,cAAcnnC,EAAI,KAAK4lC,EAAuB,MAAM,KAAKT,EAAet3I,GAAK,EAAgG,GAAjFw9I,IAAOA,EAAMtiK,EAAKuiK,WAAU,IAAOD,EAAMlE,cAAcnnC,EAAIqrC,EAAM3yE,WAAW,KAAQ7qE,EAAgC,IAA1B,IAAIquE,EAAMnzF,EAAK2hH,WAAiBxuB,GAAOmvE,EAAM/xE,YAAY8xE,GAAWprC,EAAI9jC,EAAMruE,IAAOquE,EAAMA,EAAMssE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAUtrC,EAAIj3H,EAAK8kB,GAAM,IAAIw9I,EAAM,IAAItiK,EAAK3C,YAAY,IAAI,IAAIukD,KAAK5hD,EAAK,CAAC,IAAI2Q,EAAE3Q,EAAK4hD,GAAgB,iBAAHjxC,GAAgBA,GAAG2xJ,EAAM1gH,KAAI0gH,EAAM1gH,GAAGjxC,EAAG,CAA2E,OAAvE3Q,EAAK8/J,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAcnnC,EAAWqrC,EAAMhC,UAAU,KAAKnE,EAAa,IAAI1/I,EAAMzc,EAAK2gB,WAAe6hJ,EAAOF,EAAM3hJ,WAAW,IAAI49I,EAAiB9E,EAAIh9I,EAAM7Y,OAAO4+J,EAAOC,cAAcH,EAAM,IAAI,IAAI1xJ,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAAK0xJ,EAAMvI,iBAAiBwI,GAAUtrC,EAAIx6G,EAAM/Q,KAAKkF,IAAG,IAAO,MAAM,KAAKwrJ,EAAet3I,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAIquE,EAAMnzF,EAAK2hH,WAAiBxuB,GAAOmvE,EAAM/xE,YAAYgyE,GAAUtrC,EAAI9jC,EAAMruE,IAAOquE,EAAMA,EAAMssE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQ57J,EAAOZ,EAAI1B,GAAOsC,EAAOZ,GAAK1B,CAAK,CADonW28J,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAa7hH,UAAUl/C,MAAMk/C,UAAUmgB,EAAK8gG,EAAcY,GAAmCE,EAAS/hH,UAAU,CAACl4C,OAAO,EAAE8H,KAAK,SAASpC,GAAO,OAAO5L,KAAK4L,IAAQ,IAAI,EAAEyI,SAAS,SAASiwJ,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAG7wJ,EAAE,EAAEA,EAAElT,KAAKkG,OAAOgN,IAAKk4I,GAAkBprJ,KAAKkT,GAAG6wJ,EAAIO,EAAOR,GAAY,OAAOC,EAAI71J,KAAK,GAAG,GAA2SkyJ,EAAahiH,UAAUpwC,KAAK,SAASkF,GAAyB,OAAtBqtJ,EAAgBvgK,MAAaA,KAAKkT,EAAE,EAAEirJ,EAASiC,EAAaD,GAAuuBU,EAAaziH,UAAU,CAACl4C,OAAO,EAAE8H,KAAKmyJ,EAAS/hH,UAAUpwC,KAAKq3J,aAAa,SAASjhK,GAAuB,IAAlB,IAAI8O,EAAElT,KAAKkG,OAAagN,KAAI,CAAC,IAAI2K,EAAK7d,KAAKkT,GAAG,GAAG2K,EAAKqmG,UAAU9/G,EAAK,OAAOyZ,CAAK,CAAC,EAAEynJ,aAAa,SAASznJ,GAAM,IAAIxR,EAAGwR,EAAKqjJ,aAAa,GAAG70J,GAAIA,GAAIrM,KAAK+kK,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQjhK,KAAKqlK,aAAaxnJ,EAAKqmG,UAA8D,OAApD68C,EAAc/gK,KAAK+kK,cAAc/kK,KAAK6d,EAAKojJ,GAAgBA,CAAO,EAAEsE,eAAe,SAAS1nJ,GAAM,IAAyBojJ,EAArB50J,EAAGwR,EAAKqjJ,aAAqB,GAAG70J,GAAIA,GAAIrM,KAAK+kK,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQjhK,KAAKwlK,eAAe3nJ,EAAKgsI,aAAahsI,EAAK+9I,WAAWmF,EAAc/gK,KAAK+kK,cAAc/kK,KAAK6d,EAAKojJ,GAAgBA,CAAO,EAAEwE,gBAAgB,SAASrhK,GAAK,IAAIyZ,EAAK7d,KAAKqlK,aAAajhK,GAAoD,OAA/Ck9J,EAAiBthK,KAAK+kK,cAAc/kK,KAAK6d,GAAaA,CAAI,EAAE6nJ,kBAAkB,SAAS7b,EAAa+R,GAAW,IAAI/9I,EAAK7d,KAAKwlK,eAAe3b,EAAa+R,GAA0D,OAA/C0F,EAAiBthK,KAAK+kK,cAAc/kK,KAAK6d,GAAaA,CAAI,EAAE2nJ,eAAe,SAAS3b,EAAa+R,GAA6B,IAAlB,IAAI1oJ,EAAElT,KAAKkG,OAAagN,KAAI,CAAC,IAAI5Q,EAAKtC,KAAKkT,GAAG,GAAG5Q,EAAKs5J,WAAWA,GAAWt5J,EAAKunJ,cAAcA,EAAc,OAAOvnJ,CAAK,CAAC,OAAO,IAAI,GAAuIm5J,EAAkBr9G,UAAU,CAACunH,WAAW,SAASjE,EAAQp+I,GAAS,IAAIsiJ,EAAS5lK,KAAKyhK,UAAUC,EAAQrpJ,eAAe,SAAGutJ,GAAYtiJ,KAASA,KAAWsiJ,GAChv+B,EAAElK,eAAe,SAAS7R,EAAagc,EAAcC,GAAS,IAAIvsC,EAAI,IAAIyoC,EAAsH,GAA7GzoC,EAAIskC,eAAe79J,KAAKu5H,EAAI6oC,WAAW,IAAIjC,EAAS5mC,EAAIusC,QAAQA,EAAWA,GAASvsC,EAAI1mC,YAAYizE,GAAYD,EAAc,CAAC,IAAIxhE,EAAKk1B,EAAIuiC,gBAAgBjS,EAAagc,GAAetsC,EAAI1mC,YAAYwR,EAAK,CAAC,OAAOk1B,CAAG,EAAEukC,mBAAmB,SAAS+H,EAAclI,EAAS7D,GAAU,IAAIx3J,EAAK,IAAIghK,EAA+G,OAAlGhhK,EAAK4E,KAAK2+J,EAAcvjK,EAAK4hH,SAAS2hD,EAAcvjK,EAAKq7J,SAASA,EAASr7J,EAAKw3J,SAASA,EAAgBx3J,CAAI,GAAoBq/J,EAAKvjH,UAAU,CAAC6lE,WAAW,KAAKu+C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAK9+I,WAAW,KAAKgvE,WAAW,KAAKmwE,WAAW,KAAK1B,cAAc,KAAKtE,UAAU,KAAKvS,aAAa,KAAKhvI,OAAO,KAAK+gJ,UAAU,KAAKmK,aAAa,SAAS7D,EAAS8D,GAAU,OAAOvD,EAAcziK,KAAKkiK,EAAS8D,EAAS,EAAEC,aAAa,SAAS/D,EAASgE,GAAUlmK,KAAK+lK,aAAa7D,EAASgE,GAAaA,GAAUlmK,KAAKkyF,YAAYg0E,EAAU,EAAEh0E,YAAY,SAASg0E,GAAU,OAAO7D,EAAariK,KAAKkmK,EAAS,EAAErzE,YAAY,SAASqvE,GAAU,OAAOliK,KAAK+lK,aAAa7D,EAAS,KAAK,EAAEiE,cAAc,WAAW,OAAwB,MAAjBnmK,KAAKikH,UAAgB,EAAE4gD,UAAU,SAASz9I,GAAM,OAAOy9I,GAAU7kK,KAAK0gK,eAAe1gK,KAAKA,KAAKonB,EAAK,EAAEi2I,UAAU,WAAqC,IAA1B,IAAI5nE,EAAMz1F,KAAKikH,WAAiBxuB,GAAM,CAAC,IAAIrqE,EAAKqqE,EAAMssE,YAAe32I,GAAMA,EAAKw3I,UAAUjE,GAAWlpE,EAAMmtE,UAAUjE,GAAW3+J,KAAKkyF,YAAY9mE,GAAMqqE,EAAM2wE,WAAWh7I,EAAKzhB,QAAW8rF,EAAM4nE,YAAY5nE,EAAMrqE,EAAK,CAAC,EAAEi7I,YAAY,SAAS3E,EAAQp+I,GAAS,OAAOtjB,KAAK0gK,cAAc7C,eAAe8H,WAAWjE,EAAQp+I,EAAQ,EAAEgjJ,cAAc,WAAW,OAAOtmK,KAAKijB,WAAW/c,OAAO,CAAC,EAAEg+J,aAAa,SAASra,GAA0B,IAAZ,IAAIx9I,EAAGrM,KAAWqM,GAAG,CAAC,IAAI3N,EAAI2N,EAAG+0J,OAAO,GAAG1iK,EAAK,IAAI,IAAIwlD,KAAKxlD,EAAK,GAAGA,EAAIwlD,IAAI2lG,EAAc,OAAO3lG,EAAI73C,EAAGA,EAAGu2J,UAAUlE,EAAeryJ,EAAGq0J,cAAcr0J,EAAG4lF,UAAU,CAAC,OAAO,IAAI,EAAEs0E,mBAAmB,SAAS1rJ,GAAoB,IAAZ,IAAIxO,EAAGrM,KAAWqM,GAAG,CAAC,IAAI3N,EAAI2N,EAAG+0J,OAAO,GAAG1iK,GAAQmc,KAAUnc,EAAK,OAAOA,EAAImc,GAASxO,EAAGA,EAAGu2J,UAAUlE,EAAeryJ,EAAGq0J,cAAcr0J,EAAG4lF,UAAU,CAAC,OAAO,IAAI,EAAEu0E,mBAAmB,SAAS3c,GAAyD,OAAe,MAA/C7pJ,KAAKkkK,aAAara,EAAiC,GAA6HtrF,EAAKigG,EAASmD,GAAMpjG,EAAKigG,EAASmD,EAAKvjH,WAA02E4jH,EAAS5jH,UAAU,CAAC8lE,SAAS,YAAY0+C,SAAS3D,EAAc6G,QAAQ,KAAK7B,gBAAgB,KAAKxD,KAAK,EAAEsF,aAAa,SAAS7D,EAAS8D,GAAU,GAAG9D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAI1pE,EAAMysE,EAASj+C,WAAiBxuB,GAAM,CAAC,IAAIrqE,EAAKqqE,EAAMssE,YAAY/hK,KAAK+lK,aAAatwE,EAAMuwE,GAAUvwE,EAAMrqE,CAAI,CAAC,OAAO82I,CAAQ,CAA+F,OAArE,MAAtBliK,KAAKikK,iBAAuB/B,EAASU,UAAUnE,IAAcz+J,KAAKikK,gBAAgB/B,GAAgBO,EAAcziK,KAAKkiK,EAAS8D,GAAU9D,EAASxB,cAAc1gK,KAAKkiK,CAAQ,EAAEhwE,YAAY,SAASg0E,GAAuE,OAA1DlmK,KAAKikK,iBAAiBiC,IAAUlmK,KAAKikK,gBAAgB,MAAY5B,EAAariK,KAAKkmK,EAAS,EAAEvB,WAAW,SAAS8B,EAAar/I,GAAM,OAAOu9I,GAAW3kK,KAAKymK,EAAar/I,EAAK,EAAE6gH,eAAe,SAASppI,GAAI,IAAI6nK,EAAI,KAA6I,OAAxI5E,EAAW9hK,KAAKikK,iBAAgB,SAAS3hK,GAAM,GAAGA,EAAKsgK,UAAUnE,GAAiBn8J,EAAK4pF,aAAa,OAAOrtF,EAAa,OAAT6nK,EAAIpkK,GAAY,CAAM,IAAUokK,CAAG,EAAEh4H,cAAc,SAASkrF,GAAS,IAAIt3H,EAAK,IAAI0gK,EAA4K,OAApK1gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK4hH,SAAS0V,EAAQt3H,EAAKs3H,QAAQA,EAAQt3H,EAAK8/J,WAAW,IAAIjC,GAAmB79J,EAAK2gB,WAAW,IAAI49I,GAAmBkE,cAAcziK,EAAYA,CAAI,EAAEqkK,uBAAuB,WAAW,IAAIrkK,EAAK,IAAIohK,EAAsE,OAArDphK,EAAKo+J,cAAc1gK,KAAKsC,EAAK8/J,WAAW,IAAIjC,EAAgB79J,CAAI,EAAEswF,eAAe,SAASjpF,GAAM,IAAIrH,EAAK,IAAI6gK,EAAmD,OAA9C7gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK8jK,WAAWz8J,GAAarH,CAAI,EAAEi7J,cAAc,SAAS5zJ,GAAM,IAAIrH,EAAK,IAAI8gK,EAAsD,OAA9C9gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK8jK,WAAWz8J,GAAarH,CAAI,EAAE46J,mBAAmB,SAASvzJ,GAAM,IAAIrH,EAAK,IAAI+gK,EAA2D,OAA9C/gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK8jK,WAAWz8J,GAAarH,CAAI,EAAEu6J,4BAA4B,SAAShyG,EAAOlhD,GAAM,IAAIrH,EAAK,IAAIqhK,EAA4G,OAAtFrhK,EAAKo+J,cAAc1gK,KAAKsC,EAAKs3H,QAAQt3H,EAAKuoD,OAAOA,EAAOvoD,EAAK85J,UAAU95J,EAAKqH,KAAKA,EAAYrH,CAAI,EAAEskK,gBAAgB,SAAS1/J,GAAM,IAAI5E,EAAK,IAAI2gK,EAAuG,OAAlG3gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK4E,KAAKA,EAAK5E,EAAK4hH,SAASh9G,EAAK5E,EAAKs5J,UAAU10J,EAAK5E,EAAKukK,WAAU,EAAYvkK,CAAI,EAAEwkK,sBAAsB,SAAS5/J,GAAM,IAAI5E,EAAK,IAAImhK,EAA2D,OAA3CnhK,EAAKo+J,cAAc1gK,KAAKsC,EAAK4hH,SAASh9G,EAAY5E,CAAI,EAAEw5J,gBAAgB,SAASjS,EAAagc,GAAe,IAAIvjK,EAAK,IAAI0gK,EAAY+D,EAAGlB,EAAcr9I,MAAM,KAASzJ,EAAMzc,EAAK2gB,WAAW,IAAI49I,EAA2Q,OAA9Pv+J,EAAK8/J,WAAW,IAAIjC,EAAS79J,EAAKo+J,cAAc1gK,KAAKsC,EAAK4hH,SAAS2hD,EAAcvjK,EAAKs3H,QAAQisC,EAAcvjK,EAAKunJ,aAAaA,EAA2B,GAAXkd,EAAG7gK,QAAW5D,EAAKuY,OAAOksJ,EAAG,GAAGzkK,EAAKs5J,UAAUmL,EAAG,IAAQzkK,EAAKs5J,UAAUiK,EAAc9mJ,EAAMgmJ,cAAcziK,EAAYA,CAAI,EAAE45J,kBAAkB,SAASrS,EAAagc,GAAe,IAAIvjK,EAAK,IAAI2gK,EAAS8D,EAAGlB,EAAcr9I,MAAM,KAA8N,OAAzNlmB,EAAKo+J,cAAc1gK,KAAKsC,EAAK4hH,SAAS2hD,EAAcvjK,EAAK4E,KAAK2+J,EAAcvjK,EAAKunJ,aAAaA,EAAavnJ,EAAKukK,WAAU,EAAmB,GAAXE,EAAG7gK,QAAW5D,EAAKuY,OAAOksJ,EAAG,GAAGzkK,EAAKs5J,UAAUmL,EAAG,IAAQzkK,EAAKs5J,UAAUiK,EAAqBvjK,CAAI,GAAG67J,EAAS6D,EAASL,GAAwCqB,EAAQ5kH,UAAU,CAACwkH,SAASnE,EAAauI,aAAa,SAAS9/J,GAAM,OAAoC,MAA7BlH,KAAKinK,iBAAiB//J,EAAW,EAAEglF,aAAa,SAAShlF,GAAM,IAAI2W,EAAK7d,KAAKinK,iBAAiB//J,GAAM,OAAO2W,GAAMA,EAAKnb,OAAO,EAAE,EAAEukK,iBAAiB,SAAS//J,GAAM,OAAOlH,KAAKijB,WAAWoiJ,aAAan+J,EAAK,EAAEyiF,aAAa,SAASziF,EAAKxE,GAAO,IAAImb,EAAK7d,KAAK0gK,cAAckG,gBAAgB1/J,GAAM2W,EAAKnb,MAAMmb,EAAKu+I,UAAU,GAAG15J,EAAM1C,KAAKq8J,iBAAiBx+I,EAAK,EAAEwuE,gBAAgB,SAASnlF,GAAM,IAAI2W,EAAK7d,KAAKinK,iBAAiB//J,GAAM2W,GAAM7d,KAAKknK,oBAAoBrpJ,EAAK,EAAEg1E,YAAY,SAASqvE,GAAU,OAAGA,EAASU,WAAWzD,EAA+Bn/J,KAAK+lK,aAAa7D,EAAS,MAAr4H,SAA4BjwE,EAAWiwE,GAAU,IAAIS,EAAGT,EAASjwE,WAAW,GAAG0wE,EAAG,CAAC,IAAII,EAAI9wE,EAAWuwE,UAAUG,EAAGzwE,YAAYgwE,GAAca,EAAI9wE,EAAWuwE,SAAS,CAAoR,OAA/QO,EAAI9wE,EAAWuwE,UAAUN,EAASjwE,WAAWA,EAAWiwE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAcjwE,EAAWgyB,WAAWi+C,EAASjwE,EAAWuwE,UAAUN,EAASD,EAAehwE,EAAWyuE,cAAczuE,EAAWiwE,GAAiBA,CAAQ,CAA+8GiF,CAAmBnnK,KAAKkiK,EAAU,EAAE7F,iBAAiB,SAAS2E,GAAS,OAAOhhK,KAAKijB,WAAWqiJ,aAAatE,EAAQ,EAAEoG,mBAAmB,SAASpG,GAAS,OAAOhhK,KAAKijB,WAAWsiJ,eAAevE,EAAQ,EAAEkG,oBAAoB,SAASjG,GAAS,OAAOjhK,KAAKijB,WAAWwiJ,gBAAgBxE,EAAQ/8C,SAAS,EAAEmjD,kBAAkB,SAASxd,EAAa+R,GAAW,IAAIt6C,EAAIthH,KAAKsnK,mBAAmBzd,EAAa+R,GAAWt6C,GAAKthH,KAAKknK,oBAAoB5lD,EAAI,EAAEimD,eAAe,SAAS1d,EAAa+R,GAAW,OAAwD,MAAjD57J,KAAKsnK,mBAAmBzd,EAAa+R,EAAgB,EAAE4L,eAAe,SAAS3d,EAAa+R,GAAW,IAAI/9I,EAAK7d,KAAKsnK,mBAAmBzd,EAAa+R,GAAW,OAAO/9I,GAAMA,EAAKnb,OAAO,EAAE,EAAE+kK,eAAe,SAAS5d,EAAagc,EAAcnjK,GAAO,IAAImb,EAAK7d,KAAK0gK,cAAcxE,kBAAkBrS,EAAagc,GAAehoJ,EAAKnb,MAAMmb,EAAKu+I,UAAU,GAAG15J,EAAM1C,KAAKq8J,iBAAiBx+I,EAAK,EAAEypJ,mBAAmB,SAASzd,EAAa+R,GAAW,OAAO57J,KAAKijB,WAAWuiJ,eAAe3b,EAAa+R,EAAU,EAAE5hF,qBAAqB,SAAS4/C,GAAS,OAAO,IAAIwmC,EAAapgK,MAAK,SAASgmE,GAAM,IAAI26F,EAAG,GAAwI,OAArImB,EAAW97F,GAAK,SAAS1jE,GAASA,IAAO0jE,GAAM1jE,EAAKsgK,UAAUnE,GAAyB,MAAV7kC,GAAet3H,EAAKs3H,SAASA,GAAU+mC,EAAGt8J,KAAK/B,EAAM,IAAUq+J,CAAE,GAAE,EAAE+G,uBAAuB,SAAS7d,EAAa+R,GAAW,OAAO,IAAIwE,EAAapgK,MAAK,SAASgmE,GAAM,IAAI26F,EAAG,GAAuM,OAApMmB,EAAW97F,GAAK,SAAS1jE,GAASA,IAAO0jE,GAAM1jE,EAAKsgK,WAAWnE,GAA8B,MAAf5U,GAAoBvnJ,EAAKunJ,eAAeA,GAA4B,MAAZ+R,GAAiBt5J,EAAKs5J,WAAWA,GAAY+E,EAAGt8J,KAAK/B,EAAM,IAAUq+J,CAAE,GAAE,GAAGqB,EAAS5jH,UAAU47B,qBAAqBgpF,EAAQ5kH,UAAU47B,qBAAqBgoF,EAAS5jH,UAAUspH,uBAAuB1E,EAAQ5kH,UAAUspH,uBAAuBvJ,EAAS6E,EAAQrB,GAAuBsB,EAAK7kH,UAAUwkH,SAASlE,EAAeP,EAAS8E,EAAKtB,GAAgCuB,EAAc9kH,UAAU,CAACz0C,KAAK,GAAGg+J,cAAc,SAASjd,EAAOl5H,GAAO,OAAOxxB,KAAK2J,KAAKwvB,UAAUuxH,EAAOA,EAAOl5H,EAAM,EAAE40I,WAAW,SAASn4J,GAAMA,EAAKjO,KAAK2J,KAAKsE,EAAKjO,KAAKo8J,UAAUp8J,KAAK2J,KAAKsE,EAAKjO,KAAKkG,OAAO+H,EAAK/H,MAAM,EAAE0hK,WAAW,SAASld,EAAOz8I,GAAMjO,KAAK6nK,YAAYnd,EAAO,EAAEz8I,EAAK,EAAE4kF,YAAY,SAASqvE,GAAU,MAAM,IAAIhjK,MAAMogK,EAAiBC,GAAuB,EAAEuI,WAAW,SAASpd,EAAOl5H,GAAOxxB,KAAK6nK,YAAYnd,EAAOl5H,EAAM,GAAG,EAAEq2I,YAAY,SAASnd,EAAOl5H,EAAMvjB,GAAwFA,EAAxEjO,KAAK2J,KAAKwvB,UAAU,EAAEuxH,GAA6Dz8I,EAA7CjO,KAAK2J,KAAKwvB,UAAUuxH,EAAOl5H,GAA2BxxB,KAAKo8J,UAAUp8J,KAAK2J,KAAKsE,EAAKjO,KAAKkG,OAAO+H,EAAK/H,MAAM,GAAGi4J,EAAS+E,EAAcvB,GAAuBwB,EAAK/kH,UAAU,CAAC8lE,SAAS,QAAQ0+C,SAASjE,EAAUoJ,UAAU,SAASrd,GAAQ,IAAIz8I,EAAKjO,KAAK2J,KAASq+J,EAAQ/5J,EAAKkrB,UAAUuxH,GAAQz8I,EAAKA,EAAKkrB,UAAU,EAAEuxH,GAAQ1qJ,KAAK2J,KAAK3J,KAAKo8J,UAAUnuJ,EAAKjO,KAAKkG,OAAO+H,EAAK/H,OAAO,IAAI+hK,EAAQjoK,KAAK0gK,cAAc9tE,eAAeo1E,GAAoF,OAAxEhoK,KAAKiyF,YAAYjyF,KAAKiyF,WAAW8zE,aAAakC,EAAQjoK,KAAK+hK,aAAoBkG,CAAO,GAAG9J,EAASgF,EAAKD,GAAmCE,EAAQhlH,UAAU,CAAC8lE,SAAS,WAAW0+C,SAAS5D,GAAcb,EAASiF,EAAQF,GAAwCG,EAAajlH,UAAU,CAAC8lE,SAAS,iBAAiB0+C,SAAShE,GAAoBT,EAASkF,EAAaH,GAAwCI,EAAallH,UAAUwkH,SAAS1D,EAAmBf,EAASmF,EAAa3B,GAA2B4B,EAASnlH,UAAUwkH,SAASxD,EAAcjB,EAASoF,EAAS5B,GAAyB6B,EAAOplH,UAAUwkH,SAAS9D,EAAYX,EAASqF,EAAO7B,GAAkC8B,EAAgBrlH,UAAUwkH,SAAS/D,EAAsBV,EAASsF,EAAgB9B,GAAmC+B,EAAiBtlH,UAAU8lE,SAAS,qBAAqBw/C,EAAiBtlH,UAAUwkH,SAASzD,EAAuBhB,EAASuF,EAAiB/B,GAAwCgC,EAAsBvlH,UAAUwkH,SAAS7D,EAA4BZ,EAASwF,EAAsBhC,GAAgC/W,EAAcxsG,UAAUgtG,kBAAkB,SAAS9oJ,EAAKuhK,EAAOC,GAAY,OAAOF,EAAsBvlH,KAAK/7C,EAAKuhK,EAAOC,EAAW,EAAEnC,EAAKvjH,UAAU/pC,SAASuvJ,EAAqhJ,IAAI,GAAGvkK,OAAOsoJ,eAAe,CAA2f,SAASugB,GAAe5lK,GAAM,OAAOA,EAAKsgK,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArBzhK,EAAKA,EAAK2hH,WAAiB3hH,GAAyB,IAAhBA,EAAKsgK,UAA8B,IAAhBtgK,EAAKsgK,UAAcmB,EAAI1/J,KAAK6jK,GAAe5lK,IAAOA,EAAKA,EAAKy/J,YAAY,OAAOgC,EAAI71J,KAAK,IAAI,QAAQ,OAAO5L,EAAK85J,UAAU,CAAxxB/8J,OAAOsoJ,eAAeyY,EAAahiH,UAAU,SAAS,CAAC9oC,IAAI,WAAiC,OAAtBirJ,EAAgBvgK,MAAaA,KAAKmoK,QAAQ,IAAI9oK,OAAOsoJ,eAAega,EAAKvjH,UAAU,cAAc,CAAC9oC,IAAI,WAAW,OAAO4yJ,GAAeloK,KAAK,EAAE+Z,IAAI,SAASpQ,GAAM,OAAO3J,KAAK4iK,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAMn/J,KAAKikH,YAAYjkH,KAAKkyF,YAAYlyF,KAAKikH,aAAet6G,GAAMyR,OAAOzR,KAAO3J,KAAK6yF,YAAY7yF,KAAK0gK,cAAc9tE,eAAejpF,IAAO,MAAM,QAAQ3J,KAAK2J,KAAKA,EAAK3J,KAAK0C,MAAMiH,EAAK3J,KAAKo8J,UAAUzyJ,EAAK,IAAmSi3J,GAAQ,SAAS57J,EAAOZ,EAAI1B,GAAOsC,EAAO,KAAKZ,GAAK1B,CAAK,CAAC,CAAW,CAAT,MAAMzD,IAAG,CAACO,EAAQi8J,kBAAkBA,EAAkBj8J,EAAQorJ,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvtE,EAAQ99E,EAAOC,GAAS,IAAI4oK,EAAc,mJAAuJC,EAAS,IAAIhmJ,OAAO,aAAa+lJ,EAAc/N,OAAOtnJ,MAAM,GAAG,GAAG,0CAA8Cu1J,EAAe,IAAIjmJ,OAAO,IAAI+lJ,EAAc/N,OAAOgO,EAAShO,OAAO,QAAQ+N,EAAc/N,OAAOgO,EAAShO,OAAO,QAA8I,SAASE,IAAY,CAA+P,SAAStjJ,EAAMojJ,EAAOkO,EAAiB5N,EAAUH,EAAW5O,GAAgO,SAAS4c,EAAe/6J,GAAG,IAAIuG,EAAEvG,EAAEsF,MAAM,GAAG,GAAG,OAAGiB,KAAK2mJ,EAAkBA,EAAU3mJ,GAAyB,MAAdA,EAAEw0C,OAAO,GAAzT,SAA2BrpD,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAIspK,EAAW,QAA3BtpK,GAAM,QAAkC,IAAIupK,EAAW,OAAY,KAALvpK,GAAW,OAAOic,OAAOuxI,aAAa8b,EAAWC,EAAW,CAAM,OAAOttJ,OAAOuxI,aAAaxtJ,EAAM,CAAyHwpK,CAAkBjjJ,SAAS1R,EAAEmxC,OAAO,GAAGtyC,QAAQ,IAAI,SAAa+4I,EAAaz8I,MAAM,oBAAoB1B,GAAUA,EAAE,CAAC,SAASm7J,EAAWhgH,GAAK,GAAGA,EAAI/1B,EAAM,CAAC,IAAIg2I,EAAGxO,EAAOlhI,UAAUtG,EAAM+1B,GAAK/1C,QAAQ,WAAW21J,GAAgBhP,GAAS74J,EAASkyB,GAAO2nI,EAAWwC,WAAW6L,EAAG,EAAEjgH,EAAI/1B,GAAOA,EAAM+1B,CAAG,CAAC,CAAC,SAASjoD,EAASqhB,EAAE8mJ,GAAG,KAAM9mJ,GAAG+mJ,IAAUD,EAAEE,EAAY/b,KAAKoN,KAAU4O,EAAUH,EAAEl9J,MAAMm9J,EAAQE,EAAUH,EAAE,GAAG5iK,OAAOszJ,EAAQG,aAAaH,EAAQI,aAAa53I,EAAEinJ,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BxP,EAAQgB,EAAWhB,QAAY0P,EAAW,CAAC,CAACC,aAAaZ,IAAuBa,EAAS,CAAC,EAAMv2I,EAAM,IAAa,CAAC,IAAI,IAAIw2I,EAAShP,EAAOntJ,QAAQ,IAAI2lB,GAAO,GAAGw2I,EAAS,EAAE,CAAC,IAAIhP,EAAOl1G,OAAOtyB,GAAO3a,MAAM,SAAS,CAAC,IAAIqhH,EAAIihC,EAAWjhC,IAAQtrH,EAAKsrH,EAAI3mC,eAAeynE,EAAOl1G,OAAOtyB,IAAQ0mG,EAAI1mC,YAAY5kF,GAAMusJ,EAAWJ,eAAensJ,CAAI,CAAC,MAAM,CAAyC,OAArCo7J,EAASx2I,GAAO+1I,EAAWS,GAAiBhP,EAAO7xG,OAAO6gH,EAAS,IAAI,IAAI,IAAI,IAAIzgH,EAAIyxG,EAAOntJ,QAAQ,IAAIm8J,EAAS,GAAOzvC,EAAQygC,EAAOlhI,UAAUkwI,EAAS,EAAEzgH,GAAS5mD,EAAOknK,EAAW92H,MAASwW,EAAI,GAAGgxE,EAAQygC,EAAOlhI,UAAUkwI,EAAS,GAAGx2J,QAAQ,UAAU,IAAI+4I,EAAaz8I,MAAM,iBAAiByqH,EAAQ,oBAAoB53H,EAAO43H,SAAShxE,EAAIygH,EAAS,EAAEzvC,EAAQ1zH,QAAe0zH,EAAQ1hH,MAAM,SAAQ0hH,EAAQA,EAAQ/mH,QAAQ,UAAU,IAAI+4I,EAAaz8I,MAAM,iBAAiByqH,EAAQ,uBAAuBhxE,EAAIygH,EAAS,EAAEzvC,EAAQ1zH,QAAO,IAAIojK,EAAWtnK,EAAOsnK,WAAeC,EAASvnK,EAAO43H,SAASA,EAA4G,GAA9E2vC,GAAUvnK,EAAO43H,SAAS53H,EAAO43H,QAAQvhH,eAAeuhH,EAAQvhH,cAAmC,CAA4D,GAA3DmiJ,EAAW8B,WAAWt6J,EAAOy6J,IAAIz6J,EAAO45J,UAAUhiC,GAAY0vC,EAAY,IAAI,IAAIzuJ,KAAUyuJ,EAAY9O,EAAWkC,iBAAiB7hJ,GAAa0uJ,GAAU3d,EAAaqS,WAAW,iBAAiBrkC,EAAQ,2CAA2C53H,EAAO43H,QAAS,MAAMsvC,EAAW7kK,KAAKrC,GAAQ4mD,IAAM,MAAM,IAAI,IAAI4wG,GAAS74J,EAAS0oK,GAAUzgH,EAAI4gH,EAAiBnP,EAAOgP,EAAS7O,GAAY,MAAM,IAAI,IAAIhB,GAAS74J,EAAS0oK,GAAUzgH,EAAI6gH,EAASpP,EAAOgP,EAAS7O,EAAW5O,GAAc,MAAM,QAAQ4N,GAAS74J,EAAS0oK,GAAU,IAAIh9J,EAAG,IAAIq9J,EAAsBP,EAAaD,EAAWA,EAAWhjK,OAAO,GAAGijK,aAA4GpN,GAA3FnzG,EAAI+gH,EAAsBtP,EAAOgP,EAASh9J,EAAG88J,EAAaX,EAAe5c,GAAsBv/I,EAAGnG,QAAwJ,IAA7ImG,EAAGu9J,QAAQC,EAAcxP,EAAOzxG,EAAIv8C,EAAGutH,QAAQwvC,KAAW/8J,EAAGu9J,QAAO,EAASjP,EAAUY,MAAM3P,EAAaoS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAI+N,EAASC,EAAYvQ,EAAQ,CAAC,GAAWtmJ,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAGvS,EAAS8M,EAAEi9I,QAAQj9I,EAAE+rJ,QAAQuQ,EAAYvQ,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQsQ,EAAY5P,EAAc7tJ,EAAGmuJ,EAAW2O,IAAeD,EAAW7kK,KAAKgI,GAAImuJ,EAAWhB,QAAQA,CAAO,MAASU,EAAc7tJ,EAAGmuJ,EAAW2O,IAAeD,EAAW7kK,KAAKgI,GAAiB,iCAATA,EAAGowJ,KAAuCpwJ,EAAGu9J,OAA0FhhH,IAAlFA,EAAIohH,EAAwB3P,EAAOzxG,EAAIv8C,EAAGutH,QAAQ4uC,EAAehO,GAAsF,CAA7D,MAAMv7J,GAAG2sJ,EAAaz8I,MAAM,wBAAwBlQ,GAAG2pD,GAAK,CAAC,CAAIA,EAAI/1B,EAAOA,EAAM+1B,EAASggH,EAAWtiK,KAAK27C,IAAIonH,EAASx2I,GAAO,EAAG,CAAC,CAAC,SAASk3I,EAAYhjK,EAAEg5B,GAA2D,OAAxDA,EAAE45H,WAAW5yJ,EAAE4yJ,WAAW55H,EAAE65H,aAAa7yJ,EAAE6yJ,aAAoB75H,CAAC,CAAC,SAAS4pI,EAAsBtP,EAAOxnI,EAAMxmB,EAAG88J,EAAaX,EAAe5c,GAA+D,IAAjD,IAAIqe,EAAuBjoJ,IAAI6Q,EAAUpmB,EAAviI,IAA0jI,CAAC,IAAInJ,EAAE+2J,EAAO7xG,OAAOxmC,GAAG,OAAO1e,GAAG,IAAI,IAAI,GAAvlI,IAA0lImJ,EAAYw9J,EAAS5P,EAAOtnJ,MAAM8f,EAAM7Q,GAAGvV,EAAvmI,MAAmnI,IAA9nI,IAAioIA,EAA8B,MAAM,IAAIvN,MAAM,uCAA5BuN,EAAxoI,CAA0sI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAjuI,IAAouIA,GAAlwI,IAA4wIA,EAAW,CAA0I,GAAj6I,IAA2xIA,IAAYm/I,EAAaoS,QAAQ,kCAAkCiM,EAAS5P,EAAOtnJ,MAAM8f,EAAM7Q,IAAG6Q,EAAM7Q,EAAE,KAAEA,EAAEq4I,EAAOntJ,QAAQ5J,EAAEuvB,IAAY,GAAmH,MAAM,IAAI3zB,MAAM,2BAA2BoE,EAAE,WAA7JZ,EAAM23J,EAAOtnJ,MAAM8f,EAAM7Q,GAAGnP,QAAQ,WAAW21J,GAAgBn8J,EAAG+U,IAAI6oJ,EAASvnK,EAAMmwB,EAAM,GAAGpmB,EAA97I,CAAwgJ,KAAM,IAA/hJ,GAAkiJA,EAA4N,MAAM,IAAIvN,MAAM,kCAApNwD,EAAM23J,EAAOtnJ,MAAM8f,EAAM7Q,GAAGnP,QAAQ,WAAW21J,GAAgBn8J,EAAG+U,IAAI6oJ,EAASvnK,EAAMmwB,GAAO+4H,EAAaoS,QAAQ,cAAciM,EAAS,uBAAuB3mK,EAAE,OAAOuvB,EAAM7Q,EAAE,EAAEvV,EAA3tJ,CAA8xJ,CAAC,MAAM,IAAI,IAAI,OAAOA,GAAG,KAA74J,EAAw5JJ,EAAG69J,WAAW7P,EAAOtnJ,MAAM8f,EAAM7Q,IAAI,KAAv2J,EAAu3J,KAAr2J,EAAs3J,KAAp2J,EAAq3JvV,EAAr3J,EAAm4JJ,EAAGu9J,QAAO,EAAK,KAAv8J,EAAg+J,KAAxhK,EAAoiK,KAAjhK,EAAmiK,MAAM,QAAQ,MAAM,IAAI1qK,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhG0sJ,EAAaz8I,MAAM,2BAAtqK,GAAosK1C,GAAUJ,EAAG69J,WAAW7P,EAAOtnJ,MAAM8f,EAAM7Q,IAAWA,EAAE,IAAI,IAAI,OAAOvV,GAAG,KAA9wK,EAAyxKJ,EAAG69J,WAAW7P,EAAOtnJ,MAAM8f,EAAM7Q,IAAI,KAAxuK,EAAwvK,KAAtuK,EAAuvK,KAAruK,EAAsvK,MAAM,KAAjzK,EAA00K,KAAl4K,EAA+7K,OAAjDtf,EAAM23J,EAAOtnJ,MAAM8f,EAAM7Q,IAAYjP,OAAO,KAAU1G,EAAGu9J,QAAO,EAAKlnK,EAAMA,EAAMqQ,MAAM,GAAG,IAAG,KAAx9K,MAA6+KtG,IAAkB/J,EAAMunK,GAAh+K,GAA4+Kx9J,GAAwBm/I,EAAaoS,QAAQ,cAAct7J,EAAM,sBAAsB2J,EAAG+U,IAAI6oJ,EAASvnK,EAAMmQ,QAAQ,WAAW21J,GAAgB31I,KAAkC,iCAAnBs2I,EAAa,KAAuCzmK,EAAMwV,MAAM,qCAAqC0zI,EAAaoS,QAAQ,cAAct7J,EAAM,qBAAqBA,EAAM,eAAe2J,EAAG+U,IAAI1e,EAAMA,EAAMmwB,IAAO,MAAM,KAA73L,EAAu4L,MAAM,IAAI3zB,MAAM,4BAA4B,OAAO8iB,EAAE,IAAI,IAAI1e,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOmJ,GAAG,KAAlhM,EAA6hMJ,EAAG69J,WAAW7P,EAAOtnJ,MAAM8f,EAAM7Q,IAAIvV,EAA19L,EAAw+L,MAAM,KAAzkM,EAAqlMw9J,EAAS5P,EAAOtnJ,MAAM8f,EAAM7Q,GAAGvV,EAAjmM,EAAgnM,MAAM,KAAjlM,EAA0mM,IAAI/J,EAAM23J,EAAOtnJ,MAAM8f,EAAM7Q,GAAGnP,QAAQ,WAAW21J,GAAgB5c,EAAaoS,QAAQ,cAAct7J,EAAM,sBAAsB2J,EAAG+U,IAAI6oJ,EAASvnK,EAAMmwB,GAAO,KAAxvM,EAAwwMpmB,EAAtvM,OAAgxM,OAAOA,GAAG,KAAl2M,EAAg4MJ,EAAGutH,QAA8B,iCAAnBuvC,EAAa,KAAuCc,EAAS/xJ,MAAM,qCAAqC0zI,EAAaoS,QAAQ,cAAciM,EAAS,qBAAqBA,EAAS,gBAAgB59J,EAAG+U,IAAI6oJ,EAASA,EAASp3I,GAAOA,EAAM7Q,EAAEvV,EAA3oN,EAAopN,MAAM,KAAjlN,EAAimNm/I,EAAaoS,QAAQ,+BAA+BiM,EAAS,OAAO,KAAnpN,EAAoqNx9J,EAA/vN,EAAwwNomB,EAAM7Q,EAAE,MAAM,KAAxvN,EAAkwNvV,EAAxuN,EAA8vNomB,EAAM7Q,EAAE,MAAM,KAAvtN,EAAwuN,MAAM,IAAI9iB,MAAM,+DAAgE8iB,GAAG,CAAC,CAAC,SAASk4I,EAAc7tJ,EAAGmuJ,EAAW2O,GAAyE,IAA3D,IAAIvvC,EAAQvtH,EAAGutH,QAAY0vC,EAAW,KAASp2J,EAAE7G,EAAGnG,OAAagN,KAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAO2oJ,EAAMpuJ,EAAEouJ,MAAUn5J,EAAM+K,EAAE/K,MAAiC,IAAvBynK,EAAItO,EAAM3uJ,QAAQ,MAAY,EAAG,IAAI2N,EAAOpN,EAAEoN,OAAOghJ,EAAM9oJ,MAAM,EAAEo3J,GAASvO,EAAUC,EAAM9oJ,MAAMo3J,EAAI,GAAOC,EAAkB,UAATvvJ,GAAkB+gJ,OAAeA,EAAUC,EAAMhhJ,EAAO,KAAKuvJ,EAAiB,UAARvO,GAAiB,GAAGpuJ,EAAEmuJ,UAAUA,GAAwB,IAAXwO,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAU1nK,EAAM+K,EAAEgvJ,IAAI,gCAAgCjC,EAAWgC,mBAAmB4N,EAAS1nK,GAAO,CAAiB,IAAZwQ,EAAE7G,EAAGnG,OAAagN,MAAiB2H,GAAZpN,EAAEpB,EAAG6G,IAAgB2H,UAA8B,QAATA,IAAgBpN,EAAEgvJ,IAAI,wCAAmD,UAAT5hJ,IAAkBpN,EAAEgvJ,IAAI0M,EAAatuJ,GAAQ,MAAM,IAAIsvJ,KAAIvwC,EAAQ1sH,QAAQ,MAAY,GAAG2N,EAAOxO,EAAGwO,OAAO++G,EAAQ7mH,MAAM,EAAEo3J,GAAKvO,EAAUvvJ,EAAGuvJ,UAAUhiC,EAAQ7mH,MAAMo3J,EAAI,KAAQtvJ,EAAO,KAAK+gJ,EAAUvvJ,EAAGuvJ,UAAUhiC,GAAQ,IAAI2qC,EAAGl4J,EAAGowJ,IAAI0M,EAAatuJ,GAAQ,IAAqD,GAAjD2/I,EAAWzrG,aAAaw1G,EAAG3I,EAAUhiC,EAAQvtH,IAAOA,EAAGu9J,OAA8L,OAAtDv9J,EAAG88J,aAAaA,EAAa98J,EAAGi9J,WAAWA,GAAkB,EAAjJ,GAA5C9O,EAAW8B,WAAWiI,EAAG3I,EAAUhiC,GAAY0vC,EAAY,IAAIzuJ,KAAUyuJ,EAAY9O,EAAWkC,iBAAiB7hJ,EAAiF,CAAC,SAASmvJ,EAAwB3P,EAAOiQ,EAAW1wC,EAAQ4uC,EAAehO,GAAY,GAAG,yBAAyBl4I,KAAKs3G,GAAS,CAAC,IAAI2wC,EAAWlQ,EAAOntJ,QAAQ,KAAK0sH,EAAQ,IAAI0wC,GAAgBr8J,EAAKosJ,EAAOlhI,UAAUmxI,EAAW,EAAEC,GAAY,GAAG,OAAOjoJ,KAAKrU,GAAO,MAAG,YAAYqU,KAAKs3G,IAAU4gC,EAAWwC,WAAW/uJ,EAAK,EAAEA,EAAK/H,QAAeqkK,IAAWt8J,EAAKA,EAAK4E,QAAQ,WAAW21J,GAAgBhO,EAAWwC,WAAW/uJ,EAAK,EAAEA,EAAK/H,QAAeqkK,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAcxP,EAAOiQ,EAAW1wC,EAAQwvC,GAAU,IAAI94I,EAAI84I,EAASxvC,GAA8I,OAA7H,MAALtpG,KAAWA,EAAI+pI,EAAOmQ,YAAY,KAAK5wC,EAAQ,MAAY0wC,IAAYh6I,EAAI+pI,EAAOmQ,YAAY,KAAK5wC,IAASwvC,EAASxvC,GAAStpG,GAAWA,EAAIg6I,CAAU,CAAC,SAASD,EAAMhQ,EAAOxvG,GAAQ,IAAI,IAAI3G,KAAKm2G,EAAQxvG,EAAO3G,GAAGm2G,EAAOn2G,EAAG,CAAC,SAASulH,EAASpP,EAAOxnI,EAAM2nI,EAAW5O,GAA8C,GAAiB,MAAxCyO,EAAO7xG,OAAO31B,EAAM,GAAwB,MAA4B,MAAzBwnI,EAAO7xG,OAAO31B,EAAM,IAAc+1B,EAAIyxG,EAAOntJ,QAAQ,SAAM2lB,EAAM,IAAUA,GAAO2nI,EAAWtqC,QAAQmqC,EAAOxnI,EAAM,EAAE+1B,EAAI/1B,EAAM,GAAU+1B,EAAI,IAAOgjG,EAAaz8I,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1BkrJ,EAAOl1G,OAAOtyB,EAAM,EAAE,GAAa,CAAC,IAAI+1B,EAAIyxG,EAAOntJ,QAAQ,MAAM2lB,EAAM,GAAmG,OAAhG2nI,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAOxnI,EAAM,EAAE+1B,EAAI/1B,EAAM,GAAG2nI,EAAWiD,WAAkB70G,EAAI,CAAC,CAAC,IAAI6hH,EAAqiD,SAAepQ,EAAOxnI,GAAO,IAAI3a,EAAU6rJ,EAAI,GAAO2G,EAAI,6CAAkF,IAArCA,EAAInJ,UAAU1uI,EAAM63I,EAAIzd,KAAKoN,GAAcniJ,EAAMwyJ,EAAIzd,KAAKoN,IAAyB,GAAhB0J,EAAI1/J,KAAK6T,GAAUA,EAAM,GAAG,OAAO6rJ,CAAI,CAA/uDv7I,CAAM6xI,EAAOxnI,GAAWkpI,EAAI0O,EAAOvkK,OAAO,GAAG61J,EAAI,GAAG,YAAYz5I,KAAKmoJ,EAAO,GAAG,IAAI,CAAC,IAAIvjK,EAAKujK,EAAO,GAAG,GAAOjG,EAAMzI,EAAI,GAAG,YAAYz5I,KAAKmoJ,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOhG,EAAM1I,EAAI,GAAG0O,EAAO,GAAG,GAAOE,EAAUF,EAAO1O,EAAI,GAA2I,OAAxIvB,EAAWkD,SAASx2J,EAAKs9J,GAAOA,EAAM3xJ,QAAQ,kBAAkB,MAAM4xJ,GAAOA,EAAM5xJ,QAAQ,kBAAkB,OAAO2nJ,EAAWoQ,SAAgBD,EAAU/+J,MAAM++J,EAAU,GAAGzkK,MAAM,CAAE,OAAO,CAAC,CAAC,SAASsjK,EAAiBnP,EAAOxnI,EAAM2nI,GAAY,IAAI5xG,EAAIyxG,EAAOntJ,QAAQ,KAAK2lB,GAAO,GAAG+1B,EAAI,CAAC,IAAI1wC,EAAMmiJ,EAAOlhI,UAAUtG,EAAM+1B,GAAK1wC,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAGhS,OAAOs0J,EAAWmC,sBAAsBzkJ,EAAM,GAAGA,EAAM,IAAW0wC,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAAS8gH,EAAkBrP,GAAQ,CAAkjB,SAASwQ,EAAYC,EAAKp2J,GAA8B,OAAtBo2J,EAAKvM,UAAU7pJ,EAAco2J,CAAI,CAAnqVvQ,EAAUn8G,UAAU,CAACnnC,MAAM,SAASojJ,EAAOI,EAAaE,GAAW,IAAIH,EAAWx6J,KAAKw6J,WAAWA,EAAWgB,gBAAgB6O,EAAM5P,EAAaA,EAAa,CAAC,GAAGxjJ,EAAMojJ,EAAOI,EAAaE,EAAUH,EAAWx6J,KAAK4rJ,cAAc4O,EAAW4C,aAAa,GAAozTsM,EAAkBtrH,UAAU,CAAC8rH,WAAW,SAAStwC,GAAS,IAAI0uC,EAAehmJ,KAAKs3G,GAAU,MAAM,IAAI16H,MAAM,mBAAmB06H,GAAS55H,KAAK45H,QAAQA,CAAO,EAAEx4G,IAAI,SAASy6I,EAAMn5J,EAAMgoJ,GAAQ,IAAI4d,EAAehmJ,KAAKu5I,GAAQ,MAAM,IAAI38J,MAAM,qBAAqB28J,GAAO77J,KAAKA,KAAKkG,UAAU,CAAC21J,MAAMA,EAAMn5J,MAAMA,EAAMgoJ,OAAOA,EAAO,EAAExkJ,OAAO,EAAE6kK,aAAa,SAAS73J,GAAG,OAAOlT,KAAKkT,GAAG0oJ,SAAS,EAAEO,WAAW,SAASjpJ,GAAG,OAAOlT,KAAKkT,GAAGsmJ,OAAO,EAAEyC,SAAS,SAAS/oJ,GAAG,OAAOlT,KAAKkT,GAAG2oJ,KAAK,EAAEG,OAAO,SAAS9oJ,GAAG,OAAOlT,KAAKkT,GAAGupJ,GAAG,EAAE3wJ,SAAS,SAASoH,GAAG,OAAOlT,KAAKkT,GAAGxQ,KAAK,GAA4EmoK,EAAY,CAAC,EAAEA,EAAYzsH,qBAAqBysH,IAAcA,EAAY,SAASC,EAAKp2J,GAAQ,SAASsN,IAAI,CAA4B,IAAItN,KAA/BsN,EAAEo8B,UAAU1pC,EAAOsN,EAAE,IAAIA,EAAgB8oJ,EAAM9oJ,EAAEtN,GAAQo2J,EAAKp2J,GAAQ,OAAOsN,CAAC,GAAoNxiB,EAAQ+6J,UAAUA,CAAS,EAAE,CAAC,GAAG,mBAAmB,CAAC,SAASl9E,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIj3D,EAAUtT,EAAQ,eAAmB4pE,EAAS5pE,EAAQ,iBAAiB4pE,SAAavtE,EAAU2D,EAAQ,UAAU3D,UAA0D,IAAI2uE,EAAWhrE,EAAQ,gBAAoBo4E,EAAW,iDAAiD,SAASuV,EAAatW,GAAyB,OAAVA,EAAK3J,IAAgB,CAAC,SAASkgB,EAAaC,GAAO,IAAIngB,EAAKmgB,EAAMngB,KAAK7yC,EAAKgzD,EAAMhzD,KAAK7L,EAAM6+D,EAAM7+D,MAAsC8+D,EAArBD,EAAMhV,WAAoCnjJ,MAAMmlG,EAAK,EAAE7L,GAAOi9C,QAAO,SAASxhI,EAAO9Z,GAAM,OAAO8Z,EAAO9Z,EAAKtL,KAAK,GAAE,IAAQo3E,GAAO,IAAKJ,GAAWE,gBAAgB,QAAQuxF,EAAU,UAAczgB,EAAO5wE,EAAOE,qBAAqB,SAAaoxF,EAAItxF,EAAOE,qBAAqB,SAA4M,OAAnM+wE,EAAKqgB,IAAI,CAACC,GAAG3lJ,SAAS0lJ,EAAI,GAAGl/E,aAAa,MAAM,IAAIo/E,GAAG5lJ,SAAS0lJ,EAAI,GAAGl/E,aAAa,MAAM,KAAK6+D,EAAKL,OAAO,CAAC39I,EAAE2Y,SAASglI,EAAO,GAAGx+D,aAAa,KAAK,IAAIzwB,EAAE/1C,SAASglI,EAAO,GAAGx+D,aAAa,KAAK,KAAY6+D,CAAI,CAAC,IAAIl0B,EAAY,WAAW,SAASA,EAAY30H,GAA4K,GAAtwC,SAAyBwpD,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAo9BC,CAAgBxoJ,KAAK62H,GAAa72H,KAAKkH,KAAK,cAAclH,KAAKkC,QAAQA,GAAS,CAAC,EAAElC,KAAKurK,YAAY,CAAC,EAA4B,MAAvBvrK,KAAKkC,QAAQu3H,WAAgBz5H,KAAKkC,QAAQu3H,UAAS,GAAgC,MAAvBz5H,KAAKkC,QAAQw3H,SAAgB,MAAM,IAAIx6H,MAAM,4BAA4B,GAAyB,MAAtBc,KAAKkC,QAAQ23H,QAAe,MAAM,IAAI36H,MAAM,2BAA2Bc,KAAKwrK,YAAY,CAAC,CAC3u4B,OAD4u4BnkB,EAAaxwB,EAAY,CAAC,CAACzyH,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQklJ,GACtw+B,IAAIqkB,EAAUrkB,EAAc9tB,IAAIh/C,KAAK,eAAexyD,OAAOs/H,EAAc9tB,IAAIh/C,KAAK,0BAA0B57E,KAAI,SAAS47E,GAAM,OAAOA,EAAKpzE,IAAI,IAAgL,OAA7KlH,KAAKytJ,eAAerG,EAAcqG,eAAeztJ,KAAK4gD,SAASwmG,EAAcxmG,SAAS5gD,KAAKs5H,IAAI8tB,EAAc9tB,IAAIp3H,EAAQyrJ,aAAazrJ,EAAQyrJ,aAAa7lI,OAAO2jJ,GAAkBvpK,CAAO,GAAG,CAACkC,IAAI,MAAM1B,MAAM,SAAaR,GAAYA,EAAQo3H,MAAKt5H,KAAKs5H,IAAIp3H,EAAQo3H,KAAOp3H,EAAQomJ,eAActoJ,KAAKsoJ,aAAapmJ,EAAQomJ,aAAa,GAAG,CAAClkJ,IAAI,QAAQ1B,MAAM,SAAegzJ,GAAoB,IAAIn2J,EAAOk2J,EAAe9zJ,EAAK,cAAc,MAAuC,OAApC+zJ,EAAmBv8H,UAAU,EAAE,GAAiB,CAACx3B,KAAKA,EAAKe,MAAMgzJ,EAAmBvwG,OAAO,GAAG5lD,OAAOA,EAAOk6H,UAAS,GAA6C,MAApCi8B,EAAmBv8H,UAAU,EAAE,GAAgB,CAACx3B,KAAKA,EAAKe,MAAMgzJ,EAAmBvwG,OAAO,GAAG5lD,OAAOA,EAAOk6H,UAAS,GAAc,IAAI,GAAG,CAACr1H,IAAI,YAAY1B,MAAM,SAAmB6+H,GAAQ,IAAIyzB,OAAS,EAAWiB,OAAS,EAA8I,MAApH,SAAhBj2J,KAAK4gD,UAAmBo0G,EAAS,OAAOiB,EAASgV,IAAkBjW,EAASh1J,KAAKkC,QAAQu3H,SAAS,MAAM,MAAMw8B,EAAS+U,GAAoB/jB,EAASkG,OAAOmJ,YAAY/0B,EAAO,CAACk0B,WAAWA,EAAWQ,SAASA,EAASjB,SAASA,GAAU,GAAG,CAAC5wJ,IAAI,SAAS1B,MAAM,SAAgBqoJ,EAAK7oJ,GAASlC,KAAKurK,YAAYrpK,EAAQ4sJ,UAAU9uJ,KAAKurK,YAAYrpK,EAAQ4sJ,WAAW,IAAIzG,EAAWroJ,KAAKs5H,IAAIp3H,EAAQ4sJ,SAAS9uJ,KAAKsoJ,aAAatoJ,KAAK4gD,UAAU,IAAI8qH,EAAW1rK,KAAKurK,YAAYrpK,EAAQ4sJ,UAAU,GAAgB,iBAAZ/D,EAAKppJ,MAAsBopJ,EAAKxrJ,SAASk2J,EAAY,OAAO,KAAK,IAAI,IAAI97B,EAASz3H,EAAQ4zJ,aAAahqJ,SAASi/I,EAAKroJ,OAAO,IAAIi3H,EAAU,MAAM,IAAIz6H,MAAM,qBAAqB,IAAI46H,EAAU95H,KAAKkC,QAAQw3H,SAASC,EAASoxB,EAAKroJ,OAAW6nJ,EAAImhB,EAAWzhB,aAAajqJ,KAAK2rK,mBAAmB7xC,GAAe8xC,EAAU5rK,KAAKkC,QAAQ23H,QAAQC,EAAUH,EAASoxB,EAAKroJ,OAAO,OAAO1C,KAAK6rK,gBAAgB9gB,EAAKR,EAAIqhB,EAAgE,CAArD,MAAM3sK,GAAG,MAAM,CAACyD,MAAM1C,KAAKytJ,eAAewC,WAAW,CAAC,GAAG,CAAC7rJ,IAAI,kBAAkB1B,MAAM,SAAyBqoJ,EAAKR,EAAIqhB,GAAW,IADum4B5qJ,EAC9l4BupI,IADun4BvpI,EACjn4B,MAAM,IAAI9hB,MAAM,wBADyj4B,IAAe8hB,EAC5i4BqqE,EAAK,CAAC47D,EAASC,oBAAoB0kB,EAAU,IAAI3kB,EAASC,oBAAoB0kB,EAAU,KAASnyC,EAASz5H,KAAKkC,QAAQu3H,UAAUsxB,EAAKtxB,SAAyK,MAAM,CAAC/2H,MAAjI,SAAhB1C,KAAK4gD,SAA2B5gD,KAAK8rK,oBAAoB/gB,EAAKR,EAAIl/D,EAAKouC,GAAuBz5H,KAAK+rK,oBAAoBxhB,EAAIl/D,EAAKouC,GAA+B,GAAG,CAACr1H,IAAI,sBAAsB1B,MAAM,SAA6BqoJ,EAAKR,EAAIl/D,EAAKouC,GAAU,IAAIixB,EAAO,CAAC39I,EAAEg+I,EAAKL,OAAO39I,EAAE0uD,EAAEsvF,EAAKL,OAAOjvF,GAAOuwG,EAAOjhB,EAAKqgB,IAAIC,GAAOY,EAAOlhB,EAAKqgB,IAAIE,GAAOY,EAAK7gF,EAAK,GAAO8gF,EAAK9gF,EAAK,GAAoE,OAA9DouC,IAAUixB,EAAO39I,GAAGi/J,EAAO,EAAEE,EAAK,EAAExhB,EAAOjvF,GAAGwwG,EAAO,EAAEE,EAAK,GAASx7E,EAAU85D,gBAAgBF,EAAI,CAAC2hB,EAAKC,GAAMzhB,EAAO,GAAG,CAACtmJ,IAAI,sBAAsB1B,MAAM,SAA6B6nJ,EAAIl/D,EAAKouC,GAAU,OAAOA,EAAS9oC,EAAU65D,oBAAoBD,EAAIl/D,GAAMsF,EAAU25D,YAAYC,EAAIl/D,EAAK,GAAG,CAACjnF,IAAI,mBAAmB1B,MAAM,WAA4B,IAAIwE,EAAK,mBAAmBlH,KAAKwrK,YAAY,OAA0B,OAAnBxrK,KAAKwrK,cAAqBtkK,CAAI,KAAY2vH,CAAW,CADq23B,GACj23Bt3H,EAAOC,QAAQq3H,CAAW,EAAE,CAAC,eAAe,EAAE,cAAc,EAAEuwB,cAAc,EAAEiG,OAAO,MAAM,CAAC,EAAE,GAH/rF,CAGmsF,+BCH5+F9tJ,EAAOC,QAAoS,SAASP,EAAE8gC,EAAEmkB,EAAE30C,GAAG,SAAS9C,EAAEzN,EAAEigF,GAAG,IAAI/6B,EAAEllD,GAAG,CAAC,IAAI+gC,EAAE/gC,GAAG,CAAmE,GAAGkU,EAAE,OAAOA,EAAElU,GAAE,GAAI,IAAI+H,EAAE,IAAI7H,MAAM,uBAAuBF,EAAE,KAAK,MAAM+H,EAAE5H,KAAK,mBAAmB4H,CAAC,CAAC,IAAIkN,EAAEiwC,EAAEllD,GAAG,CAACQ,QAAQ,CAAC,GAAGugC,EAAE/gC,GAAG,GAAGq/C,KAAKpqC,EAAEzU,SAAQ,SAASP,GAAoB,OAAOwN,EAAlBszB,EAAE/gC,GAAG,GAAGC,IAAgBA,EAAE,GAAEgV,EAAEA,EAAEzU,QAAQP,EAAE8gC,EAAEmkB,EAAE30C,EAAE,CAAC,OAAO20C,EAAEllD,GAAGQ,OAAO,CAA2C,IAA1C,IAAI0T,OAAE,EAA4ClU,EAAE,EAAEA,EAAEuQ,EAAErJ,OAAOlH,IAAIyN,EAAE8C,EAAEvQ,IAAI,OAAOyN,CAAC,CAAvb,CAAyb,CAAC,EAAE,CAAC,SAAS4wE,EAAQ99E,EAAOC,GAAS,aAAgM,IAAImrJ,EAAQttE,EAAQ,aAAiB3D,EAAU2D,EAAQ,UAAU3D,UAAckxE,EAAcvtE,EAAQ,UAAUutE,cAAkBC,EAAOxtE,EAAQ,YAAgB4pE,EAAS,CAAC,EAA0HA,EAAS9iJ,SAAS,CAAC2mJ,WAAW,SAAoBC,GAAM,OAAIA,EAAKxrJ,QAA6BwrJ,EAAKxrJ,OAAyB,IAA7C,WAAwD,EAAEo+E,OAAOgtE,GAAxQ,SAAgBxwB,GAAK,OAAnVz3H,EAAmX,SAAa03H,GAAO,MAAS,MAAND,EAAkBC,EAAaA,EAAMD,EAAI,GAAvb/1H,EAAiX,SAArXoT,EAAkX,CAAC,GAArVnY,OAAOsoJ,eAAenwI,EAAIpT,EAAI,CAAC1B,MAAMA,EAAM8kJ,YAAW,EAAKC,cAAa,EAAKC,UAAS,IAAYlwI,EAAIpT,GAAK1B,EAAa8U,EAA/K,IAAyBA,EAAIpT,EAAI1B,CAAqb,IAAiKsoJ,WAAW,CAACn4H,MAAM,IAAI+1B,IAAI,MAAMq+F,EAASgE,aAAa,WAAoD,IAAzC,IAAIC,EAAO,CAAC,EAAM1zI,OAAI,EAAOpY,OAAK,EAAe8T,EAAE,EAAEA,EAAEN,UAAU1M,OAAOgN,GAAG,EAAE,CAACsE,EAAI5E,UAAUM,GAAG9T,EAAKC,OAAOD,KAAKoY,GAAK,IAAI,IAAI6tB,EAAE,EAAEA,EAAEjmC,EAAK8G,OAAOm/B,GAAG,EAAG6lH,EAAO9rJ,EAAKimC,IAAI7tB,EAAIpY,EAAKimC,GAAI,CAAC,OAAO6lH,CAAM,EAAEjE,EAASiC,QAAQ,SAASiC,GAAiC,OAAlB,IAAIP,GAAuBQ,kBAAkBD,EAAQ,EAAElE,EAASoE,WAAW,SAAS5+I,GAAG,IAAI,QAAO2L,IAAJ3L,EAAe,OAAiB,OAAO6+I,mBAAmBC,OAAOtE,EAASuE,cAAc/+I,IAAmI,CAA9H,MAAMxN,GAAG,IAAIiJ,EAAI,IAAIhJ,MAAM,OAA0F,MAAnFgJ,EAAIyuF,WAAWhtF,KAAK8C,EAAEvE,EAAIyuF,WAAW80D,YAAY,kCAAwCvjJ,CAAG,CAAC,EAAE++I,EAASyE,WAAW,SAASj/I,GAAG,OAAOk/I,SAAS/1I,mBAAmBnJ,GAAG,EAAEw6I,EAASgC,QAAQ,SAAS7tE,EAAIwwE,GAAoE,OAA3C,IAAIlyE,EAAU,CAACkyE,aAAaA,IAA6BhyE,gBAAgBwB,EAAI,WAAW,EAAE6rE,EAAS4E,QAAQ,CAAC,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAIC,EAAiB,sCAAsC7E,EAAS8E,aAAa,SAAS3wE,GAAK,OAAOA,EAAIvoE,QAAQi5I,EAAiB,OAAO,EAAE7E,EAAS+E,eAAe3sJ,OAAOD,KAAK6nJ,EAAS4E,SAASntJ,KAAI,SAASutJ,GAAS,IAAIC,EAAUjF,EAAS4E,QAAQI,GAAS,MAAM,CAACE,OAAO,IAAI9pI,OAAO4kI,EAAS8E,aAAaG,GAAW,KAAKE,KAAK,IAAI/pI,OAAO4kI,EAAS8E,aAAaE,GAAS,KAAKp5H,MAAMq5H,EAAUtjG,IAAIqjG,EAAQ,IAAGhF,EAASoF,WAAW,SAAS3kG,GAAqB,IAAb,IAAIn4C,OAAE,EAAe2D,EAAE,EAAEe,EAAEgzI,EAAS+E,eAAe9lJ,OAAOgN,EAAEe,EAAEf,IAAK3D,EAAE03I,EAAS+E,eAAe94I,GAAGw0C,EAAOA,EAAO70C,QAAQtD,EAAE48I,OAAO58I,EAAEq5C,KAAK,OAAOlB,CAAM,EAAEu/F,EAASqF,WAAW,SAAS5kG,GAA2B,iBAATA,IAAmBA,EAAOA,EAAOrzC,YAAwB,IAAb,IAAI9E,OAAE,EAAe2D,EAAE,EAAEe,EAAEgzI,EAAS+E,eAAe9lJ,OAAOgN,EAAEe,EAAEf,IAAK3D,EAAE03I,EAAS+E,eAAe94I,GAAGw0C,EAAOA,EAAO70C,QAAQtD,EAAE68I,KAAK78I,EAAEsjB,OAAO,OAAO60B,CAAM,EAAEu/F,EAASxhJ,UAAU,SAAS+R,GAAK,OAAO9D,KAAKuD,MAAMvD,KAAKC,UAAU6D,GAAK,EAAEyvI,EAASsF,aAAa,SAASC,GAAQ,OAAOA,EAAOlD,QAAO,SAAS37I,EAAO8+I,GAAgD,OAAzCz/I,MAAMoxC,UAAU/5C,KAAKupC,MAAMjgC,EAAO8+I,GAAc9+I,CAAM,GAAE,GAAG,EAAE,IAAI++I,EAAY,IAAIrqI,OAAOjH,OAAOuxI,aAAa,KAAK,KAA8U,SAASC,EAAoB1qJ,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,WAAW3qJ,EAAQ85B,QAAQ,sBAAsB95B,EAAQvB,UAAsN,MAA5MuH,EAAIyuF,WAAW,CAAC93F,GAAG,uBAAuBqD,EAAQvB,SAAS8qJ,YAAY,WAAWvpJ,EAAQ85B,QAAQ,sBAAsB95B,EAAQvB,SAAS4gI,OAAOr/H,EAAQq/H,OAAO31H,MAAM1J,EAAQ0J,MAAMowB,QAAQ95B,EAAQ85B,SAAe9zB,CAAG,CAA1qB++I,EAASuE,cAAc,SAAS/+I,GAAG,OAAOA,EAAEoG,QAAQ65I,EAAY,IAAI,EAAEzF,EAAS6F,aAAa,SAASC,EAAMz1E,GAA4C,IAAnC,IAAI01E,EAAW,GAAO90I,OAAM,EAA0C,OAA5BA,EAAM60I,EAAME,KAAK31E,KAAiB01E,EAAW3oJ,KAAK,CAACooJ,MAAMv0I,EAAMwyI,OAAOxyI,EAAMtM,QAAQ,OAAOohJ,CAAU,EAAE/F,EAASiG,aAAa,SAAS11I,GAAK,OAAOnY,OAAOD,KAAKoY,GAAKtR,MAAM,EAAoW+gJ,EAASzgG,SAAS,SAAS+6E,EAAOvlG,EAAQpwB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMqI,EAAEstH,EAAOr7H,OAAOgN,EAAEe,EAAEf,IAAwB,GAAVquH,EAAOruH,GAAWxQ,QAAQ,KAAKs5B,EAAQ,IAAK,OAAO9oB,EAAG05I,EAAoB,CAACjsJ,SAAS,QAAQq7B,QAAQA,EAAQulG,OAAOA,EAAO31H,MAAMA,GAAO,EAAEq7I,EAAS1gG,QAAQ,SAASg7E,EAAOvlG,EAAQpwB,GAAO,IAAI,IAAIsH,EAAEtH,EAAMsH,GAAG,EAAEA,IAAI,CAAC,IAAI63I,EAAKxpB,EAAOruH,GAAG,GAAqC,IAAlC63I,EAAKroJ,MAAMwK,QAAQ,IAAI8uB,KAAiE,IAAnD,CAAC,IAAI,KAAK9uB,QAAQ69I,EAAKroJ,MAAMs5B,EAAQ91B,OAAO,IAAU,OAAOgN,CAAE,CAAC05I,EAAoB,CAACjsJ,SAAS,OAAOq7B,QAAQA,EAAQulG,OAAOA,EAAO31H,MAAMA,GAAO,EAAErM,EAAOC,QAAQynJ,CAAQ,EAAE,CAAC,WAAW,EAAE,YAAY,EAAEoG,OAAO,KAAK,EAAE,CAAC,SAAShwE,EAAQ99E,EAAOC,GAAS,aAAa,SAAS6vJ,EAAQp+I,GAASjR,KAAKkH,KAAK,eAAelH,KAAKiR,QAAQA,EAAQjR,KAAKsvJ,MAAM,IAAIpwJ,MAAM+R,GAASq+I,KAAK,CAAmC,SAASzC,EAAgB57I,GAASjR,KAAKkH,KAAK,gBAAgBlH,KAAKiR,QAAQA,EAAQjR,KAAKsvJ,MAAM,IAAIpwJ,MAAM+R,GAASq+I,KAAK,CAAuC,SAASC,EAAmBt+I,GAASjR,KAAKkH,KAAK,mBAAmBlH,KAAKiR,QAAQA,EAAQjR,KAAKsvJ,MAAM,IAAIpwJ,MAAM+R,GAASq+I,KAAK,CAA0C,SAASE,EAAgBv+I,GAASjR,KAAKkH,KAAK,gBAAgBlH,KAAK22F,WAAW,CAAC80D,YAAY,iBAAiBzrJ,KAAKiR,QAAQA,EAAQjR,KAAKsvJ,MAAM,IAAIpwJ,MAAM+R,GAASq+I,KAAK,CAAngBD,EAAQjxG,UAAUl/C,MAAMk/C,UAA+HyuG,EAAgBzuG,UAAU,IAAIixG,EAAmIE,EAAmBnxG,UAAU,IAAIixG,EAA2KG,EAAgBpxG,UAAU,IAAIixG,EAAQ9vJ,EAAOC,QAAQ,CAAC6vJ,QAAQA,EAAQxC,gBAAgBA,EAAgB2C,gBAAgBA,EAAgBD,mBAAmBA,EAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASlyE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIiwJ,EAAWpyE,EAAQ,kBAAsBqyE,EAAoBryE,EAAQ,4BAAgCsyE,EAAatyE,EAAQ,oBAAwBuyE,EAAgBvyE,EAAQ,+BAAmCtK,EAAOsK,EAAQ,oBAAwBwyE,EAAmB,CAAC7B,kBAAkB,SAA2B10B,GAAkI,OAA1GA,EAAIh/C,KAAK,2DAA2D57E,KAAI,SAAS47E,GAAM,OAAOA,EAAKpzE,IAAI,IAAyB4gB,OAAO,CAAC,wBAAwB,EAAEonI,SAAS,wBAAwBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,OAAOC,WAAW,MAAM/B,YAAY,CAACn7E,EAAO68E,EAAgBD,EAAaF,IAAiBS,EAAmB,CAAClC,kBAAkB,SAA2B10B,GAAwG,OAAhFA,EAAIh/C,KAAK,iCAAiC57E,KAAI,SAAS47E,GAAM,OAAOA,EAAKpzE,IAAI,IAAyB4gB,OAAO,CAAC,qBAAqB,EAAEonI,SAAS,oBAAoBY,iBAAiB,CAAC,MAAM,OAAOC,kBAAkB,CAAC,OAAO,OAAO,UAAU,MAAM,OAAOC,UAAU,MAAMC,WAAW,MAAM/B,YAAY,CAACn7E,EAAO28E,EAAoBE,EAAgBD,EAAaF,IAAalwJ,EAAOC,QAAQ,CAAC2wJ,KAAKD,EAAmBE,KAAKP,EAAmB,EAAE,CAAC,8BAA8B,EAAE,iBAAiB,EAAE,mBAAmB,GAAG,mBAAmB,GAAG,2BAA2B,KAAK,EAAE,CAAC,SAASxyE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIqrJ,EAAOxtE,EAAQ,YAAgB4pE,EAAS5pE,EAAQ,eAAe,SAASgzE,EAAQC,EAAMp4I,GAAO,OAAOo4I,EAAM,IAAIp4I,EAAMwyI,QAAQxyI,EAAMwyI,OAAO4F,EAAM,EAAE,CAAC,SAASC,EAAgBxF,EAAKyF,GAAW,GAAe,QAAZzF,EAAKppJ,MAA8B,UAAhBopJ,EAAKpqJ,UAAoBoqJ,EAAK98I,KAAK,CAAC,GAAGuiJ,EAAW,MAAM,IAAItxJ,MAAM,uCAAuC,OAAO,CAAI,CAAC,GAAe,QAAZ6rJ,EAAKppJ,MAA8B,QAAhBopJ,EAAKpqJ,UAAkBoqJ,EAAK98I,KAAK,CAAC,IAAIuiJ,EAAW,MAAM,IAAItxJ,MAAM,2CAA2C,OAAO,CAAK,CAAC,OAAOsxJ,CAAS,CAAC,SAASC,EAAWhjJ,EAAEC,GAAG,OAAOD,EAAEi9I,OAAOh9I,EAAEg9I,MAAM,CAAC,SAASgG,EAAOv2B,GAAK,IAAItnG,EAAM,EAAc,MAATsnG,EAAI,KAAUtnG,EAAM,GAAE,IAAIjnB,EAAMuuH,EAAIjtH,QAAQ,KAAS07C,GAAa,IAATh9C,EAAWuuH,EAAIj0H,OAAO,EAAE0F,EAAM,MAAM,CAACuuH,IAAIA,EAAIpnH,MAAM8f,EAAM+1B,GAAKjoD,SAAiB,IAARkyB,EAAU,QAAQ,MAAM,CAA6hC,SAAS89H,EAA0BzuJ,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,gBAAmM,MAAnL3kJ,EAAIyuF,WAAW,CAACi6D,KAAK1uJ,EAAQ0uJ,KAAKpoI,MAAM,KAAK,GAAG28B,OAAO,GAAGtmD,GAAG,eAAeqQ,QAAQhN,EAAQ0uJ,KAAKnF,YAAY,2BAA2BvpJ,EAAQ0uJ,KAAKzrG,OAAO,EAAE,IAAI,iBAAuBj9C,CAAG,CAAC,SAAS2oJ,EAAuBC,EAAiBC,GAAU,IAAIC,GAAY,EAAUC,EAAmB,CAACvG,OAAO,GAAOkG,OAAK,EAAOE,EAAiB9sJ,SAAQ,SAASktJ,GAAgBN,EAAKG,EAAS5rG,OAAO8rG,EAAmBvG,OAAOwG,EAAexG,OAAOuG,EAAmBvG,SAAqC,UAA1BwG,EAAevwJ,UAAoBqwJ,GAAuC,QAA1BE,EAAevwJ,WAAmBqwJ,KAA0C,UAA1BE,EAAevwJ,SAAoBgwJ,EAA0B,CAACC,KAAKA,IAA3+B,SAAmC1uJ,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,gBAAyL,MAAzK3kJ,EAAIyuF,WAAW,CAACi6D,KAAK1uJ,EAAQ0uJ,KAAKpoI,MAAM,KAAK,GAAG3pB,GAAG,eAAeqQ,QAAQhN,EAAQ0uJ,KAAKnF,YAAY,2BAA2BvpJ,EAAQ0uJ,KAAKzrG,OAAO,EAAE,IAAI,iBAAuBj9C,CAAG,CAAsuBipJ,CAA0B,CAACP,KAAKA,KAAQI,GAAaA,EAAYC,EAAmBC,CAAc,IAAG,IAAIA,EAAuBH,EAAS7qJ,OAAQ0qJ,EAAKG,EAAS5rG,OAAO8rG,EAAmBvG,OAAOwG,EAAsBD,EAAmBvG,QAAWsG,GAAaL,EAA0B,CAACC,KAAKA,GAAO,CAAC,SAASQ,EAAcC,EAAI17I,EAAIhV,GAAU,IAAI6jC,EAAQ,GAAOkmH,GAAQ,EAAE,IAAiD,KAA9CA,EAAO2G,EAAInkJ,QAAQyI,EAAI+0I,EAAO,KAAmBlmH,EAAQngC,KAAK,CAACqmJ,OAAOA,EAAO/pJ,SAASA,WAA4B,IAAV+pJ,GAAa,OAAOlmH,CAAO,CAAC,SAAS8sH,EAAOC,GAAmB,IAAI55F,EAAM33D,KAAKA,KAAKuxJ,kBAAkBA,EAAkBvxJ,KAAKwxJ,KAAK,GAAGxxJ,KAAKyxJ,gBAAgB,SAASzG,GAAYrzF,EAAM65F,KAAK75F,EAAM45F,kBAAkBrjJ,KAAK,IAAI,IAAIw8I,EAAO,EAAE/yF,EAAM+5F,OAAO/5F,EAAM45F,kBAAkB7yJ,KAAI,SAASqsJ,GAA0B,OAApBL,GAAQK,EAAK7kJ,QAAqB6kJ,EAAK7kJ,MAAM,IAAG,IAAI4qJ,EAAiB7J,EAASsF,aAAa,CAAC6E,EAAcz5F,EAAM65F,KAAKxG,EAAWn4H,MAAM,SAASu+H,EAAcz5F,EAAM65F,KAAKxG,EAAWpiG,IAAI,SAASp7C,KAAKijJ,GAAYI,EAAuBC,EAAiBn5F,EAAM65F,MAAM,IAAIG,EAAgB,CAAC9+H,MAAMm4H,EAAWn4H,MAAM3sB,OAAO0iD,IAAIoiG,EAAWpiG,IAAI1iD,QAAY0rJ,EAAQ,EAAMC,EAAe,EAAEl6F,EAAM4pE,OAAO5pE,EAAM+5F,OAAOhzJ,KAAI,SAASgsJ,EAAOx3I,GAAkI,IAA/H,IAAIo9I,EAAM,CAAC5F,EAAOA,EAAO1qJ,KAAKuxJ,kBAAkBr+I,GAAGhN,QAAY4rJ,EAAY9xJ,KAAKuxJ,kBAAkBr+I,GAAO6+I,EAAmB,GAASF,EAAef,EAAiB5qJ,QAAQmqJ,EAAQC,EAAMQ,EAAiBe,KAAkBE,EAAmB1tJ,KAAKysJ,EAAiBe,IAAiBA,IAAiB,IAAItpI,EAAM,GAAO0+E,EAAO,EAAK2qD,EAAQ,IAAG3qD,EAAO2qD,EAAQA,EAAQ,GAAEG,EAAmB/tJ,SAAQ,SAASguJ,GAAmB,IAAItvJ,EAAMovJ,EAAY3sG,OAAO8hD,EAAO+qD,EAAkBtH,OAAOA,EAAOzjD,GAAWvkG,EAAMwD,OAAO,GAAGqiB,EAAMlkB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQ6lB,EAAMlkB,KAAK,CAAC1C,KAAK,YAAYhB,SAASqxJ,EAAkBrxJ,WAAWsmG,EAAO+qD,EAAkBtH,OAAOA,EAAOiH,EAAgBK,EAAkBrxJ,SAAS,IAAGixJ,EAAQ3qD,EAAO6qD,EAAY5rJ,OAAO,IAAIxD,EAAMovJ,EAAY3sG,OAAO8hD,GAAoE,OAAzDvkG,EAAMwD,OAAO,GAAGqiB,EAAMlkB,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe6lB,CAAK,GAAEovC,EAAM,CAAC,CAACp4D,EAAOC,QAAQ,CAACyX,MAAM,SAAeg7I,EAAUjH,GAAY,IAAIwF,GAAU,EAAUe,EAAkB,GAAGU,EAAUjuJ,SAAQ,SAAS+mJ,IAAMyF,EAAUD,EAAgBxF,EAAKyF,KAAqC,YAAZzF,EAAKppJ,MAAkB4vJ,EAAkBltJ,KAAK0mJ,EAAKroJ,MAAO,IAAG,IAAIg4E,EAAO,IAAI42E,EAAOC,GAAmB72E,EAAO+2E,gBAAgBzG,GAAY,IAAIkH,EAAS,GAAOtmJ,EAAM,EAAoW,OAAlWqmJ,EAAUjuJ,SAAQ,SAAS+mJ,GAAMyF,EAAUD,EAAgBxF,EAAKyF,GAA0B,YAAZzF,EAAKppJ,OAAkBopJ,EAAKpqJ,SAAS6vJ,EAAU,YAAY,cAAgBA,GAAuB,YAAZzF,EAAKppJ,MAAkBqL,MAAMoxC,UAAU/5C,KAAKupC,MAAMskH,EAASx3E,EAAO6mD,OAAO31H,GAAOlN,KAAI,SAASsjB,GAAiD,MAAlC,YAATA,EAAErgB,OAAkBqgB,EAAErhB,SAAS,aAAmBqhB,CAAC,KAAIpW,KAAasmJ,EAAS7tJ,KAAK0mJ,EAAM,IAAUmH,CAAQ,EAAEC,SAAS,SAAkB76E,EAAQ86E,GAAS,IAAIC,EAApgJ,SAAoB/6E,EAAQg7E,EAAeC,GAAuU,IAArT,IAAItrD,EAAO,EAAMurD,EAAcl7E,EAAQpxE,OAAWusJ,EAAWxL,EAASsF,aAAa,CAAC+F,EAAe5zJ,KAAI,SAASy7H,GAAK,MAAM,CAACA,IAAIA,EAAIlsH,MAAK,EAAK,IAAGskJ,EAAiB7zJ,KAAI,SAASy7H,GAAK,MAAM,CAACA,IAAIA,EAAIlsH,MAAK,EAAM,MAAKq7I,QAAO,SAASmJ,EAAW1yH,GAA4B,OAAzB0yH,EAAW1yH,EAAEo6F,KAAKp6F,EAAE9xB,KAAYwkJ,CAAU,GAAE,CAAC,GAAOC,EAAa,GAASzrD,EAAOurD,IAA+D,KAAhDvrD,EAAO3vB,EAAQpqE,QAAQ,IAAI+5F,KAA5B,CAA0D,IAAIyjD,EAAOzjD,EAAOA,EAAO3vB,EAAQpqE,QAAQ,IAAI+5F,GAAQ,IAAI0rD,EAAQr7E,EAAQvkE,MAAM23I,EAAOzjD,EAAO,GAAO2rD,EAAQlC,EAAOiC,GAASx4B,EAAIy4B,EAAQz4B,IAAIx5H,EAASiyJ,EAAQjyJ,SAAasN,EAAKwkJ,EAAWt4B,GAAc,MAANlsH,GAAqBykJ,EAAaruJ,KAAK,CAAC1C,KAAK,MAAMhB,SAASA,EAASsN,KAAKA,EAAKy8I,OAAOA,EAAOhoJ,MAAMiwJ,GAAS,CAAC,OAAOD,CAAY,CAAmwHG,CAAWv7E,EAAQ86E,EAAQnkJ,KAAKmkJ,EAAQU,OAAW7rD,EAAO,EAAMs6B,EAAO8wB,EAAQ/I,QAAO,SAAS/nB,EAAOrpH,GAAO,IAAIxV,EAAM40E,EAAQnyB,OAAO8hD,EAAO/uF,EAAMwyI,OAAOzjD,GAA4K,OAAjKvkG,EAAMwD,OAAO,GAAGq7H,EAAOl9H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAQukG,EAAO/uF,EAAMwyI,OAAOxyI,EAAMxV,MAAMwD,cAAcgS,EAAMwyI,OAAUxyI,EAAMxV,MAAMwD,OAAO,GAAGq7H,EAAOl9H,KAAK6T,GAAcqpH,CAAM,GAAE,IAAQ7+H,EAAM40E,EAAQnyB,OAAO8hD,GAAqE,OAA1DvkG,EAAMwD,OAAO,GAAGq7H,EAAOl9H,KAAK,CAAC1C,KAAK,UAAUe,MAAMA,IAAe6+H,CAAM,EAAE,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,CAAC,SAASlkD,EAAQ99E,EAAOC,GAAS,aAA8ND,EAAOC,QAAxN,SAAiBuzJ,GAAM,IAAIC,EAAct/I,KAAKC,UAAUs/I,EAAM,CAAC,EAAiI,OAA/H,WAAqB,IAAI76H,EAAK46H,EAAcpgJ,WAAW,OAAOwlB,KAAQ66H,EAAMA,EAAM76H,GAAM66H,EAAM76H,GAAM26H,EAAKnlH,MAAM5tC,KAAK4S,UAAU,CAAiB,CAAuB,EAAE,CAAC,GAAG,EAAE,CAAC,SAASyqE,EAAQ99E,EAAOC,GAAS,aAAa,SAAS0zJ,EAAiB1G,EAAOjhG,GAAuB,IAAhB,IAAI4nG,GAAU,EAAUjgJ,EAAE,EAAEe,EAAEu4I,EAAOtmJ,OAAOgN,EAAEe,EAAEf,IAAQq4C,EAAMr4C,IAAIs5I,EAAOt5I,GAAGhN,UAAgC,IAAZitJ,GAAe3G,EAAOt5I,GAAGq4C,EAAMr4C,IAAIw3I,OAAO8B,EAAO2G,GAAU5nG,EAAM4nG,IAAWzI,UAAQyI,EAASjgJ,GAAG,IAAe,IAAZigJ,EAAe,MAAM,IAAIj0J,MAAM,qBAAqB,OAAOi0J,CAAQ,CAAC5zJ,EAAOC,QAAQ,SAASgtJ,GAAQ,IAAI4G,EAAY5G,EAAOlD,QAAO,SAAStnG,EAAIyqG,GAAO,OAAOzqG,EAAIyqG,EAAMvmJ,MAAM,GAAE,GAAGsmJ,EAAOA,EAAO5jJ,QAAO,SAAS6jJ,GAAO,OAAOA,EAAMvmJ,OAAO,CAAC,IAA6F,IAA1F,IAAImtJ,EAAY,IAAIrmJ,MAAMomJ,GAAiB7nG,EAAMihG,EAAO9tJ,KAAI,WAAW,OAAO,CAAC,IAAOwU,EAAE,EAAQA,GAAGkgJ,EAAY,GAAE,CAAC,IAAIE,EAAWJ,EAAiB1G,EAAOjhG,GAAO8nG,EAAYngJ,GAAGs5I,EAAO8G,GAAY/nG,EAAM+nG,IAAa/nG,EAAM+nG,KAAcpgJ,GAAG,CAAC,OAAOmgJ,CAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASh2E,EAAQ99E,EAAOC,GAAS,aAAa,SAAS+zJ,IAAW,CAAC,SAASC,EAAStgJ,GAAG,OAAOA,CAAC,CAAC3T,EAAOC,QAAQ,SAASD,GAAQ,IAAI4E,EAAS,CAAC4V,IAAIw5I,EAASt8I,MAAMs8I,EAASxgF,OAAOwgF,EAASE,UAAUF,EAASnF,mBAAmBoF,EAAS/E,eAAe+E,EAASE,UAAUF,GAAU,GAAGn0J,OAAOD,KAAK+E,GAAUwvJ,OAAM,SAASvvJ,GAAK,OAAO7E,EAAO6E,EAAI,IAAI,MAAM,IAAIlF,MAAM,2FAAgL,OAArFG,OAAOD,KAAK+E,GAAUH,SAAQ,SAASI,GAAK7E,EAAO6E,GAAK7E,EAAO6E,IAAMD,EAASC,EAAI,IAAU7E,CAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS89E,EAAQ99E,EAAOC,GAAS,aAAa,IAA+Bo0J,EAAUv2E,EAAQ,gBAAoB4pE,EAAS5pE,EAAQ,gBAAoBiwE,EAAQjwE,EAAQ,qBAAuDw2E,EAArBx2E,EAAQ,aAAyCw2E,mBAAuBhJ,EAAOxtE,EAAQ,aAA+V,SAASy2E,EAAkC5xJ,GAAS,IAAIqhI,EAAKrhI,EAAQqhI,KAASr7H,EAAI,IAAI2iJ,EAAOgC,gBAAgB,0CAA4O,MAAlM3kJ,EAAIyuF,WAAW,CAAC93F,GAAG,yCAAyC4sJ,YAAY,YAAYloB,EAAK,GAAG7gI,MAAM,2BAA2B6gI,EAAK,GAAG7gI,MAAM,IAAIqxJ,WAAWxwB,EAAK,GAAG7gI,MAAMsxJ,WAAWzwB,EAAK,GAAG7gI,OAAawF,CAAG,CAAC,SAAS+rJ,EAAmBlJ,GAAM,OAAOA,EAAKmJ,UAAU,IAAI,QAAQ,OAAO,EAAE,IAAI,MAAM,OAAO,EAAE,QAAQ,MAAM,IAAIh1J,MAAM,uDAAuD6rJ,EAAKmJ,SAAS,KAAK,CAAC,SAASC,EAAShH,GAAQ,GAAmB,IAAhBA,EAAOjnJ,OAAY,MAAM,GAA4C,IAAzC,IAAIkuJ,EAAU,EAAMC,EAAWlH,EAAO,GAAWj6I,EAAE,EAAEA,EAAEi6I,EAAOjnJ,OAAOgN,IAAI,CAAC,IAAIohJ,EAAanH,EAAOj6I,GAAoD,GAAe,KAAhEkhJ,GAAWH,EAAmBK,EAAavJ,OAAuB,CAAIuJ,EAAavJ,KAAKroJ,QAAQ2xJ,EAAWtJ,KAAKroJ,OAAiC,KAA1B4xJ,EAAavJ,KAAKroJ,OAAYoxJ,EAAkC,CAACvwB,KAAK,CAAC8wB,EAAWtJ,KAAKuJ,EAAavJ,QAAQ,IAAIwJ,EAAMJ,EAAShH,EAAOp6I,MAAMG,EAAE,IAAI,MAAM,CAAC,CAACmhJ,EAAWC,IAAexsI,OAAOysI,EAAM,CAAC,CAAC,IAAIxJ,EAAKsJ,EAAWtJ,MAAp2C,SAAqC7oJ,GAAS,IAAIgyJ,EAAShyJ,EAAQgyJ,SAAan0H,EAAa,UAAXm0H,EAAmB,WAAW,WAAeM,EAAa,UAAXN,EAAmB,WAAW,WAAehsJ,EAAI,IAAI2iJ,EAAOgC,gBAAgB2H,EAAE,SAAar6B,EAAIj4H,EAAQ6oJ,KAAKroJ,MAA2F,MAArFwF,EAAIyuF,WAAW,CAAC93F,GAAGkhC,EAAE,QAAQ0rH,YAAY,qBAAqBtxB,EAAI,OAAOp6F,EAAE6wH,KAAKz2B,GAAWjyH,CAAG,CAAwhCusJ,CAA4B,CAAC1J,KAAKA,EAAKmJ,SAASnJ,EAAKmJ,UAAU,CAAC,IAAItE,EAAgB,CAAC1oJ,KAAK,kBAAkBwsJ,UAAU,SAAmBnyB,EAAOmzB,GAAM,IAAIjB,EAAUiB,EAAKjB,UAAUkB,EAAWD,EAAKhB,UAAcvG,EAAOsG,EAAnzD,aAAu0DlyB,GAAQ4rB,EAAOA,EAAOzuJ,KAAI,SAASk2J,GAAO,OAAOA,GAAO,EAAE,IAA4B,IAAIC,EAAMV,EAAnChH,EAAOyG,EAAUzG,IAAuC2H,EAAcD,EAAMn2J,KAAI,SAASq2J,GAAM,IAAIC,EAASD,EAAK,GAAGhK,KAAKiK,SAAwG,MAAjF,SAAXA,IAAmBA,EAASnB,EAAmBtyB,EAAOxuH,MAAMgiJ,EAAK,GAAGrK,OAAOqK,EAAK,GAAGrK,UAAasK,EAA4K,CAAnH/N,EAAS1gG,QAAQg7E,EAAOyzB,EAASD,EAAK,GAAGrK,QAAkBzD,EAASzgG,SAAS+6E,EAAOyzB,EAASD,EAAK,GAAGrK,SAA9I,CAACqK,EAAK,GAAGrK,OAAOqK,EAAK,GAAGrK,OAAgJ,IAAOuK,EAAiB,EAAMC,OAAW,EAAO,OAAO3zB,EAAO+nB,QAAO,SAAS6L,EAAUpK,EAAK73I,GAAG,IAAIkiJ,EAAOH,EAAiBJ,EAAM3uJ,QAAQ4uJ,EAAcG,GAAkB,IAAI/hJ,EAAM6hJ,EAAKF,EAAMI,GAAsBI,EAAaP,EAAcG,GAAkB,IAAIG,EAA6B,OAArBD,EAAU9wJ,KAAK0mJ,GAAaoK,EAAiH,GAApGE,EAAa,KAAKniJ,IAAGgiJ,EAAW,IAAMH,EAAK,GAAGrK,SAASx3I,GAAG6hJ,EAAK,GAAGrK,SAASx3I,GAAGgiJ,EAAW7wJ,KAAK0mJ,GAASsK,EAAa,KAAKniJ,EAAE,CAAC,IAAIoiJ,EAAS/zB,EAAOwzB,EAAK,GAAGrK,eAAe4K,EAASpB,gBAAgBoB,EAASN,SAASM,EAASC,UAAUZ,EAAWO,GAAYC,EAAU9wJ,KAAKixJ,GAAUL,GAAkB,CAAC,OAAOE,CAAS,GAAE,GAAG,GAAG51J,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQsC,EAAgB,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,oBAAoB,EAAE,YAAY,KAAK,EAAE,CAAC,SAASvyE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,gBAAoBm4E,EAAe,oBAAwBlI,EAAQjwE,EAAQ,qBAAyBo4E,EAAW,OAAWhG,EAAW,CAACvoJ,KAAK,aAAa+P,MAAM,SAAey+I,GAAoB,IAAIn2J,EAAOk2J,EAAe9zJ,EAAK,cAAc,MAA2B,MAAxB+zJ,EAAmB,GAAgB,CAAC/zJ,KAAKA,EAAKe,MAAMgzJ,EAAmBvwG,OAAO,GAAG6vG,SAAS,OAAOz1J,OAAOA,EAAO20J,SAAS,QAAQyB,UAAS,GAAkC,MAAxBD,EAAmB,GAAgB,CAAC/zJ,KAAKA,EAAKe,MAAMgzJ,EAAmBvwG,OAAO,GAAG6vG,SAAS,OAAOz1J,OAAOA,EAAO20J,SAAS,QAAQyB,UAAS,GAAiC,MAAxBD,EAAmB,GAAgB,CAAC/zJ,KAAKA,EAAKe,MAAMgzJ,EAAmBvwG,OAAO,GAAG5lD,OAAOA,EAAO20J,SAAS,OAAkC,MAAxBwB,EAAmB,GAAuI,CAAC/zJ,KAAKA,EAAKe,MAA9HgzJ,EAAmB7iJ,QAAQ2iJ,EAAe,MAAgGR,SAA7EU,EAAmB7iJ,QAAQ2iJ,EAAe,MAAqDj2J,OAAOA,EAAO20J,SAAS,QAAQyB,UAAS,GAAc,IAAI,EAAElC,UAAU,SAAmBmC,EAAUr0B,GAAQ,GAAe,eAAZq0B,EAAiC,OAAOr0B,EAAO+nB,QAAO,SAAS/lB,EAAKwnB,EAAKL,GAAqG,MAA9E,gBAAZK,EAAKppJ,MAAsBopJ,EAAKxrJ,SAASk2J,GAAYlyB,EAAKl/H,KAAK,CAAC0mJ,KAAKA,EAAKL,OAAOA,IAAgBnnB,CAAI,GAAE,GAAG,EAAExwD,OAAO,SAAgBg4E,EAAK7oJ,GAAS,GAAgB,iBAAZ6oJ,EAAKppJ,MAAsBopJ,EAAKxrJ,SAASk2J,EAAY,OAAO,KAAK,IAAII,EAAW,GAA0S,OAAjE3zJ,EAAQ4zJ,aAAaC,SAAShL,EAAKroJ,OAAzQ,SAAkB03H,GAAO,IAAI07B,EAAa5zJ,EAAQ4zJ,aAAaE,sBAAsB57B,EAAM2wB,EAAKroJ,OAAOmzJ,EAAWxxJ,KAAKnC,EAAQ6wE,OAAOk0E,EAASgE,aAAa,CAAC,EAAE/oJ,EAAQ,CAACqrJ,SAASxC,EAAKwK,UAAUhyB,KAAK,CAAC,EAAEuyB,aAAaA,KAAgB,GAAmD/K,EAAK4K,UAAgB,CAACjzJ,MAAMmzJ,EAAW3nJ,KAAK,IAAI,GAAG3O,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQmC,EAAW,CAAC,EAAE,CAAC,eAAe,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAASpyE,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS5pE,EAAQ,gBAAoBwtE,EAAOxtE,EAAQ,aAAiBo4E,EAAW,SAAanI,EAAQjwE,EAAQ,qBAAkW,SAAS44E,EAASvB,GAAM,IAAI3J,EAAK2J,EAAK3J,KAAK7yC,EAAKw8C,EAAKx8C,KAAK7L,EAAMqoD,EAAKroD,MAAM6pD,EAAWxB,EAAKwB,WAAWtqJ,EAAM8oJ,EAAK9oJ,MAAUuqJ,EAAeD,EAAWnjJ,MAAMmlG,EAAK,EAAE7L,GAAsO,OAA/N8pD,EAAenyJ,SAAQ,SAASge,EAAE9O,GAAMA,IAAItH,EAAMssG,EAAK,IAAsB,gBAATl2F,EAAErgB,MAA+B,YAATqgB,EAAErgB,MAA+B,cAAbqgB,EAAErhB,WAAxmB,SAAgDuB,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,gDAAoD1yB,EAAIj4H,EAAQ6oJ,KAAKroJ,MAAkK,MAA5JwF,EAAIyuF,WAAW,CAAC93F,GAAG,+CAA+C4sJ,YAAY,WAAWtxB,EAAIy2B,KAAK1uJ,EAAQ6oJ,KAAKroJ,MAAMyzJ,eAAej0J,EAAQi0J,gBAAsBjuJ,CAAG,CAAoTkuJ,CAAuC,CAACD,eAAeA,EAAepL,KAAKA,GAAO,IAAUA,CAAI,CAAC,IAAIsL,EAAa,WAAW,SAASA,KAA5hC,SAAyB3qG,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA45BC,CAAgBxoJ,KAAKq2J,GAAcr2J,KAAKkH,KAAK,cAAc,CAAyvB,OAAxvBmgJ,EAAagP,EAAa,CAAC,CAACjyJ,IAAI,qBAAqB1B,MAAM,SAA4BR,EAAQklJ,GAAgE,OAAjDpnJ,KAAKytJ,eAAerG,EAAcqG,eAAsBvrJ,CAAO,GAAG,CAACkC,IAAI,QAAQ1B,MAAM,SAAegzJ,GAA2C,MAA2B,MAAxBA,EAAmB,GAAiB,KAAW,CAAC/zJ,KAAjE,cAA2Ee,MAAMgzJ,EAAmBvwG,OAAO,GAAG5lD,OAAOk2J,EAAW,GAAG,CAACrxJ,IAAI,YAAY1B,MAAM,SAAmB6+H,GAAQ,OAAO0lB,EAASkG,OAAOmJ,YAAY/0B,EAAO,CAACk0B,WAAWA,EAAWQ,SAASA,EAASjB,SAASh1J,KAAKytJ,eAAeuC,WAAW,GAAG,CAAC5rJ,IAAI,SAAS1B,MAAM,SAAgBqoJ,EAAK7oJ,GAAS,GAAG6oJ,EAAKxrJ,SAASk2J,EAAY,OAAO,KAAK,IAAI/yJ,EAAMR,EAAQ4zJ,aAAahqJ,SAASi/I,EAAKroJ,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQ4oJ,WAAWC,IAAY,CAACroJ,MAAMA,EAAM,KAAY2zJ,CAAY,CAA12B,GAA82B92J,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQ,IAAI+I,EAAa,CAAC,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,oBAAoB,IAAI,GAAG,CAAC,SAASh5E,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAI0F,EAAQjwE,EAAQ,qBAAyBk5E,EAAO,WAAW,SAASA,KAAxN,SAAyB7qG,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAAkFC,CAAgBxoJ,KAAKu2J,GAAQv2J,KAAKkH,KAAK,QAAQ,CAA4V,OAA3VmgJ,EAAakP,EAAO,CAAC,CAACnyJ,IAAI,MAAM1B,MAAM,SAAa8U,GAAQA,EAAI+1I,WAAUvtJ,KAAKutJ,SAAS/1I,EAAI+1I,UAAsB,MAAV/1I,EAAI7N,OAAY3J,KAAK2J,KAAK6N,EAAI7N,KAAK,GAAG,CAACvF,IAAI,iBAAiB1B,MAAM,SAAwB8rJ,GAAQ,IAAI72F,EAAM33D,KAAK,OAAOX,OAAOD,KAAKY,KAAKutJ,UAAUjE,QAAO,SAASkF,EAAO/iH,GAA+C,OAAzC+iH,EAAO/iH,GAAM,CAACA,KAAKA,EAAK9hC,KAAKguD,EAAMhuD,MAAa6kJ,CAAM,GAAEA,EAAO,KAAY+H,CAAM,CAArb,GAAybh3J,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQ,IAAIiJ,EAAO,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAASl5E,EAAQ99E,EAAOC,GAAS,aAAa,IAAI8tJ,EAAQjwE,EAAQ,qBAAyBm5E,EAAc,CAACtvJ,KAAK,sBAAsBwsJ,UAAU,SAAmBnyB,GAAQ,IAAIx4E,EAAM,GAAO0tG,GAAQ,EAAU9oJ,EAAO4zH,EAAO+nB,QAAO,SAAS/nB,EAAOwpB,GAA8X,MAAzW,QAAZA,EAAKppJ,MAA8B,UAAhBopJ,EAAKpqJ,UAAoBoqJ,EAAK98I,MAAmB,UAAb88I,EAAKroJ,QAAiB+zJ,GAAQ,GAAQA,GAAwB,gBAAZ1L,EAAKppJ,MAAuBopJ,EAAKxrJ,SAAQwpD,EAAM,GAAGrmD,MAAM,8BAA6BqmD,EAAM1kD,KAAK0mJ,IAAWxpB,EAAOl9H,KAAK0mJ,GAAqB,QAAZA,EAAKppJ,MAA8B,QAAhBopJ,EAAKpqJ,UAAkBoqJ,EAAK98I,MAAmB,WAAb88I,EAAKroJ,QAAkBsK,MAAMoxC,UAAU/5C,KAAKupC,MAAM2zF,EAAOx4E,GAAO0tG,GAAQ,EAAM1tG,EAAM,IAAUw4E,CAAM,GAAE,IAA6C,OAAzCv0H,MAAMoxC,UAAU/5C,KAAKupC,MAAMjgC,EAAOo7C,GAAcp7C,CAAM,GAAGpO,EAAOC,QAAQ,WAAW,OAAO8tJ,EAAQkJ,EAAc,CAAC,EAAE,CAAC,oBAAoB,IAAI,GAAG,CAAC,SAASn5E,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,eAAmBM,EAAO,CAAC+1E,UAAU,SAAmBnyB,EAAOisB,GAAS,SAASiG,EAAUmC,EAAUr0B,GAAQ,OAAOisB,EAAQ9uJ,KAAI,SAASa,GAAQ,OAAOA,EAAOk0J,UAAUmC,EAAUr0B,EAAO,GAAE,CAA6J,OAA5J,SAASmyB,EAAUnyB,GAAQ,OAAOisB,EAAQlE,QAAO,SAAS/nB,EAAOhiI,GAAQ,OAAOA,EAAOm0J,UAAUnyB,EAAO,CAACmyB,UAAUA,EAAUD,UAAUA,GAAW,GAAElyB,EAAO,CAAQmyB,CAAUnyB,EAAO,EAAEtqH,MAAM,SAAey/I,EAAMlJ,GAAyQ,IAAImJ,GAAc,EAAUjB,OAAmB,EAAWkB,EAAU,GAAG,OAAOF,EAAMpN,QAAO,SAAS/nB,EAAOs1B,GAAO,MAAgB,cAAbA,EAAMl1J,MAAoBg1J,EAA+B,UAAjBE,EAAMl2J,SAAuC,QAAjBk2J,EAAMl2J,UAA/b,SAAqB+0J,EAAmBn0B,GAAgC,IAAxB,IAAIu1B,OAAa,EAAe5jJ,EAAE,EAAEe,EAAEu5I,EAAQtnJ,OAAOgN,EAAEe,EAAEf,IAA2E,GAA/C4jJ,EAAXtJ,EAAQt6I,GAAwB+D,MAAMy+I,GAA+D,OAA1Bn0B,EAAOl9H,KAAKyyJ,GAAqBA,EAAc,OAAO,IAAI,CAAiRC,CAA/DrB,EAAmBzO,EAASoF,WAAWqJ,GAAuDn0B,IAASA,EAAOl9H,KAAK,CAAC1C,KAAK,cAAce,MAAMgzJ,IAAqB1oJ,MAAMoxC,UAAU/5C,KAAKupC,MAAM2zF,EAAOq1B,GAAWA,EAAU,GAAUr1B,IAAOm0B,EAAmB,GAAUn0B,IAAUo1B,GAA+B,YAAbE,EAAMl1J,MAAmC,cAAjBk1J,EAAMl2J,SAAwB+0J,GAAoBmB,EAAMn0J,MAAWk0J,EAAUvyJ,KAAKwyJ,GAAct1B,IAAOA,EAAOl9H,KAAKwyJ,GAAct1B,EAAM,GAAE,GAAG,GAAGhiI,EAAOC,QAAQm+E,CAAM,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,SAASN,EAAQ99E,EAAOC,GAAS,aAAa,IAAIw3J,EAAa35E,EAAQ,mBAAuB4pE,EAAS5pE,EAAQ,eAAu1B99E,EAAOC,QAAjmB,SAASuzE,EAAO7wE,GAA2J,OAAlJA,EAAQ6wE,OAAOA,EAAO7wE,EAAQsrJ,QAAQtrJ,EAAQsrJ,QAAYtrJ,EAAQ4zJ,eAAc5zJ,EAAQ4zJ,aAAakB,EAAaC,uBAAuB/0J,IAAgBA,EAAQqrJ,SAAS7uJ,KAAI,SAASqsJ,GAAM,IAAImM,EAAxc,SAAsBnM,EAAK7oJ,GAAmC,IAA1B,IAAIg1J,OAAe,EAAehkJ,EAAE,EAAEe,EAAE/R,EAAQsrJ,QAAQtnJ,OAAOgN,EAAEe,EAAEf,IAAgF,GAA5CgkJ,EAAnBh1J,EAAQsrJ,QAAQt6I,GAA0B6/D,OAAOg4E,EAAK7oJ,GAA4B,OAAOg1J,EAAgB,OAAO,CAAK,CAA0OC,CAAapM,EAAK7oJ,GAAS,GAAGg1J,EAAgB,OAAOA,EAAex0J,MAAM,GAAe,gBAAZqoJ,EAAKppJ,KAAqB,CAAC,IAAIe,EAAMR,EAAQ4zJ,aAAahqJ,SAASi/I,EAAKroJ,OAAsD,OAArC,MAAPA,IAAaA,EAAMR,EAAQ4oJ,WAAWC,IAAa9D,EAASqF,WAAW5pJ,EAAM,CAAC,GAAe,YAAZqoJ,EAAKppJ,MAA8B,QAAZopJ,EAAKppJ,KAAc,OAAOopJ,EAAKroJ,MAAM,MAAM,IAAIxD,MAAM,2BAA2B6rJ,EAAKppJ,KAAK,IAAI,IAAGuM,KAAK,GAAG,CAAsB,EAAE,CAAC,cAAc,EAAE,kBAAkB,KAAK,GAAG,CAAC,SAASmvE,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIiD,EAAOxtE,EAAQ,YAAgB25E,EAAa,WAAW,SAASA,EAAa90J,IAAjO,SAAyBwpD,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA2FC,CAAgBxoJ,KAAKg3J,GAAch3J,KAAKo3J,UAAUl1J,EAAQk1J,UAAUp3J,KAAKy1B,UAAUvzB,EAAQuzB,UAAUz1B,KAAK29E,OAAOz7E,EAAQy7E,MAAM,CAAmmE,OAAlmE0pE,EAAa2P,EAAa,CAAC,CAAC5yJ,IAAI,WAAW1B,MAAM,SAAkBy3H,EAAI3oH,EAASmkJ,GAAmC,OAAzBA,EAASA,IAAU,EAAa31J,KAAKq3J,cAAcr3J,KAAK8L,SAASquH,GAAK3oH,EAASmkJ,EAAS,GAAG,CAACvxJ,IAAI,oBAAoB1B,MAAM,SAA2BizJ,EAAS2B,EAAQ50J,GAAUizJ,GAAU2B,EAAQ50J,EAAO,GAAG,CAAC0B,IAAI,eAAe1B,MAAM,SAAsBA,EAAMf,GAAM,OAAc,MAAPe,IAAcA,GAAc,mBAAPf,GAAwC,IAAfe,EAAMwD,MAAU,GAAG,CAAC9B,IAAI,gBAAgB1B,MAAM,SAAuBA,EAAM40J,EAAQ3B,GAAU,IAAIh0J,EAAKtC,OAAO++C,UAAU/pC,SAASgqC,KAAK37C,GAAW60J,EAAav3J,KAAKy1B,UAAUz1B,KAAKw3J,KAAK,GAAGx3J,KAAKy3J,aAAa/0J,EAAMf,GAAO,OAAO3B,KAAK03J,kBAAkB/B,EAAS2B,EAAQC,GAAc,GAAU,mBAAP51J,EAAqI,MAAU,oBAAPA,EAAiC3B,KAAK03J,mBAAmB/B,EAAS2B,EAAQ50J,IAAkB,IAARA,EAAqB1C,KAAK03J,mBAAmB/B,EAAS2B,EAAQC,QAAjE,EAAhM,IAAI,IAAQn9B,EAAJlnH,EAAE,EAAQA,EAAExQ,EAAMwD,OAAOgN,IAAKknH,EAAM13H,EAAMwQ,GAAGlT,KAAK03J,mBAAmB/B,EAAS2B,EAAQl9B,EAAiL,GAAG,CAACh2H,IAAI,WAAW1B,MAAM,SAAkBy3H,EAAIq9B,GAAKx3J,KAAKw3J,IAAS,MAALA,EAAUx3J,KAAKy1B,UAAUvvB,OAAO,EAAEsxJ,EAAI,IAAItvJ,OAAI,EAAWy1E,OAAO,EAAWhwE,OAAO,EAAWysH,EAAMp6H,KAAKy1B,UAAUz1B,KAAKw3J,KAAK,IAAI75E,EAAO39E,KAAK29E,OAAOw8C,EAAkP,CAA7O,MAAMhrH,GAA8N,MAAvNjH,EAAI,IAAI2iJ,EAAO0E,mBAAmB,oCAAuC54D,WAAW,CAAC93F,GAAG,iCAAiCs7H,IAAIA,EAAIsxB,YAAY,gCAAgCtxB,EAAI,qBAAqBw9B,UAAUxoJ,GAAajH,CAAG,CAAC,IAAIyF,EAAOgwE,EAAOroE,IAAI8kH,EAAM,CAACo9B,IAAIx3J,KAAKw3J,IAAI/hI,UAAUz1B,KAAKy1B,WAAiQ,CAArP,MAAMtmB,GAAsO,MAA/NjH,EAAI,IAAI2iJ,EAAO0E,mBAAmB,kCAAqC54D,WAAW,CAAC93F,GAAG,+BAA+B4sJ,YAAY,gCAAgCtxB,EAAI,qBAAqBC,MAAMA,EAAMD,IAAIA,EAAIw9B,UAAUxoJ,GAAajH,CAAG,CAAC,OAAW,MAARyF,GAAc3N,KAAKw3J,IAAI,EAAUx3J,KAAK8L,SAASquH,EAAIn6H,KAAKw3J,IAAI,GAAU7pJ,CAAM,GAAG,CAACvJ,IAAI,wBAAwB1B,MAAM,SAA+B03H,EAAMD,GAAK,IAAIj4H,EAAQ,CAACk1J,UAAUp3J,KAAKo3J,UAAUrkJ,MAAM,GAAG0iB,UAAUz1B,KAAKy1B,UAAU1iB,MAAM,IAA2H,OAAvH7Q,EAAQy7E,OAAO39E,KAAK29E,OAAOz7E,EAAQuzB,UAAUz1B,KAAKy1B,UAAU3N,OAAOsyG,GAAOl4H,EAAQk1J,UAAUp3J,KAAKo3J,UAAUtvI,OAAOqyG,GAAY,IAAI68B,EAAa90J,EAAQ,KAAY80J,CAAY,CAA/xE,GAAmyEA,EAAaC,uBAAuB,SAASvC,GAAM,IAAI/2E,EAAO+2E,EAAK/2E,OAAO4lD,EAAKmxB,EAAKnxB,KAASrhI,EAAQ,CAACy7E,OAAOA,EAAO4lD,KAAKA,EAAMrhI,UAAkB,IAA4B,OAAzBA,EAAQuzB,UAAU,CAAC8tG,GAAa,IAAIyzB,EAAa90J,EAAQ,EAAE3C,EAAOC,QAAQw3J,CAAY,EAAE,CAAC,WAAW,IAAI,GAAG,CAAC,SAAS35E,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,eAAmBwtE,EAAOxtE,EAAQ,YAA4V,SAASu6E,EAAiBnL,EAAMtyB,GAAK,GAAkB,IAAfsyB,EAAMvmJ,OAAY,OAAO,EAAM,IAAsC2xJ,EAA1BpL,EAAMA,EAAMvmJ,OAAO,GAA4Bi0H,IAAIh1E,OAAO,GAAO2yG,EAAgB39B,EAAIh1E,OAAO,EAAEg1E,EAAIj0H,OAAO,GAAG,OAA+C,IAAxC2xJ,EAAa3qJ,QAAQ4qJ,EAAoB,CAAC,SAASC,EAAOtL,EAAMtyB,GAA2B,OAAtBsyB,EAAMpoJ,KAAK,CAAC81H,IAAIA,IAAasyB,CAAK,CAA0nB,SAASuL,EAAUjN,EAAKmL,EAAWh0J,GAAS,IAAI8yJ,EAASjK,EAAKiK,UAAU9yJ,EAAQ8yJ,SAAappJ,EAAMsqJ,EAAWhpJ,QAAQ69I,GAAM,IAAIiK,EAAU,OAAOkB,EAAW,IAAI7pD,OAAM,EAAO6L,OAAK,EAAO,IAAI7L,EAAM46C,EAASzgG,SAAS0vG,EAAWlB,EAASppJ,GAAOssG,EAAK+uC,EAAS1gG,QAAQ2vG,EAAWlB,EAASppJ,EAAsM,CAA/L,MAAM+rJ,GAA0K,MAA5JA,aAAqB9M,EAAOgC,iBAAxkD,SAAmC3qJ,GAAS,IAAIgG,EAAI,IAAI2iJ,EAAOgC,gBAAgB,4BAAgC1yB,EAAIj4H,EAAQ6oJ,KAAKroJ,MAAsM,MAAhMwF,EAAIyuF,WAAW,CAAC93F,GAAG,2BAA2B4sJ,YAAY,YAAYtxB,EAAI,IAAIw9B,UAAUz1J,EAAQy1J,UAAU/G,KAAKz2B,EAAI+7B,WAAWh0J,EAAQg0J,WAAWlB,SAAS9yJ,EAAQ8yJ,SAASppJ,MAAM1J,EAAQ0J,OAAa1D,CAAG,CAA0wC+vJ,CAA0B,CAAClN,KAAKA,EAAK4M,UAAUA,EAAUzB,WAAWA,EAAWlB,SAASA,EAASppJ,MAAMA,IAAc+rJ,CAAS,CAAC,IAAIO,EAAUhC,EAAWnjJ,MAAMmlG,EAAKtsG,GAAWusJ,EAAWjC,EAAWnjJ,MAAMnH,EAAM,EAAEygG,EAAM,GAAO+rD,EAAMl2J,EAAQ+zJ,SAAS,CAACrqJ,MAAMA,EAAMm/I,KAAKA,EAAKmN,UAAUA,EAAUC,WAAWA,EAAWjgD,KAAKA,EAAK7L,MAAMA,EAAM6pD,WAAWA,IAAmF,OAAlEkC,EAAMlyJ,SAAQkyJ,EAAMgU,SAAS,CAAClU,EAAUC,GAAYC,EAAM,CAACA,IAAcnR,EAASsF,aAAa,CAAC2J,EAAWnjJ,MAAM,EAAEmlG,GAAMkgD,EAAMlC,EAAWnjJ,MAAMs5F,EAAM,IAAI,CAA4T9sG,EAAOC,QAAQ,CAAC82J,YAA3U,SAAqBJ,EAAWh0J,GAAyQ,OAA3Og0J,EAAW5M,QAAO,SAAStgJ,EAAS+hJ,GAA0F,MAArE,gBAAZA,EAAKppJ,MAAsBopJ,EAAKxrJ,SAAS2C,EAAQuzJ,YAAYzsJ,EAAS3E,KAAK0mJ,GAAa/hJ,CAAQ,GAAE,IAAqBhF,SAAQ,SAAS+mJ,GAAMmL,EAAW8B,EAAUjN,EAAKmL,EAAWh0J,EAAQ,IAAUg0J,CAAU,EAAyCrC,mBAAl9C,SAA4BtrI,GAAiD,IAA1C,IAAI8vI,EAAvZ,SAA4B9vI,GAA4H,IAArH,IAAiI4xG,EAA7HoJ,EAAKh7G,EAAM3f,QAAO,SAASmiJ,GAAM,MAAmB,QAAZA,EAAKppJ,IAAY,IAAGjD,KAAI,SAASqsJ,GAAM,OAAOA,EAAKroJ,KAAK,IAAOiL,EAAO,GAAWuF,EAAE,EAAMA,EAAEqwH,EAAKr9H,OAAOgN,IAA6B,OAAxBinH,EAAIoJ,EAAKrwH,IAAU,GAAa0kJ,EAAiBjqJ,EAAOwsH,GAAMxsH,EAAOykC,MAAWzkC,EAAOoqJ,EAAOpqJ,EAAOwsH,GAAkC,MAApBA,EAAIA,EAAIj0H,OAAO,KAAUyH,EAAOoqJ,EAAOpqJ,EAAOwsH,IAAM,OAAOxsH,CAAM,CAAoD2qJ,CAAmB/vI,GAAerV,EAAE,EAAEA,EAAEmlJ,EAAYnyJ,OAAOgN,IAAI,CAAC,IAAIm5J,EAAWhU,EAAYnlJ,GAAG,GAAqC,IAAlCm5J,EAAWlyC,IAAIjtH,QAAQ,SAAc,MAAM,OAAO,GAAqC,IAAlCm/J,EAAWlyC,IAAIjtH,QAAQ,SAAc,MAAM,MAAO,CAAC,OAAO,CAAK,EAAgvC,EAAE,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,CAAC,SAASmwE,EAAQ99E,EAAOC,GAAS,aAAa,IAAIynJ,EAAS5pE,EAAQ,eAAo7C,IAAIk7E,EAA75Cl7E,EAAQ,YAA85CstE,EAAxe,SAAoBrzE,EAAQkhF,GAAc,IAAIl+I,EAAI,CAAC,EAAEA,EAAIg9D,QAAQA,EAAQh9D,EAAIk+I,aAAaA,EAAal+I,EAAIm+I,mBAAmBn+I,EAAIk+I,aAAatqJ,KAAK,KAAK,IAAIg6C,EAAO,IAAI7lC,OAAO,QAAQ/H,EAAIm+I,mBAAmB,wBAAwBn+I,EAAIm+I,mBAAmB,KAAK,KAAyL,OAApLn+I,EAAI+3I,QAAQpL,EAAS6F,aAAa5kG,EAAO5tC,EAAIg9D,SAASh9D,EAAIo+I,0BAA0Bp+I,EAAI+3I,QAAQ3zJ,KAAI,WAAW,OAAO,CAAC,IAAG4b,EAAIq+I,gBAAgBr+I,EAAI+3I,QAAQ3zJ,KAAI,WAAW,OAAO,CAAC,IAAj2C,SAA6B4b,GAAK,SAASs+I,IAAkB,IAAIC,EAAG,CAACpM,MAAMz/I,MAAMoxC,UAAUrrC,MAAMsrC,KAAKzrC,YAAYimJ,EAAGpM,MAAMv4I,QAAQ,IAAIgE,EAAM2gJ,EAAGpM,MAAM,GAAGoM,EAAGpM,MAAM,GAAGoM,EAAGpM,MAAMr5H,QAAQlb,GAAO2gJ,EAAGpM,MAAMr6G,MAAM,IAAIs4G,EAAOmO,EAAGpM,MAAMr6G,MAA4F,OAAtFymH,EAAGnO,OAAOA,EAAOmO,EAAG/4H,OAAM,EAAKxlB,EAAI+3I,QAAQj/H,QAAQylI,GAAIv+I,EAAIq+I,gBAAgBvlI,QAAQ,GAAU9Y,EAAIo+I,0BAA0BtlI,QAAQ,EAAE,EAAgC,IAA5B9Y,EAAIg9D,QAAQpqE,QAAQ,OAAuC,IAA5BoN,EAAIg9D,QAAQpqE,QAAQ,MAAWoN,EAAIg9D,QAAQzkE,QAAQ,eAAe+lJ,GAAiB,IAAIrpJ,EAAE,IAAI8S,OAAO,kBAAkB/H,EAAIm+I,mBAAmB,MAAmY,OAA7Xn+I,EAAIg9D,QAAQzkE,QAAQtD,EAAEqpJ,GAAmQrpJ,EAAE,IAAI8S,OAAO,QAAQ/H,EAAIm+I,mBAAmB,oBAAoBn+I,EAAIg9D,QAAQzkE,QAAQtD,GAAtU,WAAwB,IAAIspJ,EAAG,CAACpM,MAAMz/I,MAAMoxC,UAAUrrC,MAAMsrC,KAAKzrC,YAAYimJ,EAAGpM,MAAMr6G,MAAM,IAAIs4G,EAAOmO,EAAGpM,MAAMr6G,MAAqF,OAA/EymH,EAAGnO,OAAOA,EAAOmO,EAAGC,MAAK,EAAKx+I,EAAI+3I,QAAQhuJ,KAAKw0J,GAAIv+I,EAAIq+I,gBAAgBt0J,KAAK,GAAUiW,EAAIo+I,0BAA0Br0J,KAAK,EAAE,IAA4GiW,CAAG,CAAmcy+I,CAAoBz+I,EAAI,IAAkC/a,EAAOC,QAAQ,SAAS83E,EAAQkhF,GAAc,OAAOvR,EAASxhJ,UAAU8yJ,EAASjhF,EAAQkhF,GAAc,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,IAAI,GAAG,CAAC,SAASn7E,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0nB,IAAIX,EAAS5pE,EAAQ,eAAmB25E,EAAa35E,EAAQ,mBAAuB27E,EAAW37E,EAAQ,iBAAqBwtE,EAAOxtE,EAAQ,YAAgB47E,EAAM57E,EAAQ,WAAe67E,EAAO77E,EAAQ,eAAmB87E,EAAQ97E,EAAQ,eAAmP99E,EAAOC,QAAQ,WAAW,SAASyvJ,EAAa33E,EAAQp1E,IAArqB,SAAyBwpD,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,EAA+hBC,CAAgBxoJ,KAAKivJ,GAAcjvJ,KAAKo5J,SAASl3J,GAASlC,KAAKq5J,WAAW,CAACC,QAAQ,CAACxK,SAAS9uJ,KAAK8uJ,YAAY9uJ,KAAKq0B,KAAKijD,EAAQ,CAA2tD,OAA1tD+vE,EAAa4H,EAAa,CAAC,CAAC7qJ,IAAI,OAAO1B,MAAM,SAAc40E,GAAS,GAAoB,iBAAVA,EAAmB,CAAC,IAAIpvE,EAAI,IAAI2iJ,EAAO2E,gBAAgB,4BAAoF,MAAxDtnJ,EAAIyuF,WAAW93F,GAAG,sCAA4CqJ,CAAG,CAAClI,KAAKs3E,QAAQA,CAAO,GAAG,CAAClzE,IAAI,UAAU1B,MAAM,SAAiB6gI,GAA8H,OAAxHvjI,KAAKujI,KAAW,MAANA,EAAWA,EAAK,CAAC,EAAEvjI,KAAK81J,aAAakB,EAAaC,uBAAuB,CAAC1zB,KAAKvjI,KAAKujI,KAAK5lD,OAAO39E,KAAK29E,SAAgB39E,IAAI,GAAG,CAACoE,IAAI,WAAW1B,MAAM,SAAkBR,GAASlC,KAAK8uJ,SAAS5sJ,EAAQ4sJ,SAAS9uJ,KAAKwtJ,QAAQtrJ,EAAQsrJ,QAAQxtJ,KAAKytJ,eAAevrJ,EAAQurJ,eAAepuJ,OAAOD,KAAK6nJ,EAAS9iJ,UAAUzF,KAAI,SAAS0F,GAAKpE,KAAKoE,GAAmB,MAAdlC,EAAQkC,GAAWlC,EAAQkC,GAAK6iJ,EAAS9iJ,SAASC,EAAI,GAAEpE,KAAK,GAAG,CAACoE,IAAI,cAAc1B,MAAM,WAAuB,OAA/nC40E,EAAmpCt3E,KAAKs3E,QAAhpCkhF,EAAwpCx4J,KAAKytJ,eAAeqC,iBAA7mCniJ,EAArCqrJ,EAAW1hF,EAAQkhF,GAAiCnG,QAAQ3zJ,KAAI,SAASwZ,GAAO,OAAOA,EAAMu0I,MAAM,EAAE,IAAUxF,EAASoF,WAAWpF,EAASuE,cAAc79I,EAAOO,KAAK,MAA9N,IAAsBopE,EAAQkhF,EAA+D7qJ,CAA8nC,GAAG,CAACvJ,IAAI,aAAa1B,MAAM,SAAoB8U,GAAKxX,KAAKwtJ,QAAQxpJ,SAAQ,SAASzE,GAAQA,EAAOwa,IAAIvC,EAAI,GAAE,GAAG,CAACpT,IAAI,QAAQ1B,MAAM,WAAyc,OAAxb1C,KAAKu5J,SAASN,EAAM9G,SAASnyJ,KAAKs3E,QAAQ,CAACrpE,KAAKjO,KAAKytJ,eAAeqC,iBAAiBgD,MAAM9yJ,KAAKytJ,eAAesC,oBAAoB/vJ,KAAKq5J,WAAW,CAACC,QAAQ,CAACC,SAASv5J,KAAKu5J,YAAYv5J,KAAK02J,MAAMuC,EAAMhiJ,MAAMjX,KAAKu5J,SAASv5J,KAAKgrJ,YAAYhrJ,KAAKq5J,WAAW,CAACC,QAAQ,CAAC5C,MAAM12J,KAAK02J,SAAS12J,KAAKuhI,OAAO23B,EAAOjiJ,MAAMjX,KAAK02J,MAAM12J,KAAKwtJ,SAASxtJ,KAAKq5J,WAAW,CAACC,QAAQ,CAAC/3B,OAAOvhI,KAAKuhI,UAAUvhI,KAAKk2J,WAAWgD,EAAOxF,UAAU1zJ,KAAKuhI,OAAOvhI,KAAKwtJ,SAAgBxtJ,IAAI,GAAG,CAACoE,IAAI,SAAS1B,MAAM,SAAgB6oC,GAAyR,OAArRvrC,KAAK8uJ,SAASvjH,EAAGvrC,KAAKq5J,WAAW,CAACC,QAAQ,CAACpD,WAAWl2J,KAAKk2J,cAAcl2J,KAAKs3E,QAAQ6hF,EAAQ,CAAC5L,SAASvtJ,KAAKk2J,WAAW3yB,KAAKvjI,KAAKujI,KAAKiqB,QAAQxtJ,KAAKwtJ,QAAQ7vE,OAAO39E,KAAK29E,OAAOmtE,WAAW9qJ,KAAK8qJ,WAAWgE,SAAS9uJ,KAAK8uJ,WAAW9uJ,KAAKq5J,WAAW,CAACC,QAAQ,CAAChiF,QAAQt3E,KAAKs3E,WAAkBt3E,IAAI,KAAYivJ,CAAY,CAAh6D,EAAm6D,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,UAAU,EAAE,cAAc,GAAG,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,KAAK,GAAG,CAAC,SAAS5xE,EAAQ99E,EAAOC,GAAS,SAASk6E,EAAUx3E,GAASlC,KAAKkC,QAAQA,GAAS,CAACs3J,QAAQ,CAAC,EAAE,CAAmzC,SAASC,IAAaz5J,KAAK05J,OAAM,CAAK,CAAC,SAAS/4J,EAAS64J,EAAQl3J,GAAMA,EAAKq3J,WAAWH,EAAQG,WAAWr3J,EAAKs3J,aAAaJ,EAAQI,YAAY,CAAq4E,SAASC,EAAS5lJ,GAAG,GAAGA,EAAG,MAAM,OAAOA,EAAE6lJ,UAAU,IAAI,UAAU7lJ,EAAE0lJ,WAAW,QAAQ1lJ,EAAE2lJ,aAAa,GAAI,CAAC,SAASG,EAAUC,EAAMnnI,EAAM3sB,GAAQ,MAAiB,iBAAP8zJ,EAAwBA,EAAM70G,OAAOtyB,EAAM3sB,GAAgB8zJ,EAAM9zJ,QAAQ2sB,EAAM3sB,GAAQ2sB,EAAc,IAAIonI,KAAKhxF,KAAK7tD,OAAO4+I,EAAMnnI,EAAM3sB,GAAQ,GAAU8zJ,CAAM,CAAiP,SAASE,EAAcC,EAAO73J,GAAU63J,EAAOC,eAAkDD,EAAOC,eAAevnE,YAAYvwF,GAApE63J,EAAO5gC,IAAI1mC,YAAYvwF,EAAmD,CAA3/Io3E,EAAUt7B,UAAUw7B,gBAAgB,SAASygF,EAAOr/B,GAAU,IAAI94H,EAAQlC,KAAKkC,QAAYo4J,EAAI,IAAIC,EAAcC,EAAWt4J,EAAQs4J,YAAY,IAAIf,EAAe7N,EAAa1pJ,EAAQ0pJ,aAAiB4N,EAAQt3J,EAAQs3J,QAAYiB,EAAav4J,EAAQw4J,OAAO,CAAC,EAAMC,EAAU,CAACC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,KAAK,IAAIC,KAAK,KAAgd,OAAxcxB,GAASgB,EAAWS,mBAAmBzB,GAASc,EAAI1O,aAA2a,SAA2BsP,EAAUV,EAAWhB,GAAS,IAAI0B,EAAU,CAAC,GAAGV,aAAsBf,EAAY,OAAOe,EAAWU,EAAUV,CAAU,CAAC,IAAI5O,EAAa,CAAC,EAAMuP,EAAWD,aAAqBE,SAA6B,SAASC,EAAMj3J,GAAK,IAAIiM,EAAG6qJ,EAAU92J,IAASiM,GAAI8qJ,IAAY9qJ,EAAqB,GAAlB6qJ,EAAUh1J,OAAU,SAAS+Y,GAAKi8I,EAAU92J,EAAI6a,EAAI,EAAEi8I,GAAUtP,EAAaxnJ,GAAKiM,GAAI,SAAS4O,GAAK5O,EAAG,WAAWjM,EAAI,MAAM6a,EAAI46I,EAASL,GAAS,GAAG,WAAW,CAAC,CAAqD,OAA3SA,EAAQA,GAAS,CAAC,EAAqO6B,EAAM,WAAWA,EAAM,SAASA,EAAM,cAAqBzP,CAAY,CAAj7B0P,CAAkB1P,EAAa4O,EAAWhB,GAASc,EAAIE,WAAWt4J,EAAQs4J,YAAYA,EAAc,aAAal4I,KAAK04G,KAAW2/B,EAAUY,KAAK,IAAIZ,EAAUp8F,KAAK,IAAIk8F,EAAa,IAAI,gCAA+BA,EAAavvH,IAAIuvH,EAAavvH,KAAK,uCAA0CmvH,EAAQC,EAAIrjJ,MAAMojJ,EAAOI,EAAaE,GAAgBL,EAAI1O,aAAaz8I,MAAM,sBAA6BqrJ,EAAWjhC,GAAG,EAAuqBkgC,EAAWr7G,UAAU,CAACo9G,cAAc,WAAWx7J,KAAKu5H,KAAI,IAAKkiC,GAAmBC,eAAe,KAAK,KAAK,MAAS17J,KAAKw5J,UAASx5J,KAAKu5H,IAAIoiC,YAAY37J,KAAKw5J,QAAQM,SAAS,EAAE/qG,aAAa,SAAS86F,EAAa+R,EAAUC,EAAM98I,GAAO,IAAIw6G,EAAIv5H,KAAKu5H,IAAQltH,EAAGktH,EAAIuiC,gBAAgBjS,EAAagS,GAAOD,GAAeG,EAAIh9I,EAAM7Y,OAAOg0J,EAAcl6J,KAAKqM,GAAIrM,KAAKo6J,eAAe/tJ,EAAGrM,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQntJ,GAAI,IAAI,IAAI6G,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAAI,CAAK22I,EAAa9qI,EAAMi9I,OAAO9oJ,GAA9B,IAAqCxQ,EAAMqc,EAAMjT,SAASoH,GAAmC2K,GAA5Bg+I,EAAM98I,EAAMk9I,SAAS/oJ,GAAYqmH,EAAI2iC,kBAAkBrS,EAAagS,IAAO77J,KAAKw5J,SAAS74J,EAASoe,EAAMo9I,WAAWjpJ,GAAG2K,GAAMA,EAAKnb,MAAMmb,EAAKu+I,UAAU15J,EAAM2J,EAAGgwJ,iBAAiBx+I,EAAK,CAAC,EAAEy+I,WAAW,SAASzS,EAAa+R,EAAUC,GAAO,IAAIU,EAAQv8J,KAAKo6J,eAA2BmC,EAAQ3iC,QAAQ55H,KAAKo6J,eAAemC,EAAQtqE,UAAU,EAAEuqE,mBAAmB,SAAS3hJ,EAAO4hJ,GAAK,EAAEC,iBAAiB,SAAS7hJ,GAAQ,EAAE8hJ,sBAAsB,SAAS9xG,EAAOlhD,GAAM,IAAIizJ,EAAI58J,KAAKu5H,IAAIsjC,4BAA4BhyG,EAAOlhD,GAAM3J,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQoD,GAAK1C,EAAcl6J,KAAK48J,EAAI,EAAEE,oBAAoB,SAASC,EAAGlqI,EAAM3sB,GAAQ,EAAE82J,WAAW,SAAShD,EAAMnnI,EAAM3sB,GAA8C,GAAtC8zJ,EAAMD,EAAUnsH,MAAM5tC,KAAK4S,WAAoB,CAAC,GAAG5S,KAAK05J,MAAO,IAAIuD,EAASj9J,KAAKu5H,IAAI2jC,mBAAmBlD,QAAgBiD,EAASj9J,KAAKu5H,IAAI3mC,eAAeonE,GAAUh6J,KAAKo6J,eAAgBp6J,KAAKo6J,eAAevnE,YAAYoqE,GAAkB,QAAQ36I,KAAK03I,IAAQh6J,KAAKu5H,IAAI1mC,YAAYoqE,GAAUj9J,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQyD,EAAS,CAAC,EAAEE,cAAc,SAASj2J,GAAM,EAAEk2J,YAAY,WAAWp9J,KAAKu5H,IAAI8jC,WAAW,EAAEpC,mBAAmB,SAASzB,IAAYx5J,KAAKw5J,QAAQA,KAASA,EAAQG,WAAW,EAAE,EAAEzpC,QAAQ,SAAS8pC,EAAMnnI,EAAM3sB,GAAQ8zJ,EAAMD,EAAUnsH,MAAM5tC,KAAK4S,WAAW,IAAI0qJ,EAAKt9J,KAAKu5H,IAAIgkC,cAAcvD,GAAOh6J,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQ8D,GAAMpD,EAAcl6J,KAAKs9J,EAAK,EAAEE,WAAW,WAAWx9J,KAAK05J,OAAM,CAAI,EAAE+D,SAAS,WAAWz9J,KAAK05J,OAAM,CAAK,EAAEgE,SAAS,SAASx2J,EAAKy2J,EAAS7D,GAAU,IAAI8D,EAAK59J,KAAKu5H,IAAIskC,eAAe,GAAGD,GAAMA,EAAKE,mBAAmB,CAAC,IAAIC,EAAGH,EAAKE,mBAAmB52J,EAAKy2J,EAAS7D,GAAU95J,KAAKw5J,SAAS74J,EAASX,KAAKw5J,QAAQuE,GAAI7D,EAAcl6J,KAAK+9J,EAAG,CAAC,EAAEC,QAAQ,SAAS7uJ,GAAO7G,QAAQC,KAAK,qBAAqB4G,EAAM0qJ,EAAS75J,KAAKw5J,SAAS,EAAErqJ,MAAM,SAASA,GAAO7G,QAAQ6G,MAAM,mBAAmBA,EAAM0qJ,EAAS75J,KAAKw5J,SAAS,EAAEyE,WAAW,SAAS9uJ,GAA2E,MAApE7G,QAAQ6G,MAAM,wBAAwBA,EAAM0qJ,EAAS75J,KAAKw5J,UAAgBrqJ,CAAK,GAA8T,+JAA+J0D,QAAQ,QAAO,SAASzO,GAAKq1J,EAAWr7G,UAAUh6C,GAAK,WAAW,OAAO,IAAI,CAAC,IAA6I,IAAIm2J,EAAUl9E,EAAQ,SAASk9E,UAAckB,EAAkBj8J,EAAQi8J,kBAAkBp+E,EAAQ,SAASo+E,kBAAkBj8J,EAAQorJ,cAAcvtE,EAAQ,SAASutE,cAAcprJ,EAAQk6E,UAAUA,CAAS,EAAE,CAAC,QAAQ,GAAG,QAAQ,KAAK,GAAG,CAAC,SAAS2D,EAAQ99E,EAAOC,GAAS,SAAS++D,EAAKmwB,EAAIwvE,GAAM,IAAI,IAAIl8I,KAAK0sE,EAAKwvE,EAAKl8I,GAAG0sE,EAAI1sE,EAAG,CAAC,SAASm8I,EAAS1/I,EAAM2/I,GAAO,IAAIC,EAAG5/I,EAAM2/B,UAAU,GAAG/+C,OAAOswE,OAAO,CAAC,IAAI2uF,EAAIj/J,OAAOswE,OAAOyuF,EAAMhgH,WAAWigH,EAAGE,UAAUD,CAAG,CAAC,KAAKD,aAAcD,GAAO,CAAC,SAASr+H,IAAI,CAACA,EAAEqe,UAAUggH,EAAMhgH,UAAkBmgB,EAAK8/F,EAAbt+H,EAAE,IAAIA,GAAathB,EAAM2/B,UAAUigH,EAAGt+H,CAAC,CAAIs+H,EAAG1+J,aAAa8e,IAAwB,mBAAPA,GAAmBnW,QAAQ6G,MAAM,gBAAgBsP,GAAO4/I,EAAG1+J,YAAY8e,EAAM,CAAC,IAA8C+/I,EAAS,CAAC,EAAMC,EAAaD,EAASC,aAAa,EAAMC,EAAeF,EAASE,eAAe,EAAMC,EAAUH,EAASG,UAAU,EAAMC,EAAmBJ,EAASI,mBAAmB,EAAMC,EAAsBL,EAASK,sBAAsB,EAAMC,EAAYN,EAASM,YAAY,EAAMC,EAA4BP,EAASO,4BAA4B,EAAMC,EAAaR,EAASQ,aAAa,EAAMC,EAAcT,EAASS,cAAc,EAAMC,EAAmBV,EAASU,mBAAmB,GAAOC,EAAuBX,EAASW,uBAAuB,GAAOC,EAAcZ,EAASY,cAAc,GAAOC,EAAc,CAAC,EAAMC,EAAiB,CAAC,EAAwMC,GAAnLF,EAAcG,gBAAgBF,EAAiB,GAAG,mBAAmB,GAA0BD,EAAcI,oBAAoBH,EAAiB,GAAG,uBAAuB,GAA6BD,EAAcE,uBAAuBD,EAAiB,GAAG,0BAA0B,IAAkbI,GAAxZL,EAAcM,oBAAoBL,EAAiB,GAAG,iBAAiB,GAA6BD,EAAcO,uBAAuBN,EAAiB,GAAG,oBAAoB,GAA2BD,EAAcQ,qBAAqBP,EAAiB,GAAG,kBAAkB,GAAmCD,EAAcS,6BAA6BR,EAAiB,GAAG,0BAA0B,GAAqBD,EAAcK,eAAeJ,EAAiB,GAAG,YAAY,IAAqGS,GAA5EV,EAAcW,mBAAmBV,EAAiB,GAAG,gBAAgB,GAA2BD,EAAcU,qBAAqBT,EAAiB,IAAI,mBAAmB,KAAye,SAASW,EAAa9gK,EAAK8R,GAAS,GAAGA,aAAmB/R,MAAO,IAAIiQ,EAAM8B,OAAa9B,EAAMnP,KAAKd,MAAMm/C,KAAKr+C,KAAKs/J,EAAiBngK,IAAOa,KAAKiR,QAAQquJ,EAAiBngK,GAASD,MAAMghK,mBAAkBhhK,MAAMghK,kBAAkBlgK,KAAKigK,GAAgF,OAAlE9wJ,EAAMhQ,KAAKA,EAAQ8R,IAAQjR,KAAKiR,QAAQjR,KAAKiR,QAAQ,KAAKA,GAAe9B,CAAK,CAAyE,SAASgxJ,IAAW,CAA+N,SAASC,EAAa99J,EAAKmC,GAASzE,KAAKqgK,MAAM/9J,EAAKtC,KAAKsgK,SAAS77J,EAAQ87J,EAAgBvgK,KAAK,CAAC,SAASugK,EAAgBx2J,GAAM,IAAIy2J,EAAIz2J,EAAKs2J,MAAMI,MAAM12J,EAAKs2J,MAAMK,cAAcD,KAAK,GAAG12J,EAAK02J,MAAMD,EAAI,CAAC,IAAIG,EAAG52J,EAAKu2J,SAASv2J,EAAKs2J,OAAOO,GAAQ72J,EAAK,SAAS42J,EAAGz6J,QAAQq4D,EAAKoiG,EAAG52J,GAAMA,EAAK02J,KAAKD,CAAG,CAAC,CAA+G,SAASK,IAAe,CAAC,SAASC,EAAe/2J,EAAKzH,GAAwB,IAAlB,IAAI4Q,EAAEnJ,EAAK7D,OAAagN,KAAK,GAAGnJ,EAAKmJ,KAAK5Q,EAAM,OAAO4Q,CAAG,CAAC,SAAS6tJ,EAAc10J,EAAGtC,EAAKi3J,EAAQC,GAAiG,GAArFA,EAASl3J,EAAK+2J,EAAe/2J,EAAKk3J,IAAUD,EAAaj3J,EAAKA,EAAK7D,UAAU86J,EAAW30J,EAAG,CAAC20J,EAAQE,aAAa70J,EAAG,IAAIktH,EAAIltH,EAAGq0J,cAAiBnnC,IAAK0nC,GAASE,EAAmB5nC,EAAIltH,EAAG40J,GAAyvI,SAAyB1nC,EAAIltH,EAAG20J,GAASznC,GAAKA,EAAIknC,OAA0C,iCAA5BO,EAAQnX,eAAqDx9I,EAAG+0J,OAAOJ,EAAQnmJ,OAAOmmJ,EAAQpF,UAAU,IAAIoF,EAAQt+J,MAAM,CAA16I2+J,CAAgB9nC,EAAIltH,EAAG20J,GAAS,CAAC,CAAC,SAASM,EAAiBj1J,EAAGtC,EAAK8T,GAAM,IAAI3K,EAAE4tJ,EAAe/2J,EAAK8T,GAAM,KAAG3K,GAAG,GAAgM,MAAM+sJ,EAAaP,EAAc,IAAIxgK,MAAMmN,EAAGutH,QAAQ,IAAI/7G,IAA3N,IAA5B,IAAI0jJ,EAAUx3J,EAAK7D,OAAO,EAAQgN,EAAEquJ,GAAWx3J,EAAKmJ,GAAGnJ,IAAOmJ,GAAyB,GAAtBnJ,EAAK7D,OAAOq7J,EAAal1J,EAAG,CAAC,IAAIktH,EAAIltH,EAAGq0J,cAAiBnnC,IAAK4nC,EAAmB5nC,EAAIltH,EAAGwR,GAAMA,EAAKqjJ,aAAa,KAAK,CAAwE,CAAioC,SAASzF,EAAkB+F,GAA4B,GAAlBxhK,KAAKyhK,UAAU,CAAC,EAAKD,EAAU,IAAI,IAAIE,KAAWF,EAAUxhK,KAAKyhK,UAAUD,EAASE,EAAU,CAAsrB,SAASC,IAAO,CAA6kD,SAASC,EAAYt+J,GAAG,OAAU,KAAHA,EAAQ,OAAW,KAAHA,GAAQ,SAAW,KAAHA,GAAQ,SAAY,KAAHA,GAAQ,UAAU,KAAKA,EAAEu+J,aAAa,GAAG,CAAmD,SAASC,EAAWx/J,EAAKkP,GAAU,GAAGA,EAASlP,GAAO,OAAO,EAAK,GAAGA,EAAKA,EAAK2hH,WAAY,GAAG,GAAG69C,EAAWx/J,EAAKkP,GAAW,OAAO,QAAYlP,EAAKA,EAAKy/J,YAAa,CAAC,SAASC,IAAW,CAA4L,SAASb,EAAmB5nC,EAAIltH,EAAG20J,EAAQjmJ,GAAQw+G,GAAKA,EAAIknC,OAA0C,iCAA5BO,EAAQnX,qBAA4Dx9I,EAAG+0J,OAAOJ,EAAQnmJ,OAAOmmJ,EAAQpF,UAAU,GAAI,CAAC,SAASqG,EAAe1oC,EAAIltH,EAAG61J,GAAU,GAAG3oC,GAAKA,EAAIknC,KAAK,CAAClnC,EAAIknC,OAAO,IAAI0B,EAAG91J,EAAG+1J,WAAW,GAAGF,EAAUC,EAAGA,EAAGj8J,UAAUg8J,MAAa,CAAiC,IAAhC,IAAIzsE,EAAMppF,EAAG43G,WAAe/wG,EAAE,EAAQuiF,GAAO0sE,EAAGjvJ,KAAKuiF,EAAMA,EAAMA,EAAMssE,YAAYI,EAAGj8J,OAAOgN,CAAC,CAAC,CAAC,CAAC,SAASmvJ,EAAapwE,EAAWwD,GAAO,IAAI6sE,EAAS7sE,EAAM8sE,gBAAoBn3I,EAAKqqE,EAAMssE,YAAiN,OAAlMO,EAAUA,EAASP,YAAY32I,EAAU6mE,EAAWgyB,WAAW74F,EAAQA,EAAMA,EAAKm3I,gBAAgBD,EAAcrwE,EAAWuwE,UAAUF,EAASL,EAAehwE,EAAWyuE,cAAczuE,GAAmBwD,CAAK,CAAC,SAASgtE,EAAcxwE,EAAWiwE,EAASQ,GAAW,IAAIC,EAAGT,EAASjwE,WAA2C,GAA7B0wE,GAAIA,EAAGzwE,YAAYgwE,GAAaA,EAASU,WAAWzD,EAAuB,CAAC,IAAI0D,EAASX,EAASj+C,WAAW,GAAa,MAAV4+C,EAAgB,OAAOX,EAAS,IAAIY,EAAQZ,EAASM,SAAS,MAAMK,EAASC,EAAQZ,EAAS,IAAIa,EAAIL,EAAUA,EAAUH,gBAAgBtwE,EAAWuwE,UAAUK,EAASN,gBAAgBQ,EAAID,EAAQf,YAAYW,EAAaK,EAAKA,EAAIhB,YAAYc,EAAc5wE,EAAWgyB,WAAW4+C,EAAuB,MAAXH,EAAiBzwE,EAAWuwE,UAAUM,EAAaJ,EAAUH,gBAAgBO,EAAQ,GAAGD,EAAS5wE,WAAWA,QAAiB4wE,IAAWC,IAAUD,EAASA,EAASd,cAAwK,OAA1JE,EAAehwE,EAAWyuE,eAAezuE,EAAWA,GAAeiwE,EAASU,UAAUzD,IAAwB+C,EAASj+C,WAAWi+C,EAASM,UAAU,MAAYN,CAAQ,CAA8tG,SAASc,IAAUhjK,KAAKohK,OAAO,CAAC,CAAC,CAAq2E,SAAS6B,IAAO,CAA4D,SAASC,IAAgB,CAAgqB,SAASC,IAAO,CAA0Y,SAASC,IAAU,CAA+F,SAASC,IAAe,CAAqH,SAASC,IAAe,CAAgF,SAASC,IAAW,CAAmE,SAASC,IAAS,CAA6D,SAASC,IAAkB,CAAyF,SAASC,IAAmB,CAAqJ,SAASC,IAAwB,CAA2G,SAAS/Y,IAAgB,CAAqL,SAASgZ,EAAsBC,EAAOC,GAAY,IAAIC,EAAI,GAAOC,EAAuB,GAAfhkK,KAAK4iK,SAAY5iK,KAAKikK,gBAAgBjkK,KAAS6a,EAAOmpJ,EAAQnpJ,OAAW4hJ,EAAIuH,EAAQna,aAAa,GAAG4S,GAAa,MAAR5hJ,GAA8D,OAA5CA,EAAOmpJ,EAAQE,aAAazH,IAAsB,IAAI0H,EAAkB,CAAC,CAACC,UAAU3H,EAAI5hJ,OAAO,OAAwE,OAAhEuwI,GAAkBprJ,KAAK+jK,EAAIF,EAAOC,EAAWK,GAA0BJ,EAAI71J,KAAK,GAAG,CAAC,SAASm2J,GAAoB/hK,EAAKgiK,EAAOH,GAAmB,IAAItpJ,EAAOvY,EAAKuY,QAAQ,GAAO4hJ,EAAIn6J,EAAKunJ,aAAa,IAAIhvI,IAAS4hJ,EAAK,OAAO,EAAM,GAAY,QAAT5hJ,GAAsB,yCAAN4hJ,GAAmD,iCAALA,EAAsC,OAAO,EAAqC,IAA/B,IAAIvpJ,EAAEixJ,EAAkBj+J,OAAagN,KAAI,CAAC,IAAIqxJ,EAAGJ,EAAkBjxJ,GAAG,GAAGqxJ,EAAG1pJ,QAAQA,EAAQ,OAAO0pJ,EAAGH,WAAW3H,CAAI,CAAC,OAAO,CAAI,CAAC,SAASrR,GAAkB9oJ,EAAKyhK,EAAIO,EAAOR,EAAWK,GAAmB,GAAGL,EAAW,CAAuB,KAAtBxhK,EAAKwhK,EAAWxhK,IAAqE,OAAtD,GAAgB,iBAANA,EAA+B,YAAfyhK,EAAI1/J,KAAK/B,EAA0B,CAAC,OAAOA,EAAKsgK,UAAU,KAAKnE,EAAiB0F,IAAkBA,EAAkB,IAA8BA,EAAkBj+J,OAA7C,IAAwD6Y,EAAMzc,EAAK2gB,WAAe84I,EAAIh9I,EAAM7Y,OAAWuvF,EAAMnzF,EAAK2hH,WAAeC,EAAS5hH,EAAKs3H,QAAQ0qC,EAA7/kB,iCAA6glBhiK,EAAKunJ,cAAcya,EAAOP,EAAI1/J,KAAK,IAAI6/G,GAAU,IAAI,IAAIhxG,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAA4C,UAAnC2K,EAAKkB,EAAM/Q,KAAKkF,IAAW2H,OAAiBspJ,EAAkB9/J,KAAK,CAACwW,OAAOgD,EAAK+9I,UAAUwI,UAAUvmJ,EAAKnb,QAA+B,SAAfmb,EAAKqmG,UAAmBigD,EAAkB9/J,KAAK,CAACwW,OAAO,GAAGupJ,UAAUvmJ,EAAKnb,QAAS,IAAQwQ,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAAI,CAAC,IAAI2K,EAAmB,GAAGwmJ,GAAtBxmJ,EAAKkB,EAAM/Q,KAAKkF,GAA+BoxJ,EAAOH,GAAmB,CAAC,IAAItpJ,EAAOgD,EAAKhD,QAAQ,GAAO4hJ,EAAI5+I,EAAKgsI,aAAiB0a,EAAG1pJ,EAAO,UAAUA,EAAO,SAASkpJ,EAAI1/J,KAAKkgK,EAAG,KAAK9H,EAAI,KAAK0H,EAAkB9/J,KAAK,CAACwW,OAAOA,EAAOupJ,UAAU3H,GAAK,CAACrR,GAAkBvtI,EAAKkmJ,EAAIO,EAAOR,EAAWK,EAAkB,CAAqO,GAAjOE,GAAoB/hK,EAAKgiK,EAAOH,KAAwBtpJ,EAAOvY,EAAKuY,QAAQ,GAAO4hJ,EAAIn6J,EAAKunJ,aAAiB0a,EAAG1pJ,EAAO,UAAUA,EAAO,SAASkpJ,EAAI1/J,KAAKkgK,EAAG,KAAK9H,EAAI,KAAK0H,EAAkB9/J,KAAK,CAACwW,OAAOA,EAAOupJ,UAAU3H,KAAShnE,GAAO6uE,IAAS,mCAAmChiJ,KAAK4hG,GAAU,CAAe,GAAd6/C,EAAI1/J,KAAK,KAAQigK,GAAQ,YAAYhiJ,KAAK4hG,GAAW,KAAMzuB,GAAUA,EAAM9rF,KAAMo6J,EAAI1/J,KAAKoxF,EAAM9rF,MAAWyhJ,GAAkB31D,EAAMsuE,EAAIO,EAAOR,EAAWK,GAAmB1uE,EAAMA,EAAMssE,iBAAkB,KAAMtsE,GAAO21D,GAAkB31D,EAAMsuE,EAAIO,EAAOR,EAAWK,GAAmB1uE,EAAMA,EAAMssE,YAAagC,EAAI1/J,KAAK,KAAK6/G,EAAS,IAAI,MAAM6/C,EAAI1/J,KAAK,MAAM,OAAO,KAAK46J,EAAc,KAAKE,EAAiD,IAAtB1pE,EAAMnzF,EAAK2hH,WAAiBxuB,GAAO21D,GAAkB31D,EAAMsuE,EAAIO,EAAOR,EAAWK,GAAmB1uE,EAAMA,EAAMssE,YAAY,OAAO,KAAKrD,EAAe,OAAOqF,EAAI1/J,KAAK,IAAI/B,EAAK4E,KAAK,KAAK5E,EAAKI,MAAMmQ,QAAQ,SAAS+uJ,GAAa,KAAK,KAAKjD,EAAU,OAAOoF,EAAI1/J,KAAK/B,EAAKqH,KAAKkJ,QAAQ,QAAQ+uJ,IAAc,KAAKhD,EAAmB,OAAOmF,EAAI1/J,KAAK,YAAY/B,EAAKqH,KAAK,OAAO,KAAKq1J,EAAa,OAAO+E,EAAI1/J,KAAK,UAAU/B,EAAKqH,KAAK,UAAU,KAAKu1J,EAAmB,IAAIsF,EAAMliK,EAAKq7J,SAAa8G,EAAMniK,EAAKw3J,SAA0C,GAAjCiK,EAAI1/J,KAAK,aAAa/B,EAAK4E,MAASs9J,EAAOT,EAAI1/J,KAAK,YAAYmgK,GAAUC,GAAc,KAAPA,GAAYV,EAAI1/J,KAAK,MAAMogK,GAAOV,EAAI1/J,KAAK,WAAW,GAAGogK,GAAc,KAAPA,EAAYV,EAAI1/J,KAAK,YAAYogK,EAAM,UAAU,CAAC,IAAItxJ,EAAI7Q,EAAKoiK,eAAkBvxJ,GAAK4wJ,EAAI1/J,KAAK,KAAK8O,EAAI,KAAK4wJ,EAAI1/J,KAAK,IAAI,CAAC,OAAO,KAAK06J,EAA4B,OAAOgF,EAAI1/J,KAAK,KAAK/B,EAAKuoD,OAAO,IAAIvoD,EAAKqH,KAAK,MAAM,KAAKk1J,EAAsB,OAAOkF,EAAI1/J,KAAK,IAAI/B,EAAK4hH,SAAS,KAAK,QAAQ6/C,EAAI1/J,KAAK,KAAK/B,EAAK4hH,UAAU,CAAC,SAASygD,GAAWprC,EAAIj3H,EAAK8kB,GAAM,IAAIw9I,EAAM,OAAOtiK,EAAKsgK,UAAU,KAAKnE,GAAamG,EAAMtiK,EAAKuiK,WAAU,IAAanE,cAAcnnC,EAAI,KAAK4lC,EAAuB,MAAM,KAAKT,EAAet3I,GAAK,EAAgG,GAAjFw9I,IAAOA,EAAMtiK,EAAKuiK,WAAU,IAAOD,EAAMlE,cAAcnnC,EAAIqrC,EAAM3yE,WAAW,KAAQ7qE,EAAgC,IAA1B,IAAIquE,EAAMnzF,EAAK2hH,WAAiBxuB,GAAOmvE,EAAM/xE,YAAY8xE,GAAWprC,EAAI9jC,EAAMruE,IAAOquE,EAAMA,EAAMssE,YAAa,OAAO6C,CAAK,CAAC,SAASC,GAAUtrC,EAAIj3H,EAAK8kB,GAAM,IAAIw9I,EAAM,IAAItiK,EAAK3C,YAAY,IAAI,IAAIukD,KAAK5hD,EAAK,CAAC,IAAI2Q,EAAE3Q,EAAK4hD,GAAgB,iBAAHjxC,GAAgBA,GAAG2xJ,EAAM1gH,KAAI0gH,EAAM1gH,GAAGjxC,EAAG,CAA2E,OAAvE3Q,EAAK8/J,aAAYwC,EAAMxC,WAAW,IAAIjC,GAASyE,EAAMlE,cAAcnnC,EAAWqrC,EAAMhC,UAAU,KAAKnE,EAAa,IAAI1/I,EAAMzc,EAAK2gB,WAAe6hJ,EAAOF,EAAM3hJ,WAAW,IAAI49I,EAAiB9E,EAAIh9I,EAAM7Y,OAAO4+J,EAAOC,cAAcH,EAAM,IAAI,IAAI1xJ,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAAK0xJ,EAAMvI,iBAAiBwI,GAAUtrC,EAAIx6G,EAAM/Q,KAAKkF,IAAG,IAAO,MAAM,KAAKwrJ,EAAet3I,GAAK,EAAK,GAAGA,EAAgC,IAA1B,IAAIquE,EAAMnzF,EAAK2hH,WAAiBxuB,GAAOmvE,EAAM/xE,YAAYgyE,GAAUtrC,EAAI9jC,EAAMruE,IAAOquE,EAAMA,EAAMssE,YAAa,OAAO6C,CAAK,CAAC,SAAShE,GAAQ57J,EAAOZ,EAAI1B,GAAOsC,EAAOZ,GAAK1B,CAAK,CAA3qoB28J,EAAc2F,mBAAmB1F,EAAiB,IAAI,gBAAgB,IAAmBD,EAAc4F,YAAY3F,EAAiB,IAAI,eAAe,IAAiCD,EAAc6F,0BAA0B5F,EAAiB,IAAI,uBAAuB,IAAsBD,EAAc8F,eAAe7F,EAAiB,IAAI,oBAAoB,IAA2BD,EAAc+F,oBAAoB9F,EAAiB,IAAI,iBAAiB,IAAwUW,EAAa7hH,UAAUl/C,MAAMk/C,UAAUmgB,EAAK8gG,EAAcY,GAAmCE,EAAS/hH,UAAU,CAACl4C,OAAO,EAAE8H,KAAK,SAASpC,GAAO,OAAO5L,KAAK4L,IAAQ,IAAI,EAAEyI,SAAS,SAASiwJ,EAAOR,GAAY,IAAI,IAAIC,EAAI,GAAG7wJ,EAAE,EAAEA,EAAElT,KAAKkG,OAAOgN,IAAKk4I,GAAkBprJ,KAAKkT,GAAG6wJ,EAAIO,EAAOR,GAAY,OAAOC,EAAI71J,KAAK,GAAG,GAA2SkyJ,EAAahiH,UAAUpwC,KAAK,SAASkF,GAAyB,OAAtBqtJ,EAAgBvgK,MAAaA,KAAKkT,EAAE,EAAEirJ,EAASiC,EAAaD,GAAuuBU,EAAaziH,UAAU,CAACl4C,OAAO,EAAE8H,KAAKmyJ,EAAS/hH,UAAUpwC,KAAKq3J,aAAa,SAASjhK,GAAuB,IAAlB,IAAI8O,EAAElT,KAAKkG,OAAagN,KAAI,CAAC,IAAI2K,EAAK7d,KAAKkT,GAAG,GAAG2K,EAAKqmG,UAAU9/G,EAAK,OAAOyZ,CAAK,CAAC,EAAEynJ,aAAa,SAASznJ,GAAM,IAAIxR,EAAGwR,EAAKqjJ,aAAa,GAAG70J,GAAIA,GAAIrM,KAAK+kK,cAAe,MAAM,IAAI9E,EAAaF,GAAqB,IAAIkB,EAAQjhK,KAAKqlK,aAAaxnJ,EAAKqmG,UAA8D,OAApD68C,EAAc/gK,KAAK+kK,cAAc/kK,KAAK6d,EAAKojJ,GAAgBA,CAAO,EAAEsE,eAAe,SAAS1nJ,GAAM,IAAyBojJ,EAArB50J,EAAGwR,EAAKqjJ,aAAqB,GAAG70J,GAAIA,GAAIrM,KAAK+kK,cAAe,MAAM,IAAI9E,EAAaF,GAAuI,OAAlHkB,EAAQjhK,KAAKwlK,eAAe3nJ,EAAKgsI,aAAahsI,EAAK+9I,WAAWmF,EAAc/gK,KAAK+kK,cAAc/kK,KAAK6d,EAAKojJ,GAAgBA,CAAO,EAAEwE,gBAAgB,SAASrhK,GAAK,IAAIyZ,EAAK7d,KAAKqlK,aAAajhK,GAAoD,OAA/Ck9J,EAAiBthK,KAAK+kK,cAAc/kK,KAAK6d,GAAaA,CAAI,EAAE6nJ,kBAAkB,SAAS7b,EAAa+R,GAAW,IAAI/9I,EAAK7d,KAAKwlK,eAAe3b,EAAa+R,GAA0D,OAA/C0F,EAAiBthK,KAAK+kK,cAAc/kK,KAAK6d,GAAaA,CAAI,EAAE2nJ,eAAe,SAAS3b,EAAa+R,GAA6B,IAAlB,IAAI1oJ,EAAElT,KAAKkG,OAAagN,KAAI,CAAC,IAAI5Q,EAAKtC,KAAKkT,GAAG,GAAG5Q,EAAKs5J,WAAWA,GAAWt5J,EAAKunJ,cAAcA,EAAc,OAAOvnJ,CAAK,CAAC,OAAO,IAAI,GAAuIm5J,EAAkBr9G,UAAU,CAACunH,WAAW,SAASjE,EAAQp+I,GAAS,IAAIsiJ,EAAS5lK,KAAKyhK,UAAUC,EAAQrpJ,eAAe,SAAGutJ,GAAYtiJ,KAASA,KAAWsiJ,GAAyC,EAAElK,eAAe,SAAS7R,EAAagc,EAAcC,GAAS,IAAIvsC,EAAI,IAAIyoC,EAAsH,GAA7GzoC,EAAIskC,eAAe79J,KAAKu5H,EAAI6oC,WAAW,IAAIjC,EAAS5mC,EAAIusC,QAAQA,EAAWA,GAASvsC,EAAI1mC,YAAYizE,GAAYD,EAAc,CAAC,IAAIxhE,EAAKk1B,EAAIuiC,gBAAgBjS,EAAagc,GAAetsC,EAAI1mC,YAAYwR,EAAK,CAAC,OAAOk1B,CAAG,EAAEukC,mBAAmB,SAAS+H,EAAclI,EAAS7D,GAAU,IAAIx3J,EAAK,IAAIghK,EAA+G,OAAlGhhK,EAAK4E,KAAK2+J,EAAcvjK,EAAK4hH,SAAS2hD,EAAcvjK,EAAKq7J,SAASA,EAASr7J,EAAKw3J,SAASA,EAAgBx3J,CAAI,GAAoBq/J,EAAKvjH,UAAU,CAAC6lE,WAAW,KAAKu+C,UAAU,KAAKD,gBAAgB,KAAKR,YAAY,KAAK9+I,WAAW,KAAKgvE,WAAW,KAAKmwE,WAAW,KAAK1B,cAAc,KAAKtE,UAAU,KAAKvS,aAAa,KAAKhvI,OAAO,KAAK+gJ,UAAU,KAAKmK,aAAa,SAAS7D,EAAS8D,GAAU,OAAOvD,EAAcziK,KAAKkiK,EAAS8D,EAAS,EAAEC,aAAa,SAAS/D,EAASgE,GAAUlmK,KAAK+lK,aAAa7D,EAASgE,GAAaA,GAAUlmK,KAAKkyF,YAAYg0E,EAAU,EAAEh0E,YAAY,SAASg0E,GAAU,OAAO7D,EAAariK,KAAKkmK,EAAS,EAAErzE,YAAY,SAASqvE,GAAU,OAAOliK,KAAK+lK,aAAa7D,EAAS,KAAK,EAAEiE,cAAc,WAAW,OAAwB,MAAjBnmK,KAAKikH,UAAgB,EAAE4gD,UAAU,SAASz9I,GAAM,OAAOy9I,GAAU7kK,KAAK0gK,eAAe1gK,KAAKA,KAAKonB,EAAK,EAAEi2I,UAAU,WAAqC,IAA1B,IAAI5nE,EAAMz1F,KAAKikH,WAAiBxuB,GAAM,CAAC,IAAIrqE,EAAKqqE,EAAMssE,YAAe32I,GAAMA,EAAKw3I,UAAUjE,GAAWlpE,EAAMmtE,UAAUjE,GAAW3+J,KAAKkyF,YAAY9mE,GAAMqqE,EAAM2wE,WAAWh7I,EAAKzhB,QAAW8rF,EAAM4nE,YAAY5nE,EAAMrqE,EAAK,CAAC,EAAEi7I,YAAY,SAAS3E,EAAQp+I,GAAS,OAAOtjB,KAAK0gK,cAAc7C,eAAe8H,WAAWjE,EAAQp+I,EAAQ,EAAEgjJ,cAAc,WAAW,OAAOtmK,KAAKijB,WAAW/c,OAAO,CAAC,EAAEg+J,aAAa,SAASra,GAA0B,IAAZ,IAAIx9I,EAAGrM,KAAWqM,GAAG,CAAC,IAAI3N,EAAI2N,EAAG+0J,OAAO,GAAG1iK,EAAK,IAAI,IAAIwlD,KAAKxlD,EAAK,GAAGA,EAAIwlD,IAAI2lG,EAAc,OAAO3lG,EAAI73C,EAAGA,EAAGu2J,UAAUlE,EAAeryJ,EAAGq0J,cAAcr0J,EAAG4lF,UAAU,CAAC,OAAO,IAAI,EAAEs0E,mBAAmB,SAAS1rJ,GAAoB,IAAZ,IAAIxO,EAAGrM,KAAWqM,GAAG,CAAC,IAAI3N,EAAI2N,EAAG+0J,OAAO,GAAG1iK,GAAQmc,KAAUnc,EAAK,OAAOA,EAAImc,GAASxO,EAAGA,EAAGu2J,UAAUlE,EAAeryJ,EAAGq0J,cAAcr0J,EAAG4lF,UAAU,CAAC,OAAO,IAAI,EAAEu0E,mBAAmB,SAAS3c,GAAyD,OAAe,MAA/C7pJ,KAAKkkK,aAAara,EAAiC,GAA6HtrF,EAAKigG,EAASmD,GAAMpjG,EAAKigG,EAASmD,EAAKvjH,WAA02E4jH,EAAS5jH,UAAU,CAAC8lE,SAAS,YAAY0+C,SAAS3D,EAAc6G,QAAQ,KAAK7B,gBAAgB,KAAKxD,KAAK,EAAEsF,aAAa,SAAS7D,EAAS8D,GAAU,GAAG9D,EAASU,UAAUzD,EAAuB,CAA+B,IAA9B,IAAI1pE,EAAMysE,EAASj+C,WAAiBxuB,GAAM,CAAC,IAAIrqE,EAAKqqE,EAAMssE,YAAY/hK,KAAK+lK,aAAatwE,EAAMuwE,GAAUvwE,EAAMrqE,CAAI,CAAC,OAAO82I,CAAQ,CAA+F,OAArE,MAAtBliK,KAAKikK,iBAAuB/B,EAASU,UAAUnE,IAAcz+J,KAAKikK,gBAAgB/B,GAAgBO,EAAcziK,KAAKkiK,EAAS8D,GAAU9D,EAASxB,cAAc1gK,KAAKkiK,CAAQ,EAAEhwE,YAAY,SAASg0E,GAAuE,OAA1DlmK,KAAKikK,iBAAiBiC,IAAUlmK,KAAKikK,gBAAgB,MAAY5B,EAAariK,KAAKkmK,EAAS,EAAEvB,WAAW,SAAS8B,EAAar/I,GAAM,OAAOu9I,GAAW3kK,KAAKymK,EAAar/I,EAAK,EAAE6gH,eAAe,SAASppI,GAAI,IAAI6nK,EAAI,KAA6I,OAAxI5E,EAAW9hK,KAAKikK,iBAAgB,SAAS3hK,GAAM,GAAGA,EAAKsgK,UAAUnE,GAAiBn8J,EAAK4pF,aAAa,OAAOrtF,EAAa,OAAT6nK,EAAIpkK,GAAY,CAAM,IAAUokK,CAAG,EAAEh4H,cAAc,SAASkrF,GAAS,IAAIt3H,EAAK,IAAI0gK,EAA4K,OAApK1gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK4hH,SAAS0V,EAAQt3H,EAAKs3H,QAAQA,EAAQt3H,EAAK8/J,WAAW,IAAIjC,GAAmB79J,EAAK2gB,WAAW,IAAI49I,GAAmBkE,cAAcziK,EAAYA,CAAI,EAAEqkK,uBAAuB,WAAW,IAAIrkK,EAAK,IAAIohK,EAAsE,OAArDphK,EAAKo+J,cAAc1gK,KAAKsC,EAAK8/J,WAAW,IAAIjC,EAAgB79J,CAAI,EAAEswF,eAAe,SAASjpF,GAAM,IAAIrH,EAAK,IAAI6gK,EAAmD,OAA9C7gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK8jK,WAAWz8J,GAAarH,CAAI,EAAEi7J,cAAc,SAAS5zJ,GAAM,IAAIrH,EAAK,IAAI8gK,EAAsD,OAA9C9gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK8jK,WAAWz8J,GAAarH,CAAI,EAAE46J,mBAAmB,SAASvzJ,GAAM,IAAIrH,EAAK,IAAI+gK,EAA2D,OAA9C/gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK8jK,WAAWz8J,GAAarH,CAAI,EAAEu6J,4BAA4B,SAAShyG,EAAOlhD,GAAM,IAAIrH,EAAK,IAAIqhK,EAA4G,OAAtFrhK,EAAKo+J,cAAc1gK,KAAKsC,EAAKs3H,QAAQt3H,EAAKuoD,OAAOA,EAAOvoD,EAAK85J,UAAU95J,EAAKqH,KAAKA,EAAYrH,CAAI,EAAEskK,gBAAgB,SAAS1/J,GAAM,IAAI5E,EAAK,IAAI2gK,EAAuG,OAAlG3gK,EAAKo+J,cAAc1gK,KAAKsC,EAAK4E,KAAKA,EAAK5E,EAAK4hH,SAASh9G,EAAK5E,EAAKs5J,UAAU10J,EAAK5E,EAAKukK,WAAU,EAAYvkK,CAAI,EAAEwkK,sBAAsB,SAAS5/J,GAAM,IAAI5E,EAAK,IAAImhK,EAA2D,OAA3CnhK,EAAKo+J,cAAc1gK,KAAKsC,EAAK4hH,SAASh9G,EAAY5E,CAAI,EAAEw5J,gBAAgB,SAASjS,EAAagc,GAAe,IAAIvjK,EAAK,IAAI0gK,EAAY+D,EAAGlB,EAAcr9I,MAAM,KAASzJ,EAAMzc,EAAK2gB,WAAW,IAAI49I,EAA2Q,OAA9Pv+J,EAAK8/J,WAAW,IAAIjC,EAAS79J,EAAKo+J,cAAc1gK,KAAKsC,EAAK4hH,SAAS2hD,EAAcvjK,EAAKs3H,QAAQisC,EAAcvjK,EAAKunJ,aAAaA,EAA2B,GAAXkd,EAAG7gK,QAAW5D,EAAKuY,OAAOksJ,EAAG,GAAGzkK,EAAKs5J,UAAUmL,EAAG,IAAQzkK,EAAKs5J,UAAUiK,EAAc9mJ,EAAMgmJ,cAAcziK,EAAYA,CAAI,EAAE45J,kBAAkB,SAASrS,EAAagc,GAAe,IAAIvjK,EAAK,IAAI2gK,EAAS8D,EAAGlB,EAAcr9I,MAAM,KAA8N,OAAzNlmB,EAAKo+J,cAAc1gK,KAAKsC,EAAK4hH,SAAS2hD,EAAcvjK,EAAK4E,KAAK2+J,EAAcvjK,EAAKunJ,aAAaA,EAAavnJ,EAAKukK,WAAU,EAAmB,GAAXE,EAAG7gK,QAAW5D,EAAKuY,OAAOksJ,EAAG,GAAGzkK,EAAKs5J,UAAUmL,EAAG,IAAQzkK,EAAKs5J,UAAUiK,EAAqBvjK,CAAI,GAAG67J,EAAS6D,EAASL,GAAwCqB,EAAQ5kH,UAAU,CAACwkH,SAASnE,EAAauI,aAAa,SAAS9/J,GAAM,OAAoC,MAA7BlH,KAAKinK,iBAAiB//J,EAAW,EAAEglF,aAAa,SAAShlF,GAAM,IAAI2W,EAAK7d,KAAKinK,iBAAiB//J,GAAM,OAAO2W,GAAMA,EAAKnb,OAAO,EAAE,EAAEukK,iBAAiB,SAAS//J,GAAM,OAAOlH,KAAKijB,WAAWoiJ,aAAan+J,EAAK,EAAEyiF,aAAa,SAASziF,EAAKxE,GAAO,IAAImb,EAAK7d,KAAK0gK,cAAckG,gBAAgB1/J,GAAM2W,EAAKnb,MAAMmb,EAAKu+I,UAAU,GAAG15J,EAAM1C,KAAKq8J,iBAAiBx+I,EAAK,EAAEwuE,gBAAgB,SAASnlF,GAAM,IAAI2W,EAAK7d,KAAKinK,iBAAiB//J,GAAM2W,GAAM7d,KAAKknK,oBAAoBrpJ,EAAK,EAAEg1E,YAAY,SAASqvE,GAAU,OAAGA,EAASU,WAAWzD,EAA+Bn/J,KAAK+lK,aAAa7D,EAAS,MAAr4H,SAA4BjwE,EAAWiwE,GAAU,IAAIS,EAAGT,EAASjwE,WAAW,GAAG0wE,EAAG,CAAC,IAAII,EAAI9wE,EAAWuwE,UAAUG,EAAGzwE,YAAYgwE,GAAca,EAAI9wE,EAAWuwE,SAAS,CAAoR,OAA/QO,EAAI9wE,EAAWuwE,UAAUN,EAASjwE,WAAWA,EAAWiwE,EAASK,gBAAgBQ,EAAIb,EAASH,YAAY,KAAQgB,EAAKA,EAAIhB,YAAYG,EAAcjwE,EAAWgyB,WAAWi+C,EAASjwE,EAAWuwE,UAAUN,EAASD,EAAehwE,EAAWyuE,cAAczuE,EAAWiwE,GAAiBA,CAAQ,CAA+8GiF,CAAmBnnK,KAAKkiK,EAAU,EAAE7F,iBAAiB,SAAS2E,GAAS,OAAOhhK,KAAKijB,WAAWqiJ,aAAatE,EAAQ,EAAEoG,mBAAmB,SAASpG,GAAS,OAAOhhK,KAAKijB,WAAWsiJ,eAAevE,EAAQ,EAAEkG,oBAAoB,SAASjG,GAAS,OAAOjhK,KAAKijB,WAAWwiJ,gBAAgBxE,EAAQ/8C,SAAS,EAAEmjD,kBAAkB,SAASxd,EAAa+R,GAAW,IAAIt6C,EAAIthH,KAAKsnK,mBAAmBzd,EAAa+R,GAAWt6C,GAAKthH,KAAKknK,oBAAoB5lD,EAAI,EAAEimD,eAAe,SAAS1d,EAAa+R,GAAW,OAAwD,MAAjD57J,KAAKsnK,mBAAmBzd,EAAa+R,EAAgB,EAAE4L,eAAe,SAAS3d,EAAa+R,GAAW,IAAI/9I,EAAK7d,KAAKsnK,mBAAmBzd,EAAa+R,GAAW,OAAO/9I,GAAMA,EAAKnb,OAAO,EAAE,EAAE+kK,eAAe,SAAS5d,EAAagc,EAAcnjK,GAAO,IAAImb,EAAK7d,KAAK0gK,cAAcxE,kBAAkBrS,EAAagc,GAAehoJ,EAAKnb,MAAMmb,EAAKu+I,UAAU,GAAG15J,EAAM1C,KAAKq8J,iBAAiBx+I,EAAK,EAAEypJ,mBAAmB,SAASzd,EAAa+R,GAAW,OAAO57J,KAAKijB,WAAWuiJ,eAAe3b,EAAa+R,EAAU,EAAE5hF,qBAAqB,SAAS4/C,GAAS,OAAO,IAAIwmC,EAAapgK,MAAK,SAASgmE,GAAM,IAAI26F,EAAG,GAAwI,OAArImB,EAAW97F,GAAK,SAAS1jE,GAASA,IAAO0jE,GAAM1jE,EAAKsgK,UAAUnE,GAAyB,MAAV7kC,GAAet3H,EAAKs3H,SAASA,GAAU+mC,EAAGt8J,KAAK/B,EAAM,IAAUq+J,CAAE,GAAE,EAAE+G,uBAAuB,SAAS7d,EAAa+R,GAAW,OAAO,IAAIwE,EAAapgK,MAAK,SAASgmE,GAAM,IAAI26F,EAAG,GAAuM,OAApMmB,EAAW97F,GAAK,SAAS1jE,GAASA,IAAO0jE,GAAM1jE,EAAKsgK,WAAWnE,GAA8B,MAAf5U,GAAoBvnJ,EAAKunJ,eAAeA,GAA4B,MAAZ+R,GAAiBt5J,EAAKs5J,WAAWA,GAAY+E,EAAGt8J,KAAK/B,EAAM,IAAUq+J,CAAE,GAAE,GAAGqB,EAAS5jH,UAAU47B,qBAAqBgpF,EAAQ5kH,UAAU47B,qBAAqBgoF,EAAS5jH,UAAUspH,uBAAuB1E,EAAQ5kH,UAAUspH,uBAAuBvJ,EAAS6E,EAAQrB,GAAuBsB,EAAK7kH,UAAUwkH,SAASlE,EAAeP,EAAS8E,EAAKtB,GAAgCuB,EAAc9kH,UAAU,CAACz0C,KAAK,GAAGg+J,cAAc,SAASjd,EAAOl5H,GAAO,OAAOxxB,KAAK2J,KAAKwvB,UAAUuxH,EAAOA,EAAOl5H,EAAM,EAAE40I,WAAW,SAASn4J,GAAMA,EAAKjO,KAAK2J,KAAKsE,EAAKjO,KAAKo8J,UAAUp8J,KAAK2J,KAAKsE,EAAKjO,KAAKkG,OAAO+H,EAAK/H,MAAM,EAAE0hK,WAAW,SAASld,EAAOz8I,GAAMjO,KAAK6nK,YAAYnd,EAAO,EAAEz8I,EAAK,EAAE4kF,YAAY,SAASqvE,GAAU,MAAM,IAAIhjK,MAAMogK,EAAiBC,GAAuB,EAAEuI,WAAW,SAASpd,EAAOl5H,GAAOxxB,KAAK6nK,YAAYnd,EAAOl5H,EAAM,GAAG,EAAEq2I,YAAY,SAASnd,EAAOl5H,EAAMvjB,GAAwFA,EAAxEjO,KAAK2J,KAAKwvB,UAAU,EAAEuxH,GAA6Dz8I,EAA7CjO,KAAK2J,KAAKwvB,UAAUuxH,EAAOl5H,GAA2BxxB,KAAKo8J,UAAUp8J,KAAK2J,KAAKsE,EAAKjO,KAAKkG,OAAO+H,EAAK/H,MAAM,GAAGi4J,EAAS+E,EAAcvB,GAAuBwB,EAAK/kH,UAAU,CAAC8lE,SAAS,QAAQ0+C,SAASjE,EAAUoJ,UAAU,SAASrd,GAAQ,IAAIz8I,EAAKjO,KAAK2J,KAASq+J,EAAQ/5J,EAAKkrB,UAAUuxH,GAAQz8I,EAAKA,EAAKkrB,UAAU,EAAEuxH,GAAQ1qJ,KAAK2J,KAAK3J,KAAKo8J,UAAUnuJ,EAAKjO,KAAKkG,OAAO+H,EAAK/H,OAAO,IAAI+hK,EAAQjoK,KAAK0gK,cAAc9tE,eAAeo1E,GAAoF,OAAxEhoK,KAAKiyF,YAAYjyF,KAAKiyF,WAAW8zE,aAAakC,EAAQjoK,KAAK+hK,aAAoBkG,CAAO,GAAG9J,EAASgF,EAAKD,GAAmCE,EAAQhlH,UAAU,CAAC8lE,SAAS,WAAW0+C,SAAS5D,GAAcb,EAASiF,EAAQF,GAAwCG,EAAajlH,UAAU,CAAC8lE,SAAS,iBAAiB0+C,SAAShE,GAAoBT,EAASkF,EAAaH,GAAwCI,EAAallH,UAAUwkH,SAAS1D,EAAmBf,EAASmF,EAAa3B,GAA2B4B,EAASnlH,UAAUwkH,SAASxD,EAAcjB,EAASoF,EAAS5B,GAAyB6B,EAAOplH,UAAUwkH,SAAS9D,EAAYX,EAASqF,EAAO7B,GAAkC8B,EAAgBrlH,UAAUwkH,SAAS/D,EAAsBV,EAASsF,EAAgB9B,GAAmC+B,EAAiBtlH,UAAU8lE,SAAS,qBAAqBw/C,EAAiBtlH,UAAUwkH,SAASzD,EAAuBhB,EAASuF,EAAiB/B,GAAwCgC,EAAsBvlH,UAAUwkH,SAAS7D,EAA4BZ,EAASwF,EAAsBhC,GAAgC/W,EAAcxsG,UAAUgtG,kBAAkB,SAAS9oJ,EAAKuhK,EAAOC,GAAY,OAAOF,EAAsBvlH,KAAK/7C,EAAKuhK,EAAOC,EAAW,EAAEnC,EAAKvjH,UAAU/pC,SAASuvJ,EAA2hJ,IAAI,GAAGvkK,OAAOsoJ,eAAe,CAA2f,SAASugB,GAAe5lK,GAAM,OAAOA,EAAKsgK,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,IAAI4E,EAAI,GAAwB,IAArBzhK,EAAKA,EAAK2hH,WAAiB3hH,GAAyB,IAAhBA,EAAKsgK,UAA8B,IAAhBtgK,EAAKsgK,UAAcmB,EAAI1/J,KAAK6jK,GAAe5lK,IAAOA,EAAKA,EAAKy/J,YAAY,OAAOgC,EAAI71J,KAAK,IAAI,QAAQ,OAAO5L,EAAK85J,UAAU,CAAxxB/8J,OAAOsoJ,eAAeyY,EAAahiH,UAAU,SAAS,CAAC9oC,IAAI,WAAiC,OAAtBirJ,EAAgBvgK,MAAaA,KAAKmoK,QAAQ,IAAI9oK,OAAOsoJ,eAAega,EAAKvjH,UAAU,cAAc,CAAC9oC,IAAI,WAAW,OAAO4yJ,GAAeloK,KAAK,EAAE+Z,IAAI,SAASpQ,GAAM,OAAO3J,KAAK4iK,UAAU,KAAKnE,EAAa,KAAKU,EAAuB,KAAMn/J,KAAKikH,YAAYjkH,KAAKkyF,YAAYlyF,KAAKikH,aAAet6G,GAAMyR,OAAOzR,KAAO3J,KAAK6yF,YAAY7yF,KAAK0gK,cAAc9tE,eAAejpF,IAAO,MAAM,QAAQ3J,KAAK2J,KAAKA,EAAK3J,KAAK0C,MAAMiH,EAAK3J,KAAKo8J,UAAUzyJ,EAAK,IAAmSi3J,GAAQ,SAAS57J,EAAOZ,EAAI1B,GAAOsC,EAAO,KAAKZ,GAAK1B,CAAK,CAAC,CAAW,CAAT,MAAMzD,IAAG,CAACO,EAAQi8J,kBAAkBA,EAAkBj8J,EAAQorJ,cAAcA,CAAa,EAAE,CAAC,GAAG,GAAG,CAAC,SAASvtE,EAAQ99E,EAAOC,GAAS,IAAI4oK,EAAc,mJAAuJC,EAAS,IAAIhmJ,OAAO,aAAa+lJ,EAAc/N,OAAOtnJ,MAAM,GAAG,GAAG,0CAA8Cu1J,EAAe,IAAIjmJ,OAAO,IAAI+lJ,EAAc/N,OAAOgO,EAAShO,OAAO,QAAQ+N,EAAc/N,OAAOgO,EAAShO,OAAO,QAA8I,SAASE,IAAY,CAA+P,SAAStjJ,EAAMojJ,EAAOkO,EAAiB5N,EAAUH,EAAW5O,GAAgO,SAAS4c,EAAe/6J,GAAG,IAAIuG,EAAEvG,EAAEsF,MAAM,GAAG,GAAG,OAAGiB,KAAK2mJ,EAAkBA,EAAU3mJ,GAAyB,MAAdA,EAAEw0C,OAAO,GAAzT,SAA2BrpD,GAAM,GAAGA,EAAK,MAAM,CAAa,IAAIspK,EAAW,QAA3BtpK,GAAM,QAAkC,IAAIupK,EAAW,OAAY,KAALvpK,GAAW,OAAOic,OAAOuxI,aAAa8b,EAAWC,EAAW,CAAM,OAAOttJ,OAAOuxI,aAAaxtJ,EAAM,CAAyHwpK,CAAkBjjJ,SAAS1R,EAAEmxC,OAAO,GAAGtyC,QAAQ,IAAI,SAAa+4I,EAAaz8I,MAAM,oBAAoB1B,GAAUA,EAAE,CAAC,SAASm7J,EAAWhgH,GAAK,GAAGA,EAAI/1B,EAAM,CAAC,IAAIg2I,EAAGxO,EAAOlhI,UAAUtG,EAAM+1B,GAAK/1C,QAAQ,WAAW21J,GAAgBhP,GAAS74J,EAASkyB,GAAO2nI,EAAWwC,WAAW6L,EAAG,EAAEjgH,EAAI/1B,GAAOA,EAAM+1B,CAAG,CAAC,CAAC,SAASjoD,EAASqhB,EAAE8mJ,GAAG,KAAM9mJ,GAAG+mJ,IAAUD,EAAEE,EAAY/b,KAAKoN,KAAU4O,EAAUH,EAAEl9J,MAAMm9J,EAAQE,EAAUH,EAAE,GAAG5iK,OAAOszJ,EAAQG,aAAaH,EAAQI,aAAa53I,EAAEinJ,EAAU,CAAC,CAAiL,IAAhL,IAAIA,EAAU,EAAMF,EAAQ,EAAMC,EAAY,sBAA0BxP,EAAQgB,EAAWhB,QAAY0P,EAAW,CAAC,CAACC,aAAaZ,IAAuBa,EAAS,CAAC,EAAMv2I,EAAM,IAAa,CAAC,IAAI,IAAIw2I,EAAShP,EAAOntJ,QAAQ,IAAI2lB,GAAO,GAAGw2I,EAAS,EAAE,CAAC,IAAIhP,EAAOl1G,OAAOtyB,GAAO3a,MAAM,SAAS,CAAC,IAAIqhH,EAAIihC,EAAWjhC,IAAQtrH,EAAKsrH,EAAI3mC,eAAeynE,EAAOl1G,OAAOtyB,IAAQ0mG,EAAI1mC,YAAY5kF,GAAMusJ,EAAWJ,eAAensJ,CAAI,CAAC,MAAM,CAAyC,OAArCo7J,EAASx2I,GAAO+1I,EAAWS,GAAiBhP,EAAO7xG,OAAO6gH,EAAS,IAAI,IAAI,IAAI,IAAIzgH,EAAIyxG,EAAOntJ,QAAQ,IAAIm8J,EAAS,GAAOzvC,EAAQygC,EAAOlhI,UAAUkwI,EAAS,EAAEzgH,GAAS5mD,EAAOknK,EAAW92H,MAASwW,EAAI,GAAGgxE,EAAQygC,EAAOlhI,UAAUkwI,EAAS,GAAGx2J,QAAQ,UAAU,IAAI+4I,EAAaz8I,MAAM,iBAAiByqH,EAAQ,oBAAoB53H,EAAO43H,SAAShxE,EAAIygH,EAAS,EAAEzvC,EAAQ1zH,QAAe0zH,EAAQ1hH,MAAM,SAAQ0hH,EAAQA,EAAQ/mH,QAAQ,UAAU,IAAI+4I,EAAaz8I,MAAM,iBAAiByqH,EAAQ,uBAAuBhxE,EAAIygH,EAAS,EAAEzvC,EAAQ1zH,QAAO,IAAIojK,EAAWtnK,EAAOsnK,WAAeC,EAASvnK,EAAO43H,SAASA,EAA4G,GAA9E2vC,GAAUvnK,EAAO43H,SAAS53H,EAAO43H,QAAQvhH,eAAeuhH,EAAQvhH,cAAmC,CAA4D,GAA3DmiJ,EAAW8B,WAAWt6J,EAAOy6J,IAAIz6J,EAAO45J,UAAUhiC,GAAY0vC,EAAY,IAAI,IAAIzuJ,KAAUyuJ,EAAY9O,EAAWkC,iBAAiB7hJ,GAAa0uJ,GAAU3d,EAAaqS,WAAW,iBAAiBrkC,EAAQ,2CAA2C53H,EAAO43H,QAAS,MAAMsvC,EAAW7kK,KAAKrC,GAAQ4mD,IAAM,MAAM,IAAI,IAAI4wG,GAAS74J,EAAS0oK,GAAUzgH,EAAI4gH,EAAiBnP,EAAOgP,EAAS7O,GAAY,MAAM,IAAI,IAAIhB,GAAS74J,EAAS0oK,GAAUzgH,EAAI6gH,EAASpP,EAAOgP,EAAS7O,EAAW5O,GAAc,MAAM,QAAQ4N,GAAS74J,EAAS0oK,GAAU,IAAIh9J,EAAG,IAAIq9J,EAAsBP,EAAaD,EAAWA,EAAWhjK,OAAO,GAAGijK,aAA4GpN,GAA3FnzG,EAAI+gH,EAAsBtP,EAAOgP,EAASh9J,EAAG88J,EAAaX,EAAe5c,GAAsBv/I,EAAGnG,QAAwJ,IAA7ImG,EAAGu9J,QAAQC,EAAcxP,EAAOzxG,EAAIv8C,EAAGutH,QAAQwvC,KAAW/8J,EAAGu9J,QAAO,EAASjP,EAAUY,MAAM3P,EAAaoS,QAAQ,2BAA8BxE,GAASuC,EAAI,CAAsC,IAArC,IAAI+N,EAASC,EAAYvQ,EAAQ,CAAC,GAAWtmJ,EAAE,EAAEA,EAAE6oJ,EAAI7oJ,IAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAGvS,EAAS8M,EAAEi9I,QAAQj9I,EAAE+rJ,QAAQuQ,EAAYvQ,EAAQ,CAAC,EAAE,CAACgB,EAAWhB,QAAQsQ,EAAY5P,EAAc7tJ,EAAGmuJ,EAAW2O,IAAeD,EAAW7kK,KAAKgI,GAAImuJ,EAAWhB,QAAQA,CAAO,MAASU,EAAc7tJ,EAAGmuJ,EAAW2O,IAAeD,EAAW7kK,KAAKgI,GAAiB,iCAATA,EAAGowJ,KAAuCpwJ,EAAGu9J,OAA0FhhH,IAAlFA,EAAIohH,EAAwB3P,EAAOzxG,EAAIv8C,EAAGutH,QAAQ4uC,EAAehO,GAAsF,CAA7D,MAAMv7J,GAAG2sJ,EAAaz8I,MAAM,wBAAwBlQ,GAAG2pD,GAAK,CAAC,CAAIA,EAAI/1B,EAAOA,EAAM+1B,EAASggH,EAAWtiK,KAAK27C,IAAIonH,EAASx2I,GAAO,EAAG,CAAC,CAAC,SAASk3I,EAAYhjK,EAAEg5B,GAA2D,OAAxDA,EAAE45H,WAAW5yJ,EAAE4yJ,WAAW55H,EAAE65H,aAAa7yJ,EAAE6yJ,aAAoB75H,CAAC,CAAC,SAAS4pI,EAAsBtP,EAAOxnI,EAAMxmB,EAAG88J,EAAaX,EAAe5c,GAA+D,IAAjD,IAAIqe,EAAuBjoJ,IAAI6Q,EAAUpmB,EAAviI,IAA0jI,CAAC,IAAInJ,EAAE+2J,EAAO7xG,OAAOxmC,GAAG,OAAO1e,GAAG,IAAI,IAAI,GAAvlI,IAA0lImJ,EAAYw9J,EAAS5P,EAAOtnJ,MAAM8f,EAAM7Q,GAAGvV,EAAvmI,MAAmnI,IAA9nI,IAAioIA,EAA8B,MAAM,IAAIvN,MAAM,uCAA5BuN,EAAxoI,CAA0sI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,GAAjuI,IAAouIA,GAAlwI,IAA4wIA,EAAW,CAA0I,GAAj6I,IAA2xIA,IAAYm/I,EAAaoS,QAAQ,kCAAkCiM,EAAS5P,EAAOtnJ,MAAM8f,EAAM7Q,IAAG6Q,EAAM7Q,EAAE,KAAEA,EAAEq4I,EAAOntJ,QAAQ5J,EAAEuvB,IAAY,GAAmH,MAAM,IAAI3zB,MAAM,2BAA2BoE,EAAE,WAA7JZ,EAAM23J,EAAOtnJ,MAAM8f,EAAM7Q,GAAGnP,QAAQ,WAAW21J,GAAgBn8J,EAAG+U,IAAI6oJ,EAASvnK,EAAMmwB,EAAM,GAAGpmB,EAA97I,CAAwgJ,KAAM,IAA/hJ,GAAkiJA,EAA4N,MAAM,IAAIvN,MAAM,kCAApNwD,EAAM23J,EAAOtnJ,MAAM8f,EAAM7Q,GAAGnP,QAAQ,WAAW21J,GAAgBn8J,EAAG+U,IAAI6oJ,EAASvnK,EAAMmwB,GAAO+4H,EAAaoS,QAAQ,cAAciM,EAAS,uBAAuB3mK,EAAE,OAAOuvB,EAAM7Q,EAAE,EAAEvV,EAA3tJ,CAA8xJ,CAAC,MAAM,IAAI,IAAI,OAAOA,GAAG,KAA74J,EAAw5JJ,EAAG69J,WAAW7P,EAAOtnJ,MAAM8f,EAAM7Q,IAAI,KAAv2J,EAAu3J,KAAr2J,EAAs3J,KAAp2J,EAAq3JvV,EAAr3J,EAAm4JJ,EAAGu9J,QAAO,EAAK,KAAv8J,EAAg+J,KAAxhK,EAAoiK,KAAjhK,EAAmiK,MAAM,QAAQ,MAAM,IAAI1qK,MAAM,qCAAqC,MAAM,IAAI,GAAmG,OAAhG0sJ,EAAaz8I,MAAM,2BAAtqK,GAAosK1C,GAAUJ,EAAG69J,WAAW7P,EAAOtnJ,MAAM8f,EAAM7Q,IAAWA,EAAE,IAAI,IAAI,OAAOvV,GAAG,KAA9wK,EAAyxKJ,EAAG69J,WAAW7P,EAAOtnJ,MAAM8f,EAAM7Q,IAAI,KAAxuK,EAAwvK,KAAtuK,EAAuvK,KAAruK,EAAsvK,MAAM,KAAjzK,EAA00K,KAAl4K,EAA+7K,OAAjDtf,EAAM23J,EAAOtnJ,MAAM8f,EAAM7Q,IAAYjP,OAAO,KAAU1G,EAAGu9J,QAAO,EAAKlnK,EAAMA,EAAMqQ,MAAM,GAAG,IAAG,KAAx9K,MAA6+KtG,IAAkB/J,EAAMunK,GAAh+K,GAA4+Kx9J,GAAwBm/I,EAAaoS,QAAQ,cAAct7J,EAAM,sBAAsB2J,EAAG+U,IAAI6oJ,EAASvnK,EAAMmQ,QAAQ,WAAW21J,GAAgB31I,KAAkC,iCAAnBs2I,EAAa,KAAuCzmK,EAAMwV,MAAM,qCAAqC0zI,EAAaoS,QAAQ,cAAct7J,EAAM,qBAAqBA,EAAM,eAAe2J,EAAG+U,IAAI1e,EAAMA,EAAMmwB,IAAO,MAAM,KAA73L,EAAu4L,MAAM,IAAI3zB,MAAM,4BAA4B,OAAO8iB,EAAE,IAAI,IAAI1e,EAAE,IAAI,QAAQ,GAAGA,GAAG,IAAK,OAAOmJ,GAAG,KAAlhM,EAA6hMJ,EAAG69J,WAAW7P,EAAOtnJ,MAAM8f,EAAM7Q,IAAIvV,EAA19L,EAAw+L,MAAM,KAAzkM,EAAqlMw9J,EAAS5P,EAAOtnJ,MAAM8f,EAAM7Q,GAAGvV,EAAjmM,EAAgnM,MAAM,KAAjlM,EAA0mM,IAAI/J,EAAM23J,EAAOtnJ,MAAM8f,EAAM7Q,GAAGnP,QAAQ,WAAW21J,GAAgB5c,EAAaoS,QAAQ,cAAct7J,EAAM,sBAAsB2J,EAAG+U,IAAI6oJ,EAASvnK,EAAMmwB,GAAO,KAAxvM,EAAwwMpmB,EAAtvM,OAAgxM,OAAOA,GAAG,KAAl2M,EAAg4MJ,EAAGutH,QAA8B,iCAAnBuvC,EAAa,KAAuCc,EAAS/xJ,MAAM,qCAAqC0zI,EAAaoS,QAAQ,cAAciM,EAAS,qBAAqBA,EAAS,gBAAgB59J,EAAG+U,IAAI6oJ,EAASA,EAASp3I,GAAOA,EAAM7Q,EAAEvV,EAA3oN,EAAopN,MAAM,KAAjlN,EAAimNm/I,EAAaoS,QAAQ,+BAA+BiM,EAAS,OAAO,KAAnpN,EAAoqNx9J,EAA/vN,EAAwwNomB,EAAM7Q,EAAE,MAAM,KAAxvN,EAAkwNvV,EAAxuN,EAA8vNomB,EAAM7Q,EAAE,MAAM,KAAvtN,EAAwuN,MAAM,IAAI9iB,MAAM,+DAAgE8iB,GAAG,CAAC,CAAC,SAASk4I,EAAc7tJ,EAAGmuJ,EAAW2O,GAAyE,IAA3D,IAAIvvC,EAAQvtH,EAAGutH,QAAY0vC,EAAW,KAASp2J,EAAE7G,EAAGnG,OAAagN,KAAI,CAAC,IAAIzF,EAAEpB,EAAG6G,GAAO2oJ,EAAMpuJ,EAAEouJ,MAAUn5J,EAAM+K,EAAE/K,MAAiC,IAAvBynK,EAAItO,EAAM3uJ,QAAQ,MAAY,EAAG,IAAI2N,EAAOpN,EAAEoN,OAAOghJ,EAAM9oJ,MAAM,EAAEo3J,GAASvO,EAAUC,EAAM9oJ,MAAMo3J,EAAI,GAAOC,EAAkB,UAATvvJ,GAAkB+gJ,OAAeA,EAAUC,EAAMhhJ,EAAO,KAAKuvJ,EAAiB,UAARvO,GAAiB,GAAGpuJ,EAAEmuJ,UAAUA,GAAwB,IAAXwO,IAAiC,MAAZd,IAAkBA,EAAW,CAAC,EAAEe,EAAMlB,EAAaA,EAAa,CAAC,IAAGA,EAAaiB,GAAUd,EAAWc,GAAU1nK,EAAM+K,EAAEgvJ,IAAI,gCAAgCjC,EAAWgC,mBAAmB4N,EAAS1nK,GAAO,CAAiB,IAAZwQ,EAAE7G,EAAGnG,OAAagN,MAAiB2H,GAAZpN,EAAEpB,EAAG6G,IAAgB2H,UAA8B,QAATA,IAAgBpN,EAAEgvJ,IAAI,wCAAmD,UAAT5hJ,IAAkBpN,EAAEgvJ,IAAI0M,EAAatuJ,GAAQ,MAAM,IAAIsvJ,KAAIvwC,EAAQ1sH,QAAQ,MAAY,GAAG2N,EAAOxO,EAAGwO,OAAO++G,EAAQ7mH,MAAM,EAAEo3J,GAAKvO,EAAUvvJ,EAAGuvJ,UAAUhiC,EAAQ7mH,MAAMo3J,EAAI,KAAQtvJ,EAAO,KAAK+gJ,EAAUvvJ,EAAGuvJ,UAAUhiC,GAAQ,IAAI2qC,EAAGl4J,EAAGowJ,IAAI0M,EAAatuJ,GAAQ,IAAqD,GAAjD2/I,EAAWzrG,aAAaw1G,EAAG3I,EAAUhiC,EAAQvtH,IAAOA,EAAGu9J,OAA8L,OAAtDv9J,EAAG88J,aAAaA,EAAa98J,EAAGi9J,WAAWA,GAAkB,EAAjJ,GAA5C9O,EAAW8B,WAAWiI,EAAG3I,EAAUhiC,GAAY0vC,EAAY,IAAIzuJ,KAAUyuJ,EAAY9O,EAAWkC,iBAAiB7hJ,EAAiF,CAAC,SAASmvJ,EAAwB3P,EAAOiQ,EAAW1wC,EAAQ4uC,EAAehO,GAAY,GAAG,yBAAyBl4I,KAAKs3G,GAAS,CAAC,IAAI2wC,EAAWlQ,EAAOntJ,QAAQ,KAAK0sH,EAAQ,IAAI0wC,GAAgBr8J,EAAKosJ,EAAOlhI,UAAUmxI,EAAW,EAAEC,GAAY,GAAG,OAAOjoJ,KAAKrU,GAAO,MAAG,YAAYqU,KAAKs3G,IAAU4gC,EAAWwC,WAAW/uJ,EAAK,EAAEA,EAAK/H,QAAeqkK,IAAWt8J,EAAKA,EAAK4E,QAAQ,WAAW21J,GAAgBhO,EAAWwC,WAAW/uJ,EAAK,EAAEA,EAAK/H,QAAeqkK,EAAW,CAAC,OAAOD,EAAW,CAAC,CAAC,SAAST,EAAcxP,EAAOiQ,EAAW1wC,EAAQwvC,GAAU,IAAI94I,EAAI84I,EAASxvC,GAA8I,OAA7H,MAALtpG,KAAWA,EAAI+pI,EAAOmQ,YAAY,KAAK5wC,EAAQ,MAAY0wC,IAAYh6I,EAAI+pI,EAAOmQ,YAAY,KAAK5wC,IAASwvC,EAASxvC,GAAStpG,GAAWA,EAAIg6I,CAAU,CAAC,SAASD,EAAMhQ,EAAOxvG,GAAQ,IAAI,IAAI3G,KAAKm2G,EAAQxvG,EAAO3G,GAAGm2G,EAAOn2G,EAAG,CAAC,SAASulH,EAASpP,EAAOxnI,EAAM2nI,EAAW5O,GAA8C,GAAiB,MAAxCyO,EAAO7xG,OAAO31B,EAAM,GAAwB,MAA4B,MAAzBwnI,EAAO7xG,OAAO31B,EAAM,IAAc+1B,EAAIyxG,EAAOntJ,QAAQ,SAAS2lB,EAAM,IAAUA,GAAO2nI,EAAWtqC,QAAQmqC,EAAOxnI,EAAM,EAAE+1B,EAAI/1B,EAAM,GAAU+1B,EAAI,IAAOgjG,EAAaz8I,MAAM,qBAA2B,IAAe,EAAU,GAA6B,UAA1BkrJ,EAAOl1G,OAAOtyB,EAAM,EAAE,GAAa,CAAC,IAAI+1B,EAAIyxG,EAAOntJ,QAAQ,MAAM2lB,EAAM,GAAmG,OAAhG2nI,EAAWgD,aAAahD,EAAWwC,WAAW3C,EAAOxnI,EAAM,EAAE+1B,EAAI/1B,EAAM,GAAG2nI,EAAWiD,WAAkB70G,EAAI,CAAC,CAAC,IAAI6hH,EAAqiD,SAAepQ,EAAOxnI,GAAO,IAAI3a,EAAU6rJ,EAAI,GAAO2G,EAAI,6CAAkF,IAArCA,EAAInJ,UAAU1uI,EAAM63I,EAAIzd,KAAKoN,GAAcniJ,EAAMwyJ,EAAIzd,KAAKoN,IAAyB,GAAhB0J,EAAI1/J,KAAK6T,GAAUA,EAAM,GAAG,OAAO6rJ,CAAI,CAA/uDv7I,CAAM6xI,EAAOxnI,GAAWkpI,EAAI0O,EAAOvkK,OAAO,GAAG61J,EAAI,GAAG,YAAYz5I,KAAKmoJ,EAAO,GAAG,IAAI,CAAC,IAAIvjK,EAAKujK,EAAO,GAAG,GAAOjG,EAAMzI,EAAI,GAAG,YAAYz5I,KAAKmoJ,EAAO,GAAG,KAAKA,EAAO,GAAG,GAAOhG,EAAM1I,EAAI,GAAG0O,EAAO,GAAG,GAAOE,EAAUF,EAAO1O,EAAI,GAA2I,OAAxIvB,EAAWkD,SAASx2J,EAAKs9J,GAAOA,EAAM3xJ,QAAQ,kBAAkB,MAAM4xJ,GAAOA,EAAM5xJ,QAAQ,kBAAkB,OAAO2nJ,EAAWoQ,SAAgBD,EAAU/+J,MAAM++J,EAAU,GAAGzkK,MAAM,CAAE,OAAO,CAAC,CAAC,SAASsjK,EAAiBnP,EAAOxnI,EAAM2nI,GAAY,IAAI5xG,EAAIyxG,EAAOntJ,QAAQ,KAAK2lB,GAAO,GAAG+1B,EAAI,CAAC,IAAI1wC,EAAMmiJ,EAAOlhI,UAAUtG,EAAM+1B,GAAK1wC,MAAM,8BAA8B,OAAGA,GAAeA,EAAM,GAAGhS,OAAOs0J,EAAWmC,sBAAsBzkJ,EAAM,GAAGA,EAAM,IAAW0wC,EAAI,IAAc,CAAE,CAAC,OAAO,CAAC,CAAC,SAAS8gH,EAAkBrP,GAAQ,CAAkjB,SAASwQ,EAAYC,EAAKp2J,GAA8B,OAAtBo2J,EAAKvM,UAAU7pJ,EAAco2J,CAAI,CAAtqVvQ,EAAUn8G,UAAU,CAACnnC,MAAM,SAASojJ,EAAOI,EAAaE,GAAW,IAAIH,EAAWx6J,KAAKw6J,WAAWA,EAAWgB,gBAAgB6O,EAAM5P,EAAaA,EAAa,CAAC,GAAGxjJ,EAAMojJ,EAAOI,EAAaE,EAAUH,EAAWx6J,KAAK4rJ,cAAc4O,EAAW4C,aAAa,GAAuzTsM,EAAkBtrH,UAAU,CAAC8rH,WAAW,SAAStwC,GAAS,IAAI0uC,EAAehmJ,KAAKs3G,GAAU,MAAM,IAAI16H,MAAM,mBAAmB06H,GAAS55H,KAAK45H,QAAQA,CAAO,EAAEx4G,IAAI,SAASy6I,EAAMn5J,EAAMgoJ,GAAQ,IAAI4d,EAAehmJ,KAAKu5I,GAAQ,MAAM,IAAI38J,MAAM,qBAAqB28J,GAAO77J,KAAKA,KAAKkG,UAAU,CAAC21J,MAAMA,EAAMn5J,MAAMA,EAAMgoJ,OAAOA,EAAO,EAAExkJ,OAAO,EAAE6kK,aAAa,SAAS73J,GAAG,OAAOlT,KAAKkT,GAAG0oJ,SAAS,EAAEO,WAAW,SAASjpJ,GAAG,OAAOlT,KAAKkT,GAAGsmJ,OAAO,EAAEyC,SAAS,SAAS/oJ,GAAG,OAAOlT,KAAKkT,GAAG2oJ,KAAK,EAAEG,OAAO,SAAS9oJ,GAAG,OAAOlT,KAAKkT,GAAGupJ,GAAG,EAAE3wJ,SAAS,SAASoH,GAAG,OAAOlT,KAAKkT,GAAGxQ,KAAK,GAA4EmoK,EAAY,CAAC,EAAEA,EAAYzsH,qBAAqBysH,IAAcA,EAAY,SAASC,EAAKp2J,GAAQ,SAASsN,IAAI,CAA4B,IAAItN,KAA/BsN,EAAEo8B,UAAU1pC,EAAOsN,EAAE,IAAIA,EAAgB8oJ,EAAM9oJ,EAAEtN,GAAQo2J,EAAKp2J,GAAQ,OAAOsN,CAAC,GAAoNxiB,EAAQ+6J,UAAUA,CAAS,EAAE,CAAC,GAAG,2BAA2B,CAAC,SAASl9E,EAAQ99E,EAAOC,GAAS,aAAa,IAAI6nJ,EAAa,WAAW,SAASC,EAAiBz8F,EAAO61C,GAAO,IAAI,IAAIxtF,EAAE,EAAEA,EAAEwtF,EAAMx6F,OAAOgN,IAAI,CAAC,IAAIq0I,EAAW7mD,EAAMxtF,GAAGq0I,EAAWC,WAAWD,EAAWC,aAAY,EAAMD,EAAWE,cAAa,EAAQ,UAAUF,IAAWA,EAAWG,UAAS,GAAKroJ,OAAOsoJ,eAAe98F,EAAO08F,EAAWnjJ,IAAImjJ,EAAW,CAAC,CAAC,OAAO,SAASK,EAAYC,EAAWC,GAAuI,OAAvHD,GAAWP,EAAiBM,EAAYxpG,UAAUypG,GAAeC,GAAYR,EAAiBM,EAAYE,GAAoBF,CAAW,CAAC,CAAte,GAA0e,SAASY,EAAgB98F,EAASk8F,GAAa,KAAKl8F,aAAoBk8F,GAAc,MAAM,IAAIW,UAAU,oCAAqC,CAAC,IAAItB,EAAS5pE,EAAQ,eAAe4pE,EAASkG,OAAO9vE,EAAQ,YAAY4pE,EAASmG,cAAc/vE,EAAQ,oBAAoB,IAAIiwE,EAAQrG,EAASmG,cAAkBx2B,EAAc,WAAW,SAASA,IAAoD,GAApC4xB,EAAgBxoJ,KAAK42H,GAAkBhkH,UAAU1M,OAAO,EAAG,MAAM,IAAIhH,MAAM,2GAA2Gc,KAAKutJ,SAAS,CAAC,EAAEvtJ,KAAKwtJ,QAAQ,GAAGxtJ,KAAKwwF,WAAW,CAAC,EAAE,CAAq5G,OAAp5G62D,EAAazwB,EAAc,CAAC,CAACxyH,IAAI,eAAe1B,MAAM,SAAsBnD,GAA2C,OAAnCS,KAAKwtJ,QAAQnpJ,KAAKipJ,EAAQ/tJ,IAAgBS,IAAI,GAAG,CAACoE,IAAI,aAAa1B,MAAM,SAAoBR,GAAS,IAAIy1D,EAAM33D,KAAsO,OAAjOA,KAAKkC,QAAQA,EAAQ7C,OAAOD,KAAK6nJ,EAAS9iJ,UAAUH,SAAQ,SAASI,GAAK,IAAIsiC,EAAaugH,EAAS9iJ,SAASC,GAAKuzD,EAAMvzD,GAAyB,MAApBuzD,EAAMz1D,QAAQkC,GAAWuzD,EAAMz1D,QAAQkC,GAAKsiC,CAAY,IAAM1mC,KAAKs5H,KAAKt5H,KAAKssK,uBAA8BtsK,IAAI,GAAG,CAACoE,IAAI,UAAU1B,MAAM,SAAiB42H,GAAK,GAAGA,EAAIs0B,UAAW,MAAM,IAAI1uJ,MAAM,iEAA0G,OAAzCc,KAAKs5H,IAAIA,EAAIt5H,KAAKssK,uBAA8BtsK,IAAI,GAAG,CAACoE,IAAI,cAAc1B,MAAM,SAAqBm3G,GAAU,IAAIg0C,EAAY7tJ,KAAK8tJ,oBAAoBj0C,GAAUg0C,EAAY52I,QAAQjX,KAAKutJ,SAAS1zC,GAAUg0C,CAAW,GAAG,CAACzpJ,IAAI,UAAU1B,MAAM,WAAuF,OAApE1C,KAAK+tJ,eAAe/tJ,KAAKytJ,eAAeO,kBAAkBhuJ,KAAKs5H,KAAYt5H,IAAI,GAAG,CAACoE,IAAI,uBAAuB1B,MAAM,WAA6L,OAA7J1C,KAAK4gD,SAAS5gD,KAAKs5H,IAAI0vB,MAAM,qBAAqB,OAAO,OAAOhpJ,KAAKytJ,eAAeztJ,KAAKkC,QAAQurJ,gBAAgB72B,EAAc82B,eAAe1tJ,KAAK4gD,UAAiB5gD,IAAI,GAAG,CAACoE,IAAI,SAAS1B,MAAM,WAAkB,IAAIurJ,EAAOjuJ,KAAmzC,OAA9yCA,KAAKkC,QAAQyrJ,aAAa,GAAG3tJ,KAAKwtJ,QAAQxtJ,KAAKytJ,eAAeS,YAAYxvJ,KAAI,SAASyvJ,GAAgB,OAAOA,GAAgB,IAAGrmI,OAAO9nB,KAAKwtJ,SAASxtJ,KAAKkC,QAAQlC,KAAKwtJ,QAAQlE,QAAO,SAASpnJ,EAAQ3C,GAAQ,OAAOA,EAAO6uJ,mBAAmBlsJ,EAAQ+rJ,EAAO,GAAEjuJ,KAAKkC,SAASlC,KAAKsoJ,aAAatoJ,KAAKkC,QAAQyrJ,aAAarE,QAAO,SAAShB,EAAazuC,GAAU,IAAIviC,EAAQ22E,EAAO30B,IAAI0vB,MAAMnvC,GAAUw0C,SAA0D,OAAjD/F,EAAazuC,GAAUotC,EAASgC,QAAQ3xE,GAAgBgxE,CAAY,GAAE,CAAC,GAAGtoJ,KAAKwtJ,QAAQxpJ,SAAQ,SAASzE,GAAQA,EAAOwa,IAAI,CAACu/G,IAAI20B,EAAO30B,IAAIgvB,aAAa2F,EAAO3F,aAAa3+I,KAAKskJ,EAAOtkJ,MAAM,IAAG3J,KAAKsuJ,UAAUtuJ,KAAKwtJ,QAAQxpJ,SAAQ,SAASzE,GAAQA,EAAOwa,IAAI,CAACwzI,SAASU,EAAOV,UAAU,IAAGvtJ,KAAK+tJ,eAAe/pJ,SAAQ,SAAS61G,GAAyC,MAA5Bo0C,EAAO30B,IAAI0vB,MAAMnvC,IAAiBo0C,EAAOM,YAAY10C,EAAU,IAAG75G,KAAKwuJ,OAAOxuJ,KAAKwtJ,QAAQlE,QAAO,SAAS5mJ,EAAMnD,GAAQ,OAAOA,EAAOkvJ,eAAe/rJ,EAAM,GAAE,CAAC,GAAGrD,OAAOD,KAAKY,KAAKwuJ,QAAQxqJ,SAAQ,SAASunC,GAAI,IAAImjH,EAAOT,EAAOO,OAAOjjH,GAAQE,EAAKijH,EAAOjjH,KAASoiH,EAAYI,EAAOV,SAAS9hH,GAAMoiH,EAAYc,QAAQD,EAAO/kJ,MAAMkkJ,EAAY96E,OAAOxnC,GAAI0iH,EAAO30B,IAAIh/C,KAAK/uC,EAAGsiH,EAAYv2E,QAAQ,IAAGj4E,OAAOD,KAAKY,KAAKsoJ,cAActkJ,SAAQ,SAAS61G,GAAUo0C,EAAO30B,IAAIv+G,OAAO8+F,GAAU,IAAIviC,EAAQ2vE,EAASiC,QAAQ+E,EAAO3F,aAAazuC,IAAW,OAAOo0C,EAAO30B,IAAIh/C,KAAKu/B,EAASviC,EAAQ,CAAC,EAAE,IAAUt3E,IAAI,GAAG,CAACoE,IAAI,UAAU1B,MAAM,SAAiBiH,GAAqB,OAAf3J,KAAK2J,KAAKA,EAAY3J,IAAI,GAAG,CAACoE,IAAI,SAAS1B,MAAM,WAAkB,OAAO1C,KAAKs5H,GAAG,GAAG,CAACl1H,IAAI,sBAAsB1B,MAAM,SAA6BsuD,GAAM,IAAI49F,EAAS5uJ,KAAKs5H,IAAI0vB,MAAMh4F,GAAMq9F,SAAS,OAAOruJ,KAAK6uJ,+BAA+BD,EAAS59F,EAAK,GAAG,CAAC5sD,IAAI,iCAAiC1B,MAAM,SAAwC40E,EAAQw3E,GAAU,IAAIC,EAAO/uJ,KAASgvJ,EAAY,CAACF,SAASA,GAA8K,OAApKzvJ,OAAOD,KAAK6nJ,EAAS9iJ,UAAUH,SAAQ,SAASI,GAAK4qJ,EAAY5qJ,GAAK2qJ,EAAO3qJ,EAAI,IAAG4qJ,EAAYvB,eAAeztJ,KAAKytJ,eAAeuB,EAAYxB,QAAQxtJ,KAAKwtJ,QAAe,IAAI52B,EAAcq4B,aAAa33E,EAAQ03E,EAAY,GAAG,CAAC5qJ,IAAI,cAAc1B,MAAM,SAAqBsuD,GAAM,OAAOhxD,KAAK8tJ,oBAAoB98F,GAAMhxD,KAAKytJ,eAAeyB,UAAUC,aAAa,GAAG,CAAC/qJ,IAAI,oBAAoB1B,MAAM,WAA4C,OAAf1C,KAAKsuJ,UAAiBtuJ,KAAK+tJ,cAAc,KAAYn3B,CAAa,CAAvrH,GAA2rHA,EAAcqwB,SAAS5pE,EAAQ,eAAeu5C,EAAci0B,OAAOxtE,EAAQ,YAAYu5C,EAAcq4B,aAAa5xE,EAAQ,mBAAmBu5C,EAAc82B,eAAerwE,EAAQ,sBAAsBu5C,EAAcw4B,WAAW/xE,EAAQ,iBAAiB99E,EAAOC,QAAQo3H,CAAa,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,WAAW,GAAG,gBAAgB,GAAG,kBAAkB,MAAM,CAAC,EAAE,GAAnkiF,CAAukiF,uCCWr3iFr3H,EAAOC,QAA2N,SAASiO,EAAEC,EAAEpK,EAAEqtB,GAAG,SAAS1xB,EAAE8hH,EAAEr6F,GAAG,IAAIpjB,EAAEy9G,GAAG,CAAC,IAAIrzG,EAAEqzG,GAAG,CAAmE,GAAGh6G,EAAE,OAAOA,EAAEg6G,GAAE,GAAI,IAAI17E,EAAE,IAAInmC,MAAM,uBAAuB6hH,EAAE,KAAK,MAAM17E,EAAElmC,KAAK,mBAAmBkmC,CAAC,CAAC,IAAIrxB,EAAE1Q,EAAEy9G,GAAG,CAACvhH,QAAQ,CAAC,GAAGkO,EAAEqzG,GAAG,GAAG1iE,KAAKrqC,EAAExU,SAAQ,SAASiO,GAAoB,OAAOxO,EAAlByO,EAAEqzG,GAAG,GAAGtzG,IAAgBA,EAAE,GAAEuG,EAAEA,EAAExU,QAAQiO,EAAEC,EAAEpK,EAAEqtB,EAAE,CAAC,OAAOrtB,EAAEy9G,GAAGvhH,OAAO,CAAC,IAAI,IAAIuH,OAAE,EAAoCg6G,EAAE,EAAEA,EAAEpwF,EAAEzqB,OAAO66G,IAAI9hH,EAAE0xB,EAAEowF,IAAI,OAAO9hH,CAAC,CAAnb,CAAqb,CAAC,EAAE,CAAC,SAASwO,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAG,GAAGA,EAAE,CAACzN,KAAK2J,KAAK8D,EAAEzN,KAAKkG,OAAOlG,KAAK2J,KAAKzD,OAAOlG,KAAK4L,MAAM,EAAE5L,KAAKusK,KAAK,EAAE,IAAI,IAAI7+J,EAAE,EAAEA,EAAE1N,KAAK2J,KAAKzD,OAAOwH,IAAID,EAAEC,GAAG,IAAID,EAAEC,EAAE,CAAC,CAAC,IAAIzO,EAAEwO,EAAE,gBAAgBkjB,EAAEytB,UAAU,IAAIn/C,EAAE0xB,EAAEytB,UAAUouH,OAAO,SAAS/+J,GAAG,OAAOzN,KAAK2J,KAAK3J,KAAKusK,KAAK9+J,EAAE,EAAEkjB,EAAEytB,UAAUquH,qBAAqB,SAASh/J,GAAG,IAAI,IAAIC,EAAED,EAAEo0J,WAAW,GAAGv+J,EAAEmK,EAAEo0J,WAAW,GAAGlxI,EAAEljB,EAAEo0J,WAAW,GAAG5iK,EAAEwO,EAAEo0J,WAAW,GAAG96J,EAAE/G,KAAKkG,OAAO,EAAEa,GAAG,IAAIA,EAAE,GAAG/G,KAAK2J,KAAK5C,KAAK2G,GAAG1N,KAAK2J,KAAK5C,EAAE,KAAKzD,GAAGtD,KAAK2J,KAAK5C,EAAE,KAAK4pB,GAAG3wB,KAAK2J,KAAK5C,EAAE,KAAK9H,EAAE,OAAO8H,EAAE/G,KAAKusK,KAAK,OAAO,CAAC,EAAE57I,EAAEytB,UAAUsuH,SAAS,SAASj/J,GAAG,GAAGzN,KAAK2sK,YAAYl/J,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIC,EAAE1N,KAAK2J,KAAKoJ,MAAM/S,KAAKusK,KAAKvsK,KAAK4L,MAAM5L,KAAKusK,KAAKvsK,KAAK4L,MAAM6B,GAAG,OAAOzN,KAAK4L,OAAO6B,EAAEC,CAAC,EAAEA,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAE,oEAAoErtB,EAAEspK,OAAO,SAASn/J,EAAEC,GAAG,IAAI,IAAIpK,EAAErE,EAAE8H,EAAEg6G,EAAEr6F,EAAExT,EAAEmyB,EAAErxB,EAAE,GAAGC,EAAE,EAAEA,EAAExG,EAAEvH,QAAoE66G,GAA5Dz9G,EAAEmK,EAAEo0J,WAAW5tJ,OAAkD,EAAEyS,GAAG,EAAEpjB,IAAI,GAAxDrE,EAAEwO,EAAEo0J,WAAW5tJ,OAA8C,EAAEf,GAAG,GAAGjU,IAAI,GAArD8H,EAAE0G,EAAEo0J,WAAW5tJ,OAA2C,EAAEoxB,EAAE,GAAGt+B,EAAEonC,MAAMlvC,GAAGiU,EAAEmyB,EAAE,GAAG8I,MAAMpnC,KAAKs+B,EAAE,IAAIrxB,EAAEA,EAAE2c,EAAE63B,OAAOu4D,GAAGpwF,EAAE63B,OAAO9hC,GAAGiK,EAAE63B,OAAOt1C,GAAGyd,EAAE63B,OAAOnjB,GAAG,OAAOrxB,CAAC,EAAE1Q,EAAEupK,OAAO,SAASp/J,EAAEC,GAAG,IAAIpK,EAAErE,EAAE8H,EAAI2f,EAAExT,EAAEmyB,EAAErxB,EAAE,GAAGC,EAAE,EAAE,IAAIxG,EAAEA,EAAEoF,QAAQ,sBAAsB,IAAIoB,EAAExG,EAAEvH,QAAoH5C,EAA1GqtB,EAAEzjB,QAAQO,EAAE+6C,OAAOv0C,OAA4F,GAAtFyS,EAAEiK,EAAEzjB,QAAQO,EAAE+6C,OAAOv0C,QAAsE,EAAEhV,GAAG,GAAGynB,IAAI,GAA5ExT,EAAEyd,EAAEzjB,QAAQO,EAAE+6C,OAAOv0C,QAA4D,EAAElN,GAAG,EAAEmM,IAAI,GAAjEmyB,EAAE1U,EAAEzjB,QAAQO,EAAE+6C,OAAOv0C,OAAgDD,GAAGoH,OAAOuxI,aAAarpJ,GAAG,IAAI4P,IAAIc,GAAGoH,OAAOuxI,aAAa1tJ,IAAI,IAAIomC,IAAIrxB,GAAGoH,OAAOuxI,aAAa5lJ,IAAI,OAAOiN,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASvG,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,IAAI3wB,KAAK8sK,eAAe,EAAE9sK,KAAK+sK,iBAAiB,EAAE/sK,KAAKgtK,MAAM,EAAEhtK,KAAKitK,kBAAkB,KAAKjtK,KAAKktK,kBAAkB,IAAI,CAACv8I,EAAEytB,UAAU,CAAC+uH,WAAW,WAAW,OAAO,IAAI,EAAEC,qBAAqB,WAAW,OAAO,IAAI,GAAG1/J,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAaA,EAAE+pK,MAAM,CAACC,MAAM,OAAOC,SAAS,SAAS9/J,EAAEC,GAAG,OAAOD,CAAC,EAAE+/J,WAAW,SAAS//J,GAAG,OAAOA,CAAC,EAAEggK,kBAAkB,KAAKC,oBAAoB,MAAMpqK,EAAEqqK,QAAQlgK,EAAE,UAAU,EAAE,CAAC,UAAU,IAAI,EAAE,CAAC,SAASA,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAEljB,EAAE,WAAWxO,EAAE,CAAC,EAAE,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAWyO,EAAElO,QAAQ,SAASiO,EAAEC,GAAG,QAAG,IAAoBD,IAAIA,EAAEvH,OAAO,OAAO,EAAE,IAAI5C,EAAE,WAAWqtB,EAAEi9I,UAAUngK,QAAG,IAAoBC,IAAIA,EAAE,GAAG,IAAYgZ,EAAE,EAAEhZ,IAAI,EAAE,IAAI,IAAIwF,EAAE,EAAEmyB,EAAE53B,EAAEvH,OAAOgN,EAAEmyB,EAAEnyB,IAAIwT,EAAEpjB,EAAEmK,EAAEyF,GAAGzF,EAAEo0J,WAAW3uJ,GAAsBxF,EAAEA,IAAI,EAAXzO,EAAZ,KAAKyO,EAAEgZ,IAAoB,OAAU,EAAHhZ,CAAI,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASD,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAGzN,KAAK2J,KAAK,KAAK3J,KAAKkG,OAAO,EAAElG,KAAK4L,MAAM,EAAE5L,KAAKusK,KAAK,CAAC,CAAC,IAAIttK,EAAEwO,EAAE,WAAWkjB,EAAEytB,UAAU,CAACuuH,YAAY,SAASl/J,GAAGzN,KAAK6tK,WAAW7tK,KAAK4L,MAAM6B,EAAE,EAAEogK,WAAW,SAASpgK,GAAG,GAAGzN,KAAKkG,OAAOlG,KAAKusK,KAAK9+J,GAAGA,EAAE,EAAE,MAAM,IAAIvO,MAAM,sCAAsCc,KAAKkG,OAAO,mBAAmBuH,EAAE,qBAAqB,EAAEqgK,SAAS,SAASrgK,GAAGzN,KAAK6tK,WAAWpgK,GAAGzN,KAAK4L,MAAM6B,CAAC,EAAE4lB,KAAK,SAAS5lB,GAAGzN,KAAK8tK,SAAS9tK,KAAK4L,MAAM6B,EAAE,EAAE++J,OAAO,SAAS/+J,GAAG,EAAEsgK,QAAQ,SAAStgK,GAAG,IAAIC,EAAEpK,EAAE,EAAE,IAAItD,KAAK2sK,YAAYl/J,GAAGC,EAAE1N,KAAK4L,MAAM6B,EAAE,EAAEC,GAAG1N,KAAK4L,MAAM8B,IAAIpK,GAAGA,GAAG,GAAGtD,KAAKwsK,OAAO9+J,GAAG,OAAO1N,KAAK4L,OAAO6B,EAAEnK,CAAC,EAAE0qK,WAAW,SAASvgK,GAAG,OAAOxO,EAAEgvK,YAAY,SAASjuK,KAAK0sK,SAASj/J,GAAG,EAAEi/J,SAAS,SAASj/J,GAAG,EAAEg/J,qBAAqB,SAASh/J,GAAG,EAAEygK,SAAS,WAAW,IAAIzgK,EAAEzN,KAAK+tK,QAAQ,GAAG,OAAO,IAAIttJ,KAAiB,MAAXhT,GAAG,GAAG,MAAWA,GAAG,GAAG,IAAI,EAAEA,GAAG,GAAG,GAAGA,GAAG,GAAG,GAAGA,GAAG,EAAE,IAAI,GAAGA,IAAI,EAAE,GAAGC,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAaA,EAAE6qK,QAAO,EAAG7qK,EAAE4mJ,QAAO,EAAG5mJ,EAAEkH,KAAI,EAAGlH,EAAE8qK,eAAc,EAAG9qK,EAAEqd,KAAK,KAAKrd,EAAE+qK,YAAY,KAAK/qK,EAAEgrK,mBAAmB,KAAKhrK,EAAE4sH,QAAQ,KAAK5sH,EAAEirK,gBAAgB,KAAKjrK,EAAEkrK,eAAe,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,SAAS/gK,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAEljB,EAAE,WAAWnK,EAAEmrK,cAAc,SAAShhK,GAAG,OAAOkjB,EAAE89I,cAAchhK,EAAE,EAAEnK,EAAEorK,kBAAkB,SAASjhK,GAAG,OAAOkjB,EAAEs9I,YAAY,aAAaxgK,EAAE,EAAEnK,EAAEqrK,kBAAkB,SAASlhK,GAAG,OAAOkjB,EAAEs9I,YAAY,SAASxgK,EAAE,EAAEnK,EAAEsrK,YAAY,SAASnhK,GAAG,IAAIC,EAAEijB,EAAEs9I,YAAY,cAAcxgK,GAAG,OAAOkjB,EAAEk+I,iBAAiBnhK,EAAE,EAAEpK,EAAEurK,iBAAiB,SAASphK,GAAG,OAAOkjB,EAAEk+I,iBAAiBphK,EAAE,EAAEnK,EAAE2qK,YAAY,SAASxgK,EAAEC,GAAG,OAAOijB,EAAEs9I,YAAYxgK,EAAEC,EAAE,EAAEpK,EAAEsqK,UAAU,SAASngK,GAAG,OAAOkjB,EAAEi9I,UAAUngK,EAAE,EAAEnK,EAAEwrK,aAAa,SAASrhK,GAAG,OAAOkjB,EAAEm+I,aAAarhK,EAAE,EAAEnK,EAAEyrK,iBAAiBp+I,EAAEo+I,iBAAiBzrK,EAAE0rK,iBAAiBr+I,EAAEq+I,iBAAiB1rK,EAAE2rK,OAAO,SAASxhK,GAAG,OAAOkjB,EAAEs+I,OAAOxhK,EAAE,EAAEnK,EAAE4rK,gBAAgB,SAASzhK,GAAG,OAAOkjB,EAAEu+I,gBAAgBzhK,EAAE,EAAEnK,EAAE6rK,SAAS,SAAS1hK,GAAG,OAAOkjB,EAAEw+I,SAAS1hK,EAAE,CAAC,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAASA,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAE,oBAAoBy+I,YAAY,oBAAoBC,aAAa,oBAAoBC,YAAYrwK,EAAEwO,EAAE,QAAQnK,EAAEoqK,oBAAoB/8I,EAAE,aAAa,QAAQrtB,EAAEmqK,kBAAkB98I,EAAE,aAAa,QAAQrtB,EAAEgqK,MAAM,OAAOhqK,EAAEiqK,SAAS,SAAS9/J,EAAEC,GAAG,OAAOzO,EAAEswK,WAAW9hK,EAAE,CAAC+hK,MAAM9hK,EAAE8hK,QAAQ,GAAG,EAAElsK,EAAEkqK,WAAW,SAAS//J,GAAG,OAAOxO,EAAEwwK,WAAWhiK,EAAE,CAAC,EAAE,CAACiiK,KAAK,KAAK,GAAG,CAAC,SAASjiK,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,EAAEC,GAAG,OAAO1N,gBAAgB2wB,GAAG3wB,KAAKgpJ,MAAM,CAAC,EAAEhpJ,KAAKkwH,QAAQ,KAAKlwH,KAAKqkG,KAAK,GAAG52F,GAAGzN,KAAKq0B,KAAK5mB,EAAEC,QAAQ1N,KAAKu2B,MAAM,WAAW,IAAI9oB,EAAE,IAAIkjB,EAAE,IAAI,IAAIjjB,KAAK1N,KAAK,mBAAmBA,KAAK0N,KAAKD,EAAEC,GAAG1N,KAAK0N,IAAI,OAAOD,CAAC,IAAI,IAAIkjB,EAAEljB,EAAEC,EAAE,CAAC,IAAIzO,EAAEwO,EAAE,YAAYkjB,EAAEytB,UAAU3wC,EAAE,YAAYkjB,EAAEytB,UAAU/pB,KAAK5mB,EAAE,UAAUkjB,EAAEg/I,QAAQliK,EAAE,aAAakjB,EAAExsB,SAASsJ,EAAE,cAAckjB,EAAEi/I,MAAMniK,EAAE,2BAA2BkjB,EAAEw9I,OAAO,CAACvB,OAAO,SAASn/J,GAAG,OAAOxO,EAAE2tK,OAAOn/J,EAAE,EAAEo/J,OAAO,SAASp/J,GAAG,OAAOxO,EAAE4tK,OAAOp/J,EAAE,GAAGkjB,EAAEk/I,aAAapiK,EAAE,kBAAkBC,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,WAAW,EAAE,iBAAiB,EAAE,aAAa,EAAE,0BAA0B,EAAE,SAAS,GAAG,WAAW,GAAG,YAAY,KAAK,GAAG,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAEljB,EAAE,YAAYxO,EAAEwO,EAAE,UAAU1G,EAAE0G,EAAE,WAAWszG,EAAEtzG,EAAE,gBAAgBC,EAAElO,QAAQ,SAASiO,EAAEC,GAAG,IAAIpK,EAAEojB,EAAExT,EAAEmyB,EAAE,KAAI33B,EAAE3G,EAAEtD,OAAOiK,GAAG,CAAC,EAAE,CAACygK,QAAO,EAAG2B,YAAW,EAAGC,uBAAsB,EAAG3B,eAAc,EAAG4B,eAAe/wK,EAAEgxK,cAAe9B,SAAS1gK,EAAEkjB,EAAEk8I,OAAOp/J,IAAiBnK,GAAbojB,EAAE,IAAIq6F,EAAEtzG,EAAEC,IAAOs7I,MAAM91I,EAAE,EAAEA,EAAE5P,EAAE4C,OAAOgN,IAAImyB,EAAE/hC,EAAE4P,GAAGlT,KAAKs6E,KAAKj1C,EAAE6qI,YAAY7qI,EAAE8qI,aAAa,CAACjmB,QAAO,EAAG6lB,uBAAsB,EAAGpvJ,KAAK0kB,EAAE1kB,KAAKnW,IAAI66B,EAAE76B,IAAI0lH,QAAQ7qF,EAAE+qI,eAAelqK,OAAOm/B,EAAE+qI,eAAe,KAAK7B,gBAAgBlpI,EAAEkpI,gBAAgBC,eAAenpI,EAAEmpI,eAAeJ,cAAc1gK,EAAE0gK,gBAAgB,OAAO1nJ,EAAE2pJ,WAAWnqK,SAASlG,KAAKkwH,QAAQxpG,EAAE2pJ,YAAYrwK,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,GAAG,UAAU,GAAG,eAAe,KAAK,GAAG,CAAC,SAASyN,EAAEC,EAAEpK,IAAG,SAAUmK,GAAG,aAAaC,EAAElO,QAAQ,SAASkO,EAAEpK,GAAG,OAAO,IAAImK,EAAEC,EAAEpK,EAAE,EAAEoK,EAAElO,QAAQ8iB,KAAK,SAAS5U,GAAG,OAAOD,EAAE6iK,SAAS5iK,EAAE,CAAE,GAAE2wC,KAAKr+C,KAAK,oBAAoBuwK,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS9iK,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAGzN,KAAK2J,KAAK8D,EAAEzN,KAAKkG,OAAOlG,KAAK2J,KAAKzD,OAAOlG,KAAK4L,MAAM,EAAE5L,KAAKusK,KAAK,CAAC,CAAC,IAAIttK,EAAEwO,EAAE,sBAAsBkjB,EAAEytB,UAAU,IAAIn/C,EAAE0xB,EAAEytB,UAAUsuH,SAAS,SAASj/J,GAAGzN,KAAK2sK,YAAYl/J,GAAG,IAAIC,EAAE1N,KAAK2J,KAAKoJ,MAAM/S,KAAKusK,KAAKvsK,KAAK4L,MAAM5L,KAAKusK,KAAKvsK,KAAK4L,MAAM6B,GAAG,OAAOzN,KAAK4L,OAAO6B,EAAEC,CAAC,EAAEA,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,qBAAqB,KAAK,GAAG,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAEljB,EAAE,aAAaxO,EAAEwO,EAAE,WAAW1G,EAAE0G,EAAE,WAAWszG,EAAEtzG,EAAE,eAAeiZ,EAAEjZ,EAAE,cAAcyF,EAAEzF,EAAE,YAAY43B,EAAE53B,EAAE,kBAAkBuG,EAAEvG,EAAE,sBAAsBwG,EAAExG,EAAE,gBAAgBq7J,EAAEr7J,EAAE,UAAUy2C,EAAEz2C,EAAE,kBAAkBzO,EAAEyO,EAAE,sBAAsBuU,EAAE,SAASvU,GAAG,GAAGA,EAAE+iK,iBAAiBx8J,IAAIvG,EAAE+iK,MAAM/iK,EAAE+iK,MAAMrD,aAAa1/J,EAAEvL,QAAQgoJ,QAAO,EAAGz8I,EAAEvL,QAAQisK,QAAO,EAAG,eAAelvK,EAAE2uK,UAAUngK,EAAE+iK,QAAQ,CAAC,IAAI9iK,EAAED,EAAE+iK,MAAM/iK,EAAE+iK,MAAM,IAAIpB,WAAW1hK,EAAExH,QAAQ,IAAIwH,EAAExH,QAAQuH,EAAE+iK,MAAMz2J,IAAIrM,EAAE,EAAE,CAAC,OAAOD,EAAE+iK,KAAK,EAAEroJ,EAAE,SAAS1a,GAAG,IAAIC,EAAEsU,EAAEvU,GAAoB,MAAM,WAArBxO,EAAE2uK,UAAUlgK,IAAuBD,EAAEvL,QAAQgoJ,QAAQv5H,EAAE8/I,WAAWx8J,EAAEvG,EAAE,SAASD,EAAEijK,WAAWhjK,CAAC,EAAE6B,EAAE,SAAS9B,GAAG,IAAIC,EAAEsU,EAAEhiB,MAAM,OAAO,MAAO0N,EAAyB,IAAI1N,KAAKkC,QAAQisK,SAASzgK,EAAEwF,EAAE25J,OAAOn/J,IAAIA,EAAED,GAAGzN,KAAKkC,QAAQgoJ,OAAOymB,EAAEV,WAAWviK,GAAGzO,EAAEgvK,YAAY,SAASvgK,GAAGD,GAAGzN,KAAKkC,QAAQgoJ,SAASx8I,EAAEzO,EAAEgvK,YAAY,SAAS0C,EAAEC,WAAWljK,KAAKA,EAAE,EAAEjB,EAAE,SAASgB,EAAEC,EAAEpK,GAAGtD,KAAKkH,KAAKuG,EAAEzN,KAAKwK,IAAIlH,EAAEkH,IAAIxK,KAAK2gB,KAAKrd,EAAEqd,KAAK3gB,KAAKkwH,QAAQ5sH,EAAE4sH,QAAQlwH,KAAKuuK,gBAAgBjrK,EAAEirK,gBAAgBvuK,KAAKwuK,eAAelrK,EAAEkrK,eAAexuK,KAAKwwK,MAAM9iK,EAAE1N,KAAKkC,QAAQoB,EAAEtD,KAAK6wK,iBAAiB,CAACrmK,IAAIlH,EAAEkH,IAAImW,KAAKrd,EAAEqd,KAAK,EAAElU,EAAE2xC,UAAU,CAACiwG,OAAO,WAAW,OAAO9+I,EAAE8uC,KAAKr+C,MAAK,EAAG,EAAE0wK,SAAS,WAAW,OAAOnhK,EAAE8uC,KAAKr+C,MAAK,EAAG,EAAE8wK,aAAa,WAAW,IAAIrjK,EAAE0a,EAAEnoB,MAAM,OAAOf,EAAEgvK,YAAY,aAAaxgK,EAAE,EAAEsjK,aAAa,WAAW,IAAItjK,EAAE0a,EAAEnoB,MAAM,OAAOf,EAAEgvK,YAAY,aAAaxgK,EAAE,EAAEujK,cAAc,WAAW,OAAOhxK,KAAK+wK,eAAeE,MAAM,GAAG,IAAIlxI,EAAE,SAAStyB,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE,GAAG,IAAIrtB,EAAE,EAAEA,EAAEoK,EAAEpK,IAAIqtB,GAAGvV,OAAOuxI,aAAa,IAAIl/I,GAAGA,KAAK,EAAE,OAAOkjB,CAAC,EAA6M1d,EAAE,SAASxF,EAAEC,EAAEpK,GAAG,IAAIqtB,EAAE5pB,EAAE9H,EAAE2uK,UAAUlgK,GAAG,GAAU,iBAAPpK,EAArP,SAASmK,GAAG,OAA0B,KAAnBA,EAAEA,GAAG,CAAC,GAAI0gK,QAAa,OAAO1gK,EAAEy8I,aAAQ,IAASz8I,EAAEy8I,SAASz8I,EAAEy8I,QAAO,IAAIz8I,EAAExO,EAAEwE,OAAOgK,EAAEiZ,IAAK/F,KAAKlT,EAAEkT,MAAM,IAAIF,KAAK,OAAOhT,EAAE4gK,cAAc5gK,EAAE4gK,YAAY5gK,EAAE4gK,YAAY9lH,eAAe96C,CAAC,CAAgDwxE,CAAE37E,IAAsBirK,kBAAkBjrK,EAAEirK,gBAAgB7oJ,SAASpiB,EAAEirK,gBAAgB,IAAIjrK,EAAEirK,iBAAiB,MAAMjrK,EAAEirK,kBAAkBjrK,EAAEkH,KAAI,GAAIlH,EAAEkrK,gBAAgB,GAAGlrK,EAAEkrK,iBAAiBlrK,EAAEkH,KAAI,GAAIlH,EAAEkH,MAAMiD,EAAEV,EAAEU,IAAInK,EAAE8qK,gBAAgBz9I,EAAEmnD,EAAErqE,KAAKguD,EAAEpd,KAAKr+C,KAAK2wB,GAAE,GAAIrtB,EAAEkH,KAAFlH,MAAcoK,EAAyBpK,EAAE6qK,QAAO,EAAG7qK,EAAE4mJ,QAAO,EAAGx8I,EAAE,KAAK3G,EAAE,UAAU,GAAG,WAAWA,EAAEzD,EAAE4mJ,SAAS5mJ,EAAE6qK,SAAkC,IAA1B7qK,EAAEysK,wBAA6BriK,EAAEzO,EAAEwvK,cAAc/gK,QAAQ,CAAC,GAAGpK,EAAE6qK,QAAO,EAAG7qK,EAAE4mJ,QAAO,IAAKnjJ,GAAG2G,aAAasG,GAAG,MAAM,IAAI9U,MAAM,gBAAgBuO,EAAE,mCAAmC,gBAAgB1G,IAAI2G,EAAEzO,EAAEgvK,YAAY,aAAavgK,GAAG,CAAC,IAAIqzG,EAAE,IAAIt0G,EAAEgB,EAAEC,EAAEpK,GAAG,OAAOtD,KAAKgpJ,MAAMv7I,GAAGszG,EAAEA,CAAC,EAAEjpC,EAAE,SAASrqE,GAAG,KAAKA,EAAEsF,OAAO,KAAKtF,EAAEA,EAAE0rB,UAAU,EAAE1rB,EAAEvH,OAAO,IAAI,IAAIwH,EAAED,EAAE+8J,YAAY,KAAK,OAAO98J,EAAE,EAAED,EAAE0rB,UAAU,EAAEzrB,GAAG,EAAE,EAAEX,EAAE,SAASU,GAAG,MAAM,KAAKA,EAAEsF,OAAO,KAAKtF,GAAG,KAAKA,CAAC,EAAEguD,EAAE,SAAShuD,EAAEC,GAAG,OAAOA,OAAE,IAAoBA,GAAGA,EAAED,EAAEV,EAAEU,GAAGzN,KAAKgpJ,MAAMv7I,IAAIwF,EAAEorC,KAAKr+C,KAAKyN,EAAE,KAAK,CAACjD,KAAI,EAAG4jK,cAAc1gK,IAAI1N,KAAKgpJ,MAAMv7I,EAAE,EAAEyjK,EAAE,SAASzjK,EAAEC,EAAEpK,GAAG,IAAIqtB,EAAEowF,EAAE,IAAI/sG,EAAE,OAAOvG,EAAE+iK,iBAAiBx8J,GAAG+sG,EAAEgsD,iBAAiBt/J,EAAE+iK,MAAMzD,iBAAiBhsD,EAAEisD,MAAMv/J,EAAE+iK,MAAMxD,MAAM,IAAIjsD,EAAEgsD,kBAAkBt/J,EAAEjD,KAAKkD,EAAE23B,EAAEgoI,MAAMtsD,EAAEmsD,kBAAkB,GAAGnsD,EAAEisD,MAAM,GAAGv/J,EAAE+iK,MAAMvD,oBAAoBv/J,EAAE4/J,MAAMvsD,EAAEmsD,kBAAkBz/J,EAAE+iK,MAAMpD,wBAAwBz8I,EAAEljB,EAAE+iK,MAAMrD,aAAapsD,EAAEmsD,kBAAkBx/J,EAAE6/J,SAAStuK,EAAEgvK,YAAYvgK,EAAE+/J,kBAAkB98I,GAAGrtB,OAAMqtB,EAAExI,EAAE1a,KAAM,IAAIkjB,EAAEzqB,SAASuH,EAAEjD,MAAMkD,EAAE23B,EAAEgoI,MAAM18I,EAAE,IAAIowF,EAAEgsD,iBAAiBp8I,EAAEzqB,OAAO66G,EAAEisD,MAAMjmK,EAAE4pB,GAAGowF,EAAEmsD,kBAAkBx/J,EAAE6/J,SAAStuK,EAAEgvK,YAAYvgK,EAAE+/J,kBAAkB98I,GAAGrtB,IAAIy9G,EAAE+rD,eAAe/rD,EAAEmsD,kBAAkBhnK,OAAO66G,EAAEksD,kBAAkBv/J,EAAE4/J,MAAMvsD,CAAC,EAAuGowD,EAAE,SAAS1jK,EAAEC,EAAEpK,EAAEqtB,EAAEjK,EAAExT,GAAG,IAAImyB,EAAErxB,EAAEC,EAAEiwC,EAAEllD,GAAGsE,EAAE4pK,kBAAkBh6J,IAAI41J,EAAE8H,YAAY5uJ,EAAE/iB,EAAEgvK,YAAY,SAAS/6J,EAAExF,EAAExG,OAAOihB,EAAElpB,EAAEgvK,YAAY,SAASnF,EAAE8H,WAAWljK,EAAExG,OAAOqI,EAAE7B,EAAEwiH,SAAS,GAAGzjH,EAAExN,EAAEgvK,YAAY,SAAS/6J,EAAE3D,IAAI0vE,EAAEhgF,EAAEgvK,YAAY,SAASnF,EAAE8H,WAAWrhK,IAAI0D,EAAEkV,EAAEjiB,SAASwH,EAAExG,KAAKhB,OAAO4xE,EAAEmH,EAAE/4E,SAASqJ,EAAErJ,OAAO6G,EAAEW,EAAExL,QAAQu5D,EAAE,GAAGy1G,EAAE,GAAGC,EAAE,GAAGl9J,EAAEvG,EAAEmjK,iBAAiBrmK,MAAMkD,EAAElD,IAAIkD,EAAElD,IAAIuC,EAAEvC,IAAI05C,EAAEx2C,EAAEmjK,iBAAiBlwJ,OAAOjT,EAAEiT,KAAKjT,EAAEiT,KAAK5T,EAAE4T,KAAK,IAAIgwJ,EAAE,EAAES,EAAE,EAAEn9J,IAAI08J,GAAG,IAAI,SAASjqJ,GAAG0qJ,EAAE,IAAIT,GAA/iB,SAASljK,EAAEC,GAAG,IAAIpK,EAAEmK,EAAE,OAAOA,IAAInK,EAAEoK,EAAE,MAAM,QAAQ,MAAMpK,IAAI,EAAE,CAAmf+tK,CAAE3jK,EAAE6gK,gBAAgBt6J,KAAKm9J,EAAE,GAAGT,GAA7gB,SAASljK,EAAEC,GAAG,OAAO,IAAID,GAAG,EAAE,CAAkf6jK,CAAE5jK,EAAE8gK,iBAAmBnpI,EAAE6e,EAAEtE,WAAWva,IAAI,EAAEA,GAAG6e,EAAEpE,aAAaza,IAAI,EAAEA,GAAG6e,EAAElE,aAAa,EAAEhsC,EAAEkwC,EAAE/J,cAAc,KAAKnmC,IAAI,EAAEA,GAAGkwC,EAAE7J,WAAW,EAAErmC,IAAI,EAAEA,GAAGkwC,EAAE3J,UAAUtnC,IAAIi+J,EAAEnxI,EAAE,EAAE,GAAGA,EAAEh5B,EAAEib,GAAG,GAAGmG,EAAEszC,GAAG,KAAK17B,EAAEmxI,EAAEhrK,OAAO,GAAGgrK,GAAGp5F,IAAIq5F,EAAEpxI,EAAE,EAAE,GAAGA,EAAE//B,KAAKgtK,MAAMvgK,GAAG,GAAGwyE,EAAExjB,GAAG,KAAK17B,EAAEoxI,EAAEjrK,OAAO,GAAGirK,GAAG,IAAIltK,EAAE,GAAuS,OAApSA,GAAG,OAAOA,GAAGjF,IAAIiU,IAAI6kE,EAAE,OAAO,OAAO7zE,GAAGX,EAAE2pK,kBAAkBhpK,GAAG87B,EAAEsF,EAAE,GAAGphC,GAAG87B,EAAE/rB,EAAE,GAAG/P,GAAG87B,EAAEz8B,EAAE0pK,MAAM,GAAG/oK,GAAG87B,EAAEz8B,EAAEwpK,eAAe,GAAG7oK,GAAG87B,EAAEz8B,EAAEypK,iBAAiB,GAAG9oK,GAAG87B,EAAE/d,EAAE9b,OAAO,GAAGjC,GAAG87B,EAAE07B,EAAEv1D,OAAO,GAAuH,CAACqrK,WAA/GxwD,EAAEywD,kBAAkBvtK,EAAE+d,EAAEy5C,EAAoGg2G,UAAhG1wD,EAAE2wD,oBAAoB3xI,EAAEqxI,EAAE,GAAGntK,EAAE87B,EAAEtzB,EAAEvG,OAAO,GAAG,WAAW65B,EAAE4wI,EAAE,GAAG5wI,EAAEpP,EAAE,GAAG3O,EAAEy5C,EAAEhvD,EAAkCklK,iBAAiBruK,EAAE,EAAEqtK,EAAE,CAACt8I,KAAK,SAAS5mB,EAAEC,GAAG,MAAM,IAAIxO,MAAM,mEAAmE,EAAE0J,OAAO,SAAS6E,GAAG,IAAIC,EAAEpK,EAAEqtB,EAAE5pB,EAAEg6G,EAAE,GAAG,IAAIrzG,KAAK1N,KAAKgpJ,MAAMhpJ,KAAKgpJ,MAAM/qH,eAAevwB,KAAKijB,EAAE3wB,KAAKgpJ,MAAMt7I,GAAG3G,EAAE,IAAI0F,EAAEkkB,EAAEzpB,KAAKypB,EAAE6/I,MAAMvxK,EAAEwE,OAAOktB,EAAEzuB,UAAUoB,EAAEoK,EAAEqF,MAAM/S,KAAKqkG,KAAKn+F,OAAOwH,EAAExH,QAAQwH,EAAEqF,MAAM,EAAE/S,KAAKqkG,KAAKn+F,UAAUlG,KAAKqkG,MAAM52F,EAAEnK,EAAEyD,IAAIg6G,EAAE18G,KAAK0C,IAAI,OAAOg6G,CAAC,EAAEzmC,KAAK,SAAS7sE,EAAEC,EAAEpK,GAAG,GAAG,IAAIsP,UAAU1M,OAAO,CAAC,GAAGjH,EAAEkwK,SAAS1hK,GAAG,CAAC,IAAIkjB,EAAEljB,EAAE,OAAOzN,KAAK4I,QAAO,SAAS6E,EAAEC,GAAG,OAAOA,EAAElD,KAAKmmB,EAAErO,KAAK7U,EAAE,GAAE,CAAC,OAAOzN,KAAK4I,QAAO,SAAS8E,EAAEpK,GAAG,OAAOA,EAAEkH,KAAKkD,IAAID,CAAC,IAAG,IAAI,IAAI,CAAC,OAAOA,EAAEzN,KAAKqkG,KAAK52F,EAAEwF,EAAEorC,KAAKr+C,KAAKyN,EAAEC,EAAEpK,GAAGtD,IAAI,EAAE4xK,OAAO,SAASnkK,GAAG,IAAIA,EAAE,OAAOzN,KAAK,GAAGf,EAAEkwK,SAAS1hK,GAAG,OAAOzN,KAAK4I,QAAO,SAAS8E,EAAEpK,GAAG,OAAOA,EAAEkH,KAAKiD,EAAE6U,KAAK5U,EAAE,IAAG,IAAIA,EAAE1N,KAAKqkG,KAAK52F,EAAEnK,EAAEm4D,EAAEpd,KAAKr+C,KAAK0N,GAAGijB,EAAE3wB,KAAKu2B,QAAQ,OAAO5F,EAAE0zE,KAAK/gG,EAAE4D,KAAKypB,CAAC,EAAE5V,OAAO,SAAStN,GAAGA,EAAEzN,KAAKqkG,KAAK52F,EAAE,IAAIC,EAAE1N,KAAKgpJ,MAAMv7I,GAAG,GAAGC,IAAI,KAAKD,EAAEsF,OAAO,KAAKtF,GAAG,KAAKC,EAAE1N,KAAKgpJ,MAAMv7I,IAAIC,IAAIA,EAAElD,WAAWxK,KAAKgpJ,MAAMv7I,QAAQ,IAAI,IAAInK,EAAEtD,KAAK4I,QAAO,SAAS8E,EAAEpK,GAAG,OAAOA,EAAE4D,KAAK6L,MAAM,EAAEtF,EAAEvH,UAAUuH,CAAC,IAAGkjB,EAAE,EAAEA,EAAErtB,EAAE4C,OAAOyqB,WAAW3wB,KAAKgpJ,MAAM1lJ,EAAEqtB,GAAGzpB,MAAM,OAAOlH,IAAI,EAAE+6H,SAAS,SAASttH,GAAGA,EAAExO,EAAEwE,OAAOgK,GAAG,CAAC,EAAE,CAAC0gK,QAAO,EAAGE,YAAY,QAAQC,mBAAmB,KAAK3sK,KAAK,SAASkwK,SAAS,MAAM3hD,QAAQ,KAAK8K,SAAS,kBAAkB82C,eAAehJ,EAAE8H,aAAa3xK,EAAE6vK,aAAarhK,EAAE9L,MAAM,WAAW8L,EAAEokK,UAAU,YAAYpkK,EAAEokK,UAAU,UAAUpkK,EAAEokK,UAAU,UAAUpkK,EAAEokK,WAAWpkK,EAAEokK,SAAS,QAAQ,UAAUpkK,EAAEokK,WAAWpkK,EAAEokK,SAAS,OAAO,IAAInkK,EAAEpK,EAAEqtB,EAAE,GAAG5pB,EAAE,EAAE2f,EAAE,EAAE1S,EAAE/U,EAAEgvK,YAAY,SAASxgK,EAAEqkK,eAAerkK,EAAEyiH,SAASlwH,KAAKkwH,SAAS,KAAK,IAAI,IAAIj8G,KAAKjU,KAAKgpJ,MAAM,GAAGhpJ,KAAKgpJ,MAAM/qH,eAAehqB,GAAG,CAAC,IAAI+N,EAAEhiB,KAAKgpJ,MAAM/0I,GAAGkU,EAAEnG,EAAE9f,QAAQmsK,aAAa5gK,EAAE4gK,YAAY9lH,cAAch5C,EAAE81B,EAAEld,GAAG,IAAI5Y,EAAE,MAAM,IAAIrQ,MAAMipB,EAAE,wCAAwC,IAAI1b,EAAEuV,EAAE9f,QAAQosK,oBAAoB7gK,EAAE6gK,oBAAoB,CAAC,EAAErvF,EAAEiyF,EAAE7yH,KAAKr+C,KAAKgiB,EAAEzS,EAAE9C,GAAGwG,EAAEk+J,EAAE9yH,KAAKr+C,KAAKiU,EAAE+N,EAAEi9D,EAAEl4E,EAAE0G,EAAEokK,SAASpkK,EAAEqkK,gBAAgB/qK,GAAGkM,EAAEs+J,WAAWrrK,OAAO+4E,EAAE6tF,eAAepmJ,GAAGzT,EAAEw+J,UAAUvrK,OAAOyqB,EAAEtsB,KAAK4O,EAAE,CAAC,IAAI6kE,EAAKA,EAAEipC,EAAEgxD,sBAAsB,WAAWhyI,EAAEpP,EAAEzqB,OAAO,GAAG65B,EAAEpP,EAAEzqB,OAAO,GAAG65B,EAAErZ,EAAE,GAAGqZ,EAAEh5B,EAAE,GAAGg5B,EAAE/rB,EAAE9N,OAAO,GAAG8N,EAAE,IAAIjH,EAAEU,EAAE9L,KAAK0W,cAAc,IAAI3K,EAAE,eAAeX,GAAG,gBAAgBA,GAAG,SAASA,GAAG,eAAeA,EAAE,IAAI/N,EAAE+H,EAAE2f,EAAEoxD,EAAE5xE,QAAQ,IAAIg+C,EAAEn9C,EAAE2f,EAAEoxD,EAAE5xE,QAAQ5C,EAAE,EAAEA,EAAEqtB,EAAEzqB,OAAO5C,IAAIoK,EAAEskK,OAAOrhJ,EAAErtB,GAAGiuK,YAAY7jK,EAAEskK,OAAOrhJ,EAAErtB,GAAGquK,iBAAiBzE,mBAAmB,IAAI5pK,EAAE,EAAEA,EAAEqtB,EAAEzqB,OAAO5C,IAAIoK,EAAEskK,OAAOrhJ,EAAErtB,GAAGmuK,WAAW/jK,EAAEskK,OAAOl6F,GAAG,IAAIrc,EAAE/tD,EAAEukK,WAAW,OAAOxkK,EAAE9L,KAAK0W,eAAe,IAAI,aAAa,IAAI,cAAc,IAAI,aAAa,OAAOpZ,EAAEgvK,YAAYxgK,EAAE9L,KAAK0W,cAAcojD,GAAG,IAAI,OAAO,OAAOx8D,EAAE4vK,iBAAiB5vK,EAAEgvK,YAAY,cAAcxyG,GAAGhuD,EAAEutH,UAAU,IAAI,SAAS,OAAOvtH,EAAE0gK,OAAOj7J,EAAE05J,OAAOnxG,GAAGA,EAAE,QAAQ,OAAOA,EAAE,EAAEuxG,MAAM,SAASv/J,EAAEC,GAAG,OAAO3G,EAAE0G,EAAEC,EAAE,EAAEkjK,WAAW,SAASnjK,GAAG,OAAOxO,EAAEgvK,YAAY,SAASnF,EAAE8H,WAAWnjK,GAAG,EAAEwiK,WAAW,SAASxiK,GAAG,OAAOq7J,EAAEmH,WAAWxiK,EAAE,GAAGC,EAAElO,QAAQmxK,CAAC,EAAE,CAAC,WAAW,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,UAAU,EAAE,aAAa,EAAE,eAAe,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,SAAS,GAAG,UAAU,KAAK,GAAG,CAAC,SAASljK,EAAEC,EAAEpK,GAAG,aAAaA,EAAEkuK,kBAAkB,OAAOluK,EAAEouK,oBAAoB,OAAOpuK,EAAEyuK,sBAAsB,OAAOzuK,EAAE4uK,gCAAgC,OAAO5uK,EAAE6uK,4BAA4B,OAAO7uK,EAAE8uK,gBAAgB,OAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS3kK,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,EAAEC,GAAG1N,KAAK2J,KAAK8D,EAAEC,IAAI1N,KAAK2J,KAAK5C,EAAE0nK,cAAczuK,KAAK2J,OAAO3J,KAAKkG,OAAOlG,KAAK2J,KAAKzD,OAAOlG,KAAK4L,MAAM,EAAE5L,KAAKusK,KAAK,CAAC,CAAC,IAAIttK,EAAEwO,EAAE,gBAAgB1G,EAAE0G,EAAE,WAAWkjB,EAAEytB,UAAU,IAAIn/C,EAAE0xB,EAAEytB,UAAUouH,OAAO,SAAS/+J,GAAG,OAAOzN,KAAK2J,KAAKk4J,WAAW7hK,KAAKusK,KAAK9+J,EAAE,EAAEkjB,EAAEytB,UAAUquH,qBAAqB,SAASh/J,GAAG,OAAOzN,KAAK2J,KAAK6gK,YAAY/8J,GAAGzN,KAAKusK,IAAI,EAAE57I,EAAEytB,UAAUsuH,SAAS,SAASj/J,GAAGzN,KAAK2sK,YAAYl/J,GAAG,IAAIC,EAAE1N,KAAK2J,KAAKoJ,MAAM/S,KAAKusK,KAAKvsK,KAAK4L,MAAM5L,KAAKusK,KAAKvsK,KAAK4L,MAAM6B,GAAG,OAAOzN,KAAK4L,OAAO6B,EAAEC,CAAC,EAAEA,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,eAAe,EAAE,UAAU,KAAK,GAAG,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAEljB,EAAE,WAAWxO,EAAE,WAAWe,KAAK2J,KAAK,EAAE,EAAE1K,EAAEm/C,UAAU,CAAC4zH,OAAO,SAASvkK,GAAGA,EAAEkjB,EAAEs9I,YAAY,SAASxgK,GAAGzN,KAAK2J,KAAKtF,KAAKoJ,EAAE,EAAEwkK,SAAS,WAAW,OAAOjyK,KAAK2J,KAAKuE,KAAK,GAAG,GAAGR,EAAElO,QAAQP,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASwO,EAAEC,EAAEpK,IAAG,SAAUmK,GAAG,aAAa,GAAGnK,EAAE6qK,QAAO,EAAG7qK,EAAEmpJ,OAAM,EAAGnpJ,EAAEokD,QAAO,EAAGpkD,EAAE+uK,YAAY,oBAAoB3qC,aAAa,oBAAoB0nC,WAAW9rK,EAAEmtK,gBAAW,IAAoBhjK,EAAEnK,EAAEgvK,WAAW,oBAAoBlD,WAAW,oBAAoB1nC,YAAYpkI,EAAEorG,MAAK,MAAO,CAAC,IAAIhhG,EAAE,IAAIg6H,YAAY,GAAG,IAAIpkI,EAAEorG,KAAK,IAAI,IAAI6jE,KAAK,CAAC7kK,GAAG,CAAC/L,KAAK,oBAAoB0pF,IAAsM,CAAjM,MAAM16D,GAAG,IAAI,IAAgG5pB,EAAE,IAA5FmS,OAAOs5J,aAAat5J,OAAOu5J,mBAAmBv5J,OAAOw5J,gBAAgBx5J,OAAOy5J,eAAsB5rK,EAAEirK,OAAOtkK,GAAGpK,EAAEorG,KAAK,IAAI3nG,EAAE6rK,QAAQ,mBAAmBvnF,IAAuB,CAAlB,MAAM16D,GAAGrtB,EAAEorG,MAAK,CAAE,CAAC,CAAC,CAAE,GAAErwD,KAAKr+C,KAAK,oBAAoBuwK,OAAOA,YAAO,EAAO,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS9iK,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAGA,IAAIzN,KAAK2J,KAAK8D,EAAEzN,KAAKkG,OAAOlG,KAAK2J,KAAKzD,OAAOlG,KAAK4L,MAAM,EAAE5L,KAAKusK,KAAK,EAAE,CAAC,IAAIttK,EAAEwO,EAAE,iBAAiBkjB,EAAEytB,UAAU,IAAIn/C,EAAE0xB,EAAEytB,UAAUsuH,SAAS,SAASj/J,GAAG,GAAGzN,KAAK2sK,YAAYl/J,GAAG,IAAIA,EAAE,OAAO,IAAI2hK,WAAW,GAAG,IAAI1hK,EAAE1N,KAAK2J,KAAKkpK,SAAS7yK,KAAKusK,KAAKvsK,KAAK4L,MAAM5L,KAAKusK,KAAKvsK,KAAK4L,MAAM6B,GAAG,OAAOzN,KAAK4L,OAAO6B,EAAEC,CAAC,EAAEA,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,gBAAgB,IAAI,GAAG,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAEljB,EAAE,WAAWxO,EAAE,SAASwO,GAAGzN,KAAK2J,KAAK,IAAIylK,WAAW3hK,GAAGzN,KAAK4L,MAAM,CAAC,EAAE3M,EAAEm/C,UAAU,CAAC4zH,OAAO,SAASvkK,GAAG,IAAIA,EAAEvH,SAASuH,EAAEkjB,EAAEs9I,YAAY,aAAaxgK,GAAGzN,KAAK2J,KAAKoQ,IAAItM,EAAEzN,KAAK4L,OAAO5L,KAAK4L,OAAO6B,EAAEvH,OAAO,EAAE+rK,SAAS,WAAW,OAAOjyK,KAAK2J,IAAI,GAAG+D,EAAElO,QAAQP,CAAC,EAAE,CAAC,UAAU,KAAK,GAAG,CAAC,SAASwO,EAAEC,EAAEpK,GAAG,aAAa,IAAI,IAAIqtB,EAAEljB,EAAE,WAAWxO,EAAEwO,EAAE,aAAa1G,EAAE0G,EAAE,gBAAgBszG,EAAE,IAAI/zG,MAAM,KAAK0Z,EAAE,EAAEA,EAAE,IAAIA,IAAIq6F,EAAEr6F,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAEq6F,EAAE,KAAKA,EAAE,KAAK,EAAE,IAAumB17E,EAAE,SAAS53B,EAAEC,GAAG,IAAIpK,EAAE,KAAIoK,EAAEA,GAAGD,EAAEvH,QAASuH,EAAEvH,SAASwH,EAAED,EAAEvH,QAAQ5C,EAAEoK,EAAE,EAAEpK,GAAG,GAAG,MAAO,IAAImK,EAAEnK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANoK,EAAUpK,EAAEy9G,EAAEtzG,EAAEnK,IAAIoK,EAAEpK,EAAEoK,CAAC,EAAEsG,EAAE,SAASvG,GAAG,IAAIC,EAAEpK,EAAErE,EAAE8H,EAAE2f,EAAEjZ,EAAEvH,OAAOgN,EAAE,IAAIlG,MAAM,EAAE0Z,GAAG,IAAIpjB,EAAE,EAAEoK,EAAE,EAAEA,EAAEgZ,GAAG,IAAGznB,EAAEwO,EAAEC,MAAO,IAAIwF,EAAE5P,KAAKrE,OAAO,IAAG8H,EAAEg6G,EAAE9hH,IAAK,EAAEiU,EAAE5P,KAAK,MAAMoK,GAAG3G,EAAE,MAAM,CAAC,IAAI9H,GAAG,IAAI8H,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAG2G,EAAEgZ,GAAGznB,EAAEA,GAAG,EAAE,GAAGwO,EAAEC,KAAK3G,IAAIA,EAAE,EAAEmM,EAAE5P,KAAK,MAAMrE,EAAE,MAAMiU,EAAE5P,KAAKrE,GAAGA,GAAG,MAAMiU,EAAE5P,KAAK,MAAMrE,GAAG,GAAG,KAAKiU,EAAE5P,KAAK,MAAM,KAAKrE,EAAE,CAAC,OAAOiU,EAAEhN,SAAS5C,IAAI4P,EAAE2/J,SAAS3/J,EAAEA,EAAE2/J,SAAS,EAAEvvK,GAAG4P,EAAEhN,OAAO5C,GAAGqtB,EAAEmiJ,kBAAkB5/J,EAAE,EAAE5P,EAAEstK,WAAW,SAASnjK,GAAG,OAAOxO,EAAEwxK,WAAW1pK,EAAE0G,EAAE,SAAnpC,SAASA,GAAG,IAAIC,EAAEpK,EAAEqtB,EAAE5pB,EAAEg6G,EAAEr6F,EAAEjZ,EAAEvH,OAAOgN,EAAE,EAAE,IAAInM,EAAE,EAAEA,EAAE2f,EAAE3f,IAAsB,QAAS,OAA3BzD,EAAEmK,EAAEo0J,WAAW96J,MAAsBA,EAAE,EAAE2f,GAAwB,QAAS,OAA7BiK,EAAEljB,EAAEo0J,WAAW96J,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKqtB,EAAE,OAAO5pB,KAAMmM,GAAG5P,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIoK,EAAEzO,EAAEqzK,WAAW,IAAIlD,WAAWl8J,GAAG,IAAIlG,MAAMkG,GAAG6tG,EAAE,EAAEh6G,EAAE,EAAEg6G,EAAE7tG,EAAEnM,IAAsB,QAAS,OAA3BzD,EAAEmK,EAAEo0J,WAAW96J,MAAsBA,EAAE,EAAE2f,GAAwB,QAAS,OAA7BiK,EAAEljB,EAAEo0J,WAAW96J,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKqtB,EAAE,OAAO5pB,KAAMzD,EAAE,IAAIoK,EAAEqzG,KAAKz9G,EAAEA,EAAE,MAAMoK,EAAEqzG,KAAK,IAAIz9G,IAAI,EAAEoK,EAAEqzG,KAAK,IAAI,GAAGz9G,GAAGA,EAAE,OAAOoK,EAAEqzG,KAAK,IAAIz9G,IAAI,GAAGoK,EAAEqzG,KAAK,IAAIz9G,IAAI,EAAE,GAAGoK,EAAEqzG,KAAK,IAAI,GAAGz9G,IAAIoK,EAAEqzG,KAAK,IAAIz9G,IAAI,GAAGoK,EAAEqzG,KAAK,IAAIz9G,IAAI,GAAG,GAAGoK,EAAEqzG,KAAK,IAAIz9G,IAAI,EAAE,GAAGoK,EAAEqzG,KAAK,IAAI,GAAGz9G,GAAG,OAAOoK,CAAC,CAA6jBwF,CAAEzF,EAAE,EAAEnK,EAAE2sK,WAAW,SAASxiK,GAAG,GAAGxO,EAAEwxK,WAAW,OAAO9/I,EAAEs9I,YAAY,aAAaxgK,GAAG4G,SAAS,SAA8D,IAAI,IAAI3G,EAAE,GAAGpK,EAAE,EAAEyD,GAAtE0G,EAAEkjB,EAAEs9I,YAAYhvK,EAAEqzK,WAAW,aAAa,QAAQ7kK,IAAwBvH,OAAe5C,EAAEyD,GAAG,CAAC,IAAI2f,EAAE2e,EAAE53B,EAAEnH,KAAK47C,IAAI5+C,EAA/B,MAAmCyD,IAAI9H,EAAEqzK,WAAW5kK,EAAErJ,KAAK2P,EAAEvG,EAAEolK,SAASvvK,EAAEojB,KAAKhZ,EAAErJ,KAAK2P,EAAEvG,EAAEsF,MAAMzP,EAAEojB,KAAKpjB,EAAEojB,CAAC,CAAC,OAAOhZ,EAAEQ,KAAK,GAAG,CAAC,EAAE,CAAC,eAAe,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAAST,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAG,OAAOA,CAAC,CAAC,SAASxO,EAAEwO,EAAEC,GAAG,IAAI,IAAIpK,EAAE,EAAEA,EAAEmK,EAAEvH,SAAS5C,EAAEoK,EAAEpK,GAAG,IAAImK,EAAEo0J,WAAWv+J,GAAG,OAAOoK,CAAC,CAAC,SAAS3G,EAAE0G,GAAG,IAAIC,EAAE,MAAMijB,EAAE,GAAG1xB,EAAEwO,EAAEvH,OAAOa,EAAEzD,EAAEsqK,UAAUngK,GAAGszG,EAAE,EAAEr6F,GAAE,EAAG,IAAI,OAAO3f,GAAG,IAAI,aAAaqU,OAAOuxI,aAAa/+G,MAAM,KAAK,IAAIwhI,WAAW,IAAI,MAAM,IAAI,aAAah0J,OAAOuxI,aAAa/+G,MAAM,KAAKvI,EAAE,IAAkB,CAAb,MAAMnyB,GAAGwT,GAAE,CAAE,CAAC,IAAIA,EAAE,CAAC,IAAI,IAAI1S,EAAE,GAAGC,EAAE,EAAEA,EAAExG,EAAEvH,OAAO+N,IAAID,GAAGoH,OAAOuxI,aAAal/I,EAAEwG,IAAI,OAAOD,CAAC,CAAC,KAAK+sG,EAAE9hH,GAAGyO,EAAE,GAAG,IAAI,UAAU3G,GAAG,eAAeA,EAAE4pB,EAAEtsB,KAAK+W,OAAOuxI,aAAa/+G,MAAM,KAAKngC,EAAEsF,MAAMguG,EAAEz6G,KAAK47C,IAAI6+D,EAAErzG,EAAEzO,MAAM0xB,EAAEtsB,KAAK+W,OAAOuxI,aAAa/+G,MAAM,KAAKngC,EAAEolK,SAAS9xD,EAAEz6G,KAAK47C,IAAI6+D,EAAErzG,EAAEzO,MAAM8hH,GAAGrzG,CAA4B,CAA1B,MAAMwF,GAAGxF,EAAEpH,KAAKC,MAAMmH,EAAE,EAAE,CAAC,OAAOijB,EAAEziB,KAAK,GAAG,CAAC,SAAS6yG,EAAEtzG,EAAEC,GAAG,IAAI,IAAIpK,EAAE,EAAEA,EAAEmK,EAAEvH,OAAO5C,IAAIoK,EAAEpK,GAAGmK,EAAEnK,GAAG,OAAOoK,CAAC,CAAC,IAAIgZ,EAAEjZ,EAAE,aAAayF,EAAEzF,EAAE,kBAAkB43B,EAAE53B,EAAE,gBAAgBnK,EAAEmrK,cAAc,SAAShhK,GAAG,IAAI,IAAIC,EAAE,GAAGpK,EAAE,EAAEA,EAAEmK,EAAEvH,OAAO5C,IAAIoK,GAAG0N,OAAOuxI,aAAa,IAAIl/I,EAAEo0J,WAAWv+J,IAAI,OAAOoK,CAAC,EAAEpK,EAAEurK,iBAAiB,SAASphK,EAAEC,GAAGpK,EAAEwrK,aAAa,QAAQphK,EAAEA,GAAG,kBAAkB,IAAI,OAAO,IAAI6kK,KAAK,CAAC9kK,GAAG,CAAC9L,KAAK+L,GAAqN,CAAjN,MAAMijB,GAAG,IAAI,IAAgG5pB,EAAE,IAA5FmS,OAAOs5J,aAAat5J,OAAOu5J,mBAAmBv5J,OAAOw5J,gBAAgBx5J,OAAOy5J,eAAsB,OAAO5rK,EAAEirK,OAAOvkK,GAAG1G,EAAE6rK,QAAQllK,EAA8D,CAA3D,MAAMijB,GAAG,MAAM,IAAIzxB,MAAM,kCAAkC,CAAC,CAAC,EAAEoE,EAAEwvK,kBAAkB/rK,EAAE,IAAIiN,EAAE,CAAC,EAAEA,EAAE0zC,OAAO,CAACA,OAAO/2B,EAAE87H,MAAM,SAASh/I,GAAG,OAAOxO,EAAEwO,EAAE,IAAIT,MAAMS,EAAEvH,QAAQ,EAAEmsK,YAAY,SAAS5kK,GAAG,OAAOuG,EAAE0zC,OAAO4qH,WAAW7kK,GAAGwjK,MAAM,EAAEqB,WAAW,SAAS7kK,GAAG,OAAOxO,EAAEwO,EAAE,IAAI2hK,WAAW3hK,EAAEvH,QAAQ,EAAEuqK,WAAW,SAAShjK,GAAG,OAAOxO,EAAEwO,EAAE43B,EAAE53B,EAAEvH,QAAQ,GAAG8N,EAAEy4I,MAAM,CAAC/kG,OAAO3gD,EAAE0lJ,MAAM97H,EAAE0hJ,YAAY,SAAS5kK,GAAG,OAAO,IAAI2hK,WAAW3hK,GAAGwjK,MAAM,EAAEqB,WAAW,SAAS7kK,GAAG,OAAO,IAAI2hK,WAAW3hK,EAAE,EAAEgjK,WAAW,SAAShjK,GAAG,OAAO43B,EAAE53B,EAAE,GAAGuG,EAAEq+J,YAAY,CAAC3qH,OAAO,SAASj6C,GAAG,OAAO1G,EAAE,IAAIqoK,WAAW3hK,GAAG,EAAEg/I,MAAM,SAASh/I,GAAG,OAAOszG,EAAE,IAAIquD,WAAW3hK,GAAG,IAAIT,MAAMS,EAAEslK,YAAY,EAAEV,YAAY1hJ,EAAE2hJ,WAAW,SAAS7kK,GAAG,OAAO,IAAI2hK,WAAW3hK,EAAE,EAAEgjK,WAAW,SAAShjK,GAAG,OAAO43B,EAAE,IAAI+pI,WAAW3hK,GAAG,GAAGuG,EAAEs+J,WAAW,CAAC5qH,OAAO3gD,EAAE0lJ,MAAM,SAASh/I,GAAG,OAAOszG,EAAEtzG,EAAE,IAAIT,MAAMS,EAAEvH,QAAQ,EAAEmsK,YAAY,SAAS5kK,GAAG,OAAOA,EAAEwjK,MAAM,EAAEqB,WAAW3hJ,EAAE8/I,WAAW,SAAShjK,GAAG,OAAO43B,EAAE53B,EAAE,GAAGuG,EAAEy8J,WAAW,CAAC/oH,OAAO3gD,EAAE0lJ,MAAM,SAASh/I,GAAG,OAAOszG,EAAEtzG,EAAE,IAAIT,MAAMS,EAAEvH,QAAQ,EAAEmsK,YAAY,SAAS5kK,GAAG,OAAOuG,EAAEy8J,WAAW6B,WAAW7kK,GAAGwjK,MAAM,EAAEqB,WAAW,SAAS7kK,GAAG,OAAOszG,EAAEtzG,EAAE,IAAI2hK,WAAW3hK,EAAEvH,QAAQ,EAAEuqK,WAAW9/I,GAAGrtB,EAAE2qK,YAAY,SAASxgK,EAAEC,GAAG,GAAGA,IAAIA,EAAE,KAAKD,EAAE,OAAOC,EAAEpK,EAAEwrK,aAAarhK,GAAG,IAAIkjB,EAAErtB,EAAEsqK,UAAUlgK,GAAgB,OAAXsG,EAAE2c,GAAGljB,GAAGC,EAAW,EAAEpK,EAAEsqK,UAAU,SAASngK,GAAG,MAAM,iBAAiBA,EAAE,SAAS,mBAAmBpO,OAAO++C,UAAU/pC,SAASgqC,KAAK5wC,GAAG,QAAQiZ,EAAE+pJ,YAAYprI,EAAE/iB,KAAK7U,GAAG,aAAaiZ,EAAE4rJ,YAAY7kK,aAAa2hK,WAAW,aAAa1oJ,EAAE2rJ,aAAa5kK,aAAai6H,YAAY,mBAAc,CAAM,EAAEpkI,EAAEwrK,aAAa,SAASrhK,GAA4B,IAAnBiZ,EAAEjZ,EAAE4K,eAAqB,MAAM,IAAInZ,MAAMuO,EAAE,oCAAoC,EAAEnK,EAAEyrK,iBAAiB,MAAMzrK,EAAE0rK,kBAAkB,EAAE1rK,EAAE2rK,OAAO,SAASxhK,GAAG,IAAIC,EAAEpK,EAAEqtB,EAAE,GAAG,IAAIrtB,EAAE,EAAEA,GAAGmK,GAAG,IAAIvH,OAAO5C,IAAsBqtB,GAAG,QAArBjjB,EAAED,EAAEo0J,WAAWv+J,IAAe,GAAG,IAAI,IAAIoK,EAAE2G,SAAS,IAAIk0C,cAAc,OAAO53B,CAAC,EAAErtB,EAAE4rK,gBAAgB,SAASzhK,GAAG,IAAI,IAAIC,KAAKwF,EAAE,GAAGA,EAAE+qB,eAAevwB,IAAIwF,EAAExF,GAAG4/J,QAAQ7/J,EAAE,OAAOyF,EAAExF,GAAG,OAAO,IAAI,EAAEpK,EAAE6rK,SAAS,SAAS1hK,GAAG,MAAM,oBAAoBpO,OAAO++C,UAAU/pC,SAASgqC,KAAK5wC,EAAE,EAAEnK,EAAEG,OAAO,WAAW,IAAIgK,EAAEC,EAAEpK,EAAE,CAAC,EAAE,IAAImK,EAAE,EAAEA,EAAEmF,UAAU1M,OAAOuH,IAAI,IAAIC,KAAKkF,UAAUnF,GAAGmF,UAAUnF,GAAGwwB,eAAevwB,SAAI,IAAoBpK,EAAEoK,KAAKpK,EAAEoK,GAAGkF,UAAUnF,GAAGC,IAAI,OAAOpK,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE,eAAe,GAAG,YAAY,KAAK,GAAG,CAAC,SAASmK,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,EAAEC,GAAG1N,KAAKgpJ,MAAM,GAAGhpJ,KAAKgzK,YAAYtlK,EAAED,GAAGzN,KAAKq0B,KAAK5mB,EAAE,CAAC,IAAIxO,EAAEwO,EAAE,kBAAkB1G,EAAE0G,EAAE,sBAAsBszG,EAAEtzG,EAAE,sBAAsBiZ,EAAEjZ,EAAE,iBAAiByF,EAAEzF,EAAE,WAAW43B,EAAE53B,EAAE,eAAeuG,EAAEvG,EAAE,cAAcwG,EAAExG,EAAE,aAAaA,EAAE,YAAYkjB,EAAEytB,UAAU,CAAC60H,eAAe,SAASxlK,GAAG,IAAIC,EAAE1N,KAAK06E,OAAOszF,WAAW,GAAG,GAAGtgK,IAAID,EAAE,MAAM,IAAIvO,MAAM,gDAAgDgU,EAAE+7J,OAAOvhK,GAAG,cAAcwF,EAAE+7J,OAAOxhK,GAAG,IAAI,EAAEylK,YAAY,SAASzlK,EAAEC,GAAG,IAAIpK,EAAEtD,KAAK06E,OAAO9uE,MAAM5L,KAAK06E,OAAOozF,SAASrgK,GAAG,IAAgCxO,EAA1Be,KAAK06E,OAAOszF,WAAW,KAAStgK,EAAE,OAAO1N,KAAK06E,OAAOozF,SAASxqK,GAAGrE,CAAC,EAAEk0K,sBAAsB,WAAWnzK,KAAKozK,WAAWpzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKqzK,wBAAwBrzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKszK,4BAA4BtzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKuzK,kBAAkBvzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKwzK,eAAexzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKyzK,iBAAiBzzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAK0zK,iBAAiB1zK,KAAK06E,OAAOqzF,QAAQ,GAAG,IAAItgK,EAAEzN,KAAK06E,OAAOgyF,SAAS1sK,KAAK0zK,kBAAkBhmK,EAAEuG,EAAEq+J,WAAW,aAAa,QAAQhvK,EAAE4P,EAAE+6J,YAAYvgK,EAAED,GAAGzN,KAAKqwK,WAAWrwK,KAAKgzK,YAAYhD,eAAe1sK,EAAE,EAAEqwK,2BAA2B,WAAW3zK,KAAK4zK,sBAAsB5zK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAK6zK,cAAc7zK,KAAK06E,OAAOszF,WAAW,GAAGhuK,KAAK8zK,cAAc9zK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKozK,WAAWpzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKqzK,wBAAwBrzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKszK,4BAA4BtzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKuzK,kBAAkBvzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKwzK,eAAexzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKyzK,iBAAiBzzK,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAK+zK,oBAAoB,CAAC,EAAE,IAAI,IAAItmK,EAAEC,EAAEpK,EAAEqtB,EAAE3wB,KAAK4zK,sBAAsB,GAAK,EAAIjjJ,GAAGljB,EAAEzN,KAAK06E,OAAOqzF,QAAQ,GAAGrgK,EAAE1N,KAAK06E,OAAOqzF,QAAQ,GAAGzqK,EAAEtD,KAAK06E,OAAOszF,WAAWtgK,GAAG1N,KAAK+zK,oBAAoBtmK,GAAG,CAAC5O,GAAG4O,EAAEvH,OAAOwH,EAAEhL,MAAMY,EAAE,EAAE0wK,kCAAkC,WAAW,GAAGh0K,KAAKi0K,6BAA6Bj0K,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKk0K,mCAAmCl0K,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKm0K,WAAWn0K,KAAK06E,OAAOqzF,QAAQ,GAAG/tK,KAAKm0K,WAAW,EAAE,MAAM,IAAIj1K,MAAM,sCAAsC,EAAEk1K,eAAe,WAAW,IAAI3mK,EAAEC,EAAE,IAAID,EAAE,EAAEA,EAAEzN,KAAKgpJ,MAAM9iJ,OAAOuH,IAAIC,EAAE1N,KAAKgpJ,MAAMv7I,GAAGzN,KAAK06E,OAAOozF,SAASpgK,EAAE2mK,mBAAmBr0K,KAAKizK,eAAe5tI,EAAEmsI,mBAAmB9jK,EAAE4mK,cAAct0K,KAAK06E,QAAQhtE,EAAE6mK,aAAa7mK,EAAE8mK,mBAAmB,EAAEC,eAAe,WAAW,IAAIhnK,EAAE,IAAIzN,KAAK06E,OAAOozF,SAAS9tK,KAAKyzK,kBAAkBzzK,KAAK06E,OAAOszF,WAAW,KAAK3oI,EAAEqsI,sBAAqBjkK,EAAE,IAAIuG,EAAE,CAAC0gK,MAAM10K,KAAK00K,OAAO10K,KAAKgzK,cAAe2B,gBAAgB30K,KAAK06E,QAAQ16E,KAAKgpJ,MAAM3kJ,KAAKoJ,GAAG,GAAGzN,KAAKuzK,oBAAoBvzK,KAAKgpJ,MAAM9iJ,QAAQ,IAAIlG,KAAKuzK,mBAAmB,IAAIvzK,KAAKgpJ,MAAM9iJ,OAAO,MAAM,IAAIhH,MAAM,kCAAkCc,KAAKuzK,kBAAkB,gCAAgCvzK,KAAKgpJ,MAAM9iJ,OAAO,EAAE0uK,iBAAiB,WAAW,IAAInnK,EAAEzN,KAAK06E,OAAO+xF,qBAAqBpnI,EAAE0sI,uBAAuB,GAAGtkK,EAAE,EAAkD,MAAxCzN,KAAKkzK,YAAY,EAAE7tI,EAAEmsI,mBAA+K,IAAItyK,MAAM,uDAA9J,IAAIA,MAAM,0IAA2Mc,KAAK06E,OAAOozF,SAASrgK,GAAG,IAAInK,EAAEmK,EAAE,GAAGzN,KAAKizK,eAAe5tI,EAAE0sI,uBAAuB/xK,KAAKmzK,wBAAwBnzK,KAAKozK,aAAalgK,EAAE67J,kBAAkB/uK,KAAKqzK,0BAA0BngK,EAAE67J,kBAAkB/uK,KAAKszK,8BAA8BpgK,EAAE67J,kBAAkB/uK,KAAKuzK,oBAAoBrgK,EAAE67J,kBAAkB/uK,KAAKwzK,iBAAiBtgK,EAAE87J,kBAAkBhvK,KAAKyzK,mBAAmBvgK,EAAE87J,iBAAiB,CAAC,GAAGhvK,KAAK00K,OAAM,GAAGjnK,EAAEzN,KAAK06E,OAAO+xF,qBAAqBpnI,EAAE6sI,kCAAmC,EAAE,MAAM,IAAIhzK,MAAM,yEAAyE,GAAGc,KAAK06E,OAAOozF,SAASrgK,GAAGzN,KAAKizK,eAAe5tI,EAAE6sI,iCAAiClyK,KAAKg0K,qCAAqCh0K,KAAKkzK,YAAYlzK,KAAKk0K,mCAAmC7uI,EAAE8sI,+BAA+BnyK,KAAKk0K,mCAAmCl0K,KAAK06E,OAAO+xF,qBAAqBpnI,EAAE8sI,6BAA6BnyK,KAAKk0K,mCAAmC,GAAG,MAAM,IAAIh1K,MAAM,iEAAiEc,KAAK06E,OAAOozF,SAAS9tK,KAAKk0K,oCAAoCl0K,KAAKizK,eAAe5tI,EAAE8sI,6BAA6BnyK,KAAK2zK,4BAA4B,CAAC,IAAIhjJ,EAAE3wB,KAAKyzK,iBAAiBzzK,KAAKwzK,eAAexzK,KAAK00K,QAAQ/jJ,GAAG,GAAGA,GAAG,GAAG3wB,KAAK4zK,uBAAuB,IAAI30K,EAAEqE,EAAEqtB,EAAE,GAAG1xB,EAAE,EAAEe,KAAKkzK,YAAY5vK,EAAE+hC,EAAEqsI,uBAAuB1xK,KAAK06E,OAAO6xF,KAAKttK,QAAQ,GAAGA,EAAE,EAAE,MAAM,IAAIC,MAAM,0BAA0BoH,KAAKy+C,IAAI9lD,GAAG,UAAU,EAAE41K,cAAc,SAASpnK,GAAG,IAAIC,EAAEwF,EAAE06J,UAAUngK,GAAG,GAAGyF,EAAE47J,aAAaphK,GAAG,WAAWA,GAAGuG,EAAEq+J,WAAW,GAAG,eAAe5kK,EAAE1N,KAAK06E,OAAO,IAAI3zE,EAAE0G,QAAQ,GAAGwG,EAAEq+J,WAAWtyK,KAAK06E,OAAO,IAAIqmC,EAAE7tG,EAAE+6J,YAAY,aAAaxgK,QAAQ,CAAC,IAAIwG,EAAEw4I,MAAM,MAAM,IAAIvtJ,MAAM,uCAAuCwO,EAAE,KAAK1N,KAAK06E,OAAO,IAAIh0D,EAAExT,EAAE+6J,YAAY,QAAQxgK,GAAG,MAAMzN,KAAK06E,OAAO,IAAIz7E,EAAEwO,EAAEzN,KAAKgzK,YAAYjD,sBAAsB,EAAE17I,KAAK,SAAS5mB,GAAGzN,KAAK60K,cAAcpnK,GAAGzN,KAAK40K,mBAAmB50K,KAAKy0K,iBAAiBz0K,KAAKo0K,gBAAgB,GAAG1mK,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,gBAAgB,EAAE,qBAAqB,GAAG,WAAW,GAAG,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,qBAAqB,GAAG,UAAU,GAAG,aAAa,KAAK,GAAG,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,EAAEC,GAAG1N,KAAKkC,QAAQuL,EAAEzN,KAAKgzK,YAAYtlK,CAAC,CAAC,IAAIzO,EAAEwO,EAAE,kBAAkB1G,EAAE0G,EAAE,WAAWszG,EAAEtzG,EAAE,sBAAsBiZ,EAAEjZ,EAAE,YAAYyF,EAAEzF,EAAE,aAAqBkjB,EAAEytB,UAAU,CAAC02H,YAAY,WAAW,OAAO,IAAK,EAAE90K,KAAK+0K,QAAQ,EAAEC,QAAQ,WAAW,OAAO,OAAQ,KAAKh1K,KAAK+0K,QAAQ,EAAEE,yBAAyB,SAASxnK,EAAEC,EAAEpK,GAAG,OAAO,WAAW,IAAIqtB,EAAEljB,EAAE7B,MAAM6B,EAAEqgK,SAASpgK,GAAG,IAAIzO,EAAEwO,EAAEi/J,SAASppK,GAAG,OAAOmK,EAAEqgK,SAASn9I,GAAG1xB,CAAC,CAAC,EAAEi2K,eAAe,SAASznK,EAAEC,EAAEpK,EAAEqtB,EAAE1xB,GAAG,OAAO,WAAW,IAAIwO,EAAE1G,EAAEknK,YAAYt9I,EAAE+8I,oBAAoB1tK,KAAKotK,wBAAwB1/J,EAAEijB,EAAE68I,WAAW//J,GAAG,GAAGC,EAAExH,SAASjH,EAAE,MAAM,IAAIC,MAAM,yCAAyC,OAAOwO,CAAC,CAAC,EAAE4mK,cAAc,SAAS7mK,GAAG,IAAIC,EAAEpK,EAAE,GAAGmK,EAAE4lB,KAAK,IAAIrzB,KAAKm1K,eAAe1nK,EAAEsgK,QAAQ,GAAGzqK,EAAEmK,EAAEsgK,QAAQ,GAAG/tK,KAAK65G,SAASpsG,EAAEi/J,SAAS1sK,KAAKm1K,gBAAgB1nK,EAAE4lB,KAAK/vB,IAAyB,GAAtBtD,KAAK8sK,iBAA4C,GAAxB9sK,KAAK+sK,iBAAqB,MAAM,IAAI7tK,MAAM,qIAAqI,GAA+C,QAA5CwO,EAAE3G,EAAEmoK,gBAAgBlvK,KAAKitK,oBAA4B,MAAM,IAAI/tK,MAAM,+BAA+B6H,EAAEkoK,OAAOjvK,KAAKitK,mBAAmB,0BAA0BlmK,EAAEknK,YAAY,SAASjuK,KAAK65G,UAAU,KAAK,GAAG75G,KAAKmwK,aAAa,IAAIpvD,EAAE/gH,KAAKmwK,aAAarD,eAAe9sK,KAAK8sK,eAAe9sK,KAAKmwK,aAAapD,iBAAiB/sK,KAAK+sK,iBAAiB/sK,KAAKmwK,aAAanD,MAAMhtK,KAAKgtK,MAAMhtK,KAAKmwK,aAAalD,kBAAkBjtK,KAAKitK,kBAAkBjtK,KAAKmwK,aAAa/C,qBAAqBptK,KAAKi1K,yBAAyBxnK,EAAEA,EAAE7B,MAAM5L,KAAK8sK,eAAep/J,GAAG1N,KAAKmwK,aAAahD,WAAWntK,KAAKk1K,eAAeznK,EAAEA,EAAE7B,MAAM5L,KAAK8sK,eAAep/J,EAAE1N,KAAK+sK,kBAAkB/sK,KAAKgzK,YAAYlD,aAAa9vK,KAAKmwK,aAAappK,EAAEknK,YAAY,SAASjuK,KAAKmwK,aAAahD,cAAczmJ,EAAEsmJ,MAAMhtK,KAAKmwK,gBAAgBnwK,KAAKgtK,OAAO,MAAM,IAAI9tK,MAAM,iCAC5x+B,EAAEy1K,gBAAgB,SAASlnK,GAAG,GAAGzN,KAAK6zK,cAAcpmK,EAAEsgK,QAAQ,GAAG/tK,KAAK8zK,cAAcrmK,EAAEsgK,QAAQ,GAAG/tK,KAAK+0K,QAAQtnK,EAAEsgK,QAAQ,GAAG/tK,KAAKitK,kBAAkBx/J,EAAEugK,WAAW,GAAGhuK,KAAK2gB,KAAKlT,EAAEygK,WAAWluK,KAAKgtK,MAAMv/J,EAAEsgK,QAAQ,GAAG/tK,KAAK8sK,eAAer/J,EAAEsgK,QAAQ,GAAG/tK,KAAK+sK,iBAAiBt/J,EAAEsgK,QAAQ,GAAG/tK,KAAKm1K,eAAe1nK,EAAEsgK,QAAQ,GAAG/tK,KAAKo1K,kBAAkB3nK,EAAEsgK,QAAQ,GAAG/tK,KAAKq1K,kBAAkB5nK,EAAEsgK,QAAQ,GAAG/tK,KAAKs1K,gBAAgB7nK,EAAEsgK,QAAQ,GAAG/tK,KAAKu1K,uBAAuB9nK,EAAEsgK,QAAQ,GAAG/tK,KAAKw1K,uBAAuB/nK,EAAEsgK,QAAQ,GAAG/tK,KAAKq0K,kBAAkB5mK,EAAEsgK,QAAQ,GAAG/tK,KAAK80K,cAAc,MAAM,IAAI51K,MAAM,mCAAmCc,KAAK65G,SAASpsG,EAAEi/J,SAAS1sK,KAAKm1K,gBAAgBn1K,KAAKy1K,gBAAgBhoK,GAAGzN,KAAK01K,qBAAqBjoK,GAAGzN,KAAK21K,YAAYloK,EAAEi/J,SAAS1sK,KAAKq1K,kBAAkB,EAAEb,kBAAkB,WAAWx0K,KAAKuuK,gBAAgB,KAAKvuK,KAAKwuK,eAAe,KAAK,IAAI/gK,EAAEzN,KAAK6zK,eAAe,EAAE7zK,KAAKwK,OAAO,GAAGxK,KAAKw1K,wBADm05B,IAC3y5B/nK,IAAQzN,KAAKwuK,eAAe,GAAGxuK,KAAKw1K,wBAD2w5B,IACnv5B/nK,IAAQzN,KAAKuuK,gBAAgBvuK,KAAKw1K,wBAAwB,GAAG,OAAOx1K,KAAKwK,KAAK,MAAMxK,KAAKkwK,YAAYn9J,OAAO,KAAK/S,KAAKwK,KAAI,EAAG,EAAEkrK,qBAAqB,SAASjoK,GAAG,GAAGzN,KAAK41K,YAAY,GAAG,CAAC,IAAIloK,EAAE,IAAIzO,EAAEe,KAAK41K,YAAY,GAAGlzK,OAAO1C,KAAK+sK,mBAAmBhmK,EAAEioK,mBAAmBhvK,KAAK+sK,iBAAiBr/J,EAAEqgK,QAAQ,IAAI/tK,KAAK8sK,iBAAiB/lK,EAAEioK,mBAAmBhvK,KAAK8sK,eAAep/J,EAAEqgK,QAAQ,IAAI/tK,KAAKq0K,oBAAoBttK,EAAEioK,mBAAmBhvK,KAAKq0K,kBAAkB3mK,EAAEqgK,QAAQ,IAAI/tK,KAAKs1K,kBAAkBvuK,EAAEioK,mBAAmBhvK,KAAKs1K,gBAAgB5nK,EAAEqgK,QAAQ,GAAG,CAAC,EAAE0H,gBAAgB,SAAShoK,GAAG,IAAIC,EAAEpK,EAAEqtB,EAAE1xB,EAAEwO,EAAE7B,MAAM,IAAI5L,KAAK41K,YAAY51K,KAAK41K,aAAa,CAAC,EAAEnoK,EAAE7B,MAAM3M,EAAEe,KAAKo1K,mBAAmB1nK,EAAED,EAAEsgK,QAAQ,GAAGzqK,EAAEmK,EAAEsgK,QAAQ,GAAGp9I,EAAEljB,EAAEugK,WAAW1qK,GAAGtD,KAAK41K,YAAYloK,GAAG,CAAC7O,GAAG6O,EAAExH,OAAO5C,EAAEZ,MAAMiuB,EAAE,EAAE4jJ,WAAW,WAAW,IAAI9mK,EAAEyF,EAAEo/J,WAAW,aAAa,QAAQ,GAAGtyK,KAAKg1K,UAAUh1K,KAAKkwK,YAAYxpJ,EAAEupJ,WAAWjwK,KAAK65G,UAAU75G,KAAKowK,eAAe1pJ,EAAEupJ,WAAWjwK,KAAK21K,iBAAiB,CAAC,IAAIjoK,EAAE1N,KAAK61K,4BAA4B,GAAG,OAAOnoK,EAAE1N,KAAKkwK,YAAYxiK,MAAM,CAAC,IAAIpK,EAAEyD,EAAEknK,YAAYxgK,EAAEzN,KAAK65G,UAAU75G,KAAKkwK,YAAYlwK,KAAKgzK,YAAYhD,eAAe1sK,EAAE,CAAC,IAAIqtB,EAAE3wB,KAAK81K,+BAA+B,GAAG,OAAOnlJ,EAAE3wB,KAAKowK,eAAez/I,MAAM,CAAC,IAAI1xB,EAAE8H,EAAEknK,YAAYxgK,EAAEzN,KAAK21K,aAAa31K,KAAKowK,eAAepwK,KAAKgzK,YAAYhD,eAAe/wK,EAAE,CAAC,CAAC,EAAE42K,0BAA0B,WAAW,IAAIpoK,EAAEzN,KAAK41K,YAAY,OAAO,GAAGnoK,EAAE,CAAC,IAAIC,EAAE,IAAIzO,EAAEwO,EAAE/K,OAAO,OAAO,IAAIgL,EAAEqgK,QAAQ,IAAQrnJ,EAAEsmJ,MAAMhtK,KAAK65G,YAAYnsG,EAAEqgK,QAAQ,GAAxC,KAAgDrnJ,EAAEupJ,WAAWviK,EAAEsgK,WAAWvgK,EAAEvH,OAAO,GAAG,CAAC,OAAO,IAAI,EAAE4vK,6BAA6B,WAAW,IAAIroK,EAAEzN,KAAK41K,YAAY,OAAO,GAAGnoK,EAAE,CAAC,IAAIC,EAAE,IAAIzO,EAAEwO,EAAE/K,OAAO,OAAO,IAAIgL,EAAEqgK,QAAQ,IAAQrnJ,EAAEsmJ,MAAMhtK,KAAK21K,eAAejoK,EAAEqgK,QAAQ,GAA3C,KAAmDrnJ,EAAEupJ,WAAWviK,EAAEsgK,WAAWvgK,EAAEvH,OAAO,GAAG,CAAC,OAAO,IAAI,GAAGwH,EAAElO,QAAQmxB,CAAC,EAAE,CAAC,qBAAqB,EAAE,WAAW,GAAG,iBAAiB,GAAG,YAAY,GAAG,UAAU,KAAK,GAAG,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAa,IAA2GojB,EAAE,CAAC,GAAEiK,EAA1GljB,EAAE,sBAAsBgkB,QAAoF/K,EAA3EjZ,EAAE,iBAAmBA,EAAE,iBAAmBA,EAAE,yBAAwCC,EAAElO,QAAQknB,CAAC,EAAE,CAAC,gBAAgB,GAAG,gBAAgB,GAAG,qBAAqB,GAAG,uBAAuB,KAAK,GAAG,CAAC,SAASjZ,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAG,KAAKzN,gBAAgB2wB,GAAG,OAAO,IAAIA,EAAEljB,GAAGzN,KAAKkC,QAAQgR,EAAEue,OAAO,CAAC+9I,MAAM/iK,EAAEiK,OAAOuoE,EAAE82F,UAAU,MAAMC,WAAW,GAAGC,SAAS,EAAEC,SAASn2I,EAAEwL,GAAG,IAAI99B,GAAG,CAAC,GAAG,IAAIC,EAAE1N,KAAKkC,QAAQwL,EAAEmR,KAAKnR,EAAEsoK,WAAW,EAAEtoK,EAAEsoK,YAAYtoK,EAAEsoK,WAAWtoK,EAAEyoK,MAAMzoK,EAAEsoK,WAAW,GAAGtoK,EAAEsoK,WAAW,KAAKtoK,EAAEsoK,YAAY,IAAIh2K,KAAKkI,IAAI,EAAElI,KAAKif,IAAI,GAAGjf,KAAKo2K,OAAM,EAAGp2K,KAAK6oD,OAAO,GAAG7oD,KAAKq2K,KAAK,IAAIpiK,EAAEjU,KAAKq2K,KAAKC,UAAU,EAAE,IAAIhzK,EAAEojB,EAAE6vJ,aAAav2K,KAAKq2K,KAAK3oK,EAAE8hK,MAAM9hK,EAAEgJ,OAAOhJ,EAAEsoK,WAAWtoK,EAAEuoK,SAASvoK,EAAEwoK,UAAU,GAAG5yK,IAAI0e,EAAE,MAAM,IAAI9iB,MAAM8U,EAAE1Q,IAAI,GAAGoK,EAAE21B,QAAQ3c,EAAE8vJ,iBAAiBx2K,KAAKq2K,KAAK3oK,EAAE21B,QAAQ31B,EAAE+oK,WAAW,CAAC,IAAIx3K,EAAE,GAAGA,EAAE,iBAAiByO,EAAE+oK,WAAWpxI,EAAEqxI,WAAWhpK,EAAE+oK,YAAY,yBAAyB3N,EAAEzqH,KAAK3wC,EAAE+oK,YAAY,IAAIrH,WAAW1hK,EAAE+oK,YAAY/oK,EAAE+oK,YAAWnzK,EAAEojB,EAAEiwJ,qBAAqB32K,KAAKq2K,KAAKp3K,MAAO+iB,EAAE,MAAM,IAAI9iB,MAAM8U,EAAE1Q,IAAItD,KAAK42K,WAAU,CAAE,CAAC,CAAC,SAAS33K,EAAEwO,EAAEC,GAAG,IAAIpK,EAAE,IAAIqtB,EAAEjjB,GAAG,GAAGpK,EAAEe,KAAKoJ,GAAE,GAAInK,EAAE4E,IAAI,MAAM5E,EAAE2b,IAAI,OAAO3b,EAAEqK,MAAM,CAAgG,IAAI+Y,EAAEjZ,EAAE,kBAAkByF,EAAEzF,EAAE,kBAAkB43B,EAAE53B,EAAE,mBAAmBuG,EAAEvG,EAAE,mBAAmBwG,EAAExG,EAAE,kBAAkBq7J,EAAEzpK,OAAO++C,UAAU/pC,SAAiB2N,EAAE,EAAUvV,GAAG,EAAEszB,EAAE,EAAEk/C,EAAE,EAAEtuD,EAAEytB,UAAU/5C,KAAK,SAASoJ,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE1xB,EAAEe,KAAKq2K,KAAKtvK,EAAE/G,KAAKkC,QAAQ6zK,UAAU,GAAG/1K,KAAKo2K,MAAM,OAAM,EAAGzlJ,EAAEjjB,MAAMA,EAAEA,GAAM,IAAJA,EAA1I,EAAJ,EAAyJ,iBAAiBD,EAAExO,EAAE43K,MAAMxxI,EAAEqxI,WAAWjpK,GAAG,yBAAyBq7J,EAAEzqH,KAAK5wC,GAAGxO,EAAE43K,MAAM,IAAIzH,WAAW3hK,GAAGxO,EAAE43K,MAAMppK,EAAExO,EAAE63K,QAAQ,EAAE73K,EAAE83K,SAAS93K,EAAE43K,MAAM3wK,OAAO,EAAE,CAAC,GAAG,IAAIjH,EAAEq3K,YAAYr3K,EAAE+3K,OAAO,IAAI9jK,EAAE+jK,KAAKlwK,GAAG9H,EAAEi4K,SAAS,EAAEj4K,EAAEq3K,UAAUvvK,GAA7W,KAAgXzD,EAAEojB,EAAEywJ,QAAQl4K,EAAE0xB,KAAUrtB,IAAI0e,EAAE,OAAOhiB,KAAKo3K,MAAM9zK,GAAGtD,KAAKo2K,OAAM,GAAG,EAAG,IAAIn3K,EAAEq3K,YAAY,IAAIr3K,EAAE83K,UAApd,IAA8dpmJ,GAAld,IAAydA,KAAS,WAAW3wB,KAAKkC,QAAQqpC,GAAGvrC,KAAKq3K,OAAOhyI,EAAEiyI,cAAcpkK,EAAEqkK,UAAUt4K,EAAE+3K,OAAO/3K,EAAEi4K,YAAYl3K,KAAKq3K,OAAOnkK,EAAEqkK,UAAUt4K,EAAE+3K,OAAO/3K,EAAEi4K,WAAW,QAAQj4K,EAAE83K,SAAS,GAAG,IAAI93K,EAAEq3K,YAA1oB,IAAspBhzK,GAAO,OAArqB,IAA4qBqtB,GAAOrtB,EAAEojB,EAAE8wJ,WAAWx3K,KAAKq2K,MAAMr2K,KAAKo3K,MAAM9zK,GAAGtD,KAAKo2K,OAAM,EAAG9yK,IAAI0e,GAAjuB,IAAouB2O,IAAQ3wB,KAAKo3K,MAAMp1J,GAAG/iB,EAAEq3K,UAAU,GAAE,EAAG,EAAE3lJ,EAAEytB,UAAUi5H,OAAO,SAAS5pK,GAAGzN,KAAK6oD,OAAOxkD,KAAKoJ,EAAE,EAAEkjB,EAAEytB,UAAUg5H,MAAM,SAAS3pK,GAAGA,IAAIuU,IAAI,WAAWhiB,KAAKkC,QAAQqpC,GAAGvrC,KAAK2N,OAAO3N,KAAK6oD,OAAO36C,KAAK,IAAIlO,KAAK2N,OAAOuF,EAAEukK,cAAcz3K,KAAK6oD,SAAS7oD,KAAK6oD,OAAO,GAAG7oD,KAAKkI,IAAIuF,EAAEzN,KAAKif,IAAIjf,KAAKq2K,KAAKp3J,GAAG,EAAE3b,EAAEo0K,QAAQ/mJ,EAAErtB,EAAE6zK,QAAQl4K,EAAEqE,EAAEisK,WAA1xC,SAAW9hK,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAImR,KAAI,EAAG5f,EAAEwO,EAAEC,EAAE,EAAyvCpK,EAAE6yK,KAA1vC,SAAW1oK,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAIyoK,MAAK,EAAGl3K,EAAEwO,EAAEC,EAAE,CAAitC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAG,KAAKzN,gBAAgB2wB,GAAG,OAAO,IAAIA,EAAEljB,GAAGzN,KAAKkC,QAAQwkB,EAAE+K,OAAO,CAACskJ,UAAU,MAAMC,WAAW,EAAEzqI,GAAG,IAAI99B,GAAG,CAAC,GAAG,IAAIC,EAAE1N,KAAKkC,QAAQwL,EAAEmR,KAAKnR,EAAEsoK,YAAY,GAAGtoK,EAAEsoK,WAAW,KAAKtoK,EAAEsoK,YAAYtoK,EAAEsoK,WAAW,IAAItoK,EAAEsoK,aAAatoK,EAAEsoK,YAAY,OAAOtoK,EAAEsoK,YAAY,GAAGtoK,EAAEsoK,WAAW,KAAKvoK,GAAGA,EAAEuoK,aAAatoK,EAAEsoK,YAAY,IAAItoK,EAAEsoK,WAAW,IAAItoK,EAAEsoK,WAAW,IAAI,IAAK,GAAGtoK,EAAEsoK,cAActoK,EAAEsoK,YAAY,IAAIh2K,KAAKkI,IAAI,EAAElI,KAAKif,IAAI,GAAGjf,KAAKo2K,OAAM,EAAGp2K,KAAK6oD,OAAO,GAAG7oD,KAAKq2K,KAAK,IAAIpiK,EAAEjU,KAAKq2K,KAAKC,UAAU,EAAE,IAAIhzK,EAAEy9G,EAAE42D,aAAa33K,KAAKq2K,KAAK3oK,EAAEsoK,YAAY,GAAG1yK,IAAI+hC,EAAEuyI,KAAK,MAAM,IAAI14K,MAAM8U,EAAE1Q,IAAItD,KAAKqjC,OAAO,IAAIylI,EAAE/nD,EAAE82D,iBAAiB73K,KAAKq2K,KAAKr2K,KAAKqjC,OAAO,CAAC,SAASpkC,EAAEwO,EAAEC,GAAG,IAAIpK,EAAE,IAAIqtB,EAAEjjB,GAAG,GAAGpK,EAAEe,KAAKoJ,GAAE,GAAInK,EAAE4E,IAAI,MAAM5E,EAAE2b,IAAI,OAAO3b,EAAEqK,MAAM,CAAgD,IAAIozG,EAAEtzG,EAAE,kBAAkBiZ,EAAEjZ,EAAE,kBAAkByF,EAAEzF,EAAE,mBAAmB43B,EAAE53B,EAAE,oBAAoBuG,EAAEvG,EAAE,mBAAmBwG,EAAExG,EAAE,kBAAkBq7J,EAAEr7J,EAAE,mBAAmBy2C,EAAE7kD,OAAO++C,UAAU/pC,SAASsc,EAAEytB,UAAU/5C,KAAK,SAASoJ,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE1xB,EAAE8H,EAAEiN,EAAEC,EAAE60J,EAAE9oK,KAAKq2K,KAAKr3K,EAAEgB,KAAKkC,QAAQ6zK,UAAU/zJ,EAAEhiB,KAAKkC,QAAQu0K,WAAWtuJ,GAAE,EAAG,GAAGnoB,KAAKo2K,MAAM,OAAM,EAAGzlJ,EAAEjjB,MAAMA,EAAEA,GAAM,IAAJA,EAAO23B,EAAEyyI,SAASzyI,EAAE0yI,WAAW,iBAAiBtqK,EAAEq7J,EAAE+N,MAAM3jK,EAAE8kK,cAAcvqK,GAAG,yBAAyBy2C,EAAE7F,KAAK5wC,GAAGq7J,EAAE+N,MAAM,IAAIzH,WAAW3hK,GAAGq7J,EAAE+N,MAAMppK,EAAEq7J,EAAEgO,QAAQ,EAAEhO,EAAEiO,SAASjO,EAAE+N,MAAM3wK,OAAO,EAAE,CAAC,GAAG,IAAI4iK,EAAEwN,YAAYxN,EAAEkO,OAAO,IAAItwJ,EAAEuwJ,KAAKj4K,GAAG8pK,EAAEoO,SAAS,EAAEpO,EAAEwN,UAAUt3K,IAAGsE,EAAEy9G,EAAEk3D,QAAQnP,EAAEzjI,EAAE0yI,eAAgB1yI,EAAE6yI,aAAal2J,IAAI/N,EAAE,iBAAiB+N,EAAE9O,EAAEwjK,WAAW10J,GAAG,yBAAyBkiC,EAAE7F,KAAKr8B,GAAG,IAAIotJ,WAAWptJ,GAAGA,EAAE1e,EAAEy9G,EAAEo3D,qBAAqBn4K,KAAKq2K,KAAKpiK,IAAI3Q,IAAI+hC,EAAE+yI,cAAiB,IAAJjwJ,IAAS7kB,EAAE+hC,EAAEuyI,KAAKzvJ,GAAE,GAAI7kB,IAAI+hC,EAAEgzI,cAAc/0K,IAAI+hC,EAAEuyI,KAAK,OAAO53K,KAAKo3K,MAAM9zK,GAAGtD,KAAKo2K,OAAM,GAAG,EAAGtN,EAAEoO,WAAW,IAAIpO,EAAEwN,WAAWhzK,IAAI+hC,EAAEgzI,eAAe,IAAIvP,EAAEiO,UAAUpmJ,IAAI0U,EAAEyyI,UAAUnnJ,IAAI0U,EAAEizI,gBAAgB,WAAWt4K,KAAKkC,QAAQqpC,IAAItsC,EAAEiU,EAAEqlK,WAAWzP,EAAEkO,OAAOlO,EAAEoO,UAAUnwK,EAAE+hK,EAAEoO,SAASj4K,EAAE+U,EAAEd,EAAEslK,WAAW1P,EAAEkO,OAAO/3K,GAAG6pK,EAAEoO,SAASnwK,EAAE+hK,EAAEwN,UAAUt3K,EAAE+H,EAAEA,GAAG2f,EAAE+xJ,SAAS3P,EAAEkO,OAAOlO,EAAEkO,OAAO/3K,EAAE8H,EAAE,GAAG/G,KAAKq3K,OAAOrjK,IAAIhU,KAAKq3K,OAAO3wJ,EAAE6wJ,UAAUzO,EAAEkO,OAAOlO,EAAEoO,aAAa,IAAIpO,EAAEiO,UAAU,IAAIjO,EAAEwN,YAAYnuJ,GAAE,EAAG,QAAQ2gJ,EAAEiO,SAAS,GAAG,IAAIjO,EAAEwN,YAAYhzK,IAAI+hC,EAAEgzI,cAAc,OAAO/0K,IAAI+hC,EAAEgzI,eAAe1nJ,EAAE0U,EAAEyyI,UAAUnnJ,IAAI0U,EAAEyyI,UAAUx0K,EAAEy9G,EAAE23D,WAAW14K,KAAKq2K,MAAMr2K,KAAKo3K,MAAM9zK,GAAGtD,KAAKo2K,OAAM,EAAG9yK,IAAI+hC,EAAEuyI,MAAMjnJ,IAAI0U,EAAEizI,eAAet4K,KAAKo3K,MAAM/xI,EAAEuyI,MAAM9O,EAAEwN,UAAU,GAAE,EAAG,EAAE3lJ,EAAEytB,UAAUi5H,OAAO,SAAS5pK,GAAGzN,KAAK6oD,OAAOxkD,KAAKoJ,EAAE,EAAEkjB,EAAEytB,UAAUg5H,MAAM,SAAS3pK,GAAGA,IAAI43B,EAAEuyI,OAAO,WAAW53K,KAAKkC,QAAQqpC,GAAGvrC,KAAK2N,OAAO3N,KAAK6oD,OAAO36C,KAAK,IAAIlO,KAAK2N,OAAO+Y,EAAE+wJ,cAAcz3K,KAAK6oD,SAAS7oD,KAAK6oD,OAAO,GAAG7oD,KAAKkI,IAAIuF,EAAEzN,KAAKif,IAAIjf,KAAKq2K,KAAKp3J,GAAG,EAAE3b,EAAEq1K,QAAQhoJ,EAAErtB,EAAE20K,QAAQh5K,EAAEqE,EAAEmsK,WAAjzD,SAAWhiK,EAAEC,GAAG,OAAOA,EAAEA,GAAG,CAAC,GAAImR,KAAI,EAAG5f,EAAEwO,EAAEC,EAAE,EAAgxDpK,EAAEs1K,OAAO35K,CAAC,EAAE,CAAC,iBAAiB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,KAAK,GAAG,CAAC,SAASwO,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAE,oBAAoBy+I,YAAY,oBAAoBC,aAAa,oBAAoBwJ,WAAWv1K,EAAEmuB,OAAO,SAAShkB,GAAG,IAAI,IAAIC,EAAEV,MAAMoxC,UAAUrrC,MAAMsrC,KAAKzrC,UAAU,GAAGlF,EAAExH,QAAQ,CAAC,IAAI5C,EAAEoK,EAAEwG,QAAQ,GAAG5Q,EAAE,CAAC,GAAG,iBAAiBA,EAAE,MAAM,IAAIilJ,UAAUjlJ,EAAE,sBAAsB,IAAI,IAAIqtB,KAAKrtB,EAAEA,EAAE26B,eAAetN,KAAKljB,EAAEkjB,GAAGrtB,EAAEqtB,GAAG,CAAC,CAAC,OAAOljB,CAAC,EAAEnK,EAAEi0K,UAAU,SAAS9pK,EAAEC,GAAG,OAAOD,EAAEvH,SAASwH,EAAED,EAAEA,EAAEolK,SAASplK,EAAEolK,SAAS,EAAEnlK,IAAID,EAAEvH,OAAOwH,EAAED,EAAE,EAAE,IAAIxO,EAAE,CAACw5K,SAAS,SAAShrK,EAAEC,EAAEpK,EAAEqtB,EAAE1xB,GAAG,GAAGyO,EAAEmlK,UAAUplK,EAAEolK,SAAqBplK,EAAEsM,IAAIrM,EAAEmlK,SAASvvK,EAAEA,EAAEqtB,GAAG1xB,QAAG,IAAI,IAAI8H,EAAE,EAAEA,EAAE4pB,EAAE5pB,IAAI0G,EAAExO,EAAE8H,GAAG2G,EAAEpK,EAAEyD,EAAE,EAAE0wK,cAAc,SAAShqK,GAAG,IAAIC,EAAEpK,EAAEqtB,EAAE1xB,EAAE8H,EAAEg6G,EAAE,IAAIpwF,EAAE,EAAEjjB,EAAE,EAAEpK,EAAEmK,EAAEvH,OAAOwH,EAAEpK,EAAEoK,IAAIijB,GAAGljB,EAAEC,GAAGxH,OAAO,IAAI66G,EAAE,IAAIquD,WAAWz+I,GAAG1xB,EAAE,EAAEyO,EAAE,EAAEpK,EAAEmK,EAAEvH,OAAOwH,EAAEpK,EAAEoK,IAAI3G,EAAE0G,EAAEC,GAAGqzG,EAAEhnG,IAAIhT,EAAE9H,GAAGA,GAAG8H,EAAEb,OAAO,OAAO66G,CAAC,GAAGh6G,EAAE,CAAC0xK,SAAS,SAAShrK,EAAEC,EAAEpK,EAAEqtB,EAAE1xB,GAAG,IAAI,IAAI8H,EAAE,EAAEA,EAAE4pB,EAAE5pB,IAAI0G,EAAExO,EAAE8H,GAAG2G,EAAEpK,EAAEyD,EAAE,EAAE0wK,cAAc,SAAShqK,GAAG,MAAM,GAAGqa,OAAO8lB,MAAM,GAAGngC,EAAE,GAAGnK,EAAEw1K,SAAS,SAASrrK,GAAGA,GAAGnK,EAAE2zK,KAAK7H,WAAW9rK,EAAEy1K,MAAM1J,YAAY/rK,EAAE01K,MAAMH,WAAWv1K,EAAEmuB,OAAOnuB,EAAErE,KAAKqE,EAAE2zK,KAAKjqK,MAAM1J,EAAEy1K,MAAM/rK,MAAM1J,EAAE01K,MAAMhsK,MAAM1J,EAAEmuB,OAAOnuB,EAAEyD,GAAG,EAAEzD,EAAEw1K,SAASnoJ,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAASljB,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,EAAEC,GAAG,GAAGA,EAAE,QAAQD,EAAEolK,UAAU9xD,IAAItzG,EAAEolK,UAAU9rK,GAAG,OAAOqU,OAAOuxI,aAAa/+G,MAAM,KAAK3uC,EAAEs4K,UAAU9pK,EAAEC,IAAI,IAAI,IAAIpK,EAAE,GAAGqtB,EAAE,EAAEA,EAAEjjB,EAAEijB,IAAIrtB,GAAG8X,OAAOuxI,aAAal/I,EAAEkjB,IAAI,OAAOrtB,CAAC,CAAC,IAAIrE,EAAEwO,EAAE,YAAY1G,GAAE,EAAGg6G,GAAE,EAAG,IAAI3lG,OAAOuxI,aAAa/+G,MAAM,KAAK,CAAC,GAAiB,CAAb,MAAMlnB,GAAG3f,GAAE,CAAE,CAAC,IAAIqU,OAAOuxI,aAAa/+G,MAAM,KAAK,IAAIwhI,WAAW,GAAiB,CAAb,MAAM1oJ,GAAGq6F,GAAE,CAAE,CAAC,IAAI,IAAI7tG,EAAE,IAAIjU,EAAEg4K,KAAK,KAAK5xI,EAAE,EAAEA,EAAE,IAAIA,IAAInyB,EAAEmyB,GAAGA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAEA,GAAG,IAAI,EAAE,EAAEnyB,EAAE,KAAKA,EAAE,KAAK,EAAE5P,EAAEozK,WAAW,SAASjpK,GAAG,IAAIC,EAAEpK,EAAEqtB,EAAE5pB,EAAEg6G,EAAEr6F,EAAEjZ,EAAEvH,OAAOgN,EAAE,EAAE,IAAInM,EAAE,EAAEA,EAAE2f,EAAE3f,IAAsB,QAAS,OAA3BzD,EAAEmK,EAAEo0J,WAAW96J,MAAsBA,EAAE,EAAE2f,GAAwB,QAAS,OAA7BiK,EAAEljB,EAAEo0J,WAAW96J,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKqtB,EAAE,OAAO5pB,KAAMmM,GAAG5P,EAAE,IAAI,EAAEA,EAAE,KAAK,EAAEA,EAAE,MAAM,EAAE,EAAE,IAAIoK,EAAE,IAAIzO,EAAEg4K,KAAK/jK,GAAG6tG,EAAE,EAAEh6G,EAAE,EAAEg6G,EAAE7tG,EAAEnM,IAAsB,QAAS,OAA3BzD,EAAEmK,EAAEo0J,WAAW96J,MAAsBA,EAAE,EAAE2f,GAAwB,QAAS,OAA7BiK,EAAEljB,EAAEo0J,WAAW96J,EAAE,OAAuBzD,EAAE,OAAOA,EAAE,OAAO,KAAKqtB,EAAE,OAAO5pB,KAAMzD,EAAE,IAAIoK,EAAEqzG,KAAKz9G,EAAEA,EAAE,MAAMoK,EAAEqzG,KAAK,IAAIz9G,IAAI,EAAEoK,EAAEqzG,KAAK,IAAI,GAAGz9G,GAAGA,EAAE,OAAOoK,EAAEqzG,KAAK,IAAIz9G,IAAI,GAAGoK,EAAEqzG,KAAK,IAAIz9G,IAAI,EAAE,GAAGoK,EAAEqzG,KAAK,IAAI,GAAGz9G,IAAIoK,EAAEqzG,KAAK,IAAIz9G,IAAI,GAAGoK,EAAEqzG,KAAK,IAAIz9G,IAAI,GAAG,GAAGoK,EAAEqzG,KAAK,IAAIz9G,IAAI,EAAE,GAAGoK,EAAEqzG,KAAK,IAAI,GAAGz9G,GAAG,OAAOoK,CAAC,EAAEpK,EAAEg0K,cAAc,SAAS7pK,GAAG,OAAOkjB,EAAEljB,EAAEA,EAAEvH,OAAO,EAAE5C,EAAE00K,cAAc,SAASvqK,GAAG,IAAI,IAAIC,EAAE,IAAIzO,EAAEg4K,KAAKxpK,EAAEvH,QAAQ5C,EAAE,EAAEqtB,EAAEjjB,EAAExH,OAAO5C,EAAEqtB,EAAErtB,IAAIoK,EAAEpK,GAAGmK,EAAEo0J,WAAWv+J,GAAG,OAAOoK,CAAC,EAAEpK,EAAEk1K,WAAW,SAAS/qK,EAAEC,GAAG,IAAIpK,EAAErE,EAAE8H,EAAEg6G,EAAEr6F,EAAEhZ,GAAGD,EAAEvH,OAAOm/B,EAAE,IAAIr4B,MAAM,EAAE0Z,GAAG,IAAIznB,EAAE,EAAEqE,EAAE,EAAEA,EAAEojB,GAAG,IAAG3f,EAAE0G,EAAEnK,MAAO,IAAI+hC,EAAEpmC,KAAK8H,OAAO,IAAGg6G,EAAE7tG,EAAEnM,IAAK,EAAEs+B,EAAEpmC,KAAK,MAAMqE,GAAGy9G,EAAE,MAAM,CAAC,IAAIh6G,GAAG,IAAIg6G,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAE,GAAGz9G,EAAEojB,GAAG3f,EAAEA,GAAG,EAAE,GAAG0G,EAAEnK,KAAKy9G,IAAIA,EAAE,EAAE17E,EAAEpmC,KAAK,MAAM8H,EAAE,MAAMs+B,EAAEpmC,KAAK8H,GAAGA,GAAG,MAAMs+B,EAAEpmC,KAAK,MAAM8H,GAAG,GAAG,KAAKs+B,EAAEpmC,KAAK,MAAM,KAAK8H,EAAE,CAAC,OAAO4pB,EAAE0U,EAAEpmC,EAAE,EAAEqE,EAAEi1K,WAAW,SAAS9qK,EAAEC,GAAG,IAAIpK,EAAE,KAAIoK,EAAEA,GAAGD,EAAEvH,QAASuH,EAAEvH,SAASwH,EAAED,EAAEvH,QAAQ5C,EAAEoK,EAAE,EAAEpK,GAAG,GAAG,MAAO,IAAImK,EAAEnK,KAAKA,IAAI,OAAOA,EAAE,GAAI,IAAIA,EAANoK,EAAUpK,EAAE4P,EAAEzF,EAAEnK,IAAIoK,EAAEpK,EAAEoK,CAAC,CAAC,EAAE,CAAC,WAAW,KAAK,GAAG,CAAC,SAASD,EAAEC,EAAEpK,GAAG,aAA2KoK,EAAElO,QAAhK,SAAWiO,EAAEC,EAAEpK,EAAEqtB,GAAG,IAAI,IAAI1xB,EAAE,MAAMwO,EAAE,EAAE1G,EAAE0G,IAAI,GAAG,MAAM,EAAEszG,EAAE,EAAE,IAAIz9G,GAAG,CAAeA,GAAdy9G,EAAEz9G,EAAE,IAAI,IAAIA,EAAO,GAAgByD,EAAEA,GAAf9H,EAAEA,EAAEyO,EAAEijB,KAAK,GAAQ,UAAUowF,GAAG9hH,GAAG,MAAM8H,GAAG,KAAK,CAAC,OAAO9H,EAAE8H,GAAG,GAAG,CAAC,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS0G,EAAEC,EAAEpK,GAAG,aAAaoK,EAAElO,QAAQ,CAACu4K,WAAW,EAAEkB,gBAAgB,EAAEX,aAAa,EAAEY,aAAa,EAAEpB,SAAS,EAAEqB,QAAQ,EAAEC,QAAQ,EAAExB,KAAK,EAAES,aAAa,EAAEH,YAAY,EAAEmB,SAAS,EAAEC,gBAAgB,EAAEC,cAAc,EAAEnB,aAAa,EAAEoB,iBAAiB,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,uBAAuB,EAAEC,WAAW,EAAEC,eAAe,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,WAAW,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS3sK,EAAEC,EAAEpK,GAAG,aAA6N,IAAIyD,EAApN,WAAa,IAAI,IAAI0G,EAAEC,EAAE,GAAGpK,EAAE,EAAEA,EAAE,IAAIA,IAAI,CAACmK,EAAEnK,EAAE,IAAI,IAAIqtB,EAAE,EAAEA,EAAE,EAAEA,IAAIljB,EAAE,EAAEA,EAAE,WAAWA,IAAI,EAAEA,IAAI,EAAEC,EAAEpK,GAAGmK,CAAC,CAAC,OAAOC,CAAC,CAAuGijB,GAAIjjB,EAAElO,QAA5G,SAAWiO,EAAEC,EAAEpK,EAAEqtB,GAAG,IAAI1xB,EAAE8H,EAAEg6G,EAAEpwF,EAAErtB,EAAEmK,IAAI,EAAE,IAAI,IAAIiZ,EAAEiK,EAAEjK,EAAEq6F,EAAEr6F,IAAIjZ,EAAEA,IAAI,EAAExO,EAAE,KAAKwO,EAAEC,EAAEgZ,KAAK,OAAU,EAAHjZ,CAAI,CAAsB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASA,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,EAAEC,GAAG,OAAOD,EAAEwR,IAAIo7J,EAAE3sK,GAAGA,CAAC,CAAC,SAASzO,EAAEwO,GAAG,OAAOA,GAAG,IAAIA,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS1G,EAAE0G,GAAG,IAAI,IAAIC,EAAED,EAAEvH,SAASwH,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAASqzG,EAAEtzG,GAAG,IAAIC,EAAED,EAAE89C,MAAMjoD,EAAEoK,EAAEmS,QAAQvc,EAAEmK,EAAE6oK,YAAYhzK,EAAEmK,EAAE6oK,WAAW,IAAIhzK,IAAI8tK,EAAEqH,SAAShrK,EAAEupK,OAAOtpK,EAAE4sK,YAAY5sK,EAAE6sK,YAAYj3K,EAAEmK,EAAEypK,UAAUzpK,EAAEypK,UAAU5zK,EAAEoK,EAAE6sK,aAAaj3K,EAAEmK,EAAE+sK,WAAWl3K,EAAEmK,EAAE6oK,WAAWhzK,EAAEoK,EAAEmS,SAASvc,EAAE,IAAIoK,EAAEmS,UAAUnS,EAAE6sK,YAAY,GAAG,CAAC,SAAS7zJ,EAAEjZ,EAAEC,GAAGzJ,EAAEw2K,gBAAgBhtK,EAAEA,EAAEitK,aAAa,EAAEjtK,EAAEitK,aAAa,EAAEjtK,EAAEktK,SAASltK,EAAEitK,YAAYhtK,GAAGD,EAAEitK,YAAYjtK,EAAEktK,SAAS55D,EAAEtzG,EAAE4oK,KAAK,CAAC,SAASnjK,EAAEzF,EAAEC,GAAGD,EAAE6sK,YAAY7sK,EAAEoS,WAAWnS,CAAC,CAAC,SAAS23B,EAAE53B,EAAEC,GAAGD,EAAE6sK,YAAY7sK,EAAEoS,WAAWnS,IAAI,EAAE,IAAID,EAAE6sK,YAAY7sK,EAAEoS,WAAW,IAAInS,CAAC,CAAC,SAASsG,EAAEvG,EAAEC,EAAEpK,EAAEqtB,GAAG,IAAI1xB,EAAEwO,EAAEspK,SAAS,OAAO93K,EAAE0xB,IAAI1xB,EAAE0xB,GAAG,IAAI1xB,EAAE,GAAGwO,EAAEspK,UAAU93K,EAAEmyK,EAAEqH,SAAS/qK,EAAED,EAAEopK,MAAMppK,EAAEqpK,QAAQ73K,EAAEqE,GAAG,IAAImK,EAAE89C,MAAMqvH,KAAKntK,EAAEotK,MAAMC,EAAErtK,EAAEotK,MAAMntK,EAAEzO,EAAEqE,GAAG,IAAImK,EAAE89C,MAAMqvH,OAAOntK,EAAEotK,MAAME,EAAEttK,EAAEotK,MAAMntK,EAAEzO,EAAEqE,IAAImK,EAAEqpK,SAAS73K,EAAEwO,EAAEutK,UAAU/7K,EAAEA,EAAE,CAAC,SAASgV,EAAExG,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE1xB,EAAEwO,EAAEwtK,iBAAiBl0K,EAAE0G,EAAEktK,SAAS55D,EAAEtzG,EAAEytK,YAAYx0J,EAAEjZ,EAAE0tK,WAAWjoK,EAAEzF,EAAEktK,SAASltK,EAAE2tK,OAAOC,GAAG5tK,EAAEktK,UAAUltK,EAAE2tK,OAAOC,IAAI,EAAEh2I,EAAE53B,EAAEyL,OAAOlF,EAAEvG,EAAE6tK,OAAOrnK,EAAExG,EAAE8tK,KAAKzS,EAAEr7J,EAAEktK,SAASa,GAAGt3H,EAAE7e,EAAEt+B,EAAEg6G,EAAE,GAAG/hH,EAAEqmC,EAAEt+B,EAAEg6G,GAAGtzG,EAAEytK,aAAaztK,EAAEguK,aAAax8K,IAAI,GAAGynB,EAAEjZ,EAAEiuK,YAAYh1J,EAAEjZ,EAAEiuK,WAAW,MAAUr2I,GAAJ/hC,EAAEoK,GAAMqzG,KAAK/hH,GAAGqmC,EAAE/hC,EAAEy9G,EAAE,KAAK78D,GAAG7e,EAAE/hC,KAAK+hC,EAAEt+B,IAAIs+B,IAAI/hC,KAAK+hC,EAAEt+B,EAAE,GAAG,CAACA,GAAG,EAAEzD,IAAI,UAAS+hC,IAAIt+B,KAAKs+B,IAAI/hC,IAAI+hC,IAAIt+B,KAAKs+B,IAAI/hC,IAAI+hC,IAAIt+B,KAAKs+B,IAAI/hC,IAAI+hC,IAAIt+B,KAAKs+B,IAAI/hC,IAAI+hC,IAAIt+B,KAAKs+B,IAAI/hC,IAAI+hC,IAAIt+B,KAAKs+B,IAAI/hC,IAAI+hC,IAAIt+B,KAAKs+B,IAAI/hC,IAAI+hC,IAAIt+B,KAAKs+B,IAAI/hC,IAAIyD,EAAE+hK,GAAG,GAAGn4I,EAAE6qJ,IAAI1S,EAAE/hK,GAAGA,EAAE+hK,EAAE0S,GAAG7qJ,EAAEowF,EAAE,CAAC,GAAGtzG,EAAEkuK,YAAYjuK,EAAEqzG,EAAEpwF,EAAEA,GAAGjK,EAAE,MAAMw9B,EAAE7e,EAAEt+B,EAAEg6G,EAAE,GAAG/hH,EAAEqmC,EAAEt+B,EAAEg6G,EAAE,CAAC,SAAQrzG,EAAEuG,EAAEvG,EAAEsG,IAAId,GAAG,KAAMjU,GAAG,OAAO8hH,GAAGtzG,EAAEiuK,UAAU36D,EAAEtzG,EAAEiuK,SAAS,CAAC,SAAS5S,EAAEr7J,GAAG,IAAIC,EAAEpK,EAAEqtB,EAAE1xB,EAAE8H,EAAEg6G,EAAEtzG,EAAE2tK,OAAO,EAAE,CAAC,GAAGn8K,EAAEwO,EAAEmuK,YAAYnuK,EAAEiuK,UAAUjuK,EAAEktK,SAASltK,EAAEktK,UAAU55D,GAAGA,EAAEs6D,IAAI,CAACjK,EAAEqH,SAAShrK,EAAEyL,OAAOzL,EAAEyL,OAAO6nG,EAAEA,EAAE,GAAGtzG,EAAEkuK,aAAa56D,EAAEtzG,EAAEktK,UAAU55D,EAAEtzG,EAAEitK,aAAa35D,EAAgBrzG,EAAdpK,EAAEmK,EAAEouK,UAAc,GAAGlrJ,EAAEljB,EAAEzM,OAAO0M,GAAGD,EAAEzM,KAAK0M,GAAGijB,GAAGowF,EAAEpwF,EAAEowF,EAAE,UAAUz9G,GAAOoK,EAAJpK,EAAEy9G,EAAM,GAAGpwF,EAAEljB,EAAE8tK,OAAO7tK,GAAGD,EAAE8tK,KAAK7tK,GAAGijB,GAAGowF,EAAEpwF,EAAEowF,EAAE,UAAUz9G,GAAGrE,GAAG8hH,CAAC,CAAC,GAAG,IAAItzG,EAAE4oK,KAAKU,SAAS,MAAM,GAAGzzK,EAAE0Q,EAAEvG,EAAE4oK,KAAK5oK,EAAEyL,OAAOzL,EAAEktK,SAASltK,EAAEiuK,UAAUz8K,GAAGwO,EAAEiuK,WAAWp4K,EAAEmK,EAAEiuK,UAAUjuK,EAAEquK,QAAQC,GAAG,IAAIh1K,EAAE0G,EAAEktK,SAASltK,EAAEquK,OAAOruK,EAAEuuK,MAAMvuK,EAAEyL,OAAOnS,GAAG0G,EAAEuuK,OAAOvuK,EAAEuuK,OAAOvuK,EAAEwuK,WAAWxuK,EAAEyL,OAAOnS,EAAE,IAAI0G,EAAEyuK,UAAUzuK,EAAEquK,SAASruK,EAAEuuK,OAAOvuK,EAAEuuK,OAAOvuK,EAAEwuK,WAAWxuK,EAAEyL,OAAOnS,EAAEg1K,GAAG,IAAItuK,EAAEyuK,UAAUzuK,EAAE8tK,KAAKx0K,EAAE0G,EAAE6tK,QAAQ7tK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEzM,KAAKyM,EAAEuuK,OAAOj1K,EAAEA,IAAI0G,EAAEquK,WAAWruK,EAAEiuK,UAAUjuK,EAAEquK,OAAOC,OAAO,OAAOtuK,EAAEiuK,UAAUL,IAAI,IAAI5tK,EAAE4oK,KAAKU,SAAS,CAAwiB,SAAS/3K,EAAEyO,EAAEC,GAAG,IAAI,IAAIpK,EAAEqtB,IAAI,CAAC,GAAGljB,EAAEiuK,UAAUL,GAAG,CAAC,GAAGvS,EAAEr7J,GAAGA,EAAEiuK,UAAUL,IAAI3tK,IAAIyuK,EAAE,OAAOC,GAAG,GAAG,IAAI3uK,EAAEiuK,UAAU,KAAK,CAAC,GAAGp4K,EAAE,EAAEmK,EAAEiuK,WAAWK,KAAKtuK,EAAEuuK,OAAOvuK,EAAEuuK,OAAOvuK,EAAEwuK,WAAWxuK,EAAEyL,OAAOzL,EAAEktK,SAASoB,GAAG,IAAItuK,EAAEyuK,UAAU54K,EAAEmK,EAAE8tK,KAAK9tK,EAAEktK,SAASltK,EAAE6tK,QAAQ7tK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEktK,UAAU,IAAIr3K,GAAGmK,EAAEktK,SAASr3K,GAAGmK,EAAE2tK,OAAOC,KAAK5tK,EAAE4uK,aAAapoK,EAAExG,EAAEnK,IAAImK,EAAE4uK,cAAcN,GAAG,GAAGprJ,EAAE1sB,EAAEq4K,UAAU7uK,EAAEA,EAAEktK,SAASltK,EAAEkuK,YAAYluK,EAAE4uK,aAAaN,IAAItuK,EAAEiuK,WAAWjuK,EAAE4uK,aAAa5uK,EAAE4uK,cAAc5uK,EAAE8uK,gBAAgB9uK,EAAEiuK,WAAWK,GAAG,CAACtuK,EAAE4uK,eAAe,GAAG5uK,EAAEktK,WAAWltK,EAAEuuK,OAAOvuK,EAAEuuK,OAAOvuK,EAAEwuK,WAAWxuK,EAAEyL,OAAOzL,EAAEktK,SAASoB,GAAG,IAAItuK,EAAEyuK,UAAU54K,EAAEmK,EAAE8tK,KAAK9tK,EAAEktK,SAASltK,EAAE6tK,QAAQ7tK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEktK,eAAe,KAAMltK,EAAE4uK,cAAc5uK,EAAEktK,UAAU,MAAMltK,EAAEktK,UAAUltK,EAAE4uK,aAAa5uK,EAAE4uK,aAAa,EAAE5uK,EAAEuuK,MAAMvuK,EAAEyL,OAAOzL,EAAEktK,UAAUltK,EAAEuuK,OAAOvuK,EAAEuuK,OAAOvuK,EAAEwuK,WAAWxuK,EAAEyL,OAAOzL,EAAEktK,SAAS,IAAIltK,EAAEyuK,eAAevrJ,EAAE1sB,EAAEq4K,UAAU7uK,EAAE,EAAEA,EAAEyL,OAAOzL,EAAEktK,WAAWltK,EAAEiuK,YAAYjuK,EAAEktK,WAAW,GAAGhqJ,IAAIjK,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO3uK,EAAEquK,OAAOruK,EAAEktK,SAASoB,GAAG,EAAEtuK,EAAEktK,SAASoB,GAAG,EAAEruK,IAAI8uK,GAAG91J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,UAAUmG,GAAGC,IAAIjvK,EAAEkvK,WAAWj2J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAAS56J,EAAEvU,EAAEC,GAAG,IAAI,IAAIpK,EAAEqtB,EAAE1xB,IAAI,CAAC,GAAGwO,EAAEiuK,UAAUL,GAAG,CAAC,GAAGvS,EAAEr7J,GAAGA,EAAEiuK,UAAUL,IAAI3tK,IAAIyuK,EAAE,OAAOC,GAAG,GAAG,IAAI3uK,EAAEiuK,UAAU,KAAK,CAAC,GAAGp4K,EAAE,EAAEmK,EAAEiuK,WAAWK,KAAKtuK,EAAEuuK,OAAOvuK,EAAEuuK,OAAOvuK,EAAEwuK,WAAWxuK,EAAEyL,OAAOzL,EAAEktK,SAASoB,GAAG,IAAItuK,EAAEyuK,UAAU54K,EAAEmK,EAAE8tK,KAAK9tK,EAAEktK,SAASltK,EAAE6tK,QAAQ7tK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEktK,UAAUltK,EAAEytK,YAAYztK,EAAE4uK,aAAa5uK,EAAEovK,WAAWpvK,EAAEkuK,YAAYluK,EAAE4uK,aAAaN,GAAG,EAAE,IAAIz4K,GAAGmK,EAAEytK,YAAYztK,EAAE8uK,gBAAgB9uK,EAAEktK,SAASr3K,GAAGmK,EAAE2tK,OAAOC,KAAK5tK,EAAE4uK,aAAapoK,EAAExG,EAAEnK,GAAGmK,EAAE4uK,cAAc,IAAI5uK,EAAEyoK,WAAW4G,GAAGrvK,EAAE4uK,eAAeN,IAAItuK,EAAEktK,SAASltK,EAAEkuK,YAAY,QAAQluK,EAAE4uK,aAAaN,GAAG,IAAItuK,EAAEytK,aAAaa,IAAItuK,EAAE4uK,cAAc5uK,EAAEytK,YAAY,CAACj8K,EAAEwO,EAAEktK,SAASltK,EAAEiuK,UAAUK,GAAGprJ,EAAE1sB,EAAEq4K,UAAU7uK,EAAEA,EAAEktK,SAAS,EAAEltK,EAAEovK,WAAWpvK,EAAEytK,YAAYa,IAAItuK,EAAEiuK,WAAWjuK,EAAEytK,YAAY,EAAEztK,EAAEytK,aAAa,EAAE,KAAIztK,EAAEktK,UAAU17K,IAAIwO,EAAEuuK,OAAOvuK,EAAEuuK,OAAOvuK,EAAEwuK,WAAWxuK,EAAEyL,OAAOzL,EAAEktK,SAASoB,GAAG,IAAItuK,EAAEyuK,UAAU54K,EAAEmK,EAAE8tK,KAAK9tK,EAAEktK,SAASltK,EAAE6tK,QAAQ7tK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEzM,KAAKyM,EAAEuuK,OAAOvuK,EAAEktK,gBAAgB,KAAMltK,EAAEytK,aAAa,GAAGztK,EAAEsvK,gBAAgB,EAAEtvK,EAAE4uK,aAAaN,GAAG,EAAEtuK,EAAEktK,WAAWhqJ,IAAIjK,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW,OAAO8F,EAAE,MAAM,GAAG3uK,EAAEsvK,iBAAiB,IAAGpsJ,EAAE1sB,EAAEq4K,UAAU7uK,EAAE,EAAEA,EAAEyL,OAAOzL,EAAEktK,SAAS,MAAOj0J,EAAEjZ,GAAE,GAAIA,EAAEktK,WAAWltK,EAAEiuK,YAAY,IAAIjuK,EAAE4oK,KAAKC,UAAU,OAAO8F,QAAQ3uK,EAAEsvK,gBAAgB,EAAEtvK,EAAEktK,WAAWltK,EAAEiuK,WAAW,CAAC,OAAOjuK,EAAEsvK,kBAAkBpsJ,EAAE1sB,EAAEq4K,UAAU7uK,EAAE,EAAEA,EAAEyL,OAAOzL,EAAEktK,SAAS,IAAIltK,EAAEsvK,gBAAgB,GAAGtvK,EAAEquK,OAAOruK,EAAEktK,SAASoB,GAAG,EAAEtuK,EAAEktK,SAASoB,GAAG,EAAEruK,IAAI8uK,GAAG91J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,UAAUmG,GAAGC,IAAIjvK,EAAEkvK,WAAWj2J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASz0J,EAAE1a,EAAEC,GAAG,IAAI,IAAIpK,EAAEqtB,EAAE1xB,EAAE8H,EAAEg6G,EAAEtzG,EAAEyL,SAAS,CAAC,GAAGzL,EAAEiuK,WAAWF,GAAG,CAAC,GAAG1S,EAAEr7J,GAAGA,EAAEiuK,WAAWF,IAAI9tK,IAAIyuK,EAAE,OAAOC,GAAG,GAAG,IAAI3uK,EAAEiuK,UAAU,KAAK,CAAC,GAAGjuK,EAAE4uK,aAAa,EAAE5uK,EAAEiuK,WAAWK,IAAItuK,EAAEktK,SAAS,IAAmBhqJ,EAAEowF,EAAjB9hH,EAAEwO,EAAEktK,SAAS,MAAa55D,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,GAAI,CAAC8H,EAAE0G,EAAEktK,SAASa,GAAG,UAAS7qJ,IAAIowF,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,IAAI0xB,IAAIowF,IAAI9hH,IAAIA,EAAE8H,GAAG0G,EAAE4uK,aAAab,IAAIz0K,EAAE9H,GAAGwO,EAAE4uK,aAAa5uK,EAAEiuK,YAAYjuK,EAAE4uK,aAAa5uK,EAAEiuK,UAAU,CAAC,GAAGjuK,EAAE4uK,cAAcN,IAAIz4K,EAAEW,EAAEq4K,UAAU7uK,EAAE,EAAEA,EAAE4uK,aAAaN,IAAItuK,EAAEiuK,WAAWjuK,EAAE4uK,aAAa5uK,EAAEktK,UAAUltK,EAAE4uK,aAAa5uK,EAAE4uK,aAAa,IAAI/4K,EAAEW,EAAEq4K,UAAU7uK,EAAE,EAAEA,EAAEyL,OAAOzL,EAAEktK,WAAWltK,EAAEiuK,YAAYjuK,EAAEktK,YAAYr3K,IAAIojB,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO3uK,EAAEquK,OAAO,EAAEpuK,IAAI8uK,GAAG91J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,UAAUmG,GAAGC,IAAIjvK,EAAEkvK,WAAWj2J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASrtK,EAAE9B,EAAEC,GAAG,IAAI,IAAIpK,IAAI,CAAC,GAAG,IAAImK,EAAEiuK,YAAY5S,EAAEr7J,GAAG,IAAIA,EAAEiuK,WAAW,CAAC,GAAGhuK,IAAIyuK,EAAE,OAAOC,GAAG,KAAK,CAAC,GAAG3uK,EAAE4uK,aAAa,EAAE/4K,EAAEW,EAAEq4K,UAAU7uK,EAAE,EAAEA,EAAEyL,OAAOzL,EAAEktK,WAAWltK,EAAEiuK,YAAYjuK,EAAEktK,WAAWr3K,IAAIojB,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO3uK,EAAEquK,OAAO,EAAEpuK,IAAI8uK,GAAG91J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,UAAUmG,GAAGC,IAAIjvK,EAAEkvK,WAAWj2J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW8F,GAAGQ,EAAE,CAAC,SAASnwK,EAAEgB,EAAEC,EAAEpK,EAAEqtB,EAAE1xB,GAAGe,KAAKg9K,YAAYvvK,EAAEzN,KAAKi9K,SAASvvK,EAAE1N,KAAKk9K,YAAY55K,EAAEtD,KAAKm9K,UAAUxsJ,EAAE3wB,KAAK+yJ,KAAK9zJ,CAAC,CAA6T,SAASggF,IAAIj/E,KAAKq2K,KAAK,KAAKr2K,KAAK+W,OAAO,EAAE/W,KAAKs6K,YAAY,KAAKt6K,KAAKo9K,iBAAiB,EAAEp9K,KAAKu6K,YAAY,EAAEv6K,KAAK6f,QAAQ,EAAE7f,KAAK46K,KAAK,EAAE56K,KAAKq9K,OAAO,KAAKr9K,KAAKs9K,QAAQ,EAAEt9K,KAAK0W,OAAO6mK,EAAEv9K,KAAKw9K,YAAY,EAAEx9K,KAAKo7K,OAAO,EAAEp7K,KAAKy9K,OAAO,EAAEz9K,KAAKs7K,OAAO,EAAEt7K,KAAKkZ,OAAO,KAAKlZ,KAAK47K,YAAY,EAAE57K,KAAKu7K,KAAK,KAAKv7K,KAAKgB,KAAK,KAAKhB,KAAKg8K,MAAM,EAAEh8K,KAAK67K,UAAU,EAAE77K,KAAK09K,UAAU,EAAE19K,KAAKk8K,UAAU,EAAEl8K,KAAKi8K,WAAW,EAAEj8K,KAAK06K,YAAY,EAAE16K,KAAKq8K,aAAa,EAAEr8K,KAAK68K,WAAW,EAAE78K,KAAK+8K,gBAAgB,EAAE/8K,KAAK26K,SAAS,EAAE36K,KAAK27K,YAAY,EAAE37K,KAAK07K,UAAU,EAAE17K,KAAKk7K,YAAY,EAAEl7K,KAAKi7K,iBAAiB,EAAEj7K,KAAKu8K,eAAe,EAAEv8K,KAAKwvK,MAAM,EAAExvK,KAAKk2K,SAAS,EAAEl2K,KAAKy7K,WAAW,EAAEz7K,KAAKm7K,WAAW,EAAEn7K,KAAK29K,UAAU,IAAIvM,EAAE2H,MAAM,EAAE6E,GAAI59K,KAAK69K,UAAU,IAAIzM,EAAE2H,MAAM,GAAG,EAAE+E,EAAG,IAAI99K,KAAK+9K,QAAQ,IAAI3M,EAAE2H,MAAM,GAAG,EAAEiF,EAAG,IAAIj3K,EAAE/G,KAAK29K,WAAW52K,EAAE/G,KAAK69K,WAAW92K,EAAE/G,KAAK+9K,SAAS/9K,KAAKi+K,OAAO,KAAKj+K,KAAKk+K,OAAO,KAAKl+K,KAAKm+K,QAAQ,KAAKn+K,KAAKo+K,SAAS,IAAIhN,EAAE2H,MAAMsF,EAAG,GAAGr+K,KAAKs+K,KAAK,IAAIlN,EAAE2H,MAAM,EAAEwF,EAAG,GAAGx3K,EAAE/G,KAAKs+K,MAAMt+K,KAAKw+K,SAAS,EAAEx+K,KAAKy+K,SAAS,EAAEz+K,KAAKqoF,MAAM,IAAI+oF,EAAE2H,MAAM,EAAEwF,EAAG,GAAGx3K,EAAE/G,KAAKqoF,OAAOroF,KAAK0+K,MAAM,EAAE1+K,KAAK2+K,YAAY,EAAE3+K,KAAK28K,SAAS,EAAE38K,KAAK4+K,MAAM,EAAE5+K,KAAK6+K,QAAQ,EAAE7+K,KAAK8+K,WAAW,EAAE9+K,KAAKqyJ,QAAQ,EAAEryJ,KAAK87K,OAAO,EAAE97K,KAAK++K,OAAO,EAAE/+K,KAAKg/K,SAAS,CAAC,CAAC,SAAS/rK,EAAExF,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE89C,OAAO99C,EAAEutK,SAASvtK,EAAE+sK,UAAU,EAAE/sK,EAAEwxK,UAAUC,GAAExxK,EAAED,EAAE89C,OAAQ1rC,QAAQ,EAAEnS,EAAE6sK,YAAY,EAAE7sK,EAAEktK,KAAK,IAAIltK,EAAEktK,MAAMltK,EAAEktK,MAAMltK,EAAEqJ,OAAOrJ,EAAEktK,KAAKuE,GAAGC,GAAG3xK,EAAEotK,MAAM,IAAIntK,EAAEktK,KAAK,EAAE,EAAEltK,EAAE8vK,WAAWrB,EAAEl4K,EAAEo7K,SAAS3xK,GAAG4xK,GAAG3uJ,EAAEljB,EAAE8xK,EAAE,CAAC,SAASznG,EAAErqE,GAAG,IAAIC,EAAEuF,EAAExF,GAAG,OAAOC,IAAI4xK,GAAptD,SAAW7xK,GAAGA,EAAEmuK,YAAY,EAAEnuK,EAAE2tK,OAAOr0K,EAAE0G,EAAEzM,MAAMyM,EAAE8uK,eAAe5L,EAAEljK,EAAE+hK,OAAOyN,SAASxvK,EAAEguK,WAAW9K,EAAEljK,EAAE+hK,OAAOwN,YAAYvvK,EAAE0tK,WAAWxK,EAAEljK,EAAE+hK,OAAO0N,YAAYzvK,EAAEwtK,iBAAiBtK,EAAEljK,EAAE+hK,OAAO2N,UAAU1vK,EAAEktK,SAAS,EAAEltK,EAAEitK,YAAY,EAAEjtK,EAAEiuK,UAAU,EAAEjuK,EAAEquK,OAAO,EAAEruK,EAAE4uK,aAAa5uK,EAAEytK,YAAYa,GAAG,EAAEtuK,EAAEsvK,gBAAgB,EAAEtvK,EAAEuuK,MAAM,CAAC,CAA45Cj8I,CAAEtyB,EAAE89C,OAAO79C,CAAC,CAA6E,SAAS+tD,EAAEhuD,EAAEC,EAAEpK,EAAErE,EAAE8H,EAAEg6G,GAAG,IAAItzG,EAAE,OAAO8xK,EAAE,IAAI74J,EAAE,EAAE,GAAGhZ,IAAI8mJ,IAAI9mJ,EAAE,GAAGzO,EAAE,GAAGynB,EAAE,EAAEznB,GAAGA,GAAGA,EAAE,KAAKynB,EAAE,EAAEznB,GAAG,IAAI8H,EAAE,GAAGA,EAAE6mI,GAAGtqI,IAAIi6K,GAAGt+K,EAAE,GAAGA,EAAE,IAAIyO,EAAE,GAAGA,EAAE,GAAGqzG,EAAE,GAAGA,EAAEy+D,EAAE,OAAO7uJ,EAAEljB,EAAE8xK,GAAG,IAAItgL,IAAIA,EAAE,GAAG,IAAIiU,EAAE,IAAI+rE,EAAE,OAAOxxE,EAAE89C,MAAMr4C,EAAEA,EAAEmjK,KAAK5oK,EAAEyF,EAAE0nK,KAAKl0J,EAAExT,EAAEmqK,OAAO,KAAKnqK,EAAEuqK,OAAOx+K,EAAEiU,EAAEkoK,OAAO,GAAGloK,EAAEuqK,OAAOvqK,EAAEooK,OAAOpoK,EAAEkoK,OAAO,EAAEloK,EAAEwqK,UAAU32K,EAAE,EAAEmM,EAAE2oK,UAAU,GAAG3oK,EAAEwqK,UAAUxqK,EAAEgpK,UAAUhpK,EAAE2oK,UAAU,EAAE3oK,EAAE+oK,eAAe/oK,EAAEwqK,UAAU3B,GAAG,GAAGA,IAAI7oK,EAAEgG,OAAO,IAAIk4J,EAAE6F,KAAK,EAAE/jK,EAAEkoK,QAAQloK,EAAElS,KAAK,IAAIowK,EAAE2H,MAAM7lK,EAAE2oK,WAAW3oK,EAAEqoK,KAAK,IAAInK,EAAE2H,MAAM7lK,EAAEkoK,QAAQloK,EAAEyrK,YAAY,GAAG53K,EAAE,EAAEmM,EAAEkqK,iBAAiB,EAAElqK,EAAEyrK,YAAYzrK,EAAEonK,YAAY,IAAIlJ,EAAE6F,KAAK/jK,EAAEkqK,kBAAkBlqK,EAAE0rK,MAAM,EAAE1rK,EAAEyrK,YAAYzrK,EAAEwrK,MAAM,EAAExrK,EAAEyrK,YAAYzrK,EAAEs8J,MAAM9hK,EAAEwF,EAAEgjK,SAASn1D,EAAE7tG,EAAEwD,OAAOpT,EAAEw0E,EAAErqE,EAAE,CAAy6I,IAAIkjK,EAAES,EAAE3jK,EAAE,mBAAmBxJ,EAAEwJ,EAAE,WAAWqtK,EAAErtK,EAAE,aAAastK,EAAEttK,EAAE,WAAW4sK,EAAE5sK,EAAE,cAAc0uK,EAAE,EAAEsD,EAAE,EAAE1/K,EAAE,EAAEy8K,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,GAAG,EAAEK,GAAG,EAAEC,GAAG,EAAErrB,GAAG,EAAEsoB,EAAE,EAAE7uI,EAAE,EAAE6xI,EAAE,EAAEN,EAAE,EAAEO,EAAE,EAAEb,EAAE,EAAE3B,EAAE,EAAE3vC,EAAE,EAAEoyC,EAAG,GAAGC,EAAG,EAAe1B,EAAG2B,IAAQpC,EAAG,GAAGE,EAAG,GAAGJ,EAAG,EAAEW,EAAG,EAAEF,EAAG,GAAGtC,GAAG,EAAEP,GAAG,IAAIH,GAAGG,GAAGO,GAAG,EAAEoE,GAAG,GAAGhB,GAAG,GAAGiB,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,IAAInB,GAAG,IAAIoB,GAAG,IAAIpE,GAAG,EAAEQ,GAAG,EAAEH,GAAG,EAAEC,GAAG,EAAE+D,GAAG,EAAE9P,EAAE,CAAC,IAAIlkK,EAAE,EAAE,EAAE,EAAE,GAAl/W,SAAWgB,EAAEC,GAAG,IAAIpK,EAAE,MAAM,IAAIA,EAAEmK,EAAE2vK,iBAAiB,IAAI95K,EAAEmK,EAAE2vK,iBAAiB,KAAK,CAAC,GAAG3vK,EAAEiuK,WAAW,EAAE,CAAC,GAAG5S,EAAEr7J,GAAG,IAAIA,EAAEiuK,WAAWhuK,IAAIyuK,EAAE,OAAOC,GAAG,GAAG,IAAI3uK,EAAEiuK,UAAU,KAAK,CAACjuK,EAAEktK,UAAUltK,EAAEiuK,UAAUjuK,EAAEiuK,UAAU,EAAE,IAAI/qJ,EAAEljB,EAAEitK,YAAYp3K,EAAE,IAAI,IAAImK,EAAEktK,UAAUltK,EAAEktK,UAAUhqJ,KAAKljB,EAAEiuK,UAAUjuK,EAAEktK,SAAShqJ,EAAEljB,EAAEktK,SAAShqJ,EAAEjK,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW,OAAO8F,GAAG,GAAG3uK,EAAEktK,SAASltK,EAAEitK,aAAajtK,EAAE2tK,OAAOC,KAAK30J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,WAAW,OAAO8F,EAAE,CAAC,OAAO3uK,EAAEquK,OAAO,EAAEpuK,IAAI8uK,GAAG91J,EAAEjZ,GAAE,GAAI,IAAIA,EAAE4oK,KAAKC,UAAUmG,GAAGC,KAAIjvK,EAAEktK,SAASltK,EAAEitK,cAAch0J,EAAEjZ,GAAE,GAAQA,EAAE4oK,KAAKC,WAAW8F,GAAK,IAAi9V,IAAI3vK,EAAE,EAAE,EAAE,EAAE,EAAEzN,GAAG,IAAIyN,EAAE,EAAE,EAAE,GAAG,EAAEzN,GAAG,IAAIyN,EAAE,EAAE,EAAE,GAAG,GAAGzN,GAAG,IAAIyN,EAAE,EAAE,EAAE,GAAG,GAAGuV,GAAG,IAAIvV,EAAE,EAAE,GAAG,GAAG,GAAGuV,GAAG,IAAIvV,EAAE,EAAE,GAAG,IAAI,IAAIuV,GAAG,IAAIvV,EAAE,EAAE,GAAG,IAAI,IAAIuV,GAAG,IAAIvV,EAAE,GAAG,IAAI,IAAI,KAAKuV,GAAG,IAAIvV,EAAE,GAAG,IAAI,IAAI,KAAKuV,IAAI1e,EAAEo9K,YAA18J,SAAWjzK,EAAEC,GAAG,OAAO+tD,EAAEhuD,EAAEC,EAAE6vK,EAAEyC,EAAGC,EAAGF,EAAE,EAAi7Jz8K,EAAEizK,aAAa96G,EAAEn4D,EAAEq9K,aAAa7oG,EAAEx0E,EAAEs9K,iBAAiB3tK,EAAE3P,EAAEkzK,iBAA7vL,SAAW/oK,EAAEC,GAAG,OAAOD,GAAGA,EAAE89C,MAAM,IAAI99C,EAAE89C,MAAMqvH,KAAK2E,GAAG9xK,EAAE89C,MAAM8xH,OAAO3vK,EAAE4xK,GAAGC,CAAC,EAAqsLj8K,EAAE6zK,QAA9/J,SAAW1pK,EAAEC,GAAG,IAAIpK,EAAEojB,EAAE1S,EAAEC,EAAE,IAAIxG,IAAIA,EAAE89C,OAAO79C,EAAEgyK,GAAGhyK,EAAE,EAAE,OAAOD,EAAEkjB,EAAEljB,EAAE8xK,GAAGA,EAAE,GAAG74J,EAAEjZ,EAAE89C,OAAO99C,EAAEupK,SAASvpK,EAAEopK,OAAO,IAAIppK,EAAEspK,UAAUrwJ,EAAE3P,SAASypK,IAAI9yK,IAAI8uK,EAAE,OAAO7rJ,EAAEljB,EAAE,IAAIA,EAAE6oK,UAAUuJ,EAAEN,GAAG,GAAG74J,EAAE2vJ,KAAK5oK,EAAEnK,EAAEojB,EAAE82J,WAAW92J,EAAE82J,WAAW9vK,EAAEgZ,EAAE3P,SAASooK,GAAG,GAAG,IAAIz4J,EAAEk0J,KAAKntK,EAAEotK,MAAM,EAAE3nK,EAAEwT,EAAE,IAAIxT,EAAEwT,EAAE,KAAKxT,EAAEwT,EAAE,GAAGA,EAAE22J,QAAQnqK,EAAEwT,GAAGA,EAAE22J,OAAOpvK,KAAK,EAAE,IAAIyY,EAAE22J,OAAOwD,KAAK,EAAE,IAAIn6J,EAAE22J,OAAOyD,MAAM,EAAE,IAAIp6J,EAAE22J,OAAOn2K,KAAK,EAAE,IAAIwf,EAAE22J,OAAOntD,QAAQ,GAAG,IAAIh9G,EAAEwT,EAAE,IAAIA,EAAE22J,OAAO0D,MAAM7tK,EAAEwT,EAAEA,EAAE22J,OAAO0D,MAAM,EAAE,KAAK7tK,EAAEwT,EAAEA,EAAE22J,OAAO0D,MAAM,GAAG,KAAK7tK,EAAEwT,EAAEA,EAAE22J,OAAO0D,MAAM,GAAG,KAAK7tK,EAAEwT,EAAE,IAAIA,EAAE8oJ,MAAM,EAAE9oJ,EAAEwvJ,UAAUjoI,GAAGvnB,EAAE8oJ,MAAM,EAAE,EAAE,GAAGt8J,EAAEwT,EAAE,IAAIA,EAAE22J,OAAO2D,IAAIt6J,EAAE22J,OAAOyD,OAAOp6J,EAAE22J,OAAOyD,MAAM56K,SAASgN,EAAEwT,EAAE,IAAIA,EAAE22J,OAAOyD,MAAM56K,QAAQgN,EAAEwT,EAAEA,EAAE22J,OAAOyD,MAAM56K,QAAQ,EAAE,MAAMwgB,EAAE22J,OAAOwD,OAAOpzK,EAAEotK,MAAME,EAAEttK,EAAEotK,MAAMn0J,EAAE4zJ,YAAY5zJ,EAAE7G,QAAQ,IAAI6G,EAAE42J,QAAQ,EAAE52J,EAAE3P,OAAOqpK,KAAKltK,EAAEwT,EAAE,GAAGxT,EAAEwT,EAAE,GAAGxT,EAAEwT,EAAE,GAAGxT,EAAEwT,EAAE,GAAGxT,EAAEwT,EAAE,GAAGxT,EAAEwT,EAAE,IAAIA,EAAE8oJ,MAAM,EAAE9oJ,EAAEwvJ,UAAUjoI,GAAGvnB,EAAE8oJ,MAAM,EAAE,EAAE,GAAGt8J,EAAEwT,EAAE+5J,IAAI/5J,EAAE3P,OAAOqoK,QAAQ,CAAC,IAAItW,EAAEyU,GAAG72J,EAAE+2J,OAAO,GAAG,IAAI,EAAgE3U,IAAvDpiJ,EAAEwvJ,UAAUjoI,GAAGvnB,EAAE8oJ,MAAM,EAAE,EAAE9oJ,EAAE8oJ,MAAM,EAAE,EAAE,IAAI9oJ,EAAE8oJ,MAAM,EAAE,IAAQ,EAAE,IAAI9oJ,EAAEi0J,WAAW7R,GAAGqX,IAAIrX,GAAG,GAAGA,EAAE,GAAGpiJ,EAAE3P,OAAOqoK,GAAG/5I,EAAE3e,EAAEoiJ,GAAG,IAAIpiJ,EAAEi0J,WAAWt1I,EAAE3e,EAAEjZ,EAAEotK,QAAQ,IAAIx1I,EAAE3e,EAAE,MAAMjZ,EAAEotK,QAAQptK,EAAEotK,MAAM,CAAC,CAAC,GAAGn0J,EAAE3P,SAASqpK,GAAG,GAAG15J,EAAE22J,OAAOyD,MAAM,CAAC,IAAI9sK,EAAE0S,EAAE7G,QAAQ6G,EAAE42J,SAAS,MAAM52J,EAAE22J,OAAOyD,MAAM56K,UAAUwgB,EAAE7G,UAAU6G,EAAE02J,mBAAmB12J,EAAE22J,OAAOwD,MAAMn6J,EAAE7G,QAAQ7L,IAAIvG,EAAEotK,MAAME,EAAEttK,EAAEotK,MAAMn0J,EAAE4zJ,YAAY5zJ,EAAE7G,QAAQ7L,EAAEA,IAAI+sG,EAAEtzG,GAAGuG,EAAE0S,EAAE7G,QAAQ6G,EAAE7G,UAAU6G,EAAE02J,oBAAoBlqK,EAAEwT,EAAE,IAAIA,EAAE22J,OAAOyD,MAAMp6J,EAAE42J,UAAU52J,EAAE42J,UAAU52J,EAAE22J,OAAOwD,MAAMn6J,EAAE7G,QAAQ7L,IAAIvG,EAAEotK,MAAME,EAAEttK,EAAEotK,MAAMn0J,EAAE4zJ,YAAY5zJ,EAAE7G,QAAQ7L,EAAEA,IAAI0S,EAAE42J,UAAU52J,EAAE22J,OAAOyD,MAAM56K,SAASwgB,EAAE42J,QAAQ,EAAE52J,EAAE3P,OAAOspK,GAAG,MAAM35J,EAAE3P,OAAOspK,GAAG,GAAG35J,EAAE3P,SAASspK,GAAG,GAAG35J,EAAE22J,OAAOn2K,KAAK,CAAC8M,EAAE0S,EAAE7G,QAAQ,EAAE,CAAC,GAAG6G,EAAE7G,UAAU6G,EAAE02J,mBAAmB12J,EAAE22J,OAAOwD,MAAMn6J,EAAE7G,QAAQ7L,IAAIvG,EAAEotK,MAAME,EAAEttK,EAAEotK,MAAMn0J,EAAE4zJ,YAAY5zJ,EAAE7G,QAAQ7L,EAAEA,IAAI+sG,EAAEtzG,GAAGuG,EAAE0S,EAAE7G,QAAQ6G,EAAE7G,UAAU6G,EAAE02J,kBAAkB,CAACnpK,EAAE,EAAE,KAAK,CAACA,EAAEyS,EAAE42J,QAAQ52J,EAAE22J,OAAOn2K,KAAKhB,OAAO,IAAIwgB,EAAE22J,OAAOn2K,KAAK26J,WAAWn7I,EAAE42J,WAAW,EAAEpqK,EAAEwT,EAAEzS,EAAE,OAAO,IAAIA,GAAGyS,EAAE22J,OAAOwD,MAAMn6J,EAAE7G,QAAQ7L,IAAIvG,EAAEotK,MAAME,EAAEttK,EAAEotK,MAAMn0J,EAAE4zJ,YAAY5zJ,EAAE7G,QAAQ7L,EAAEA,IAAI,IAAIC,IAAIyS,EAAE42J,QAAQ,EAAE52J,EAAE3P,OAAOupK,GAAG,MAAM55J,EAAE3P,OAAOupK,GAAG,GAAG55J,EAAE3P,SAASupK,GAAG,GAAG55J,EAAE22J,OAAOntD,QAAQ,CAACl8G,EAAE0S,EAAE7G,QAAQ,EAAE,CAAC,GAAG6G,EAAE7G,UAAU6G,EAAE02J,mBAAmB12J,EAAE22J,OAAOwD,MAAMn6J,EAAE7G,QAAQ7L,IAAIvG,EAAEotK,MAAME,EAAEttK,EAAEotK,MAAMn0J,EAAE4zJ,YAAY5zJ,EAAE7G,QAAQ7L,EAAEA,IAAI+sG,EAAEtzG,GAAGuG,EAAE0S,EAAE7G,QAAQ6G,EAAE7G,UAAU6G,EAAE02J,kBAAkB,CAACnpK,EAAE,EAAE,KAAK,CAACA,EAAEyS,EAAE42J,QAAQ52J,EAAE22J,OAAOntD,QAAQhqH,OAAO,IAAIwgB,EAAE22J,OAAOntD,QAAQ2xC,WAAWn7I,EAAE42J,WAAW,EAAEpqK,EAAEwT,EAAEzS,EAAE,OAAO,IAAIA,GAAGyS,EAAE22J,OAAOwD,MAAMn6J,EAAE7G,QAAQ7L,IAAIvG,EAAEotK,MAAME,EAAEttK,EAAEotK,MAAMn0J,EAAE4zJ,YAAY5zJ,EAAE7G,QAAQ7L,EAAEA,IAAI,IAAIC,IAAIyS,EAAE3P,OAAOwpK,GAAG,MAAM75J,EAAE3P,OAAOwpK,GAAG,GAAG75J,EAAE3P,SAASwpK,KAAK75J,EAAE22J,OAAOwD,MAAMn6J,EAAE7G,QAAQ,EAAE6G,EAAE02J,kBAAkBr8D,EAAEtzG,GAAGiZ,EAAE7G,QAAQ,GAAG6G,EAAE02J,mBAAmBlqK,EAAEwT,EAAE,IAAIjZ,EAAEotK,OAAO3nK,EAAEwT,EAAEjZ,EAAEotK,OAAO,EAAE,KAAKptK,EAAEotK,MAAM,EAAEn0J,EAAE3P,OAAOqoK,KAAK14J,EAAE3P,OAAOqoK,IAAI,IAAI14J,EAAE7G,SAAS,GAAGkhG,EAAEtzG,GAAG,IAAIA,EAAE6oK,UAAU,OAAO5vJ,EAAE82J,YAAY,EAAE8B,OAAO,GAAG,IAAI7xK,EAAEspK,UAAU93K,EAAEyO,IAAIzO,EAAEqE,IAAIoK,IAAI8uK,EAAE,OAAO7rJ,EAAEljB,EAAEoyK,GAAG,GAAGn5J,EAAE3P,SAASypK,IAAI,IAAI/yK,EAAEspK,SAAS,OAAOpmJ,EAAEljB,EAAEoyK,GAAG,GAAG,IAAIpyK,EAAEspK,UAAU,IAAIrwJ,EAAEg1J,WAAWhuK,IAAIyuK,GAAGz1J,EAAE3P,SAASypK,GAAG,CAAC,IAAIxhL,EAAE0nB,EAAEwvJ,WAAWjoI,EAAE1+B,EAAEmX,EAAEhZ,GAAGgZ,EAAEwvJ,WAAW4J,EAAE33J,EAAEzB,EAAEhZ,GAAGijK,EAAEjqJ,EAAE8oJ,OAAOzc,KAAKrsI,EAAEhZ,GAAG,GAAG1O,IAAIy9K,IAAIz9K,IAAI09K,KAAKh2J,EAAE3P,OAAOypK,IAAIxhL,IAAIo9K,IAAIp9K,IAAIy9K,GAAG,OAAO,IAAIhvK,EAAE6oK,YAAY5vJ,EAAE82J,YAAY,GAAG8B,EAAE,GAAGtgL,IAAI49K,KAAKlvK,IAAI+xK,EAAEx7K,EAAEg9K,UAAUv6J,GAAGhZ,IAAIgyK,IAAIz7K,EAAEi9K,iBAAiBx6J,EAAE,EAAE,GAAE,GAAIhZ,IAAI3N,IAAIgH,EAAE2f,EAAE1lB,MAAM,IAAI0lB,EAAEg1J,YAAYh1J,EAAEi0J,SAAS,EAAEj0J,EAAEg0J,YAAY,EAAEh0J,EAAEo1J,OAAO,KAAK/6D,EAAEtzG,GAAG,IAAIA,EAAE6oK,WAAW,OAAO5vJ,EAAE82J,YAAY,EAAE8B,CAAC,CAAC,OAAO5xK,IAAI8uK,EAAE8C,EAAE54J,EAAEk0J,MAAM,EAAE+E,GAAG,IAAIj5J,EAAEk0J,MAAM1nK,EAAEwT,EAAE,IAAIjZ,EAAEotK,OAAO3nK,EAAEwT,EAAEjZ,EAAEotK,OAAO,EAAE,KAAK3nK,EAAEwT,EAAEjZ,EAAEotK,OAAO,GAAG,KAAK3nK,EAAEwT,EAAEjZ,EAAEotK,OAAO,GAAG,KAAK3nK,EAAEwT,EAAE,IAAIjZ,EAAEutK,UAAU9nK,EAAEwT,EAAEjZ,EAAEutK,UAAU,EAAE,KAAK9nK,EAAEwT,EAAEjZ,EAAEutK,UAAU,GAAG,KAAK9nK,EAAEwT,EAAEjZ,EAAEutK,UAAU,GAAG,OAAO31I,EAAE3e,EAAEjZ,EAAEotK,QAAQ,IAAIx1I,EAAE3e,EAAE,MAAMjZ,EAAEotK,QAAQ95D,EAAEtzG,GAAGiZ,EAAEk0J,KAAK,IAAIl0J,EAAEk0J,MAAMl0J,EAAEk0J,MAAM,IAAIl0J,EAAE7G,QAAQy/J,EAAEK,EAAE,EAA2lDr8K,EAAEk0K,WAA5lD,SAAW/pK,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE89C,OAAO79C,EAAED,EAAE89C,MAAMx0C,UAAWooK,IAAIzxK,IAAI0yK,IAAI1yK,IAAI2yK,IAAI3yK,IAAI4yK,IAAI5yK,IAAI6yK,IAAI7yK,IAAI0xK,IAAI1xK,IAAI8yK,GAAG7vJ,EAAEljB,EAAE8xK,IAAI9xK,EAAE89C,MAAM,KAAK79C,IAAI0xK,GAAGzuJ,EAAEljB,EAAEmyK,GAAGN,GAAIC,CAAC,EAAk9Cj8K,EAAEqzK,qBAAn9C,SAAWlpK,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE1xB,EAAE8hH,EAAEr6F,EAAExT,EAAEmyB,EAAErxB,EAAEC,EAAEvG,EAAExH,OAAO,IAAIuH,IAAIA,EAAE89C,MAAM,OAAOg0H,EAAE,GAAsB,KAATx+D,GAAVz9G,EAAEmK,EAAE89C,OAAUqvH,OAAY,IAAI75D,GAAGz9G,EAAEyT,SAASooK,IAAI77K,EAAEo4K,UAAU,OAAO6D,EAAE,IAAI,IAAIx+D,IAAItzG,EAAEotK,MAAMC,EAAErtK,EAAEotK,MAAMntK,EAAEuG,EAAE,IAAI3Q,EAAEs3K,KAAK,EAAE3mK,GAAG3Q,EAAE83K,SAAS,IAAIr6D,IAAIh6G,EAAEzD,EAAEtC,MAAMsC,EAAEq3K,SAAS,EAAEr3K,EAAEo3K,YAAY,EAAEp3K,EAAEw4K,OAAO,GAAG9nK,EAAE,IAAIo9J,EAAE6F,KAAK3zK,EAAE83K,QAAQhK,EAAEqH,SAASzkK,EAAEtG,EAAEuG,EAAE3Q,EAAE83K,OAAO93K,EAAE83K,OAAO,GAAG1tK,EAAEsG,EAAEC,EAAE3Q,EAAE83K,QAAQ10J,EAAEjZ,EAAEspK,SAAS7jK,EAAEzF,EAAEqpK,QAAQzxI,EAAE53B,EAAEopK,MAAMppK,EAAEspK,SAAS9iK,EAAExG,EAAEqpK,QAAQ,EAAErpK,EAAEopK,MAAMnpK,EAAEo7J,EAAExlK,GAAGA,EAAEo4K,WAAWK,IAAI,CAACprJ,EAAErtB,EAAEq3K,SAAS17K,EAAEqE,EAAEo4K,WAAWK,GAAG,GAAG,GAAGz4K,EAAE04K,OAAO14K,EAAE04K,OAAO14K,EAAE24K,WAAW34K,EAAE4V,OAAOyX,EAAEorJ,GAAG,IAAIz4K,EAAE44K,UAAU54K,EAAEi4K,KAAK5qJ,EAAErtB,EAAEg4K,QAAQh4K,EAAEtC,KAAKsC,EAAE04K,OAAO14K,EAAEtC,KAAKsC,EAAE04K,OAAOrrJ,EAAEA,YAAY1xB,GAAGqE,EAAEq3K,SAAShqJ,EAAErtB,EAAEo4K,UAAUK,GAAG,EAAEjT,EAAExlK,EAAE,CAAC,OAAOA,EAAEq3K,UAAUr3K,EAAEo4K,UAAUp4K,EAAEo3K,YAAYp3K,EAAEq3K,SAASr3K,EAAEw4K,OAAOx4K,EAAEo4K,UAAUp4K,EAAEo4K,UAAU,EAAEp4K,EAAE+4K,aAAa/4K,EAAE43K,YAAYa,GAAG,EAAEz4K,EAAEy5K,gBAAgB,EAAEtvK,EAAEqpK,QAAQ5jK,EAAEzF,EAAEopK,MAAMxxI,EAAE53B,EAAEspK,SAASrwJ,EAAEpjB,EAAEs3K,KAAK75D,EAAEu+D,CAAC,EAAirBh8K,EAAE69K,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,UAAU,KAAK,GAAG,CAAC,SAAS1zK,EAAEC,EAAEpK,GAAG,aAAiKoK,EAAElO,QAAtJ,WAAaQ,KAAKiO,KAAK,EAAEjO,KAAK+gL,KAAK,EAAE/gL,KAAKohL,OAAO,EAAEphL,KAAKghL,GAAG,EAAEhhL,KAAK8gL,MAAM,KAAK9gL,KAAKqhL,UAAU,EAAErhL,KAAKkH,KAAK,GAAGlH,KAAKkwH,QAAQ,GAAGlwH,KAAK6gL,KAAK,EAAE7gL,KAAKygJ,MAAK,CAAE,CAAY,EAAE,CAAC,GAAG,GAAG,CAAC,SAAShzI,EAAEC,EAAEpK,GAAG,aAA2BoK,EAAElO,QAAQ,SAASiO,EAAEC,GAAG,IAAIpK,EAAEyD,EAAEg6G,EAAEr6F,EAAExT,EAAEmyB,EAAErxB,EAAEC,EAAE60J,EAAE5kH,EAAEllD,EAAEgjB,EAAEmG,EAAE5Y,EAAE9C,EAAEszB,EAAEk/C,EAAEhsE,EAAE6kE,EAAE/qE,EAAE0uD,EAAEy1G,EAAEG,EAAEC,EAAEH,EAAE7tK,EAAEmK,EAAE89C,MAAMxkD,EAAE0G,EAAEqpK,QAAQxF,EAAE7jK,EAAEopK,MAAM91D,EAAEh6G,GAAG0G,EAAEspK,SAAS,GAAGrwJ,EAAEjZ,EAAEypK,SAAS/F,EAAE1jK,EAAEupK,OAAO9jK,EAAEwT,GAAGhZ,EAAED,EAAE6oK,WAAWjxI,EAAE3e,GAAGjZ,EAAE6oK,UAAU,KAAKtiK,EAAE1Q,EAAEg+K,KAAKrtK,EAAE3Q,EAAEi+K,MAAMzY,EAAExlK,EAAEk+K,MAAMt9H,EAAE5gD,EAAEm+K,MAAMziL,EAAEsE,EAAE4V,OAAO8I,EAAE1e,EAAEo+K,KAAKv5J,EAAE7kB,EAAEq+K,KAAKpyK,EAAEjM,EAAEs+K,QAAQn1K,EAAEnJ,EAAEu+K,SAAS9hJ,GAAG,GAAGz8B,EAAEw+K,SAAS,EAAE7iG,GAAG,GAAG37E,EAAEy+K,UAAU,EAAEt0K,EAAE,EAAE,CAAC0a,EAAE,KAAKnG,GAAGsvJ,EAAEvqK,MAAMohB,EAAEA,GAAG,EAAEnG,GAAGsvJ,EAAEvqK,MAAMohB,EAAEA,GAAG,GAAGlV,EAAE1D,EAAEyS,EAAE+d,GAAGryB,EAAE,OAAO,CAAC,GAAYsU,KAAT81D,EAAE7kE,IAAI,GAAUkV,GAAG2vD,EAAe,IAAbA,EAAE7kE,IAAI,GAAG,KAAUk+J,EAAEzqJ,KAAK,MAAMzT,MAAM,CAAC,KAAK,GAAG6kE,GAAG,CAAC,GAAG,IAAK,GAAGA,GAAG,CAAC7kE,EAAE1D,GAAG,MAAM0D,IAAI+O,GAAG,GAAG81D,GAAG,IAAI,SAASpqE,CAAC,CAAC,GAAG,GAAGoqE,EAAE,CAACx0E,EAAEo6E,KAA1hB,GAAiiB,MAAMjwE,CAAC,CAACA,EAAEwR,IAAI,8BAA8B3b,EAAEo6E,KAAplB,GAA2lB,MAAMjwE,CAAC,CAACV,EAAE,MAAMkG,GAAE6kE,GAAG,MAAO3vD,EAAE2vD,IAAI91D,GAAGsvJ,EAAEvqK,MAAMohB,EAAEA,GAAG,GAAGpb,GAAGiV,GAAG,GAAG81D,GAAG,EAAE91D,KAAK81D,EAAE3vD,GAAG2vD,GAAG3vD,EAAE,KAAKnG,GAAGsvJ,EAAEvqK,MAAMohB,EAAEA,GAAG,EAAEnG,GAAGsvJ,EAAEvqK,MAAMohB,EAAEA,GAAG,GAAGlV,EAAExG,EAAEuV,EAAEi9D,GAAG37E,EAAE,OAAO,CAAC,GAAY0e,KAAT81D,EAAE7kE,IAAI,GAAUkV,GAAG2vD,IAAiB,IAAfA,EAAE7kE,IAAI,GAAG,MAAY,CAAC,GAAG,IAAK,GAAG6kE,GAAG,CAAC7kE,EAAExG,GAAG,MAAMwG,IAAI+O,GAAG,GAAG81D,GAAG,IAAI,SAASx0E,CAAC,CAACmK,EAAEwR,IAAI,wBAAwB3b,EAAEo6E,KAA92B,GAAq3B,MAAMjwE,CAAC,CAAC,GAAGguD,EAAE,MAAMxoD,EAAQkV,GAAN2vD,GAAG,MAAS91D,GAAGsvJ,EAAEvqK,MAAMohB,GAAEA,GAAG,GAAI2vD,IAAI91D,GAAGsvJ,EAAEvqK,MAAMohB,EAAEA,GAAG,KAAIszC,GAAGz5C,GAAG,GAAG81D,GAAG,GAAI9jE,EAAE,CAACvG,EAAEwR,IAAI,gCAAgC3b,EAAEo6E,KAA7/B,GAAogC,MAAMjwE,CAAC,CAAC,GAAGuU,KAAK81D,EAAE3vD,GAAG2vD,EAAQrc,GAANqc,EAAEpxD,EAAExT,GAAM,CAAC,IAAG4kE,EAAErc,EAAEqc,GAAIgxF,GAAGxlK,EAAE0+K,KAAK,CAACv0K,EAAEwR,IAAI,gCAAgC3b,EAAEo6E,KAApmC,GAA2mC,MAAMjwE,CAAC,CAAC,GAAGyjK,EAAE,EAAEG,EAAEryK,EAAE,IAAIklD,GAAG,GAAGgtH,GAAGj9J,EAAE6jE,EAAEA,EAAE/qE,EAAE,CAACA,GAAG+qE,EAAE,GAAGq5F,EAAEzqJ,KAAK1nB,EAAEkyK,aAAap5F,GAAGo5F,EAAExqJ,EAAE+0C,EAAE41G,EAAEF,CAAC,OAAO,GAAGjtH,EAAE4zB,GAAG,GAAGo5F,GAAGj9J,EAAEiwC,EAAE4zB,GAAEA,GAAG5zB,GAAIn3C,EAAE,CAACA,GAAG+qE,EAAE,GAAGq5F,EAAEzqJ,KAAK1nB,EAAEkyK,aAAap5F,GAAG,GAAGo5F,EAAE,EAAEhtH,EAAEn3C,EAAE,CAAKA,GAAJ+qE,EAAE5zB,EAAO,GAAGitH,EAAEzqJ,KAAK1nB,EAAEkyK,aAAap5F,GAAGo5F,EAAExqJ,EAAE+0C,EAAE41G,EAAEF,CAAC,CAAC,OAAO,GAAGD,GAAGhtH,EAAE4zB,EAAEA,EAAE/qE,EAAE,CAACA,GAAG+qE,EAAE,GAAGq5F,EAAEzqJ,KAAK1nB,EAAEkyK,aAAap5F,GAAGo5F,EAAExqJ,EAAE+0C,EAAE41G,EAAEF,CAAC,CAAC,KAAKpkK,EAAE,GAAGokK,EAAEzqJ,KAAK2qJ,EAAEH,KAAKC,EAAEzqJ,KAAK2qJ,EAAEH,KAAKC,EAAEzqJ,KAAK2qJ,EAAEH,KAAKnkK,GAAG,EAAEA,IAAIokK,EAAEzqJ,KAAK2qJ,EAAEH,KAAKnkK,EAAE,IAAIokK,EAAEzqJ,KAAK2qJ,EAAEH,MAAM,KAAK,CAACA,EAAExqJ,EAAE+0C,EAAE,GAAG01G,EAAEzqJ,KAAKyqJ,EAAED,KAAKC,EAAEzqJ,KAAKyqJ,EAAED,KAAKC,EAAEzqJ,KAAKyqJ,EAAED,KAAKnkK,GAAG,QAAQA,EAAE,GAAGA,IAAIokK,EAAEzqJ,KAAKyqJ,EAAED,KAAKnkK,EAAE,IAAIokK,EAAEzqJ,KAAKyqJ,EAAED,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAOnqK,EAAEg6G,GAAGr6F,EAAE2e,GAAUt+B,GAAPgG,EAAEob,GAAG,EAAenG,IAAI,IAAZmG,GAAGpb,GAAG,IAAY,EAAEU,EAAEqpK,QAAQ/vK,EAAE0G,EAAEypK,SAASxwJ,EAAEjZ,EAAEspK,SAAShwK,EAAEg6G,EAAKA,EAAEh6G,EAAL,EAAQ,GAAGA,EAAEg6G,GAAGtzG,EAAE6oK,UAAU5vJ,EAAE2e,EAAOA,EAAE3e,EAAP,IAAU,KAAKA,EAAE2e,GAAG/hC,EAAEo+K,KAAK1/J,EAAE1e,EAAEq+K,KAAKx5J,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS1a,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAG,OAAOA,IAAI,GAAG,MAAMA,IAAI,EAAE,SAAS,MAAMA,IAAI,KAAK,IAAIA,IAAI,GAAG,CAAC,SAASxO,IAAIe,KAAK09E,KAAK,EAAE19E,KAAK84J,MAAK,EAAG94J,KAAK46K,KAAK,EAAE56K,KAAKiiL,UAAS,EAAGjiL,KAAKkiL,MAAM,EAAEliL,KAAKshL,KAAK,EAAEthL,KAAKmiL,MAAM,EAAEniL,KAAKisH,MAAM,EAAEjsH,KAAKgB,KAAK,KAAKhB,KAAKoiL,MAAM,EAAEpiL,KAAKuhL,MAAM,EAAEvhL,KAAKwhL,MAAM,EAAExhL,KAAKyhL,MAAM,EAAEzhL,KAAKkZ,OAAO,KAAKlZ,KAAK0hL,KAAK,EAAE1hL,KAAK2hL,KAAK,EAAE3hL,KAAKkG,OAAO,EAAElG,KAAK0qJ,OAAO,EAAE1qJ,KAAK8gL,MAAM,EAAE9gL,KAAK4hL,QAAQ,KAAK5hL,KAAK6hL,SAAS,KAAK7hL,KAAK8hL,QAAQ,EAAE9hL,KAAK+hL,SAAS,EAAE/hL,KAAKqiL,MAAM,EAAEriL,KAAKsiL,KAAK,EAAEtiL,KAAKuiL,MAAM,EAAEviL,KAAKwiL,KAAK,EAAExiL,KAAKorB,KAAK,KAAKprB,KAAKyiL,KAAK,IAAIh2K,EAAEssK,MAAM,KAAK/4K,KAAK0iL,KAAK,IAAIj2K,EAAEssK,MAAM,KAAK/4K,KAAK2iL,OAAO,KAAK3iL,KAAK4iL,QAAQ,KAAK5iL,KAAKgiL,KAAK,EAAEhiL,KAAK6iL,KAAK,EAAE7iL,KAAK8iL,IAAI,CAAC,CAAC,SAAS/7K,EAAE0G,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE89C,OAAO79C,EAAED,EAAE89C,MAAM99C,EAAEutK,SAASvtK,EAAE+sK,UAAU9sK,EAAEu+G,MAAM,EAAEx+G,EAAEwR,IAAI,GAAGvR,EAAEktK,OAAOntK,EAAEotK,MAAM,EAAEntK,EAAEktK,MAAMltK,EAAEgwE,KAAK39E,EAAE2N,EAAEorJ,KAAK,EAAEprJ,EAAEu0K,SAAS,EAAEv0K,EAAE4zK,KAAK,MAAM5zK,EAAE1M,KAAK,KAAK0M,EAAEg0K,KAAK,EAAEh0K,EAAEi0K,KAAK,EAAEj0K,EAAEk0K,QAAQl0K,EAAEi1K,OAAO,IAAIl2K,EAAEusK,MAAMqH,IAAI3yK,EAAEm0K,SAASn0K,EAAEk1K,QAAQ,IAAIn2K,EAAEusK,MAAMsH,IAAI5yK,EAAEs0K,KAAK,EAAEt0K,EAAEm1K,MAAM,EAAElS,GAAGmK,CAAC,CAAC,SAAS/5D,EAAEtzG,GAAG,IAAIC,EAAE,OAAOD,GAAGA,EAAE89C,QAAO79C,EAAED,EAAE89C,OAAQg2H,MAAM,EAAE7zK,EAAE8zK,MAAM,EAAE9zK,EAAE+zK,MAAM,EAAE16K,EAAE0G,IAAIqtK,CAAC,CAAC,SAASp0J,EAAEjZ,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE,OAAOljB,GAAGA,EAAE89C,OAAO56B,EAAEljB,EAAE89C,MAAM79C,EAAE,GAAGpK,EAAE,EAAEoK,GAAGA,IAAIpK,EAAS,GAANoK,GAAG,GAAKA,EAAE,KAAKA,GAAG,KAAKA,IAAIA,EAAE,GAAGA,EAAE,IAAIotK,GAAG,OAAOnqJ,EAAEzX,QAAQyX,EAAEyxJ,QAAQ10K,IAAIijB,EAAEzX,OAAO,MAAMyX,EAAEiqJ,KAAKt3K,EAAEqtB,EAAEyxJ,MAAM10K,EAAEqzG,EAAEtzG,KAAKqtK,CAAC,CAAC,SAAS5nK,EAAEzF,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE,OAAOljB,GAAGkjB,EAAE,IAAI1xB,EAAEwO,EAAE89C,MAAM56B,EAAEA,EAAEzX,OAAO,MAAK5V,EAAEojB,EAAEjZ,EAAEC,MAAOijK,IAAIljK,EAAE89C,MAAM,MAAMjoD,GAAGw3K,CAAC,CAA8B,SAAS9mK,EAAEvG,GAAG,GAAG+yK,GAAG,CAAC,IAAI9yK,EAAE,IAAIya,EAAE,IAAI1b,EAAEusK,MAAM,KAAKzpK,EAAE,IAAI9C,EAAEusK,MAAM,IAAItrK,EAAE,EAAEA,EAAE,KAAKD,EAAEg1K,KAAK/0K,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEg1K,KAAK/0K,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEg1K,KAAK/0K,KAAK,EAAE,KAAKA,EAAE,KAAKD,EAAEg1K,KAAK/0K,KAAK,EAAE,IAAIoqE,EAAErc,EAAEhuD,EAAEg1K,KAAK,EAAE,IAAIt6J,EAAE,EAAE1a,EAAEi1K,KAAK,CAACf,KAAK,IAAIj0K,EAAE,EAAEA,EAAE,IAAID,EAAEg1K,KAAK/0K,KAAK,EAAEoqE,EAAEo5F,EAAEzjK,EAAEg1K,KAAK,EAAE,GAAGlzK,EAAE,EAAE9B,EAAEi1K,KAAK,CAACf,KAAK,IAAInB,IAAG,CAAE,CAAC/yK,EAAEm0K,QAAQz5J,EAAE1a,EAAEq0K,QAAQ,EAAEr0K,EAAEo0K,SAAStyK,EAAE9B,EAAEs0K,SAAS,CAAC,CAAC,SAAS9tK,EAAExG,EAAEC,EAAEpK,EAAEqtB,GAAG,IAAI1xB,EAAE8H,EAAE0G,EAAE89C,MAAM,OAAO,OAAOxkD,EAAEmS,SAASnS,EAAEw6K,MAAM,GAAGx6K,EAAEq7K,MAAMr7K,EAAE06K,MAAM,EAAE16K,EAAEy6K,MAAM,EAAEz6K,EAAEmS,OAAO,IAAIzM,EAAEwqK,KAAKlwK,EAAEw6K,QAAQ5wJ,GAAG5pB,EAAEw6K,OAAO90K,EAAEgsK,SAAS1xK,EAAEmS,OAAOxL,EAAEpK,EAAEyD,EAAEw6K,MAAMx6K,EAAEw6K,MAAM,GAAGx6K,EAAE06K,MAAM,EAAE16K,EAAEy6K,MAAMz6K,EAAEw6K,SAAQtiL,EAAE8H,EAAEw6K,MAAMx6K,EAAE06K,OAAQ9wJ,IAAI1xB,EAAE0xB,GAAGlkB,EAAEgsK,SAAS1xK,EAAEmS,OAAOxL,EAAEpK,EAAEqtB,EAAE1xB,EAAE8H,EAAE06K,QAAO9wJ,GAAG1xB,IAAKwN,EAAEgsK,SAAS1xK,EAAEmS,OAAOxL,EAAEpK,EAAEqtB,EAAEA,EAAE,GAAG5pB,EAAE06K,MAAM9wJ,EAAE5pB,EAAEy6K,MAAMz6K,EAAEw6K,QAAQx6K,EAAE06K,OAAOxiL,EAAE8H,EAAE06K,QAAQ16K,EAAEw6K,QAAQx6K,EAAE06K,MAAM,GAAG16K,EAAEy6K,MAAMz6K,EAAEw6K,QAAQx6K,EAAEy6K,OAAOviL,KAAK,CAAC,CAC78sB,IAAIkpB,EAAE5Y,EAAE9C,EAAEgB,EAAE,mBAAmBsyB,EAAEtyB,EAAE,aAAawxE,EAAExxE,EAAE,WAAWwF,EAAExF,EAAE,aAAaqqE,EAAErqE,EAAE,cAAcV,EAAE,EAAE0uD,EAAE,EAAEy1G,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAEH,EAAE,EAAER,EAAE,EAAES,EAAE,EAAEntK,EAAE,EAAE62K,GAAG,EAAEC,GAAG,EAAEV,GAAG,EAAE8B,GAAG,EAAEsD,EAAE,EAAE1/K,EAAE,EAAEy8K,EAAE,EAAEkD,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEJ,EAAE,EAAEK,EAAE,EAAEC,EAAE,EAAErrB,EAAE,EAAEsoB,EAAE,GAAG7uI,EAAE,GAAG6xI,EAAE,GAAGN,EAAE,GAAGO,EAAE,GAAGb,EAAE,GAAG3B,EAAE,GAAG3vC,EAAE,GAAGoyC,EAAG,GAAGC,EAAG,GAAG8C,EAAG,GAAG7C,EAAG,GAAG3B,EAAG,GAAGT,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGS,GAAG,GAAGtC,GAAG,GAAGP,GAAG,GAAGH,GAAG,GAAG8E,GAAG,GAAGhB,GAAG,GAASkB,GAAG,IAAIC,GAAG,IAAUlB,GAAH,GAASoB,IAAG,EAAGl9K,EAAE0/K,aAAajiE,EAAEz9G,EAAE2/K,cAAcv8J,EAAEpjB,EAAE4/K,iBAAiBn8K,EAAEzD,EAAE6/K,YADmyqB,SAAW11K,GAAG,OAAOyF,EAAEzF,EAAE2xK,GAAG,EACjzqB97K,EAAEq0K,aAAazkK,EAAE5P,EAAE20K,QAD+gsB,SAAWxqK,EAAEC,GAAG,IAAIpK,EAAErE,EAAE8H,EAAEg6G,EAAEr6F,EAAExT,EAAEmyB,EAAEyjI,EAAE5kH,GAAEllD,GAAEgjB,GAAEmG,GAAE5Y,GAAE8wK,GAAGC,GAAGC,GAAGnB,GAAGoB,GAAGpE,GAAGQ,GAAGH,GAAGC,GAAG+D,GAAG2C,GAAGC,GAAG,EAAEC,GAAG,IAAI72K,EAAEwqK,KAAK,GAAGsM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,IAAI91K,IAAIA,EAAE89C,QAAQ99C,EAAEupK,SAASvpK,EAAEopK,OAAO,IAAIppK,EAAEspK,SAAS,OAAO+D,GAAEx3K,EAAEmK,EAAE89C,OAAQmyB,OAAOoiG,IAAIx8K,EAAEo6E,KAAK8hG,GAAG94J,EAAEjZ,EAAEypK,SAASnwK,EAAE0G,EAAEupK,OAAO3xI,EAAE53B,EAAE6oK,UAAUv1D,EAAEtzG,EAAEqpK,QAAQ73K,EAAEwO,EAAEopK,MAAM3jK,EAAEzF,EAAEspK,SAASjO,EAAExlK,EAAEo+K,KAAKx9H,GAAE5gD,EAAEq+K,KAAK3iL,GAAEkU,EAAE8O,GAAEqjB,EAAEq3I,GAAG/L,EAAEljK,EAAE,OAAO,OAAOnK,EAAEo6E,MAAM,KAAK39E,EAAE,GAAG,IAAIuD,EAAEs3K,KAAK,CAACt3K,EAAEo6E,KAAK8hG,EAAE,KAAK,CAAC,KAAKt7H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAG,EAAE5gD,EAAEs3K,MAAM,QAAQ9R,EAAE,CAACxlK,EAAE6+K,MAAM,EAAEmB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAIxlK,EAAE6+K,MAAMljG,EAAE37E,EAAE6+K,MAAMmB,GAAG,EAAE,GAAGxa,EAAE,EAAE5kH,GAAE,EAAE5gD,EAAEo6E,KAAK8+F,EAAE,KAAK,CAAC,GAAGl5K,EAAE4+K,MAAM,EAAE5+K,EAAEtC,OAAOsC,EAAEtC,KAAKy/I,MAAK,KAAM,EAAEn9I,EAAEs3K,UAAU,IAAI9R,IAAI,IAAIA,GAAG,IAAI,GAAG,CAACr7J,EAAEwR,IAAI,yBAAyB3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC,IAAI,GAAGrX,KAAK2W,EAAE,CAAChyK,EAAEwR,IAAI,6BAA6B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC,GAAUj8H,IAAG,EAAEu4H,GAAU,GAAN,IAAhB3T,KAAK,IAAmB,IAAIxlK,EAAE8+K,MAAM9+K,EAAE8+K,MAAM3F,QAAQ,GAAGA,GAAGn5K,EAAE8+K,MAAM,CAAC30K,EAAEwR,IAAI,sBAAsB3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC78K,EAAEg+K,KAAK,GAAG7E,GAAGhvK,EAAEotK,MAAMv3K,EAAE6+K,MAAM,EAAE7+K,EAAEo6E,KAAK,IAAIorF,EAAEgU,EAAEgD,EAAEhX,EAAE,EAAE5kH,GAAE,EAAE,MAAM,KAAKs4H,EAAE,KAAKt4H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAG5gD,EAAE4+K,MAAMpZ,GAAG,IAAIxlK,EAAE4+K,SAASzC,EAAE,CAAChyK,EAAEwR,IAAI,6BAA6B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC,GAAG,MAAM78K,EAAE4+K,MAAM,CAACz0K,EAAEwR,IAAI,2BAA2B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC78K,EAAEtC,OAAOsC,EAAEtC,KAAKiN,KAAK66J,GAAG,EAAE,GAAG,IAAIxlK,EAAE4+K,QAAQoB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAIxlK,EAAE6+K,MAAMljG,EAAE37E,EAAE6+K,MAAMmB,GAAG,EAAE,IAAIxa,EAAE,EAAE5kH,GAAE,EAAE5gD,EAAEo6E,KAAKgiG,EAAE,KAAKA,EAAE,KAAKx7H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC5gD,EAAEtC,OAAOsC,EAAEtC,KAAK+/K,KAAKjY,GAAG,IAAIxlK,EAAE4+K,QAAQoB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAIwa,GAAG,GAAGxa,IAAI,GAAG,IAAIwa,GAAG,GAAGxa,IAAI,GAAG,IAAIxlK,EAAE6+K,MAAMljG,EAAE37E,EAAE6+K,MAAMmB,GAAG,EAAE,IAAIxa,EAAE,EAAE5kH,GAAE,EAAE5gD,EAAEo6E,KAAK4hG,EAAE,KAAKA,EAAE,KAAKp7H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GACzw+BA,IAAG,CAAC,CAAC5gD,EAAEtC,OAAOsC,EAAEtC,KAAKogL,OAAO,IAAItY,EAAExlK,EAAEtC,KAAKggL,GAAGlY,GAAG,GAAG,IAAIxlK,EAAE4+K,QAAQoB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAIxlK,EAAE6+K,MAAMljG,EAAE37E,EAAE6+K,MAAMmB,GAAG,EAAE,IAAIxa,EAAE,EAAE5kH,GAAE,EAAE5gD,EAAEo6E,KAAKiiG,EAAE,KAAKA,EAAE,GAAG,KAAKr8K,EAAE4+K,MAAM,CAAC,KAAKh+H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC5gD,EAAE4C,OAAO4iK,EAAExlK,EAAEtC,OAAOsC,EAAEtC,KAAKqgL,UAAUvY,GAAG,IAAIxlK,EAAE4+K,QAAQoB,GAAG,GAAG,IAAIxa,EAAEwa,GAAG,GAAGxa,IAAI,EAAE,IAAIxlK,EAAE6+K,MAAMljG,EAAE37E,EAAE6+K,MAAMmB,GAAG,EAAE,IAAIxa,EAAE,EAAE5kH,GAAE,CAAC,MAAM5gD,EAAEtC,OAAOsC,EAAEtC,KAAK8/K,MAAM,MAAMx9K,EAAEo6E,KAAK6hG,EAAE,KAAKA,EAAE,GAAG,KAAKj8K,EAAE4+K,SAAQ/5J,GAAE7kB,EAAE4C,QAASgN,IAAIiV,GAAEjV,GAAGiV,KAAI7kB,EAAEtC,OAAOy7K,GAAGn5K,EAAEtC,KAAKqgL,UAAU/9K,EAAE4C,OAAO5C,EAAEtC,KAAK8/K,QAAQx9K,EAAEtC,KAAK8/K,MAAM,IAAI9zK,MAAM1J,EAAEtC,KAAKqgL,YAAY50K,EAAEgsK,SAASn1K,EAAEtC,KAAK8/K,MAAM7hL,EAAE8hH,EAAE54F,GAAEs0J,KAAK,IAAIn5K,EAAE4+K,QAAQ5+K,EAAE6+K,MAAMljG,EAAE37E,EAAE6+K,MAAMljL,EAAEkpB,GAAE44F,IAAI7tG,GAAGiV,GAAE44F,GAAG54F,GAAE7kB,EAAE4C,QAAQiiB,IAAG7kB,EAAE4C,QAAQ,MAAMuH,EAAEnK,EAAE4C,OAAO,EAAE5C,EAAEo6E,KAAKkiG,EAAE,KAAKA,EAAE,GAAG,KAAKt8K,EAAE4+K,MAAM,CAAC,GAAG,IAAIhvK,EAAE,MAAMzF,EAAE0a,GAAE,EAAE,GAAGs0J,GAAGx9K,EAAE8hH,EAAE54F,MAAK7kB,EAAEtC,MAAMy7K,IAAIn5K,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAKkG,MAAMkU,OAAOuxI,aAAa8vB,WAAWA,IAAIt0J,GAAEjV,GAAG,GAAG,IAAI5P,EAAE4+K,QAAQ5+K,EAAE6+K,MAAMljG,EAAE37E,EAAE6+K,MAAMljL,EAAEkpB,GAAE44F,IAAI7tG,GAAGiV,GAAE44F,GAAG54F,GAAEs0J,GAAG,MAAMhvK,CAAC,MAAMnK,EAAEtC,OAAOsC,EAAEtC,KAAKkG,KAAK,MAAM5D,EAAE4C,OAAO,EAAE5C,EAAEo6E,KAAKmiG,EAAE,KAAKA,EAAE,GAAG,KAAKv8K,EAAE4+K,MAAM,CAAC,GAAG,IAAIhvK,EAAE,MAAMzF,EAAE0a,GAAE,EAAE,GAAGs0J,GAAGx9K,EAAE8hH,EAAE54F,MAAK7kB,EAAEtC,MAAMy7K,IAAIn5K,EAAE4C,OAAO,QAAQ5C,EAAEtC,KAAKkvH,SAAS90G,OAAOuxI,aAAa8vB,WAAWA,IAAIt0J,GAAEjV,GAAG,GAAG,IAAI5P,EAAE4+K,QAAQ5+K,EAAE6+K,MAAMljG,EAAE37E,EAAE6+K,MAAMljL,EAAEkpB,GAAE44F,IAAI7tG,GAAGiV,GAAE44F,GAAG54F,GAAEs0J,GAAG,MAAMhvK,CAAC,MAAMnK,EAAEtC,OAAOsC,EAAEtC,KAAKkvH,QAAQ,MAAM5sH,EAAEo6E,KAAK82E,EAAE,KAAKA,EAAE,GAAG,IAAIlxJ,EAAE4+K,MAAM,CAAC,KAAKh+H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAG4kH,KAAK,MAAMxlK,EAAE6+K,OAAO,CAAC10K,EAAEwR,IAAI,sBAAsB3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAACrX,EAAE,EAAE5kH,GAAE,CAAC,CAAC5gD,EAAEtC,OAAOsC,EAAEtC,KAAK6/K,KAAKv9K,EAAE4+K,OAAO,EAAE,EAAE5+K,EAAEtC,KAAKy/I,MAAK,GAAIhzI,EAAEotK,MAAMv3K,EAAE6+K,MAAM,EAAE7+K,EAAEo6E,KAAKoiG,EAAE,MAAM,KAAKhD,EAAE,KAAK54H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAACz2C,EAAEotK,MAAMv3K,EAAE6+K,MAAMxxJ,EAAEm4I,GAAGA,EAAE,EAAE5kH,GAAE,EAAE5gD,EAAEo6E,KAAKzvC,EAAE,KAAKA,EAAE,GAAG,IAAI3qC,EAAE2+K,SAAS,OAAOx0K,EAAEypK,SAASxwJ,EAAEjZ,EAAE6oK,UAAUjxI,EAAE53B,EAAEqpK,QAAQ/1D,EAAEtzG,EAAEspK,SAAS7jK,EAAE5P,EAAEo+K,KAAK5Y,EAAExlK,EAAEq+K,KAAKz9H,GAAEjgD,EAAEwJ,EAAEotK,MAAMv3K,EAAE6+K,MAAM,EAAE7+K,EAAEo6E,KAAKoiG,EAAE,KAAKA,EAAE,GAAGpyK,IAAI4jK,GAAG5jK,IAAIyjK,EAAE,MAAM1jK,EAAE,KAAK+xK,EAAE,GAAGl8K,EAAEw1J,KAAK,CAACgQ,KAAK,EAAE5kH,GAAEA,IAAG,EAAEA,GAAE5gD,EAAEo6E,KAAKq+F,GAAG,KAAK,CAAC,KAAK73H,GAAE,GAAG,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,OAAO5gD,EAAEw1J,KAAK,EAAEgQ,EAAS5kH,IAAG,EAAE,GAAZ4kH,KAAK,IAAY,KAAK,EAAExlK,EAAEo6E,KAAKqiG,EAAE,MAAM,KAAK,EAAE,GAAG/rK,EAAE1Q,GAAGA,EAAEo6E,KAAKqlG,EAAGr1K,IAAIyjK,EAAE,CAACrI,KAAK,EAAE5kH,IAAG,EAAE,MAAMz2C,CAAC,CAAC,MAAM,KAAK,EAAEnK,EAAEo6E,KAAKkwD,EAAE,MAAM,KAAK,EAAEngI,EAAEwR,IAAI,qBAAqB3b,EAAEo6E,KAAKyiG,GAAGrX,KAAK,EAAE5kH,IAAG,EAAE,MAAM,KAAK67H,EAAE,IAAIjX,KAAK,EAAE5kH,GAAEA,IAAG,EAAEA,GAAEA,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,IAAI,MAAM4kH,KAAMA,IAAI,GAAG,OAAO,CAACr7J,EAAEwR,IAAI,+BAA+B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC,GAAG78K,EAAE4C,OAAO,MAAM4iK,EAAEA,EAAE,EAAE5kH,GAAE,EAAE5gD,EAAEo6E,KAAKwhG,EAAExxK,IAAIyjK,EAAE,MAAM1jK,EAAE,KAAKyxK,EAAE57K,EAAEo6E,KAAK6/F,EAAE,KAAKA,EAAE,GAAGp1J,GAAE7kB,EAAE4C,OAAO,CAAC,GAAGiiB,GAAEjV,IAAIiV,GAAEjV,GAAGiV,GAAEkd,IAAIld,GAAEkd,GAAG,IAAIld,GAAE,MAAM1a,EAAEhB,EAAEgsK,SAAS1xK,EAAE9H,EAAE8hH,EAAE54F,GAAEzB,GAAGxT,GAAGiV,GAAE44F,GAAG54F,GAAEkd,GAAGld,GAAEzB,GAAGyB,GAAE7kB,EAAE4C,QAAQiiB,GAAE,KAAK,CAAC7kB,EAAEo6E,KAAKoiG,EAAE,MAAM,KAAKlyC,EAAE,KAAK1pF,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAG5gD,EAAEg/K,KAAY,KAAN,GAAGxZ,GAAOA,KAAK,EAAE5kH,IAAG,EAAE5gD,EAAEi/K,MAAa,GAAN,GAAGzZ,GAAKA,KAAK,EAAE5kH,IAAG,EAAE5gD,EAAE++K,MAAa,GAAN,GAAGvZ,GAAKA,KAAK,EAAE5kH,IAAG,EAAE5gD,EAAEg/K,KAAK,KAAKh/K,EAAEi/K,MAAM,GAAG,CAAC90K,EAAEwR,IAAI,sCAAsC3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC78K,EAAEk/K,KAAK,EAAEl/K,EAAEo6E,KAAKsiG,EAAG,KAAKA,EAAG,KAAK18K,EAAEk/K,KAAKl/K,EAAE++K,OAAO,CAAC,KAAKn+H,GAAE,GAAG,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC5gD,EAAEm/K,KAAKc,GAAGjgL,EAAEk/K,SAAS,EAAE1Z,EAAEA,KAAK,EAAE5kH,IAAG,CAAC,CAAC,KAAK5gD,EAAEk/K,KAAK,IAAIl/K,EAAEm/K,KAAKc,GAAGjgL,EAAEk/K,SAAS,EAAE,GAAGl/K,EAAEs+K,QAAQt+K,EAAEq/K,OAAOr/K,EAAEw+K,QAAQ,EAAErB,GAAG,CAACkB,KAAKr+K,EAAEw+K,SAASpF,GAAG5kG,EAAE/qE,EAAEzJ,EAAEm/K,KAAK,EAAE,GAAGn/K,EAAEs+K,QAAQ,EAAEt+K,EAAEo/K,KAAKjC,IAAIn9K,EAAEw+K,QAAQrB,GAAGkB,KAAKjF,GAAG,CAACjvK,EAAEwR,IAAI,2BAA2B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC78K,EAAEk/K,KAAK,EAAEl/K,EAAEo6E,KAAKuiG,EAAG,KAAKA,EAAG,KAAK38K,EAAEk/K,KAAKl/K,EAAEg/K,KAAKh/K,EAAEi/K,OAAO,CAAC,KAAiDhC,IAA5C8C,GAAG//K,EAAEs+K,QAAQ9Y,GAAG,GAAGxlK,EAAEw+K,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoCn/H,KAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAGk7H,GAAG,GAAGtW,KAAKwX,GAAGp8H,IAAGo8H,GAAGh9K,EAAEm/K,KAAKn/K,EAAEk/K,QAAQpD,OAAO,CAAC,GAAG,KAAKA,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAEp8H,GAAEk/H,IAAI,CAAC,GAAG,IAAIlwK,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAG4kH,KAAKwX,GAAGp8H,IAAGo8H,GAAG,IAAIh9K,EAAEk/K,KAAK,CAAC/0K,EAAEwR,IAAI,4BAA4B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC1D,GAAGn5K,EAAEm/K,KAAKn/K,EAAEk/K,KAAK,GAAGr6J,GAAE,GAAG,EAAE2gJ,GAAGA,KAAK,EAAE5kH,IAAG,CAAC,MAAM,GAAG,KAAKk7H,GAAG,CAAC,IAAIgE,GAAG9C,GAAG,EAAEp8H,GAAEk/H,IAAI,CAAC,GAAG,IAAIlwK,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAASA,IAAGo8H,GAAG7D,GAAG,EAAEt0J,GAAE,GAAG,GAAxB2gJ,KAAKwX,KAAwBxX,KAAK,EAAE5kH,IAAG,CAAC,KAAK,CAAC,IAAIk/H,GAAG9C,GAAG,EAAEp8H,GAAEk/H,IAAI,CAAC,GAAG,IAAIlwK,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAASA,IAAGo8H,GAAG7D,GAAG,EAAEt0J,GAAE,IAAI,KAAzB2gJ,KAAKwX,KAA2BxX,KAAK,EAAE5kH,IAAG,CAAC,CAAC,GAAG5gD,EAAEk/K,KAAKr6J,GAAE7kB,EAAEg/K,KAAKh/K,EAAEi/K,MAAM,CAAC90K,EAAEwR,IAAI,4BAA4B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC,KAAKh4J,MAAK7kB,EAAEm/K,KAAKn/K,EAAEk/K,QAAQ/F,EAAE,CAAC,CAAC,GAAGn5K,EAAEo6E,OAAOyiG,GAAG,MAAM,GAAG,IAAI78K,EAAEm/K,KAAK,KAAK,CAACh1K,EAAEwR,IAAI,uCAAuC3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC,GAAG78K,EAAEw+K,QAAQ,EAAErB,GAAG,CAACkB,KAAKr+K,EAAEw+K,SAASpF,GAAG5kG,EAAErc,EAAEn4D,EAAEm/K,KAAK,EAAEn/K,EAAEg/K,KAAKh/K,EAAEs+K,QAAQ,EAAEt+K,EAAEo/K,KAAKjC,IAAIn9K,EAAEw+K,QAAQrB,GAAGkB,KAAKjF,GAAG,CAACjvK,EAAEwR,IAAI,8BAA8B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC,GAAG78K,EAAEy+K,SAAS,EAAEz+K,EAAEu+K,SAASv+K,EAAEs/K,QAAQnC,GAAG,CAACkB,KAAKr+K,EAAEy+K,UAAUrF,GAAG5kG,EAAEo5F,EAAE5tK,EAAEm/K,KAAKn/K,EAAEg/K,KAAKh/K,EAAEi/K,MAAMj/K,EAAEu+K,SAAS,EAAEv+K,EAAEo/K,KAAKjC,IAAIn9K,EAAEy+K,SAAStB,GAAGkB,KAAKjF,GAAG,CAACjvK,EAAEwR,IAAI,wBAAwB3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC,GAAG78K,EAAEo6E,KAAKqlG,EAAGr1K,IAAIyjK,EAAE,MAAM1jK,EAAE,KAAKs1K,EAAGz/K,EAAEo6E,KAAKwiG,EAAG,KAAKA,EAAG,GAAGhtK,GAAG,GAAGmyB,GAAG,IAAI,CAAC53B,EAAEypK,SAASxwJ,EAAEjZ,EAAE6oK,UAAUjxI,EAAE53B,EAAEqpK,QAAQ/1D,EAAEtzG,EAAEspK,SAAS7jK,EAAE5P,EAAEo+K,KAAK5Y,EAAExlK,EAAEq+K,KAAKz9H,GAAEjxC,EAAExF,EAAEuU,IAAG0E,EAAEjZ,EAAEypK,SAASnwK,EAAE0G,EAAEupK,OAAO3xI,EAAE53B,EAAE6oK,UAAUv1D,EAAEtzG,EAAEqpK,QAAQ73K,EAAEwO,EAAEopK,MAAM3jK,EAAEzF,EAAEspK,SAASjO,EAAExlK,EAAEo+K,KAAKx9H,GAAE5gD,EAAEq+K,KAAKr+K,EAAEo6E,OAAOoiG,IAAIx8K,EAAEu/K,MAAM,GAAG,KAAK,CAAC,IAAIv/K,EAAEu/K,KAAK,EAA8CtC,IAA5C8C,GAAG//K,EAAEs+K,QAAQ9Y,GAAG,GAAGxlK,EAAEw+K,SAAS,MAAsB,GAAG,IAAI1C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoCn/H,KAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAGq8H,IAAI,IAAK,IAAIA,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAsDmB,IAAnD8C,GAAG//K,EAAEs+K,QAAQhF,KAAK9T,GAAG,GAAG0X,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuCn/H,KAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC4kH,KAAK0X,GAAGt8H,IAAGs8H,GAAGl9K,EAAEu/K,MAAMrC,EAAE,CAAC,GAAG1X,KAAKwX,GAAGp8H,IAAGo8H,GAAGh9K,EAAEu/K,MAAMvC,GAAGh9K,EAAE4C,OAAOk5K,GAAG,IAAImB,GAAG,CAACj9K,EAAEo6E,KAAK2gG,GAAG,KAAK,CAAC,GAAG,GAAGkC,GAAG,CAACj9K,EAAEu/K,MAAM,EAAEv/K,EAAEo6E,KAAKoiG,EAAE,KAAK,CAAC,GAAG,GAAGS,GAAG,CAAC9yK,EAAEwR,IAAI,8BAA8B3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC78K,EAAEw9K,MAAM,GAAGP,GAAGj9K,EAAEo6E,KAAK6gG,EAAG,KAAKA,EAAG,GAAGj7K,EAAEw9K,MAAM,CAAC,IAAIsC,GAAG9/K,EAAEw9K,MAAM58H,GAAEk/H,IAAI,CAAC,GAAG,IAAIlwK,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC5gD,EAAE4C,QAAQ4iK,GAAG,GAAGxlK,EAAEw9K,OAAO,EAAEhY,KAAKxlK,EAAEw9K,MAAM58H,IAAG5gD,EAAEw9K,MAAMx9K,EAAEu/K,MAAMv/K,EAAEw9K,KAAK,CAACx9K,EAAEw/K,IAAIx/K,EAAE4C,OAAO5C,EAAEo6E,KAAKogG,GAAG,KAAKA,GAAG,KAAmDyC,IAA9C8C,GAAG//K,EAAEu+K,SAAS/Y,GAAG,GAAGxlK,EAAEy+K,UAAU,MAAsB,GAAG,IAAI3C,GAAG,MAAMiE,MAAnC/C,GAAG+C,KAAK,KAAoCn/H,KAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAG,IAAK,IAAIq8H,IAAI,CAAC,IAAIC,GAAGF,GAAGlE,GAAGmE,GAAG3D,GAAGwC,GAAuDmB,IAApD8C,GAAG//K,EAAEu+K,SAASjF,KAAK9T,GAAG,GAAG0X,GAAGpE,IAAI,IAAIoE,QAAwB,GAAG,IAAIpB,GAAG,MAAMiE,KAAK7C,IAAxCF,GAAG+C,KAAK,KAAuCn/H,KAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC4kH,KAAK0X,GAAGt8H,IAAGs8H,GAAGl9K,EAAEu/K,MAAMrC,EAAE,CAAC,GAAG1X,KAAKwX,GAAGp8H,IAAGo8H,GAAGh9K,EAAEu/K,MAAMvC,GAAG,GAAGC,GAAG,CAAC9yK,EAAEwR,IAAI,wBAAwB3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC78K,EAAEonJ,OAAO00B,GAAG97K,EAAEw9K,MAAM,GAAGP,GAAGj9K,EAAEo6E,KAAKsgG,GAAG,KAAKA,GAAG,GAAG16K,EAAEw9K,MAAM,CAAC,IAAIsC,GAAG9/K,EAAEw9K,MAAM58H,GAAEk/H,IAAI,CAAC,GAAG,IAAIlwK,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC5gD,EAAEonJ,QAAQoe,GAAG,GAAGxlK,EAAEw9K,OAAO,EAAEhY,KAAKxlK,EAAEw9K,MAAM58H,IAAG5gD,EAAEw9K,MAAMx9K,EAAEu/K,MAAMv/K,EAAEw9K,KAAK,CAAC,GAAGx9K,EAAEonJ,OAAOpnJ,EAAEg+K,KAAK,CAAC7zK,EAAEwR,IAAI,gCAAgC3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAAC78K,EAAEo6E,KAAKkgG,GAAG,KAAKA,GAAG,GAAG,IAAIv4I,EAAE,MAAM53B,EAAE,GAAG0a,GAAEnG,GAAEqjB,EAAE/hC,EAAEonJ,OAAOviI,GAAE,CAAC,IAAGA,GAAE7kB,EAAEonJ,OAAOviI,IAAI7kB,EAAEk+K,OAAOl+K,EAAE0+K,KAAK,CAACv0K,EAAEwR,IAAI,gCAAgC3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAACh4J,GAAE7kB,EAAEm+K,OAAOt5J,IAAG7kB,EAAEm+K,MAAMlyK,GAAEjM,EAAEi+K,MAAMp5J,IAAG5Y,GAAEjM,EAAEm+K,MAAMt5J,GAAEA,GAAE7kB,EAAE4C,SAASiiB,GAAE7kB,EAAE4C,QAAQm6K,GAAG/8K,EAAE4V,MAAM,MAAMmnK,GAAGt5K,EAAEwI,GAAEmX,EAAEpjB,EAAEonJ,OAAOviI,GAAE7kB,EAAE4C,OAAOiiB,GAAEkd,IAAIld,GAAEkd,GAAGA,GAAGld,GAAE7kB,EAAE4C,QAAQiiB,GAAE,GAAGphB,EAAE2f,KAAK25J,GAAG9wK,cAAa4Y,IAAG,IAAI7kB,EAAE4C,SAAS5C,EAAEo6E,KAAKwiG,GAAI,MAAM,KAAK7B,GAAG,GAAG,IAAIh5I,EAAE,MAAM53B,EAAE1G,EAAE2f,KAAKpjB,EAAE4C,OAAOm/B,IAAI/hC,EAAEo6E,KAAKwiG,EAAG,MAAM,KAAKnE,GAAG,GAAGz4K,EAAEs3K,KAAK,CAAC,KAAK12H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAGliC,IAAGqjB,EAAE53B,EAAE+sK,WAAWx4J,GAAE1e,EAAE2oH,OAAOjqG,GAAEA,KAAIvU,EAAEotK,MAAMv3K,EAAE6+K,MAAM7+K,EAAE4+K,MAAMjjG,EAAE37E,EAAE6+K,MAAMp7K,EAAEib,GAAE0E,EAAE1E,IAAG+d,EAAEz8B,EAAE6+K,MAAMp7K,EAAEib,GAAE0E,EAAE1E,KAAIA,GAAEqjB,GAAG/hC,EAAE4+K,MAAMpZ,EAAEn4I,EAAEm4I,MAAMxlK,EAAE6+K,MAAM,CAAC10K,EAAEwR,IAAI,uBAAuB3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAACrX,EAAE,EAAE5kH,GAAE,CAAC,CAAC5gD,EAAEo6E,KAAK89F,GAAG,KAAKA,GAAG,GAAGl4K,EAAEs3K,MAAMt3K,EAAE4+K,MAAM,CAAC,KAAKh+H,GAAE,IAAI,CAAC,GAAG,IAAIhxC,EAAE,MAAMzF,EAAEyF,IAAI41J,GAAG7pK,EAAE8hH,MAAM78D,GAAEA,IAAG,CAAC,CAAC,GAAG4kH,KAAK,WAAWxlK,EAAE2oH,OAAO,CAACx+G,EAAEwR,IAAI,yBAAyB3b,EAAEo6E,KAAKyiG,GAAG,KAAK,CAACrX,EAAE,EAAE5kH,GAAE,CAAC,CAAC5gD,EAAEo6E,KAAK29F,GAAG,KAAKA,GAAGqB,GAAGtL,EAAE,MAAM3jK,EAAE,KAAK0yK,GAAGzD,GAAG3B,EAAE,MAAMttK,EAAE,KAAK0xK,GAAG,OAAO9E,EAAU,QAAQ,OAAOS,EAAE,OAAOrtK,EAAEypK,SAASxwJ,EAAEjZ,EAAE6oK,UAAUjxI,EAAE53B,EAAEqpK,QAAQ/1D,EAAEtzG,EAAEspK,SAAS7jK,EAAE5P,EAAEo+K,KAAK5Y,EAAExlK,EAAEq+K,KAAKz9H,IAAG5gD,EAAEi+K,OAAOv/J,KAAIvU,EAAE6oK,WAAWhzK,EAAEo6E,KAAKyiG,KAAK78K,EAAEo6E,KAAKq+F,IAAIruK,IAAI2jK,KAAKp9J,EAAExG,EAAEA,EAAEupK,OAAOvpK,EAAEypK,SAASl1J,GAAEvU,EAAE6oK,YAAYhzK,EAAEo6E,KAAKyhG,GAAG9E,IAAIr7K,IAAGyO,EAAEspK,SAAS/0J,IAAGvU,EAAE6oK,UAAU7oK,EAAEutK,UAAUh8K,GAAEyO,EAAE+sK,WAAWx4J,GAAE1e,EAAE2oH,OAAOjqG,GAAE1e,EAAEs3K,MAAM54J,KAAIvU,EAAEotK,MAAMv3K,EAAE6+K,MAAM7+K,EAAE4+K,MAAMjjG,EAAE37E,EAAE6+K,MAAMp7K,EAAEib,GAAEvU,EAAEypK,SAASl1J,IAAG+d,EAAEz8B,EAAE6+K,MAAMp7K,EAAEib,GAAEvU,EAAEypK,SAASl1J,KAAIvU,EAAEwxK,UAAU37K,EAAEq+K,MAAMr+K,EAAEw1J,KAAK,GAAG,IAAIx1J,EAAEo6E,OAAOoiG,EAAE,IAAI,IAAIx8K,EAAEo6E,OAAOqlG,GAAIz/K,EAAEo6E,OAAOwhG,EAAE,IAAI,IAAI,IAAIlgL,IAAG,IAAIgjB,IAAGtU,IAAI2jK,IAAIqL,KAAK/L,IAAI+L,GAAGP,GAAGO,GAAG,EAAs0Bp5K,EAAEo1K,WAAv0B,SAAWjrK,GAAG,IAAIA,IAAIA,EAAE89C,MAAM,OAAOuvH,EAAE,IAAIptK,EAAED,EAAE89C,MAAM,OAAO79C,EAAEwL,SAASxL,EAAEwL,OAAO,MAAMzL,EAAE89C,MAAM,KAAKolH,CAAC,EAAgvBrtK,EAAEu0K,iBAAjvB,SAAWpqK,EAAEC,GAAG,IAAIpK,EAAE,OAAOmK,GAAGA,EAAE89C,MAAiB,IAAK,GAAfjoD,EAAEmK,EAAE89C,OAAeqvH,MAAME,GAAGx3K,EAAEtC,KAAK0M,EAAEA,EAAE+yI,MAAK,EAAGkwB,GAAImK,CAAC,EAAuqBx3K,EAAE60K,qBAAxqB,SAAW1qK,EAAEC,GAAG,IAAIpK,EAAMyD,EAAE2G,EAAExH,OAAO,OAAOuH,GAAGA,EAAE89C,MAAiB,KAAVjoD,EAAEmK,EAAE89C,OAAYqvH,MAAMt3K,EAAEo6E,OAAOzvC,EAAE6sI,EAAEx3K,EAAEo6E,OAAOzvC,GAAUlO,EAAJ,EAAQryB,EAAE3G,EAAE,KAAOzD,EAAE6+K,MAAOpH,EAAK9mK,EAAExG,EAAEC,EAAE3G,EAAEA,IAAKzD,EAAEo6E,KAAKyhG,GAAG9E,IAAI/2K,EAAE2+K,SAAS,EAAEtR,GAAImK,CAAC,EAAugBx3K,EAAEkgL,YAAY,oCAAoC,EAAE,CAAC,kBAAkB,GAAG,YAAY,GAAG,UAAU,GAAG,YAAY,GAAG,aAAa,KAAK,GAAG,CAAC,SAAS/1K,EAAEC,EAAEpK,GAAG,aAAa,IAAIqtB,EAAEljB,EAAE,mBAAmBxO,EAAE,GAA2B+U,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAGC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI60J,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,EAAE,GAAG5kH,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIx2C,EAAElO,QAAQ,SAASiO,EAAEC,EAAEpK,EAAEtE,EAAEgjB,EAAEmG,EAAE5Y,EAAE9C,GAAG,IAAIszB,EAAEk/C,EAAEhsE,EAAE6kE,EAAE/qE,EAAE0uD,EAAEy1G,EAAEG,EAAEC,EAAEH,EAAE1kK,EAAEk1K,KAAKhR,EAAE,EAAES,EAAE,EAAEntK,EAAE,EAAE62K,EAAE,EAAEC,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAE1/K,EAAE,EAAEy8K,EAAE,EAAEkD,EAAE,KAAKJ,EAAE,EAAEK,EAAE,IAAIhvJ,EAAEooJ,MAAM95K,IAAKsgL,EAAE,IAAI5uJ,EAAEooJ,MAAM95K,IAAK2gL,EAAE,KAAKC,EAAE,EAAE,IAAIlP,EAAE,EAAEA,GAAG1xK,EAAE0xK,IAAIgP,EAAEhP,GAAG,EAAE,IAAIS,EAAE,EAAEA,EAAEpyK,EAAEoyK,IAAIuO,EAAEjyK,EAAEpK,EAAE8tK,MAAM,IAAI2J,EAAE5J,EAAE2J,EAAE77K,EAAE67K,GAAG,GAAG,IAAI6E,EAAE7E,GAAGA,KAAK,GAAGC,EAAED,IAAIC,EAAED,GAAG,IAAIA,EAAE,OAAO94J,EAAEmG,KAAK,SAASnG,EAAEmG,KAAK,SAAS1b,EAAEk1K,KAAK,EAAE,EAAE,IAAI19K,EAAE,EAAEA,EAAE62K,GAAG,IAAI6E,EAAE17K,GAAGA,KAAK,IAAI82K,EAAE92K,IAAI82K,EAAE92K,GAAGw7K,EAAE,EAAE9O,EAAE,EAAEA,GAAG1xK,EAAE0xK,IAAI,GAAG8O,IAAI,GAAEA,GAAGE,EAAEhP,IAAK,EAAE,OAAO,EAAE,GAAG8O,EAAE,IAAp0B,IAAw0BhyK,GAAO,IAAIqtK,GAAG,OAAO,EAAE,IAAIyE,EAAE,GAAG,EAAE5O,EAAE,EAAEA,EAAE1xK,EAAE0xK,IAAI4O,EAAE5O,EAAE,GAAG4O,EAAE5O,GAAGgP,EAAEhP,GAAG,IAAIS,EAAE,EAAEA,EAAEpyK,EAAEoyK,IAAI,IAAI1jK,EAAEpK,EAAE8tK,KAAK7hK,EAAEgwK,EAAE7xK,EAAEpK,EAAE8tK,OAAOA,GAAG,GAAt7B,IAAy7B3jK,GAAOiyK,EAAEE,EAAErwK,EAAEksD,EAAE,IAAp8B,IAAw8BhuD,GAAOiyK,EAAE1rK,EAAEsrK,GAAG,IAAIM,EAAE3rK,EAAE4rK,GAAG,IAAIpkH,EAAE,MAAMikH,EAAE5W,EAAE8W,EAAE17H,EAAEuX,GAAG,GAAG+gH,EAAE,EAAEpL,EAAE,EAAET,EAAE1sK,EAAE8I,EAAEob,EAAEkyJ,EAAEU,EAAEoB,EAAE,EAAElpK,GAAG,EAAS6kE,GAAP/3E,EAAE,GAAGg7K,GAAM,EAAniC,IAAqiCttK,GAAO1N,EAA5jC,KAAoB,IAA6iC0N,GAAO1N,EAAlkC,IAAskC,OAAO,EAAE,OAAc,CAAKmxK,EAAEP,EAAEwL,EAAE5sK,EAAE6hK,GAAG31G,GAAG41G,EAAE,EAAEC,EAAE/hK,EAAE6hK,IAAI7hK,EAAE6hK,GAAG31G,GAAG41G,EAAEuO,EAAEC,EAAEtwK,EAAE6hK,IAAIE,EAAEoO,EAAEJ,EAAE/vK,EAAE6hK,MAAMC,EAAE,GAAGC,EAAE,GAAGvxI,EAAE,GAAG4wI,EAAEwL,EAASl4K,EAAPg7E,EAAE,GAAGo7F,EAAM,GAAQr4J,EAAEjV,GAAGyvK,GAAGL,IAAbl9F,GAAGl/C,IAAgBmxI,GAAG,GAAGG,GAAG,GAAGC,EAAE,QAAQ,IAAIryF,GAAG,IAAIl/C,EAAE,GAAG4wI,EAAE,EAAE6L,EAAEz8I,GAAGA,IAAI,EAAE,GAAG,IAAIA,GAAGy8I,GAAGz8I,EAAE,EAAEy8I,GAAGz8I,GAAGy8I,EAAE,EAAEpL,IAAI,KAAMuO,EAAEhP,GAAG,CAAC,GAAGA,IAAImK,EAAE,MAAMnK,EAAEjjK,EAAEpK,EAAEiM,EAAE6hK,GAAG,CAAC,GAAGT,EAAEoK,IAAIyB,EAAE1kG,KAAK7kE,EAAE,CAAC,IAAI,IAAIkpK,IAAIA,EAAEpB,GAAGhuK,GAAG9I,EAAQw7K,EAAE,IAARpF,EAAE1J,EAAEwL,GAAS9B,EAAE8B,EAAErB,MAAI2E,GAAGE,EAAEtF,EAAE8B,KAAQ,IAAK9B,IAAIoF,IAAI,EAAE,GAAG1/K,GAAG,GAAGs6K,EAAx6C,IAA06C5sK,GAAO1N,EAAj8C,KAAoB,IAAk7C0N,GAAO1N,EAAv8C,IAA28C,OAAO,EAAQiiB,EAAN/O,EAAEupK,EAAE1kG,GAAOijG,GAAG,GAAGV,GAAG,GAAGttK,EAAEob,EAAE,CAAC,CAAC,CAAC,OAAO,IAAIq0J,IAAIx6J,EAAEjV,EAAEyvK,GAAG7L,EAAEwL,GAAG,GAAG,IAAI,GAAG,GAAG1vK,EAAEk1K,KAAK5G,EAAE,CAAC,CAAC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASttK,EAAEC,EAAEpK,GAAG,aAAaoK,EAAElO,QAAQ,CAAC,EAAE,kBAAkB,EAAE,aAAa,EAAE,GAAG,KAAK,aAAa,KAAK,eAAe,KAAK,aAAa,KAAK,sBAAsB,KAAK,eAAe,KAAK,uBAAuB,EAAE,CAAC,GAAG,GAAG,CAAC,SAASiO,EAAEC,EAAEpK,GAAG,aAAa,SAASqtB,EAAEljB,GAAG,IAAI,IAAIC,EAAED,EAAEvH,SAASwH,GAAG,GAAGD,EAAEC,GAAG,CAAC,CAAC,SAASzO,EAAEwO,EAAEC,EAAEpK,EAAEqtB,EAAE1xB,GAAGe,KAAKyjL,YAAYh2K,EAAEzN,KAAK0jL,WAAWh2K,EAAE1N,KAAK2jL,WAAWrgL,EAAEtD,KAAKylI,MAAM90G,EAAE3wB,KAAK+yF,WAAW9zF,EAAEe,KAAK4jL,UAAUn2K,GAAGA,EAAEvH,MAAM,CAAC,SAASa,EAAE0G,EAAEC,GAAG1N,KAAK6jL,SAASp2K,EAAEzN,KAAK8jL,SAAS,EAAE9jL,KAAK+jL,UAAUr2K,CAAC,CAAC,SAASqzG,EAAEtzG,GAAG,OAAOA,EAAE,IAAI4wK,EAAG5wK,GAAG4wK,EAAG,KAAK5wK,IAAI,GAAG,CAAC,SAASiZ,EAAEjZ,EAAEC,GAAGD,EAAE6sK,YAAY7sK,EAAEoS,WAAW,IAAInS,EAAED,EAAE6sK,YAAY7sK,EAAEoS,WAAWnS,IAAI,EAAE,GAAG,CAAC,SAASwF,EAAEzF,EAAEC,EAAEpK,GAAGmK,EAAEuxK,SAASQ,EAAEl8K,GAAGmK,EAAEsxK,QAAQrxK,GAAGD,EAAEuxK,SAAS,MAAMt4J,EAAEjZ,EAAEA,EAAEsxK,QAAQtxK,EAAEsxK,OAAOrxK,GAAG8xK,EAAE/xK,EAAEuxK,SAASvxK,EAAEuxK,UAAU17K,EAAEk8K,IAAI/xK,EAAEsxK,QAAQrxK,GAAGD,EAAEuxK,SAAS,MAAMvxK,EAAEuxK,UAAU17K,EAAE,CAAC,SAAS+hC,EAAE53B,EAAEC,EAAEpK,GAAG4P,EAAEzF,EAAEnK,EAAE,EAAEoK,GAAGpK,EAAE,EAAEoK,EAAE,GAAG,CAAC,SAASsG,EAAEvG,EAAEC,GAAG,IAAIpK,EAAE,EAAE,GAAGA,GAAG,EAAEmK,EAAEA,KAAK,EAAEnK,IAAI,UAAUoK,EAAE,GAAG,OAAOpK,IAAI,CAAC,CAAo0B,SAAS4gD,EAAEz2C,EAAEC,EAAEpK,GAAG,IAAIqtB,EAAE1xB,EAAE8H,EAAE,IAAIiG,MAAM8yK,EAAE,GAAG/+D,EAAE,EAAE,IAAIpwF,EAAE,EAAEA,GAAGmvJ,EAAEnvJ,IAAI5pB,EAAE4pB,GAAGowF,EAAEA,EAAEz9G,EAAEqtB,EAAE,IAAI,EAAE,IAAI1xB,EAAE,EAAEA,GAAGyO,EAAEzO,IAAI,CAAC,IAAIynB,EAAEjZ,EAAE,EAAExO,EAAE,GAAG,IAAIynB,IAAIjZ,EAAE,EAAExO,GAAG+U,EAAEjN,EAAE2f,KAAKA,GAAG,CAAC,CAAwiB,SAAS1E,EAAEvU,GAAG,IAAIC,EAAE,IAAIA,EAAE,EAAEA,EAAEmyK,EAAEnyK,IAAID,EAAEkwK,UAAU,EAAEjwK,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAE8mJ,EAAE9mJ,IAAID,EAAEowK,UAAU,EAAEnwK,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAEovK,EAAEpvK,IAAID,EAAEswK,QAAQ,EAAErwK,GAAG,EAAED,EAAEkwK,UAAU,EAAEuB,GAAG,EAAEzxK,EAAEoxK,QAAQpxK,EAAEqxK,WAAW,EAAErxK,EAAEkvK,SAASlvK,EAAE4kJ,QAAQ,CAAC,CAAC,SAASlqI,EAAE1a,GAAGA,EAAEuxK,SAAS,EAAEt4J,EAAEjZ,EAAEA,EAAEsxK,QAAQtxK,EAAEuxK,SAAS,IAAIvxK,EAAE6sK,YAAY7sK,EAAEoS,WAAWpS,EAAEsxK,QAAQtxK,EAAEsxK,OAAO,EAAEtxK,EAAEuxK,SAAS,CAAC,CAA4G,SAASvyK,EAAEgB,EAAEC,EAAEpK,EAAEqtB,GAAG,IAAI1xB,EAAE,EAAEyO,EAAE3G,EAAE,EAAEzD,EAAE,OAAOmK,EAAExO,GAAGwO,EAAE1G,IAAI0G,EAAExO,KAAKwO,EAAE1G,IAAI4pB,EAAEjjB,IAAIijB,EAAErtB,EAAE,CAAC,SAASy8B,EAAEtyB,EAAEC,EAAEpK,GAAG,IAAI,IAAIqtB,EAAEljB,EAAE6wK,KAAKh7K,GAAGrE,EAAEqE,GAAG,EAAErE,GAAGwO,EAAE+wK,WAAWv/K,EAAEwO,EAAE+wK,UAAU/xK,EAAEiB,EAAED,EAAE6wK,KAAKr/K,EAAE,GAAGwO,EAAE6wK,KAAKr/K,GAAGwO,EAAE46E,QAAQppF,KAAKwN,EAAEiB,EAAEijB,EAAEljB,EAAE6wK,KAAKr/K,GAAGwO,EAAE46E,SAAS56E,EAAE6wK,KAAKh7K,GAAGmK,EAAE6wK,KAAKr/K,GAAGqE,EAAErE,EAAEA,IAAI,EAAEwO,EAAE6wK,KAAKh7K,GAAGqtB,CAAC,CAAC,SAASsuD,EAAExxE,EAAEC,EAAEpK,GAAG,IAAIqtB,EAAE1xB,EAAE8H,EAAE2f,EAAE1S,EAAE,EAAE,GAAG,IAAIvG,EAAEkvK,SAAS,GAAGhsJ,EAAEljB,EAAE6sK,YAAY7sK,EAAEmxK,MAAM,EAAE5qK,IAAI,EAAEvG,EAAE6sK,YAAY7sK,EAAEmxK,MAAM,EAAE5qK,EAAE,GAAG/U,EAAEwO,EAAE6sK,YAAY7sK,EAAEixK,MAAM1qK,GAAGA,IAAI,IAAI2c,EAAE0U,EAAE53B,EAAExO,EAAEyO,IAAY23B,EAAE53B,GAAV1G,EAAEg1K,EAAG98K,IAAS2gL,EAAE,EAAElyK,GAAW,KAARgZ,EAAEu5J,EAAGl5K,KAAoBmM,EAAEzF,EAAXxO,GAAGu8K,EAAGz0K,GAAS2f,GAAe2e,EAAE53B,EAAT1G,EAAEg6G,IAANpwF,GAAiBrtB,GAAW,KAARojB,EAAEq8J,EAAGh8K,KAAoBmM,EAAEzF,EAAXkjB,GAAG0qJ,EAAGt0K,GAAS2f,UAAW1S,EAAEvG,EAAEkvK,UAAUt3I,EAAE53B,EAAEyxK,EAAExxK,EAAE,CAAC,SAASuF,EAAExF,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE1xB,EAAE8H,EAAE2G,EAAEm2K,SAAS9iE,EAAErzG,EAAEq2K,UAAUN,YAAY/8J,EAAEhZ,EAAEq2K,UAAUH,UAAU1wK,EAAExF,EAAEq2K,UAAUt+C,MAAMpgG,GAAG,EAAE,IAAI53B,EAAE+wK,SAAS,EAAE/wK,EAAEgxK,SAASxwI,EAAE3qC,EAAE,EAAEA,EAAE4P,EAAE5P,IAAI,IAAIyD,EAAE,EAAEzD,IAAImK,EAAE6wK,OAAO7wK,EAAE+wK,UAAUn5I,EAAE/hC,EAAEmK,EAAE46E,MAAM/kF,GAAG,GAAGyD,EAAE,EAAEzD,EAAE,GAAG,EAAE,KAAKmK,EAAE+wK,SAAS,GAAoCz3K,EAAE,GAAnC9H,EAAEwO,EAAE6wK,OAAO7wK,EAAE+wK,UAAUn5I,EAAE,IAAIA,EAAE,IAAS,EAAE53B,EAAE46E,MAAMppF,GAAG,EAAEwO,EAAEoxK,UAAUn4J,IAAIjZ,EAAEqxK,YAAY/9D,EAAE,EAAE9hH,EAAE,IAAI,IAAIyO,EAAEo2K,SAASz+I,EAAE/hC,EAAEmK,EAAE+wK,UAAU,EAAEl7K,GAAG,EAAEA,IAAIy8B,EAAEtyB,EAAE1G,EAAEzD,GAAGrE,EAAEiU,EAAE,GAAG5P,EAAEmK,EAAE6wK,KAAK,GAAG7wK,EAAE6wK,KAAK,GAAG7wK,EAAE6wK,KAAK7wK,EAAE+wK,YAAYz+I,EAAEtyB,EAAE1G,EAAE,GAAG4pB,EAAEljB,EAAE6wK,KAAK,GAAG7wK,EAAE6wK,OAAO7wK,EAAEgxK,UAAUn7K,EAAEmK,EAAE6wK,OAAO7wK,EAAEgxK,UAAU9tJ,EAAE5pB,EAAE,EAAE9H,GAAG8H,EAAE,EAAEzD,GAAGyD,EAAE,EAAE4pB,GAAGljB,EAAE46E,MAAMppF,IAAIwO,EAAE46E,MAAM/kF,IAAImK,EAAE46E,MAAM13D,GAAGljB,EAAE46E,MAAM/kF,GAAGmK,EAAE46E,MAAM13D,IAAI,EAAE5pB,EAAE,EAAEzD,EAAE,GAAGyD,EAAE,EAAE4pB,EAAE,GAAG1xB,EAAEwO,EAAE6wK,KAAK,GAAGr/K,IAAI8gC,EAAEtyB,EAAE1G,EAAE,SAAS0G,EAAE+wK,UAAU,GAAG/wK,EAAE6wK,OAAO7wK,EAAEgxK,UAAUhxK,EAAE6wK,KAAK,GAAv9F,SAAW7wK,EAAEC,GAAG,IAAIpK,EAAEqtB,EAAE1xB,EAAE8H,EAAEg6G,EAAEr6F,EAAExT,EAAExF,EAAEm2K,SAASx+I,EAAE33B,EAAEo2K,SAAS9vK,EAAEtG,EAAEq2K,UAAUN,YAAYxvK,EAAEvG,EAAEq2K,UAAUH,UAAU9a,EAAEp7J,EAAEq2K,UAAUL,WAAWx/H,EAAEx2C,EAAEq2K,UAAUJ,WAAW3kL,EAAE0O,EAAEq2K,UAAUhxF,WAAW/wE,EAAE,EAAE,IAAIjb,EAAE,EAAEA,GAAG+4K,EAAE/4K,IAAI0G,EAAE2wK,SAASr3K,GAAG,EAAE,IAAImM,EAAE,EAAEzF,EAAE6wK,KAAK7wK,EAAEgxK,UAAU,GAAG,EAAEn7K,EAAEmK,EAAEgxK,SAAS,EAAEn7K,EAAE2qC,EAAE3qC,KAAgByD,EAAEmM,EAAE,EAAEA,EAAE,GAApByd,EAAEljB,EAAE6wK,KAAKh7K,IAAe,GAAG,GAAG,GAAItE,IAAI+H,EAAE/H,EAAEgjB,KAAK9O,EAAE,EAAEyd,EAAE,GAAG5pB,EAAE4pB,EAAE0U,IAAI53B,EAAE2wK,SAASr3K,KAAKg6G,EAAE,EAAEpwF,GAAGuzB,IAAI68D,EAAE+nD,EAAEn4I,EAAEuzB,IAAIx9B,EAAExT,EAAE,EAAEyd,GAAGljB,EAAEoxK,SAASn4J,GAAG3f,EAAEg6G,GAAG9sG,IAAIxG,EAAEqxK,YAAYp4J,GAAG1S,EAAE,EAAE2c,EAAE,GAAGowF,KAAK,GAAG,IAAI/+F,EAAE,CAAC,EAAE,CAAC,IAAIjb,EAAE/H,EAAE,EAAE,IAAIyO,EAAE2wK,SAASr3K,IAAIA,IAAI0G,EAAE2wK,SAASr3K,KAAK0G,EAAE2wK,SAASr3K,EAAE,IAAI,EAAE0G,EAAE2wK,SAASp/K,KAAKgjB,GAAG,CAAC,OAAOA,EAAE,GAAG,IAAIjb,EAAE/H,EAAE,IAAI+H,EAAEA,IAAI,IAAI4pB,EAAEljB,EAAE2wK,SAASr3K,GAAG,IAAI4pB,IAAG1xB,EAAEwO,EAAE6wK,OAAOh7K,IAAK+hC,IAAInyB,EAAE,EAAEjU,EAAE,KAAK8H,IAAI0G,EAAEoxK,UAAU93K,EAAEmM,EAAE,EAAEjU,EAAE,IAAIiU,EAAE,EAAEjU,GAAGiU,EAAE,EAAEjU,EAAE,GAAG8H,GAAG4pB,IAAI,CAAC,CAAkzEm4I,CAAEr7J,EAAEC,GAAGw2C,EAAEn9C,EAAEs+B,EAAE53B,EAAE2wK,SAAS,CAAC,SAAStmG,EAAErqE,EAAEC,EAAEpK,GAAG,IAAIqtB,EAAE1xB,EAAE8H,GAAG,EAAEg6G,EAAErzG,EAAE,GAAGgZ,EAAE,EAAExT,EAAE,EAAEmyB,EAAE,EAAE,IAAI,IAAI07E,IAAI7tG,EAAE,IAAImyB,EAAE,GAAG33B,EAAE,GAAGpK,EAAE,GAAG,GAAG,MAAMqtB,EAAE,EAAEA,GAAGrtB,EAAEqtB,IAAI1xB,EAAE8hH,EAAEA,EAAErzG,EAAE,GAAGijB,EAAE,GAAG,KAAKjK,EAAExT,GAAGjU,IAAI8hH,IAAIr6F,EAAE2e,EAAE53B,EAAEswK,QAAQ,EAAE9+K,IAAIynB,EAAE,IAAIznB,GAAGA,IAAI8H,GAAG0G,EAAEswK,QAAQ,EAAE9+K,KAAKwO,EAAEswK,QAAQ,EAAER,MAAM72J,GAAG,GAAGjZ,EAAEswK,QAAQ,EAAEnwC,KAAKngI,EAAEswK,QAAQ,EAAEiC,KAAMt5J,EAAE,EAAE3f,EAAE9H,EAAE,IAAI8hH,GAAG7tG,EAAE,IAAImyB,EAAE,GAAGpmC,IAAI8hH,GAAG7tG,EAAE,EAAEmyB,EAAE,IAAInyB,EAAE,EAAEmyB,EAAE,GAAG,CAAC,SAASt4B,EAAEU,EAAEC,EAAEpK,GAAG,IAAIqtB,EAAE1xB,EAAE8H,GAAG,EAAEg6G,EAAErzG,EAAE,GAAGgZ,EAAE,EAAE1S,EAAE,EAAEC,EAAE,EAAE,IAAI,IAAI8sG,IAAI/sG,EAAE,IAAIC,EAAE,GAAG0c,EAAE,EAAEA,GAAGrtB,EAAEqtB,IAAI,GAAG1xB,EAAE8hH,EAAEA,EAAErzG,EAAE,GAAGijB,EAAE,GAAG,OAAOjK,EAAE1S,GAAG/U,IAAI8hH,GAAG,CAAC,GAAGr6F,EAAEzS,EAAG,GAAGoxB,EAAE53B,EAAExO,EAAEwO,EAAEswK,eAAe,KAAMr3J,QAAQ,IAAIznB,GAAGA,IAAI8H,IAAIs+B,EAAE53B,EAAExO,EAAEwO,EAAEswK,SAASr3J,KAAK2e,EAAE53B,EAAE8vK,EAAE9vK,EAAEswK,SAAS7qK,EAAEzF,EAAEiZ,EAAE,EAAE,IAAIA,GAAG,IAAI2e,EAAE53B,EAAEmgI,EAAEngI,EAAEswK,SAAS7qK,EAAEzF,EAAEiZ,EAAE,EAAE,KAAK2e,EAAE53B,EAAEuyK,EAAGvyK,EAAEswK,SAAS7qK,EAAEzF,EAAEiZ,EAAE,GAAG,IAAIA,EAAE,EAAE3f,EAAE9H,EAAE,IAAI8hH,GAAG/sG,EAAE,IAAIC,EAAE,GAAGhV,IAAI8hH,GAAG/sG,EAAE,EAAEC,EAAE,IAAID,EAAE,EAAEC,EAAE,EAAE,CAAC,CAAysB,SAASk9J,EAAE1jK,EAAEC,EAAEpK,EAAEqtB,GAAGzd,EAAEzF,GAAG1N,GAAG,IAAI4wB,EAAE,EAAE,GAAG,GAAtuF,SAAWljB,EAAEC,EAAEpK,EAAEqtB,GAAGxI,EAAE1a,GAAGkjB,IAAIjK,EAAEjZ,EAAEnK,GAAGojB,EAAEjZ,GAAGnK,IAAIw3K,EAAErC,SAAShrK,EAAE6sK,YAAY7sK,EAAEyL,OAAOxL,EAAEpK,EAAEmK,EAAEoS,SAASpS,EAAEoS,SAASvc,CAAC,CAA+nFiM,CAAE9B,EAAEC,EAAEpK,GAAE,EAAG,CAA+sB,IAAIw3K,EAAErtK,EAAE,mBAAmBstK,EAAE,EAAEV,EAAE,EAAE8B,EAAE,EAAEsD,EAAE,EAAE1/K,EAAE,EAAEy8K,EAAE,EAAEkD,EAAE,EAAYH,EAAE,GAAGK,EAAE,IAAIC,EAAED,EAAE,EAAEL,EAAE/qB,EAAE,GAAGsoB,EAAE,GAAG7uI,EAAE,EAAE4xI,EAAE,EAAEC,EAAE,GAAGN,EAAE,GAAGO,EAAE,EAAEb,EAAE,IAAI3B,EAAE,GAAG3vC,EAAE,GAAGoyhxK,MAAM,GAAG6yK,EAAE,IAAIlvJ,EAAEqtJ,GAAI,IAAIJ,EAAG,IAAI5wK,MAAM,EAAEwnJ,GAAG7jI,EAAEitJ,GAAI,IAAIS,EAAG,IAAIrxK,MAAvE,KAAiF2jB,EAAE0tJ,GAAI,IAAItC,EAAG,IAAI/uK,MAAM2yK,KAAOhvJ,EAAEorJ,GAAI,IAAIP,EAAG,IAAIxuK,MAAMuyK,GAAG5uJ,EAAE6qJ,GAAI,IAAIH,EAAG,IAAIruK,MAAMwnJ,GAAG7jI,EAAE0qJ,GAAI,IAAI8E,EAAGhB,EAAGiB,GAAGC,IAAG,EAAG/8K,EAAE+7K,SAA78C,SAAW5xK,GAAG4yK,KAAh5G,WAAa,IAAI5yK,EAAEC,EAAEpK,EAAEqtB,EAAE5pB,EAAEg6G,EAAE,IAAI/zG,MAAM8yK,EAAE,GAAG,IAAIx8K,EAAE,EAAEqtB,EAAE,EAAEA,EAAE4uJ,EAAE,EAAE5uJ,IAAI,IAAI6qJ,EAAG7qJ,GAAGrtB,EAAEmK,EAAE,EAAEA,EAAE,GAAGwyK,EAAGtvJ,GAAGljB,IAAIsuK,EAAGz4K,KAAKqtB,EAAE,IAAIorJ,EAAGz4K,EAAE,GAAGqtB,EAAE5pB,EAAE,EAAE4pB,EAAE,EAAEA,EAAE,GAAGA,IAAI,IAAI0qJ,EAAG1qJ,GAAG5pB,EAAE0G,EAAE,EAAEA,EAAE,GAAGs1K,EAAGpyJ,GAAGljB,IAAI4wK,EAAGt3K,KAAK4pB,EAAE,IAAI5pB,IAAI,EAAE4pB,EAAE6jI,EAAE7jI,IAAI,IAAI0qJ,EAAG1qJ,GAAG5pB,GAAG,EAAE0G,EAAE,EAAEA,EAAE,GAAGs1K,EAAGpyJ,GAAG,EAAEljB,IAAI4wK,EAAG,IAAIt3K,KAAK4pB,EAAE,IAAIjjB,EAAE,EAAEA,GAAGoyK,EAAEpyK,IAAIqzG,EAAErzG,GAAG,EAAE,IAAID,EAAE,EAAEA,GAAG,KAAKuwK,EAAG,EAAEvwK,EAAE,GAAG,EAAEA,IAAIszG,EAAE,KAAK,KAAKtzG,GAAG,KAAKuwK,EAAG,EAAEvwK,EAAE,GAAG,EAAEA,IAAIszG,EAAE,KAAK,KAAKtzG,GAAG,KAAKuwK,EAAG,EAAEvwK,EAAE,GAAG,EAAEA,IAAIszG,EAAE,KAAK,KAAKtzG,GAAG,KAAKuwK,EAAG,EAAEvwK,EAAE,GAAG,EAAEA,IAAIszG,EAAE,KAAK,IAAI78D,EAAE85H,EAAG6B,EAAE,EAAE9+D,GAAGtzG,EAAE,EAAEA,EAAE+mJ,EAAE/mJ,IAAImwK,EAAG,EAAEnwK,EAAE,GAAG,EAAEmwK,EAAG,EAAEnwK,GAAGuG,EAAEvG,EAAE,GAAG0yK,EAAG,IAAIlhL,EAAE++K,EAAGiC,EAAGL,EAAE,EAAEC,EAAEC,GAAGX,EAAG,IAAIlgL,EAAE2+K,EAAGmF,EAAG,EAAEvuB,EAAEsrB,GAAGM,GAAG,IAAInhL,EAAE,IAAI+N,MAAM,GAAGkzK,EAAG,EAAEpD,EAAEiD,EAAE,CAA+2F/gL,GAAIqhL,IAAG,GAAI5yK,EAAEwwK,OAAO,IAAIl3K,EAAE0G,EAAEkwK,UAAUwC,GAAI1yK,EAAEywK,OAAO,IAAIn3K,EAAE0G,EAAEowK,UAAUsB,GAAI1xK,EAAE0wK,QAAQ,IAAIp3K,EAAE0G,EAAEswK,QAAQqC,IAAI3yK,EAAEsxK,OAAO,EAAEtxK,EAAEuxK,SAAS,EAAEh9J,EAAEvU,EAAE,EAAk0CnK,EAAE49K,iBAAiB/P,EAAE7tK,EAAEm3K,gBAAzvC,SAAWhtK,EAAEC,EAAEpK,EAAEqtB,GAAG,IAAI1xB,EAAE8H,EAAEg6G,EAAE,EAAEtzG,EAAE+hK,MAAM,GAAG/hK,EAAE4oK,KAAK4I,YAAYQ,IAAIhyK,EAAE4oK,KAAK4I,UAApiB,SAAWxxK,GAAG,IAAIC,EAAEpK,EAAE,WAAW,IAAIoK,EAAE,EAAEA,GAAG,GAAGA,IAAIpK,KAAK,EAAE,GAAG,EAAEA,GAAG,IAAImK,EAAEkwK,UAAU,EAAEjwK,GAAG,OAAO2sK,EAAE,GAAG,IAAI5sK,EAAEkwK,UAAU,KAAK,IAAIlwK,EAAEkwK,UAAU,KAAK,IAAIlwK,EAAEkwK,UAAU,IAAI,OAAOxB,EAAE,IAAIzuK,EAAE,GAAGA,EAAEkyK,EAAElyK,IAAI,GAAG,IAAID,EAAEkwK,UAAU,EAAEjwK,GAAG,OAAOyuK,EAAE,OAAO9B,CAAC,CAA0UhJ,CAAE5jK,IAAIwF,EAAExF,EAAEA,EAAEwwK,QAAQhrK,EAAExF,EAAEA,EAAEywK,QAAQn9D,EAA55B,SAAWtzG,GAAG,IAAIC,EAAE,IAAIoqE,EAAErqE,EAAEA,EAAEkwK,UAAUlwK,EAAEwwK,OAAO6F,UAAUhsG,EAAErqE,EAAEA,EAAEowK,UAAUpwK,EAAEywK,OAAO4F,UAAU7wK,EAAExF,EAAEA,EAAE0wK,SAASzwK,EAAEovK,EAAE,EAAEpvK,GAAG,GAAG,IAAID,EAAEswK,QAAQ,EAAEQ,EAAG7wK,GAAG,GAAGA,KAAK,OAAOD,EAAEoxK,SAAS,GAAGnxK,EAAE,GAAG,EAAE,EAAE,EAAEA,CAAC,CAAsuB+tD,CAAEhuD,GAAGxO,EAAEwO,EAAEoxK,QAAQ,EAAE,IAAI,GAAE93K,EAAE0G,EAAEqxK,WAAW,EAAE,IAAI,IAAK7/K,IAAIA,EAAE8H,IAAI9H,EAAE8H,EAAEzD,EAAE,EAAEA,EAAE,GAAGrE,IAAQ,IAALyO,EAAOyjK,EAAE1jK,EAAEC,EAAEpK,EAAEqtB,GAAGljB,EAAEyoK,WAAW6E,GAAGh0K,IAAI9H,GAAGiU,EAAEzF,GAAG+uK,GAAG,IAAI7rJ,EAAE,EAAE,GAAG,GAAGsuD,EAAExxE,EAAEuwK,EAAGJ,KAAM1qK,EAAEzF,GAAGiyK,GAAG,IAAI/uJ,EAAE,EAAE,GAAG,GAAj5B,SAAWljB,EAAEC,EAAEpK,EAAEqtB,GAAG,IAAI1xB,EAAE,IAAIiU,EAAEzF,EAAEC,EAAE,IAAI,GAAGwF,EAAEzF,EAAEnK,EAAE,EAAE,GAAG4P,EAAEzF,EAAEkjB,EAAE,EAAE,GAAG1xB,EAAE,EAAEA,EAAE0xB,EAAE1xB,IAAIiU,EAAEzF,EAAEA,EAAEswK,QAAQ,EAAEQ,EAAGt/K,GAAG,GAAG,GAAG8N,EAAEU,EAAEA,EAAEkwK,UAAUjwK,EAAE,GAAGX,EAAEU,EAAEA,EAAEowK,UAAUv6K,EAAE,EAAE,CAAkwB4tK,CAAEzjK,EAAEA,EAAEwwK,OAAO6F,SAAS,EAAEr2K,EAAEywK,OAAO4F,SAAS,EAAE/iE,EAAE,GAAG9hC,EAAExxE,EAAEA,EAAEkwK,UAAUlwK,EAAEowK,YAAY77J,EAAEvU,GAAGkjB,GAAGxI,EAAE1a,EAAE,EAA04BnK,EAAEg5K,UAA34B,SAAW7uK,EAAEC,EAAEpK,GAAG,OAAOmK,EAAE6sK,YAAY7sK,EAAEmxK,MAAM,EAAEnxK,EAAEkvK,UAAUjvK,IAAI,EAAE,IAAID,EAAE6sK,YAAY7sK,EAAEmxK,MAAM,EAAEnxK,EAAEkvK,SAAS,GAAG,IAAIjvK,EAAED,EAAE6sK,YAAY7sK,EAAEixK,MAAMjxK,EAAEkvK,UAAU,IAAIr5K,EAAEmK,EAAEkvK,WAAW,IAAIjvK,EAAED,EAAEkwK,UAAU,EAAEr6K,MAAMmK,EAAE4kJ,UAAU3kJ,IAAID,EAAEkwK,UAAU,GAAG5B,EAAGz4K,GAAGs8K,EAAE,MAAMnyK,EAAEowK,UAAU,EAAE98D,EAAErzG,OAAOD,EAAEkvK,WAAWlvK,EAAEkxK,YAAY,CAAC,EAAqnBr7K,EAAE29K,UAAp0C,SAAWxzK,GAAGyF,EAAEzF,EAAE+uK,GAAG,EAAE,GAAGn3I,EAAE53B,EAAEyxK,EAAElB,GAAnkJ,SAAWvwK,GAAG,KAAKA,EAAEuxK,UAAUt4J,EAAEjZ,EAAEA,EAAEsxK,QAAQtxK,EAAEsxK,OAAO,EAAEtxK,EAAEuxK,SAAS,GAAGvxK,EAAEuxK,UAAU,IAAIvxK,EAAE6sK,YAAY7sK,EAAEoS,WAAW,IAAIpS,EAAEsxK,OAAOtxK,EAAEsxK,SAAS,EAAEtxK,EAAEuxK,UAAU,EAAE,CAA86I/qK,CAAExG,EAAE,CAAuyC,EAAE,CAAC,kBAAkB,KAAK,GAAG,CAAC,SAASA,EAAEC,EAAEpK,GAAG,aAAsNoK,EAAElO,QAA3M,WAAaQ,KAAK62K,MAAM,KAAK72K,KAAK82K,QAAQ,EAAE92K,KAAK+2K,SAAS,EAAE/2K,KAAKg7K,SAAS,EAAEh7K,KAAKg3K,OAAO,KAAKh3K,KAAKk3K,SAAS,EAAEl3K,KAAKs2K,UAAU,EAAEt2K,KAAKw6K,UAAU,EAAEx6K,KAAKif,IAAI,GAAGjf,KAAKurD,MAAM,KAAKvrD,KAAKi/K,UAAU,EAAEj/K,KAAK66K,MAAM,CAAC,CAAY,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAF31gB,CAEg2gB,eCNvohBt7K,EAAOC,QAAU,MACV4E,UACD,MAAO,YACV,CAEAzE,YAAYC,EAAKwE,GAMNxE,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAV9B,IAcI6hG,EAAM,CACP/+F,KAAMlH,KAAKoE,KAEdpE,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMwgL,QAAQ/9E,EAAKziG,MAAM/C,GAAGsJ,KAAMvG,MAAMygL,cAC3C,cCpCH1kL,EAAOC,QAAU,MACV4E,UACD,MAAO,aACV,CAEAzE,YAAYC,EAAKwE,GAMNxE,EAAIK,MASZD,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAM/C,GAAGyjL,WAAWC,YAAc3gL,MAAMC,OACrC,CACGgB,QAAS,SAAUs2G,EAAWz4G,EAAMuf,GACjC,IAAIlU,EAAS,GAECotG,EAAU/tF,KAAK,CAAC,IAAM,IAC5BhpB,SAASob,IACd,GAAW,MAAPA,EAAJ,CAEA,IAAIzV,EACDyV,EAAIyC,EAAK7W,WAAaoU,EAAIyC,EAAK7W,SAAW,cAGzCrB,GAAQqD,MAAMC,QAAQtD,GACvBgE,GAAUhE,EAAKzD,OAEP,MAARyD,GACQ,IAARA,GACQ,GAARA,GACQ,SAARA,GACQ,KAARA,IAEAgE,GAAU,EAfU,CAgBvB,IAGHrL,EAAKqsC,UAAYhhC,CACpB,GAEHnK,MAAM/C,GAAGyjL,WAAWE,WAE1B,oBC1DH,IAAIvsH,EAAgB,CACjB,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,QAIXt4D,EAAOC,QAAU,MACdG,cAAe,CAEf2xE,eAAe1xE,GACZA,EAAI8vE,OAAS9vE,EAAI8vE,QAAU,CAAC,EAE5B7X,EAAc7zD,SAASs6I,IACpB,IAAIn+I,EAAY,IAAIm+I,EAAU1+I,GAC9BA,EAAI8vE,OAAOvvE,EAAUiE,KAAOjE,CAAS,IAIxCP,EAAIkC,GAAG4tE,OAAS9vE,EAAI8vE,MACvB,cC9BHnwE,EAAOC,QAAU,MAGV4E,UACD,MAAO,gBACV,CAEAzE,YAAYC,GAMDA,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAKrBxE,EAAIQ,OAAO,yBAEpBJ,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMmsF,QAAQm8B,OAAOu4D,SAAW,CAC7B3jL,KAAM,QACNK,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHd,KAAM,WACN4c,OAAO,EACP5b,YAAY,EACZyhE,YAAY,IAIlB3/D,MAAMmsF,QAAQ00F,SAAW7gL,MAAMC,OAC5B,CACG6gL,UAAW,YAEd9gL,MAAMmsF,QAAQhvE,KAEpB,cCxDHphB,EAAOC,QAAU,MAGV4E,UACD,MAAO,UACV,CAEAzE,YAAYC,GAMDA,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAV9B,IAcI6hG,EAAM,CACP/+F,KAAMlH,KAAKoE,KAEdpE,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMwgL,QAAQ/9E,EAAKziG,MAAM+gL,YAAa/gL,MAAM/C,GAAGsJ,KAClD,cCtCHxK,EAAOC,QAAU,MAGV4E,UACD,MAAO,UACV,CAEAzE,YAAYC,GAMDA,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAV9B,IAcI6hG,EAAM,CACP/+F,KAAMlH,KAAKoE,KAEdpE,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMwgL,QAAQ/9E,EAAKziG,MAAM+gL,YAAa/gL,MAAM/C,GAAGg0F,KAClD,cCtCHl1F,EAAOC,QAAU,MAGV4E,UACD,MAAO,cACV,CAEAzE,YAAYC,GAoBT,IAAIqmG,EAAM,CACP/+F,KAAMlH,KAAKoE,KAEdpE,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMwgL,QAAQ/9E,EAAKziG,MAAM+gL,YAAa/gL,MAAM/C,GAAG+jL,SAClD,cCtCHjlL,EAAOC,QAAU,MACV4E,UACD,MAAO,mBACV,CAEAzE,YAAYC,GAMDA,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAV9B,IAcI6hG,EAAM,CACP/+F,KAAMlH,KAAKoE,IACX+a,MAAO,WACJ,OAAO,CACV,GAEHnf,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMwgL,QAAQ/9E,EAAKziG,MAAM/C,GAAGkmE,SAAUnjE,MAAMm/I,UAC/C,oBCxCH,IAAItjH,EAAY,EAAQ,OACxB9/B,EAAOC,QAAU,cAAoC6/B,EAC9Cj7B,UACD,MAAO,eACV,CAEAzE,YAAYC,GACTE,QAQQF,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAX9B,IAeI6hG,EAAM,CACP/+F,KAAMlH,KAAKoE,IACXD,SAAU,CACPlD,IAAK,UACLS,YAAY,GAEf+iL,MAAO,SAAUziL,GACd,IAAI0iL,EAAiB1iL,EAAO0iL,eACvB1iL,EAAO0iL,eACP,CAAC,EACFlnD,EAAWx7H,EAAOw7H,SAAWx7H,EAAOw7H,SAAW,CAAC,EAEpD,IAAK,IAAI7zH,KAAQ6zH,EACd,GACGxwH,MAAMC,QAAQuwH,EAAS7zH,KACK,iBAArB6zH,EAAS7zH,GAAM,GACvB,CACC,IAAIg7K,EAAO,GACXnnD,EAAS7zH,GAAM3F,SAASgK,IACjBA,EAAKnP,IAAI8lL,EAAKtgL,KAAK2J,EAAKnP,GAAG,IAElC2+H,EAAS7zH,GAAQg7K,CACpB,CAGHC,OAAOC,WAAW7kL,KAAKuN,MAAOm3K,EAAgB,CAM9C,GAAGvwK,MAAK,SAAUnK,GAIfA,EAAK86K,WAAa,CACfn7K,KAAM6zH,IAERknD,EAAe5zH,YAAc,IAAI9sD,SAASktD,IAExB,UAAbA,EAAKvvD,MACU,SAAfuvD,EAAKC,QACLD,EAAK1gC,OAELxmB,EAAK+rE,KAAK7kB,EAAK1gC,OAAO,SAAUlvB,GAC7BU,EAAO+iL,UAAW/iL,EAAO+iL,SAAS7zH,EAAK1gC,MAE1C,GACH,GAqBN,GACH,GAEHxwB,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMwgL,QAAQ/9E,EAAKziG,MAAM/C,GAAGC,KAC/B,cC5GHnB,EAAOC,QAAU,MACV4E,UACD,MAAO,YACV,CAEAzE,YAAYC,GAMDA,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAV9B,IAcI6hG,EAAM,CACP/+F,KAAMlH,KAAKoE,IAEXD,SAAU,CACPlD,IAAK,iBAIR+jL,UAAW,WACR,IAAIrvK,EAAM3V,KAAKgsG,eAAetpG,MAC9B,OAAIiT,EAAYjC,KAAKuD,MAAMtB,GAEf,EACf,GAEH3V,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMwgL,QAAQ/9E,EAAKziG,MAAM/C,GAAGwN,KAC/B,cChDH1O,EAAOC,QAAU,MACV4E,UACD,MAAO,cACV,CAEAzE,YAAYC,GAITI,KAAKU,KAAOV,KAAKoE,IAEjB,MAAMw5E,EAAOp6E,MAAMo6E,KAGbqoB,EAAM,CACT/+F,KAAMlH,KAAKoE,IACXD,SAAU,CACP8gL,eAAgB,SAAUt0J,GACvB,MAAO,GAAGitD,EAAKzS,SAAS+5G,UAAUv0J,EAAE0pB,eACjC1pB,EAAEwpB,cAAgB,KAExB,IAIF32C,MAAM/C,GAAG0qE,SAASg6G,WAAW,GAAGC,cACjCn/E,EAAIm/E,YAActjL,GAAG2D,UAClBjC,MAAM/C,GAAG0qE,SAASg6G,WAAW,GAAGC,aAEnCn/E,EAAIm/E,YAAY,GAAK/lL,OAAOoyB,OAAOw0E,EAAIm/E,YAAY,GAAI,CACpDC,UAAWrlL,KAAKslL,gBAEnBr/E,EAAIm/E,YAAY,GAAK/lL,OAAOoyB,OAAOw0E,EAAIm/E,YAAY,GAAI,CACpDC,UAAWrlL,KAAKulL,mBAChBC,YAAaxlL,KAAKylL,gBAClBC,YAAa1lL,KAAK2lL,YAIpBniL,MAAM/C,GAAG0qE,SAASg6G,WAAW,GAAGS,KACjC3/E,EAAI2/E,GAAK9jL,GAAG2D,UAAUjC,MAAM/C,GAAG0qE,SAASg6G,WAAW,GAAGS,IACtD3/E,EAAI2/E,GAAG,GAAKvmL,OAAOoyB,OAAOw0E,EAAI2/E,GAAG,GAAI,CAClCC,GAAI7lL,KAAKslL,gBAEZr/E,EAAI2/E,GAAG,GAAKvmL,OAAOoyB,OAAOw0E,EAAI2/E,GAAG,GAAI,CAClCC,GAAI7lL,KAAKulL,mBACTO,GAAI9lL,KAAKylL,gBACTM,GAAI/lL,KAAK2lL,YAKfniL,MAAMwgL,QAAQ/9E,EAAKziG,MAAM/C,GAAG0qE,UAE5B3nE,MAAMmsF,QAAQm8B,OAAOk6D,SAAW,CAC7BtlL,KAAM,QACNK,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHd,KAAMV,KAAKoE,IACXkZ,OAAO,EACP5b,YAAY,EACZyhE,YAAY,IAIlB3/D,MAAMmsF,QAAQm8B,OAAOm6D,aAAe,CACjCvlL,KAAM,QACNK,MAAO,IACPD,OAAQ,IACRyB,QAAS,EACTf,KAAM,CACHd,KAAMV,KAAKoE,IACXkZ,OAAO,EACP5b,YAAY,EACZyhE,YAAY,IAIlB3/D,MAAMmsF,QAAQq2F,SAAWxiL,MAAMC,OAC5B,CACG6gL,UAAW,YAEd9gL,MAAMmsF,QAAQhvE,MAGjBnd,MAAMmsF,QAAQs2F,aAAeziL,MAAMC,OAChC,CACG6gL,UAAW,gBAEd9gL,MAAMmsF,QAAQhvE,KAEpB,CAEA2kK,cAAc3kK,GACX,OAAOA,EAAKw5B,cAAgB,GAC/B,CAEAorI,mBAAmB5kK,EAAMwqD,GACtB,IAAIt4C,EAAQlS,EAAKw5B,cAAgB,IAEjC,OADAgxB,EAAS+6G,iBAAmBrzJ,EAAQA,EAASA,EAAQ,GAAM,EACpDA,EAAQ,OAASA,EAAQ,GAAK,EACxC,CAEA4yJ,gBAAgBvyK,EAAGi4D,GAChB,OAAOA,EAAS+6G,iBAAmBhzK,CACtC,CAEAyyK,SAASv6J,EAAMlY,EAAGi4D,GACf//C,EAAKy1G,YAAY11D,EAAS+6G,iBAAmB,IAAMhzK,EACtD,cC/GH3T,EAAOC,QAAU,MAGV4E,UACD,MAAO,YACV,CAEAzE,YAAYC,GAMDA,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAKrBxE,EAAIQ,OAAO,qBAEpBJ,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMmsF,QAAQm8B,OAAOi1D,KAAO,CACzBrgL,KAAM,QACNc,KAAM,CACHd,KAAM,WACNK,MAAO,IACPD,OAAQ,IACRa,KAAM,SAIZ6B,MAAMmsF,QAAQoxF,KAAOv9K,MAAMC,OACxB,CACG6gL,UAAW,QAEd9gL,MAAMmsF,QAAQhvE,KAEpB,cCrDHphB,EAAOC,QAAU,MACV4E,UACD,MAAO,aACV,CAEAzE,YAAYC,EAAKwE,GAMNxE,EAAIK,MASZD,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAM/C,GAAGyjL,WAAW95G,YAAc5mE,MAAMC,OACrC,CACGgB,QAAS,SAAUs2G,EAAWz4G,EAAMuf,GACjC,IAAIlU,EAAS,EAEbotG,EAAUorE,SAAQ,SAAU/mK,GACzB,IAAIwO,EAASmtF,EAAUruF,QAAQtN,GAE3BzV,EAAOkY,EAAKlc,MAAM6a,OAAOoN,GAGzBjkB,IACDgE,GAAUutC,WAAWvxC,GAE3B,IAEArH,EAAKqsC,UAAYhhC,CACpB,GAEHnK,MAAM/C,GAAGyjL,WAAWE,WAE1B,cChDH7kL,EAAOC,QAAU,MAGV4E,UACD,MAAO,aACV,CAEAzE,YAAYC,GAMDA,EAAIK,MAGDL,EAAIuS,OAODvS,EAAIQ,OAAOJ,KAAKoE,KAV9B,IAcI6hG,EAAM,CACP/+F,KAAMlH,KAAKoE,IACXD,SAAU,CACPxC,KAAM,OACNZ,MAAO,EACPS,KAAM,CACHE,YAAY,EACZkgG,QAAQ,EACRj7B,SAAU,SAASnvD,EAAKw2B,GACrB,MACG,UACCx2B,EAAI4uK,OAAS,MAAQ5uK,EAAI9U,MAAQ,OAAS8U,EAAI9U,OAC/C,SAEN,EACAmiF,MAAO,WACJ7kF,KAAKq0F,SACR,EACAlyF,GAAI,CACDy6G,cAAe,SAAS/9G,EAAII,GACrBe,KAAK0sB,QAAQ7tB,GAAIunL,SAClBpmL,KAAKsL,gBAAgBk1H,eAAe,IACpCxgI,KAAK2E,KACFjB,GAAG1D,KAAKsL,gBAAgBtJ,OAAOqkL,QAAQr6E,gBAGhD,MAKZhsG,KAAKU,KAAOV,KAAKoE,IAIjBpE,KAAKuB,OADQ,CAAC,EAIdiC,MAAMwgL,QAAQ/9E,EAAKziG,MAAM/C,GAAGmgF,QAC/B","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (this.getCursor()?.id != (values[obj.PK()] ?? values.id))\n            return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } \n               else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (!this.settings?.loadAll && currentCursor?.id != linkDC.previousCursorId)\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (followCursor?.[followDC.datasource.PK()] == currentCursor?.[this.datasource.PK()])\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let selectedVal = theEditor.getValue();\n\n         // Check exists item\n         const isExists = data.some((d) => d.id == selectedVal);\n\n         // Select option item from custom index value\n         if (\n            !isExists &&\n            field.isConnection &&\n            (field.indexField || field.indexField2)\n         ) {\n            const selectedItem = data.filter(\n               (d) =>\n                  d[field.indexField?.columnName ?? \"\"] == selectedVal ||\n                  d[field.indexField2?.columnName ?? \"\"] == selectedVal\n            )[0];\n\n            if (selectedItem) selectedVal = selectedItem.id;\n         }\n\n         theEditor.setValue(selectedVal);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor =\n         this.AB.Account?._config?.languageCode == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img src=\"${\n               row.src\n            }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth)\n         parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      return await Promise.all(tasks);\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      await this.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const PDFJS = require(\"pdfjs-dist\");\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n                  $uploader.destructor();\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await PDFJS.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      }\n      else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ABComponent","ABFieldManager","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","jobID","performance","op","normalizeData","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","followDC","followCursor","eventRemove","start","limit","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","unshift","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","isNaN","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","opt","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","linkedField","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","selectedVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","loadDcDataOfRecordRules","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","PDFJS","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","getElementById","showPage","fileBlob","_toBlob","$uploader","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","eachRow","$count","master"],"sourceRoot":""}