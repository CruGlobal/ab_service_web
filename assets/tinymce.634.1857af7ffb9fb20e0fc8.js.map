{"version":3,"file":"tinymce.634.1857af7ffb9fb20e0fc8.js","mappings":"2qBAQAA,MAAMC,QACH,CACGC,KAAM,iBACNC,SAAU,CACPC,OAAQ,CAAEC,MAAO,SAAUC,WAAW,GACtCC,MAAO,IAEVC,MAAO,WACJR,MAAMS,KAAKC,SAAS,wCAEpBC,KAAKC,QAAU,cAAgBD,KAAKP,OAAOS,IAAMb,MAAMc,OACvDH,KAAKI,MAAMC,UACR,iBACAL,KAAKC,QACL,gDAEHD,KAAKM,YAAcjB,MAAMkB,QAAQC,QAEjCR,KAAKS,OAAOC,KAAKV,KAAKW,sBACzB,EACAC,OAAQ,WACLZ,KAAKa,iBACR,EACAF,sBAAuB,WACpB,IAAIG,EAAId,KAAKP,OAEb,IAAc,IAAVqB,EAAEC,KAAiBC,OAAOC,QAC3BjB,KAAKkB,yBADR,CAKA,IAAIC,EAASL,EAAEK,OAASL,EAAEK,OAAS,aAC/BJ,EACDD,EAAEC,KACF,4BAA8BI,EAAS,qBAG1CH,OAAOI,eAAiB,CACrBC,MAAO,GACPC,KAAMP,EACNQ,OAAQ,QAGXlC,MACImC,QAAQ,CAACT,EAAM,oBACfU,KAAKpC,MAAMqC,KAAK1B,KAAKkB,mBAAoBlB,OACzC2B,OAAM,SAAUC,GACdC,QAAQC,IAAIF,EACf,GAnBH,CAoBH,EACAV,mBAAoB,WACZ,QAAYa,MAAMC,YAEpB,QAAYD,MAAMC,WAAY,GAGjC,IAAIC,EAAgB5C,MAAM6C,KAAKlC,KAAKP,OAAOA,QAAU,CAAC,GACtDJ,MAAM8C,OACHF,EACA,CACGG,SAAU,IAAMpC,KAAKC,QACrBoC,QAAQ,IAEX,GAGH,IAAIC,EAAeL,EAAcM,MACjCN,EAAcM,MAAQlD,MAAMqC,MAAK,SAAUc,GACpCF,GAAcA,EAAaE,GAC/BA,EAAOC,GAAG,OAAQpD,MAAMqC,KAAK1B,KAAK0C,kBAAmB1C,OAAO,EAC/D,GAAGA,MAEHX,MAAMsD,OAAM,WACT,SAAaV,EAChB,GAAGjC,KACN,EACA0C,kBAAmB,SAAUE,GAC1B5C,KAAK6C,QAAUD,EAAME,OAErB9C,KAAK+C,SAAS/C,KAAKP,OAAOG,OAC1BI,KAAKa,kBACLb,KAAKM,YAAY0C,QAAQhD,KAAK6C,QACjC,EACAhC,gBAAiB,WACVb,KAAK6C,UACN7C,KAAKI,MAAM6C,cAAc,gBAAgBC,MAAMC,OAC5CnD,KAAKoD,QAAU,KAExB,EACAC,SAAU,SAAUC,EAAGC,GAChBlE,MAAMmE,GAAGC,KAAKC,UAAUL,SAASM,KAAK3D,KAAMsD,EAAGC,IAChDvD,KAAKa,iBAEX,EACAkC,SAAU,SAAUnD,GACjBI,KAAKP,OAAOG,MAAQA,EACpBI,KAAKM,YAAYmB,MAAK,SAAUe,GAC7BA,EAAOoB,WAAWhE,EACrB,GACH,EACAiE,SAAU,WACP,OAAO7D,KAAK6C,QAAU7C,KAAK6C,QAAQiB,aAAe9D,KAAKP,OAAOG,KACjE,EACAmE,MAAO,WACJ/D,KAAKM,YAAYmB,MAAK,SAAUe,GAC7BA,EAAOuB,OACV,GACH,EACAC,UAAW,SAAUC,GAClB,OAAOA,EAAOjE,KAAKM,YAAcN,KAAK6C,OACzC,GAEHxD,MAAMmE,GAAGC,K","sources":["webpack://ab_platform_web/./js/webix/extras/tinymce.js"],"sourcesContent":["import tinymce from \"tinymce\";\nimport \"tinymce/icons/default\";\nimport \"tinymce/themes/silver\";\nimport \"tinymce/plugins/link\";\nimport \"tinymce/skins/ui/oxide/skin.min.css\";\nimport \"tinymce/skins/ui/oxide/content.css\"; // content.min.css ?\nimport \"tinymce/skins/content/default/content.min.css\";\n\nwebix.protoUI(\n   {\n      name: \"tinymce-editor\",\n      defaults: {\n         config: { theme: \"silver\", statusbar: false },\n         value: \"\",\n      },\n      $init: function () {\n         webix.html.addStyle(\".tox-tinymce{ border:0px !important}\");\n\n         this._mce_id = \"webix_mce_\" + (this.config.id || webix.uid());\n         this.$view.innerHTML =\n            \"<textarea id='\" +\n            this._mce_id +\n            \"' style='width:100%; height:100%'></textarea>\";\n\n         this._waitEditor = webix.promise.defer();\n\n         this.$ready.push(this._require_tinymce_once);\n      },\n      render: function () {\n         this._set_inner_size();\n      },\n      _require_tinymce_once: function () {\n         var c = this.config;\n\n         if (c.cdn === false || window.tinymce) {\n            this._init_tinymce_once();\n            return;\n         }\n\n         var apiKey = c.apiKey ? c.apiKey : \"no-api-key\";\n         var cdn =\n            c.cdn ||\n            \"https://cdn.tiny.cloud/1/\" + apiKey + \"/tinymce/5.0.14-54\";\n\n         //path to tinymce codebase\n         window.tinyMCEPreInit = {\n            query: \"\",\n            base: cdn,\n            suffix: \".min\",\n         };\n\n         webix\n            .require([cdn + \"/tinymce.min.js\"])\n            .then(webix.bind(this._init_tinymce_once, this))\n            .catch(function (e) {\n               console.log(e);\n            });\n      },\n      _init_tinymce_once: function () {\n         if (!tinymce.dom.Event.domLoaded) {\n            // woraround event logic in tinymce\n            tinymce.dom.Event.domLoaded = true;\n         }\n\n         var editor_config = webix.copy(this.config.config || {});\n         webix.extend(\n            editor_config,\n            {\n               selector: \"#\" + this._mce_id,\n               resize: false,\n            },\n            true\n         );\n\n         var custom_setup = editor_config.setup;\n         editor_config.setup = webix.bind(function (editor) {\n            if (custom_setup) custom_setup(editor);\n            editor.on(\"init\", webix.bind(this._mce_editor_ready, this), true);\n         }, this);\n\n         webix.delay(function () {\n            tinymce.init(editor_config);\n         }, this);\n      },\n      _mce_editor_ready: function (event) {\n         this._editor = event.target;\n\n         this.setValue(this.config.value);\n         this._set_inner_size();\n         this._waitEditor.resolve(this._editor);\n      },\n      _set_inner_size: function () {\n         if (this._editor) {\n            this.$view.querySelector(\".tox-tinymce\").style.height =\n               this.$height + \"px\";\n         }\n      },\n      $setSize: function (x, y) {\n         if (webix.ui.view.prototype.$setSize.call(this, x, y)) {\n            this._set_inner_size();\n         }\n      },\n      setValue: function (value) {\n         this.config.value = value;\n         this._waitEditor.then(function (editor) {\n            editor.setContent(value);\n         });\n      },\n      getValue: function () {\n         return this._editor ? this._editor.getContent() : this.config.value;\n      },\n      focus: function () {\n         this._waitEditor.then(function (editor) {\n            editor.focus();\n         });\n      },\n      getEditor: function (wait) {\n         return wait ? this._waitEditor : this._editor;\n      },\n   },\n   webix.ui.view\n);\n"],"names":["webix","protoUI","name","defaults","config","theme","statusbar","value","$init","html","addStyle","this","_mce_id","id","uid","$view","innerHTML","_waitEditor","promise","defer","$ready","push","_require_tinymce_once","render","_set_inner_size","c","cdn","window","tinymce","_init_tinymce_once","apiKey","tinyMCEPreInit","query","base","suffix","require","then","bind","catch","e","console","log","Event","domLoaded","editor_config","copy","extend","selector","resize","custom_setup","setup","editor","on","_mce_editor_ready","delay","event","_editor","target","setValue","resolve","querySelector","style","height","$height","$setSize","x","y","ui","view","prototype","call","setContent","getValue","getContent","focus","getEditor","wait"],"sourceRoot":""}